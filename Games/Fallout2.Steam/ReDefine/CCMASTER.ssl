variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;

procedure checkPartyMembersNearDoor;

variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable sign_obj;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure combat;
procedure Node950;
procedure Node951;
procedure Node990;
procedure Node992;
procedure Node993;
procedure Node995;
procedure Node996;
procedure Node997;
procedure Node998;
procedure Node999;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;

variable Only_Once;
variable stuff;
variable k;
variable weapon;
variable item;
variable v;

procedure Node980;
procedure Node981;
procedure Node982;
procedure Node983;
procedure Node994;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(1) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(1)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if ((local_var(5) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack(dude_obj);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure talk_p_proc
begin
    if (local_var(6) == 1) then begin
        call Node998();
    end
    else begin
        if (dude_iq < 4) then begin
            start_gdialog(723, self_obj, 4, -1, -1);
            gsay_start;
            call Node030();
            gsay_end;
            end_dialogue;
        end
        else begin
            if (map_var(2) == 4) then begin
                start_gdialog(723, self_obj, 4, -1, -1);
                gsay_start;
                call Node001();
                gsay_end;
                end_dialogue;
            end
            else begin
                if (map_var(2) == 3) then begin
                    start_gdialog(723, self_obj, 4, -1, -1);
                    gsay_start;
                    call Node002();
                    gsay_end;
                    end_dialogue;
                end
                else begin
                    if (map_var(2) == 2) then begin
                        start_gdialog(723, self_obj, 4, -1, -1);
                        gsay_start;
                        call Node002();
                        gsay_end;
                        end_dialogue;
                    end
                    else begin
                        if (local_var(8) == 1) then begin
                            call Node001();
                        end
                        else begin
                            start_gdialog(723, self_obj, 4, -1, -1);
                            gsay_start;
                            call Node005();
                            gsay_end;
                            end_dialogue;
                        end
                    end
                end
            end
        end
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (critter_kill_type(self_obj) == KILL_TYPE_children_kills) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - -15);
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(101);
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(6, 1);
        set_map_var(2, 4);
    end
end

procedure map_enter_p_proc
begin
    Only_Once := 0;
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 153);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_GENERIC_GUARDS);
    if (map_first_run) then begin
        weapon := create_object(242, 0, 0);
        add_obj_to_inven(self_obj, weapon);
        if (random(1, 100) < 11) then begin
            item := create_object(40, 0, 0);
            add_obj_to_inven(self_obj, item);
        end
        wield_obj_critter(self_obj, weapon);
    end
end

procedure combat
begin
end

procedure Node950
begin
    v := 1;
    call Node008();
end

procedure Node951
begin
end

procedure Node990
begin
end

procedure Node992
begin
    if (dude_charisma > 6) then begin
        call Node013();
    end
    else begin
        call Node015();
    end
end

procedure Node993
begin
    if (dude_charisma > 6) then begin
        call Node019();
    end
    else begin
        call Node015();
    end
end

procedure Node995
begin
    if (dude_charisma >= 7) then begin
        set_local_var(3, 100);
        set_local_var(1, 4);
    end
    else begin
        set_local_var(1, -4);
        set_local_var(3, -100);
    end
end

procedure Node996
begin
    set_local_var(1, -4);
    set_local_var(3, -100);
end

procedure Node997
begin
    if (dude_charisma >= 8) then begin
        call Node004();
    end
    else begin
        call Node005();
    end
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
end

procedure Node001
begin
    float_msg(self_obj, mstr(103), FLOAT_MSG_RED);
end

procedure Node002
begin
    set_map_var(2, 4);
    float_msg(self_obj, mstr(104), FLOAT_MSG_RED);
end

procedure Node003
begin
    v := 0;
    Reply(105);
    giq_option(4, NAME, 106, Node008, NEUTRAL_REACTION);
    giq_option(4, NAME, 107, Node007, NEUTRAL_REACTION);
    giq_option(4, NAME, 108, Node009, NEUTRAL_REACTION);
    giq_option(4, NAME, 109, Node999, NEUTRAL_REACTION);
end

procedure Node004
begin
    if (local_var(9) == 0) then begin
        set_local_var(9, 1);
        Reply(110);
    end
    else begin
        Reply(111);
    end
    giq_option(4, NAME, 112, Node018, NEUTRAL_REACTION);
    giq_option(4, NAME, 113, Node019, NEUTRAL_REACTION);
    giq_option(4, NAME, 114, Node020, NEUTRAL_REACTION);
end

procedure Node005
begin
    Reply(115);
    giq_option(4, NAME, 116, Node026, NEUTRAL_REACTION);
    giq_option(4, NAME, 117, Node027, NEUTRAL_REACTION);
    giq_option(4, NAME, 118, Node028, NEUTRAL_REACTION);
end

procedure Node006
begin
    set_map_var(2, 4);
    float_msg(self_obj, mstr(104), FLOAT_MSG_RED);
    call Node998();
end

procedure Node007
begin
    Reply(123);
    giq_option(4, NAME, 124, Node008, NEUTRAL_REACTION);
    giq_option(4, NAME, 125, Node009, NEUTRAL_REACTION);
    giq_option(4, NAME, 126, Node010, NEUTRAL_REACTION);
    giq_option(4, NAME, 127, Node999, NEUTRAL_REACTION);
end

procedure Node008
begin
    if (v == 0) then begin
        Reply(128);
        giq_option(4, NAME, 130, Node950, NEUTRAL_REACTION);
        giq_option(4, NAME, 131, Node010, NEUTRAL_REACTION);
        giq_option(4, NAME, 132, Node999, NEUTRAL_REACTION);
    end
    else begin
        gsay_message(NAME, 129, NEUTRAL_REACTION);
    end
end

procedure Node009
begin
    Reply(133);
    giq_option(4, NAME, 134, Node008, NEUTRAL_REACTION);
    giq_option(4, NAME, 135, Node010, NEUTRAL_REACTION);
    giq_option(4, NAME, 136, Node999, NEUTRAL_REACTION);
end

procedure Node010
begin
    Reply(137);
    giq_option(4, NAME, 138, Node011, NEUTRAL_REACTION);
    giq_option(4, NAME, 139, Node012, NEUTRAL_REACTION);
    giq_option(4, NAME, 140, Node013, NEUTRAL_REACTION);
    giq_option(4, NAME, 141, Node012, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(142);
    giq_option(4, NAME, 143, Node014, NEUTRAL_REACTION);
    giq_option(4, NAME, 144, Node015, NEUTRAL_REACTION);
    giq_option(4, NAME, 145, Node015, NEUTRAL_REACTION);
    giq_option(4, NAME, 146, Node017, NEUTRAL_REACTION);
end

procedure Node012
begin
    Reply(147);
    giq_option(4, NAME, 148, Node025, NEUTRAL_REACTION);
    giq_option(4, NAME, 149, Node025, NEUTRAL_REACTION);
    giq_option(4, NAME, 150, Node011, NEUTRAL_REACTION);
end

procedure Node013
begin
    Reply(151);
    giq_option(4, NAME, 152, Node011, NEUTRAL_REACTION);
    giq_option(4, NAME, 153, Node012, NEUTRAL_REACTION);
    giq_option(4, NAME, 154, Node012, NEUTRAL_REACTION);
end

procedure Node014
begin
    set_map_var(2, 4);
    float_msg(self_obj, mstr(155), FLOAT_MSG_RED);
    call Node998();
end

procedure Node015
begin
    Reply(156);
    giq_option(4, NAME, 157, Node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 158, Node017, NEUTRAL_REACTION);
end

procedure Node016
begin
    gsay_message(NAME, 159, NEUTRAL_REACTION);
end

procedure Node017
begin
    gsay_message(NAME, 160, NEUTRAL_REACTION);
end

procedure Node018
begin
    Reply(161);
    giq_option(4, NAME, 162, Node019, NEUTRAL_REACTION);
    giq_option(4, NAME, 163, Node021, NEUTRAL_REACTION);
    giq_option(4, NAME, 164, Node020, NEUTRAL_REACTION);
end

procedure Node019
begin
    Reply(165);
    giq_option(4, NAME, 166, Node007, NEUTRAL_REACTION);
    giq_option(4, NAME, 167, Node018, NEUTRAL_REACTION);
    giq_option(4, NAME, 168, Node951, NEUTRAL_REACTION);
    giq_option(4, NAME, 169, Node998, NEUTRAL_REACTION);
end

procedure Node020
begin
    gsay_message(NAME, 170, NEUTRAL_REACTION);
end

procedure Node021
begin
    Reply(171);
    giq_option(4, NAME, 172, Node951, NEUTRAL_REACTION);
    giq_option(4, NAME, 173, Node024, NEUTRAL_REACTION);
    giq_option(4, NAME, 174, Node998, NEUTRAL_REACTION);
end

procedure Node022
begin
    gsay_message(NAME, 175, NEUTRAL_REACTION);
end

procedure Node023
begin
    gsay_message(NAME, 176, NEUTRAL_REACTION);
end

procedure Node024
begin
    Reply(177);
    giq_option(4, NAME, 178, Node951, NEUTRAL_REACTION);
    giq_option(4, NAME, 179, Node999, NEUTRAL_REACTION);
end

procedure Node025
begin
    Reply(180);
    giq_option(4, NAME, 181, Node014, NEUTRAL_REACTION);
    giq_option(4, NAME, 182, Node015, NEUTRAL_REACTION);
    giq_option(4, NAME, 183, Node015, NEUTRAL_REACTION);
    giq_option(4, NAME, 184, Node017, NEUTRAL_REACTION);
end

procedure Node026
begin
    Reply(185);
    giq_option(4, NAME, 186, Node027, NEUTRAL_REACTION);
    giq_option(4, NAME, 187, Node028, NEUTRAL_REACTION);
end

procedure Node027
begin
    set_map_var(3, 1);
    Reply(188);
    giq_option(4, NAME, 189, Node008, NEUTRAL_REACTION);
    giq_option(4, NAME, 190, Node011, NEUTRAL_REACTION);
    giq_option(4, NAME, 191, Node998, NEUTRAL_REACTION);
end

procedure Node028
begin
    set_map_var(2, 4);
    float_msg(self_obj, mstr(192), FLOAT_MSG_RED);
    call Node998();
end

procedure Node029
begin
    float_msg(self_obj, mstr(193), FLOAT_MSG_RED);
end

procedure Node030
begin
    Reply(194);
    giq_option(-3, NAME, 195, Node028, NEUTRAL_REACTION);
end

procedure Node980
begin
    if ((dude_skill(SKILL_SPEECH) >= 65) or is_skill_tagged(SKILL_SPEECH)) then begin
        call Node019();
    end
    else begin
        call Node018();
    end
end

procedure Node981
begin
    if (dude_charisma > 4) then begin
        call Node019();
    end
    else begin
        call Node018();
    end
end

procedure Node982
begin
end

procedure Node983
begin
end

procedure Node994
begin
    if (dude_skill(SKILL_SPEECH) >= 65) then begin
        call Node017();
    end
    else begin
        call Node018();
    end
end
