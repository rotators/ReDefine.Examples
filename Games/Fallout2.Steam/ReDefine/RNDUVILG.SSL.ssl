variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

export variable i_last_me;
export variable i_spammer_obj;

procedure start;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure map_exit_p_proc;

variable onlyOnce;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
    if (not(onlyOnce)) then begin
        onlyOnce := 1;
        i_last_me := 0;
        i_spammer_obj := -1;
    end
end

procedure map_enter_p_proc
begin
    if ((get_month >= 3) and (get_month < 5)) then begin
        if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
            set_light_level(game_time_hour - 600 + 40);
        end
        else begin
            if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                set_light_level(100);
            end
            else begin
                if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                    set_light_level(100 - (game_time_hour - 1800));
                end
                else begin
                    set_light_level(40);
                end
            end
        end
    end
    else begin
        if ((get_month >= 5) and (get_month < 9)) then begin
            if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                set_light_level(game_time_hour - 500 + 40);
            end
            else begin
                if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1900));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 9) and (get_month < 11)) then begin
                if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                    set_light_level(game_time_hour - 600 + 40);
                end
                else begin
                    if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1800));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                    set_light_level(game_time_hour - 700 + 40);
                end
                else begin
                    if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1700));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
        end
    end
    set_global_var(GVAR_SPECIAL_ENCOUNTER_UNWASHED, 1);
    if ((map_var(0) == 0) and (global_var(GVAR_PLAYER_GOT_CAR) != 0) and (car_current_town == 35)) then begin
        set_map_var(0, 1);
        if (not(is_loading_game) and ((global_var(GVAR_PLAYER_GOT_CAR) != 0) or (CUR_MAP_DENBUS1))) then begin
            Scenery_Creation := create_object_sid(33555441, 19095, 0, SCRIPT_ZSDRVCAR);
            Scenery_Creation_Hex := 19095;
            Scenery_Creation_Count := 0;
            while (Scenery_Creation_Count < 2) do begin
                Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
                Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                Scenery_Creation_Count := Scenery_Creation_Count + 1;
            end
            Scenery_Creation_Count := 0;
            while (Scenery_Creation_Count < 2) do begin
                Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 2, 1);
                Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                Scenery_Creation_Count := Scenery_Creation_Count + 1;
            end
            Scenery_Creation_Count := 0;
            while (Scenery_Creation_Count < 2) do begin
                Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 3, 1);
                Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                Scenery_Creation_Count := Scenery_Creation_Count + 1;
            end
            Scenery_Creation_Count := 0;
            while (Scenery_Creation_Count < 2) do begin
                Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
                Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                Scenery_Creation_Count := Scenery_Creation_Count + 1;
            end
            Scenery_Creation_Count := 0;
            while (Scenery_Creation_Count < 1) do begin
                Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
                Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                Scenery_Creation_Count := Scenery_Creation_Count + 1;
            end
            Scenery_Creation_Count := 0;
            while (Scenery_Creation_Count < 1) do begin
                Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
                Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                Scenery_Creation_Count := Scenery_Creation_Count + 1;
            end
            Scenery_Creation_Count := 0;
            while (Scenery_Creation_Count < 1) do begin
                Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
                Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                Scenery_Creation_Count := Scenery_Creation_Count + 1;
            end
            Scenery_Creation_Count := 0;
            while (Scenery_Creation_Count < 1) do begin
                Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
                Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                Scenery_Creation_Count := Scenery_Creation_Count + 1;
            end
            Scenery_Creation_Count := 0;
            while (Scenery_Creation_Count < 1) do begin
                Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
                Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                Scenery_Creation_Count := Scenery_Creation_Count + 1;
            end
            Scenery_Creation_Count := 0;
            while (Scenery_Creation_Count < 1) do begin
                Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
                Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                Scenery_Creation_Count := Scenery_Creation_Count + 1;
            end
            Scenery_Creation_Count := 0;
            while (Scenery_Creation_Count < 1) do begin
                Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 0, 1);
                Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                Scenery_Creation_Count := Scenery_Creation_Count + 1;
            end
            Scenery_Creation_Count := 0;
            while (Scenery_Creation_Count < 1) do begin
                Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
                Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                Scenery_Creation_Count := Scenery_Creation_Count + 1;
            end
            Scenery_Creation_Count := 0;
            while (Scenery_Creation_Count < 2) do begin
                Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 0, 1);
                Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                Scenery_Creation_Count := Scenery_Creation_Count + 1;
            end
            Scenery_Creation_Count := 0;
            while (Scenery_Creation_Count < 1) do begin
                Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
                Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                Scenery_Creation_Count := Scenery_Creation_Count + 1;
            end
            Scenery_Creation_Count := 0;
            while (Scenery_Creation_Count < 1) do begin
                Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 2, 1);
                Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                Scenery_Creation_Count := Scenery_Creation_Count + 1;
            end
            if (party_member_obj(455) != 0) then begin
                move_to(party_member_obj(455), Scenery_Creation_Hex, 0);
            end
            else begin
                create_object_sid(455, Scenery_Creation_Hex, 0, SCRIPT_ZICRTRNK);
                debug_msg("Making new Trunk.");
            end
            Scenery_Creation_Count := 0;
            while (Scenery_Creation_Count < 1) do begin
                Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
                Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                Scenery_Creation_Count := Scenery_Creation_Count + 1;
            end
            Scenery_Creation_Count := 0;
            while (Scenery_Creation_Count < 1) do begin
                Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 2, 1);
                Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                Scenery_Creation_Count := Scenery_Creation_Count + 1;
            end
        end
    end
    else begin
        if ((map_var(0) == 1) and (car_current_town != 35)) then begin
            set_map_var(0, 0);
            if (not(is_loading_game)) then begin
                Scenery_Creation_Ptr := tile_contains_pid_obj(19095, 0, 33555441);
                if (tile_contains_obj_pid(19095, 0, 33555441)) then begin
                    destroy_object(Scenery_Creation_Ptr);
                    Scenery_Creation_Hex := 19095;
                    Scenery_Creation_Count := 0;
                    while (Scenery_Creation_Count < 2) do begin
                        Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
                        Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                        destroy_object(Scenery_Creation_Ptr);
                        Scenery_Creation_Count := Scenery_Creation_Count + 1;
                    end
                    Scenery_Creation_Count := 0;
                    while (Scenery_Creation_Count < 2) do begin
                        Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 2, 1);
                        Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                        destroy_object(Scenery_Creation_Ptr);
                        Scenery_Creation_Count := Scenery_Creation_Count + 1;
                    end
                    Scenery_Creation_Count := 0;
                    while (Scenery_Creation_Count < 2) do begin
                        Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 3, 1);
                        Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                        destroy_object(Scenery_Creation_Ptr);
                        Scenery_Creation_Count := Scenery_Creation_Count + 1;
                    end
                    Scenery_Creation_Count := 0;
                    while (Scenery_Creation_Count < 2) do begin
                        Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
                        Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                        destroy_object(Scenery_Creation_Ptr);
                        Scenery_Creation_Count := Scenery_Creation_Count + 1;
                    end
                    Scenery_Creation_Count := 0;
                    while (Scenery_Creation_Count < 1) do begin
                        Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
                        Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                        destroy_object(Scenery_Creation_Ptr);
                        Scenery_Creation_Count := Scenery_Creation_Count + 1;
                    end
                    Scenery_Creation_Count := 0;
                    while (Scenery_Creation_Count < 1) do begin
                        Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
                        Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                        destroy_object(Scenery_Creation_Ptr);
                        Scenery_Creation_Count := Scenery_Creation_Count + 1;
                    end
                    Scenery_Creation_Count := 0;
                    while (Scenery_Creation_Count < 1) do begin
                        Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
                        Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                        destroy_object(Scenery_Creation_Ptr);
                        Scenery_Creation_Count := Scenery_Creation_Count + 1;
                    end
                    Scenery_Creation_Count := 0;
                    while (Scenery_Creation_Count < 1) do begin
                        Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
                        Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                        destroy_object(Scenery_Creation_Ptr);
                        Scenery_Creation_Count := Scenery_Creation_Count + 1;
                    end
                    Scenery_Creation_Count := 0;
                    while (Scenery_Creation_Count < 1) do begin
                        Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
                        Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                        destroy_object(Scenery_Creation_Ptr);
                        Scenery_Creation_Count := Scenery_Creation_Count + 1;
                    end
                    Scenery_Creation_Count := 0;
                    while (Scenery_Creation_Count < 1) do begin
                        Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
                        Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                        destroy_object(Scenery_Creation_Ptr);
                        Scenery_Creation_Count := Scenery_Creation_Count + 1;
                    end
                    Scenery_Creation_Count := 0;
                    while (Scenery_Creation_Count < 1) do begin
                        Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 0, 1);
                        Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                        destroy_object(Scenery_Creation_Ptr);
                        Scenery_Creation_Count := Scenery_Creation_Count + 1;
                    end
                    Scenery_Creation_Count := 0;
                    while (Scenery_Creation_Count < 1) do begin
                        Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
                        Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                        destroy_object(Scenery_Creation_Ptr);
                        Scenery_Creation_Count := Scenery_Creation_Count + 1;
                    end
                    Scenery_Creation_Count := 0;
                    while (Scenery_Creation_Count < 2) do begin
                        Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 0, 1);
                        Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                        destroy_object(Scenery_Creation_Ptr);
                        Scenery_Creation_Count := Scenery_Creation_Count + 1;
                    end
                    Scenery_Creation_Count := 0;
                    while (Scenery_Creation_Count < 1) do begin
                        Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
                        Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                        destroy_object(Scenery_Creation_Ptr);
                        Scenery_Creation_Count := Scenery_Creation_Count + 1;
                    end
                    Scenery_Creation_Count := 0;
                    while (Scenery_Creation_Count < 1) do begin
                        Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 2, 1);
                        Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                        destroy_object(Scenery_Creation_Ptr);
                        Scenery_Creation_Count := Scenery_Creation_Count + 1;
                    end
                    Scenery_Creation_Count := 0;
                    while (Scenery_Creation_Count < 1) do begin
                        Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
                        Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                        destroy_object(Scenery_Creation_Ptr);
                        Scenery_Creation_Count := Scenery_Creation_Count + 1;
                    end
                    Scenery_Creation_Count := 0;
                    while (Scenery_Creation_Count < 1) do begin
                        Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 2, 1);
                        Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                        destroy_object(Scenery_Creation_Ptr);
                        Scenery_Creation_Count := Scenery_Creation_Count + 1;
                    end
                end
            end
        end
    end
end

procedure map_update_p_proc
begin
    if ((get_month >= 3) and (get_month < 5)) then begin
        if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
            set_light_level(game_time_hour - 600 + 40);
        end
        else begin
            if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                set_light_level(100);
            end
            else begin
                if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                    set_light_level(100 - (game_time_hour - 1800));
                end
                else begin
                    set_light_level(40);
                end
            end
        end
    end
    else begin
        if ((get_month >= 5) and (get_month < 9)) then begin
            if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                set_light_level(game_time_hour - 500 + 40);
            end
            else begin
                if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1900));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 9) and (get_month < 11)) then begin
                if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                    set_light_level(game_time_hour - 600 + 40);
                end
                else begin
                    if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1800));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                    set_light_level(game_time_hour - 700 + 40);
                end
                else begin
                    if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1700));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
        end
    end
end

procedure map_exit_p_proc
begin
    if ((global_var(GVAR_PLAYER_GOT_CAR) != 0) and (car_current_town == 35)) then begin
        car_give_to_party;
    end
end
