/*******************************************************
*      Some unreferenced imported varables found.      *
*      Because of it it is impossible to specify       *
*      the real names of global variables.             *
*******************************************************/

variable GVar0 := 1;
variable GVar1;

procedure Start;
procedure look_at_p_proc;
procedure description_p_proc;
procedure talk_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure Gab01;
procedure Gab02;
procedure Gab03;
procedure Gab04;
procedure Gab05;
procedure Gab06;
procedure Gab07;
procedure Gab08;
procedure Gab09;
procedure Gab09a;
procedure Gab11;
procedure Gab12;
procedure Gab13;
procedure Gab14;
procedure Gab15;
procedure Gab16;
procedure Gab17;
procedure Gab18;
procedure Gab19;
procedure Gab20;
procedure Gab21;
procedure Gab22;
procedure Gab23;
procedure Gab24;
procedure Gab25;
procedure Gab26;
procedure Gab27;
procedure Gab28;
procedure GabBarter;
procedure GabEnd;

/* ?import? variable JonPtr; */
/* ?import? variable Initialize; */

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

/* ?import? variable exit_line; */


procedure Start
begin
    if (GVar0) then begin
        if (obj_is_carrying_obj_pid(self_obj, 41) == 0) then begin
            item_caps_adjust(self_obj, random(50, 150));
        end
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 48);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_BRAIN_MOLE_RAT);
        GVar0 := 0;
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 1) then begin
        display_msg(message_str(SCRIPT_WSTERM2A, 101));
    end
    else begin
        display_msg(message_str(SCRIPT_WSTERM2A, 100));
    end
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(4) == 1) then begin
        display_msg(message_str(SCRIPT_WSTERM2A, 101));
    end
    else begin
        display_msg(message_str(SCRIPT_WSTERM2A, 100));
    end
end

procedure talk_p_proc
begin
    if (global_var(GVAR_SPECIAL_ENCOUNTER_CAFE) == 1) then begin
        float_msg(self_obj, message_str(SCRIPT_VCMOORE, random(100, 105)), FLOAT_MSG_RED);
    end
    else begin
        call get_reaction();
        start_gdialog(156, self_obj, -1, -1, -1);
        gsay_start;
        if (local_var(4) == 0) then begin
            if (global_var(GVAR_NCR_BISHOP_PRICE) == 9250) then begin
                call Gab17();
            end
            else begin
                call Gab01();
            end
        end
        else begin
            if (local_var(5) == 1) then begin
                if ((local_var(8) == 0) and (global_var(GVAR_SPECIAL_ENCOUNTER_GUARDIAN) == 2)) then begin
                    set_local_var(8, 1);
                    call Gab25();
                end
                else begin
                    call Gab27();
                end
            end
            else begin
                if ((global_var(GVAR_SPECIAL_ENCOUNTER_HOLY1) == 9201) and (global_var(GVAR_NCR_BISHOP_PRICE) == 9250)) then begin
                    call Gab20();
                end
                else begin
                    if (global_var(GVAR_SPECIAL_ENCOUNTER_HOLY1) == 9201) then begin
                        call Gab13();
                    end
                    else begin
                        if ((local_var(6) == 1) or (local_var(7) == 1)) then begin
                            call Gab24();
                        end
                        else begin
                            call Gab12();
                        end
                    end
                end
            end
        end
        gsay_end;
        end_dialogue;
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_SPECIAL_ENCOUNTER_CAFE, 1);
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_SPECIAL_ENCOUNTER_CAFE, 1);
        if (source_obj == dude_obj) then begin
            if (((global_var(GVAR_GECKO_SKEETER_PART) + global_var(GVAR_GECKO_REQ_FORM)) >= 25) and ((global_var(GVAR_GECKO_REQ_FORM) > (2 * global_var(GVAR_GECKO_SKEETER_PART))) or (global_var(GVAR_SIERRA_LOCKOUT) == 1))) then begin
                set_global_var(GVAR_SIERRA_LOCKOUT, 1);
                set_global_var(GVAR_SIERRA_PASSWORD, 0);
            end
            if (((global_var(GVAR_GECKO_SKEETER_PART) + global_var(GVAR_GECKO_REQ_FORM)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GECKO_REQ_FORM))) or (global_var(GVAR_SIERRA_PASSWORD) == 1))) then begin
                set_global_var(GVAR_SIERRA_PASSWORD, 1);
                set_global_var(GVAR_SIERRA_LOCKOUT, 0);
            end
            set_global_var(GVAR_GECKO_REQ_FORM, global_var(GVAR_GECKO_REQ_FORM) + 1);
            if ((global_var(GVAR_GECKO_REQ_FORM) % 2) == 0) then begin
                set_global_var(GVAR_BRAIN_BOT_BRAIN, global_var(GVAR_BRAIN_BOT_BRAIN) - 1);
            end
        end
    end
end

procedure critter_p_proc
begin
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if (global_var(GVAR_SPECIAL_ENCOUNTER_CAFE) == 1) then begin
            attack(dude_obj);
        end
    end
end

procedure pickup_p_proc
begin
    set_global_var(GVAR_SPECIAL_ENCOUNTER_CAFE, 1);
end

procedure Gab01
begin
    gsay_reply(SCRIPT_WSTERM2A, 102);
    giq_option(1, SCRIPT_WSTERM2A, 103, Gab02, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_WSTERM2A, 104, Gab04, NEUTRAL_REACTION);
end

procedure Gab02
begin
    gsay_reply(SCRIPT_WSTERM2A, 105);
    giq_option(1, SCRIPT_WSTERM2A, 106, Gab03, NEUTRAL_REACTION);
    set_local_var(4, 1);
end

procedure Gab03
begin
    gsay_reply(SCRIPT_WSTERM2A, 107);
    giq_option(1, SCRIPT_WSTERM2A, 108, Gab08, NEUTRAL_REACTION);
end

procedure Gab04
begin
    gsay_reply(SCRIPT_WSTERM2A, 109);
    giq_option(1, SCRIPT_WSTERM2A, 110, Gab05, NEUTRAL_REACTION);
end

procedure Gab05
begin
    gsay_reply(SCRIPT_WSTERM2A, 111);
    giq_option(1, SCRIPT_WSTERM2A, 112, Gab06, NEUTRAL_REACTION);
end

procedure Gab06
begin
    gsay_reply(SCRIPT_WSTERM2A, 113);
    if (global_var(GVAR_NCR_BISHOP_PRICE) == 9250) then begin
        giq_option(1, SCRIPT_WSTERM2A, 114, Gab19, NEUTRAL_REACTION);
    end
    else begin
        giq_option(1, SCRIPT_WSTERM2A, 114, Gab07, NEUTRAL_REACTION);
    end
    giq_option(1, SCRIPT_WSTERM2A, 115, Gab08, NEUTRAL_REACTION);
end

procedure Gab07
begin
    gsay_reply(SCRIPT_WSTERM2A, 116);
    giq_option(1, SCRIPT_WSTERM2A, 117, Gab03, NEUTRAL_REACTION);
end

procedure Gab08
begin
    gsay_reply(SCRIPT_WSTERM2A, 118);
    giq_option(1, SCRIPT_WSTERM2A, 119, Gab09, NEUTRAL_REACTION);
    if (global_var(GVAR_SPECIAL_ENCOUNTER_GUARDIAN) == 9101) then begin
        if (dude_gender == 0) then begin
            giq_option(1, SCRIPT_WSTERM2A, 170, Gab11, NEUTRAL_REACTION);
        end
        else begin
            giq_option(1, SCRIPT_WSTERM2A, 171, Gab11, NEUTRAL_REACTION);
        end
    end
end

procedure Gab09
begin
    gsay_reply(SCRIPT_WSTERM2A, 121);
    giq_option(1, SCRIPT_WSTERM2A, 122, Gab09a, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_WSTERM2A, 123, GabEnd, NEUTRAL_REACTION);
end

procedure Gab09a
begin
    set_global_var(GVAR_SPECIAL_ENCOUNTER_HOLY1, 9201);
end

procedure Gab11
begin
    gsay_reply(SCRIPT_WSTERM2A, 125);
    giq_option(1, SCRIPT_WSTERM2A, 126, Gab09a, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_WSTERM2A, 127, GabEnd, NEUTRAL_REACTION);
end

procedure Gab12
begin
    gsay_reply(SCRIPT_WSTERM2A, 128);
    giq_option(1, SCRIPT_WSTERM2A, 129, Gab04, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_WSTERM2A, 130, GabEnd, NEUTRAL_REACTION);
end

procedure Gab13
begin
    if (dude_gender == 0) then begin
        gsay_reply(SCRIPT_WSTERM2A, 172);
    end
    else begin
        gsay_reply(SCRIPT_WSTERM2A, 173);
    end
    giq_option(1, SCRIPT_WSTERM2A, 132, Gab15, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_WSTERM2A, 133, Gab14, NEUTRAL_REACTION);
end

procedure Gab14
begin
    gsay_reply(SCRIPT_WSTERM2A, 134);
    giq_option(1, SCRIPT_WSTERM2A, 135, GabEnd, NEUTRAL_REACTION);
end

procedure Gab15
begin
    gsay_reply(SCRIPT_WSTERM2A, 136);
    giq_option(1, SCRIPT_WSTERM2A, 137, GabEnd, NEUTRAL_REACTION);
end

procedure Gab16
begin
    gsay_reply(SCRIPT_WSTERM2A, 138);
    giq_option(1, SCRIPT_WSTERM2A, 139, GabEnd, NEUTRAL_REACTION);
end

procedure Gab17
begin
    gsay_reply(SCRIPT_WSTERM2A, 140);
    giq_option(1, SCRIPT_WSTERM2A, 141, Gab18, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_WSTERM2A, 142, Gab04, NEUTRAL_REACTION);
end

procedure Gab18
begin
    gsay_reply(SCRIPT_WSTERM2A, 143);
    giq_option(1, SCRIPT_WSTERM2A, 144, Gab20, NEUTRAL_REACTION);
    set_local_var(4, 1);
end

procedure Gab19
begin
    gsay_reply(SCRIPT_WSTERM2A, 145);
    giq_option(1, SCRIPT_WSTERM2A, 146, Gab20, NEUTRAL_REACTION);
end

procedure Gab20
begin
    if (dude_gender == 0) then begin
        gsay_reply(SCRIPT_WSTERM2A, 174);
    end
    else begin
        gsay_reply(SCRIPT_WSTERM2A, 175);
    end
    giq_option(1, SCRIPT_WSTERM2A, 148, Gab21, NEUTRAL_REACTION);
    if (global_var(GVAR_SPECIAL_ENCOUNTER_GUARDIAN) == 9101) then begin
        if (dude_gender == 0) then begin
            giq_option(1, SCRIPT_WSTERM2A, 170, Gab22, NEUTRAL_REACTION);
        end
        else begin
            giq_option(1, SCRIPT_WSTERM2A, 171, Gab22, NEUTRAL_REACTION);
        end
    end
    giq_option(1, SCRIPT_WSTERM2A, 150, Gab23, NEUTRAL_REACTION);
end

procedure Gab21
begin
    gsay_reply(SCRIPT_WSTERM2A, 151);
    if (dude_gender == 0) then begin
        giq_option(1, SCRIPT_WSTERM2A, 176, GabEnd, NEUTRAL_REACTION);
    end
    else begin
        giq_option(1, SCRIPT_WSTERM2A, 177, GabEnd, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_NCR_BISHOP_PRICE) != 2) then begin
        set_global_var(GVAR_NCR_BISHOP_PRICE, 2);
        set_global_var(GVAR_BRAIN_BOT_BRAIN, global_var(GVAR_BRAIN_BOT_BRAIN) + 1);
        give_exp_points(1000);
        display_msg(message_str(SCRIPT_ECELRON, 103) + 1000 + message_str(SCRIPT_ECELRON, 104));
        set_local_var(6, 1);
    end
end

procedure Gab22
begin
    if (dude_gender == 0) then begin
        gsay_reply(SCRIPT_WSTERM2A, 178);
    end
    else begin
        gsay_reply(SCRIPT_WSTERM2A, 179);
    end
    giq_option(1, SCRIPT_WSTERM2A, 154, GabEnd, NEUTRAL_REACTION);
    if (global_var(GVAR_SPECIAL_ENCOUNTER_HOLY1) != 9202) then begin
        set_global_var(GVAR_SPECIAL_ENCOUNTER_HOLY1, 9202);
        set_global_var(GVAR_BRAIN_BOT_BRAIN, global_var(GVAR_BRAIN_BOT_BRAIN) + 1);
        give_exp_points(1000);
        display_msg(message_str(SCRIPT_ECELRON, 103) + 1000 + message_str(SCRIPT_ECELRON, 104));
        set_local_var(5, 1);
    end
end

procedure Gab23
begin
    if (dude_gender == 0) then begin
        gsay_reply(SCRIPT_WSTERM2A, 180);
    end
    else begin
        gsay_reply(SCRIPT_WSTERM2A, 181);
    end
    giq_option(1, SCRIPT_WSTERM2A, 156, GabEnd, NEUTRAL_REACTION);
    call UpReactLevel();
end

procedure Gab24
begin
    if (dude_gender == 0) then begin
        gsay_message(SCRIPT_WSTERM2A, 182, NEUTRAL_REACTION);
    end
    else begin
        gsay_message(SCRIPT_WSTERM2A, 183, NEUTRAL_REACTION);
    end
end

procedure Gab25
begin
    if (dude_gender == 0) then begin
        gsay_reply(SCRIPT_WSTERM2A, 184);
    end
    else begin
        gsay_reply(SCRIPT_WSTERM2A, 185);
    end
    giq_option(1, SCRIPT_WSTERM2A, 159, Gab26, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_WSTERM2A, 160, GabBarter, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_WSTERM2A, 161, GabEnd, NEUTRAL_REACTION);
end

procedure Gab26
begin
    if (dude_gender == 0) then begin
        gsay_reply(SCRIPT_WSTERM2A, 186);
    end
    else begin
        gsay_reply(SCRIPT_WSTERM2A, 187);
    end
    giq_option(1, SCRIPT_WSTERM2A, 163, GabBarter, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_WSTERM2A, 164, GabEnd, NEUTRAL_REACTION);
end

procedure Gab27
begin
    if (dude_gender == 0) then begin
        gsay_reply(SCRIPT_WSTERM2A, 184);
    end
    else begin
        gsay_reply(SCRIPT_WSTERM2A, 185);
    end
    giq_option(1, SCRIPT_WSTERM2A, 166, GabBarter, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_WSTERM2A, 167, GabEnd, NEUTRAL_REACTION);
end

procedure Gab28
begin
    gsay_message(SCRIPT_WSTERM2A, 168, NEUTRAL_REACTION);
end

procedure GabBarter
begin
    gsay_message(SCRIPT_WSTERM2A, 188, NEUTRAL_REACTION);
end

procedure GabEnd
begin
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * dude_charisma) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence)));
        if (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality)) then begin
            if (global_var(GVAR_BRAIN_BOT_BRAIN) > 0) then begin
                set_local_var(0, local_var(0) + global_var(GVAR_BRAIN_BOT_BRAIN));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(GVAR_BRAIN_BOT_BRAIN));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(GVAR_BRAIN_BOT_BRAIN));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(GVAR_BRAIN_BOT_BRAIN));
            end
        end
        if (global_var(GVAR_GECKO_ECON_DISK) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(GVAR_GECKO_SKEETER_PART) + global_var(GVAR_GECKO_REQ_FORM)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GECKO_REQ_FORM))) or (global_var(GVAR_SIERRA_PASSWORD) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(GVAR_GECKO_SKEETER_PART) + global_var(GVAR_GECKO_REQ_FORM)) >= 25) and ((global_var(GVAR_GECKO_REQ_FORM) > (2 * global_var(GVAR_GECKO_SKEETER_PART))) or (global_var(GVAR_SIERRA_LOCKOUT) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    GVar1 := message_str(SCRIPT_BSCOMP3, random(100, 105));
end
