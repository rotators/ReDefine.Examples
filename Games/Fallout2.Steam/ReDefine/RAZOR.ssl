procedure Start;
procedure look_at_p_proc;
procedure description_p_proc;
procedure talk_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure map_update_p_proc;
procedure Razor01;
procedure Razor02;
procedure Razor03;
procedure Razor04;
procedure Razor04a;
procedure Razor05;
procedure Razor06;
procedure Razor07;
procedure Razor08;
procedure Razor09;
procedure Razor10;
procedure Razor11;
procedure Razor12;
procedure Razor13;
procedure Razor14;
procedure Razor15;
procedure Razor16;
procedure Razor17;
procedure Razor18;
procedure Razor19;
procedure Razor20;
procedure Razor21;
procedure Razor22;
procedure Razor22a;
procedure Razor23;
procedure Razor24;
procedure Razor25;
procedure Razor26;
procedure Razor27;
procedure Razor28;
procedure Razor29;
procedure Razor30;
procedure Razor31;
procedure Razor32;
procedure Razor33;
procedure Razor34;
procedure Razor35;
procedure Razor36;
procedure Razor37;
procedure Razor38;
procedure Razor41;
procedure Razor42;
procedure Razor43;
procedure Razor44;
procedure Razor45;
procedure Razor46;
procedure Razor46a;
procedure Razor47;
procedure Razor47a;
procedure Razor48;
procedure RazorFin;
procedure RazorReg;
procedure RazorEnd;
procedure RemoveBlades;

import variable RazorPtr;

variable Initialize := 1;
variable DisplayMessage := 100;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure Start
begin
    if (Initialize) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 47);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_FIGHTING_MANTIS);
        RazorPtr := self_obj;
        if (global_var(GVAR_MYSTERIOUS_STRANGER) == 1) then begin
            set_local_var(4, 1);
        end
        Initialize := 0;
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 1) then begin
        display_msg(message_str(SCRIPT_MBASE34, 220));
    end
    else begin
        display_msg(message_str(SCRIPT_MBASE34, 221));
    end
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(4) == 1) then begin
        display_msg(message_str(SCRIPT_MBASE34, 220));
    end
    else begin
        display_msg(message_str(SCRIPT_MBASE34, 221));
    end
end

procedure talk_p_proc
begin
    if (global_var(GVAR_MORDINO_WARNINGS) == 1) then begin
        float_msg(self_obj, message_str(SCRIPT_VCMOORE, random(100, 105)), FLOAT_MSG_RED);
    end
    else begin
        if ((global_var(GVAR_SPECIAL_ENCOUNTER_GUARDIAN) == 2) and (local_var(6) == 1)) then begin
            float_msg(self_obj, message_str(SCRIPT_MBASE34, random(215, 217)), FLOAT_MSG_NORMAL);
        end
        else begin
            if ((local_var(4) == 1) and (dude_iq < 4)) then begin
                float_msg(self_obj, message_str(SCRIPT_MBASE34, 222), FLOAT_MSG_NORMAL);
            end
            else begin
                call get_reaction();
                start_gdialog(278, self_obj, -1, -1, -1);
                gsay_start;
                if (global_var(GVAR_SPECIAL_ENCOUNTER_GUARDIAN) == 2) then begin
                    if (global_var(GVAR_GRUTHAR_DSTATUS) == 1) then begin
                        if (global_var(GVAR_MYSTERIOUS_STRANGER_LEVEL) == 1) then begin
                            call Razor45();
                        end
                        else begin
                            if (local_var(4) == 0) then begin
                                call Razor42();
                            end
                            else begin
                                call Razor48();
                            end
                        end
                    end
                    else begin
                        call RazorFin();
                    end
                    set_local_var(6, 1);
                end
                else begin
                    if (global_var(GVAR_SPECIAL_ENCOUNTER_HOLY1) == 9202) then begin
                        call Razor33();
                    end
                    else begin
                        if (global_var(GVAR_SPECIAL_ENCOUNTER_SHUTTLE) == 9001) then begin
                            call Razor20();
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(dude_obj, 238) and (global_var(GVAR_NCR_BISHOP_PRICE) != 2)) then begin
                                call Razor26();
                            end
                            else begin
                                if (global_var(GVAR_SPECIAL_ENCOUNTER_SHUTTLE) == 9003) then begin
                                    call Razor30();
                                end
                                else begin
                                    if (global_var(GVAR_MYSTERIOUS_STRANGER_LEVEL) == 1) then begin
                                        call Razor46();
                                    end
                                    else begin
                                        if (global_var(GVAR_SPECIAL_ENCOUNTER_SHUTTLE) == 0) then begin
                                            call Razor01();
                                        end
                                        else begin
                                            call Razor37();
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                gsay_end;
                end_dialogue;
            end
        end
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_MORDINO_WARNINGS, 1);
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_MORDINO_WARNINGS, 1);
        if (source_obj == dude_obj) then begin
            if (((global_var(GVAR_GECKO_SKEETER_PART) + global_var(GVAR_GECKO_REQ_FORM)) >= 25) and ((global_var(GVAR_GECKO_REQ_FORM) > (2 * global_var(GVAR_GECKO_SKEETER_PART))) or (global_var(GVAR_SIERRA_LOCKOUT) == 1))) then begin
                set_global_var(GVAR_SIERRA_LOCKOUT, 1);
                set_global_var(GVAR_SIERRA_PASSWORD, 0);
            end
            if (((global_var(GVAR_GECKO_SKEETER_PART) + global_var(GVAR_GECKO_REQ_FORM)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GECKO_REQ_FORM))) or (global_var(GVAR_SIERRA_PASSWORD) == 1))) then begin
                set_global_var(GVAR_SIERRA_PASSWORD, 1);
                set_global_var(GVAR_SIERRA_LOCKOUT, 0);
            end
            set_global_var(GVAR_GECKO_REQ_FORM, global_var(GVAR_GECKO_REQ_FORM) + 1);
            if ((global_var(GVAR_GECKO_REQ_FORM) % 2) == 0) then begin
                set_global_var(GVAR_BRAIN_BOT_BRAIN, global_var(GVAR_BRAIN_BOT_BRAIN) - 1);
            end
        end
    end
    set_global_var(GVAR_SPECIAL_ENCOUNTER_SHUTTLE, 9002);
end

procedure critter_p_proc
begin
    if (global_var(GVAR_MYSTERIOUS_STRANGER) == 1) then begin
        set_local_var(4, 1);
    end
    if (local_var(5) == 1) then begin
        attack(dude_obj);
        set_local_var(5, 0);
        set_global_var(GVAR_MORDINO_WARNINGS, 1);
    end
end

procedure pickup_p_proc
begin
    set_global_var(GVAR_MORDINO_WARNINGS, 1);
end

procedure map_update_p_proc
begin
    if (global_var(GVAR_MYSTERIOUS_STRANGER) == 1) then begin
        set_local_var(4, 1);
    end
end

procedure Razor01
begin
    gsay_reply(SCRIPT_MBASE34, 100);
    giq_option(4, SCRIPT_MBASE34, 101, Razor02, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_MBASE34, 102, Razor03, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_MBASE34, 103, RazorEnd, NEUTRAL_REACTION);
    giq_option(-3, SCRIPT_MBASE34, 104, Razor41, NEUTRAL_REACTION);
end

procedure Razor02
begin
    gsay_reply(SCRIPT_MBASE34, 105);
    giq_option(1, SCRIPT_MBASE34, 106, Razor03, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_MBASE34, 107, Razor04, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_MBASE34, message_str(SCRIPT_MBASE34, 108) + proto_data(obj_pid(dude_obj), 1) + ".", Razor05, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_MBASE34, 109, RazorEnd, NEUTRAL_REACTION);
    set_local_var(4, 1);
end

procedure Razor03
begin
    gsay_reply(SCRIPT_MBASE34, 110);
    giq_option(1, SCRIPT_MBASE34, 111, Razor06, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_MBASE34, 112, Razor07, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_MBASE34, 113, RazorEnd, NEUTRAL_REACTION);
end

procedure Razor04
begin
    gsay_reply(SCRIPT_MBASE34, 114);
    giq_option(1, SCRIPT_MBASE34, 115, Razor09, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_MBASE34, 116, Razor04a, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_MBASE34, 238, RazorReg, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_MBASE34, 117, RazorEnd, NEUTRAL_REACTION);
end

procedure Razor04a
begin
    call BottomReact();
end

procedure Razor05
begin
    gsay_reply(SCRIPT_MBASE34, 118);
    giq_option(1, SCRIPT_MBASE34, 119, Razor08, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_MBASE34, 120, Razor08, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_MBASE34, 121, RazorEnd, NEUTRAL_REACTION);
end

procedure Razor06
begin
    gsay_reply(SCRIPT_MBASE34, 122);
    giq_option(1, SCRIPT_MBASE34, 123, Razor09, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_MBASE34, 124, Razor10, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_MBASE34, 125, Razor19, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_MBASE34, 126, RazorEnd, NEUTRAL_REACTION);
end

procedure Razor07
begin
    gsay_reply(SCRIPT_MBASE34, 127);
    giq_option(1, SCRIPT_MBASE34, 128, Razor09, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_MBASE34, 129, Razor19, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_MBASE34, 130, Razor19, NEUTRAL_REACTION);
end

procedure Razor08
begin
    gsay_reply(SCRIPT_MBASE34, 131);
    giq_option(1, SCRIPT_MBASE34, 132, Razor04, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_MBASE34, 133, Razor03, NEUTRAL_REACTION);
end

procedure Razor09
begin
    gsay_reply(SCRIPT_MBASE34, 134);
    giq_option(1, SCRIPT_MBASE34, 135, Razor11, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_MBASE34, 136, RazorEnd, NEUTRAL_REACTION);
    set_global_var(GVAR_SPECIAL_ENCOUNTER_GUARDIAN, 9101);
end

procedure Razor10
begin
    gsay_reply(SCRIPT_MBASE34, 137);
    giq_option(1, SCRIPT_MBASE34, 138, Razor12, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_MBASE34, 139, Razor14, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_MBASE34, 238, RazorReg, NEUTRAL_REACTION);
end

procedure Razor11
begin
    gsay_reply(SCRIPT_MBASE34, 140);
    giq_option(1, SCRIPT_MBASE34, 141, Razor18, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_MBASE34, 238, RazorReg, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_MBASE34, 142, RazorEnd, NEUTRAL_REACTION);
end

procedure Razor12
begin
    gsay_reply(SCRIPT_MBASE34, 143);
    giq_option(1, SCRIPT_MBASE34, 144, Razor13, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_MBASE34, 145, RazorEnd, NEUTRAL_REACTION);
end

procedure Razor13
begin
    gsay_reply(SCRIPT_MBASE34, 146);
    giq_option(1, SCRIPT_MBASE34, 147, Razor14, NEUTRAL_REACTION);
end

procedure Razor14
begin
    gsay_reply(SCRIPT_MBASE34, 148);
    giq_option(1, SCRIPT_MBASE34, 149, Razor15, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_MBASE34, 150, Razor09, NEUTRAL_REACTION);
end

procedure Razor15
begin
    gsay_reply(SCRIPT_MBASE34, 151);
    giq_option(1, SCRIPT_MBASE34, 152, Razor27, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_MBASE34, 153, Razor17, NEUTRAL_REACTION);
end

procedure Razor16
begin
    variable LVar0 := 0;
    gsay_reply(SCRIPT_MBASE34, 154);
    giq_option(1, SCRIPT_MBASE34, 155, RazorEnd, NEUTRAL_REACTION);
    LVar0 := create_object(238, 0, 0);
    add_obj_to_inven(dude_obj, LVar0);
end

procedure Razor17
begin
    gsay_reply(SCRIPT_MBASE34, 156);
    giq_option(1, SCRIPT_MBASE34, 157, RazorEnd, NEUTRAL_REACTION);
end

procedure Razor18
begin
    gsay_reply(SCRIPT_MBASE34, 158);
    giq_option(1, SCRIPT_MBASE34, 159, RazorEnd, NEUTRAL_REACTION);
    set_global_var(GVAR_SPECIAL_ENCOUNTER_GUARDIAN, 9101);
end

procedure Razor19
begin
    gsay_reply(SCRIPT_MBASE34, 160);
    giq_option(1, SCRIPT_MBASE34, 161, RazorEnd, NEUTRAL_REACTION);
end

procedure Razor20
begin
    gsay_reply(SCRIPT_MBASE34, 162);
    giq_option(4, SCRIPT_MBASE34, 163, Razor21, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_MBASE34, 164, RazorEnd, NEUTRAL_REACTION);
    giq_option(-3, SCRIPT_MBASE34, 165, Razor41, NEUTRAL_REACTION);
end

procedure Razor21
begin
    gsay_reply(SCRIPT_MBASE34, 166);
    giq_option(1, SCRIPT_MBASE34, 167, Razor22, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_MBASE34, 168, Razor07, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_MBASE34, 169, RazorEnd, NEUTRAL_REACTION);
end

procedure Razor22
begin
    gsay_reply(SCRIPT_MBASE34, 170);
    giq_option(1, SCRIPT_MBASE34, 171, Razor22a, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_MBASE34, 172, Razor23, NEUTRAL_REACTION);
end

procedure Razor22a
begin
    set_local_var(5, 1);
end

procedure Razor23
begin
    gsay_reply(SCRIPT_MBASE34, 173);
    giq_option(1, SCRIPT_MBASE34, 174, Razor22a, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_MBASE34, 175, Razor24, NEUTRAL_REACTION);
end

procedure Razor24
begin
    gsay_reply(SCRIPT_MBASE34, 176);
    giq_option(1, SCRIPT_MBASE34, 177, Razor22a, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_MBASE34, 178, Razor25, NEUTRAL_REACTION);
end

procedure Razor25
begin
    gsay_reply(SCRIPT_MBASE34, 179);
    giq_option(1, SCRIPT_MBASE34, 180, Razor13, NEUTRAL_REACTION);
end

procedure Razor26
begin
    gsay_reply(SCRIPT_MBASE34, 181);
    giq_option(4, SCRIPT_MBASE34, 182, Razor29, NEUTRAL_REACTION);
    giq_option(-3, SCRIPT_MBASE34, 183, Razor41, NEUTRAL_REACTION);
end

procedure Razor27
begin
    gsay_reply(SCRIPT_MBASE34, 184);
    giq_option(1, SCRIPT_MBASE34, 185, Razor28, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_MBASE34, 238, RazorReg, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_MBASE34, 186, RazorEnd, NEUTRAL_REACTION);
end

procedure Razor28
begin
    gsay_reply(SCRIPT_MBASE34, 187);
    giq_option(1, SCRIPT_MBASE34, 188, Razor16, NEUTRAL_REACTION);
    set_global_var(GVAR_SPECIAL_ENCOUNTER_GUARDIAN, 9101);
end

procedure Razor29
begin
    gsay_message(SCRIPT_MBASE34, 189, NEUTRAL_REACTION);
end

procedure Razor30
begin
    gsay_reply(SCRIPT_MBASE34, 190);
    giq_option(4, SCRIPT_MBASE34, 191, Razor31, NEUTRAL_REACTION);
    giq_option(-3, SCRIPT_MBASE34, 192, Razor41, NEUTRAL_REACTION);
end

procedure Razor31
begin
    gsay_reply(SCRIPT_MBASE34, 193);
    giq_option(1, SCRIPT_MBASE34, 194, Razor32, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_MBASE34, 195, Razor19, NEUTRAL_REACTION);
end

procedure Razor32
begin
    gsay_message(SCRIPT_MBASE34, 196, NEUTRAL_REACTION);
    set_global_var(GVAR_SPECIAL_ENCOUNTER_GUARDIAN, 9101);
end

procedure Razor33
begin
    gsay_reply(SCRIPT_MBASE34, 197);
    giq_option(4, SCRIPT_MBASE34, 198, Razor34, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_MBASE34, 199, Razor35, NEUTRAL_REACTION);
    if (global_var(GVAR_SPECIAL_ENCOUNTER_SHUTTLE) != 9003) then begin
        giq_option(4, SCRIPT_MBASE34, 201, Razor36, NEUTRAL_REACTION);
    end
    giq_option(-3, SCRIPT_MBASE34, 200, Razor41, NEUTRAL_REACTION);
end

procedure Razor34
begin
    gsay_message(SCRIPT_MBASE34, 202, NEUTRAL_REACTION);
    call TopReact();
    set_global_var(GVAR_SPECIAL_ENCOUNTER_GUARDIAN, 9104);
    gfade_out(600);
    game_time_advance(10 * 60 * 60 * 8);
end

procedure Razor35
begin
    gsay_message(SCRIPT_MBASE34, 203, NEUTRAL_REACTION);
    call TopReact();
    set_global_var(GVAR_SPECIAL_ENCOUNTER_GUARDIAN, 9103);
    gfade_out(600);
    game_time_advance(10 * 60 * 60 * 24);
    load_map("laadytum.map", 1);
end

procedure Razor36
begin
    gsay_message(SCRIPT_MBASE34, 204, NEUTRAL_REACTION);
    set_global_var(GVAR_SPECIAL_ENCOUNTER_GUARDIAN, 9102);
end

procedure Razor37
begin
    gsay_reply(SCRIPT_MBASE34, 205);
    giq_option(4, SCRIPT_MBASE34, 206, RazorEnd, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_MBASE34, 207, RazorEnd, NEUTRAL_REACTION);
    if (obj_is_carrying_obj_pid(dude_obj, 238)) then begin
        giq_option(4, SCRIPT_MBASE34, 208, Razor38, NEUTRAL_REACTION);
    end
    giq_option(4, SCRIPT_MBASE34, 209, Razor22a, NEUTRAL_REACTION);
    giq_option(-3, SCRIPT_MBASE34, 210, Razor41, NEUTRAL_REACTION);
end

procedure Razor38
begin
    gsay_message(SCRIPT_MBASE34, 211, NEUTRAL_REACTION);
end

procedure Razor41
begin
    gsay_message(SCRIPT_MBASE34, 218, NEUTRAL_REACTION);
end

procedure Razor42
begin
    gsay_reply(SCRIPT_MBASE34, 224);
    giq_option(4, SCRIPT_MBASE34, 225, Razor43, NEUTRAL_REACTION);
    giq_option(-3, SCRIPT_MBASE34, 226, Razor41, NEUTRAL_REACTION);
end

procedure Razor43
begin
    gsay_reply(SCRIPT_MBASE34, 227);
    giq_option(1, SCRIPT_MBASE34, 228, Razor44, NEUTRAL_REACTION);
end

procedure Razor44
begin
    gsay_message(SCRIPT_MBASE34, 229, NEUTRAL_REACTION);
    set_global_var(GVAR_BRAIN_BOT_BRAIN, global_var(GVAR_BRAIN_BOT_BRAIN) + 2);
    display_msg(message_str(SCRIPT_ECELRON, 103) + 500 + message_str(SCRIPT_ECELRON, 104));
    give_exp_points(500);
end

procedure Razor45
begin
    gsay_message(SCRIPT_MBASE34, 230, NEUTRAL_REACTION);
    set_global_var(GVAR_BRAIN_BOT_BRAIN, global_var(GVAR_BRAIN_BOT_BRAIN) + 2);
    display_msg(message_str(SCRIPT_ECELRON, 103) + 500 + message_str(SCRIPT_ECELRON, 104));
    give_exp_points(500);
end

procedure Razor46
begin
    gsay_reply(SCRIPT_MBASE34, 231);
    giq_option(1, SCRIPT_MBASE34, 232, Razor46a, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_MBASE34, 233, Razor47, NEUTRAL_REACTION);
end

procedure Razor46a
begin
    gsay_message(SCRIPT_MBASE34, 215, NEUTRAL_REACTION);
end

procedure Razor47
begin
    gsay_reply(SCRIPT_MBASE34, 234);
    giq_option(1, SCRIPT_MBASE34, 235, Razor47a, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_MBASE34, 236, RazorEnd, NEUTRAL_REACTION);
end

procedure Razor47a
begin
    gsay_message(SCRIPT_MBASE34, 215, NEUTRAL_REACTION);
    set_global_var(GVAR_SPECIAL_ENCOUNTER_GUARDIAN, 9101);
end

procedure Razor48
begin
    gsay_message(SCRIPT_MBASE34, 237, NEUTRAL_REACTION);
    set_global_var(GVAR_BRAIN_BOT_BRAIN, global_var(GVAR_BRAIN_BOT_BRAIN) + 2);
    display_msg(message_str(SCRIPT_ECELRON, 103) + 500 + message_str(SCRIPT_ECELRON, 104));
    give_exp_points(500);
end

procedure RazorFin
begin
    gsay_message(SCRIPT_MBASE34, 223, NEUTRAL_REACTION);
end

procedure RazorReg
begin
    gsay_message(SCRIPT_MBASE34, 239, NEUTRAL_REACTION);
    set_global_var(GVAR_MYSTERIOUS_STRANGER_LEVEL, 1);
end

procedure RazorEnd
begin
end

procedure RemoveBlades
begin
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * dude_charisma) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence)));
        if (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality)) then begin
            if (global_var(GVAR_BRAIN_BOT_BRAIN) > 0) then begin
                set_local_var(0, local_var(0) + global_var(GVAR_BRAIN_BOT_BRAIN));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(GVAR_BRAIN_BOT_BRAIN));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(GVAR_BRAIN_BOT_BRAIN));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(GVAR_BRAIN_BOT_BRAIN));
            end
        end
        if (global_var(GVAR_GECKO_ECON_DISK) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(GVAR_GECKO_SKEETER_PART) + global_var(GVAR_GECKO_REQ_FORM)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GECKO_REQ_FORM))) or (global_var(GVAR_SIERRA_PASSWORD) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(GVAR_GECKO_SKEETER_PART) + global_var(GVAR_GECKO_REQ_FORM)) >= 25) and ((global_var(GVAR_GECKO_REQ_FORM) > (2 * global_var(GVAR_GECKO_SKEETER_PART))) or (global_var(GVAR_SIERRA_LOCKOUT) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(SCRIPT_BSCOMP3, random(100, 105));
end
