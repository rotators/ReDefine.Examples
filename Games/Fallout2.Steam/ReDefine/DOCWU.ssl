procedure start;
procedure do_dialogue;
procedure social_skills;
procedure DocWu00;
procedure DocWu01;
procedure DocWu02;
procedure DocWu03;
procedure DocWu04;
procedure DocWu05;
procedure DocWu06;
procedure DocWu06a;
procedure DocWu07;
procedure DocWu08;
procedure DocWu09;
procedure DocWu10;
procedure DocWu10a;
procedure DocWu10b;
procedure DocWu10c;
procedure DocWu11;
procedure DocWu12;
procedure DocWu13;
procedure DocWu14;
procedure DocWu15;
procedure DocWu16;
procedure DocWu17;
procedure DocWu17a;
procedure DocWu17b;
procedure DocWu18;
procedure DocWu19;
procedure DocWu19a;
procedure DocWu19b;
procedure DocWu20;
procedure DocWu20a;
procedure DocWu20b;
procedure DocWu21;
procedure DocWu21a;
procedure DocWu22;
procedure DocWu23;
procedure DocWu24;
procedure DocWu24a;
procedure DocWu24b;
procedure DocWuOpts1;
procedure DocWuOpts2;
procedure DocWuOpts3;
procedure DocWuOpts4;
procedure DocWuOpts5;
procedure DocWuOpts5a;
procedure DocWuEnd;

variable healing;
variable Only_Once := 1;
variable hostile;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure start
begin
    if (Only_Once) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 20);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_PARTY_MACRAE_AGGRESSIVE);
        Only_Once := 0;
    end
    if (script_action == talk_proc) then begin
        call do_dialogue();
    end
    else begin
        if (script_action == destroy_proc) then begin
            if (source_obj == dude_obj) then begin
                if (((global_var(GVAR_GECKO_SKEETER_PART) + global_var(GVAR_GECKO_REQ_FORM)) >= 25) and ((global_var(GVAR_GECKO_REQ_FORM) > (2 * global_var(GVAR_GECKO_SKEETER_PART))) or (global_var(GVAR_SIERRA_LOCKOUT) == 1))) then begin
                    set_global_var(GVAR_SIERRA_LOCKOUT, 1);
                    set_global_var(GVAR_SIERRA_PASSWORD, 0);
                end
                if (((global_var(GVAR_GECKO_SKEETER_PART) + global_var(GVAR_GECKO_REQ_FORM)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GECKO_REQ_FORM))) or (global_var(GVAR_SIERRA_PASSWORD) == 1))) then begin
                    set_global_var(GVAR_SIERRA_PASSWORD, 1);
                    set_global_var(GVAR_SIERRA_LOCKOUT, 0);
                end
                set_global_var(GVAR_GECKO_SKEETER_PART, global_var(GVAR_GECKO_SKEETER_PART) + 1);
                if ((global_var(GVAR_GECKO_SKEETER_PART) % 6) == 0) then begin
                    set_global_var(GVAR_BRAIN_BOT_BRAIN, global_var(GVAR_BRAIN_BOT_BRAIN) + 1);
                end
            end
        end
        else begin
            if (script_action == critter_proc) then begin
                if (hostile) then begin
                    hostile := 0;
                    attack(dude_obj);
                end
            end
            else begin
                if ((script_action == look_at_proc) or (script_action == description_proc)) then begin
                end
                else begin
                    if (script_action == pickup_proc) then begin
                        hostile := 1;
                    end
                    else begin
                        if (script_action == timed_event_proc) then begin
                            if (fixed_param == 1) then begin
                                if ((healing == 1) or (healing == 3)) then begin
                                    float_msg(dude_obj, message_str(SCRIPT_GCPACOFF, 138), FLOAT_MSG_RED);
                                end
                                else begin
                                    if (healing == 2) then begin
                                        float_msg(dude_obj, message_str(SCRIPT_GCPACOFF, 152), FLOAT_MSG_RED);
                                    end
                                    else begin
                                        if (healing == 4) then begin
                                            float_msg(dude_obj, message_str(SCRIPT_GCPACOFF, 175), FLOAT_MSG_RED);
                                        end
                                        else begin
                                            if (healing == 5) then begin
                                                float_msg(self_obj, message_str(SCRIPT_GCPACOFF, 150), FLOAT_MSG_YELLOW);
                                            end
                                            else begin
                                                if (healing == 6) then begin
                                                    float_msg(self_obj, message_str(SCRIPT_GCPACOFF, 178), FLOAT_MSG_YELLOW);
                                                end
                                            end
                                        end
                                    end
                                end
                                add_timer_event(self_obj, game_ticks(3), 2);
                            end
                            else begin
                                if (fixed_param == 2) then begin
                                    if (healing < 4) then begin
                                        float_msg(self_obj, message_str(SCRIPT_GCPACOFF, 139), FLOAT_MSG_YELLOW);
                                    end
                                    else begin
                                        if (healing == 4) then begin
                                            float_msg(self_obj, message_str(SCRIPT_GCPACOFF, 176), FLOAT_MSG_YELLOW);
                                        end
                                    end
                                    add_timer_event(self_obj, game_ticks(3), 3);
                                end
                                else begin
                                    if (fixed_param == 3) then begin
                                        if (healing == 1) then begin
                                            if (dude_gender == 0) then begin
                                                float_msg(self_obj, message_str(SCRIPT_GCPACOFF, 140), FLOAT_MSG_YELLOW);
                                            end
                                            else begin
                                                float_msg(self_obj, message_str(SCRIPT_GCPACOFF, 141), FLOAT_MSG_YELLOW);
                                            end
                                        end
                                        else begin
                                            if (healing == 2) then begin
                                                float_msg(self_obj, message_str(SCRIPT_GCPACOFF, 153), FLOAT_MSG_YELLOW);
                                            end
                                            else begin
                                                if (healing == 3) then begin
                                                    if (dude_gender == 0) then begin
                                                        float_msg(self_obj, message_str(SCRIPT_GCPACOFF, 167), FLOAT_MSG_YELLOW);
                                                    end
                                                    else begin
                                                        float_msg(self_obj, message_str(SCRIPT_GCPACOFF, 168), FLOAT_MSG_YELLOW);
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure do_dialogue
begin
    call get_reaction();
    start_gdialog(400, self_obj, 4, -1, -1);
    gsay_start;
    healing := 0;
    if (local_var(5) == 1) then begin
        call DocWu00();
    end
    else begin
        if (local_var(6) == 1) then begin
            call DocWu01();
        end
        else begin
            if (local_var(7) == 1) then begin
                call DocWu02();
            end
            else begin
                call DocWu03();
            end
        end
    end
    gsay_end;
    end_dialogue;
    if (healing) then begin
        use_obj(dude_obj);
        add_timer_event(self_obj, game_ticks(2), 1);
    end
end

procedure social_skills
begin
    call get_reaction();
    dialogue_system_enter;
end

procedure DocWu00
begin
    variable LVar0 := 0;
    set_local_var(4, 1);
    set_local_var(5, 1);
    if (dude_gender == 0) then begin
        gsay_reply(SCRIPT_GCPACOFF, message_str(SCRIPT_GCPACOFF, 102));
    end
    else begin
        gsay_reply(SCRIPT_GCPACOFF, message_str(SCRIPT_GCPACOFF, 103));
    end
    giq_option(7, SCRIPT_GCPACOFF, 106, DocWu04, NEUTRAL_REACTION);
    call DocWuOpts1();
    giq_option(4, SCRIPT_GCPACOFF, 109, DocWu07, NEUTRAL_REACTION);
    call DocWuOpts2();
    giq_option(4, SCRIPT_GCPACOFF, 111, DocWu09, NEUTRAL_REACTION);
    call DocWuOpts3();
end

procedure DocWu01
begin
    set_local_var(6, 1);
    gsay_reply(SCRIPT_GCPACOFF, 113);
    giq_option(7, SCRIPT_GCPACOFF, 114, DocWu11, NEUTRAL_REACTION);
    call DocWuOpts1();
    giq_option(4, SCRIPT_GCPACOFF, 115, DocWu12, NEUTRAL_REACTION);
    call DocWuOpts2();
    giq_option(4, SCRIPT_GCPACOFF, 116, DocWu09, NEUTRAL_REACTION);
    call DocWuOpts3();
end

procedure DocWu02
begin
    set_local_var(7, 1);
    gsay_reply(SCRIPT_GCPACOFF, 117);
    giq_option(7, SCRIPT_GCPACOFF, 118, DocWu13, NEUTRAL_REACTION);
    call DocWuOpts1();
    giq_option(4, SCRIPT_GCPACOFF, 119, DocWu12, NEUTRAL_REACTION);
    call DocWuOpts2();
    giq_option(4, SCRIPT_GCPACOFF, 120, DocWu14, NEUTRAL_REACTION);
    call DocWuOpts3();
end

procedure DocWu03
begin
    set_local_var(5, 0);
    set_local_var(6, 0);
    set_local_var(7, 0);
    gsay_reply(SCRIPT_GCPACOFF, 121);
    giq_option(7, SCRIPT_GCPACOFF, 122, DocWu15, NEUTRAL_REACTION);
    call DocWuOpts1();
    giq_option(4, SCRIPT_GCPACOFF, 123, DocWu12, NEUTRAL_REACTION);
    call DocWuOpts2();
    giq_option(4, SCRIPT_GCPACOFF, 124, DocWu14, NEUTRAL_REACTION);
    call DocWuOpts3();
end

procedure DocWu04
begin
    gsay_reply(SCRIPT_GCPACOFF, 125);
    giq_option(7, SCRIPT_GCPACOFF, 126, DocWu16, NEUTRAL_REACTION);
    call DocWuOpts4();
end

procedure DocWu05
begin
    gsay_reply(SCRIPT_GCPACOFF, 130);
    giq_option(0, SCRIPT_GCPACOFF, 101, DocWuEnd, NEUTRAL_REACTION);
end

procedure DocWu06
begin
    gsay_reply(SCRIPT_GCPACOFF, 131);
    giq_option(0, SCRIPT_GCPACOFF, 100, DocWu06a, NEUTRAL_REACTION);
end

procedure DocWu06a
begin
    healing := 1;
end

procedure DocWu07
begin
    gsay_reply(SCRIPT_GCPACOFF, 142);
    call DocWuOpts4();
end

procedure DocWu08
begin
    gsay_reply(SCRIPT_GCPACOFF, 143);
    giq_option(0, SCRIPT_GCPACOFF, 101, DocWuEnd, NEUTRAL_REACTION);
end

procedure DocWu09
begin
    gsay_reply(SCRIPT_GCPACOFF, 144);
    giq_option(4, SCRIPT_GCPACOFF, 145, DocWu06, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_GCPACOFF, 146, DocWu23, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_GCPACOFF, 147, DocWu24, NEUTRAL_REACTION);
end

procedure DocWu10
begin
    gsay_reply(SCRIPT_GCPACOFF, 148);
    giq_option(0, SCRIPT_GCPACOFF, 100, DocWu10a, NEUTRAL_REACTION);
end

procedure DocWu10a
begin
    gsay_reply(SCRIPT_GCPACOFF, 151);
    giq_option(0, SCRIPT_GCPACOFF, 100, DocWu10c, NEUTRAL_REACTION);
end

procedure DocWu10b
begin
    healing := 5;
end

procedure DocWu10c
begin
    healing := 2;
end

procedure DocWu11
begin
    gsay_reply(SCRIPT_GCPACOFF, 154);
    call DocWuOpts4();
end

procedure DocWu12
begin
    gsay_reply(SCRIPT_GCPACOFF, 155);
    call DocWuOpts4();
end

procedure DocWu13
begin
    gsay_reply(SCRIPT_GCPACOFF, 156);
    call DocWuOpts4();
end

procedure DocWu14
begin
    gsay_reply(SCRIPT_GCPACOFF, 157);
    giq_option(4, SCRIPT_GCPACOFF, 158, DocWu06, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_GCPACOFF, 159, DocWu23, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_GCPACOFF, 160, DocWu24, NEUTRAL_REACTION);
end

procedure DocWu15
begin
    gsay_reply(SCRIPT_GCPACOFF, 161);
    giq_option(4, SCRIPT_GCPACOFF, 162, DocWu06, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_GCPACOFF, 163, DocWu23, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_GCPACOFF, 160, DocWu24, NEUTRAL_REACTION);
end

procedure DocWu16
begin
    gsay_reply(SCRIPT_GCPACOFF, 164);
    giq_option(4, SCRIPT_GCPACOFF, 162, DocWu06, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_GCPACOFF, 163, DocWu23, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_GCPACOFF, 160, DocWu24, NEUTRAL_REACTION);
end

procedure DocWu17
begin
    gsay_reply(SCRIPT_GCPACOFF, 165);
    giq_option(0, SCRIPT_GCPACOFF, 100, DocWu17a, NEUTRAL_REACTION);
end

procedure DocWu17a
begin
    gsay_reply(SCRIPT_GCPACOFF, 166);
    giq_option(0, SCRIPT_GCPACOFF, 100, DocWu17b, NEUTRAL_REACTION);
end

procedure DocWu17b
begin
    healing := 3;
end

procedure DocWu18
begin
    gsay_reply(SCRIPT_GCPACOFF, 169);
    giq_option(0, SCRIPT_GCPACOFF, 101, DocWuEnd, NEUTRAL_REACTION);
end

procedure DocWu19
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    LVar1 := get_critter_stat(dude_obj, STAT_max_hp);
    LVar0 := get_critter_stat(dude_obj, STAT_current_hp);
    if (LVar0 == LVar1) then begin
        gsay_reply(SCRIPT_GCPACOFF, 170);
        giq_option(0, SCRIPT_GCPACOFF, 101, DocWuEnd, NEUTRAL_REACTION);
    end
    else begin
        if (LVar0 > (LVar1 / 2)) then begin
            call DocWu19a();
        end
        else begin
            call DocWu19b();
        end
    end
end

procedure DocWu19a
begin
    gsay_reply(SCRIPT_GCPACOFF, 171);
    giq_option(4, SCRIPT_GCPACOFF, 127, DocWu06, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_GCPACOFF, 173, DocWu23, NEUTRAL_REACTION);
end

procedure DocWu19b
begin
    gsay_reply(SCRIPT_GCPACOFF, 171);
    giq_option(4, SCRIPT_GCPACOFF, 127, DocWu06, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_GCPACOFF, 173, DocWu18, NEUTRAL_REACTION);
end

procedure DocWu20
begin
    gsay_reply(SCRIPT_GCPACOFF, 174);
    giq_option(0, SCRIPT_GCPACOFF, 100, DocWu20a, NEUTRAL_REACTION);
end

procedure DocWu20a
begin
    gsay_reply(SCRIPT_GCPACOFF, 137);
    giq_option(0, SCRIPT_GCPACOFF, 100, DocWu20b, NEUTRAL_REACTION);
end

procedure DocWu20b
begin
    healing := 4;
end

procedure DocWu21
begin
    gsay_reply(SCRIPT_GCPACOFF, 177);
    giq_option(0, SCRIPT_GCPACOFF, 100, DocWu21a, NEUTRAL_REACTION);
end

procedure DocWu21a
begin
    healing := 6;
end

procedure DocWu22
begin
    gsay_reply(SCRIPT_GCPACOFF, 179);
    giq_option(0, SCRIPT_GCPACOFF, 101, DocWuEnd, NEUTRAL_REACTION);
end

procedure DocWu23
begin
    gsay_reply(SCRIPT_GCPACOFF, 180);
    giq_option(0, SCRIPT_GCPACOFF, 101, DocWuEnd, NEUTRAL_REACTION);
end

procedure DocWu24
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    LVar1 := get_critter_stat(dude_obj, STAT_max_hp);
    LVar0 := get_critter_stat(dude_obj, STAT_current_hp);
    if (LVar0 == LVar1) then begin
        gsay_reply(SCRIPT_GCPACOFF, 170);
        giq_option(0, SCRIPT_GCPACOFF, 101, DocWuEnd, NEUTRAL_REACTION);
    end
    else begin
        if (LVar0 > (LVar1 / 2)) then begin
            call DocWu24a();
        end
        else begin
            call DocWu24b();
        end
    end
end

procedure DocWu24a
begin
    gsay_reply(SCRIPT_GCPACOFF, 181);
    giq_option(4, SCRIPT_GCPACOFF, 127, DocWu17, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_GCPACOFF, 173, DocWu23, NEUTRAL_REACTION);
end

procedure DocWu24b
begin
    gsay_reply(SCRIPT_GCPACOFF, 182);
    giq_option(4, SCRIPT_GCPACOFF, 183, DocWu06, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_GCPACOFF, 173, DocWu23, NEUTRAL_REACTION);
end

procedure DocWuOpts1
begin
    giq_option(4, SCRIPT_GCPACOFF, 107, DocWu05, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_GCPACOFF, 108, DocWu06, NEUTRAL_REACTION);
end

procedure DocWuOpts2
begin
    giq_option(4, SCRIPT_GCPACOFF, 110, DocWu08, NEUTRAL_REACTION);
end

procedure DocWuOpts3
begin
    giq_option(-3, SCRIPT_GCPACOFF, 112, DocWu10, NEUTRAL_REACTION);
    giq_option(-3, SCRIPT_GCPACOFF, 184, DocWuEnd, NEUTRAL_REACTION);
end

procedure DocWuOpts4
begin
    giq_option(4, SCRIPT_GCPACOFF, 127, DocWu17, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_GCPACOFF, 128, DocWu18, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_GCPACOFF, 129, DocWu19, NEUTRAL_REACTION);
end

procedure DocWuOpts5
begin
    gsay_reply(SCRIPT_GCPACOFF, 132);
    giq_option(7, SCRIPT_GCPACOFF, 133, DocWuOpts5a, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_GCPACOFF, 134, DocWu21, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_GCPACOFF, 135, DocWu22, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_GCPACOFF, 136, DocWuOpts5a, NEUTRAL_REACTION);
end

procedure DocWuOpts5a
begin
    if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
        call DocWu20();
    end
    else begin
        call DocWu21();
    end
end

procedure DocWuEnd
begin
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * dude_charisma) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence)));
        if (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality)) then begin
            if (global_var(GVAR_BRAIN_BOT_BRAIN) > 0) then begin
                set_local_var(0, local_var(0) + global_var(GVAR_BRAIN_BOT_BRAIN));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(GVAR_BRAIN_BOT_BRAIN));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(GVAR_BRAIN_BOT_BRAIN));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(GVAR_BRAIN_BOT_BRAIN));
            end
        end
        if (global_var(GVAR_GECKO_ECON_DISK) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(GVAR_GECKO_SKEETER_PART) + global_var(GVAR_GECKO_REQ_FORM)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GECKO_REQ_FORM))) or (global_var(GVAR_SIERRA_PASSWORD) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(GVAR_GECKO_SKEETER_PART) + global_var(GVAR_GECKO_REQ_FORM)) >= 25) and ((global_var(GVAR_GECKO_REQ_FORM) > (2 * global_var(GVAR_GECKO_SKEETER_PART))) or (global_var(GVAR_SIERRA_LOCKOUT) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(SCRIPT_BSCOMP3, random(100, 105));
end
