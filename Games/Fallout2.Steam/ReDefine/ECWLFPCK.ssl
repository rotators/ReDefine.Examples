variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure critter_p_proc;
procedure timed_event_p_proc;

variable In_Timed_Event;
variable Need_Howl;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure critter_p_proc
begin
    variable LVar0 := 0;
    if (local_var(0) == 1) then begin
        if (map_var(2) >= 10) then begin
            LVar0 := tile_num_in_direction(dude_tile, random(0, 5), 1);
            animate_move_obj_to_tile(self_obj, LVar0, 1);
            attack(dude_obj);
        end
        else begin
            LVar0 := tile_num_in_direction(dude_tile, random(0, 5), 6);
            animate_move_obj_to_tile(self_obj, LVar0, 0);
        end
        if (Need_Howl == 0) then begin
            Need_Howl := 1;
            add_timer_event(self_obj, game_ticks(random(10 - 4, 10 + 4)), 2);
        end
    end
    else begin
        if (tile_distance_objs(self_obj, dude_obj) < 5) then begin
            if (local_var(1) == 0) then begin
                set_local_var(1, 1);
                set_map_var(2, map_var(2) + 1);
                set_local_var(0, 1);
                float_msg(self_obj, g_mstr(930), FLOAT_MSG_YELLOW);
            end
            if (map_var(1) == 0) then begin
                set_map_var(1, 1);
            end
        end
        else begin
            if (map_var(1) == 1) then begin
                LVar0 := tile_num_in_direction(dude_tile, random(0, 5), 6);
                animate_move_obj_to_tile(self_obj, LVar0, 1);
                if (Need_Howl == 0) then begin
                    Need_Howl := 1;
                    add_timer_event(self_obj, game_ticks(random(10 - 4, 10 + 4)), 2);
                end
            end
            else begin
                if (In_Timed_Event == 0) then begin
                    In_Timed_Event := 1;
                    add_timer_event(self_obj, game_ticks(random(7 - 3, 7 + 3)), 1);
                end
            end
        end
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(2, 6)), 0);
        In_Timed_Event := 0;
    end
    if (fixed_param == 2) then begin
        Need_Howl := 0;
        float_msg(self_obj, g_mstr(930), FLOAT_MSG_YELLOW);
    end
end
