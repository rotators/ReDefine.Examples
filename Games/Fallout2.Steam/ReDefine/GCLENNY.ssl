variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure checkarea;
procedure HealPlayer;
procedure PayDude;
procedure PartyFree;
procedure HowMany;
procedure Node901;
procedure Node910;
procedure Node920;
procedure Node922;
procedure Node924;
procedure Node926;
procedure Node929;
procedure Node930;
procedure Node931;
procedure Node932;
procedure Node933;
procedure Node934;
procedure Node935;
procedure Node936;
procedure Node937;
procedure Node938;
procedure Node939;
procedure Node940;
procedure Node951;
procedure Node953;
procedure Node954;
procedure Node960;
procedure Node961;
procedure Node962;
procedure Node963;
procedure Node964;
procedure Node965;
procedure Node966;
procedure Node995;
procedure Node996;
procedure Node997;
procedure Node998;
procedure Node999;
procedure Node1a;
procedure Node001;
procedure Node002;
procedure Node02a;
procedure Node003;
procedure Node004;
procedure Node04a;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node10a;
procedure Node010;
procedure Node11a;
procedure Node011;
procedure Node12a;
procedure Node012;
procedure Node13a;
procedure Node013;
procedure Node14a;
procedure Node014;
procedure Node015;
procedure Node16a;
procedure Node016;
procedure Node17a;
procedure Node017;
procedure Node18a;
procedure Node018;
procedure Node19a;
procedure Node019;
procedure Node20a;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node070;
procedure Node071;
procedure Node072;
procedure Node073;
procedure Node074;
procedure Node075;
procedure Node076;
procedure Node800;
procedure Node1000;
procedure Node1001;
procedure Node1002;
procedure Node1003;
procedure Node1004;
procedure Node1005;
procedure Node1006;
procedure Node1007;
procedure Node1008;
procedure Node1009;
procedure Node1010;
procedure Node1100;

variable Only_Once;
variable area;
variable here;
variable k;
variable ss;
variable visit_04_before;
variable visit_14_before;
variable from6;
variable Heal_Cost;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if ((local_var(5) == 2) or (local_var(6) == 1) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack(dude_obj);
    end
    else begin
        if (party_member_obj(16777323) != 0) then begin
            debug_msg("Lenny_In_Party == " + (party_member_obj(16777323) != 0) + ". local_var(LVAR_never_again) == " + local_var(14));
            if (global_var(GVAR_PLAYER_REPUTATION) < -100) then begin
                call Node070();
                debug_msg("LENNY: Bad Karma");
            end
            else begin
                if (global_var(GVAR_CHILDKILLER_REPUTATION) >= 2) then begin
                    call Node071();
                    debug_msg("LENNY: Childkiller");
                end
                else begin
                    if (global_var(GVAR_REPUTATION_SLAVER) == 1) then begin
                        call Node073();
                        debug_msg("LENNY: Slaver");
                    end
                    else begin
                        if ((global_var(GVAR_VAULT_GECKO_PLANT) == 8) or (global_var(GVAR_GECKO_MELTDOWN) > 0) or (global_var(GVAR_PLANT_SCHEDULED_FOR_CHANGE) == 1)) then begin
                            call Node074();
                            debug_msg("LENNY: Destroyed Plant");
                        end
                        else begin
                            if (dude_charisma <= 1) then begin
                                call Node075();
                                debug_msg("LENNY: Player Ugly");
                            end
                            else begin
                                if ((cur_town == 5) and (global_var(GVAR_ENEMY_GECKO) == 1)) then begin
                                    call Node076();
                                    debug_msg("LENNY: Causing trouble in Gecko");
                                end
                                else begin
                                    if ((local_var(10) != 0) == 0) then begin
                                        if (((local_var(10) != 0) == 0) and ((global_var(GVAR_PARTY_NO_FOLLOW) != 0) == 0)) then begin
                                            if (local_var(11) == 0) then begin
                                                set_local_var(11, 6);
                                            end
                                            if (tile_distance_objs(self_obj, dude_obj) > (3 * local_var(11) / 2)) then begin
                                                if (anim_busy(self_obj) == 0) then begin
                                                    dest_tile := tile_num_in_direction(tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(11)), random(0, 5), random(0, 2));
                                                    if (tile_distance_objs(self_obj, dude_obj) > (3 * local_var(11) / 2 * 2)) then begin
                                                        animate_move_obj_to_tile(self_obj, dest_tile, 1);
                                                    end
                                                    else begin
                                                        animate_move_obj_to_tile(self_obj, dest_tile, 0);
                                                    end
                                                end
                                                else begin
                                                    if (tile_distance(tile_num(self_obj), dude_tile) < tile_distance(tile_num(self_obj), dest_tile)) then begin
                                                        reg_anim_func(2, self_obj);
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        else begin
            if ((cur_town == 5) and (global_var(GVAR_ENEMY_GECKO) == 1)) then begin
                call Node998();
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure push_p_proc
begin
    k := 2300 + random(0, 7);
    float_msg(self_obj, mstr(k), FLOAT_MSG_RED);
end

procedure talk_p_proc
begin
    visit_04_before := 0;
    visit_14_before := 0;
    if (local_var(2) == 0) then begin
        set_local_var(2, 1);
        set_local_var(3, (dude_charisma - self_charisma) * 5);
        debug_msg("Base Reaction == " + local_var(3));
    end
    Static_Reaction := 0;
    set_local_var(0, 0);
    debug_msg("Start Reaction == " + local_var(0));
    if (reaction_bonus_karma >= 0) then begin
        reaction_bonus_karma := reaction_bonus_karma / 1000;
    end
    else begin
        reaction_bonus_karma := -1 * (-1 * reaction_bonus_karma / 1000);
    end
    if (global_var(GVAR_TOWN_REP_GECKO) >= 0) then begin
        reaction_bonus_town_rep := global_var(GVAR_TOWN_REP_GECKO) / 2;
    end
    else begin
        reaction_bonus_town_rep := -1 * (-1 * global_var(GVAR_TOWN_REP_GECKO) / 2);
    end
    if (has_trait(TRAIT_TRAIT, dude_obj, TRAIT_sex_appeal)) then begin
        if (dude_gender == self_gender) then begin
            Static_Reaction := Static_Reaction + -20;
        end
        else begin
            Static_Reaction := Static_Reaction + 20;
        end
        debug_msg("Sex Appeal Bonus == " + Static_Reaction);
    end
    else begin
        debug_msg("Sex Appeal Bonus == 0");
    end
    if (Evil_Critter == 1) then begin
        Static_Reaction := Static_Reaction - reaction_bonus_karma;
        debug_msg("Karma Reaction Bonus == " + Static_Reaction);
        Static_Reaction := Static_Reaction - reaction_bonus_town_rep;
        debug_msg("Town Rep Bonus == " + Static_Reaction);
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (global_var(GVAR_KARMA_HOLY_WARRIOR) == 1) then begin
            Static_Reaction := Static_Reaction - 20;
        end
        else begin
            if (global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES) == 1) then begin
                Static_Reaction := Static_Reaction - 15;
            end
            else begin
                if (global_var(GVAR_KARMA_SHIELD_OF_HOPE) == 1) then begin
                    Static_Reaction := Static_Reaction - 10;
                end
                else begin
                    if (global_var(GVAR_KARMA_DEFENDER) == 1) then begin
                        Static_Reaction := Static_Reaction - 5;
                    end
                    else begin
                        if (global_var(GVAR_KARMA_WANDERER) == 1) then begin
                            Static_Reaction := Static_Reaction - 0;
                        end
                        else begin
                            if (global_var(GVAR_KARMA_BETRAYER) == 1) then begin
                                Static_Reaction := Static_Reaction - -5;
                            end
                            else begin
                                if (global_var(GVAR_KARMA_SWORD_OF_DESPAIR) == 1) then begin
                                    Static_Reaction := Static_Reaction - -10;
                                end
                                else begin
                                    if (global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE) == 1) then begin
                                        Static_Reaction := Static_Reaction - -15;
                                    end
                                    else begin
                                        Static_Reaction := Static_Reaction - -20;
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        debug_msg("Bad Person Reaction Bonus == " + Static_Reaction);
    end
    else begin
        Static_Reaction := Static_Reaction + reaction_bonus_karma;
        debug_msg("Karma Reaction Bonus == " + Static_Reaction);
        Static_Reaction := Static_Reaction + reaction_bonus_town_rep;
        debug_msg("Town Rep Bonus == " + Static_Reaction);
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (global_var(GVAR_KARMA_HOLY_WARRIOR) == 1) then begin
            Static_Reaction := Static_Reaction + 20;
        end
        else begin
            if (global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES) == 1) then begin
                Static_Reaction := Static_Reaction + 15;
            end
            else begin
                if (global_var(GVAR_KARMA_SHIELD_OF_HOPE) == 1) then begin
                    Static_Reaction := Static_Reaction + 10;
                end
                else begin
                    if (global_var(GVAR_KARMA_DEFENDER) == 1) then begin
                        Static_Reaction := Static_Reaction + 5;
                    end
                    else begin
                        if (global_var(GVAR_KARMA_WANDERER) == 1) then begin
                            Static_Reaction := Static_Reaction + 0;
                        end
                        else begin
                            if (global_var(GVAR_KARMA_BETRAYER) == 1) then begin
                                Static_Reaction := Static_Reaction + -5;
                            end
                            else begin
                                if (global_var(GVAR_KARMA_SWORD_OF_DESPAIR) == 1) then begin
                                    Static_Reaction := Static_Reaction + -10;
                                end
                                else begin
                                    if (global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE) == 1) then begin
                                        Static_Reaction := Static_Reaction + -15;
                                    end
                                    else begin
                                        Static_Reaction := Static_Reaction + -20;
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        debug_msg("Good Person Reaction Bonus == " + Static_Reaction);
    end
    if (Slavery_Tolerant == 0) then begin
        if (global_var(GVAR_REPUTATION_SLAVER) == 1) then begin
            Static_Reaction := Static_Reaction + (2 * -25);
        end
    end
    else begin
        if (Slavery_Tolerant == 1) then begin
            if (global_var(GVAR_REPUTATION_SLAVER) == 1) then begin
                Static_Reaction := Static_Reaction + -25;
            end
        end
        else begin
            if (Slavery_Tolerant == 3) then begin
                if (global_var(GVAR_REPUTATION_SLAVER) == 1) then begin
                    Static_Reaction := Static_Reaction - -25;
                end
            end
        end
    end
    debug_msg("Slaver + Aligned Reaction == " + Static_Reaction);
    Static_Reaction := Static_Reaction + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence));
    debug_msg("Presence Reaction == " + Static_Reaction);
    if (global_var(GVAR_CHILDKILLER_REPUTATION) >= 2) then begin
        Static_Reaction := Static_Reaction + -30;
    end
    debug_msg("Childkiller Reaction == " + Static_Reaction);
    set_local_var(0, local_var(3) + Static_Reaction);
    debug_msg("Initial Reaction == " + local_var(0));
    call checkarea();
    if (local_var(6) == 1) then begin
        call Node998();
    end
    else begin
        if (local_var(4) == 0) then begin
            start_gdialog(139, self_obj, 4, -1, -1);
            gsay_start;
            call Node001();
            gsay_end;
            end_dialogue;
        end
        else begin
            if (local_var(14) > 0) then begin
                float_msg(self_obj, mstr(3005), FLOAT_MSG_RED);
            end
            else begin
                if ((party_member_obj(16777323) != 0) or (local_var(10) != 0)) then begin
                    start_gdialog(139, self_obj, 4, -1, -1);
                    gsay_start;
                    call Node1000();
                    gsay_end;
                    end_dialogue;
                end
                else begin
                    if (dude_is_stupid) then begin
                        call Node003();
                    end
                    else begin
                        start_gdialog(139, self_obj, 4, -1, -1);
                        gsay_start;
                        call Node001();
                        gsay_end;
                        end_dialogue;
                    end
                end
            end
        end
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (critter_kill_type(self_obj) == KILL_TYPE_children_kills) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(GVAR_TOWN_REP_GECKO, global_var(GVAR_TOWN_REP_GECKO) + -8);
                debug_msg("Added " + -8 + " to Town Rep");
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(GVAR_TOWN_REP_GECKO, global_var(GVAR_TOWN_REP_GECKO) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(15) == 0) then begin
        set_local_var(15, 1);
        display_mstr(100);
    end
    else begin
        display_mstr(101);
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(101);
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (obj_in_party(self_obj)) then begin
            debug_msg("abandon party: " + self_name);
            party_remove(self_obj);
        end
        if ((obj_pid(self_obj) == 16777380) or (obj_pid(self_obj) == 16777379)) then begin
            debug_msg("start: set_dude_was_married");
            if ((global_var(GVAR_PLAYER_MARRIED) != 0) and ((global_var(GVAR_PLAYER_WAS_MARRIED) != 0) == 0)) then begin
                debug_msg("   GVAR_PLAYER_WAS_MARRIED before == " + global_var(GVAR_PLAYER_WAS_MARRIED));
                set_global_var(GVAR_PLAYER_WAS_MARRIED, global_var(GVAR_PLAYER_MARRIED));
                debug_msg("   GVAR_PLAYER_WAS_MARRIED after == " + global_var(GVAR_PLAYER_WAS_MARRIED));
                set_global_var(GVAR_PLAYER_MARRIED, 0);
            end
            debug_msg("finished: set_dude_was_married");
        end
        if ((local_var(12) != -1) and (has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) == 0)) then begin
            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, local_var(12));
            set_local_var(12, -1);
        end
        debug_msg("" + self_name + " has abandoned the party");
        set_local_var(5, 2);
        if (CUR_MAP_GECKSETL) then begin
            set_global_var(GVAR_ENEMY_GECKO, 1);
        end
        if (CUR_MAP_GECKJUNK) then begin
            set_global_var(GVAR_ENEMY_GECKO, 1);
        end
        if (CUR_MAP_GECKPWPL) then begin
            set_global_var(GVAR_ENEMY_GECKO, 1);
        end
        if (CUR_MAP_GECKTUNL) then begin
            set_global_var(GVAR_ENEMY_GECKO, 1);
        end
    end
end

procedure map_enter_p_proc
begin
    if ((CUR_MAP_MODINN) or (CUR_MAP_V15ENT) or (CUR_MAP_V15ENTB)) then begin
        if ((elevation(self_obj) != dude_elevation) and (local_var(10) != 0)) then begin
            move_to(self_obj, tile_num(self_obj), dude_elevation);
        end
    end
    if (party_member_obj(16777323) != 0) then begin
    end
    else begin
        Only_Once := 0;
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 49);
    end
end

procedure map_update_p_proc
begin
    if (combat_is_initialized == 0) then begin
        if (anim_busy(self_obj) == 0) then begin
            if (obj_in_party(self_obj)) then begin
                if (chem_use_level(self_obj) == 1) then begin
                    if ((100 * get_critter_stat(self_obj, STAT_current_hp) / get_critter_stat(self_obj, STAT_max_hp)) <= 60) then begin
                        global_temp := 1;
                        if (obj_is_carrying_obj_pid(self_obj, 144)) then begin
                            if ((global_temp == 0) and (combat_is_initialized == 0)) then begin
                                gfade_out(600);
                                if (0 > 0) then begin
                                    game_time_advance(0);
                                end
                                gfade_in(600);
                            end
                            PartyHealingItem := obj_carrying_pid_obj(self_obj, 144);
                            use_obj_on_obj(PartyHealingItem, self_obj);
                            debug_msg(self_name + " used super stimpak.");
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 40)) then begin
                                if ((global_temp == 0) and (combat_is_initialized == 0)) then begin
                                    gfade_out(600);
                                    if (0 > 0) then begin
                                        game_time_advance(0);
                                    end
                                    gfade_in(600);
                                end
                                use_obj_on_obj(obj_carrying_pid_obj(self_obj, 40), self_obj);
                                debug_msg(self_name + " used stimpak.");
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, 273)) then begin
                                    if ((global_temp == 0) and (combat_is_initialized == 0)) then begin
                                        gfade_out(600);
                                        if (0 > 0) then begin
                                            game_time_advance(0);
                                        end
                                        gfade_in(600);
                                    end
                                    use_obj_on_obj(obj_carrying_pid_obj(self_obj, 273), self_obj);
                                    debug_msg(self_name + " used healing powder.");
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, 91)) then begin
                                        if ((global_temp == 0) and (combat_is_initialized == 0)) then begin
                                            gfade_out(600);
                                            if (0 > 0) then begin
                                                game_time_advance(0);
                                            end
                                            gfade_in(600);
                                        end
                                        use_obj_on_obj(obj_carrying_pid_obj(self_obj, 91), self_obj);
                                        debug_msg(self_name + " used doctor's bag kit.");
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, 47)) then begin
                                            if ((global_temp == 0) and (combat_is_initialized == 0)) then begin
                                                gfade_out(600);
                                                if (0 > 0) then begin
                                                    game_time_advance(0);
                                                end
                                                gfade_in(600);
                                            end
                                            use_obj_on_obj(obj_carrying_pid_obj(self_obj, 47), self_obj);
                                            debug_msg(self_name + " used First Aid kit.");
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                else begin
                    if (chem_use_level(self_obj) == 2) then begin
                        if ((100 * get_critter_stat(self_obj, STAT_current_hp) / get_critter_stat(self_obj, STAT_max_hp)) <= 30) then begin
                            global_temp := 1;
                            if (obj_is_carrying_obj_pid(self_obj, 144)) then begin
                                if ((global_temp == 0) and (combat_is_initialized == 0)) then begin
                                    gfade_out(600);
                                    if (0 > 0) then begin
                                        game_time_advance(0);
                                    end
                                    gfade_in(600);
                                end
                                PartyHealingItem := obj_carrying_pid_obj(self_obj, 144);
                                use_obj_on_obj(PartyHealingItem, self_obj);
                                debug_msg(self_name + " used super stimpak.");
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, 40)) then begin
                                    if ((global_temp == 0) and (combat_is_initialized == 0)) then begin
                                        gfade_out(600);
                                        if (0 > 0) then begin
                                            game_time_advance(0);
                                        end
                                        gfade_in(600);
                                    end
                                    use_obj_on_obj(obj_carrying_pid_obj(self_obj, 40), self_obj);
                                    debug_msg(self_name + " used stimpak.");
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, 273)) then begin
                                        if ((global_temp == 0) and (combat_is_initialized == 0)) then begin
                                            gfade_out(600);
                                            if (0 > 0) then begin
                                                game_time_advance(0);
                                            end
                                            gfade_in(600);
                                        end
                                        use_obj_on_obj(obj_carrying_pid_obj(self_obj, 273), self_obj);
                                        debug_msg(self_name + " used healing powder.");
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, 91)) then begin
                                            if ((global_temp == 0) and (combat_is_initialized == 0)) then begin
                                                gfade_out(600);
                                                if (0 > 0) then begin
                                                    game_time_advance(0);
                                                end
                                                gfade_in(600);
                                            end
                                            use_obj_on_obj(obj_carrying_pid_obj(self_obj, 91), self_obj);
                                            debug_msg(self_name + " used doctor's bag kit.");
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, 47)) then begin
                                                if ((global_temp == 0) and (combat_is_initialized == 0)) then begin
                                                    gfade_out(600);
                                                    if (0 > 0) then begin
                                                        game_time_advance(0);
                                                    end
                                                    gfade_in(600);
                                                end
                                                use_obj_on_obj(obj_carrying_pid_obj(self_obj, 47), self_obj);
                                                debug_msg(self_name + " used First Aid kit.");
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                    else begin
                        if (chem_use_level(self_obj) == 3) then begin
                            if ((100 * get_critter_stat(self_obj, STAT_current_hp) / get_critter_stat(self_obj, STAT_max_hp)) <= 50) then begin
                                global_temp := 1;
                                if (obj_is_carrying_obj_pid(self_obj, 144)) then begin
                                    if ((global_temp == 0) and (combat_is_initialized == 0)) then begin
                                        gfade_out(600);
                                        if (0 > 0) then begin
                                            game_time_advance(0);
                                        end
                                        gfade_in(600);
                                    end
                                    PartyHealingItem := obj_carrying_pid_obj(self_obj, 144);
                                    use_obj_on_obj(PartyHealingItem, self_obj);
                                    debug_msg(self_name + " used super stimpak.");
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, 40)) then begin
                                        if ((global_temp == 0) and (combat_is_initialized == 0)) then begin
                                            gfade_out(600);
                                            if (0 > 0) then begin
                                                game_time_advance(0);
                                            end
                                            gfade_in(600);
                                        end
                                        use_obj_on_obj(obj_carrying_pid_obj(self_obj, 40), self_obj);
                                        debug_msg(self_name + " used stimpak.");
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, 273)) then begin
                                            if ((global_temp == 0) and (combat_is_initialized == 0)) then begin
                                                gfade_out(600);
                                                if (0 > 0) then begin
                                                    game_time_advance(0);
                                                end
                                                gfade_in(600);
                                            end
                                            use_obj_on_obj(obj_carrying_pid_obj(self_obj, 273), self_obj);
                                            debug_msg(self_name + " used healing powder.");
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, 91)) then begin
                                                if ((global_temp == 0) and (combat_is_initialized == 0)) then begin
                                                    gfade_out(600);
                                                    if (0 > 0) then begin
                                                        game_time_advance(0);
                                                    end
                                                    gfade_in(600);
                                                end
                                                use_obj_on_obj(obj_carrying_pid_obj(self_obj, 91), self_obj);
                                                debug_msg(self_name + " used doctor's bag kit.");
                                            end
                                            else begin
                                                if (obj_is_carrying_obj_pid(self_obj, 47)) then begin
                                                    if ((global_temp == 0) and (combat_is_initialized == 0)) then begin
                                                        gfade_out(600);
                                                        if (0 > 0) then begin
                                                            game_time_advance(0);
                                                        end
                                                        gfade_in(600);
                                                    end
                                                    use_obj_on_obj(obj_carrying_pid_obj(self_obj, 47), self_obj);
                                                    debug_msg(self_name + " used First Aid kit.");
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                        else begin
                            if (chem_use_level(self_obj) == 4) then begin
                                if ((100 * get_critter_stat(self_obj, STAT_current_hp) / get_critter_stat(self_obj, STAT_max_hp)) <= 50) then begin
                                    global_temp := 1;
                                    if (obj_is_carrying_obj_pid(self_obj, 144)) then begin
                                        if ((global_temp == 0) and (combat_is_initialized == 0)) then begin
                                            gfade_out(600);
                                            if (0 > 0) then begin
                                                game_time_advance(0);
                                            end
                                            gfade_in(600);
                                        end
                                        PartyHealingItem := obj_carrying_pid_obj(self_obj, 144);
                                        use_obj_on_obj(PartyHealingItem, self_obj);
                                        debug_msg(self_name + " used super stimpak.");
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, 40)) then begin
                                            if ((global_temp == 0) and (combat_is_initialized == 0)) then begin
                                                gfade_out(600);
                                                if (0 > 0) then begin
                                                    game_time_advance(0);
                                                end
                                                gfade_in(600);
                                            end
                                            use_obj_on_obj(obj_carrying_pid_obj(self_obj, 40), self_obj);
                                            debug_msg(self_name + " used stimpak.");
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, 273)) then begin
                                                if ((global_temp == 0) and (combat_is_initialized == 0)) then begin
                                                    gfade_out(600);
                                                    if (0 > 0) then begin
                                                        game_time_advance(0);
                                                    end
                                                    gfade_in(600);
                                                end
                                                use_obj_on_obj(obj_carrying_pid_obj(self_obj, 273), self_obj);
                                                debug_msg(self_name + " used healing powder.");
                                            end
                                            else begin
                                                if (obj_is_carrying_obj_pid(self_obj, 91)) then begin
                                                    if ((global_temp == 0) and (combat_is_initialized == 0)) then begin
                                                        gfade_out(600);
                                                        if (0 > 0) then begin
                                                            game_time_advance(0);
                                                        end
                                                        gfade_in(600);
                                                    end
                                                    use_obj_on_obj(obj_carrying_pid_obj(self_obj, 91), self_obj);
                                                    debug_msg(self_name + " used doctor's bag kit.");
                                                end
                                                else begin
                                                    if (obj_is_carrying_obj_pid(self_obj, 47)) then begin
                                                        if ((global_temp == 0) and (combat_is_initialized == 0)) then begin
                                                            gfade_out(600);
                                                            if (0 > 0) then begin
                                                                game_time_advance(0);
                                                            end
                                                            gfade_in(600);
                                                        end
                                                        use_obj_on_obj(obj_carrying_pid_obj(self_obj, 47), self_obj);
                                                        debug_msg(self_name + " used First Aid kit.");
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure checkarea
begin
    here := tile_num(self_obj);
    area := 0;
    if (tile_distance(here, 17926) < 5) then begin
        area := 1;
    end
    else begin
        if (tile_distance(here, 18100) < 4) then begin
            area := 2;
        end
    end
end

procedure HealPlayer
begin
    Heal_Cost := 30;
    critter_heal(dude_obj, get_critter_stat(dude_obj, STAT_max_hp) - get_critter_stat(dude_obj, STAT_current_hp));
    if ((critter_state(dude_obj) bwand 4) or (critter_state(dude_obj) bwand 8) or (critter_state(dude_obj) bwand 16) or (critter_state(dude_obj) bwand 32)) then begin
        Heal_Cost := 60;
        critter_injure(dude_obj, 4 bwor 8 bwor 16 bwor 32 bwor 8388608);
    end
    gfade_out(600);
    game_time_advance(game_ticks(8 * (60 * (60 * 10))));
    gfade_in(600);
end

procedure PayDude
begin
    k := item_caps_total(dude_obj);
    if (k >= Heal_Cost) then begin
        item_caps_adjust(dude_obj, -Heal_Cost);
    end
    else begin
        item_caps_adjust(dude_obj, -k);
    end
end

procedure PartyFree
begin
    k := 0;
    Heal_Cost := 30;
    if ((get_critter_stat(dude_obj, STAT_max_hp) > get_critter_stat(dude_obj, STAT_current_hp)) or ((critter_state(dude_obj) bwand 4) or (critter_state(dude_obj) bwand 8) or (critter_state(dude_obj) bwand 16) or (critter_state(dude_obj) bwand 32))) then begin
        k := k + 1;
        critter_heal(dude_obj, get_critter_stat(dude_obj, STAT_max_hp) - get_critter_stat(dude_obj, STAT_current_hp));
        critter_injure(dude_obj, 4 bwor 8 bwor 16 bwor 32 bwor 8388608);
    end
    if (party_member_obj(16777278) != 0) then begin
        if ((get_critter_stat(party_member_obj(16777278), STAT_current_hp) < get_critter_stat(party_member_obj(16777278), STAT_max_hp)) or (critter_state(party_member_obj(16777278)) bwand (4 bwor 8 bwor 16 bwor 32))) then begin
            k := k + 1;
            critter_heal(party_member_obj(16777278), get_critter_stat(party_member_obj(16777278), STAT_max_hp) - get_critter_stat(party_member_obj(16777278), STAT_current_hp));
            critter_injure(party_member_obj(16777278), 4 bwor 8 bwor 16 bwor 32 bwor 8388608);
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if ((get_critter_stat(party_member_obj(16777376), STAT_current_hp) < get_critter_stat(party_member_obj(16777376), STAT_max_hp)) or (critter_state(party_member_obj(16777376)) bwand (4 bwor 8 bwor 16 bwor 32))) then begin
            k := k + 1;
            critter_heal(party_member_obj(16777376), get_critter_stat(party_member_obj(16777376), STAT_max_hp) - get_critter_stat(party_member_obj(16777376), STAT_current_hp));
            critter_injure(party_member_obj(16777376), 4 bwor 8 bwor 16 bwor 32 bwor 8388608);
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if ((get_critter_stat(party_member_obj(16777377), STAT_current_hp) < get_critter_stat(party_member_obj(16777377), STAT_max_hp)) or (critter_state(party_member_obj(16777377)) bwand (4 bwor 8 bwor 16 bwor 32))) then begin
            k := k + 1;
            critter_heal(party_member_obj(16777377), get_critter_stat(party_member_obj(16777377), STAT_max_hp) - get_critter_stat(party_member_obj(16777377), STAT_current_hp));
            critter_injure(party_member_obj(16777377), 4 bwor 8 bwor 16 bwor 32 bwor 8388608);
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if ((get_critter_stat(party_member_obj(16777305), STAT_current_hp) < get_critter_stat(party_member_obj(16777305), STAT_max_hp)) or (critter_state(party_member_obj(16777305)) bwand (4 bwor 8 bwor 16 bwor 32))) then begin
            k := k + 1;
            critter_heal(party_member_obj(16777305), get_critter_stat(party_member_obj(16777305), STAT_max_hp) - get_critter_stat(party_member_obj(16777305), STAT_current_hp));
            critter_injure(party_member_obj(16777305), 4 bwor 8 bwor 16 bwor 32 bwor 8388608);
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if ((get_critter_stat(party_member_obj(16777313), STAT_current_hp) < get_critter_stat(party_member_obj(16777313), STAT_max_hp)) or (critter_state(party_member_obj(16777313)) bwand (4 bwor 8 bwor 16 bwor 32))) then begin
            k := k + 1;
            critter_heal(party_member_obj(16777313), get_critter_stat(party_member_obj(16777313), STAT_max_hp) - get_critter_stat(party_member_obj(16777313), STAT_current_hp));
            critter_injure(party_member_obj(16777313), 4 bwor 8 bwor 16 bwor 32 bwor 8388608);
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if ((get_critter_stat(party_member_obj(16777323), STAT_current_hp) < get_critter_stat(party_member_obj(16777323), STAT_max_hp)) or (critter_state(party_member_obj(16777323)) bwand (4 bwor 8 bwor 16 bwor 32))) then begin
            k := k + 1;
            critter_heal(party_member_obj(16777323), get_critter_stat(party_member_obj(16777323), STAT_max_hp) - get_critter_stat(party_member_obj(16777323), STAT_current_hp));
            critter_injure(party_member_obj(16777323), 4 bwor 8 bwor 16 bwor 32 bwor 8388608);
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if ((get_critter_stat(party_member_obj(16777352), STAT_current_hp) < get_critter_stat(party_member_obj(16777352), STAT_max_hp)) or (critter_state(party_member_obj(16777352)) bwand (4 bwor 8 bwor 16 bwor 32))) then begin
            k := k + 1;
            critter_heal(party_member_obj(16777352), get_critter_stat(party_member_obj(16777352), STAT_max_hp) - get_critter_stat(party_member_obj(16777352), STAT_current_hp));
            critter_injure(party_member_obj(16777352), 4 bwor 8 bwor 16 bwor 32 bwor 8388608);
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if ((get_critter_stat(party_member_obj(16777378), STAT_current_hp) < get_critter_stat(party_member_obj(16777378), STAT_max_hp)) or (critter_state(party_member_obj(16777378)) bwand (4 bwor 8 bwor 16 bwor 32))) then begin
            k := k + 1;
            critter_heal(party_member_obj(16777378), get_critter_stat(party_member_obj(16777378), STAT_max_hp) - get_critter_stat(party_member_obj(16777378), STAT_current_hp));
            critter_injure(party_member_obj(16777378), 4 bwor 8 bwor 16 bwor 32 bwor 8388608);
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if ((get_critter_stat(party_member_obj(16777368), STAT_current_hp) < get_critter_stat(party_member_obj(16777368), STAT_max_hp)) or (critter_state(party_member_obj(16777368)) bwand (4 bwor 8 bwor 16 bwor 32))) then begin
            k := k + 1;
            critter_heal(party_member_obj(16777368), get_critter_stat(party_member_obj(16777368), STAT_max_hp) - get_critter_stat(party_member_obj(16777368), STAT_current_hp));
            critter_injure(party_member_obj(16777368), 4 bwor 8 bwor 16 bwor 32 bwor 8388608);
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if ((get_critter_stat(party_member_obj(16777379), STAT_current_hp) < get_critter_stat(party_member_obj(16777379), STAT_max_hp)) or (critter_state(party_member_obj(16777379)) bwand (4 bwor 8 bwor 16 bwor 32))) then begin
            k := k + 1;
            critter_heal(party_member_obj(16777379), get_critter_stat(party_member_obj(16777379), STAT_max_hp) - get_critter_stat(party_member_obj(16777379), STAT_current_hp));
            critter_injure(party_member_obj(16777379), 4 bwor 8 bwor 16 bwor 32 bwor 8388608);
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if ((get_critter_stat(party_member_obj(16777380), STAT_current_hp) < get_critter_stat(party_member_obj(16777380), STAT_max_hp)) or (critter_state(party_member_obj(16777380)) bwand (4 bwor 8 bwor 16 bwor 32))) then begin
            k := k + 1;
            critter_heal(party_member_obj(16777380), get_critter_stat(party_member_obj(16777380), STAT_max_hp) - get_critter_stat(party_member_obj(16777380), STAT_current_hp));
            critter_injure(party_member_obj(16777380), 4 bwor 8 bwor 16 bwor 32 bwor 8388608);
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if ((get_critter_stat(party_member_obj(16777295), STAT_current_hp) < get_critter_stat(party_member_obj(16777295), STAT_max_hp)) or (critter_state(party_member_obj(16777295)) bwand (4 bwor 8 bwor 16 bwor 32))) then begin
            k := k + 1;
            critter_heal(party_member_obj(16777295), get_critter_stat(party_member_obj(16777295), STAT_max_hp) - get_critter_stat(party_member_obj(16777295), STAT_current_hp));
            critter_injure(party_member_obj(16777295), 4 bwor 8 bwor 16 bwor 32 bwor 8388608);
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if ((get_critter_stat(party_member_obj(16777558), STAT_current_hp) < get_critter_stat(party_member_obj(16777558), STAT_max_hp)) or (critter_state(party_member_obj(16777558)) bwand (4 bwor 8 bwor 16 bwor 32))) then begin
            k := k + 1;
            critter_heal(party_member_obj(16777558), get_critter_stat(party_member_obj(16777558), STAT_max_hp) - get_critter_stat(party_member_obj(16777558), STAT_current_hp));
            critter_injure(party_member_obj(16777558), 4 bwor 8 bwor 16 bwor 32 bwor 8388608);
        end
    end
    if (party_member_obj(16777687) != 0) then begin
        if ((get_critter_stat(party_member_obj(16777687), STAT_current_hp) < get_critter_stat(party_member_obj(16777687), STAT_max_hp)) or (critter_state(party_member_obj(16777687)) bwand (4 bwor 8 bwor 16 bwor 32))) then begin
            k := k + 1;
            critter_heal(party_member_obj(16777687), get_critter_stat(party_member_obj(16777687), STAT_max_hp) - get_critter_stat(party_member_obj(16777687), STAT_current_hp));
            critter_injure(party_member_obj(16777687), 4 bwor 8 bwor 16 bwor 32 bwor 8388608);
        end
    end
    if (k > 1) then begin
        Heal_Cost := 60;
    end
    gfade_out(600);
    game_time_advance(game_ticks(8 * (60 * (60 * 10))));
    gfade_in(600);
end

procedure HowMany
begin
    k := 0;
    if (party_member_obj(16777278) != 0) then begin
        if ((get_critter_stat(party_member_obj(16777278), STAT_current_hp) < get_critter_stat(party_member_obj(16777278), STAT_max_hp)) or (critter_state(party_member_obj(16777278)) bwand (4 bwor 8 bwor 16 bwor 32))) then begin
            k := k + 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if ((get_critter_stat(party_member_obj(16777376), STAT_current_hp) < get_critter_stat(party_member_obj(16777376), STAT_max_hp)) or (critter_state(party_member_obj(16777376)) bwand (4 bwor 8 bwor 16 bwor 32))) then begin
            k := k + 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if ((get_critter_stat(party_member_obj(16777377), STAT_current_hp) < get_critter_stat(party_member_obj(16777377), STAT_max_hp)) or (critter_state(party_member_obj(16777377)) bwand (4 bwor 8 bwor 16 bwor 32))) then begin
            k := k + 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if ((get_critter_stat(party_member_obj(16777305), STAT_current_hp) < get_critter_stat(party_member_obj(16777305), STAT_max_hp)) or (critter_state(party_member_obj(16777305)) bwand (4 bwor 8 bwor 16 bwor 32))) then begin
            k := k + 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if ((get_critter_stat(party_member_obj(16777313), STAT_current_hp) < get_critter_stat(party_member_obj(16777313), STAT_max_hp)) or (critter_state(party_member_obj(16777313)) bwand (4 bwor 8 bwor 16 bwor 32))) then begin
            k := k + 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if ((get_critter_stat(party_member_obj(16777323), STAT_current_hp) < get_critter_stat(party_member_obj(16777323), STAT_max_hp)) or (critter_state(party_member_obj(16777323)) bwand (4 bwor 8 bwor 16 bwor 32))) then begin
            k := k + 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if ((get_critter_stat(party_member_obj(16777352), STAT_current_hp) < get_critter_stat(party_member_obj(16777352), STAT_max_hp)) or (critter_state(party_member_obj(16777352)) bwand (4 bwor 8 bwor 16 bwor 32))) then begin
            k := k + 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if ((get_critter_stat(party_member_obj(16777378), STAT_current_hp) < get_critter_stat(party_member_obj(16777378), STAT_max_hp)) or (critter_state(party_member_obj(16777378)) bwand (4 bwor 8 bwor 16 bwor 32))) then begin
            k := k + 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if ((get_critter_stat(party_member_obj(16777368), STAT_current_hp) < get_critter_stat(party_member_obj(16777368), STAT_max_hp)) or (critter_state(party_member_obj(16777368)) bwand (4 bwor 8 bwor 16 bwor 32))) then begin
            k := k + 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if ((get_critter_stat(party_member_obj(16777379), STAT_current_hp) < get_critter_stat(party_member_obj(16777379), STAT_max_hp)) or (critter_state(party_member_obj(16777379)) bwand (4 bwor 8 bwor 16 bwor 32))) then begin
            k := k + 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if ((get_critter_stat(party_member_obj(16777380), STAT_current_hp) < get_critter_stat(party_member_obj(16777380), STAT_max_hp)) or (critter_state(party_member_obj(16777380)) bwand (4 bwor 8 bwor 16 bwor 32))) then begin
            k := k + 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if ((get_critter_stat(party_member_obj(16777295), STAT_current_hp) < get_critter_stat(party_member_obj(16777295), STAT_max_hp)) or (critter_state(party_member_obj(16777295)) bwand (4 bwor 8 bwor 16 bwor 32))) then begin
            k := k + 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if ((get_critter_stat(party_member_obj(16777558), STAT_current_hp) < get_critter_stat(party_member_obj(16777558), STAT_max_hp)) or (critter_state(party_member_obj(16777558)) bwand (4 bwor 8 bwor 16 bwor 32))) then begin
            k := k + 1;
        end
    end
    if (party_member_obj(16777687) != 0) then begin
        if ((get_critter_stat(party_member_obj(16777687), STAT_current_hp) < get_critter_stat(party_member_obj(16777687), STAT_max_hp)) or (critter_state(party_member_obj(16777687)) bwand (4 bwor 8 bwor 16 bwor 32))) then begin
            k := k + 1;
        end
    end
end

procedure Node901
begin
end

procedure Node910
begin
    if (global_var(GVAR_VAULT_PLANT_STATUS) == 9) then begin
        call Node008();
    end
    else begin
        call Node007();
    end
end

procedure Node920
begin
    call HealPlayer();
    if (global_var(GVAR_GECKO_DESCENDANT_KNOWN) == 0) then begin
        call PayDude();
        call Node001();
    end
end

procedure Node922
begin
    call HealPlayer();
    if (global_var(GVAR_GECKO_DESCENDANT_KNOWN) == 0) then begin
        call PayDude();
    end
end

procedure Node924
begin
    call PartyFree();
    if (global_var(GVAR_GECKO_DESCENDANT_KNOWN) == 0) then begin
        call PayDude();
        call Node001();
    end
end

procedure Node926
begin
    call PartyFree();
    if (global_var(GVAR_GECKO_DESCENDANT_KNOWN) == 0) then begin
        call PayDude();
    end
end

procedure Node929
begin
end

procedure Node930
begin
end

procedure Node931
begin
end

procedure Node932
begin
end

procedure Node933
begin
end

procedure Node934
begin
end

procedure Node935
begin
end

procedure Node936
begin
end

procedure Node937
begin
end

procedure Node938
begin
end

procedure Node939
begin
end

procedure Node940
begin
end

procedure Node951
begin
    if ((global_var(GVAR_PLAYER_REPUTATION) > 0) and (local_var(0) > 30)) then begin
        call Node021();
    end
    else begin
        call Node022();
    end
end

procedure Node953
begin
    if (obj_in_party(self_obj)) then begin
        debug_msg("abandon party: " + self_name);
        party_remove(self_obj);
    end
    if ((obj_pid(self_obj) == 16777380) or (obj_pid(self_obj) == 16777379)) then begin
        debug_msg("start: set_dude_was_married");
        if ((global_var(GVAR_PLAYER_MARRIED) != 0) and ((global_var(GVAR_PLAYER_WAS_MARRIED) != 0) == 0)) then begin
            debug_msg("   GVAR_PLAYER_WAS_MARRIED before == " + global_var(GVAR_PLAYER_WAS_MARRIED));
            set_global_var(GVAR_PLAYER_WAS_MARRIED, global_var(GVAR_PLAYER_MARRIED));
            debug_msg("   GVAR_PLAYER_WAS_MARRIED after == " + global_var(GVAR_PLAYER_WAS_MARRIED));
            set_global_var(GVAR_PLAYER_MARRIED, 0);
        end
        debug_msg("finished: set_dude_was_married");
    end
    if ((local_var(12) != -1) and (has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) == 0)) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, local_var(12));
        set_local_var(12, -1);
    end
    debug_msg("" + self_name + " has abandoned the party");
end

procedure Node954
begin
end

procedure Node960
begin
end

procedure Node961
begin
end

procedure Node962
begin
end

procedure Node963
begin
end

procedure Node964
begin
end

procedure Node965
begin
end

procedure Node966
begin
end

procedure Node995
begin
    if (dude_charisma >= 7) then begin
        set_local_var(3, 100);
        set_local_var(1, 4);
    end
    else begin
        set_local_var(1, -4);
        set_local_var(3, -100);
    end
end

procedure Node996
begin
    set_local_var(1, -4);
    set_local_var(3, -100);
end

procedure Node997
begin
    if (dude_charisma >= 8) then begin
        call Node004();
    end
    else begin
        call Node005();
    end
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
end

procedure Node1a
begin
    set_local_var(3, local_var(3) + 10);
    set_local_var(0, local_var(0) + 10);
    if (local_var(0) <= -75) then begin
        set_local_var(1, -4);
    end
    else begin
        if (local_var(0) <= -50) then begin
            set_local_var(1, -3);
        end
        else begin
            if (local_var(0) <= -25) then begin
                set_local_var(1, -2);
            end
            else begin
                if (local_var(0) <= -10) then begin
                    set_local_var(1, -1);
                end
                else begin
                    if (local_var(0) <= 10) then begin
                        set_local_var(1, 0);
                    end
                    else begin
                        if (local_var(0) <= 25) then begin
                            set_local_var(1, 1);
                        end
                        else begin
                            if (local_var(0) <= 50) then begin
                                set_local_var(1, 2);
                            end
                            else begin
                                if (local_var(0) <= 75) then begin
                                    set_local_var(1, 3);
                                end
                                else begin
                                    set_local_var(1, 4);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    call Node001();
end

procedure Node001
begin
    if (local_var(4) == 0) then begin
        set_local_var(4, 1);
        if (global_var(GVAR_GECKO_DESCENDANT_KNOWN) == 0) then begin
            Reply(110);
        end
        else begin
            Reply(112);
        end
    end
    else begin
        if (global_var(GVAR_GECKO_DESCENDANT_KNOWN) == 0) then begin
            Reply(111);
        end
        else begin
            Reply(113);
        end
    end
    giq_option(-3, NAME, 114, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 115, Node005, NEUTRAL_REACTION);
    giq_option(4, NAME, 122, Node02a, NEUTRAL_REACTION);
    if (global_var(GVAR_VAULT13_FOUND_GECK)) then begin
    end
    else begin
        giq_option(4, NAME, 119, Node004, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_GECKO_DESCENDANT_KNOWN) > 0) then begin
        giq_option(4, NAME, 120, Node008, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 121, Node999, NEUTRAL_REACTION);
end

procedure Node002
begin
    Reply(130);
    giq_option(1, NAME, 131, Node999, NEUTRAL_REACTION);
end

procedure Node02a
begin
    call HowMany();
    Reply(125);
    if (get_critter_stat(dude_obj, STAT_current_hp) < get_critter_stat(dude_obj, STAT_max_hp)) then begin
        giq_option(4, NAME, 116, Node006, NEUTRAL_REACTION);
    end
    if (k > 0) then begin
        giq_option(4, NAME, 117, Node007, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 126, Node999, NEUTRAL_REACTION);
end

procedure Node003
begin
    float_msg(self_obj, mstr(random(140, 142)), FLOAT_MSG_RED);
end

procedure Node004
begin
    call HowMany();
    Reply(150);
    if (get_critter_stat(dude_obj, STAT_current_hp) < get_critter_stat(dude_obj, STAT_max_hp)) then begin
        giq_option(4, NAME, 151, Node006, NEUTRAL_REACTION);
    end
    if (k > 0) then begin
        giq_option(4, NAME, 152, Node007, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 153, Node04a, NEUTRAL_REACTION);
    giq_option(4, NAME, 154, Node999, NEUTRAL_REACTION);
end

procedure Node04a
begin
    set_global_var(GVAR_GECKO_DESCENDANT_KNOWN, 1);
    call Node008();
end

procedure Node005
begin
    call HowMany();
    Reply(160);
    giq_option(4, NAME, 161, Node023, NEUTRAL_REACTION);
    giq_option(4, NAME, 162, Node001, NEUTRAL_REACTION);
    giq_option(4, NAME, 163, Node009, NEUTRAL_REACTION);
    if (get_critter_stat(dude_obj, STAT_current_hp) < get_critter_stat(dude_obj, STAT_max_hp)) then begin
        giq_option(4, NAME, 164, Node006, NEUTRAL_REACTION);
    end
    if (k > 0) then begin
        giq_option(4, NAME, 165, Node007, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 166, Node999, NEUTRAL_REACTION);
end

procedure Node006
begin
    from6 := 1;
    if (global_var(GVAR_GECKO_DESCENDANT_KNOWN) == 0) then begin
        Reply(174);
    end
    else begin
        Reply(170);
        giq_option(4, NAME, 171, Node015, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 172, Node920, NEUTRAL_REACTION);
    giq_option(4, NAME, 173, Node922, NEUTRAL_REACTION);
    giq_option(4, NAME, 175, Node999, NEUTRAL_REACTION);
end

procedure Node007
begin
    from6 := 0;
    call HowMany();
    if (k == 0) then begin
        gsay_message(NAME, 187, NEUTRAL_REACTION);
    end
    else begin
        if (global_var(GVAR_GECKO_DESCENDANT_KNOWN) == 0) then begin
            if (k < 2) then begin
                Reply(185);
            end
            else begin
                Reply(186);
            end
        end
        else begin
            if (k < 2) then begin
                Reply(180);
            end
            else begin
                Reply(181);
            end
            giq_option(4, NAME, 182, Node015, NEUTRAL_REACTION);
        end
        giq_option(4, NAME, 183, Node924, NEUTRAL_REACTION);
        giq_option(4, NAME, 184, Node926, NEUTRAL_REACTION);
        giq_option(4, NAME, 175, Node999, NEUTRAL_REACTION);
    end
end

procedure Node008
begin
    Reply(190);
    giq_option(4, NAME, 191, Node16a, GOOD_REACTION);
    giq_option(4, NAME, 192, Node999, NEUTRAL_REACTION);
end

procedure Node009
begin
    Reply(200);
    giq_option(4, NAME, 201, Node10a, GOOD_REACTION);
    giq_option(4, NAME, 202, Node999, NEUTRAL_REACTION);
end

procedure Node10a
begin
    set_local_var(3, local_var(3) + 5);
    set_local_var(0, local_var(0) + 5);
    if (local_var(0) <= -75) then begin
        set_local_var(1, -4);
    end
    else begin
        if (local_var(0) <= -50) then begin
            set_local_var(1, -3);
        end
        else begin
            if (local_var(0) <= -25) then begin
                set_local_var(1, -2);
            end
            else begin
                if (local_var(0) <= -10) then begin
                    set_local_var(1, -1);
                end
                else begin
                    if (local_var(0) <= 10) then begin
                        set_local_var(1, 0);
                    end
                    else begin
                        if (local_var(0) <= 25) then begin
                            set_local_var(1, 1);
                        end
                        else begin
                            if (local_var(0) <= 50) then begin
                                set_local_var(1, 2);
                            end
                            else begin
                                if (local_var(0) <= 75) then begin
                                    set_local_var(1, 3);
                                end
                                else begin
                                    set_local_var(1, 4);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    call Node010();
end

procedure Node010
begin
    Reply(210);
    giq_option(4, NAME, 211, Node11a, NEUTRAL_REACTION);
    giq_option(4, NAME, 212, Node999, NEUTRAL_REACTION);
end

procedure Node11a
begin
    set_local_var(3, local_var(3) + 5);
    set_local_var(0, local_var(0) + 5);
    if (local_var(0) <= -75) then begin
        set_local_var(1, -4);
    end
    else begin
        if (local_var(0) <= -50) then begin
            set_local_var(1, -3);
        end
        else begin
            if (local_var(0) <= -25) then begin
                set_local_var(1, -2);
            end
            else begin
                if (local_var(0) <= -10) then begin
                    set_local_var(1, -1);
                end
                else begin
                    if (local_var(0) <= 10) then begin
                        set_local_var(1, 0);
                    end
                    else begin
                        if (local_var(0) <= 25) then begin
                            set_local_var(1, 1);
                        end
                        else begin
                            if (local_var(0) <= 50) then begin
                                set_local_var(1, 2);
                            end
                            else begin
                                if (local_var(0) <= 75) then begin
                                    set_local_var(1, 3);
                                end
                                else begin
                                    set_local_var(1, 4);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    call Node011();
end

procedure Node011
begin
    Reply(220);
    giq_option(4, NAME, 221, Node12a, GOOD_REACTION);
    giq_option(4, NAME, 222, Node999, NEUTRAL_REACTION);
end

procedure Node12a
begin
    set_local_var(3, local_var(3) + 10);
    set_local_var(0, local_var(0) + 10);
    if (local_var(0) <= -75) then begin
        set_local_var(1, -4);
    end
    else begin
        if (local_var(0) <= -50) then begin
            set_local_var(1, -3);
        end
        else begin
            if (local_var(0) <= -25) then begin
                set_local_var(1, -2);
            end
            else begin
                if (local_var(0) <= -10) then begin
                    set_local_var(1, -1);
                end
                else begin
                    if (local_var(0) <= 10) then begin
                        set_local_var(1, 0);
                    end
                    else begin
                        if (local_var(0) <= 25) then begin
                            set_local_var(1, 1);
                        end
                        else begin
                            if (local_var(0) <= 50) then begin
                                set_local_var(1, 2);
                            end
                            else begin
                                if (local_var(0) <= 75) then begin
                                    set_local_var(1, 3);
                                end
                                else begin
                                    set_local_var(1, 4);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    call Node012();
end

procedure Node012
begin
    Reply(230);
    giq_option(4, NAME, 231, Node13a, GOOD_REACTION);
    giq_option(4, NAME, 232, Node999, NEUTRAL_REACTION);
end

procedure Node13a
begin
    set_local_var(3, local_var(3) + 10);
    set_local_var(0, local_var(0) + 10);
    if (local_var(0) <= -75) then begin
        set_local_var(1, -4);
    end
    else begin
        if (local_var(0) <= -50) then begin
            set_local_var(1, -3);
        end
        else begin
            if (local_var(0) <= -25) then begin
                set_local_var(1, -2);
            end
            else begin
                if (local_var(0) <= -10) then begin
                    set_local_var(1, -1);
                end
                else begin
                    if (local_var(0) <= 10) then begin
                        set_local_var(1, 0);
                    end
                    else begin
                        if (local_var(0) <= 25) then begin
                            set_local_var(1, 1);
                        end
                        else begin
                            if (local_var(0) <= 50) then begin
                                set_local_var(1, 2);
                            end
                            else begin
                                if (local_var(0) <= 75) then begin
                                    set_local_var(1, 3);
                                end
                                else begin
                                    set_local_var(1, 4);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    call Node013();
end

procedure Node013
begin
    Reply(240);
    giq_option(4, NAME, 241, Node14a, GOOD_REACTION);
    giq_option(4, NAME, 242, Node999, NEUTRAL_REACTION);
end

procedure Node14a
begin
    set_local_var(3, local_var(3) + 10);
    set_local_var(0, local_var(0) + 10);
    if (local_var(0) <= -75) then begin
        set_local_var(1, -4);
    end
    else begin
        if (local_var(0) <= -50) then begin
            set_local_var(1, -3);
        end
        else begin
            if (local_var(0) <= -25) then begin
                set_local_var(1, -2);
            end
            else begin
                if (local_var(0) <= -10) then begin
                    set_local_var(1, -1);
                end
                else begin
                    if (local_var(0) <= 10) then begin
                        set_local_var(1, 0);
                    end
                    else begin
                        if (local_var(0) <= 25) then begin
                            set_local_var(1, 1);
                        end
                        else begin
                            if (local_var(0) <= 50) then begin
                                set_local_var(1, 2);
                            end
                            else begin
                                if (local_var(0) <= 75) then begin
                                    set_local_var(1, 3);
                                end
                                else begin
                                    set_local_var(1, 4);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    call Node014();
end

procedure Node014
begin
    Reply(250);
    giq_option(4, NAME, 251, Node1a, GOOD_REACTION);
    giq_option(4, NAME, 252, Node999, NEUTRAL_REACTION);
end

procedure Node015
begin
    Reply(260);
    if (from6) then begin
        giq_option(4, NAME, 261, Node006, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 261, Node007, NEUTRAL_REACTION);
    end
end

procedure Node16a
begin
    set_local_var(3, local_var(3) + 5);
    set_local_var(0, local_var(0) + 5);
    if (local_var(0) <= -75) then begin
        set_local_var(1, -4);
    end
    else begin
        if (local_var(0) <= -50) then begin
            set_local_var(1, -3);
        end
        else begin
            if (local_var(0) <= -25) then begin
                set_local_var(1, -2);
            end
            else begin
                if (local_var(0) <= -10) then begin
                    set_local_var(1, -1);
                end
                else begin
                    if (local_var(0) <= 10) then begin
                        set_local_var(1, 0);
                    end
                    else begin
                        if (local_var(0) <= 25) then begin
                            set_local_var(1, 1);
                        end
                        else begin
                            if (local_var(0) <= 50) then begin
                                set_local_var(1, 2);
                            end
                            else begin
                                if (local_var(0) <= 75) then begin
                                    set_local_var(1, 3);
                                end
                                else begin
                                    set_local_var(1, 4);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    call Node016();
end

procedure Node016
begin
    Reply(270);
    giq_option(4, NAME, 271, Node17a, NEUTRAL_REACTION);
    giq_option(4, NAME, 272, Node999, NEUTRAL_REACTION);
end

procedure Node17a
begin
    set_local_var(3, local_var(3) + 5);
    set_local_var(0, local_var(0) + 5);
    if (local_var(0) <= -75) then begin
        set_local_var(1, -4);
    end
    else begin
        if (local_var(0) <= -50) then begin
            set_local_var(1, -3);
        end
        else begin
            if (local_var(0) <= -25) then begin
                set_local_var(1, -2);
            end
            else begin
                if (local_var(0) <= -10) then begin
                    set_local_var(1, -1);
                end
                else begin
                    if (local_var(0) <= 10) then begin
                        set_local_var(1, 0);
                    end
                    else begin
                        if (local_var(0) <= 25) then begin
                            set_local_var(1, 1);
                        end
                        else begin
                            if (local_var(0) <= 50) then begin
                                set_local_var(1, 2);
                            end
                            else begin
                                if (local_var(0) <= 75) then begin
                                    set_local_var(1, 3);
                                end
                                else begin
                                    set_local_var(1, 4);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    call Node017();
end

procedure Node017
begin
    Reply(280);
    giq_option(4, NAME, 281, Node18a, GOOD_REACTION);
    giq_option(4, NAME, 282, Node999, BAD_REACTION);
    giq_option(4, NAME, 283, Node999, NEUTRAL_REACTION);
end

procedure Node18a
begin
    set_local_var(3, local_var(3) + 5);
    set_local_var(0, local_var(0) + 5);
    if (local_var(0) <= -75) then begin
        set_local_var(1, -4);
    end
    else begin
        if (local_var(0) <= -50) then begin
            set_local_var(1, -3);
        end
        else begin
            if (local_var(0) <= -25) then begin
                set_local_var(1, -2);
            end
            else begin
                if (local_var(0) <= -10) then begin
                    set_local_var(1, -1);
                end
                else begin
                    if (local_var(0) <= 10) then begin
                        set_local_var(1, 0);
                    end
                    else begin
                        if (local_var(0) <= 25) then begin
                            set_local_var(1, 1);
                        end
                        else begin
                            if (local_var(0) <= 50) then begin
                                set_local_var(1, 2);
                            end
                            else begin
                                if (local_var(0) <= 75) then begin
                                    set_local_var(1, 3);
                                end
                                else begin
                                    set_local_var(1, 4);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    call Node018();
end

procedure Node018
begin
    Reply(290);
    giq_option(4, NAME, 291, Node019, GOOD_REACTION);
    giq_option(4, NAME, 292, Node999, NEUTRAL_REACTION);
end

procedure Node19a
begin
    set_local_var(3, local_var(3) + 10);
    set_local_var(0, local_var(0) + 10);
    if (local_var(0) <= -75) then begin
        set_local_var(1, -4);
    end
    else begin
        if (local_var(0) <= -50) then begin
            set_local_var(1, -3);
        end
        else begin
            if (local_var(0) <= -25) then begin
                set_local_var(1, -2);
            end
            else begin
                if (local_var(0) <= -10) then begin
                    set_local_var(1, -1);
                end
                else begin
                    if (local_var(0) <= 10) then begin
                        set_local_var(1, 0);
                    end
                    else begin
                        if (local_var(0) <= 25) then begin
                            set_local_var(1, 1);
                        end
                        else begin
                            if (local_var(0) <= 50) then begin
                                set_local_var(1, 2);
                            end
                            else begin
                                if (local_var(0) <= 75) then begin
                                    set_local_var(1, 3);
                                end
                                else begin
                                    set_local_var(1, 4);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    call Node019();
end

procedure Node019
begin
    Reply(300);
    giq_option(4, NAME, 301, Node20a, GOOD_REACTION);
    giq_option(4, NAME, 302, Node999, NEUTRAL_REACTION);
end

procedure Node20a
begin
    set_local_var(3, local_var(3) + 10);
    set_local_var(0, local_var(0) + 10);
    if (local_var(0) <= -75) then begin
        set_local_var(1, -4);
    end
    else begin
        if (local_var(0) <= -50) then begin
            set_local_var(1, -3);
        end
        else begin
            if (local_var(0) <= -25) then begin
                set_local_var(1, -2);
            end
            else begin
                if (local_var(0) <= -10) then begin
                    set_local_var(1, -1);
                end
                else begin
                    if (local_var(0) <= 10) then begin
                        set_local_var(1, 0);
                    end
                    else begin
                        if (local_var(0) <= 25) then begin
                            set_local_var(1, 1);
                        end
                        else begin
                            if (local_var(0) <= 50) then begin
                                set_local_var(1, 2);
                            end
                            else begin
                                if (local_var(0) <= 75) then begin
                                    set_local_var(1, 3);
                                end
                                else begin
                                    set_local_var(1, 4);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    call Node020();
end

procedure Node020
begin
    Reply(310);
    if (((((party_member_count(0) - 1) >= (floor(dude_charisma / 2) + has_trait(TRAIT_PERK, dude_obj, PERK_magnetic_personality_perk))) or ((party_member_count(0) - 1) >= 5)) == 0) and ((party_member_obj(16777323) != 0) == 0)) then begin
        giq_option(4, NAME, 311, Node951, GOOD_REACTION);
    end
    giq_option(4, NAME, 312, Node001, BAD_REACTION);
    giq_option(4, NAME, 313, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 314, Node999, NEUTRAL_REACTION);
end

procedure Node021
begin
    if (dude_charisma <= 1) then begin
        gsay_message(NAME, 330, NEUTRAL_REACTION);
    end
    else begin
        Reply(320);
        giq_option(4, NAME, 321, Node800, GOOD_REACTION);
        giq_option(4, NAME, 322, Node001, BAD_REACTION);
    end
end

procedure Node022
begin
    Reply(330);
    giq_option(4, NAME, 333, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 334, Node999, BAD_REACTION);
end

procedure Node023
begin
    Reply(340);
    giq_option(4, NAME, 341, Node005, NEUTRAL_REACTION);
    giq_option(4, NAME, 342, Node999, NEUTRAL_REACTION);
end

procedure Node024
begin
    Reply(350);
    giq_option(4, NAME, 351, Node001, NEUTRAL_REACTION);
    giq_option(4, NAME, 352, Node999, NEUTRAL_REACTION);
end

procedure Node025
begin
    Reply(360);
    giq_option(1, NAME, 372, Node953, NEUTRAL_REACTION);
    giq_option(1, NAME, 373, Node953, BAD_REACTION);
    giq_option(1, NAME, 374, Node953, BAD_REACTION);
    giq_option(1, NAME, 375, Node953, NEUTRAL_REACTION);
end

procedure Node070
begin
    if (obj_is_visible_flag(self_obj)) then begin
        float_msg(self_obj, mstr(3000), FLOAT_MSG_RED);
    end
    if (obj_in_party(self_obj)) then begin
        debug_msg("abandon party: " + self_name);
        party_remove(self_obj);
    end
    if ((obj_pid(self_obj) == 16777380) or (obj_pid(self_obj) == 16777379)) then begin
        debug_msg("start: set_dude_was_married");
        if ((global_var(GVAR_PLAYER_MARRIED) != 0) and ((global_var(GVAR_PLAYER_WAS_MARRIED) != 0) == 0)) then begin
            debug_msg("   GVAR_PLAYER_WAS_MARRIED before == " + global_var(GVAR_PLAYER_WAS_MARRIED));
            set_global_var(GVAR_PLAYER_WAS_MARRIED, global_var(GVAR_PLAYER_MARRIED));
            debug_msg("   GVAR_PLAYER_WAS_MARRIED after == " + global_var(GVAR_PLAYER_WAS_MARRIED));
            set_global_var(GVAR_PLAYER_MARRIED, 0);
        end
        debug_msg("finished: set_dude_was_married");
    end
    if ((local_var(12) != -1) and (has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) == 0)) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, local_var(12));
        set_local_var(12, -1);
    end
    debug_msg("" + self_name + " has abandoned the party");
end

procedure Node071
begin
    set_local_var(14, 1);
    if (obj_is_visible_flag(self_obj)) then begin
        float_msg(self_obj, mstr(370), FLOAT_MSG_RED);
    end
    if (obj_in_party(self_obj)) then begin
        debug_msg("abandon party: " + self_name);
        party_remove(self_obj);
    end
    if ((obj_pid(self_obj) == 16777380) or (obj_pid(self_obj) == 16777379)) then begin
        debug_msg("start: set_dude_was_married");
        if ((global_var(GVAR_PLAYER_MARRIED) != 0) and ((global_var(GVAR_PLAYER_WAS_MARRIED) != 0) == 0)) then begin
            debug_msg("   GVAR_PLAYER_WAS_MARRIED before == " + global_var(GVAR_PLAYER_WAS_MARRIED));
            set_global_var(GVAR_PLAYER_WAS_MARRIED, global_var(GVAR_PLAYER_MARRIED));
            debug_msg("   GVAR_PLAYER_WAS_MARRIED after == " + global_var(GVAR_PLAYER_WAS_MARRIED));
            set_global_var(GVAR_PLAYER_MARRIED, 0);
        end
        debug_msg("finished: set_dude_was_married");
    end
    if ((local_var(12) != -1) and (has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) == 0)) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, local_var(12));
        set_local_var(12, -1);
    end
    debug_msg("" + self_name + " has abandoned the party");
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 49);
end

procedure Node072
begin
    if (obj_is_visible_flag(self_obj)) then begin
        float_msg(self_obj, mstr(3002), FLOAT_MSG_RED);
    end
    if (obj_in_party(self_obj)) then begin
        debug_msg("abandon party: " + self_name);
        party_remove(self_obj);
    end
    if ((obj_pid(self_obj) == 16777380) or (obj_pid(self_obj) == 16777379)) then begin
        debug_msg("start: set_dude_was_married");
        if ((global_var(GVAR_PLAYER_MARRIED) != 0) and ((global_var(GVAR_PLAYER_WAS_MARRIED) != 0) == 0)) then begin
            debug_msg("   GVAR_PLAYER_WAS_MARRIED before == " + global_var(GVAR_PLAYER_WAS_MARRIED));
            set_global_var(GVAR_PLAYER_WAS_MARRIED, global_var(GVAR_PLAYER_MARRIED));
            debug_msg("   GVAR_PLAYER_WAS_MARRIED after == " + global_var(GVAR_PLAYER_WAS_MARRIED));
            set_global_var(GVAR_PLAYER_MARRIED, 0);
        end
        debug_msg("finished: set_dude_was_married");
    end
    if ((local_var(12) != -1) and (has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) == 0)) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, local_var(12));
        set_local_var(12, -1);
    end
    debug_msg("" + self_name + " has abandoned the party");
end

procedure Node073
begin
    if (obj_is_visible_flag(self_obj)) then begin
        float_msg(self_obj, mstr(370), FLOAT_MSG_RED);
    end
    if (obj_in_party(self_obj)) then begin
        debug_msg("abandon party: " + self_name);
        party_remove(self_obj);
    end
    if ((obj_pid(self_obj) == 16777380) or (obj_pid(self_obj) == 16777379)) then begin
        debug_msg("start: set_dude_was_married");
        if ((global_var(GVAR_PLAYER_MARRIED) != 0) and ((global_var(GVAR_PLAYER_WAS_MARRIED) != 0) == 0)) then begin
            debug_msg("   GVAR_PLAYER_WAS_MARRIED before == " + global_var(GVAR_PLAYER_WAS_MARRIED));
            set_global_var(GVAR_PLAYER_WAS_MARRIED, global_var(GVAR_PLAYER_MARRIED));
            debug_msg("   GVAR_PLAYER_WAS_MARRIED after == " + global_var(GVAR_PLAYER_WAS_MARRIED));
            set_global_var(GVAR_PLAYER_MARRIED, 0);
        end
        debug_msg("finished: set_dude_was_married");
    end
    if ((local_var(12) != -1) and (has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) == 0)) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, local_var(12));
        set_local_var(12, -1);
    end
    debug_msg("" + self_name + " has abandoned the party");
end

procedure Node074
begin
    set_local_var(14, 1);
    set_local_var(6, 1);
    if (obj_is_visible_flag(self_obj)) then begin
        float_msg(self_obj, mstr(370), FLOAT_MSG_RED);
    end
    if (obj_in_party(self_obj)) then begin
        debug_msg("abandon party: " + self_name);
        party_remove(self_obj);
    end
    if ((obj_pid(self_obj) == 16777380) or (obj_pid(self_obj) == 16777379)) then begin
        debug_msg("start: set_dude_was_married");
        if ((global_var(GVAR_PLAYER_MARRIED) != 0) and ((global_var(GVAR_PLAYER_WAS_MARRIED) != 0) == 0)) then begin
            debug_msg("   GVAR_PLAYER_WAS_MARRIED before == " + global_var(GVAR_PLAYER_WAS_MARRIED));
            set_global_var(GVAR_PLAYER_WAS_MARRIED, global_var(GVAR_PLAYER_MARRIED));
            debug_msg("   GVAR_PLAYER_WAS_MARRIED after == " + global_var(GVAR_PLAYER_WAS_MARRIED));
            set_global_var(GVAR_PLAYER_MARRIED, 0);
        end
        debug_msg("finished: set_dude_was_married");
    end
    if ((local_var(12) != -1) and (has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) == 0)) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, local_var(12));
        set_local_var(12, -1);
    end
    debug_msg("" + self_name + " has abandoned the party");
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 49);
end

procedure Node075
begin
    if (obj_is_visible_flag(self_obj)) then begin
        float_msg(self_obj, mstr(371), FLOAT_MSG_RED);
    end
    if (obj_in_party(self_obj)) then begin
        debug_msg("abandon party: " + self_name);
        party_remove(self_obj);
    end
    if ((obj_pid(self_obj) == 16777380) or (obj_pid(self_obj) == 16777379)) then begin
        debug_msg("start: set_dude_was_married");
        if ((global_var(GVAR_PLAYER_MARRIED) != 0) and ((global_var(GVAR_PLAYER_WAS_MARRIED) != 0) == 0)) then begin
            debug_msg("   GVAR_PLAYER_WAS_MARRIED before == " + global_var(GVAR_PLAYER_WAS_MARRIED));
            set_global_var(GVAR_PLAYER_WAS_MARRIED, global_var(GVAR_PLAYER_MARRIED));
            debug_msg("   GVAR_PLAYER_WAS_MARRIED after == " + global_var(GVAR_PLAYER_WAS_MARRIED));
            set_global_var(GVAR_PLAYER_MARRIED, 0);
        end
        debug_msg("finished: set_dude_was_married");
    end
    if ((local_var(12) != -1) and (has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) == 0)) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, local_var(12));
        set_local_var(12, -1);
    end
    debug_msg("" + self_name + " has abandoned the party");
end

procedure Node076
begin
    set_local_var(14, 1);
    if (obj_is_visible_flag(self_obj)) then begin
        float_msg(self_obj, mstr(370), FLOAT_MSG_RED);
    end
    if (obj_in_party(self_obj)) then begin
        debug_msg("abandon party: " + self_name);
        party_remove(self_obj);
    end
    if ((obj_pid(self_obj) == 16777380) or (obj_pid(self_obj) == 16777379)) then begin
        debug_msg("start: set_dude_was_married");
        if ((global_var(GVAR_PLAYER_MARRIED) != 0) and ((global_var(GVAR_PLAYER_WAS_MARRIED) != 0) == 0)) then begin
            debug_msg("   GVAR_PLAYER_WAS_MARRIED before == " + global_var(GVAR_PLAYER_WAS_MARRIED));
            set_global_var(GVAR_PLAYER_WAS_MARRIED, global_var(GVAR_PLAYER_MARRIED));
            debug_msg("   GVAR_PLAYER_WAS_MARRIED after == " + global_var(GVAR_PLAYER_WAS_MARRIED));
            set_global_var(GVAR_PLAYER_MARRIED, 0);
        end
        debug_msg("finished: set_dude_was_married");
    end
    if ((local_var(12) != -1) and (has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) == 0)) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, local_var(12));
        set_local_var(12, -1);
    end
    debug_msg("" + self_name + " has abandoned the party");
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 49);
end

procedure Node800
begin
    if (local_var(13) == 0) then begin
        set_local_var(13, 1);
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 5);
        debug_msg("Player gains " + 5 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(GVAR_TOWN_REP_GECKO, global_var(GVAR_TOWN_REP_GECKO) + 10);
    end
    party_add(self_obj);
    add_timer_event(self_obj, game_ticks(1), 1);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 0);
end

procedure Node1000
begin
    Reply(1000);
    if ((local_var(10) != 0) == 0) then begin
        if (local_var(11) == 0) then begin
            set_local_var(11, 6);
        end
        if (g_mstr(10001) != 0) then begin
            if (get_critter_stat(self_obj, STAT_current_hp) < get_critter_stat(self_obj, STAT_max_hp)) then begin
                giq_option(4, NAME, g_mstr(10001), Node1001, NEUTRAL_REACTION);
            end
        end
        if (g_mstr(10008) != 0) then begin
            giq_option(4, NAME, g_mstr(10008), Node1007, NEUTRAL_REACTION);
        end
        if (g_mstr(10009) != 0) then begin
            giq_option(4, NAME, g_mstr(10009), Node1008, NEUTRAL_REACTION);
        end
        if (g_mstr(10002) != 0) then begin
            giq_option(4, NAME, g_mstr(10002), Node1002, NEUTRAL_REACTION);
        end
    end
    else begin
        if (g_mstr(10100) != 0) then begin
            giq_option(4, NAME, g_mstr(10100), Node1100, NEUTRAL_REACTION);
        end
    end
    if (g_mstr(10007) != 0) then begin
        giq_option(4, NAME, g_mstr(10007), Node999, NEUTRAL_REACTION);
    end
    if (g_mstr(random(300, 303)) != 0) then begin
        giq_option(-3, NAME, g_mstr(random(300, 303)), Node999, NEUTRAL_REACTION);
    end
    debug_msg("USED PARTY MEMBER OPTIONS");
end

procedure Node1001
begin
    if (obj_is_carrying_obj_pid(self_obj, 144)) then begin
        if ((global_temp == 0) and (combat_is_initialized == 0)) then begin
            gfade_out(600);
            if (0 > 0) then begin
                game_time_advance(0);
            end
            gfade_in(600);
        end
        PartyHealingItem := obj_carrying_pid_obj(self_obj, 144);
        use_obj_on_obj(PartyHealingItem, self_obj);
        debug_msg(self_name + " used super stimpak.");
    end
    else begin
        if (obj_is_carrying_obj_pid(self_obj, 40)) then begin
            if ((global_temp == 0) and (combat_is_initialized == 0)) then begin
                gfade_out(600);
                if (0 > 0) then begin
                    game_time_advance(0);
                end
                gfade_in(600);
            end
            use_obj_on_obj(obj_carrying_pid_obj(self_obj, 40), self_obj);
            debug_msg(self_name + " used stimpak.");
        end
        else begin
            if (obj_is_carrying_obj_pid(self_obj, 273)) then begin
                if ((global_temp == 0) and (combat_is_initialized == 0)) then begin
                    gfade_out(600);
                    if (0 > 0) then begin
                        game_time_advance(0);
                    end
                    gfade_in(600);
                end
                use_obj_on_obj(obj_carrying_pid_obj(self_obj, 273), self_obj);
                debug_msg(self_name + " used healing powder.");
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 91)) then begin
                    if ((global_temp == 0) and (combat_is_initialized == 0)) then begin
                        gfade_out(600);
                        if (0 > 0) then begin
                            game_time_advance(0);
                        end
                        gfade_in(600);
                    end
                    use_obj_on_obj(obj_carrying_pid_obj(self_obj, 91), self_obj);
                    debug_msg(self_name + " used doctor's bag kit.");
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 47)) then begin
                        if ((global_temp == 0) and (combat_is_initialized == 0)) then begin
                            gfade_out(600);
                            if (0 > 0) then begin
                                game_time_advance(0);
                            end
                            gfade_in(600);
                        end
                        use_obj_on_obj(obj_carrying_pid_obj(self_obj, 47), self_obj);
                        debug_msg(self_name + " used First Aid kit.");
                    end
                    else begin
                        if (has_skill(self_obj, SKILL_DOCTOR) > has_skill(self_obj, SKILL_FIRST_AID)) then begin
                            if ((global_temp == 0) and (combat_is_initialized == 0)) then begin
                                gfade_out(600);
                                if ((60 * (60 * 10)) > 0) then begin
                                    game_time_advance(60 * (60 * 10));
                                end
                                gfade_in(600);
                            end
                            if (is_success(roll_vs_skill(self_obj, 7, 0))) then begin
                                critter_heal(self_obj, random(10, 25));
                                debug_msg(self_name + " healed some using doctor skill.");
                            end
                        end
                        else begin
                            if ((global_temp == 0) and (combat_is_initialized == 0)) then begin
                                gfade_out(600);
                                if ((15 * (60 * 10)) > 0) then begin
                                    game_time_advance(15 * (60 * 10));
                                end
                                gfade_in(600);
                            end
                            if (is_success(roll_vs_skill(self_obj, 6, 0))) then begin
                                critter_heal(self_obj, random(5, 15));
                                debug_msg(self_name + " healed some using first aid skill.");
                            end
                        end
                    end
                end
            end
        end
    end
    global_temp := 0;
    if (get_critter_stat(self_obj, STAT_current_hp) == get_critter_stat(self_obj, STAT_max_hp)) then begin
        Reply(1100);
    end
    else begin
        if ((get_critter_stat(self_obj, STAT_current_hp) * 100 / get_critter_stat(self_obj, STAT_max_hp)) >= 90) then begin
            Reply(1200);
        end
        else begin
            if ((get_critter_stat(self_obj, STAT_current_hp) * 100 / get_critter_stat(self_obj, STAT_max_hp)) >= 70) then begin
                Reply(1300);
            end
            else begin
                Reply(1400);
            end
        end
    end
    if ((local_var(10) != 0) == 0) then begin
        if (local_var(11) == 0) then begin
            set_local_var(11, 6);
        end
        if (g_mstr(10001) != 0) then begin
            if (get_critter_stat(self_obj, STAT_current_hp) < get_critter_stat(self_obj, STAT_max_hp)) then begin
                giq_option(4, NAME, g_mstr(10001), Node1001, NEUTRAL_REACTION);
            end
        end
        if (g_mstr(10008) != 0) then begin
            giq_option(4, NAME, g_mstr(10008), Node1007, NEUTRAL_REACTION);
        end
        if (g_mstr(10009) != 0) then begin
            giq_option(4, NAME, g_mstr(10009), Node1008, NEUTRAL_REACTION);
        end
        if (g_mstr(10002) != 0) then begin
            giq_option(4, NAME, g_mstr(10002), Node1002, NEUTRAL_REACTION);
        end
    end
    else begin
        if (g_mstr(10100) != 0) then begin
            giq_option(4, NAME, g_mstr(10100), Node1100, NEUTRAL_REACTION);
        end
    end
    if (g_mstr(10007) != 0) then begin
        giq_option(4, NAME, g_mstr(10007), Node999, NEUTRAL_REACTION);
    end
    if (g_mstr(random(300, 303)) != 0) then begin
        giq_option(-3, NAME, g_mstr(random(300, 303)), Node999, NEUTRAL_REACTION);
    end
    debug_msg("USED PARTY MEMBER OPTIONS");
end

procedure Node1002
begin
    set_local_var(10, game_time);
    party_remove(self_obj);
    Reply(1500);
    if ((local_var(10) != 0) == 0) then begin
        if (local_var(11) == 0) then begin
            set_local_var(11, 6);
        end
        if (g_mstr(10001) != 0) then begin
            if (get_critter_stat(self_obj, STAT_current_hp) < get_critter_stat(self_obj, STAT_max_hp)) then begin
                giq_option(4, NAME, g_mstr(10001), Node1001, NEUTRAL_REACTION);
            end
        end
        if (g_mstr(10008) != 0) then begin
            giq_option(4, NAME, g_mstr(10008), Node1007, NEUTRAL_REACTION);
        end
        if (g_mstr(10009) != 0) then begin
            giq_option(4, NAME, g_mstr(10009), Node1008, NEUTRAL_REACTION);
        end
        if (g_mstr(10002) != 0) then begin
            giq_option(4, NAME, g_mstr(10002), Node1002, NEUTRAL_REACTION);
        end
    end
    else begin
        if (g_mstr(10100) != 0) then begin
            giq_option(4, NAME, g_mstr(10100), Node1100, NEUTRAL_REACTION);
        end
    end
    if (g_mstr(10007) != 0) then begin
        giq_option(4, NAME, g_mstr(10007), Node999, NEUTRAL_REACTION);
    end
    if (g_mstr(random(300, 303)) != 0) then begin
        giq_option(-3, NAME, g_mstr(random(300, 303)), Node999, NEUTRAL_REACTION);
    end
    debug_msg("USED PARTY MEMBER OPTIONS");
end

procedure Node1003
begin
    inven_unwield(self_obj);
    Reply(1600);
    if ((local_var(10) != 0) == 0) then begin
        if (local_var(11) == 0) then begin
            set_local_var(11, 6);
        end
        if (g_mstr(10001) != 0) then begin
            if (get_critter_stat(self_obj, STAT_current_hp) < get_critter_stat(self_obj, STAT_max_hp)) then begin
                giq_option(4, NAME, g_mstr(10001), Node1001, NEUTRAL_REACTION);
            end
        end
        if (g_mstr(10008) != 0) then begin
            giq_option(4, NAME, g_mstr(10008), Node1007, NEUTRAL_REACTION);
        end
        if (g_mstr(10009) != 0) then begin
            giq_option(4, NAME, g_mstr(10009), Node1008, NEUTRAL_REACTION);
        end
        if (g_mstr(10002) != 0) then begin
            giq_option(4, NAME, g_mstr(10002), Node1002, NEUTRAL_REACTION);
        end
    end
    else begin
        if (g_mstr(10100) != 0) then begin
            giq_option(4, NAME, g_mstr(10100), Node1100, NEUTRAL_REACTION);
        end
    end
    if (g_mstr(10007) != 0) then begin
        giq_option(4, NAME, g_mstr(10007), Node999, NEUTRAL_REACTION);
    end
    if (g_mstr(random(300, 303)) != 0) then begin
        giq_option(-3, NAME, g_mstr(random(300, 303)), Node999, NEUTRAL_REACTION);
    end
    debug_msg("USED PARTY MEMBER OPTIONS");
end

procedure Node1004
begin
    set_local_var(11, 3);
    Reply(1700);
    if ((local_var(10) != 0) == 0) then begin
        if (local_var(11) == 0) then begin
            set_local_var(11, 6);
        end
        if (g_mstr(10001) != 0) then begin
            if (get_critter_stat(self_obj, STAT_current_hp) < get_critter_stat(self_obj, STAT_max_hp)) then begin
                giq_option(4, NAME, g_mstr(10001), Node1001, NEUTRAL_REACTION);
            end
        end
        if (g_mstr(10008) != 0) then begin
            giq_option(4, NAME, g_mstr(10008), Node1007, NEUTRAL_REACTION);
        end
        if (g_mstr(10009) != 0) then begin
            giq_option(4, NAME, g_mstr(10009), Node1008, NEUTRAL_REACTION);
        end
        if (g_mstr(10002) != 0) then begin
            giq_option(4, NAME, g_mstr(10002), Node1002, NEUTRAL_REACTION);
        end
    end
    else begin
        if (g_mstr(10100) != 0) then begin
            giq_option(4, NAME, g_mstr(10100), Node1100, NEUTRAL_REACTION);
        end
    end
    if (g_mstr(10007) != 0) then begin
        giq_option(4, NAME, g_mstr(10007), Node999, NEUTRAL_REACTION);
    end
    if (g_mstr(random(300, 303)) != 0) then begin
        giq_option(-3, NAME, g_mstr(random(300, 303)), Node999, NEUTRAL_REACTION);
    end
    debug_msg("USED PARTY MEMBER OPTIONS");
end

procedure Node1005
begin
    set_local_var(11, 6);
    Reply(1800);
    if ((local_var(10) != 0) == 0) then begin
        if (local_var(11) == 0) then begin
            set_local_var(11, 6);
        end
        if (g_mstr(10001) != 0) then begin
            if (get_critter_stat(self_obj, STAT_current_hp) < get_critter_stat(self_obj, STAT_max_hp)) then begin
                giq_option(4, NAME, g_mstr(10001), Node1001, NEUTRAL_REACTION);
            end
        end
        if (g_mstr(10008) != 0) then begin
            giq_option(4, NAME, g_mstr(10008), Node1007, NEUTRAL_REACTION);
        end
        if (g_mstr(10009) != 0) then begin
            giq_option(4, NAME, g_mstr(10009), Node1008, NEUTRAL_REACTION);
        end
        if (g_mstr(10002) != 0) then begin
            giq_option(4, NAME, g_mstr(10002), Node1002, NEUTRAL_REACTION);
        end
    end
    else begin
        if (g_mstr(10100) != 0) then begin
            giq_option(4, NAME, g_mstr(10100), Node1100, NEUTRAL_REACTION);
        end
    end
    if (g_mstr(10007) != 0) then begin
        giq_option(4, NAME, g_mstr(10007), Node999, NEUTRAL_REACTION);
    end
    if (g_mstr(random(300, 303)) != 0) then begin
        giq_option(-3, NAME, g_mstr(random(300, 303)), Node999, NEUTRAL_REACTION);
    end
    debug_msg("USED PARTY MEMBER OPTIONS");
end

procedure Node1006
begin
    set_local_var(11, 9);
    Reply(1900);
    if ((local_var(10) != 0) == 0) then begin
        if (local_var(11) == 0) then begin
            set_local_var(11, 6);
        end
        if (g_mstr(10001) != 0) then begin
            if (get_critter_stat(self_obj, STAT_current_hp) < get_critter_stat(self_obj, STAT_max_hp)) then begin
                giq_option(4, NAME, g_mstr(10001), Node1001, NEUTRAL_REACTION);
            end
        end
        if (g_mstr(10008) != 0) then begin
            giq_option(4, NAME, g_mstr(10008), Node1007, NEUTRAL_REACTION);
        end
        if (g_mstr(10009) != 0) then begin
            giq_option(4, NAME, g_mstr(10009), Node1008, NEUTRAL_REACTION);
        end
        if (g_mstr(10002) != 0) then begin
            giq_option(4, NAME, g_mstr(10002), Node1002, NEUTRAL_REACTION);
        end
    end
    else begin
        if (g_mstr(10100) != 0) then begin
            giq_option(4, NAME, g_mstr(10100), Node1100, NEUTRAL_REACTION);
        end
    end
    if (g_mstr(10007) != 0) then begin
        giq_option(4, NAME, g_mstr(10007), Node999, NEUTRAL_REACTION);
    end
    if (g_mstr(random(300, 303)) != 0) then begin
        giq_option(-3, NAME, g_mstr(random(300, 303)), Node999, NEUTRAL_REACTION);
    end
    debug_msg("USED PARTY MEMBER OPTIONS");
end

procedure Node1007
begin
    Reply(4000);
    if (g_mstr(10004) != 0) then begin
        if (local_var(11) != 3) then begin
            giq_option(4, NAME, g_mstr(10004), Node1004, NEUTRAL_REACTION);
        end
    end
    if (g_mstr(10005) != 0) then begin
        if (local_var(11) != 6) then begin
            giq_option(4, NAME, g_mstr(10005), Node1005, NEUTRAL_REACTION);
        end
    end
    if (g_mstr(10006) != 0) then begin
        if (local_var(11) != 9) then begin
            giq_option(4, NAME, g_mstr(10006), Node1006, NEUTRAL_REACTION);
        end
    end
    if (g_mstr(10010) != 0) then begin
        giq_option(4, NAME, g_mstr(10010), Node1000, NEUTRAL_REACTION);
    end
    debug_msg("USED PARTY FOLLOW OPTIONS");
end

procedure Node1008
begin
    Reply(4001);
    if (g_mstr(10013) != 0) then begin
        giq_option(4, NAME, g_mstr(10013), Node1010, NEUTRAL_REACTION);
    end
    if (g_mstr(10003) != 0) then begin
        if ((obj_item_subtype(critter_inven_obj(self_obj, 1)) == 3) or (obj_item_subtype(critter_inven_obj(self_obj, 2)) == 3)) then begin
            giq_option(4, NAME, g_mstr(10003), Node1003, NEUTRAL_REACTION);
        end
    end
    if (g_mstr(10012) != 0) then begin
        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
            giq_option(4, NAME, g_mstr(10012), Node1009, NEUTRAL_REACTION);
        end
    end
    if (g_mstr(10011) != 0) then begin
        giq_option(4, NAME, g_mstr(10011), Node1000, NEUTRAL_REACTION);
    end
    debug_msg("USED PARTY GEAR OPTIONS");
end

procedure Node1009
begin
    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
        restock_obj := critter_inven_obj(self_obj, 0);
        debug_msg("armour pid == " + obj_pid(restock_obj));
        rm_obj_from_inven(self_obj, restock_obj);
        add_obj_to_inven(self_obj, restock_obj);
    end
    Reply(4003);
    if ((local_var(10) != 0) == 0) then begin
        if (local_var(11) == 0) then begin
            set_local_var(11, 6);
        end
        if (g_mstr(10001) != 0) then begin
            if (get_critter_stat(self_obj, STAT_current_hp) < get_critter_stat(self_obj, STAT_max_hp)) then begin
                giq_option(4, NAME, g_mstr(10001), Node1001, NEUTRAL_REACTION);
            end
        end
        if (g_mstr(10008) != 0) then begin
            giq_option(4, NAME, g_mstr(10008), Node1007, NEUTRAL_REACTION);
        end
        if (g_mstr(10009) != 0) then begin
            giq_option(4, NAME, g_mstr(10009), Node1008, NEUTRAL_REACTION);
        end
        if (g_mstr(10002) != 0) then begin
            giq_option(4, NAME, g_mstr(10002), Node1002, NEUTRAL_REACTION);
        end
    end
    else begin
        if (g_mstr(10100) != 0) then begin
            giq_option(4, NAME, g_mstr(10100), Node1100, NEUTRAL_REACTION);
        end
    end
    if (g_mstr(10007) != 0) then begin
        giq_option(4, NAME, g_mstr(10007), Node999, NEUTRAL_REACTION);
    end
    if (g_mstr(random(300, 303)) != 0) then begin
        giq_option(-3, NAME, g_mstr(random(300, 303)), Node999, NEUTRAL_REACTION);
    end
    debug_msg("USED PARTY MEMBER OPTIONS");
end

procedure Node1010
begin
    Reply(4002);
    if ((local_var(10) != 0) == 0) then begin
        if (local_var(11) == 0) then begin
            set_local_var(11, 6);
        end
        if (g_mstr(10001) != 0) then begin
            if (get_critter_stat(self_obj, STAT_current_hp) < get_critter_stat(self_obj, STAT_max_hp)) then begin
                giq_option(4, NAME, g_mstr(10001), Node1001, NEUTRAL_REACTION);
            end
        end
        if (g_mstr(10008) != 0) then begin
            giq_option(4, NAME, g_mstr(10008), Node1007, NEUTRAL_REACTION);
        end
        if (g_mstr(10009) != 0) then begin
            giq_option(4, NAME, g_mstr(10009), Node1008, NEUTRAL_REACTION);
        end
        if (g_mstr(10002) != 0) then begin
            giq_option(4, NAME, g_mstr(10002), Node1002, NEUTRAL_REACTION);
        end
    end
    else begin
        if (g_mstr(10100) != 0) then begin
            giq_option(4, NAME, g_mstr(10100), Node1100, NEUTRAL_REACTION);
        end
    end
    if (g_mstr(10007) != 0) then begin
        giq_option(4, NAME, g_mstr(10007), Node999, NEUTRAL_REACTION);
    end
    if (g_mstr(random(300, 303)) != 0) then begin
        giq_option(-3, NAME, g_mstr(random(300, 303)), Node999, NEUTRAL_REACTION);
    end
    debug_msg("USED PARTY MEMBER OPTIONS");
end

procedure Node1100
begin
    if (dude_charisma <= 1) then begin
        if (obj_in_party(self_obj)) then begin
            debug_msg("abandon party: " + self_name);
            party_remove(self_obj);
        end
        if ((obj_pid(self_obj) == 16777380) or (obj_pid(self_obj) == 16777379)) then begin
            debug_msg("start: set_dude_was_married");
            if ((global_var(GVAR_PLAYER_MARRIED) != 0) and ((global_var(GVAR_PLAYER_WAS_MARRIED) != 0) == 0)) then begin
                debug_msg("   GVAR_PLAYER_WAS_MARRIED before == " + global_var(GVAR_PLAYER_WAS_MARRIED));
                set_global_var(GVAR_PLAYER_WAS_MARRIED, global_var(GVAR_PLAYER_MARRIED));
                debug_msg("   GVAR_PLAYER_WAS_MARRIED after == " + global_var(GVAR_PLAYER_WAS_MARRIED));
                set_global_var(GVAR_PLAYER_MARRIED, 0);
            end
            debug_msg("finished: set_dude_was_married");
        end
        if ((local_var(12) != -1) and (has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) == 0)) then begin
            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, local_var(12));
            set_local_var(12, -1);
        end
        debug_msg("" + self_name + " has abandoned the party");
        Reply(371);
        giq_option(1, NAME, g_mstr(10007), Node999, NEUTRAL_REACTION);
    end
    else begin
        if (((party_member_count(0) - 1) >= (floor(dude_charisma / 2) + has_trait(TRAIT_PERK, dude_obj, PERK_magnetic_personality_perk))) or ((party_member_count(0) - 1) >= 5)) then begin
            if (obj_in_party(self_obj)) then begin
                debug_msg("abandon party: " + self_name);
                party_remove(self_obj);
            end
            if ((obj_pid(self_obj) == 16777380) or (obj_pid(self_obj) == 16777379)) then begin
                debug_msg("start: set_dude_was_married");
                if ((global_var(GVAR_PLAYER_MARRIED) != 0) and ((global_var(GVAR_PLAYER_WAS_MARRIED) != 0) == 0)) then begin
                    debug_msg("   GVAR_PLAYER_WAS_MARRIED before == " + global_var(GVAR_PLAYER_WAS_MARRIED));
                    set_global_var(GVAR_PLAYER_WAS_MARRIED, global_var(GVAR_PLAYER_MARRIED));
                    debug_msg("   GVAR_PLAYER_WAS_MARRIED after == " + global_var(GVAR_PLAYER_WAS_MARRIED));
                    set_global_var(GVAR_PLAYER_MARRIED, 0);
                end
                debug_msg("finished: set_dude_was_married");
            end
            if ((local_var(12) != -1) and (has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) == 0)) then begin
                critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, local_var(12));
                set_local_var(12, -1);
            end
            debug_msg("" + self_name + " has abandoned the party");
            Reply(2000);
            giq_option(1, NAME, g_mstr(10007), Node999, NEUTRAL_REACTION);
        end
        else begin
            if (global_var(GVAR_TOWN_REP_GECKO) <= -15) then begin
                if (obj_in_party(self_obj)) then begin
                    debug_msg("abandon party: " + self_name);
                    party_remove(self_obj);
                end
                if ((obj_pid(self_obj) == 16777380) or (obj_pid(self_obj) == 16777379)) then begin
                    debug_msg("start: set_dude_was_married");
                    if ((global_var(GVAR_PLAYER_MARRIED) != 0) and ((global_var(GVAR_PLAYER_WAS_MARRIED) != 0) == 0)) then begin
                        debug_msg("   GVAR_PLAYER_WAS_MARRIED before == " + global_var(GVAR_PLAYER_WAS_MARRIED));
                        set_global_var(GVAR_PLAYER_WAS_MARRIED, global_var(GVAR_PLAYER_MARRIED));
                        debug_msg("   GVAR_PLAYER_WAS_MARRIED after == " + global_var(GVAR_PLAYER_WAS_MARRIED));
                        set_global_var(GVAR_PLAYER_MARRIED, 0);
                    end
                    debug_msg("finished: set_dude_was_married");
                end
                if ((local_var(12) != -1) and (has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) == 0)) then begin
                    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, local_var(12));
                    set_local_var(12, -1);
                end
                debug_msg("" + self_name + " has abandoned the party");
                Reply(2100);
                giq_option(1, NAME, g_mstr(10007), Node999, NEUTRAL_REACTION);
            end
            else begin
                set_local_var(10, 0);
                if ((critter_state(self_obj) bwand 1) == 0) then begin
                    if (local_var(11) == 0) then begin
                        set_local_var(11, 6);
                    end
                    set_local_var(10, 0);
                    if (has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) != 0) then begin
                        set_local_var(12, has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM));
                    end
                    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 0);
                    party_add(self_obj);
                end
                debug_msg("join party: " + self_name);
                Reply(2200);
                if ((local_var(10) != 0) == 0) then begin
                    if (local_var(11) == 0) then begin
                        set_local_var(11, 6);
                    end
                    if (g_mstr(10001) != 0) then begin
                        if (get_critter_stat(self_obj, STAT_current_hp) < get_critter_stat(self_obj, STAT_max_hp)) then begin
                            giq_option(4, NAME, g_mstr(10001), Node1001, NEUTRAL_REACTION);
                        end
                    end
                    if (g_mstr(10008) != 0) then begin
                        giq_option(4, NAME, g_mstr(10008), Node1007, NEUTRAL_REACTION);
                    end
                    if (g_mstr(10009) != 0) then begin
                        giq_option(4, NAME, g_mstr(10009), Node1008, NEUTRAL_REACTION);
                    end
                    if (g_mstr(10002) != 0) then begin
                        giq_option(4, NAME, g_mstr(10002), Node1002, NEUTRAL_REACTION);
                    end
                end
                else begin
                    if (g_mstr(10100) != 0) then begin
                        giq_option(4, NAME, g_mstr(10100), Node1100, NEUTRAL_REACTION);
                    end
                end
                if (g_mstr(10007) != 0) then begin
                    giq_option(4, NAME, g_mstr(10007), Node999, NEUTRAL_REACTION);
                end
                if (g_mstr(random(300, 303)) != 0) then begin
                    giq_option(-3, NAME, g_mstr(random(300, 303)), Node999, NEUTRAL_REACTION);
                end
                debug_msg("USED PARTY MEMBER OPTIONS");
            end
        end
    end
end
