variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure use_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_update_p_proc;
procedure timed_event_p_proc;
procedure map_enter_p_proc;

variable fieldPtr;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure use_p_proc
begin
    script_overrides;
    display_msg(message_str(SCRIPT_WSEMIT1A, 100));
end

procedure use_skill_on_p_proc
begin
    variable LVar0 := 0;
    LVar0 := action_being_used;
    if (-1 != -1) then begin
        set_map_var(-1, 3);
    end
    if (-1 != -1) then begin
        set_global_var(-1, 3);
    end
    if ((LVar0 == 13) and not(local_var(0) == 4)) then begin
        script_overrides;
        if (is_success(roll_vs_skill(source_obj, LVar0, -40))) then begin
            if (local_var(0) == 1) then begin
                add_timer_event(self_obj, 0, 2);
                if (source_obj == dude_obj) then begin
                    display_msg(message_str(SCRIPT_WSEMIT1A, 112));
                end
                else begin
                    display_msg(obj_name(source_obj) + message_str(SCRIPT_WSEMIT1A, 113));
                end
            end
            else begin
                add_timer_event(self_obj, 0, 1);
                if (source_obj == dude_obj) then begin
                    display_msg(message_str(SCRIPT_WSEMIT1A, 114));
                end
                else begin
                    display_msg(obj_name(source_obj) + message_str(SCRIPT_WSEMIT1A, 115));
                end
            end
            if (local_var(1) == 0) then begin
                set_local_var(1, 1);
                give_exp_points(50);
                display_msg(g_mstr(100) + 50 + g_mstr(101));
            end
        end
        else begin
            if (source_obj == dude_obj) then begin
                set_local_var(2, local_var(2) + 1);
                display_msg(message_str(SCRIPT_WSEMIT1A, 109));
            end
            else begin
                display_msg(message_str(SCRIPT_WSEMIT1A, 110));
            end
            if (local_var(2) == 3) then begin
                if (-1 != -1) then begin
                    set_map_var(-1, 1);
                end
                if (-1 != -1) then begin
                    set_global_var(-1, 1);
                end
                set_local_var(2, 0);
            end
        end
    end
end

procedure use_obj_on_p_proc
begin
    variable LVar0 := 0;
    LVar0 := obj_pid(obj_being_used_with);
    if (-1 != -1) then begin
        set_map_var(-1, 3);
    end
    if (-1 != -1) then begin
        set_global_var(-1, 3);
    end
    if ((LVar0 == 75) and not(local_var(0) == 4)) then begin
        script_overrides;
        if (is_success(roll_vs_skill(source_obj, 12, -40 + 20))) then begin
            if (local_var(0) == 1) then begin
                add_timer_event(self_obj, 0, 2);
                if (source_obj == dude_obj) then begin
                    display_msg(message_str(SCRIPT_WSEMIT1A, 112));
                end
                else begin
                    display_msg(obj_name(source_obj) + message_str(SCRIPT_WSEMIT1A, 113));
                end
            end
            else begin
                add_timer_event(self_obj, 0, 1);
                if (source_obj == dude_obj) then begin
                    display_msg(message_str(SCRIPT_WSEMIT1A, 114));
                end
                else begin
                    display_msg(obj_name(source_obj) + message_str(SCRIPT_WSEMIT1A, 115));
                end
            end
            if (local_var(1) == 0) then begin
                set_local_var(1, 1);
                give_exp_points(50);
                display_msg(g_mstr(100) + 50 + g_mstr(101));
            end
        end
        else begin
            if (source_obj == dude_obj) then begin
                set_local_var(2, local_var(2) + 1);
                display_msg(message_str(SCRIPT_WSEMIT1A, 109));
            end
            else begin
                display_msg(message_str(SCRIPT_WSEMIT1A, 110));
            end
            if (local_var(2) == 3) then begin
                if (-1 != -1) then begin
                    set_map_var(-1, 1);
                end
                if (-1 != -1) then begin
                    set_global_var(-1, 1);
                end
                set_local_var(2, 0);
            end
        end
    end
end

procedure damage_p_proc
begin
    if (is_success(roll_vs_skill(dude_obj, 11, -20))) then begin
        add_timer_event(self_obj, 0, 3);
    end
    else begin
        add_timer_event(self_obj, 0, 4);
    end
    if (-1 != -1) then begin
        set_map_var(-1, 2);
    end
    if (-1 != -1) then begin
        set_global_var(-1, 2);
    end
end

procedure map_update_p_proc
begin
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if (not(local_var(0) == 4) and not(local_var(0) == 1)) then begin
            set_obj_visibility(fieldPtr, 0);
            set_local_var(0, 1);
        end
    end
    else begin
        if (fixed_param == 2) then begin
            if (not(local_var(0) == 4) and not(local_var(0) == 2)) then begin
                set_local_var(0, 2);
                set_obj_visibility(fieldPtr, 1);
                add_timer_event(self_obj, 60 * 10, 1);
            end
        end
        else begin
            if (fixed_param == 3) then begin
                if (not(local_var(0) == 4) and not(local_var(0) == 4)) then begin
                    if (-1 != -1) then begin
                        set_map_var(-1, 4);
                    end
                    if (-1 != -1) then begin
                        set_global_var(-1, 4);
                    end
                    destroy_object(fieldPtr);
                    display_msg(message_str(SCRIPT_WSEMIT1A, 116));
                    set_local_var(0, 4);
                    destroy_object(self_obj);
                end
            end
            else begin
                if (fixed_param == 4) then begin
                    if (not(local_var(0) == 4) and not(local_var(0) == 8)) then begin
                        set_local_var(0, 8);
                        set_local_var(3, game_time + random(60 * 10, 60 * 10 * 2));
                        add_timer_event(self_obj, 0, 5);
                    end
                end
                else begin
                    if (fixed_param == 5) then begin
                        if (not(local_var(0) == 4) and (local_var(0) == 8)) then begin
                            if (game_time < local_var(3)) then begin
                                if (obj_is_visible_flag(fieldPtr)) then begin
                                    set_obj_visibility(fieldPtr, 1);
                                end
                                else begin
                                    set_obj_visibility(fieldPtr, 0);
                                end
                                add_timer_event(self_obj, random(0, 5), 5);
                            end
                            else begin
                                add_timer_event(self_obj, 0, 1);
                            end
                        end
                    end
                    else begin
                        if (fixed_param == 6) then begin
                            if (not((map_var(1) == 0) and ((global_var(GVAR_SAN_FRAN_STRUGGLE) == 16) or (global_var(GVAR_SAN_FRAN_STRUGGLE) == 32) or (global_var(GVAR_SAN_FRAN_STRUGGLE) == 64) or (global_var(GVAR_SAN_FRAN_ELRON) < 8) or ((global_var(GVAR_SAN_FRAN_FLAGS) bwand 262144) != 0)))) then begin
                                set_local_var(4, 0);
                                if (not(local_var(0) == 4)) then begin
                                    if (obj_is_visible_flag(fieldPtr)) then begin
                                        set_obj_visibility(fieldPtr, 1);
                                    end
                                end
                            end
                            else begin
                                set_local_var(4, 1);
                                if (not(local_var(0) == 4) and (local_var(0) == 1)) then begin
                                    if (not(obj_is_visible_flag(fieldPtr))) then begin
                                        set_obj_visibility(fieldPtr, 0);
                                    end
                                end
                            end
                            if (not(local_var(0) == 4)) then begin
                                add_timer_event(self_obj, game_ticks(5), 6);
                            end
                        end
                        else begin
                            if (fixed_param == 7) then begin
                            end
                            else begin
                                if (fixed_param == 8) then begin
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure map_enter_p_proc
begin
    variable LVar0 := 0;
    if (-1 != -1) then begin
        if (map_var(-1) == 4) then begin
            LVar0 := 1;
        end
    end
    if (-1 != -1) then begin
        if (global_var(-1) == 4) then begin
            LVar0 := 1;
        end
    end
    if (not(local_var(0) == 4) and not(LVar0)) then begin
        fieldPtr := tile_contains_pid_obj(23332, 0, 33554922);
        if (obj_is_visible_flag(fieldPtr)) then begin
            set_local_var(4, 1);
        end
        add_timer_event(self_obj, 0, 6);
        if (not(is_loading_game)) then begin
            add_timer_event(self_obj, 0, 1);
        end
    end
    else begin
        fieldPtr := tile_contains_pid_obj(23332, 0, 33554922);
        destroy_object(fieldPtr);
        set_local_var(0, 4);
        destroy_object(self_obj);
    end
end
