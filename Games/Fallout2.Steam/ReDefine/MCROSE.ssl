variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure combat_p_proc;
procedure Node000;
procedure Node001;
procedure Node002;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure Node999;
procedure Node998;
procedure Node996;
procedure Node995;
procedure Node994;
procedure Node993;
procedure Node991;
procedure Node990;
procedure Node989;
procedure Node988;
procedure Node987;

variable only_once;
variable food_cost;

import variable modoc_rose_obj;

procedure timed_event_p_proc;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
    modoc_rose_obj := self_obj;
end

procedure critter_p_proc
begin
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if (((local_var(5) bwand 2) != 0) or (global_var(GVAR_TOWN_REP_MODOC) <= -1000)) then begin
            if (critter_is_fleeing(self_obj)) then begin
                if (anim_busy(self_obj) == 0) then begin
                    if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                        if (anim_busy(self_obj) == 0) then begin
                            global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                                debug_msg("flee loop: rot == " + global_temp);
                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                global_temp := (global_temp + 1) % 6;
                            end
                        end
                    end
                end
            end
            else begin
                attack(dude_obj);
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        call Node998();
    end
end

procedure talk_p_proc
begin
    script_overrides;
    if ((global_var(GVAR_MODOC_GENERIC_FLAG_1) bwand 16384) != 0) then begin
        float_msg(self_obj, mstr(150), FLOAT_MSG_YELLOW);
    end
    else begin
        set_global_var(GVAR_MODOC_GENERIC_FLAG_1, global_var(GVAR_MODOC_GENERIC_FLAG_1) bwor 32);
        start_gdialog(108, self_obj, 4, -1, -1);
        gsay_start;
        if (global_var(GVAR_MODOC_VERMIN_HUNTER_SEED) >= 7) then begin
            call Node002();
        end
        else begin
            if (((local_var(5) bwand 1) != 0) == 0) then begin
                call Node000();
            end
            else begin
                call Node001();
            end
        end
        gsay_end;
        end_dialogue;
    end
    set_local_var(5, local_var(5) bwor 1);
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (critter_kill_type(self_obj) == KILL_TYPE_children_kills) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(GVAR_TOWN_REP_MODOC, global_var(GVAR_TOWN_REP_MODOC) + -8);
                debug_msg("Added " + -8 + " to Town Rep");
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(GVAR_TOWN_REP_MODOC, global_var(GVAR_TOWN_REP_MODOC) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
    modoc_rose_obj := 0;
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100 + ((local_var(5) bwand 1) != 0));
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(102);
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        if ((global_var(GVAR_TOWN_REP_MODOC) <= -1000) == 0) then begin
            set_global_var(GVAR_TOWN_REP_MODOC, -1000);
        end
        call Node998();
    end
end

procedure map_enter_p_proc
begin
    modoc_rose_obj := self_obj;
    if ((CUR_MAP_MODINN) and (elevation(self_obj) != ((global_var(GVAR_MODOC_GENERIC_FLAG_1) bwand 1) != 0))) then begin
        move_to(self_obj, tile_num(self_obj), (global_var(GVAR_MODOC_GENERIC_FLAG_1) bwand 1) != 0);
    end
    if (only_once == 0) then begin
        only_once := 1;
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 28);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_PEASANTS);
    end
    if (map_first_run) then begin
        restock_amt := random(20, 20);
        if (obj_is_carrying_obj_pid(self_obj, 41) < restock_amt) then begin
            if (100 >= random(1, 100)) then begin
                if (obj_is_carrying_obj_pid(self_obj, 41) < restock_amt) then begin
                    restock_obj := create_object(41, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 41));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 41) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 41);
                        if ((obj_is_carrying_obj_pid(self_obj, 41) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 41) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 41);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 41);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            destroy_object(restock_obj);
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
        end
        else begin
            if (obj_is_carrying_obj_pid(self_obj, 41) < restock_amt) then begin
                restock_obj := create_object(41, 0, 0);
                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 41));
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 41) > restock_amt) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 41);
                    if ((obj_is_carrying_obj_pid(self_obj, 41) - restock_amt) < removed_qty) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 41) - restock_amt;
                    end
                    if (removed_qty > 0) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 41);
                        if (obj_type(self_obj) == 1) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 41);
                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                    restock_obj := critter_inven_obj(self_obj, 0);
                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    add_obj_to_inven(self_obj, restock_obj);
                                end
                            end
                            else begin
                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                    inven_unwield(self_obj);
                                end
                            end
                        end
                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                        destroy_object(restock_obj);
                    end
                    restock_obj := 0;
                    restock_amt := 0;
                end
                else begin
                    restock_obj := 0;
                end
            end
        end
    end
end

procedure combat_p_proc
begin
    if (fixed_param == 4) then begin
    end
end

procedure Node000
begin
    if (dude_gender == 0) then begin
        Reply(154);
    end
    else begin
        Reply(155);
    end
    giq_option(4, NAME, 156, Node010, NEUTRAL_REACTION);
    giq_option(4, NAME, 157, Node032, NEUTRAL_REACTION);
    giq_option(4, NAME, 158, Node023, NEUTRAL_REACTION);
    giq_option(4, NAME, g_mstr(random(375, 376)), Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 159, Node996, NEUTRAL_REACTION);
    giq_option(-3, NAME, g_mstr(random(300, 303)), Node999, NEUTRAL_REACTION);
end

procedure Node001
begin
    Reply(160);
    giq_option(4, NAME, 156, Node010, NEUTRAL_REACTION);
    giq_option(4, NAME, 157, Node032, NEUTRAL_REACTION);
    giq_option(4, NAME, 158, Node023, NEUTRAL_REACTION);
    giq_option(4, NAME, g_mstr(random(375, 376)), Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 159, Node996, NEUTRAL_REACTION);
    giq_option(-3, NAME, g_mstr(random(300, 303)), Node999, NEUTRAL_REACTION);
end

procedure Node002
begin
    food_cost := 0;
    if ((global_var(GVAR_MODOC_GENERIC_FLAG_2) bwand 262144) != 0) then begin
        Reply(166);
    end
    else begin
        set_global_var(GVAR_MODOC_GENERIC_FLAG_2, global_var(GVAR_MODOC_GENERIC_FLAG_2) bwor 262144);
        Reply(165);
    end
    giq_option(4, NAME, 167, Node995, NEUTRAL_REACTION);
    giq_option(4, NAME, g_mstr(random(375, 376)), Node999, NEUTRAL_REACTION);
end

procedure Node010
begin
    if (dude_gender == 0) then begin
        Reply(168);
    end
    else begin
        Reply(169);
    end
    giq_option(4, NAME, 170, Node994, NEUTRAL_REACTION);
    giq_option(4, NAME, 171, Node993, NEUTRAL_REACTION);
    if (((global_var(GVAR_MODOC_VERMIN_HUNTER_SEED) >= 7) == 0) and (((local_var(5) bwand 512) != 0) == 0)) then begin
        giq_option(4, NAME, 172, Node033, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 173, Node991, NEUTRAL_REACTION);
    giq_option(4, NAME, 174, Node990, NEUTRAL_REACTION);
    giq_option(4, NAME, 175, Node989, NEUTRAL_REACTION);
    giq_option(4, NAME, 176, Node999, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(177);
    if (item_caps_total(dude_obj) >= 3) then begin
        giq_option(4, NAME, 178, Node010, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 179, Node023, NEUTRAL_REACTION);
    giq_option(4, NAME, g_mstr(random(375, 376)), Node999, NEUTRAL_REACTION);
end

procedure Node012
begin
    if (local_var(4) > 36) then begin
        Reply(180);
        giq_option(4, NAME, 182, Node022, NEUTRAL_REACTION);
    end
    else begin
        Reply(181);
        giq_option(4, NAME, 183, Node013, NEUTRAL_REACTION);
        giq_option(4, NAME, 184, Node022, NEUTRAL_REACTION);
    end
end

procedure Node013
begin
    Reply(185);
    giq_option(4, NAME, 186, Node022, NEUTRAL_REACTION);
    giq_option(4, NAME, 187, Node988, NEUTRAL_REACTION);
end

procedure Node014
begin
    item_caps_adjust(self_obj, food_cost);
    item_caps_adjust(dude_obj, -food_cost);
    Reply(188);
    giq_option(4, NAME, g_mstr(352), Node015, NEUTRAL_REACTION);
end

procedure Node015
begin
    Reply(189);
    giq_option(4, NAME, g_mstr(352), Node016, NEUTRAL_REACTION);
end

procedure Node016
begin
    Reply(190);
    giq_option(4, NAME, 191, Node017, NEUTRAL_REACTION);
end

procedure Node017
begin
    Reply(192);
    giq_option(4, NAME, 193, Node018, NEUTRAL_REACTION);
end

procedure Node018
begin
    Reply(194);
    giq_option(4, NAME, 195, Node019, NEUTRAL_REACTION);
end

procedure Node019
begin
    set_local_var(4, 36 + 1);
    Reply(196);
    giq_option(4, NAME, 197, Node020, NEUTRAL_REACTION);
end

procedure Node020
begin
    poison(dude_obj, 1);
    item_caps_adjust(dude_obj, 20);
    Reply(198);
    giq_option(4, NAME, 199, Node999, NEUTRAL_REACTION);
end

procedure Node021
begin
    item_caps_adjust(self_obj, food_cost);
    item_caps_adjust(dude_obj, -food_cost);
    critter_heal(dude_obj, get_critter_stat(dude_obj, STAT_max_hp) - get_critter_stat(dude_obj, STAT_current_hp));
    poison(dude_obj, -get_poison(dude_obj));
    set_local_var(5, local_var(5) bwor 1024);
    Reply(200);
    giq_option(4, NAME, 201, Node999, NEUTRAL_REACTION);
end

procedure Node022
begin
    item_caps_adjust(self_obj, food_cost);
    item_caps_adjust(dude_obj, -food_cost);
    if (food_cost == 1000) then begin
        if (((local_var(5) bwand 512) != 0) == 0) then begin
            restock_obj := create_object(378, 0, 0);
            add_mult_objs_to_inven(dude_obj, restock_obj, 1);
        end
        set_local_var(5, local_var(5) bwor 512);
        Reply(300);
    end
    else begin
        Reply(202);
    end
    giq_option(4, NAME, 203, Node024, NEUTRAL_REACTION);
    giq_option(4, NAME, g_mstr(random(375, 376)), Node999, NEUTRAL_REACTION);
end

procedure Node023
begin
    Reply(204);
    giq_option(4, NAME, 205, Node010, NEUTRAL_REACTION);
    giq_option(4, NAME, g_mstr(random(375, 376)), Node999, NEUTRAL_REACTION);
end

procedure Node024
begin
    Reply(206);
    if ((global_var(GVAR_DUDE_STOMACH) >= 4) and (global_var(GVAR_DUDE_STOMACH) < 7) or ((global_var(GVAR_MODOC_FAMILY_FEUD_SEED_ONE) >= 4) and (global_var(GVAR_MODOC_FAMILY_FEUD_SEED_ONE) < 7))) then begin
        giq_option(4, NAME, 207, Node025, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 208, Node027, NEUTRAL_REACTION);
    if ((global_var(GVAR_MODOC_VERMIN_HUNTER_SEED) >= 4) and (global_var(GVAR_MODOC_VERMIN_HUNTER_SEED) < 7)) then begin
        giq_option(4, NAME, 209, Node028, NEUTRAL_REACTION);
    end
    if ((local_var(5) bwand 1024) != 0) then begin
        giq_option(6, NAME, 210, Node029, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 211, Node030, NEUTRAL_REACTION);
    giq_option(4, NAME, g_mstr(random(375, 376)), Node999, NEUTRAL_REACTION);
end

procedure Node025
begin
    Reply(212);
    giq_option(4, NAME, g_mstr(353), Node026, NEUTRAL_REACTION);
end

procedure Node026
begin
    Reply(213);
    giq_option(4, NAME, 214, Node023, NEUTRAL_REACTION);
    giq_option(4, NAME, 215, Node010, NEUTRAL_REACTION);
    giq_option(4, NAME, g_mstr(random(375, 376)), Node999, NEUTRAL_REACTION);
end

procedure Node027
begin
    Reply(216);
    giq_option(4, NAME, g_mstr(353), Node026, NEUTRAL_REACTION);
end

procedure Node028
begin
    Reply(217);
    giq_option(4, NAME, g_mstr(353), Node026, NEUTRAL_REACTION);
end

procedure Node029
begin
    Reply(218);
    giq_option(4, NAME, g_mstr(353), Node026, NEUTRAL_REACTION);
end

procedure Node030
begin
    Reply(220);
    giq_option(4, NAME, g_mstr(353), Node026, NEUTRAL_REACTION);
end

procedure Node031
begin
    critter_heal(dude_obj, get_critter_stat(dude_obj, STAT_max_hp) - get_critter_stat(dude_obj, STAT_current_hp));
    poison(dude_obj, -get_poison(dude_obj));
    Reply(221);
    giq_option(1, NAME, g_mstr(random(202, 203)), Node026, NEUTRAL_REACTION);
end

procedure Node032
begin
    Reply(222);
    giq_option(4, NAME, 156, Node010, NEUTRAL_REACTION);
    giq_option(4, NAME, 158, Node023, NEUTRAL_REACTION);
    giq_option(4, NAME, g_mstr(random(375, 376)), Node999, NEUTRAL_REACTION);
end

procedure Node033
begin
    food_cost := 1000;
    Reply(225);
    giq_option(4, NAME, 226, Node987, NEUTRAL_REACTION);
    giq_option(4, NAME, 227, Node010, NEUTRAL_REACTION);
    giq_option(4, NAME, g_mstr(random(375, 376)), Node999, NEUTRAL_REACTION);
end

procedure Node034
begin
    Reply(228);
    if ((global_var(GVAR_MODOC_VERMIN_HUNTER_SEED) >= 7) == 0) then begin
        giq_option(4, NAME, 229, Node010, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 230, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 231, Node999, NEUTRAL_REACTION);
end

procedure Node999
begin
end

procedure Node998
begin
    set_local_var(5, local_var(5) bwor 2);
end

procedure Node996
begin
    if ((global_var(GVAR_MODOC_GENERIC_FLAG_1) bwand 2) != 0) then begin
        call Node034();
    end
    else begin
        call Node031();
    end
end

procedure Node995
begin
    if ((global_var(GVAR_MODOC_GENERIC_FLAG_1) bwand 2) != 0) then begin
        call Node034();
    end
    else begin
        call Node021();
    end
end

procedure Node994
begin
    if (item_caps_total(dude_obj) >= 5) then begin
        food_cost := 5;
        call Node012();
    end
    else begin
        call Node011();
    end
end

procedure Node993
begin
    if ((global_var(GVAR_MODOC_GENERIC_FLAG_1) bwand 2) != 0) then begin
        call Node034();
    end
    else begin
        if (item_caps_total(dude_obj) >= 25) then begin
            food_cost := 25;
            call Node021();
        end
        else begin
            call Node011();
        end
    end
end

procedure Node991
begin
    if (item_caps_total(dude_obj) >= 5) then begin
        food_cost := 5;
        call Node022();
    end
    else begin
        call Node011();
    end
end

procedure Node990
begin
    if (item_caps_total(dude_obj) >= 7) then begin
        food_cost := 7;
        call Node022();
    end
    else begin
        call Node011();
    end
end

procedure Node989
begin
    if (item_caps_total(dude_obj) >= 3) then begin
        food_cost := 3;
        call Node022();
    end
    else begin
        call Node011();
    end
end

procedure Node988
begin
    if (item_caps_total(dude_obj) >= 20) then begin
        food_cost := 20;
        call Node014();
    end
    else begin
        call Node011();
    end
end

procedure Node987
begin
    if (item_caps_total(dude_obj) >= 1000) then begin
        food_cost := 1000;
        call Node022();
    end
    else begin
        call Node011();
    end
end

procedure timed_event_p_proc
begin
    if (map_var(1) <= 3) then begin
        float_msg(self_obj, mstr(151 + map_var(1)), FLOAT_MSG_YELLOW);
        if (((global_var(GVAR_MODOC_GENERIC_FLAG_2) bwand 262144) != 0) == 0) then begin
            set_map_var(1, map_var(1) + 1);
        end
    end
    if (map_var(1) >= 3) then begin
        call Node998();
    end
end
