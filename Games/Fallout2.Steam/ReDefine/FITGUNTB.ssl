variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure validHandle(variable arg0);

import variable i_tgun_table_swap;
import variable i_tgun_merchant;

procedure timed_event_p_proc;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
    i_tgun_table_swap := self_obj;
end

procedure use_p_proc
begin
    if (validHandle(i_tgun_merchant)) then begin
        script_overrides;
        i_tgun_table_swap := self_obj;
        add_timer_event(i_tgun_merchant, 0, 5);
    end
end

procedure look_at_p_proc
begin
end

procedure description_p_proc
begin
end

procedure use_skill_on_p_proc
begin
    if (validHandle(i_tgun_merchant)) then begin
        call use_p_proc();
    end
end

procedure use_obj_on_p_proc
begin
    if (validHandle(i_tgun_merchant)) then begin
        call use_p_proc();
    end
end

procedure damage_p_proc
begin
end

procedure map_enter_p_proc
begin
    if (validHandle(i_tgun_merchant)) then begin
        if (local_var(0) < game_time) then begin
            if (tile_num(self_obj) == 16293) then begin
                restock_amt := random(300, 436);
                if (obj_is_carrying_obj_pid(self_obj, 41) < restock_amt) then begin
                    if (80 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 41) < restock_amt) then begin
                            restock_obj := create_object(41, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 41));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 41) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 41);
                                if ((obj_is_carrying_obj_pid(self_obj, 41) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 41) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 41);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 41);
                                        if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 41) < restock_amt) then begin
                        restock_obj := create_object(41, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 41));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 41) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 41);
                            if ((obj_is_carrying_obj_pid(self_obj, 41) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 41) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 41);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 41);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 3);
                if (obj_is_carrying_obj_pid(self_obj, 234) < restock_amt) then begin
                    if (80 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 234) < restock_amt) then begin
                            restock_obj := create_object(234, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 234));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 234) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 234);
                                if ((obj_is_carrying_obj_pid(self_obj, 234) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 234) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 234);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 234);
                                        if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 234) < restock_amt) then begin
                        restock_obj := create_object(234, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 234));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 234) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 234);
                            if ((obj_is_carrying_obj_pid(self_obj, 234) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 234) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 234);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 234);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 1);
                if (obj_is_carrying_obj_pid(self_obj, 407) < restock_amt) then begin
                    if (100 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 407) < restock_amt) then begin
                            restock_obj := create_object(407, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 407));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 407) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 407);
                                if ((obj_is_carrying_obj_pid(self_obj, 407) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 407) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 407);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 407);
                                        if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 407) < restock_amt) then begin
                        restock_obj := create_object(407, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 407));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 407) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 407);
                            if ((obj_is_carrying_obj_pid(self_obj, 407) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 407) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 407);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 407);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 1);
                if (obj_is_carrying_obj_pid(self_obj, 20) < restock_amt) then begin
                    if (100 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 20) < restock_amt) then begin
                            restock_obj := create_object(20, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 20));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 20) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 20);
                                if ((obj_is_carrying_obj_pid(self_obj, 20) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 20) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 20);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 20);
                                        if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 20) < restock_amt) then begin
                        restock_obj := create_object(20, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 20));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 20) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 20);
                            if ((obj_is_carrying_obj_pid(self_obj, 20) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 20) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 20);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 20);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 2);
                if (obj_is_carrying_obj_pid(self_obj, 383) < restock_amt) then begin
                    if (80 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 383) < restock_amt) then begin
                            restock_obj := create_object(383, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 383));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 383) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 383);
                                if ((obj_is_carrying_obj_pid(self_obj, 383) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 383) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 383);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 383);
                                        if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 383) < restock_amt) then begin
                        restock_obj := create_object(383, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 383));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 383) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 383);
                            if ((obj_is_carrying_obj_pid(self_obj, 383) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 383) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 383);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 383);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 2);
                if (obj_is_carrying_obj_pid(self_obj, 384) < restock_amt) then begin
                    if (50 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 384) < restock_amt) then begin
                            restock_obj := create_object(384, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 384));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 384) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 384);
                                if ((obj_is_carrying_obj_pid(self_obj, 384) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 384) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 384);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 384);
                                        if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 384) < restock_amt) then begin
                        restock_obj := create_object(384, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 384));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 384) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 384);
                            if ((obj_is_carrying_obj_pid(self_obj, 384) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 384) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 384);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 384);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(3, 7);
                if (obj_is_carrying_obj_pid(self_obj, 40) < restock_amt) then begin
                    if (80 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 40) < restock_amt) then begin
                            restock_obj := create_object(40, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 40));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 40) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 40);
                                if ((obj_is_carrying_obj_pid(self_obj, 40) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 40) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 40);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 40);
                                        if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 40) < restock_amt) then begin
                        restock_obj := create_object(40, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 40));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 40) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 40);
                            if ((obj_is_carrying_obj_pid(self_obj, 40) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 40) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 40);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 40);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 2);
                if (obj_is_carrying_obj_pid(self_obj, 47) < restock_amt) then begin
                    if (60 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 47) < restock_amt) then begin
                            restock_obj := create_object(47, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 47));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 47) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 47);
                                if ((obj_is_carrying_obj_pid(self_obj, 47) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 47) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 47);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 47);
                                        if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 47) < restock_amt) then begin
                        restock_obj := create_object(47, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 47));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 47) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 47);
                            if ((obj_is_carrying_obj_pid(self_obj, 47) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 47) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 47);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 47);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(3, 7);
                if (obj_is_carrying_obj_pid(self_obj, 48) < restock_amt) then begin
                    if (60 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 48) < restock_amt) then begin
                            restock_obj := create_object(48, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 48));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 48) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 48);
                                if ((obj_is_carrying_obj_pid(self_obj, 48) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 48) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 48);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 48);
                                        if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 48) < restock_amt) then begin
                        restock_obj := create_object(48, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 48));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 48) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 48);
                            if ((obj_is_carrying_obj_pid(self_obj, 48) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 48) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 48);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 48);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(4, 8);
                if (obj_is_carrying_obj_pid(self_obj, 53) < restock_amt) then begin
                    if (50 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 53) < restock_amt) then begin
                            restock_obj := create_object(53, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 53));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 53) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 53);
                                if ((obj_is_carrying_obj_pid(self_obj, 53) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 53) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 53);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 53);
                                        if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 53) < restock_amt) then begin
                        restock_obj := create_object(53, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 53));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 53) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 53);
                            if ((obj_is_carrying_obj_pid(self_obj, 53) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 53) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 53);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 53);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(4, 8);
                if (obj_is_carrying_obj_pid(self_obj, 71) < restock_amt) then begin
                    if (60 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 71) < restock_amt) then begin
                            restock_obj := create_object(71, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 71));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 71) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 71);
                                if ((obj_is_carrying_obj_pid(self_obj, 71) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 71) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 71);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 71);
                                        if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 71) < restock_amt) then begin
                        restock_obj := create_object(71, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 71));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 71) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 71);
                            if ((obj_is_carrying_obj_pid(self_obj, 71) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 71) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 71);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 71);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(4, 8);
                if (obj_is_carrying_obj_pid(self_obj, 87) < restock_amt) then begin
                    if (50 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 87) < restock_amt) then begin
                            restock_obj := create_object(87, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 87));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 87) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 87);
                                if ((obj_is_carrying_obj_pid(self_obj, 87) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 87) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 87);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 87);
                                        if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 87) < restock_amt) then begin
                        restock_obj := create_object(87, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 87));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 87) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 87);
                            if ((obj_is_carrying_obj_pid(self_obj, 87) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 87) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 87);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 87);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(4, 8);
                if (obj_is_carrying_obj_pid(self_obj, 110) < restock_amt) then begin
                    if (50 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 110) < restock_amt) then begin
                            restock_obj := create_object(110, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 110));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 110) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 110);
                                if ((obj_is_carrying_obj_pid(self_obj, 110) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 110) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 110);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 110);
                                        if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 110) < restock_amt) then begin
                        restock_obj := create_object(110, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 110));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 110) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 110);
                            if ((obj_is_carrying_obj_pid(self_obj, 110) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 110) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 110);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 110);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(6, 7);
                if (obj_is_carrying_obj_pid(self_obj, 144) < restock_amt) then begin
                    if (30 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 144) < restock_amt) then begin
                            restock_obj := create_object(144, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 144));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 144) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 144);
                                if ((obj_is_carrying_obj_pid(self_obj, 144) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 144) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 144);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 144);
                                        if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 144) < restock_amt) then begin
                        restock_obj := create_object(144, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 144));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 144) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 144);
                            if ((obj_is_carrying_obj_pid(self_obj, 144) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 144) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 144);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 144);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 3);
                if (obj_is_carrying_obj_pid(self_obj, 260) < restock_amt) then begin
                    if (30 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 260) < restock_amt) then begin
                            restock_obj := create_object(260, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 260));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 260) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 260);
                                if ((obj_is_carrying_obj_pid(self_obj, 260) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 260) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 260);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 260);
                                        if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 260) < restock_amt) then begin
                        restock_obj := create_object(260, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 260));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 260) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 260);
                            if ((obj_is_carrying_obj_pid(self_obj, 260) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 260) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 260);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 260);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(4, 5);
                if (obj_is_carrying_obj_pid(self_obj, 284) < restock_amt) then begin
                    if (45 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 284) < restock_amt) then begin
                            restock_obj := create_object(284, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 284));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 284) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 284);
                                if ((obj_is_carrying_obj_pid(self_obj, 284) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 284) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 284);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 284);
                                        if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 284) < restock_amt) then begin
                        restock_obj := create_object(284, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 284));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 284) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 284);
                            if ((obj_is_carrying_obj_pid(self_obj, 284) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 284) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 284);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 284);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            set_local_var(0, game_time + (7 * (24 * (60 * (60 * 10))) * random(1, 2)));
        end
    end
end

procedure map_update_p_proc
begin
end

procedure validHandle(variable arg0)
begin
    if ((arg0 != 0) and (arg0 != -1)) then begin
        return 1;
    end
    return 0;
end

procedure timed_event_p_proc
begin
end
