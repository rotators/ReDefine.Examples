variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;
procedure old_pickup_p_proc;
procedure pickup_p_proc;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure getTimeBit;
procedure start;
procedure critter_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure push_p_proc;
procedure Node998;
procedure Node999;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure checkGeck;

import variable i_matt_obj;
import variable i_gruthar_obj;

variable Only_Once;
variable checkCounter;
variable checkThresh := 50;
variable nice;
variable starttile;
variable doMattTalk;
variable geck_container;
variable geck_obj;

procedure timed_event_p_proc;
procedure combat_p_proc;
procedure checkFunction;
procedure NodeTeleport;
procedure Node025a;
procedure Node003a;
procedure Node005a;
procedure Node006a;
procedure Node007a;
procedure Node008a;
procedure Node014a;
procedure Node010a;
procedure Node031a;
procedure Node016a;
procedure Node999a;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure old_pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (1 == 1) then begin
            attack(source_obj);
        end
        else begin
            if (1 == 2) then begin
                float_msg(self_obj, g_mstr(random(3325, 3329)), FLOAT_MSG_NORMAL);
                if (18 > -1) then begin
                    if (local_var(18) >= 1) then begin
                        attack(source_obj);
                    end
                    set_local_var(18, local_var(18) + 1);
                end
            end
            else begin
                if (1 == 3) then begin
                    float_msg(self_obj, g_mstr(random(3050, 3064)), FLOAT_MSG_NORMAL);
                    if (18 > -1) then begin
                        if (local_var(18) >= 1) then begin
                            attack(source_obj);
                        end
                        set_local_var(18, local_var(18) + 1);
                    end
                end
                else begin
                    if (1 == 4) then begin
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(source_obj), tile_num(self_obj)), random(8, 14)), 1);
                    end
                end
            end
        end
    end
    if (-1 == 1) then begin
        call old_pickup_p_proc();
    end
end

procedure getTimeBit
begin
    variable LVar0 := 0;
    LVar0 := game_time_hour;
    if ((LVar0 >= 100) and (LVar0 <= 159)) then begin
        return 1;
    end
    if ((LVar0 >= 200) and (LVar0 <= 259)) then begin
        return 2;
    end
    if ((LVar0 >= 300) and (LVar0 <= 359)) then begin
        return 4;
    end
    if ((LVar0 >= 400) and (LVar0 <= 459)) then begin
        return 8;
    end
    if ((LVar0 >= 500) and (LVar0 <= 559)) then begin
        return 16;
    end
    if ((LVar0 >= 600) and (LVar0 <= 659)) then begin
        return 32;
    end
    if ((LVar0 >= 700) and (LVar0 <= 759)) then begin
        return 64;
    end
    if ((LVar0 >= 800) and (LVar0 <= 859)) then begin
        return 128;
    end
    if ((LVar0 >= 900) and (LVar0 <= 959)) then begin
        return 256;
    end
    if ((LVar0 >= 1000) and (LVar0 <= 1059)) then begin
        return 512;
    end
    if ((LVar0 >= 1100) and (LVar0 <= 1159)) then begin
        return 1024;
    end
    if ((LVar0 >= 1200) and (LVar0 <= 1259)) then begin
        return 2048;
    end
    if ((LVar0 >= 1300) and (LVar0 <= 1359)) then begin
        return 4096;
    end
    if ((LVar0 >= 1400) and (LVar0 <= 1459)) then begin
        return 8192;
    end
    if ((LVar0 >= 1500) and (LVar0 <= 1559)) then begin
        return 16384;
    end
    if ((LVar0 >= 1600) and (LVar0 <= 1659)) then begin
        return 32768;
    end
    if ((LVar0 >= 1700) and (LVar0 <= 1759)) then begin
        return 65536;
    end
    if ((LVar0 >= 1800) and (LVar0 <= 1859)) then begin
        return 131072;
    end
    if ((LVar0 >= 1900) and (LVar0 <= 1959)) then begin
        return 262144;
    end
    if ((LVar0 >= 2000) and (LVar0 <= 2059)) then begin
        return 524288;
    end
    if ((LVar0 >= 2100) and (LVar0 <= 2159)) then begin
        return 1048576;
    end
    if ((LVar0 >= 2200) and (LVar0 <= 2259)) then begin
        return 2097152;
    end
    if ((LVar0 >= 2300) and (LVar0 <= 2359)) then begin
        return 4194304;
    end
    if ((LVar0 >= 0) and (LVar0 <= 100)) then begin
        return 8388608;
    end
end

procedure start
begin
    if ((global_var(GVAR_VIGNETTE_SEQUENCE) bwand 1) != 0) then begin
        set_global_var(GVAR_V13_STATUS_FLAGS, global_var(GVAR_V13_STATUS_FLAGS) bwor 2);
        destroy_object(self_obj);
    end
    else begin
        i_gruthar_obj := self_obj;
    end
end

procedure critter_p_proc
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    if ((local_var(5) != 0) or map_var(5) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        set_map_var(5, 1);
        if (critter_is_fleeing(self_obj)) then begin
            if (anim_busy(self_obj) == 0) then begin
                if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                    if (anim_busy(self_obj) == 0) then begin
                        global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                        global_temp := (global_temp + 1) % 6;
                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                            debug_msg("flee loop: rot == " + global_temp);
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                        end
                    end
                end
            end
        end
        else begin
            attack(dude_obj);
        end
    end
    LVar1 := global_var(GVAR_GRUTHAR_DSTATUS);
    if ((LVar1 == 5) or (LVar1 == 4) or (LVar1 == 0)) then begin
        if (local_var(7) == 0) then begin
            if (obj_can_see_obj(self_obj, dude_obj)) then begin
                if (tile_distance_objs(self_obj, dude_obj) < 9) then begin
                    LVar0 := 1;
                end
            end
        end
        else begin
            if (obj_can_see_obj(self_obj, dude_obj)) then begin
                LVar0 := checkFunction();
            end
        end
        if (LVar0 == 1) then begin
            dialogue_system_enter;
        end
    end
    if (i_matt_obj != -1) then begin
        if (obj_can_see_obj(self_obj, i_matt_obj)) then begin
            if ((elevation(i_matt_obj) == 0) and (elevation(self_obj) == 0)) then begin
                attack(i_matt_obj);
            end
        end
    end
    if (tile_num(self_obj) != 14695) then begin
        if (not(anim_busy(self_obj))) then begin
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            animate_move_obj_to_tile(self_obj, 14695, 0);
            reg_anim_func(3, 0);
        end
    end
    if ((local_var(19) != 0) and (local_var(5) == 0) and (local_var(6) == 0)) then begin
        if (critter_state(local_var(19)) bwand 1) then begin
            set_local_var(19, 0);
            doMattTalk := 1;
            dialogue_system_enter;
        end
    end
end

procedure talk_p_proc
begin
    Evil_Critter := 0;
    Slavery_Tolerant := 2;
    Karma_Perception := 10;
    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
    set_global_var(GVAR_KARMA_DEFENDER, 0);
    set_global_var(GVAR_KARMA_WANDERER, 0);
    set_global_var(GVAR_KARMA_BETRAYER, 0);
    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
    set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
    if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
    end
    else begin
        if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                    set_global_var(GVAR_KARMA_DEFENDER, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                        set_global_var(GVAR_KARMA_WANDERER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                            set_global_var(GVAR_KARMA_BETRAYER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                end
                                else begin
                                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    if (local_var(2) == 0) then begin
        set_local_var(2, 1);
        set_local_var(3, (dude_charisma - self_charisma) * 5);
        debug_msg("Base Reaction == " + local_var(3));
    end
    Static_Reaction := 0;
    set_local_var(0, 0);
    debug_msg("Start Reaction == " + local_var(0));
    if (reaction_bonus_karma >= 0) then begin
        reaction_bonus_karma := reaction_bonus_karma / 1000;
    end
    else begin
        reaction_bonus_karma := -1 * (-1 * reaction_bonus_karma / 1000);
    end
    if (global_var(GVAR_TOWN_REP_VAULT_13) >= 0) then begin
        reaction_bonus_town_rep := global_var(GVAR_TOWN_REP_VAULT_13) / 2;
    end
    else begin
        reaction_bonus_town_rep := -1 * (-1 * global_var(GVAR_TOWN_REP_VAULT_13) / 2);
    end
    if (has_trait(TRAIT_TRAIT, dude_obj, TRAIT_sex_appeal)) then begin
        if (dude_gender == self_gender) then begin
            Static_Reaction := Static_Reaction + -20;
        end
        else begin
            Static_Reaction := Static_Reaction + 20;
        end
        debug_msg("Sex Appeal Bonus == " + Static_Reaction);
    end
    else begin
        debug_msg("Sex Appeal Bonus == 0");
    end
    if (Evil_Critter == 1) then begin
        Static_Reaction := Static_Reaction - reaction_bonus_karma;
        debug_msg("Karma Reaction Bonus == " + Static_Reaction);
        Static_Reaction := Static_Reaction - reaction_bonus_town_rep;
        debug_msg("Town Rep Bonus == " + Static_Reaction);
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (global_var(GVAR_KARMA_HOLY_WARRIOR) == 1) then begin
            Static_Reaction := Static_Reaction - 20;
        end
        else begin
            if (global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES) == 1) then begin
                Static_Reaction := Static_Reaction - 15;
            end
            else begin
                if (global_var(GVAR_KARMA_SHIELD_OF_HOPE) == 1) then begin
                    Static_Reaction := Static_Reaction - 10;
                end
                else begin
                    if (global_var(GVAR_KARMA_DEFENDER) == 1) then begin
                        Static_Reaction := Static_Reaction - 5;
                    end
                    else begin
                        if (global_var(GVAR_KARMA_WANDERER) == 1) then begin
                            Static_Reaction := Static_Reaction - 0;
                        end
                        else begin
                            if (global_var(GVAR_KARMA_BETRAYER) == 1) then begin
                                Static_Reaction := Static_Reaction - -5;
                            end
                            else begin
                                if (global_var(GVAR_KARMA_SWORD_OF_DESPAIR) == 1) then begin
                                    Static_Reaction := Static_Reaction - -10;
                                end
                                else begin
                                    if (global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE) == 1) then begin
                                        Static_Reaction := Static_Reaction - -15;
                                    end
                                    else begin
                                        Static_Reaction := Static_Reaction - -20;
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        debug_msg("Bad Person Reaction Bonus == " + Static_Reaction);
    end
    else begin
        Static_Reaction := Static_Reaction + reaction_bonus_karma;
        debug_msg("Karma Reaction Bonus == " + Static_Reaction);
        Static_Reaction := Static_Reaction + reaction_bonus_town_rep;
        debug_msg("Town Rep Bonus == " + Static_Reaction);
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (global_var(GVAR_KARMA_HOLY_WARRIOR) == 1) then begin
            Static_Reaction := Static_Reaction + 20;
        end
        else begin
            if (global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES) == 1) then begin
                Static_Reaction := Static_Reaction + 15;
            end
            else begin
                if (global_var(GVAR_KARMA_SHIELD_OF_HOPE) == 1) then begin
                    Static_Reaction := Static_Reaction + 10;
                end
                else begin
                    if (global_var(GVAR_KARMA_DEFENDER) == 1) then begin
                        Static_Reaction := Static_Reaction + 5;
                    end
                    else begin
                        if (global_var(GVAR_KARMA_WANDERER) == 1) then begin
                            Static_Reaction := Static_Reaction + 0;
                        end
                        else begin
                            if (global_var(GVAR_KARMA_BETRAYER) == 1) then begin
                                Static_Reaction := Static_Reaction + -5;
                            end
                            else begin
                                if (global_var(GVAR_KARMA_SWORD_OF_DESPAIR) == 1) then begin
                                    Static_Reaction := Static_Reaction + -10;
                                end
                                else begin
                                    if (global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE) == 1) then begin
                                        Static_Reaction := Static_Reaction + -15;
                                    end
                                    else begin
                                        Static_Reaction := Static_Reaction + -20;
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        debug_msg("Good Person Reaction Bonus == " + Static_Reaction);
    end
    if (Slavery_Tolerant == 0) then begin
        if (global_var(GVAR_REPUTATION_SLAVER) == 1) then begin
            Static_Reaction := Static_Reaction + (2 * -25);
        end
    end
    else begin
        if (Slavery_Tolerant == 1) then begin
            if (global_var(GVAR_REPUTATION_SLAVER) == 1) then begin
                Static_Reaction := Static_Reaction + -25;
            end
        end
        else begin
            if (Slavery_Tolerant == 3) then begin
                if (global_var(GVAR_REPUTATION_SLAVER) == 1) then begin
                    Static_Reaction := Static_Reaction - -25;
                end
            end
        end
    end
    debug_msg("Slaver + Aligned Reaction == " + Static_Reaction);
    Static_Reaction := Static_Reaction + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence));
    debug_msg("Presence Reaction == " + Static_Reaction);
    if (global_var(GVAR_CHILDKILLER_REPUTATION) >= 2) then begin
        Static_Reaction := Static_Reaction + -30;
    end
    debug_msg("Childkiller Reaction == " + Static_Reaction);
    set_local_var(0, local_var(3) + Static_Reaction);
    debug_msg("Initial Reaction == " + local_var(0));
    if (doMattTalk == 1) then begin
        doMattTalk := 0;
        start_gdialog(218, self_obj, 4, -1, -1);
        gsay_start;
        call Node034();
        gsay_end;
        end_dialogue;
    end
    else begin
        if (local_var(7) == 0) then begin
            start_gdialog(218, self_obj, 4, -1, -1);
            gsay_start;
            call Node001();
            gsay_end;
            end_dialogue;
        end
        else begin
            if (local_var(7) == 1) then begin
                if (local_var(6)) then begin
                    if (obj_can_see_obj(self_obj, dude_obj)) then begin
                        float_msg(self_obj, mstr(202), FLOAT_MSG_YELLOW);
                        set_local_var(5, 2);
                    end
                end
                else begin
                    if (global_var(GVAR_GRUTHAR_DSTATUS) == 1) then begin
                        start_gdialog(218, self_obj, 4, -1, -1);
                        gsay_start;
                        call Node015();
                        gsay_end;
                        end_dialogue;
                    end
                    else begin
                        if (global_var(GVAR_GRUTHAR_DSTATUS) == 2) then begin
                            start_gdialog(218, self_obj, 4, -1, -1);
                            gsay_start;
                            call Node017();
                            gsay_end;
                            end_dialogue;
                        end
                        else begin
                            if (global_var(GVAR_GRUTHAR_DSTATUS) == 3) then begin
                                start_gdialog(218, self_obj, 4, -1, -1);
                                gsay_start;
                                call Node018();
                                gsay_end;
                                end_dialogue;
                            end
                            else begin
                                if (global_var(GVAR_GRUTHAR_DSTATUS) == 4) then begin
                                    start_gdialog(218, self_obj, 4, -1, -1);
                                    gsay_start;
                                    call Node020();
                                    gsay_end;
                                    end_dialogue;
                                end
                                else begin
                                    if (global_var(GVAR_GRUTHAR_DSTATUS) == 5) then begin
                                        start_gdialog(218, self_obj, 4, -1, -1);
                                        gsay_start;
                                        call Node021();
                                        gsay_end;
                                        end_dialogue;
                                    end
                                    else begin
                                        if (global_var(GVAR_GRUTHAR_DSTATUS) == 6) then begin
                                            start_gdialog(218, self_obj, 4, -1, -1);
                                            gsay_start;
                                            call Node022();
                                            gsay_end;
                                            end_dialogue;
                                        end
                                        else begin
                                            if (global_var(GVAR_GRUTHAR_DSTATUS) == 7) then begin
                                                call Node023();
                                            end
                                            else begin
                                                if (global_var(GVAR_GRUTHAR_DSTATUS) == 8) then begin
                                                    call Node033();
                                                end
                                                else begin
                                                    start_gdialog(218, self_obj, 4, -1, -1);
                                                    gsay_start;
                                                    call Node001();
                                                    gsay_end;
                                                    end_dialogue;
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    if (local_var(17) == 1) then begin
        debug_msg("Should be TELEPORTING YEAH");
        set_local_var(17, 0);
        load_map("V13ENT.MAP", 5);
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (critter_kill_type(self_obj) == KILL_TYPE_children_kills) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(GVAR_TOWN_REP_VAULT_13, global_var(GVAR_TOWN_REP_VAULT_13) + -8);
                debug_msg("Added " + -8 + " to Town Rep");
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(GVAR_TOWN_REP_VAULT_13, global_var(GVAR_TOWN_REP_VAULT_13) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
    i_gruthar_obj := -1;
    set_global_var(GVAR_V13_STATUS_FLAGS, global_var(GVAR_V13_STATUS_FLAGS) bwor 2);
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        display_mstr(100);
    end
    else begin
        display_mstr(101);
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(102);
end

procedure use_skill_on_p_proc
begin
    if (local_var(6) == 0) then begin
        set_local_var(6, 1);
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(6, 1);
        set_map_var(5, 1);
    end
end

procedure map_enter_p_proc
begin
    Only_Once := 0;
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 114);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_VAULT_DEATHCLAWS);
    if (map_var(4) == 0) then begin
        set_obj_visibility(self_obj, 1);
    end
    set_local_var(19, i_matt_obj);
    geck_container := tile_contains_pid_obj(20501, 2, 132);
    debug_msg("OCGRUTHA: checkgeck: " + checkGeck());
end

procedure push_p_proc
begin
    script_overrides;
end

procedure Node998
begin
    set_local_var(6, 1);
    set_local_var(5, 2);
end

procedure Node999
begin
end

procedure Node001
begin
    if (local_var(7) == 0) then begin
        set_local_var(7, 1);
        Reply(103);
    end
    else begin
        Reply(104);
    end
    if (global_var(GVAR_GRUTHAR_DSTATUS) != 4) then begin
        giq_option(-3, NAME, 105, Node002, NEUTRAL_REACTION);
    end
    if (local_var(9) == 0) then begin
        giq_option(4, NAME, 106, Node025a, NEUTRAL_REACTION);
    end
    if (local_var(8) == 0) then begin
        giq_option(4, NAME, 107, Node003a, NEUTRAL_REACTION);
    end
    if (local_var(10) == 0) then begin
        giq_option(4, NAME, 108, Node005a, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 109, Node006a, NEUTRAL_REACTION);
    if (global_var(GVAR_NCR_DEATHCLAW_DEN)) then begin
        giq_option(4, NAME, 110, Node011, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_NCR_BRAHMIN_PROTECT) and (global_var(GVAR_NCR_DEATHCLAW_DEN) == 0)) then begin
        giq_option(4, NAME, 111, Node013, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 112, Node031, NEUTRAL_REACTION);
end

procedure Node002
begin
    if ((dude_iq > 3) and (local_var(12) == 0)) then begin
        Reply(113);
        set_local_var(12, 1);
        giq_option(0, NAME, g_mstr(352), Node001, NEUTRAL_REACTION);
    end
    else begin
        if ((dude_iq > 3) and (local_var(12) == 1)) then begin
            Reply(114);
            set_global_var(GVAR_GRUTHAR_DSTATUS, 4);
            giq_option(0, NAME, g_mstr(352), Node030, NEUTRAL_REACTION);
        end
        else begin
            set_global_var(GVAR_GRUTHAR_DSTATUS, 8);
            Reply(115);
            giq_option(-3, NAME, 234, Node999, NEUTRAL_REACTION);
        end
    end
end

procedure Node003
begin
    Reply(116);
    giq_option(4, NAME, 117, Node001, NEUTRAL_REACTION);
    giq_option(4, NAME, 118, Node004, NEUTRAL_REACTION);
    giq_option(4, NAME, 119, Node026, BAD_REACTION);
end

procedure Node004
begin
    set_global_var(GVAR_V13_STATUS_FLAGS, global_var(GVAR_V13_STATUS_FLAGS) bwor 4);
    set_global_var(GVAR_V13_GORIS_QST, 1);
    Reply(120);
    giq_option(4, NAME, 121, Node001, GOOD_REACTION);
    giq_option(4, NAME, 122, Node030, BAD_REACTION);
    giq_option(4, NAME, 123, Node001, NEUTRAL_REACTION);
end

procedure Node005
begin
    Reply(124);
    giq_option(4, NAME, 125, Node025, BAD_REACTION);
    giq_option(4, NAME, 126, Node001, GOOD_REACTION);
    giq_option(4, NAME, 127, Node001, NEUTRAL_REACTION);
end

procedure Node006
begin
    variable LVar0 := 0;
    if (local_var(13) == 0) then begin
        set_local_var(13, 1);
        Reply(128);
        LVar0 := 1;
    end
    else begin
        Reply(129);
    end
    giq_option(4, NAME, 130, Node007, NEUTRAL_REACTION);
    if (LVar0 == 1) then begin
        giq_option(4, NAME, 131, Node027, BAD_REACTION);
    end
    giq_option(4, NAME, 132, Node030, BAD_REACTION);
    giq_option(4, NAME, 133, Node007a, GOOD_REACTION);
end

procedure Node007
begin
    set_local_var(15, 1);
    if (nice) then begin
        Reply(134);
    end
    else begin
        Reply(135);
    end
    giq_option(4, NAME, 136, Node028, BAD_REACTION);
    giq_option(4, NAME, 137, Node001, NEUTRAL_REACTION);
    giq_option(4, NAME, 138, Node008a, GOOD_REACTION);
end

procedure Node008
begin
    if (not((local_var(1) <= -2) or (global_var(GVAR_PLAYER_REPUTATION) < 0) or (global_var(GVAR_TOWN_REP_VAULT_13) < 0) or (global_var(GVAR_CHILDKILLER_REPUTATION) >= 2) or (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))))) then begin
        Reply(139);
    end
    else begin
        Reply(140);
    end
    if (not((local_var(1) <= -2) or (global_var(GVAR_PLAYER_REPUTATION) < 0) or (global_var(GVAR_TOWN_REP_VAULT_13) < 0) or (global_var(GVAR_CHILDKILLER_REPUTATION) >= 2) or (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))))) then begin
        giq_option(4, NAME, 141, Node009, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 142, Node998, BAD_REACTION);
        giq_option(4, NAME, 143, Node001, NEUTRAL_REACTION);
        giq_option(4, NAME, 144, Node030, GOOD_REACTION);
    end
end

procedure Node009
begin
    Reply(145);
    if (dude_skill(SKILL_REPAIR) < 40) then begin
        giq_option(4, NAME, 146, Node014a, NEUTRAL_REACTION);
    end
    if ((dude_skill(SKILL_REPAIR) > 39) and (dude_skill(SKILL_REPAIR) < 60)) then begin
        giq_option(4, NAME, 147, Node010a, NEUTRAL_REACTION);
    end
    if (dude_skill(SKILL_REPAIR) > 59) then begin
        giq_option(4, NAME, 148, Node010a, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 149, Node031a, NEUTRAL_REACTION);
    giq_option(4, NAME, 150, Node010a, NEUTRAL_REACTION);
    giq_option(4, NAME, 151, Node014a, NEUTRAL_REACTION);
end

procedure Node010
begin
    Reply(152);
    giq_option(4, NAME, 153, Node999, GOOD_REACTION);
    giq_option(4, NAME, 154, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 155, Node999, BAD_REACTION);
end

procedure Node011
begin
    Reply(156);
    giq_option(4, NAME, 157, Node001, NEUTRAL_REACTION);
    giq_option(4, NAME, 158, Node012, BAD_REACTION);
    giq_option(4, NAME, 159, Node001, GOOD_REACTION);
end

procedure Node012
begin
    Reply(160);
    giq_option(4, NAME, 161, Node998, BAD_REACTION);
    giq_option(4, NAME, 162, Node001, GOOD_REACTION);
    giq_option(4, NAME, 163, Node001, NEUTRAL_REACTION);
end

procedure Node013
begin
    Reply(164);
    giq_option(4, NAME, 165, Node998, BAD_REACTION);
    giq_option(4, NAME, 166, Node008, GOOD_REACTION);
    giq_option(4, NAME, 167, Node031, NEUTRAL_REACTION);
    giq_option(4, NAME, 168, Node001, NEUTRAL_REACTION);
end

procedure Node014
begin
    Reply(169);
    giq_option(4, NAME, 170, Node031, NEUTRAL_REACTION);
end

procedure Node015
begin
    Reply(mstr(171) + " " + dude_name + mstr(231));
    giq_option(4, NAME, 172, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 173, Node016a, NEUTRAL_REACTION);
end

procedure Node016
begin
    Reply(mstr(174) + " " + dude_name + mstr(232));
    giq_option(4, NAME, 175, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 176, Node999, GOOD_REACTION);
end

procedure Node017
begin
    Reply(mstr(177) + " " + dude_name + mstr(233));
    giq_option(4, NAME, 178, Node999, NEUTRAL_REACTION);
    if (obj_is_carrying_obj_pid(dude_obj, 356) > 0) then begin
        giq_option(4, NAME, 179, Node029, GOOD_REACTION);
    end
end

procedure Node018
begin
    set_global_var(GVAR_GRUTHAR_DSTATUS, 7);
    add_timer_event(dude_obj, 0, 4);
    set_global_var(GVAR_V13_COMP_QST, 2);
    set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 10);
    debug_msg("Player gains " + 10 + " Karma Points.");
    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
    set_global_var(GVAR_KARMA_DEFENDER, 0);
    set_global_var(GVAR_KARMA_WANDERER, 0);
    set_global_var(GVAR_KARMA_BETRAYER, 0);
    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
    set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
    if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
    end
    else begin
        if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                    set_global_var(GVAR_KARMA_DEFENDER, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                        set_global_var(GVAR_KARMA_WANDERER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                            set_global_var(GVAR_KARMA_BETRAYER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                end
                                else begin
                                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    set_global_var(GVAR_TOWN_REP_VAULT_13, global_var(GVAR_TOWN_REP_VAULT_13) + 30);
    give_exp_points(5000);
    display_msg(g_mstr(100) + 5000 + g_mstr(101));
    Reply(181);
    if (local_var(15) == 1) then begin
        giq_option(4, NAME, 182, Node019, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 183, Node019, NEUTRAL_REACTION);
    end
    if (checkGeck() == 0) then begin
        giq_option(4, NAME, 184, Node999, NEUTRAL_REACTION);
    end
end

procedure Node019
begin
    if (checkGeck()) then begin
        Reply(185);
    end
    else begin
        Reply(186);
    end
    giq_option(4, NAME, 187, Node999a, NEUTRAL_REACTION);
    if (checkGeck() == 0) then begin
        giq_option(4, NAME, 188, Node999, NEUTRAL_REACTION);
    end
end

procedure Node020
begin
    Reply(189);
    giq_option(4, NAME, 190, Node001, GOOD_REACTION);
    giq_option(4, NAME, 191, Node031, NEUTRAL_REACTION);
    giq_option(-3, NAME, 192, Node032, NEUTRAL_REACTION);
end

procedure Node021
begin
    Reply(193);
    giq_option(4, NAME, 194, Node030, BAD_REACTION);
    giq_option(4, NAME, 195, Node030, NEUTRAL_REACTION);
    giq_option(4, NAME, 196, Node010a, GOOD_REACTION);
end

procedure Node022
begin
    Reply(197);
    giq_option(4, NAME, 198, Node999, NEUTRAL_REACTION);
end

procedure Node023
begin
    float_msg(self_obj, mstr(199), FLOAT_MSG_GREEN);
end

procedure Node024
begin
    float_msg(self_obj, mstr(202), FLOAT_MSG_YELLOW);
end

procedure Node025
begin
    Reply(205);
    giq_option(4, NAME, 206, Node001, NEUTRAL_REACTION);
    giq_option(4, NAME, 207, Node998, BAD_REACTION);
    giq_option(4, NAME, 208, Node001, GOOD_REACTION);
    giq_option(4, NAME, 209, Node030, NEUTRAL_REACTION);
end

procedure Node026
begin
    Reply(210);
    giq_option(4, NAME, 211, Node998, BAD_REACTION);
    giq_option(4, NAME, 212, NodeTeleport, NEUTRAL_REACTION);
    giq_option(4, NAME, 213, Node001, BAD_REACTION);
end

procedure Node027
begin
    Reply(214);
    giq_option(4, NAME, 215, Node001, NEUTRAL_REACTION);
    giq_option(4, NAME, 216, Node001, GOOD_REACTION);
    giq_option(4, NAME, 217, Node001, BAD_REACTION);
end

procedure Node028
begin
    Reply(218);
    giq_option(4, NAME, 219, Node001, GOOD_REACTION);
    giq_option(4, NAME, 220, Node998, BAD_REACTION);
    giq_option(4, NAME, 221, Node030, NEUTRAL_REACTION);
end

procedure Node029
begin
    Reply(222);
    giq_option(4, NAME, 223, Node999, NEUTRAL_REACTION);
end

procedure Node030
begin
    Reply(225);
    giq_option(0, NAME, g_mstr(350), NodeTeleport, NEUTRAL_REACTION);
end

procedure Node031
begin
    Reply(226);
    giq_option(0, NAME, 227, NodeTeleport, NEUTRAL_REACTION);
end

procedure Node032
begin
    Reply(229);
    giq_option(0, NAME, 230, NodeTeleport, NEUTRAL_REACTION);
end

procedure Node033
begin
    float_msg(self_obj, mstr(235), FLOAT_MSG_NORMAL);
end

procedure Node034
begin
    Reply(236);
    giq_option(4, NAME, 220, Node998, BAD_REACTION);
    giq_option(-3, NAME, 237, Node998, BAD_REACTION);
    giq_option(4, NAME, 238, Node999, GOOD_REACTION);
    giq_option(-3, NAME, 239, Node999, GOOD_REACTION);
end

procedure checkGeck
begin
    if (geck_container) then begin
        return obj_carrying_pid_obj(geck_container, 366);
    end
    return 0;
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        set_obj_visibility(self_obj, 0);
    end
end

procedure combat_p_proc
begin
end

procedure checkFunction
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    checkCounter := checkCounter + 1;
    if (using_skill(dude_obj, 8)) then begin
        if (checkCounter >= checkThresh) then begin
            LVar1 := roll_vs_skill(dude_obj, 8, -30);
            debug_msg("Roll Res : " + LVar1);
            if (is_success(LVar1)) then begin
                debug_msg("SUCCESS");
                checkCounter := 0;
                if (is_critical(LVar1)) then begin
                    debug_msg("CRITICAL SUCCESS");
                    checkThresh := checkThresh + 10;
                end
                LVar0 := 0;
            end
            else begin
                LVar0 := 1;
            end
        end
        else begin
            LVar0 := 0;
        end
    end
    else begin
        LVar0 := 1;
    end
    debug_msg("RETVAL " + LVar0);
    return LVar0;
end

procedure NodeTeleport
begin
    set_local_var(17, 1);
    call Node999();
end

procedure Node025a
begin
    set_local_var(9, 1);
    call Node025();
end

procedure Node003a
begin
    set_local_var(8, 1);
    call Node003();
end

procedure Node005a
begin
    set_local_var(10, 1);
    call Node005();
end

procedure Node006a
begin
    set_local_var(11, 1);
    call Node006();
end

procedure Node007a
begin
    nice := 1;
    call Node007();
end

procedure Node008a
begin
    set_local_var(14, 1);
    call Node008();
end

procedure Node014a
begin
    set_global_var(GVAR_GRUTHAR_DSTATUS, 5);
    call Node014();
end

procedure Node010a
begin
    set_global_var(GVAR_GRUTHAR_DSTATUS, 6);
    set_global_var(GVAR_V13_COMP_QST, 1);
    call Node010();
end

procedure Node031a
begin
    set_global_var(GVAR_GRUTHAR_DSTATUS, 5);
    call Node030();
end

procedure Node016a
begin
    set_global_var(GVAR_GRUTHAR_DSTATUS, 2);
    call Node016();
end

procedure Node999a
begin
    variable LVar0 := 0;
    set_map_var(1, 1);
    set_global_var(GVAR_VAULT13_FOUND_GECK, 3);
    LVar0 := checkGeck();
    rm_obj_from_inven(geck_container, LVar0);
    add_obj_to_inven(dude_obj, LVar0);
end
