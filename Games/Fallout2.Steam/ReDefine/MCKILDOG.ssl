/*******************************************************
*      Some unreferenced imported varables found.      *
*      Because of it it is impossible to specify       *
*      the real names of global variables.             *
*******************************************************/

variable GVar0;
variable GVar1 := 1;
variable GVar2;
variable GVar3;
variable GVar4;
variable GVar5;
variable GVar6;
variable GVar7;
variable GVar8;
variable GVar9;
variable GVar10;
variable GVar11;
variable GVar12;
variable GVar13;
variable GVar14;
variable GVar15;
variable GVar16;
variable GVar17;
variable GVar18;

/* ?import? variable ProtoOfItemGiven; */
/* ?import? variable ValueOfRollCheck; */
/* ?import? variable Scenery_Creation; */
/* ?import? variable Scenery_Creation_Hex; */
/* ?import? variable Scenery_Creation_Count; */
/* ?import? variable Temp_Scenery_Creation_Hex; */
/* ?import? variable Scenery_Creation_Ptr; */
/* ?import? variable How_Many_Party_Members_Are_Injured; */
/* ?import? variable How_Many_Party_Members_Armed; */
/* ?import? variable PartyHealingItem; */

procedure checkPartyMembersNearDoor;

/* ?import? variable global_temp; */
/* ?import? variable dest_tile; */
/* ?import? variable step_tile; */
/* ?import? variable in_dialog; */
/* ?import? variable forced_node; */
/* ?import? variable restock_amt; */
/* ?import? variable restock_obj; */
/* ?import? variable restock_trash; */
/* ?import? variable removed_qty; */

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_exit_p_proc;
procedure timed_event_p_proc;
procedure use_p_proc;
procedure map_update_p_proc;

import variable brahmin_1_object;

/* ?import? variable brahmin_2_object; */

procedure use_obj_on_p_proc;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure critter_p_proc
begin
    variable LVar0 := 0;
    if (anim_busy(self_obj) == 0) then begin
        if (((game_time_hour <= 600) or (game_time_hour >= 1800)) == 0) then begin
            if ((game_time > map_var(2)) and (brahmin_1_object != 0)) then begin
                if (tile_in_tile_rect(15483, 15463, 17883, 17863, tile_num(brahmin_1_object))) then begin
                    LVar0 := brahmin_1_object;
                end
            end
        end
        if (LVar0 != 0) then begin
            if (tile_distance_objs(self_obj, LVar0) > 2) then begin
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(LVar0), (obj_get_rot(LVar0) + 3) % 6, 2), 1);
            end
            if (game_time >= local_var(0)) then begin
                set_local_var(0, game_time + (random(1, 5) * 10));
                if (random(0, 2) != 1) then begin
                    play_sfx("dogbark2");
                end
                float_msg(self_obj, mstr(random(100, 102)), 8 + ((2 - 8) * has_trait(TRAIT_PERK, dude_obj, PERK_empathy)));
            end
        end
        else begin
            if (tile_num(self_obj) != local_var(1)) then begin
                animate_move_obj_to_tile(self_obj, local_var(1), 0);
            end
        end
    end
end

procedure pickup_p_proc
begin
end

procedure talk_p_proc
begin
end

procedure destroy_p_proc
begin
end

procedure look_at_p_proc
begin
end

procedure description_p_proc
begin
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 28);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_GENERIC_DOG);
    if (local_var(1) == 0) then begin
        set_local_var(1, tile_num(self_obj));
        add_timer_event(self_obj, game_ticks(random(90, 120)), 1);
    end
end

procedure map_exit_p_proc
begin
end

procedure timed_event_p_proc
begin
    variable LVar0 := 0;
    LVar0 := tile_num_in_direction(local_var(1), random(0, 5), random(5, 10));
    if (tile_in_tile_rect(15483, 15463, 17883, 17863, LVar0)) then begin
        set_local_var(1, LVar0);
    end
    add_timer_event(self_obj, game_ticks(random(30, 90)), 1);
end

procedure use_p_proc
begin
end

procedure map_update_p_proc
begin
end

procedure use_obj_on_p_proc
begin
end
