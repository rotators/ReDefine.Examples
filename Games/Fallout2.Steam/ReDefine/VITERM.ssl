variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure use_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;
procedure Distribute_Booty;

variable Terminal_State;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure use_p_proc
begin
    if ((global_var(GVAR_8_BALL_VAULT_TERMINAL) == 1) and (local_var(0) == 0)) then begin
        set_local_var(0, 1);
        add_timer_event(self_obj, 1, 1);
    end
end

procedure use_skill_on_p_proc
begin
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
end

procedure map_enter_p_proc
begin
end

procedure map_update_p_proc
begin
end

procedure talk_p_proc
begin
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if (Terminal_State == 0) then begin
            game_ui_disable;
            float_msg(self_obj, mstr(101), FLOAT_MSG_YELLOW);
            Terminal_State := Terminal_State + 1;
            add_timer_event(self_obj, game_ticks(2), 1);
        end
        else begin
            if (Terminal_State == 1) then begin
                float_msg(self_obj, mstr(102), FLOAT_MSG_YELLOW);
                Terminal_State := Terminal_State + 1;
                add_timer_event(self_obj, game_ticks(2), 1);
            end
            else begin
                if (Terminal_State == 2) then begin
                    float_msg(self_obj, mstr(103), FLOAT_MSG_YELLOW);
                    Terminal_State := Terminal_State + 1;
                    add_timer_event(self_obj, game_ticks(3), 1);
                end
                else begin
                    if (Terminal_State == 3) then begin
                        float_msg(self_obj, mstr(104), FLOAT_MSG_YELLOW);
                        Terminal_State := Terminal_State + 1;
                        add_timer_event(self_obj, game_ticks(2), 1);
                    end
                    else begin
                        if (Terminal_State == 4) then begin
                            float_msg(self_obj, mstr(105), FLOAT_MSG_YELLOW);
                            Terminal_State := Terminal_State + 1;
                            add_timer_event(self_obj, game_ticks(3), 1);
                        end
                        else begin
                            if (Terminal_State == 5) then begin
                                reg_anim_func(2, dude_obj);
                                reg_anim_func(1, 1);
                                reg_anim_animate(dude_obj, 11, -1);
                                reg_anim_func(3, 0);
                                Terminal_State := Terminal_State + 1;
                                add_timer_event(self_obj, game_ticks(2), 1);
                            end
                            else begin
                                if (Terminal_State == 6) then begin
                                    float_msg(dude_obj, mstr(106), FLOAT_MSG_GREEN);
                                    call Distribute_Booty();
                                    Terminal_State := Terminal_State + 1;
                                    add_timer_event(self_obj, game_ticks(2), 1);
                                end
                                else begin
                                    if (Terminal_State == 7) then begin
                                        float_msg(self_obj, mstr(107), FLOAT_MSG_YELLOW);
                                        game_ui_enable;
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure Distribute_Booty
begin
    variable LVar0 := 0;
    LVar0 := create_object(40, 0, 0);
    add_mult_objs_to_inven(dude_obj, LVar0, 2);
    LVar0 := create_object(144, 0, 0);
    add_obj_to_inven(dude_obj, LVar0);
end
