variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure combat;
procedure Node910;
procedure Node920;
procedure Node922;
procedure Node924;
procedure Node926;
procedure Node928;
procedure Node930;
procedure Node934;
procedure Node935;
procedure Node940;
procedure Node982;
procedure Node983;
procedure Node984;
procedure Node985;
procedure Node986;
procedure Node987;
procedure Node995;
procedure Node996;
procedure Node997;
procedure Node998;
procedure Node999;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node034;
procedure Node035;
procedure Node036;
procedure Node110;
procedure Node111;
procedure Node112;
procedure Node113;
procedure Node137;
procedure Node138;
procedure Node139;
procedure Node140;
procedure Node150;

variable Only_Once;
variable k;
variable item;
variable combyn;

procedure Node915;
procedure Node033;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if ((global_var(GVAR_GECKO_MELTDOWN) == 1) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack(dude_obj);
    end
    else begin
        if ((local_var(5) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
            set_local_var(5, 1);
            attack(dude_obj);
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure talk_p_proc
begin
    if (local_var(2) == 0) then begin
        set_local_var(2, 1);
        set_local_var(3, (dude_charisma - self_charisma) * 5);
        debug_msg("Base Reaction == " + local_var(3));
    end
    Static_Reaction := 0;
    set_local_var(0, 0);
    debug_msg("Start Reaction == " + local_var(0));
    if (reaction_bonus_karma >= 0) then begin
        reaction_bonus_karma := reaction_bonus_karma / 1000;
    end
    else begin
        reaction_bonus_karma := -1 * (-1 * reaction_bonus_karma / 1000);
    end
    if (global_var(GVAR_TOWN_REP_VAULT_CITY) >= 0) then begin
        reaction_bonus_town_rep := global_var(GVAR_TOWN_REP_VAULT_CITY) / 2;
    end
    else begin
        reaction_bonus_town_rep := -1 * (-1 * global_var(GVAR_TOWN_REP_VAULT_CITY) / 2);
    end
    if (has_trait(TRAIT_TRAIT, dude_obj, TRAIT_sex_appeal)) then begin
        if (dude_gender == self_gender) then begin
            Static_Reaction := Static_Reaction + -20;
        end
        else begin
            Static_Reaction := Static_Reaction + 20;
        end
        debug_msg("Sex Appeal Bonus == " + Static_Reaction);
    end
    else begin
        debug_msg("Sex Appeal Bonus == 0");
    end
    if (Evil_Critter == 1) then begin
        Static_Reaction := Static_Reaction - reaction_bonus_karma;
        debug_msg("Karma Reaction Bonus == " + Static_Reaction);
        Static_Reaction := Static_Reaction - reaction_bonus_town_rep;
        debug_msg("Town Rep Bonus == " + Static_Reaction);
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (global_var(GVAR_KARMA_HOLY_WARRIOR) == 1) then begin
            Static_Reaction := Static_Reaction - 20;
        end
        else begin
            if (global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES) == 1) then begin
                Static_Reaction := Static_Reaction - 15;
            end
            else begin
                if (global_var(GVAR_KARMA_SHIELD_OF_HOPE) == 1) then begin
                    Static_Reaction := Static_Reaction - 10;
                end
                else begin
                    if (global_var(GVAR_KARMA_DEFENDER) == 1) then begin
                        Static_Reaction := Static_Reaction - 5;
                    end
                    else begin
                        if (global_var(GVAR_KARMA_WANDERER) == 1) then begin
                            Static_Reaction := Static_Reaction - 0;
                        end
                        else begin
                            if (global_var(GVAR_KARMA_BETRAYER) == 1) then begin
                                Static_Reaction := Static_Reaction - -5;
                            end
                            else begin
                                if (global_var(GVAR_KARMA_SWORD_OF_DESPAIR) == 1) then begin
                                    Static_Reaction := Static_Reaction - -10;
                                end
                                else begin
                                    if (global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE) == 1) then begin
                                        Static_Reaction := Static_Reaction - -15;
                                    end
                                    else begin
                                        Static_Reaction := Static_Reaction - -20;
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        debug_msg("Bad Person Reaction Bonus == " + Static_Reaction);
    end
    else begin
        Static_Reaction := Static_Reaction + reaction_bonus_karma;
        debug_msg("Karma Reaction Bonus == " + Static_Reaction);
        Static_Reaction := Static_Reaction + reaction_bonus_town_rep;
        debug_msg("Town Rep Bonus == " + Static_Reaction);
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (global_var(GVAR_KARMA_HOLY_WARRIOR) == 1) then begin
            Static_Reaction := Static_Reaction + 20;
        end
        else begin
            if (global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES) == 1) then begin
                Static_Reaction := Static_Reaction + 15;
            end
            else begin
                if (global_var(GVAR_KARMA_SHIELD_OF_HOPE) == 1) then begin
                    Static_Reaction := Static_Reaction + 10;
                end
                else begin
                    if (global_var(GVAR_KARMA_DEFENDER) == 1) then begin
                        Static_Reaction := Static_Reaction + 5;
                    end
                    else begin
                        if (global_var(GVAR_KARMA_WANDERER) == 1) then begin
                            Static_Reaction := Static_Reaction + 0;
                        end
                        else begin
                            if (global_var(GVAR_KARMA_BETRAYER) == 1) then begin
                                Static_Reaction := Static_Reaction + -5;
                            end
                            else begin
                                if (global_var(GVAR_KARMA_SWORD_OF_DESPAIR) == 1) then begin
                                    Static_Reaction := Static_Reaction + -10;
                                end
                                else begin
                                    if (global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE) == 1) then begin
                                        Static_Reaction := Static_Reaction + -15;
                                    end
                                    else begin
                                        Static_Reaction := Static_Reaction + -20;
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        debug_msg("Good Person Reaction Bonus == " + Static_Reaction);
    end
    if (Slavery_Tolerant == 0) then begin
        if (global_var(GVAR_REPUTATION_SLAVER) == 1) then begin
            Static_Reaction := Static_Reaction + (2 * -25);
        end
    end
    else begin
        if (Slavery_Tolerant == 1) then begin
            if (global_var(GVAR_REPUTATION_SLAVER) == 1) then begin
                Static_Reaction := Static_Reaction + -25;
            end
        end
        else begin
            if (Slavery_Tolerant == 3) then begin
                if (global_var(GVAR_REPUTATION_SLAVER) == 1) then begin
                    Static_Reaction := Static_Reaction - -25;
                end
            end
        end
    end
    debug_msg("Slaver + Aligned Reaction == " + Static_Reaction);
    Static_Reaction := Static_Reaction + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence));
    debug_msg("Presence Reaction == " + Static_Reaction);
    if (global_var(GVAR_CHILDKILLER_REPUTATION) >= 2) then begin
        Static_Reaction := Static_Reaction + -30;
    end
    debug_msg("Childkiller Reaction == " + Static_Reaction);
    set_local_var(0, local_var(3) + Static_Reaction);
    debug_msg("Initial Reaction == " + local_var(0));
    if (local_var(6) == 1) then begin
        call Node998();
    end
    else begin
        if (dude_is_stupid) then begin
            call Node001();
        end
        else begin
            if (obj_is_carrying_obj_pid(dude_obj, 308) and (local_var(7) != 2)) then begin
                start_gdialog(136, self_obj, 4, -1, -1);
                gsay_start;
                call Node025();
                gsay_end;
                end_dialogue;
            end
            else begin
                if (local_var(7) == 1) then begin
                    start_gdialog(136, self_obj, 4, -1, -1);
                    gsay_start;
                    call Node036();
                    gsay_end;
                    end_dialogue;
                end
                else begin
                    if (local_var(8) == 1) then begin
                        start_gdialog(136, self_obj, 4, -1, -1);
                        gsay_start;
                        call Node032();
                        gsay_end;
                        end_dialogue;
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(dude_obj, 307)) then begin
                            start_gdialog(136, self_obj, 4, -1, -1);
                            gsay_start;
                            call Node006();
                            gsay_end;
                            end_dialogue;
                        end
                        else begin
                            if (global_var(GVAR_GECKO_SKEETER_PART) == 1) then begin
                                start_gdialog(136, self_obj, 4, -1, -1);
                                gsay_start;
                                call Node008();
                                gsay_end;
                                end_dialogue;
                            end
                            else begin
                                if (global_var(GVAR_VAULT_PLANT_STATUS) == 9) then begin
                                    start_gdialog(136, self_obj, 4, -1, -1);
                                    gsay_start;
                                    call Node007();
                                    gsay_end;
                                    end_dialogue;
                                end
                                else begin
                                    if (global_var(GVAR_VAULT_PLANT_STATUS) == 15) then begin
                                        start_gdialog(136, self_obj, 4, -1, -1);
                                        gsay_start;
                                        call Node007();
                                        gsay_end;
                                        end_dialogue;
                                    end
                                    else begin
                                        start_gdialog(136, self_obj, 4, -1, -1);
                                        gsay_start;
                                        call Node009();
                                        gsay_end;
                                        end_dialogue;
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure destroy_p_proc
begin
    if (local_var(7) < 2) then begin
        item := create_object(253, 0, 0);
        add_obj_to_inven(self_obj, item);
    end
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (critter_kill_type(self_obj) == KILL_TYPE_children_kills) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(GVAR_TOWN_REP_VAULT_CITY, global_var(GVAR_TOWN_REP_VAULT_CITY) + -8);
                debug_msg("Added " + -8 + " to Town Rep");
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(GVAR_TOWN_REP_VAULT_CITY, global_var(GVAR_TOWN_REP_VAULT_CITY) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(101);
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(6, 1);
        set_global_var(GVAR_ENEMY_GECKO, 1);
    end
end

procedure map_enter_p_proc
begin
    Only_Once := 0;
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 49);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_TOUGH_CITIZEN);
end

procedure combat
begin
end

procedure Node910
begin
    if (global_var(GVAR_VAULT_PLANT_STATUS) == 9) then begin
        call Node008();
    end
    else begin
        call Node007();
    end
end

procedure Node920
begin
end

procedure Node922
begin
end

procedure Node924
begin
end

procedure Node926
begin
end

procedure Node928
begin
end

procedure Node930
begin
end

procedure Node934
begin
end

procedure Node935
begin
end

procedure Node940
begin
end

procedure Node982
begin
    if (local_var(8) == 1) then begin
        set_local_var(8, 2);
    end
    else begin
        item_caps_adjust(dude_obj, -(3000 * (250 / (160 + dude_skill(SKILL_BARTER)))));
        item_caps_adjust(self_obj, 3000 * (250 / (160 + dude_skill(SKILL_BARTER))));
    end
    inven_unwield(dude_obj);
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 160);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 160);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 160);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        destroy_object(restock_obj);
    end
    restock_obj := 0;
    restock_amt := 0;
    restock_obj := create_object(399, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    call Node137();
end

procedure Node983
begin
    if (local_var(8) == 1) then begin
        set_local_var(8, 2);
    end
    else begin
        item_caps_adjust(dude_obj, -(12000 * (250 / (160 + dude_skill(SKILL_BARTER)))));
        item_caps_adjust(self_obj, 12000 * (250 / (160 + dude_skill(SKILL_BARTER))));
    end
    inven_unwield(dude_obj);
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 351);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 351);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 351);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        destroy_object(restock_obj);
    end
    restock_obj := 0;
    restock_amt := 0;
    restock_obj := create_object(403, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    call Node137();
end

procedure Node984
begin
    if (local_var(8) == 1) then begin
        set_local_var(8, 2);
    end
    else begin
        item_caps_adjust(dude_obj, -(6000 * (250 / (160 + dude_skill(SKILL_BARTER)))));
        item_caps_adjust(self_obj, 6000 * (250 / (160 + dude_skill(SKILL_BARTER))));
    end
    inven_unwield(dude_obj);
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 23);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 23);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 23);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        destroy_object(restock_obj);
    end
    restock_obj := 0;
    restock_amt := 0;
    restock_obj := create_object(405, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    call Node137();
end

procedure Node985
begin
    if (local_var(8) == 1) then begin
        set_local_var(8, 2);
    end
    else begin
        item_caps_adjust(dude_obj, -(4000 * (250 / (160 + dude_skill(SKILL_BARTER)))));
        item_caps_adjust(self_obj, 4000 * (250 / (160 + dude_skill(SKILL_BARTER))));
    end
    inven_unwield(dude_obj);
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 10);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 10);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 10);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        destroy_object(restock_obj);
    end
    restock_obj := 0;
    restock_amt := 0;
    restock_obj := create_object(287, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    call Node137();
end

procedure Node986
begin
    if (local_var(8) == 1) then begin
        set_local_var(8, 2);
    end
    else begin
        item_caps_adjust(dude_obj, -(3000 * (250 / (160 + dude_skill(SKILL_BARTER)))));
        item_caps_adjust(self_obj, 3000 * (250 / (160 + dude_skill(SKILL_BARTER))));
    end
    inven_unwield(dude_obj);
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 18);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 18);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 18);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        destroy_object(restock_obj);
    end
    restock_obj := 0;
    restock_amt := 0;
    restock_obj := create_object(404, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    call Node137();
end

procedure Node987
begin
    if (local_var(8) == 1) then begin
        set_local_var(8, 2);
    end
    else begin
        item_caps_adjust(dude_obj, -(2000 * (250 / (160 + dude_skill(SKILL_BARTER)))));
        item_caps_adjust(self_obj, 2000 * (250 / (160 + dude_skill(SKILL_BARTER))));
    end
    inven_unwield(dude_obj);
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 313);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 313);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 313);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        destroy_object(restock_obj);
    end
    restock_obj := 0;
    restock_amt := 0;
    restock_obj := create_object(398, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    call Node137();
end

procedure Node995
begin
    if (dude_charisma >= 7) then begin
        set_local_var(3, 100);
        set_local_var(1, 4);
    end
    else begin
        set_local_var(1, -4);
        set_local_var(3, -100);
    end
end

procedure Node996
begin
    set_local_var(1, -4);
    set_local_var(3, -100);
end

procedure Node997
begin
    if (dude_charisma >= 8) then begin
        call Node004();
    end
    else begin
        call Node005();
    end
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
end

procedure Node001
begin
    float_msg(self_obj, mstr(random(110, 114)), FLOAT_MSG_RED);
end

procedure Node002
begin
    Reply(120);
    giq_option(4, NAME, 121, Node003, NEUTRAL_REACTION);
    giq_option(4, NAME, 122, Node004, NEUTRAL_REACTION);
end

procedure Node003
begin
    Reply(130);
    giq_option(4, NAME, 131, Node004, NEUTRAL_REACTION);
end

procedure Node004
begin
    Reply(140);
    giq_option(4, NAME, 141, Node005, NEUTRAL_REACTION);
    giq_option(4, NAME, 142, Node005, NEUTRAL_REACTION);
    giq_option(4, NAME, 143, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 144, Node009, NEUTRAL_REACTION);
end

procedure Node005
begin
    Reply(150);
    giq_option(4, NAME, 151, Node021, NEUTRAL_REACTION);
end

procedure Node006
begin
    if (obj_is_carrying_obj_pid(dude_obj, 307)) then begin
        item := obj_carrying_pid_obj(dude_obj, 307);
        rm_obj_from_inven(dude_obj, item);
        destroy_object(item);
        set_global_var(GVAR_GECKO_SKEETER_PART, 2);
        set_global_var(GVAR_TOWN_REP_GECKO, global_var(GVAR_TOWN_REP_GECKO) + 5);
        display_mstr(700);
        give_exp_points(350);
        display_msg(g_mstr(100) + 350 + g_mstr(101));
        set_local_var(8, 1);
    end
    Reply(160);
    giq_option(1, NAME, 161, Node110, NEUTRAL_REACTION);
    giq_option(4, NAME, 162, Node999, NEUTRAL_REACTION);
end

procedure Node007
begin
    Reply(170);
    giq_option(4, NAME, 171, Node009, NEUTRAL_REACTION);
    giq_option(4, NAME, 172, Node999, NEUTRAL_REACTION);
end

procedure Node008
begin
    Reply(180);
    giq_option(4, NAME, 181, Node009, NEUTRAL_REACTION);
    giq_option(4, NAME, 182, Node999, NEUTRAL_REACTION);
end

procedure Node009
begin
    if (local_var(9) == 0) then begin
        set_local_var(9, 1);
        Reply(190);
    end
    else begin
        Reply(192);
    end
    if (global_var(GVAR_VAULT13_FOUND_GECK)) then begin
    end
    else begin
        giq_option(4, NAME, 200, Node016, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_QUEST_SUPER_REPAIR_KIT) == 0) and (global_var(GVAR_DEN_SMITTY_PART) > 0)) then begin
        giq_option(4, NAME, 201, Node002, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 202, Node110, NEUTRAL_REACTION);
    giq_option(4, NAME, 203, Node015, NEUTRAL_REACTION);
    giq_option(4, NAME, 204, Node999, NEUTRAL_REACTION);
end

procedure Node010
begin
    Reply(210);
    giq_option(1, NAME, 211, Node920, NEUTRAL_REACTION);
    giq_option(1, NAME, 212, Node922, NEUTRAL_REACTION);
    giq_option(1, NAME, 213, Node924, NEUTRAL_REACTION);
    giq_option(1, NAME, 214, Node926, NEUTRAL_REACTION);
    giq_option(1, NAME, 215, Node928, NEUTRAL_REACTION);
    giq_option(1, NAME, 216, Node930, NEUTRAL_REACTION);
    giq_option(1, NAME, 217, Node035, NEUTRAL_REACTION);
    giq_option(1, NAME, 218, Node999, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(220);
    giq_option(1, NAME, 222, Node034, NEUTRAL_REACTION);
    giq_option(1, NAME, 223, Node034, NEUTRAL_REACTION);
    giq_option(1, NAME, 224, Node034, NEUTRAL_REACTION);
    giq_option(1, NAME, 225, Node110, NEUTRAL_REACTION);
    giq_option(1, NAME, 226, Node999, NEUTRAL_REACTION);
end

procedure Node012
begin
    Reply(230);
    giq_option(1, NAME, 231, Node110, NEUTRAL_REACTION);
    giq_option(1, NAME, 232, Node019, NEUTRAL_REACTION);
    giq_option(1, NAME, 233, Node999, NEUTRAL_REACTION);
end

procedure Node013
begin
    Reply(240);
    giq_option(1, NAME, 241, Node110, NEUTRAL_REACTION);
    giq_option(1, NAME, 242, Node999, NEUTRAL_REACTION);
end

procedure Node014
begin
    Reply(250);
    giq_option(1, NAME, 251, Node110, NEUTRAL_REACTION);
    giq_option(1, NAME, 252, Node999, NEUTRAL_REACTION);
end

procedure Node015
begin
    Reply(260);
    giq_option(4, NAME, 261, Node009, NEUTRAL_REACTION);
    giq_option(4, NAME, 262, Node999, NEUTRAL_REACTION);
end

procedure Node016
begin
    Reply(270);
    giq_option(4, NAME, 271, Node017, NEUTRAL_REACTION);
    giq_option(4, NAME, 272, Node009, NEUTRAL_REACTION);
    giq_option(4, NAME, 273, Node999, NEUTRAL_REACTION);
end

procedure Node017
begin
    Reply(280);
    giq_option(4, NAME, 281, Node018, NEUTRAL_REACTION);
end

procedure Node018
begin
    Reply(290);
    giq_option(4, NAME, 291, Node009, NEUTRAL_REACTION);
    giq_option(4, NAME, 292, Node999, NEUTRAL_REACTION);
end

procedure Node019
begin
    Reply(300);
    giq_option(1, NAME, 301, Node020, NEUTRAL_REACTION);
    giq_option(1, NAME, 302, Node110, NEUTRAL_REACTION);
    giq_option(1, NAME, 303, Node999, GOOD_REACTION);
end

procedure Node020
begin
    Reply(310);
    giq_option(1, NAME, 311, Node999, NEUTRAL_REACTION);
    giq_option(1, NAME, 312, Node110, NEUTRAL_REACTION);
    giq_option(1, NAME, 313, Node999, GOOD_REACTION);
end

procedure Node021
begin
    Reply(320);
    giq_option(4, NAME, 321, Node022, NEUTRAL_REACTION);
end

procedure Node022
begin
    set_global_var(GVAR_QUEST_SUPER_REPAIR_KIT, 1);
    set_local_var(7, 1);
    Reply(330);
    giq_option(4, NAME, 331, Node023, NEUTRAL_REACTION);
end

procedure Node023
begin
    Reply(340);
    giq_option(4, NAME, 341, Node009, NEUTRAL_REACTION);
    giq_option(4, NAME, 342, Node024, NEUTRAL_REACTION);
    giq_option(4, NAME, 343, Node999, NEUTRAL_REACTION);
end

procedure Node024
begin
    Reply(360);
    giq_option(4, NAME, 361, Node009, NEUTRAL_REACTION);
    giq_option(4, NAME, 362, combat, BAD_REACTION);
    giq_option(7, NAME, 363, Node999, NEUTRAL_REACTION);
end

procedure Node025
begin
    if (local_var(7) == 1) then begin
        Reply(371);
    end
    else begin
        Reply(370);
    end
    giq_option(4, NAME, 372, Node915, NEUTRAL_REACTION);
    giq_option(4, NAME, 373, Node999, NEUTRAL_REACTION);
end

procedure Node026
begin
    call Node150();
    if (combyn == 0) then begin
        Reply(380);
    end
    else begin
        Reply(381);
        giq_option(4, NAME, 382, Node027, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 383, Node009, NEUTRAL_REACTION);
    giq_option(4, NAME, 384, Node999, NEUTRAL_REACTION);
end

procedure Node027
begin
    Reply(390);
    giq_option(4, NAME, 391, Node028, NEUTRAL_REACTION);
end

procedure Node028
begin
    Reply(400);
    giq_option(4, NAME, 401, Node029, NEUTRAL_REACTION);
end

procedure Node029
begin
    Reply(410);
    giq_option(4, NAME, 411, Node030, NEUTRAL_REACTION);
end

procedure Node030
begin
    Reply(420);
    giq_option(4, NAME, 421, Node031, NEUTRAL_REACTION);
end

procedure Node031
begin
    set_global_var(GVAR_GECKO_SKEETER_PART, 1);
    Reply(430);
    giq_option(4, NAME, 431, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 432, Node999, NEUTRAL_REACTION);
end

procedure Node032
begin
    Reply(440);
    giq_option(4, NAME, 441, Node110, NEUTRAL_REACTION);
    giq_option(4, NAME, 442, Node999, NEUTRAL_REACTION);
end

procedure Node034
begin
    Reply(460);
    giq_option(1, NAME, 461, Node940, NEUTRAL_REACTION);
    giq_option(1, NAME, 462, Node110, NEUTRAL_REACTION);
    giq_option(1, NAME, 463, Node999, NEUTRAL_REACTION);
end

procedure Node035
begin
    Reply(470);
    giq_option(1, NAME, 471, Node110, NEUTRAL_REACTION);
    giq_option(1, NAME, 472, Node999, NEUTRAL_REACTION);
end

procedure Node036
begin
    Reply(500);
    giq_option(1, NAME, 501, Node999, NEUTRAL_REACTION);
    giq_option(1, NAME, 502, Node999, NEUTRAL_REACTION);
end

procedure Node110
begin
    Reply(600);
    if (obj_is_carrying_obj_pid(dude_obj, 18) or obj_is_carrying_obj_pid(dude_obj, 313)) then begin
        giq_option(4, NAME, 601, Node111, NEUTRAL_REACTION);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 10) or obj_is_carrying_obj_pid(dude_obj, 23) or obj_is_carrying_obj_pid(dude_obj, 351)) then begin
        giq_option(4, NAME, 602, Node112, NEUTRAL_REACTION);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 160)) then begin
        giq_option(4, NAME, 603, Node113, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 604, Node009, NEUTRAL_REACTION);
    giq_option(4, NAME, 605, Node999, NEUTRAL_REACTION);
end

procedure Node111
begin
    variable LVar0 := "";
    variable LVar1 := 0;
    if (local_var(8) == 1) then begin
        if (obj_is_carrying_obj_pid(dude_obj, 313)) then begin
            LVar0 := LVar0 + (mstr(680) + " ");
        end
        if (obj_is_carrying_obj_pid(dude_obj, 18)) then begin
            LVar0 := LVar0 + mstr(681);
        end
        Reply(LVar0);
        if (obj_is_carrying_obj_pid(dude_obj, 313)) then begin
            giq_option(4, NAME, 612, Node987, NEUTRAL_REACTION);
            LVar1 := 1;
        end
        if (obj_is_carrying_obj_pid(dude_obj, 18)) then begin
            giq_option(4, NAME, 613, Node986, NEUTRAL_REACTION);
            LVar1 := 1;
        end
    end
    else begin
        if (obj_is_carrying_obj_pid(dude_obj, 313)) then begin
            LVar0 := LVar0 + (mstr(610) + (2000 * (250 / (160 + dude_skill(SKILL_BARTER)))) + mstr(5500) + " ");
        end
        if (obj_is_carrying_obj_pid(dude_obj, 18)) then begin
            LVar0 := LVar0 + (mstr(611) + (3000 * (250 / (160 + dude_skill(SKILL_BARTER)))) + mstr(5500));
        end
        Reply(LVar0);
        if (obj_is_carrying_obj_pid(dude_obj, 313) and (item_caps_total(dude_obj) >= (2000 * (250 / (160 + dude_skill(SKILL_BARTER)))))) then begin
            giq_option(4, NAME, 612, Node987, NEUTRAL_REACTION);
            LVar1 := 1;
        end
        if (obj_is_carrying_obj_pid(dude_obj, 18) and (item_caps_total(dude_obj) >= (3000 * (250 / (160 + dude_skill(SKILL_BARTER)))))) then begin
            giq_option(4, NAME, 613, Node986, NEUTRAL_REACTION);
            LVar1 := 1;
        end
        if (LVar1 == 0) then begin
            giq_option(4, NAME, 617, Node999, NEUTRAL_REACTION);
        end
    end
    giq_option(4, NAME, 614, Node110, NEUTRAL_REACTION);
    giq_option(4, NAME, 615, Node009, NEUTRAL_REACTION);
    giq_option(4, NAME, 616, Node999, NEUTRAL_REACTION);
end

procedure Node112
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    if (local_var(8) == 1) then begin
        LVar0 := mstr(620);
        if (obj_is_carrying_obj_pid(dude_obj, 10)) then begin
            LVar0 := LVar0 + (mstr(682) + " ");
        end
        if (obj_is_carrying_obj_pid(dude_obj, 23)) then begin
            LVar0 := LVar0 + (mstr(683) + " ");
        end
        if (obj_is_carrying_obj_pid(dude_obj, 351)) then begin
            LVar0 := LVar0 + mstr(684);
        end
        Reply(LVar0);
        if (obj_is_carrying_obj_pid(dude_obj, 10)) then begin
            giq_option(4, NAME, 624, Node985, NEUTRAL_REACTION);
        end
        if (obj_is_carrying_obj_pid(dude_obj, 23)) then begin
            giq_option(4, NAME, 625, Node984, NEUTRAL_REACTION);
        end
        if (obj_is_carrying_obj_pid(dude_obj, 351)) then begin
            giq_option(4, NAME, 626, Node983, NEUTRAL_REACTION);
        end
    end
    else begin
        LVar0 := mstr(620);
        if (obj_is_carrying_obj_pid(dude_obj, 10)) then begin
            LVar0 := LVar0 + (mstr(621) + (4000 * (250 / (160 + dude_skill(SKILL_BARTER)))) + mstr(5500) + " ");
        end
        if (obj_is_carrying_obj_pid(dude_obj, 23)) then begin
            LVar0 := LVar0 + (mstr(622) + (6000 * (250 / (160 + dude_skill(SKILL_BARTER)))) + mstr(5500) + " ");
        end
        if (obj_is_carrying_obj_pid(dude_obj, 351)) then begin
            LVar0 := LVar0 + (mstr(623) + (12000 * (250 / (160 + dude_skill(SKILL_BARTER)))) + mstr(5500));
        end
        Reply(LVar0);
        if (obj_is_carrying_obj_pid(dude_obj, 10) and (item_caps_total(dude_obj) >= (4000 * (250 / (160 + dude_skill(SKILL_BARTER)))))) then begin
            giq_option(4, NAME, 624, Node985, NEUTRAL_REACTION);
            LVar1 := 1;
        end
        if (obj_is_carrying_obj_pid(dude_obj, 23) and (item_caps_total(dude_obj) >= (6000 * (250 / (160 + dude_skill(SKILL_BARTER)))))) then begin
            giq_option(4, NAME, 625, Node984, NEUTRAL_REACTION);
            LVar1 := 1;
        end
        if (obj_is_carrying_obj_pid(dude_obj, 351) and (item_caps_total(dude_obj) >= (12000 * (250 / (160 + dude_skill(SKILL_BARTER)))))) then begin
            giq_option(4, NAME, 626, Node983, NEUTRAL_REACTION);
            LVar1 := 1;
        end
        if (LVar1 == 0) then begin
            giq_option(4, NAME, 617, Node999, NEUTRAL_REACTION);
        end
    end
    giq_option(4, NAME, 614, Node110, NEUTRAL_REACTION);
    giq_option(4, NAME, 615, Node009, NEUTRAL_REACTION);
    giq_option(4, NAME, 616, Node999, NEUTRAL_REACTION);
end

procedure Node113
begin
    if (local_var(8) == 1) then begin
        Reply(685);
    end
    else begin
        Reply(mstr(630) + (3000 * (250 / (160 + dude_skill(SKILL_BARTER)))) + mstr(5500));
    end
    if ((item_caps_total(dude_obj) >= (3000 * (250 / (160 + dude_skill(SKILL_BARTER))))) or (local_var(8) == 1)) then begin
        giq_option(4, NAME, 631, Node982, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 617, Node999, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 614, Node110, NEUTRAL_REACTION);
    giq_option(4, NAME, 615, Node009, NEUTRAL_REACTION);
    giq_option(4, NAME, 616, Node999, NEUTRAL_REACTION);
end

procedure Node137
begin
    game_time_advance(game_ticks(3 * 3600));
    Reply(640);
    giq_option(4, NAME, 641, Node138, NEUTRAL_REACTION);
end

procedure Node138
begin
    Reply(650);
    giq_option(4, NAME, 651, Node139, NEUTRAL_REACTION);
end

procedure Node139
begin
    Reply(660);
    giq_option(4, NAME, 661, Node140, NEUTRAL_REACTION);
end

procedure Node140
begin
    Reply(670);
    giq_option(4, NAME, 671, Node110, NEUTRAL_REACTION);
    giq_option(4, NAME, 672, Node009, NEUTRAL_REACTION);
    giq_option(4, NAME, 673, Node999, NEUTRAL_REACTION);
end

procedure Node150
begin
    combyn := 0;
    if (obj_is_carrying_obj_pid(dude_obj, 313)) then begin
        combyn := 1;
    end
    if (obj_is_carrying_obj_pid(dude_obj, 18)) then begin
        combyn := 1;
    end
    if (obj_is_carrying_obj_pid(dude_obj, 10)) then begin
        combyn := 1;
    end
    if (obj_is_carrying_obj_pid(dude_obj, 23)) then begin
        combyn := 1;
    end
    if (obj_is_carrying_obj_pid(dude_obj, 351)) then begin
        combyn := 1;
    end
    if (obj_is_carrying_obj_pid(dude_obj, 160)) then begin
        combyn := 1;
    end
end

procedure Node915
begin
    if (obj_is_carrying_obj_pid(dude_obj, 308)) then begin
        set_local_var(7, 2);
        item := obj_carrying_pid_obj(dude_obj, 308);
        rm_obj_from_inven(dude_obj, item);
        add_obj_to_inven(self_obj, item);
        item := create_object(253, 0, 0);
        add_obj_to_inven(dude_obj, item);
        set_global_var(GVAR_QUEST_SUPER_REPAIR_KIT, 2);
        set_global_var(GVAR_TOWN_REP_GECKO, global_var(GVAR_TOWN_REP_GECKO) + 5);
        display_mstr(710);
        give_exp_points(250);
        display_msg(g_mstr(100) + 250 + g_mstr(101));
    end
    call Node026();
end

procedure Node033
begin
    Reply(450);
    giq_option(1, NAME, 451, Node110, NEUTRAL_REACTION);
    giq_option(1, NAME, 452, Node999, NEUTRAL_REACTION);
end
