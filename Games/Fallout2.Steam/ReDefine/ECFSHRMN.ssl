variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure combat_p_proc;
procedure Node998;
procedure Node999;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure NodeFleeing;
procedure NodeFighting;

variable Only_Once;

procedure NodeBuyJunk;
procedure NodeBuyLaser;
procedure NodeBuyPole;
procedure NodeBuyFruit;
procedure NodeBuyXander;
procedure NodeBuyBroc;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if ((local_var(5) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack(dude_obj);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure talk_p_proc
begin
    start_gdialog(507, self_obj, 4, -1, -1);
    gsay_start;
    call Node001();
    gsay_end;
    end_dialogue;
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (critter_kill_type(self_obj) == KILL_TYPE_children_kills) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - -15);
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(6, 1);
    end
end

procedure map_enter_p_proc
begin
    Only_Once := 0;
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 182);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_GENERIC_GUARDS);
    set_local_var(7, random(1, 4));
    if (local_var(7) == 1) then begin
        restock_amt := random(3, 5);
        if (obj_is_carrying_obj_pid(self_obj, 71) < restock_amt) then begin
            if (100 >= random(1, 100)) then begin
                if (obj_is_carrying_obj_pid(self_obj, 71) < restock_amt) then begin
                    restock_obj := create_object(71, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 71));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 71) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 71);
                        if ((obj_is_carrying_obj_pid(self_obj, 71) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 71) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 71);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 71);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            destroy_object(restock_obj);
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
        end
        else begin
            if (obj_is_carrying_obj_pid(self_obj, 71) < restock_amt) then begin
                restock_obj := create_object(71, 0, 0);
                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 71));
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 71) > restock_amt) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 71);
                    if ((obj_is_carrying_obj_pid(self_obj, 71) - restock_amt) < removed_qty) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 71) - restock_amt;
                    end
                    if (removed_qty > 0) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 71);
                        if (obj_type(self_obj) == 1) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 71);
                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                    restock_obj := critter_inven_obj(self_obj, 0);
                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    add_obj_to_inven(self_obj, restock_obj);
                                end
                            end
                            else begin
                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                    inven_unwield(self_obj);
                                end
                            end
                        end
                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                        destroy_object(restock_obj);
                    end
                    restock_obj := 0;
                    restock_amt := 0;
                end
                else begin
                    restock_obj := 0;
                end
            end
        end
    end
    else begin
        if (local_var(7) == 2) then begin
            restock_amt := random(3, 5);
            if (obj_is_carrying_obj_pid(self_obj, 271) < restock_amt) then begin
                if (100 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 271) < restock_amt) then begin
                        restock_obj := create_object(271, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 271));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 271) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 271);
                            if ((obj_is_carrying_obj_pid(self_obj, 271) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 271) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 271);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 271);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 271) < restock_amt) then begin
                    restock_obj := create_object(271, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 271));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 271) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 271);
                        if ((obj_is_carrying_obj_pid(self_obj, 271) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 271) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 271);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 271);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            destroy_object(restock_obj);
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
        end
        else begin
            if (local_var(7) == 3) then begin
                restock_amt := random(3, 5);
                if (obj_is_carrying_obj_pid(self_obj, 272) < restock_amt) then begin
                    if (100 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 272) < restock_amt) then begin
                            restock_obj := create_object(272, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 272));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 272) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 272);
                                if ((obj_is_carrying_obj_pid(self_obj, 272) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 272) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 272);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 272);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 272) < restock_amt) then begin
                        restock_obj := create_object(272, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 272));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 272) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 272);
                            if ((obj_is_carrying_obj_pid(self_obj, 272) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 272) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 272);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 272);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (local_var(7) == 4) then begin
                    restock_amt := random(3, 5);
                    if (obj_is_carrying_obj_pid(self_obj, 320) < restock_amt) then begin
                        if (100 >= random(1, 100)) then begin
                            if (obj_is_carrying_obj_pid(self_obj, 320) < restock_amt) then begin
                                restock_obj := create_object(320, 0, 0);
                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 320));
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, 320) > restock_amt) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 320);
                                    if ((obj_is_carrying_obj_pid(self_obj, 320) - restock_amt) < removed_qty) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 320) - restock_amt;
                                    end
                                    if (removed_qty > 0) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 320);
                                        if (obj_type(self_obj) == 1) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 320);
                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                    add_obj_to_inven(self_obj, restock_obj);
                                                end
                                            end
                                            else begin
                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                    inven_unwield(self_obj);
                                                end
                                            end
                                        end
                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                        destroy_object(restock_obj);
                                    end
                                    restock_obj := 0;
                                    restock_amt := 0;
                                end
                                else begin
                                    restock_obj := 0;
                                end
                            end
                        end
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 320) < restock_amt) then begin
                            restock_obj := create_object(320, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 320));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 320) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 320);
                                if ((obj_is_carrying_obj_pid(self_obj, 320) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 320) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 320);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 320);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
            end
        end
    end
    restock_amt := random(1, 1);
    if (obj_is_carrying_obj_pid(self_obj, 227) < restock_amt) then begin
        if (50 >= random(1, 100)) then begin
            if (obj_is_carrying_obj_pid(self_obj, 227) < restock_amt) then begin
                restock_obj := create_object(227, 0, 0);
                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 227));
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 227) > restock_amt) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 227);
                    if ((obj_is_carrying_obj_pid(self_obj, 227) - restock_amt) < removed_qty) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 227) - restock_amt;
                    end
                    if (removed_qty > 0) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 227);
                        if (obj_type(self_obj) == 1) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 227);
                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                    restock_obj := critter_inven_obj(self_obj, 0);
                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    add_obj_to_inven(self_obj, restock_obj);
                                end
                            end
                            else begin
                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                    inven_unwield(self_obj);
                                end
                            end
                        end
                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                        destroy_object(restock_obj);
                    end
                    restock_obj := 0;
                    restock_amt := 0;
                end
                else begin
                    restock_obj := 0;
                end
            end
        end
    end
    else begin
        if (obj_is_carrying_obj_pid(self_obj, 227) < restock_amt) then begin
            restock_obj := create_object(227, 0, 0);
            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 227));
        end
        else begin
            if (obj_is_carrying_obj_pid(self_obj, 227) > restock_amt) then begin
                removed_qty := obj_is_carrying_obj_pid(self_obj, 227);
                if ((obj_is_carrying_obj_pid(self_obj, 227) - restock_amt) < removed_qty) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 227) - restock_amt;
                end
                if (removed_qty > 0) then begin
                    restock_obj := obj_carrying_pid_obj(self_obj, 227);
                    if (obj_type(self_obj) == 1) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 227);
                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                restock_obj := critter_inven_obj(self_obj, 0);
                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                rm_obj_from_inven(self_obj, restock_obj);
                                add_obj_to_inven(self_obj, restock_obj);
                            end
                        end
                        else begin
                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                inven_unwield(self_obj);
                            end
                        end
                    end
                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                    destroy_object(restock_obj);
                end
                restock_obj := 0;
                restock_amt := 0;
            end
            else begin
                restock_obj := 0;
            end
        end
    end
    restock_amt := random(1, 1);
    if (obj_is_carrying_obj_pid(self_obj, 16) < restock_amt) then begin
        if (1 >= random(1, 100)) then begin
            if (obj_is_carrying_obj_pid(self_obj, 16) < restock_amt) then begin
                restock_obj := create_object(16, 0, 0);
                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 16));
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 16) > restock_amt) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 16);
                    if ((obj_is_carrying_obj_pid(self_obj, 16) - restock_amt) < removed_qty) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 16) - restock_amt;
                    end
                    if (removed_qty > 0) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 16);
                        if (obj_type(self_obj) == 1) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 16);
                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                    restock_obj := critter_inven_obj(self_obj, 0);
                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    add_obj_to_inven(self_obj, restock_obj);
                                end
                            end
                            else begin
                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                    inven_unwield(self_obj);
                                end
                            end
                        end
                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                        destroy_object(restock_obj);
                    end
                    restock_obj := 0;
                    restock_amt := 0;
                end
                else begin
                    restock_obj := 0;
                end
            end
        end
    end
    else begin
        if (obj_is_carrying_obj_pid(self_obj, 16) < restock_amt) then begin
            restock_obj := create_object(16, 0, 0);
            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 16));
        end
        else begin
            if (obj_is_carrying_obj_pid(self_obj, 16) > restock_amt) then begin
                removed_qty := obj_is_carrying_obj_pid(self_obj, 16);
                if ((obj_is_carrying_obj_pid(self_obj, 16) - restock_amt) < removed_qty) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 16) - restock_amt;
                end
                if (removed_qty > 0) then begin
                    restock_obj := obj_carrying_pid_obj(self_obj, 16);
                    if (obj_type(self_obj) == 1) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 16);
                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                restock_obj := critter_inven_obj(self_obj, 0);
                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                rm_obj_from_inven(self_obj, restock_obj);
                                add_obj_to_inven(self_obj, restock_obj);
                            end
                        end
                        else begin
                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                inven_unwield(self_obj);
                            end
                        end
                    end
                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                    destroy_object(restock_obj);
                end
                restock_obj := 0;
                restock_amt := 0;
            end
            else begin
                restock_obj := 0;
            end
        end
    end
end

procedure combat_p_proc
begin
    if (critter_is_fleeing(self_obj)) then begin
        if (random(1, 100) <= 20) then begin
            call NodeFleeing();
        end
    end
    else begin
        if (random(1, 100) <= 20) then begin
            call NodeFighting();
        end
    end
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
end

procedure Node001
begin
    Reply(101);
    giq_option(1, NAME, 102, Node002, NEUTRAL_REACTION);
end

procedure Node002
begin
    if (local_var(7) == 1) then begin
        Reply(104);
    end
    else begin
        if (local_var(7) == 2) then begin
            Reply(105);
        end
        else begin
            if (local_var(7) == 3) then begin
                Reply(106);
            end
            else begin
                if (local_var(7) == 4) then begin
                    Reply(107);
                end
            end
        end
    end
    giq_option(4, NAME, 108, Node003, NEUTRAL_REACTION);
    giq_option(-3, NAME, 109, Node004, NEUTRAL_REACTION);
end

procedure Node003
begin
    Reply(110);
    if (obj_carrying_pid_obj(self_obj, 227)) then begin
        giq_option(4, NAME, 111, NodeBuyJunk, NEUTRAL_REACTION);
    end
    if (obj_carrying_pid_obj(self_obj, 16)) then begin
        giq_option(4, NAME, 112, NodeBuyLaser, NEUTRAL_REACTION);
    end
    if (obj_carrying_pid_obj(self_obj, 320)) then begin
        giq_option(4, NAME, 113, NodeBuyPole, NEUTRAL_REACTION);
    end
    if (obj_carrying_pid_obj(self_obj, 71)) then begin
        giq_option(4, NAME, 114, NodeBuyFruit, NEUTRAL_REACTION);
    end
    if (obj_carrying_pid_obj(self_obj, 272)) then begin
        giq_option(4, NAME, 115, NodeBuyXander, NEUTRAL_REACTION);
    end
    if (obj_carrying_pid_obj(self_obj, 271)) then begin
        giq_option(4, NAME, 116, NodeBuyBroc, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 117, Node999, NEUTRAL_REACTION);
end

procedure Node004
begin
    Reply(118);
    giq_option(-3, NAME, 119, Node999, NEUTRAL_REACTION);
end

procedure Node005
begin
    Reply(120);
    giq_option(4, NAME, 121, Node999, NEUTRAL_REACTION);
end

procedure Node006
begin
    Reply(122);
    giq_option(4, NAME, 123, Node999, NEUTRAL_REACTION);
end

procedure NodeFleeing
begin
end

procedure NodeFighting
begin
end

procedure NodeBuyJunk
begin
    variable LVar0 := 0;
    if (item_caps_total(dude_obj) >= 10) then begin
        LVar0 := obj_carrying_pid_obj(self_obj, 227);
        rm_obj_from_inven(self_obj, LVar0);
        add_obj_to_inven(dude_obj, LVar0);
        item_caps_adjust(dude_obj, -10);
        item_caps_adjust(self_obj, 10);
        call Node005();
    end
    else begin
        call Node006();
    end
end

procedure NodeBuyLaser
begin
    variable LVar0 := 0;
    if (item_caps_total(dude_obj) >= 10000) then begin
        LVar0 := obj_carrying_pid_obj(self_obj, 16);
        rm_obj_from_inven(self_obj, LVar0);
        add_obj_to_inven(dude_obj, LVar0);
        item_caps_adjust(dude_obj, -10000);
        item_caps_adjust(self_obj, 10000);
        call Node005();
    end
    else begin
        call Node006();
    end
end

procedure NodeBuyPole
begin
    variable LVar0 := 0;
    if (item_caps_total(dude_obj) >= 40) then begin
        LVar0 := obj_carrying_pid_obj(self_obj, 320);
        rm_obj_from_inven(self_obj, LVar0);
        add_obj_to_inven(dude_obj, LVar0);
        item_caps_adjust(dude_obj, -40);
        item_caps_adjust(self_obj, 40);
        call Node005();
    end
    else begin
        call Node006();
    end
end

procedure NodeBuyFruit
begin
    variable LVar0 := 0;
    if (item_caps_total(dude_obj) >= 5) then begin
        LVar0 := obj_carrying_pid_obj(self_obj, 71);
        rm_obj_from_inven(self_obj, LVar0);
        add_obj_to_inven(dude_obj, LVar0);
        item_caps_adjust(dude_obj, -5);
        item_caps_adjust(self_obj, 5);
        call Node005();
    end
    else begin
        call Node006();
    end
end

procedure NodeBuyXander
begin
    variable LVar0 := 0;
    if (item_caps_total(dude_obj) >= 20) then begin
        LVar0 := obj_carrying_pid_obj(self_obj, 272);
        rm_obj_from_inven(self_obj, LVar0);
        add_obj_to_inven(dude_obj, LVar0);
        item_caps_adjust(dude_obj, -20);
        item_caps_adjust(self_obj, 20);
        call Node005();
    end
    else begin
        call Node006();
    end
end

procedure NodeBuyBroc
begin
    variable LVar0 := 0;
    if (item_caps_total(dude_obj) >= 10) then begin
        LVar0 := obj_carrying_pid_obj(self_obj, 271);
        rm_obj_from_inven(self_obj, LVar0);
        add_obj_to_inven(dude_obj, LVar0);
        item_caps_adjust(dude_obj, -10);
        item_caps_adjust(self_obj, 10);
        call Node005();
    end
    else begin
        call Node006();
    end
end
