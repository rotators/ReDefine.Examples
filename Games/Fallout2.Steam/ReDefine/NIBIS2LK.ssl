variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable last_timed_obj;
variable last_timed_param;
variable check_still_kill;
variable stored_msg;
variable stored_node;
variable top_msg;
variable var_num;

procedure ChooseFromList;
procedure CLICK_PREV;
procedure CLICK_0;
procedure CLICK_1;
procedure CLICK_2;
procedure CLICK_3;
procedure CLICK_4;
procedure CLICK_MORE;

variable floater_patch_msg;
variable hs_temp;

procedure start;
procedure map_enter_p_proc;
procedure pickup_p_proc;
procedure use_p_proc;
procedure damage_p_proc;
procedure map_exit_p_proc;
procedure map_update_p_proc;
procedure use_obj_on_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;

import variable new_reno_bishop_men_obj;

variable caught_tamper;
variable user_obj;
variable temp_roll;

procedure timed_event_p_proc;
procedure use_skill_on_p_proc;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure ChooseFromList
begin
    variable LVar0 := 0;
    gsay_reply(SCRIPT_ZILOCKER, stored_msg);
    if (message_str(SCRIPT_NEWR1, top_msg - 1) != "") then begin
        giq_option(1, SCRIPT_ZILOCKER, message_str(SCRIPT_NEWR1, 150), CLICK_PREV, NEUTRAL_REACTION);
    end
    if (LVar0 == 0) then begin
        if (message_str(SCRIPT_NEWR1, top_msg + 0) != "") then begin
            giq_option(1, SCRIPT_ZILOCKER, message_str(SCRIPT_NEWR1, top_msg + 0), CLICK_0, NEUTRAL_REACTION);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(SCRIPT_NEWR1, top_msg + 1) != "") then begin
            giq_option(1, SCRIPT_ZILOCKER, message_str(SCRIPT_NEWR1, top_msg + 1), CLICK_1, NEUTRAL_REACTION);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(SCRIPT_NEWR1, top_msg + 2) != "") then begin
            giq_option(1, SCRIPT_ZILOCKER, message_str(SCRIPT_NEWR1, top_msg + 2), CLICK_2, NEUTRAL_REACTION);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(SCRIPT_NEWR1, top_msg + 3) != "") then begin
            giq_option(1, SCRIPT_ZILOCKER, message_str(SCRIPT_NEWR1, top_msg + 3), CLICK_3, NEUTRAL_REACTION);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(SCRIPT_NEWR1, top_msg + 4) != "") then begin
            giq_option(1, SCRIPT_ZILOCKER, message_str(SCRIPT_NEWR1, top_msg + 4), CLICK_4, NEUTRAL_REACTION);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(SCRIPT_NEWR1, top_msg + 5) != "") then begin
            giq_option(1, SCRIPT_ZILOCKER, message_str(SCRIPT_NEWR1, 151), CLICK_MORE, NEUTRAL_REACTION);
        end
    end
end

procedure CLICK_PREV
begin
    top_msg := top_msg - 5;
    call ChooseFromList();
end

procedure CLICK_0
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + (top_msg % 100));
    call stored_node();
end

procedure CLICK_1
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + ((top_msg + 1) % 100));
    call stored_node();
end

procedure CLICK_2
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + ((top_msg + 2) % 100));
    call stored_node();
end

procedure CLICK_3
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + ((top_msg + 3) % 100));
    call stored_node();
end

procedure CLICK_4
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + ((top_msg + 4) % 100));
    call stored_node();
end

procedure CLICK_MORE
begin
    top_msg := top_msg + 5;
    call ChooseFromList();
end

procedure start
begin
end

procedure map_enter_p_proc
begin
    if (is_loading_game == 0) then begin
        if (0) then begin
            obj_close(self_obj);
        end
        if (0 and 1) then begin
            obj_lock(self_obj);
        end
    end
end

procedure pickup_p_proc
begin
end

procedure use_p_proc
begin
    caught_tamper := 0;
    user_obj := source_obj;
    if (user_obj != 0) then begin
        if (caught_tamper == 0) then begin
            if (1) then begin
                if (new_reno_bishop_men_obj != 0) then begin
                    if (obj_is_visible_flag(new_reno_bishop_men_obj) and ((critter_state(new_reno_bishop_men_obj) bwand 1) == 0)) then begin
                        if (obj_can_see_obj(new_reno_bishop_men_obj, user_obj)) then begin
                            caught_tamper := 1;
                        end
                    end
                end
            end
        end
        if (caught_tamper) then begin
            if (caught_tamper) then begin
                script_overrides;
                if (((local_var(0) bwand 1024) != 0) or 0) then begin
                    attack_setup(new_reno_bishop_men_obj, user_obj);
                end
                else begin
                    float_msg(new_reno_bishop_men_obj, g_mstr(5400), FLOAT_MSG_YELLOW);
                end
                set_local_var(0, local_var(0) bwor 1024);
            end
        end
    end
end

procedure damage_p_proc
begin
    if (obj_is_locked(self_obj)) then begin
        if (target_obj != 0) then begin
            if (weapon_dmg_type(target_obj) == 6) then begin
                if (1) then begin
                    display_msg(message_str(SCRIPT_ZILOCKER, 300));
                    obj_unlock(self_obj);
                end
                else begin
                    display_msg(message_str(SCRIPT_ZILOCKER, 301));
                end
            end
        end
    end
    user_obj := source_obj;
    if (user_obj != 0) then begin
        if (caught_tamper) then begin
            script_overrides;
            if (((local_var(0) bwand 1024) != 0) or 0) then begin
                attack_setup(new_reno_bishop_men_obj, user_obj);
            end
            else begin
                float_msg(new_reno_bishop_men_obj, g_mstr(5400), FLOAT_MSG_YELLOW);
            end
            set_local_var(0, local_var(0) bwor 1024);
        end
    end
end

procedure map_exit_p_proc
begin
    set_local_var(0, local_var(0) bwand (-1 - 1024));
end

procedure map_update_p_proc
begin
    if (0) then begin
        obj_close(self_obj);
    end
    if (0 and 1) then begin
        obj_lock(self_obj);
    end
end

procedure use_obj_on_p_proc
begin
    caught_tamper := 0;
    user_obj := source_obj;
    if (user_obj != 0) then begin
        if (caught_tamper == 0) then begin
            if (1) then begin
                if (new_reno_bishop_men_obj != 0) then begin
                    if (obj_is_visible_flag(new_reno_bishop_men_obj) and ((critter_state(new_reno_bishop_men_obj) bwand 1) == 0)) then begin
                        if (obj_can_see_obj(new_reno_bishop_men_obj, user_obj)) then begin
                            caught_tamper := 1;
                        end
                    end
                end
            end
        end
        if (caught_tamper) then begin
            if (caught_tamper) then begin
                script_overrides;
                if (((local_var(0) bwand 1024) != 0) or 0) then begin
                    attack_setup(new_reno_bishop_men_obj, user_obj);
                end
                else begin
                    float_msg(new_reno_bishop_men_obj, g_mstr(5400), FLOAT_MSG_YELLOW);
                end
                set_local_var(0, local_var(0) bwor 1024);
            end
        end
        else begin
            if (obj_is_locked(self_obj)) then begin
                if (obj_pid(obj_being_used_with) == 84) then begin
                    script_overrides;
                    if (1) then begin
                        if (is_success(roll_vs_skill(user_obj, 9, -20 + 20))) then begin
                            script_overrides;
                            if (user_obj == dude_obj) then begin
                                display_msg(message_str(SCRIPT_ZILOCKER, 100));
                                if (((local_var(0) bwand 512) != 0) == 0) then begin
                                    give_exp_points(25);
                                    display_msg(g_mstr(100) + 25 + g_mstr(101));
                                end
                                set_local_var(0, local_var(0) bwor 512);
                            end
                            else begin
                                if (user_obj != 0) then begin
                                    display_msg(obj_name(user_obj) + message_str(SCRIPT_ZILOCKER, 200));
                                    if (((local_var(0) bwand 512) != 0) == 0) then begin
                                        give_exp_points(25);
                                        display_msg(g_mstr(100) + 25 + g_mstr(101));
                                    end
                                    set_local_var(0, local_var(0) bwor 512);
                                end
                            end
                            debug_msg("unlock_success_msg");
                            obj_unlock(self_obj);
                        end
                        else begin
                            script_overrides;
                            if (user_obj == dude_obj) then begin
                                display_msg(message_str(SCRIPT_ZILOCKER, 101));
                            end
                            else begin
                                if (user_obj != 0) then begin
                                    display_msg(obj_name(user_obj) + message_str(SCRIPT_ZILOCKER, 201));
                                end
                            end
                            debug_msg("unlock_fail_msg");
                        end
                    end
                end
                else begin
                    if (obj_pid(obj_being_used_with) == 410) then begin
                        script_overrides;
                        if (1) then begin
                            if (is_success(roll_vs_skill(user_obj, 9, -20 + 20))) then begin
                                script_overrides;
                                if (user_obj == dude_obj) then begin
                                    display_msg(message_str(SCRIPT_ZILOCKER, 100));
                                    if (((local_var(0) bwand 512) != 0) == 0) then begin
                                        give_exp_points(25);
                                        display_msg(g_mstr(100) + 25 + g_mstr(101));
                                    end
                                    set_local_var(0, local_var(0) bwor 512);
                                end
                                else begin
                                    if (user_obj != 0) then begin
                                        display_msg(obj_name(user_obj) + message_str(SCRIPT_ZILOCKER, 200));
                                        if (((local_var(0) bwand 512) != 0) == 0) then begin
                                            give_exp_points(25);
                                            display_msg(g_mstr(100) + 25 + g_mstr(101));
                                        end
                                        set_local_var(0, local_var(0) bwor 512);
                                    end
                                end
                                debug_msg("unlock_success_msg");
                                obj_unlock(self_obj);
                            end
                            else begin
                                script_overrides;
                                if (user_obj == dude_obj) then begin
                                    display_msg(message_str(SCRIPT_ZILOCKER, 101));
                                end
                                else begin
                                    if (user_obj != 0) then begin
                                        display_msg(obj_name(user_obj) + message_str(SCRIPT_ZILOCKER, 201));
                                    end
                                end
                                debug_msg("unlock_fail_msg");
                            end
                        end
                    end
                    else begin
                        if (obj_pid(obj_being_used_with) == 20) then begin
                            script_overrides;
                            if (is_success(do_check(user_obj, 0, 0))) then begin
                                if (user_obj == dude_obj) then begin
                                    display_msg(message_str(SCRIPT_ZILOCKER, 400));
                                    if (((local_var(0) bwand 512) != 0) == 0) then begin
                                        give_exp_points(25);
                                        display_msg(g_mstr(100) + 25 + g_mstr(101));
                                    end
                                    set_local_var(0, local_var(0) bwor 512);
                                end
                                else begin
                                    if (user_obj != 0) then begin
                                        display_msg(obj_name(user_obj) + message_str(SCRIPT_ZILOCKER, 500));
                                        if (((local_var(0) bwand 512) != 0) == 0) then begin
                                            give_exp_points(25);
                                            display_msg(g_mstr(100) + 25 + g_mstr(101));
                                        end
                                        set_local_var(0, local_var(0) bwor 512);
                                    end
                                end
                                debug_msg("pry_success_msg");
                                obj_unlock(self_obj);
                            end
                            else begin
                                if (user_obj == dude_obj) then begin
                                    display_msg(message_str(SCRIPT_ZILOCKER, 401));
                                end
                                else begin
                                    if (user_obj != 0) then begin
                                        display_msg(obj_name(user_obj) + message_str(SCRIPT_ZILOCKER, 501));
                                    end
                                end
                                debug_msg("pry_fail_msg");
                            end
                        end
                    end
                end
            end
            else begin
                if (obj_pid(obj_being_used_with) == 84) then begin
                    script_overrides;
                    if (1) then begin
                        if (is_success(roll_vs_skill(user_obj, 9, -20 + 40))) then begin
                            script_overrides;
                            if (user_obj == dude_obj) then begin
                                display_msg(message_str(SCRIPT_ZILOCKER, 102));
                                if (((local_var(0) bwand 512) != 0) == 0) then begin
                                    give_exp_points(25);
                                    display_msg(g_mstr(100) + 25 + g_mstr(101));
                                end
                                set_local_var(0, local_var(0) bwor 512);
                            end
                            else begin
                                if (user_obj != 0) then begin
                                    display_msg(obj_name(user_obj) + message_str(SCRIPT_ZILOCKER, 202));
                                    if (((local_var(0) bwand 512) != 0) == 0) then begin
                                        give_exp_points(25);
                                        display_msg(g_mstr(100) + 25 + g_mstr(101));
                                    end
                                    set_local_var(0, local_var(0) bwor 512);
                                end
                            end
                            debug_msg("lock_success_msg");
                            obj_lock(self_obj);
                        end
                        else begin
                            script_overrides;
                            if (user_obj == dude_obj) then begin
                                display_msg(message_str(SCRIPT_ZILOCKER, 103));
                            end
                            else begin
                                if (user_obj != 0) then begin
                                    display_msg(obj_name(user_obj) + message_str(SCRIPT_ZILOCKER, 203));
                                end
                            end
                            debug_msg("lock_fail_msg");
                        end
                    end
                end
                else begin
                    if (obj_pid(obj_being_used_with) == 410) then begin
                        script_overrides;
                        if (1) then begin
                            if (is_success(roll_vs_skill(user_obj, 9, -20 + 40))) then begin
                                script_overrides;
                                if (user_obj == dude_obj) then begin
                                    display_msg(message_str(SCRIPT_ZILOCKER, 102));
                                    if (((local_var(0) bwand 512) != 0) == 0) then begin
                                        give_exp_points(25);
                                        display_msg(g_mstr(100) + 25 + g_mstr(101));
                                    end
                                    set_local_var(0, local_var(0) bwor 512);
                                end
                                else begin
                                    if (user_obj != 0) then begin
                                        display_msg(obj_name(user_obj) + message_str(SCRIPT_ZILOCKER, 202));
                                        if (((local_var(0) bwand 512) != 0) == 0) then begin
                                            give_exp_points(25);
                                            display_msg(g_mstr(100) + 25 + g_mstr(101));
                                        end
                                        set_local_var(0, local_var(0) bwor 512);
                                    end
                                end
                                debug_msg("lock_success_msg");
                                obj_lock(self_obj);
                            end
                            else begin
                                script_overrides;
                                if (user_obj == dude_obj) then begin
                                    display_msg(message_str(SCRIPT_ZILOCKER, 103));
                                end
                                else begin
                                    if (user_obj != 0) then begin
                                        display_msg(obj_name(user_obj) + message_str(SCRIPT_ZILOCKER, 203));
                                    end
                                end
                                debug_msg("lock_fail_msg");
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure look_at_p_proc
begin
end

procedure description_p_proc
begin
end

procedure timed_event_p_proc
begin
end

procedure use_skill_on_p_proc
begin
    caught_tamper := 0;
    user_obj := source_obj;
    if (user_obj != 0) then begin
        if (caught_tamper == 0) then begin
            if (1) then begin
                if (new_reno_bishop_men_obj != 0) then begin
                    if (obj_is_visible_flag(new_reno_bishop_men_obj) and ((critter_state(new_reno_bishop_men_obj) bwand 1) == 0)) then begin
                        if (obj_can_see_obj(new_reno_bishop_men_obj, user_obj)) then begin
                            caught_tamper := 1;
                        end
                    end
                end
            end
        end
        if (caught_tamper) then begin
            if (caught_tamper) then begin
                script_overrides;
                if (((local_var(0) bwand 1024) != 0) or 0) then begin
                    attack_setup(new_reno_bishop_men_obj, user_obj);
                end
                else begin
                    float_msg(new_reno_bishop_men_obj, g_mstr(5400), FLOAT_MSG_YELLOW);
                end
                set_local_var(0, local_var(0) bwor 1024);
            end
        end
        else begin
            if (action_being_used == 9) then begin
                script_overrides;
                if (obj_is_locked(self_obj)) then begin
                    if (1) then begin
                        if (is_success(roll_vs_skill(user_obj, 9, -20))) then begin
                            script_overrides;
                            if (user_obj == dude_obj) then begin
                                display_msg(message_str(SCRIPT_ZILOCKER, 100));
                                if (((local_var(0) bwand 512) != 0) == 0) then begin
                                    give_exp_points(25);
                                    display_msg(g_mstr(100) + 25 + g_mstr(101));
                                end
                                set_local_var(0, local_var(0) bwor 512);
                            end
                            else begin
                                if (user_obj != 0) then begin
                                    display_msg(obj_name(user_obj) + message_str(SCRIPT_ZILOCKER, 200));
                                    if (((local_var(0) bwand 512) != 0) == 0) then begin
                                        give_exp_points(25);
                                        display_msg(g_mstr(100) + 25 + g_mstr(101));
                                    end
                                    set_local_var(0, local_var(0) bwor 512);
                                end
                            end
                            debug_msg("unlock_success_msg");
                            obj_unlock(self_obj);
                        end
                        else begin
                            script_overrides;
                            if (user_obj == dude_obj) then begin
                                display_msg(message_str(SCRIPT_ZILOCKER, 101));
                            end
                            else begin
                                if (user_obj != 0) then begin
                                    display_msg(obj_name(user_obj) + message_str(SCRIPT_ZILOCKER, 201));
                                end
                            end
                            debug_msg("unlock_fail_msg");
                        end
                    end
                end
                else begin
                    if (1) then begin
                        if (is_success(roll_vs_skill(user_obj, 9, -20))) then begin
                            script_overrides;
                            if (user_obj == dude_obj) then begin
                                display_msg(message_str(SCRIPT_ZILOCKER, 102));
                                if (((local_var(0) bwand 512) != 0) == 0) then begin
                                    give_exp_points(25);
                                    display_msg(g_mstr(100) + 25 + g_mstr(101));
                                end
                                set_local_var(0, local_var(0) bwor 512);
                            end
                            else begin
                                if (user_obj != 0) then begin
                                    display_msg(obj_name(user_obj) + message_str(SCRIPT_ZILOCKER, 202));
                                    if (((local_var(0) bwand 512) != 0) == 0) then begin
                                        give_exp_points(25);
                                        display_msg(g_mstr(100) + 25 + g_mstr(101));
                                    end
                                    set_local_var(0, local_var(0) bwor 512);
                                end
                            end
                            debug_msg("lock_success_msg");
                            obj_lock(self_obj);
                        end
                        else begin
                            script_overrides;
                            if (user_obj == dude_obj) then begin
                                display_msg(message_str(SCRIPT_ZILOCKER, 103));
                            end
                            else begin
                                if (user_obj != 0) then begin
                                    display_msg(obj_name(user_obj) + message_str(SCRIPT_ZILOCKER, 203));
                                end
                            end
                            debug_msg("lock_fail_msg");
                        end
                    end
                end
            end
        end
    end
end
