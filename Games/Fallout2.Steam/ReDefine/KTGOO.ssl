variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure spatial_p_proc;
procedure start;
procedure meltem;
procedure pain;

variable my_boots;
variable worn;
variable k;
variable mutate;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure spatial_p_proc
begin
    my_boots := 0;
    worn := 0;
    if (obj_carrying_pid_obj(source_obj, 262)) then begin
        k := random(1, 100);
        if (k < 2) then begin
            my_boots := obj_carrying_pid_obj(source_obj, 262);
            rm_obj_from_inven(source_obj, my_boots);
            destroy_object(my_boots);
            if (source_obj == dude_obj) then begin
                display_mstr(130);
            end
        end
    end
    else begin
        if ((obj_pid(source_obj) == 16777299) or (obj_pid(source_obj) == 16777302) or (obj_pid(source_obj) == 16777296) or (obj_pid(source_obj) == 16777297)) then begin
        end
        else begin
            call pain();
        end
    end
end

procedure start
begin
end

procedure meltem
begin
    k := random(1, 100);
    if (k < 2) then begin
        rm_obj_from_inven(dude_obj, my_boots);
        destroy_object(my_boots);
        display_mstr(130);
    end
end

procedure pain
begin
    if (critter_inven_obj(source_obj, INVEN_TYPE_WORN) != 0) then begin
        worn := obj_pid(critter_inven_obj(source_obj, INVEN_TYPE_WORN));
    end
    if (worn != 3) then begin
        if ((source_obj == dude_obj) and (global_var(GVAR_MUTATE_STAGE) < 1)) then begin
            mutate := global_var(GVAR_MUTATE);
            mutate := mutate + 2;
            set_global_var(GVAR_MUTATE, mutate);
            if (mutate > 29) then begin
                set_global_var(GVAR_MUTATE_WHEN, game_time / (10 * 60 * 60 * 24));
                set_global_var(GVAR_MUTATE_STAGE, 1);
                display_mstr(150);
            end
            else begin
                if (mutate > 14) then begin
                    display_mstr(140);
                end
                else begin
                    display_mstr(110);
                end
            end
        end
        critter_dmg(source_obj, 2, DMG_plasma);
    end
end
