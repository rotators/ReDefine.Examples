procedure start;
procedure combat_p_proc;
procedure critter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;
procedure flee_dude;

variable hostile;
variable initialized;
variable round_counter;
variable PsstTime;


procedure start
begin
    if (not(initialized)) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 2);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_BRAHMIN);
        add_timer_event(self_obj, game_ticks(random(15, 60)), 1);
        add_timer_event(self_obj, game_ticks(random(3, 5)), 1);
        initialized := 1;
    end
    else begin
        if (script_action == combat_proc) then begin
            call combat_p_proc();
        end
        else begin
            if (script_action == critter_proc) then begin
                call critter_p_proc();
            end
            else begin
                if (script_action == destroy_proc) then begin
                    call destroy_p_proc();
                end
                else begin
                    if (script_action == look_at_proc) then begin
                        call look_at_p_proc();
                    end
                    else begin
                        if (script_action == pickup_proc) then begin
                            call pickup_p_proc();
                        end
                        else begin
                            if (script_action == talk_proc) then begin
                                call talk_p_proc();
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure combat_p_proc
begin
    if (fixed_param == 4) then begin
        round_counter := round_counter + 1;
        if (round_counter > 3) then begin
            if ((global_var(GVAR_NEW_RENO_MCGEE_SEED) == 0) and ((CUR_MAP_GSTCAV2) or (CUR_MAP_GSTCAV1))) then begin
                set_global_var(GVAR_NEW_RENO_MCGEE_SEED, 1);
                set_global_var(GVAR_BRAIN_BOT_BRAIN, global_var(GVAR_BRAIN_BOT_BRAIN) - 5);
            end
        end
    end
end

procedure critter_p_proc
begin
    variable LVar0 := 0;
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((global_var(GVAR_NEW_RENO_MCGEE_SEED) == 1) and ((CUR_MAP_GSTCAV2) or (CUR_MAP_GSTCAV1))) then begin
            hostile := 1;
        end
    end
    if (hostile) then begin
        hostile := 0;
        attack(dude_obj);
    end
    else begin
        if (local_var(0)) then begin
            if (tile_distance_objs(self_obj, dude_obj) < 8) then begin
                call flee_dude();
            end
        end
    end
    LVar0 := global_var(GVAR_NEW_RENO_SAD);
    if ((((game_time / 10) - LVar0) >= 10) and (tile_distance_objs(self_obj, dude_obj) <= 4) and (global_var(GVAR_NEW_RENO_MCGEE_SEED) == 0) and ((CUR_MAP_GSTCAV2) or (CUR_MAP_GSTCAV1))) then begin
        float_msg(self_obj, message_str(SCRIPT_VCMSMITH, random(110, 114)), FLOAT_MSG_NORMAL);
        LVar0 := game_time / 10;
        set_global_var(GVAR_NEW_RENO_SAD, LVar0);
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(0, 1);
    end
end

procedure destroy_p_proc
begin
    if ((source_obj == dude_obj) and ((CUR_MAP_GSTCAV2) or (CUR_MAP_GSTCAV1))) then begin
        set_global_var(GVAR_NEW_RENO_MCGEE_SEED, 1);
    end
    if (source_obj == dude_obj) then begin
        if (((global_var(GVAR_GECKO_SKEETER_PART) + global_var(GVAR_GECKO_REQ_FORM)) >= 25) and ((global_var(GVAR_GECKO_REQ_FORM) > (2 * global_var(GVAR_GECKO_SKEETER_PART))) or (global_var(GVAR_SIERRA_LOCKOUT) == 1))) then begin
            set_global_var(GVAR_SIERRA_LOCKOUT, 1);
            set_global_var(GVAR_SIERRA_PASSWORD, 0);
        end
        if (((global_var(GVAR_GECKO_SKEETER_PART) + global_var(GVAR_GECKO_REQ_FORM)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GECKO_REQ_FORM))) or (global_var(GVAR_SIERRA_PASSWORD) == 1))) then begin
            set_global_var(GVAR_SIERRA_PASSWORD, 1);
            set_global_var(GVAR_SIERRA_LOCKOUT, 0);
        end
        set_global_var(GVAR_GECKO_REQ_FORM, global_var(GVAR_GECKO_REQ_FORM) + 1);
        if ((global_var(GVAR_GECKO_REQ_FORM) % 2) == 0) then begin
            set_global_var(GVAR_BRAIN_BOT_BRAIN, global_var(GVAR_BRAIN_BOT_BRAIN) - 1);
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(SCRIPT_ACVILLGR, 100));
end

procedure pickup_p_proc
begin
    hostile := 1;
end

procedure talk_p_proc
begin
    if (local_var(0) or global_var(GVAR_NEW_RENO_MCGEE_SEED)) then begin
        float_msg(self_obj, message_str(SCRIPT_VCMOORE, random(100, 105)), FLOAT_MSG_NORMAL);
    end
    else begin
        if (global_var(GVAR_KARMA_SWORD_OF_DESPAIR) == 2) then begin
            float_msg(self_obj, message_str(SCRIPT_ACVILLGR, random(101, 104)), FLOAT_MSG_NORMAL);
        end
        else begin
            float_msg(self_obj, message_str(SCRIPT_ACVILLGR, random(101, 107)), FLOAT_MSG_NORMAL);
        end
    end
end

procedure timed_event_p_proc
begin
    if (obj_on_screen(self_obj)) then begin
        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(1, 5)), 0);
    end
    add_timer_event(self_obj, game_ticks(random(6, 10)), 1);
end

procedure flee_dude
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    while (LVar1 < 5) do begin
        if (tile_distance(dude_tile, tile_num_in_direction(tile_num(self_obj), LVar1, 3)) > LVar2) then begin
            LVar0 := tile_num_in_direction(tile_num(self_obj), LVar1, 3);
            LVar2 := tile_distance(dude_tile, LVar0);
        end
        LVar1 := LVar1 + 1;
    end
    animate_move_obj_to_tile(self_obj, LVar0, 1);
end
