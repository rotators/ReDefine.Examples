Fallout script decompiler, version 8.4.6 (sfall edition)
Copyright (C) Anchorite (TeamX), 2005-2009
anchorite2001@yandex.ru
Continued by Nirran, phobos2077, Mr.Stalin (2014-2020)
Crossplatformed by alexeevdv (2015)
Loading file Games/Fallout2.Steam/scripts/LORRAINE.int...
  Read startup code
  Read procedures table
  Read namespace
  Read stringspace
  Read tail of startup code
    Check "Jump to 'start' procedure" / "Jump to end of statup code"
    Check "# of argument to 'start' procedure"
    Extract "Export var" section
    Extract "Set exported var values" section
    Extract "Export procedures" section
    Extract "Global variables" section
  Read procedure's bodies
    Procedure: 0
    Procedure: 1
    Procedure: 2
    Procedure: 3
    Procedure: 4
    Procedure: 5
    Procedure: 6
    Procedure: 7
    Procedure: 8
    Procedure: 9
    Procedure: 10
    Procedure: 11
    Procedure: 12
    Procedure: 13
    Procedure: 14
    Procedure: 15
    Procedure: 16
    Procedure: 17
    Procedure: 18
    Procedure: 19
    Procedure: 20
    Procedure: 21
    Procedure: 22
    Procedure: 23
    Procedure: 24
    Procedure: 25
    Procedure: 26
    Procedure: 27
    Procedure: 28
    Procedure: 29
    Procedure: 30
    Procedure: 31
    Procedure: 32
    Procedure: 33
    Procedure: 34
File Games/Fallout2.Steam/scripts/LORRAINE.int loaded successfuly

Decompiling...
  Init definitions
  Processing code
    Intial reducing
    Building execution tree
        Procedure: 0
        Procedure: 1
        Procedure: 2
        Procedure: 3
        Procedure: 4
        Procedure: 5
        Procedure: 6
        Procedure: 7
        Procedure: 8
        Procedure: 9
        Procedure: 10
        Procedure: 11
        Procedure: 12
        Procedure: 13
        Procedure: 14
        Procedure: 15
        Procedure: 16
        Procedure: 17
        Procedure: 18
        Procedure: 19
        Procedure: 20
        Procedure: 21
        Procedure: 22
        Procedure: 23
        Procedure: 24
        Procedure: 25
        Procedure: 26
        Procedure: 27
        Procedure: 28
        Procedure: 29
        Procedure: 30
        Procedure: 31
        Procedure: 32
        Procedure: 33
        Procedure: 34
    Extracting and reducing conditions
    Setting borders of blocks
        Procedure: 0
        Procedure: 1
Error: Conditional expression left in stack

============== Procedures table ==================

======== Procedure 0 ========
Name offset:       0x00000006
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000544
Number of args:    0x00000000  // 0

======== Procedure 1 ========
Name offset:       0x00000018
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000544
Number of args:    0x00000000  // 0

======== Procedure 2 ========
Name offset:       0x00000020
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000006A4
Number of args:    0x00000000  // 0

======== Procedure 3 ========
Name offset:       0x00000030
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000006F0
Number of args:    0x00000000  // 0

======== Procedure 4 ========
Name offset:       0x00000042
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000872
Number of args:    0x00000000  // 0

======== Procedure 5 ========
Name offset:       0x00000054
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000008C6
Number of args:    0x00000000  // 0

======== Procedure 6 ========
Name offset:       0x00000064
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000008EE
Number of args:    0x00000000  // 0

======== Procedure 7 ========
Name offset:       0x00000072
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000976
Number of args:    0x00000000  // 0

======== Procedure 8 ========
Name offset:       0x00000084
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000009E4
Number of args:    0x00000000  // 0

======== Procedure 9 ========
Name offset:       0x0000008E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000A94
Number of args:    0x00000000  // 0

======== Procedure 10 ========
Name offset:       0x00000098
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000B6E
Number of args:    0x00000000  // 0

======== Procedure 11 ========
Name offset:       0x000000A2
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000BC4
Number of args:    0x00000000  // 0

======== Procedure 12 ========
Name offset:       0x000000AC
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000C4C
Number of args:    0x00000000  // 0

======== Procedure 13 ========
Name offset:       0x000000B6
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000C7A
Number of args:    0x00000000  // 0

======== Procedure 14 ========
Name offset:       0x000000C0
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000D22
Number of args:    0x00000000  // 0

======== Procedure 15 ========
Name offset:       0x000000CA
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000D8A
Number of args:    0x00000000  // 0

======== Procedure 16 ========
Name offset:       0x000000D4
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000DFA
Number of args:    0x00000000  // 0

======== Procedure 17 ========
Name offset:       0x000000DE
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000E82
Number of args:    0x00000000  // 0

======== Procedure 18 ========
Name offset:       0x000000E8
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000F2A
Number of args:    0x00000000  // 0

======== Procedure 19 ========
Name offset:       0x000000F2
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000FD2
Number of args:    0x00000000  // 0

======== Procedure 20 ========
Name offset:       0x000000FC
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001000
Number of args:    0x00000000  // 0

======== Procedure 21 ========
Name offset:       0x00000106
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000102E
Number of args:    0x00000000  // 0

======== Procedure 22 ========
Name offset:       0x00000110
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001096
Number of args:    0x00000000  // 0

======== Procedure 23 ========
Name offset:       0x0000011A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000010C4
Number of args:    0x00000000  // 0

======== Procedure 24 ========
Name offset:       0x00000124
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000112C
Number of args:    0x00000000  // 0

======== Procedure 25 ========
Name offset:       0x0000012E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000011EC
Number of args:    0x00000000  // 0

======== Procedure 26 ========
Name offset:       0x00000138
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001254
Number of args:    0x00000000  // 0

======== Procedure 27 ========
Name offset:       0x00000142
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000012DC
Number of args:    0x00000000  // 0

======== Procedure 28 ========
Name offset:       0x0000014C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000013C4
Number of args:    0x00000000  // 0

======== Procedure 29 ========
Name offset:       0x00000156
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001404
Number of args:    0x00000000  // 0

======== Procedure 30 ========
Name offset:       0x00000160
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001444
Number of args:    0x00000000  // 0

======== Procedure 31 ========
Name offset:       0x0000016A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001484
Number of args:    0x00000000  // 0

======== Procedure 32 ========
Name offset:       0x00000174
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000014C4
Number of args:    0x00000000  // 0

======== Procedure 33 ========
Name offset:       0x0000017E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001504
Number of args:    0x00000000  // 0

======== Procedure 34 ========
Name offset:       0x00000188
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000155E
Number of args:    0x00000000  // 0



============== Namespace ==================
0x00000006: ".............."
0x00000018: "start"
0x00000020: "damage_p_proc"
0x00000030: "destroy_p_proc"
0x00000042: "look_at_p_proc"
0x00000054: "pickup_p_proc"
0x00000064: "talk_p_proc"
0x00000072: "critter_p_proc"
0x00000084: "Lorri01"
0x0000008E: "Lorri02"
0x00000098: "Lorri03"
0x000000A2: "Lorri04"
0x000000AC: "Lorri05"
0x000000B6: "Lorri06"
0x000000C0: "Lorri07"
0x000000CA: "Lorri08"
0x000000D4: "Lorri09"
0x000000DE: "Lorri10"
0x000000E8: "Lorri11"
0x000000F2: "Lorri12"
0x000000FC: "Lorri13"
0x00000106: "Lorri14"
0x00000110: "Lorri15"
0x0000011A: "Lorri16"
0x00000124: "Lorri17"
0x0000012E: "Lorri18"
0x00000138: "Lorri19"
0x00000142: "Lorri20"
0x0000014C: "Lorri21"
0x00000156: "Lorri22"
0x00000160: "Lorri23"
0x0000016A: "Lorri24"
0x00000174: "Lorri25"
0x0000017E: "Lorri26"
0x00000188: "Lorri27"
0x00000192: "hostile"
0x0000019C: "initialized"
==================
37 item(s)



============== Stringspace ==================
Empty


============== Global variables values ==================
0: O_INTOP(0x00000000)   // 0 (0)
1: O_INTOP(0x00000000)   // 0 (0)


============== Exported variables ==================
Not found


============== Procedures ==================

0: .............. (0x00000544)
===============================

1: start (0x00000544)
===============================
0x00000544: 0x802B            - O_PUSH_BASE
0x00000546: 0xC001 0x000005cc - O_INTOP(0x000005cc)   // 1484 (1484)
0x0000054C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000552: 0x8012            - O_FETCH_GLOBAL
0x00000554: 0x8045            - O_NOT
0x00000556: 0x802F            - O_IF
0x00000558: 0xC001 0x000005a0 - O_INTOP(0x000005a0)   // 1440 (1440)
0x0000055E: 0xC001 0x00000265 - O_INTOP(0x00000265)   // 613 (613)
0x00000564: 0x80C5            - O_GLOBAL_VAR
0x00000566: 0xC001 0x0000238f - O_INTOP(0x0000238f)   // 9103 (9103)
0x0000056C: 0x8033            - O_EQUAL
0x0000056E: 0xC001 0x00000265 - O_INTOP(0x00000265)   // 613 (613)
0x00000574: 0x80C5            - O_GLOBAL_VAR
0x00000576: 0xC001 0x0000238e - O_INTOP(0x0000238e)   // 9102 (9102)
0x0000057C: 0x8033            - O_EQUAL
0x0000057E: 0x803F            - O_OR
0x00000580: 0x802F            - O_IF
0x00000582: 0x80BC            - O_SELF_OBJ
0x00000584: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000058A: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000590: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000596: 0x8102            - O_CRITTER_ADD_TRAIT
0x00000598: 0xC001 0x000005b6 - O_INTOP(0x000005b6)   // 1462 (1462)
0x0000059E: 0x8004            - O_JMP
0x000005A0: 0x80BC            - O_SELF_OBJ
0x000005A2: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000005A8: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x000005AE: 0xC001 0x00000031 - O_INTOP(0x00000031)   // 49 (49)
0x000005B4: 0x8102            - O_CRITTER_ADD_TRAIT
0x000005B6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000005BC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000005C2: 0x8013            - O_STORE_GLOBAL
0x000005C4: 0xC001 0x0000068c - O_INTOP(0x0000068c)   // 1676 (1676)
0x000005CA: 0x8004            - O_JMP
0x000005CC: 0xC001 0x000005fe - O_INTOP(0x000005fe)   // 1534 (1534)
0x000005D2: 0x80C7            - O_SCRIPT_ACTION
0x000005D4: 0xC001 0x00000012 - O_INTOP(0x00000012)   // 18 (18)
0x000005DA: 0x8033            - O_EQUAL
0x000005DC: 0x802F            - O_IF
0x000005DE: 0xC001 0x000005f4 - O_INTOP(0x000005f4)   // 1524 (1524)
0x000005E4: 0x800D            - O_D_TO_A
0x000005E6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000005EC: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000005F2: 0x8005            - O_CALL
0x000005F4: 0x801A            - O_POP
0x000005F6: 0xC001 0x0000068c - O_INTOP(0x0000068c)   // 1676 (1676)
0x000005FC: 0x8004            - O_JMP
0x000005FE: 0xC001 0x00000630 - O_INTOP(0x00000630)   // 1584 (1584)
0x00000604: 0x80C7            - O_SCRIPT_ACTION
0x00000606: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x0000060C: 0x8033            - O_EQUAL
0x0000060E: 0x802F            - O_IF
0x00000610: 0xC001 0x00000626 - O_INTOP(0x00000626)   // 1574 (1574)
0x00000616: 0x800D            - O_D_TO_A
0x00000618: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000061E: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000624: 0x8005            - O_CALL
0x00000626: 0x801A            - O_POP
0x00000628: 0xC001 0x0000068c - O_INTOP(0x0000068c)   // 1676 (1676)
0x0000062E: 0x8004            - O_JMP
0x00000630: 0xC001 0x00000662 - O_INTOP(0x00000662)   // 1634 (1634)
0x00000636: 0x80C7            - O_SCRIPT_ACTION
0x00000638: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000063E: 0x8033            - O_EQUAL
0x00000640: 0x802F            - O_IF
0x00000642: 0xC001 0x00000658 - O_INTOP(0x00000658)   // 1624 (1624)
0x00000648: 0x800D            - O_D_TO_A
0x0000064A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000650: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000656: 0x8005            - O_CALL
0x00000658: 0x801A            - O_POP
0x0000065A: 0xC001 0x0000068c - O_INTOP(0x0000068c)   // 1676 (1676)
0x00000660: 0x8004            - O_JMP
0x00000662: 0xC001 0x0000068c - O_INTOP(0x0000068c)   // 1676 (1676)
0x00000668: 0x80C7            - O_SCRIPT_ACTION
0x0000066A: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00000670: 0x8033            - O_EQUAL
0x00000672: 0x802F            - O_IF
0x00000674: 0xC001 0x0000068a - O_INTOP(0x0000068a)   // 1674 (1674)
0x0000067A: 0x800D            - O_D_TO_A
0x0000067C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000682: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000688: 0x8005            - O_CALL
0x0000068A: 0x801A            - O_POP
0x0000068C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000692: 0x800D            - O_D_TO_A
0x00000694: 0x8019            - O_SWAPA
0x00000696: 0x802A            - O_POP_TO_BASE
0x00000698: 0x8029            - O_POP_BASE
0x0000069A: 0x800C            - O_A_TO_D
0x0000069C: 0x801C            - O_POP_RETURN
0x0000069E: 0x802A            - O_POP_TO_BASE
0x000006A0: 0x8029            - O_POP_BASE
0x000006A2: 0x801C            - O_POP_RETURN

2: damage_p_proc (0x000006a4)
===============================
0x000006A4: 0x802B            - O_PUSH_BASE
0x000006A6: 0xC001 0x000006d8 - O_INTOP(0x000006d8)   // 1752 (1752)
0x000006AC: 0x80BD            - O_SOURCE_OBJ
0x000006AE: 0x80BF            - O_DUDE_OBJ
0x000006B0: 0x8033            - O_EQUAL
0x000006B2: 0x802F            - O_IF
0x000006B4: 0xC001 0x000000fb - O_INTOP(0x000000fb)   // 251 (251)
0x000006BA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000006C0: 0x80C6            - O_SET_GLOBAL_VAR
0x000006C2: 0x80BC            - O_SELF_OBJ
0x000006C4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000006CA: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x000006D0: 0xC001 0x00000031 - O_INTOP(0x00000031)   // 49 (49)
0x000006D6: 0x8102            - O_CRITTER_ADD_TRAIT
0x000006D8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000006DE: 0x800D            - O_D_TO_A
0x000006E0: 0x8019            - O_SWAPA
0x000006E2: 0x802A            - O_POP_TO_BASE
0x000006E4: 0x8029            - O_POP_BASE
0x000006E6: 0x800C            - O_A_TO_D
0x000006E8: 0x801C            - O_POP_RETURN
0x000006EA: 0x802A            - O_POP_TO_BASE
0x000006EC: 0x8029            - O_POP_BASE
0x000006EE: 0x801C            - O_POP_RETURN

3: destroy_p_proc (0x000006f0)
===============================
0x000006F0: 0x802B            - O_PUSH_BASE
0x000006F2: 0xC001 0x0000085a - O_INTOP(0x0000085a)   // 2138 (2138)
0x000006F8: 0x80BD            - O_SOURCE_OBJ
0x000006FA: 0x80BF            - O_DUDE_OBJ
0x000006FC: 0x8033            - O_EQUAL
0x000006FE: 0x802F            - O_IF
0x00000700: 0xC001 0x000000fb - O_INTOP(0x000000fb)   // 251 (251)
0x00000706: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000070C: 0x80C6            - O_SET_GLOBAL_VAR
0x0000070E: 0xC001 0x00000844 - O_INTOP(0x00000844)   // 2116 (2116)
0x00000714: 0x80BD            - O_SOURCE_OBJ
0x00000716: 0x80BF            - O_DUDE_OBJ
0x00000718: 0x8033            - O_EQUAL
0x0000071A: 0x802F            - O_IF
0x0000071C: 0xC001 0x00000788 - O_INTOP(0x00000788)   // 1928 (1928)
0x00000722: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00000728: 0x80C5            - O_GLOBAL_VAR
0x0000072A: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000730: 0x80C5            - O_GLOBAL_VAR
0x00000732: 0x8039            - O_ADD
0x00000734: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x0000073A: 0x8036            - O_GREATER_EQUAL
0x0000073C: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000742: 0x80C5            - O_GLOBAL_VAR
0x00000744: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x0000074A: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00000750: 0x80C5            - O_GLOBAL_VAR
0x00000752: 0x803B            - O_MUL
0x00000754: 0x8038            - O_GREATER
0x00000756: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x0000075C: 0x80C5            - O_GLOBAL_VAR
0x0000075E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000764: 0x8033            - O_EQUAL
0x00000766: 0x803F            - O_OR
0x00000768: 0x803E            - O_AND
0x0000076A: 0x802F            - O_IF
0x0000076C: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x00000772: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000778: 0x80C6            - O_SET_GLOBAL_VAR
0x0000077A: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x00000780: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000786: 0x80C6            - O_SET_GLOBAL_VAR
0x00000788: 0xC001 0x000007f4 - O_INTOP(0x000007f4)   // 2036 (2036)
0x0000078E: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00000794: 0x80C5            - O_GLOBAL_VAR
0x00000796: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x0000079C: 0x80C5            - O_GLOBAL_VAR
0x0000079E: 0x8039            - O_ADD
0x000007A0: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x000007A6: 0x8036            - O_GREATER_EQUAL
0x000007A8: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x000007AE: 0x80C5            - O_GLOBAL_VAR
0x000007B0: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000007B6: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x000007BC: 0x80C5            - O_GLOBAL_VAR
0x000007BE: 0x803B            - O_MUL
0x000007C0: 0x8038            - O_GREATER
0x000007C2: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x000007C8: 0x80C5            - O_GLOBAL_VAR
0x000007CA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000007D0: 0x8033            - O_EQUAL
0x000007D2: 0x803F            - O_OR
0x000007D4: 0x803E            - O_AND
0x000007D6: 0x802F            - O_IF
0x000007D8: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x000007DE: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000007E4: 0x80C6            - O_SET_GLOBAL_VAR
0x000007E6: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x000007EC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000007F2: 0x80C6            - O_SET_GLOBAL_VAR
0x000007F4: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x000007FA: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000800: 0x80C5            - O_GLOBAL_VAR
0x00000802: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000808: 0x8039            - O_ADD
0x0000080A: 0x80C6            - O_SET_GLOBAL_VAR
0x0000080C: 0xC001 0x00000844 - O_INTOP(0x00000844)   // 2116 (2116)
0x00000812: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000818: 0x80C5            - O_GLOBAL_VAR
0x0000081A: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000820: 0x803D            - O_MOD
0x00000822: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000828: 0x8033            - O_EQUAL
0x0000082A: 0x802F            - O_IF
0x0000082C: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00000832: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00000838: 0x80C5            - O_GLOBAL_VAR
0x0000083A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000840: 0x803A            - O_SUB
0x00000842: 0x80C6            - O_SET_GLOBAL_VAR
0x00000844: 0x80BC            - O_SELF_OBJ
0x00000846: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000084C: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000852: 0xC001 0x00000031 - O_INTOP(0x00000031)   // 49 (49)
0x00000858: 0x8102            - O_CRITTER_ADD_TRAIT
0x0000085A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000860: 0x800D            - O_D_TO_A
0x00000862: 0x8019            - O_SWAPA
0x00000864: 0x802A            - O_POP_TO_BASE
0x00000866: 0x8029            - O_POP_BASE
0x00000868: 0x800C            - O_A_TO_D
0x0000086A: 0x801C            - O_POP_RETURN
0x0000086C: 0x802A            - O_POP_TO_BASE
0x0000086E: 0x8029            - O_POP_BASE
0x00000870: 0x801C            - O_POP_RETURN

4: look_at_p_proc (0x00000872)
===============================
0x00000872: 0x802B            - O_PUSH_BASE
0x00000874: 0x80B9            - O_SCRIPT_OVERRIDES
0x00000876: 0xC001 0x0000089e - O_INTOP(0x0000089e)   // 2206 (2206)
0x0000087C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000882: 0x80C1            - O_LOCAL_VAR
0x00000884: 0x802F            - O_IF
0x00000886: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x0000088C: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x00000892: 0x8105            - O_MESSAGE_STR
0x00000894: 0x80B8            - O_DISPLAY_MSG
0x00000896: 0xC001 0x000008ae - O_INTOP(0x000008ae)   // 2222 (2222)
0x0000089C: 0x8004            - O_JMP
0x0000089E: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x000008A4: 0xC001 0x00000065 - O_INTOP(0x00000065)   // 101 (101)
0x000008AA: 0x8105            - O_MESSAGE_STR
0x000008AC: 0x80B8            - O_DISPLAY_MSG
0x000008AE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000008B4: 0x800D            - O_D_TO_A
0x000008B6: 0x8019            - O_SWAPA
0x000008B8: 0x802A            - O_POP_TO_BASE
0x000008BA: 0x8029            - O_POP_BASE
0x000008BC: 0x800C            - O_A_TO_D
0x000008BE: 0x801C            - O_POP_RETURN
0x000008C0: 0x802A            - O_POP_TO_BASE
0x000008C2: 0x8029            - O_POP_BASE
0x000008C4: 0x801C            - O_POP_RETURN

5: pickup_p_proc (0x000008c6)
===============================
0x000008C6: 0x802B            - O_PUSH_BASE
0x000008C8: 0xC001 0x000000fb - O_INTOP(0x000000fb)   // 251 (251)
0x000008CE: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000008D4: 0x80C6            - O_SET_GLOBAL_VAR
0x000008D6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000008DC: 0x800D            - O_D_TO_A
0x000008DE: 0x8019            - O_SWAPA
0x000008E0: 0x802A            - O_POP_TO_BASE
0x000008E2: 0x8029            - O_POP_BASE
0x000008E4: 0x800C            - O_A_TO_D
0x000008E6: 0x801C            - O_POP_RETURN
0x000008E8: 0x802A            - O_POP_TO_BASE
0x000008EA: 0x8029            - O_POP_BASE
0x000008EC: 0x801C            - O_POP_RETURN

6: talk_p_proc (0x000008ee)
===============================
0x000008EE: 0x802B            - O_PUSH_BASE
0x000008F0: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x000008F6: 0x80BC            - O_SELF_OBJ
0x000008F8: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000008FE: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000904: 0x8046            - O_NEGATE
0x00000906: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000090C: 0x8046            - O_NEGATE
0x0000090E: 0x80DE            - O_START_GDIALOG
0x00000910: 0x811C            - O_GSAY_START
0x00000912: 0xC001 0x00000942 - O_INTOP(0x00000942)   // 2370 (2370)
0x00000918: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000091E: 0x80C1            - O_LOCAL_VAR
0x00000920: 0x802F            - O_IF
0x00000922: 0xC001 0x00000938 - O_INTOP(0x00000938)   // 2360 (2360)
0x00000928: 0x800D            - O_D_TO_A
0x0000092A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000930: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00000936: 0x8005            - O_CALL
0x00000938: 0x801A            - O_POP
0x0000093A: 0xC001 0x0000095a - O_INTOP(0x0000095a)   // 2394 (2394)
0x00000940: 0x8004            - O_JMP
0x00000942: 0xC001 0x00000958 - O_INTOP(0x00000958)   // 2392 (2392)
0x00000948: 0x800D            - O_D_TO_A
0x0000094A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000950: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x00000956: 0x8005            - O_CALL
0x00000958: 0x801A            - O_POP
0x0000095A: 0x811D            - O_GSAY_END
0x0000095C: 0x80DF            - O_END_DIALOGUE
0x0000095E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000964: 0x800D            - O_D_TO_A
0x00000966: 0x8019            - O_SWAPA
0x00000968: 0x802A            - O_POP_TO_BASE
0x0000096A: 0x8029            - O_POP_BASE
0x0000096C: 0x800C            - O_A_TO_D
0x0000096E: 0x801C            - O_POP_RETURN
0x00000970: 0x802A            - O_POP_TO_BASE
0x00000972: 0x8029            - O_POP_BASE
0x00000974: 0x801C            - O_POP_RETURN

7: critter_p_proc (0x00000976)
===============================
0x00000976: 0x802B            - O_PUSH_BASE
0x00000978: 0xC001 0x000009cc - O_INTOP(0x000009cc)   // 2508 (2508)
0x0000097E: 0x80BC            - O_SELF_OBJ
0x00000980: 0x80BF            - O_DUDE_OBJ
0x00000982: 0x80DC            - O_OBJ_CAN_SEE_OBJ
0x00000984: 0x802F            - O_IF
0x00000986: 0xC001 0x000009cc - O_INTOP(0x000009cc)   // 2508 (2508)
0x0000098C: 0xC001 0x000000fb - O_INTOP(0x000000fb)   // 251 (251)
0x00000992: 0x80C5            - O_GLOBAL_VAR
0x00000994: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000099A: 0x8033            - O_EQUAL
0x0000099C: 0x802F            - O_IF
0x0000099E: 0x80BF            - O_DUDE_OBJ
0x000009A0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000009A6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000009AC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000009B2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000009B8: 0xC001 0x00007530 - O_INTOP(0x00007530)   // 30000 (30000)
0x000009BE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000009C4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000009CA: 0x80D0            - O_ATTACK_COMPLEX
0x000009CC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000009D2: 0x800D            - O_D_TO_A
0x000009D4: 0x8019            - O_SWAPA
0x000009D6: 0x802A            - O_POP_TO_BASE
0x000009D8: 0x8029            - O_POP_BASE
0x000009DA: 0x800C            - O_A_TO_D
0x000009DC: 0x801C            - O_POP_RETURN
0x000009DE: 0x802A            - O_POP_TO_BASE
0x000009E0: 0x8029            - O_POP_BASE
0x000009E2: 0x801C            - O_POP_RETURN

8: Lorri01 (0x000009e4)
===============================
0x000009E4: 0x802B            - O_PUSH_BASE
0x000009E6: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x000009EC: 0xC001 0x00000066 - O_INTOP(0x00000066)   // 102 (102)
0x000009F2: 0x811E            - O_GSAY_REPLY
0x000009F4: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000009FA: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000A00: 0xC001 0x00000067 - O_INTOP(0x00000067)   // 103 (103)
0x00000A06: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x00000A0C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000A12: 0x8121            - O_GIQ_OPTION
0x00000A14: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000A1A: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000A20: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000A26: 0xC001 0x00000068 - O_INTOP(0x00000068)   // 104 (104)
0x00000A2C: 0x8105            - O_MESSAGE_STR
0x00000A2E: 0x80BF            - O_DUDE_OBJ
0x00000A30: 0x8100            - O_OBJ_PID
0x00000A32: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000A38: 0x8104            - O_PROTO_DATA
0x00000A3A: 0x8039            - O_ADD
0x00000A3C: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000A42: 0xC001 0x00000069 - O_INTOP(0x00000069)   // 105 (105)
0x00000A48: 0x8105            - O_MESSAGE_STR
0x00000A4A: 0x8039            - O_ADD
0x00000A4C: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00000A52: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000A58: 0x8121            - O_GIQ_OPTION
0x00000A5A: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000A60: 0x8046            - O_NEGATE
0x00000A62: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000A68: 0xC001 0x0000006a - O_INTOP(0x0000006a)   // 106 (106)
0x00000A6E: 0xC001 0x00000016 - O_INTOP(0x00000016)   // 22 (22)
0x00000A74: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000A7A: 0x8121            - O_GIQ_OPTION
0x00000A7C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A82: 0x800D            - O_D_TO_A
0x00000A84: 0x8019            - O_SWAPA
0x00000A86: 0x802A            - O_POP_TO_BASE
0x00000A88: 0x8029            - O_POP_BASE
0x00000A8A: 0x800C            - O_A_TO_D
0x00000A8C: 0x801C            - O_POP_RETURN
0x00000A8E: 0x802A            - O_POP_TO_BASE
0x00000A90: 0x8029            - O_POP_BASE
0x00000A92: 0x801C            - O_POP_RETURN

9: Lorri02 (0x00000a94)
===============================
0x00000A94: 0x802B            - O_PUSH_BASE
0x00000A96: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000A9C: 0xC001 0x0000006b - O_INTOP(0x0000006b)   // 107 (107)
0x00000AA2: 0x811E            - O_GSAY_REPLY
0x00000AA4: 0xC001 0x00000ad6 - O_INTOP(0x00000ad6)   // 2774 (2774)
0x00000AAA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000AB0: 0x80C1            - O_LOCAL_VAR
0x00000AB2: 0x8045            - O_NOT
0x00000AB4: 0x802F            - O_IF
0x00000AB6: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000ABC: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000AC2: 0xC001 0x0000006c - O_INTOP(0x0000006c)   // 108 (108)
0x00000AC8: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00000ACE: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000AD4: 0x8121            - O_GIQ_OPTION
0x00000AD6: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000ADC: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000AE2: 0xC001 0x0000006d - O_INTOP(0x0000006d)   // 109 (109)
0x00000AE8: 0xC001 0x00000017 - O_INTOP(0x00000017)   // 23 (23)
0x00000AEE: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000AF4: 0x8121            - O_GIQ_OPTION
0x00000AF6: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000AFC: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000B02: 0xC001 0x0000006e - O_INTOP(0x0000006e)   // 110 (110)
0x00000B08: 0xC001 0x0000001b - O_INTOP(0x0000001b)   // 27 (27)
0x00000B0E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000B14: 0x8121            - O_GIQ_OPTION
0x00000B16: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000B1C: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000B22: 0xC001 0x0000006f - O_INTOP(0x0000006f)   // 111 (111)
0x00000B28: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00000B2E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000B34: 0x8121            - O_GIQ_OPTION
0x00000B36: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000B3C: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000B42: 0xC001 0x00000070 - O_INTOP(0x00000070)   // 112 (112)
0x00000B48: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00000B4E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000B54: 0x8121            - O_GIQ_OPTION
0x00000B56: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000B5C: 0x800D            - O_D_TO_A
0x00000B5E: 0x8019            - O_SWAPA
0x00000B60: 0x802A            - O_POP_TO_BASE
0x00000B62: 0x8029            - O_POP_BASE
0x00000B64: 0x800C            - O_A_TO_D
0x00000B66: 0x801C            - O_POP_RETURN
0x00000B68: 0x802A            - O_POP_TO_BASE
0x00000B6A: 0x8029            - O_POP_BASE
0x00000B6C: 0x801C            - O_POP_RETURN

10: Lorri03 (0x00000b6e)
===============================
0x00000B6E: 0x802B            - O_PUSH_BASE
0x00000B70: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000B76: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000B7C: 0x80C2            - O_SET_LOCAL_VAR
0x00000B7E: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000B84: 0xC001 0x00000071 - O_INTOP(0x00000071)   // 113 (113)
0x00000B8A: 0x811E            - O_GSAY_REPLY
0x00000B8C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000B92: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000B98: 0xC001 0x00000072 - O_INTOP(0x00000072)   // 114 (114)
0x00000B9E: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x00000BA4: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000BAA: 0x8121            - O_GIQ_OPTION
0x00000BAC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000BB2: 0x800D            - O_D_TO_A
0x00000BB4: 0x8019            - O_SWAPA
0x00000BB6: 0x802A            - O_POP_TO_BASE
0x00000BB8: 0x8029            - O_POP_BASE
0x00000BBA: 0x800C            - O_A_TO_D
0x00000BBC: 0x801C            - O_POP_RETURN
0x00000BBE: 0x802A            - O_POP_TO_BASE
0x00000BC0: 0x8029            - O_POP_BASE
0x00000BC2: 0x801C            - O_POP_RETURN

11: Lorri04 (0x00000bc4)
===============================
0x00000BC4: 0x802B            - O_PUSH_BASE
0x00000BC6: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000BCC: 0xC001 0x00000073 - O_INTOP(0x00000073)   // 115 (115)
0x00000BD2: 0x811E            - O_GSAY_REPLY
0x00000BD4: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000BDA: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000BE0: 0xC001 0x00000074 - O_INTOP(0x00000074)   // 116 (116)
0x00000BE6: 0xC001 0x0000000d - O_INTOP(0x0000000d)   // 13 (13)
0x00000BEC: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000BF2: 0x8121            - O_GIQ_OPTION
0x00000BF4: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000BFA: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000C00: 0xC001 0x00000075 - O_INTOP(0x00000075)   // 117 (117)
0x00000C06: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x00000C0C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000C12: 0x8121            - O_GIQ_OPTION
0x00000C14: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000C1A: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000C20: 0xC001 0x00000076 - O_INTOP(0x00000076)   // 118 (118)
0x00000C26: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x00000C2C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000C32: 0x8121            - O_GIQ_OPTION
0x00000C34: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000C3A: 0x800D            - O_D_TO_A
0x00000C3C: 0x8019            - O_SWAPA
0x00000C3E: 0x802A            - O_POP_TO_BASE
0x00000C40: 0x8029            - O_POP_BASE
0x00000C42: 0x800C            - O_A_TO_D
0x00000C44: 0x801C            - O_POP_RETURN
0x00000C46: 0x802A            - O_POP_TO_BASE
0x00000C48: 0x8029            - O_POP_BASE
0x00000C4A: 0x801C            - O_POP_RETURN

12: Lorri05 (0x00000c4c)
===============================
0x00000C4C: 0x802B            - O_PUSH_BASE
0x00000C4E: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000C54: 0xC001 0x00000077 - O_INTOP(0x00000077)   // 119 (119)
0x00000C5A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000C60: 0x8120            - O_GSAY_MESSAGE
0x00000C62: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000C68: 0x800D            - O_D_TO_A
0x00000C6A: 0x8019            - O_SWAPA
0x00000C6C: 0x802A            - O_POP_TO_BASE
0x00000C6E: 0x8029            - O_POP_BASE
0x00000C70: 0x800C            - O_A_TO_D
0x00000C72: 0x801C            - O_POP_RETURN
0x00000C74: 0x802A            - O_POP_TO_BASE
0x00000C76: 0x8029            - O_POP_BASE
0x00000C78: 0x801C            - O_POP_RETURN

13: Lorri06 (0x00000c7a)
===============================
0x00000C7A: 0x802B            - O_PUSH_BASE
0x00000C7C: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000C82: 0xC001 0x00000078 - O_INTOP(0x00000078)   // 120 (120)
0x00000C88: 0x811E            - O_GSAY_REPLY
0x00000C8A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000C90: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000C96: 0xC001 0x00000079 - O_INTOP(0x00000079)   // 121 (121)
0x00000C9C: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x00000CA2: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000CA8: 0x8121            - O_GIQ_OPTION
0x00000CAA: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000CB0: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000CB6: 0xC001 0x0000007a - O_INTOP(0x0000007a)   // 122 (122)
0x00000CBC: 0xC001 0x00000011 - O_INTOP(0x00000011)   // 17 (17)
0x00000CC2: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000CC8: 0x8121            - O_GIQ_OPTION
0x00000CCA: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000CD0: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000CD6: 0xC001 0x0000007b - O_INTOP(0x0000007b)   // 123 (123)
0x00000CDC: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x00000CE2: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000CE8: 0x8121            - O_GIQ_OPTION
0x00000CEA: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000CF0: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000CF6: 0xC001 0x0000007c - O_INTOP(0x0000007c)   // 124 (124)
0x00000CFC: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00000D02: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000D08: 0x8121            - O_GIQ_OPTION
0x00000D0A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D10: 0x800D            - O_D_TO_A
0x00000D12: 0x8019            - O_SWAPA
0x00000D14: 0x802A            - O_POP_TO_BASE
0x00000D16: 0x8029            - O_POP_BASE
0x00000D18: 0x800C            - O_A_TO_D
0x00000D1A: 0x801C            - O_POP_RETURN
0x00000D1C: 0x802A            - O_POP_TO_BASE
0x00000D1E: 0x8029            - O_POP_BASE
0x00000D20: 0x801C            - O_POP_RETURN

14: Lorri07 (0x00000d22)
===============================
0x00000D22: 0x802B            - O_PUSH_BASE
0x00000D24: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000D2A: 0xC001 0x0000007d - O_INTOP(0x0000007d)   // 125 (125)
0x00000D30: 0x811E            - O_GSAY_REPLY
0x00000D32: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000D38: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000D3E: 0xC001 0x0000007e - O_INTOP(0x0000007e)   // 126 (126)
0x00000D44: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x00000D4A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000D50: 0x8121            - O_GIQ_OPTION
0x00000D52: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000D58: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000D5E: 0xC001 0x0000007f - O_INTOP(0x0000007f)   // 127 (127)
0x00000D64: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00000D6A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000D70: 0x8121            - O_GIQ_OPTION
0x00000D72: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D78: 0x800D            - O_D_TO_A
0x00000D7A: 0x8019            - O_SWAPA
0x00000D7C: 0x802A            - O_POP_TO_BASE
0x00000D7E: 0x8029            - O_POP_BASE
0x00000D80: 0x800C            - O_A_TO_D
0x00000D82: 0x801C            - O_POP_RETURN
0x00000D84: 0x802A            - O_POP_TO_BASE
0x00000D86: 0x8029            - O_POP_BASE
0x00000D88: 0x801C            - O_POP_RETURN

15: Lorri08 (0x00000d8a)
===============================
0x00000D8A: 0x802B            - O_PUSH_BASE
0x00000D8C: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000D92: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000D98: 0xC001 0x00000080 - O_INTOP(0x00000080)   // 128 (128)
0x00000D9E: 0x8105            - O_MESSAGE_STR
0x00000DA0: 0x811E            - O_GSAY_REPLY
0x00000DA2: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000DA8: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000DAE: 0xC001 0x00000083 - O_INTOP(0x00000083)   // 131 (131)
0x00000DB4: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x00000DBA: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000DC0: 0x8121            - O_GIQ_OPTION
0x00000DC2: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000DC8: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000DCE: 0xC001 0x00000084 - O_INTOP(0x00000084)   // 132 (132)
0x00000DD4: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00000DDA: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000DE0: 0x8121            - O_GIQ_OPTION
0x00000DE2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000DE8: 0x800D            - O_D_TO_A
0x00000DEA: 0x8019            - O_SWAPA
0x00000DEC: 0x802A            - O_POP_TO_BASE
0x00000DEE: 0x8029            - O_POP_BASE
0x00000DF0: 0x800C            - O_A_TO_D
0x00000DF2: 0x801C            - O_POP_RETURN
0x00000DF4: 0x802A            - O_POP_TO_BASE
0x00000DF6: 0x8029            - O_POP_BASE
0x00000DF8: 0x801C            - O_POP_RETURN

16: Lorri09 (0x00000dfa)
===============================
0x00000DFA: 0x802B            - O_PUSH_BASE
0x00000DFC: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000E02: 0xC001 0x00000085 - O_INTOP(0x00000085)   // 133 (133)
0x00000E08: 0x811E            - O_GSAY_REPLY
0x00000E0A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000E10: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000E16: 0xC001 0x00000086 - O_INTOP(0x00000086)   // 134 (134)
0x00000E1C: 0xC001 0x00000013 - O_INTOP(0x00000013)   // 19 (19)
0x00000E22: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000E28: 0x8121            - O_GIQ_OPTION
0x00000E2A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000E30: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000E36: 0xC001 0x00000087 - O_INTOP(0x00000087)   // 135 (135)
0x00000E3C: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x00000E42: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000E48: 0x8121            - O_GIQ_OPTION
0x00000E4A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000E50: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000E56: 0xC001 0x00000088 - O_INTOP(0x00000088)   // 136 (136)
0x00000E5C: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00000E62: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000E68: 0x8121            - O_GIQ_OPTION
0x00000E6A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E70: 0x800D            - O_D_TO_A
0x00000E72: 0x8019            - O_SWAPA
0x00000E74: 0x802A            - O_POP_TO_BASE
0x00000E76: 0x8029            - O_POP_BASE
0x00000E78: 0x800C            - O_A_TO_D
0x00000E7A: 0x801C            - O_POP_RETURN
0x00000E7C: 0x802A            - O_POP_TO_BASE
0x00000E7E: 0x8029            - O_POP_BASE
0x00000E80: 0x801C            - O_POP_RETURN

17: Lorri10 (0x00000e82)
===============================
0x00000E82: 0x802B            - O_PUSH_BASE
0x00000E84: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000E8A: 0xC001 0x00000089 - O_INTOP(0x00000089)   // 137 (137)
0x00000E90: 0x811E            - O_GSAY_REPLY
0x00000E92: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000E98: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000E9E: 0xC001 0x0000008a - O_INTOP(0x0000008a)   // 138 (138)
0x00000EA4: 0xC001 0x00000012 - O_INTOP(0x00000012)   // 18 (18)
0x00000EAA: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000EB0: 0x8121            - O_GIQ_OPTION
0x00000EB2: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000EB8: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000EBE: 0xC001 0x0000008b - O_INTOP(0x0000008b)   // 139 (139)
0x00000EC4: 0xC001 0x0000000d - O_INTOP(0x0000000d)   // 13 (13)
0x00000ECA: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000ED0: 0x8121            - O_GIQ_OPTION
0x00000ED2: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000ED8: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000EDE: 0xC001 0x0000008c - O_INTOP(0x0000008c)   // 140 (140)
0x00000EE4: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x00000EEA: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000EF0: 0x8121            - O_GIQ_OPTION
0x00000EF2: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000EF8: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000EFE: 0xC001 0x0000008d - O_INTOP(0x0000008d)   // 141 (141)
0x00000F04: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00000F0A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000F10: 0x8121            - O_GIQ_OPTION
0x00000F12: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F18: 0x800D            - O_D_TO_A
0x00000F1A: 0x8019            - O_SWAPA
0x00000F1C: 0x802A            - O_POP_TO_BASE
0x00000F1E: 0x8029            - O_POP_BASE
0x00000F20: 0x800C            - O_A_TO_D
0x00000F22: 0x801C            - O_POP_RETURN
0x00000F24: 0x802A            - O_POP_TO_BASE
0x00000F26: 0x8029            - O_POP_BASE
0x00000F28: 0x801C            - O_POP_RETURN

18: Lorri11 (0x00000f2a)
===============================
0x00000F2A: 0x802B            - O_PUSH_BASE
0x00000F2C: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000F32: 0xC001 0x0000008e - O_INTOP(0x0000008e)   // 142 (142)
0x00000F38: 0x811E            - O_GSAY_REPLY
0x00000F3A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000F40: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000F46: 0xC001 0x0000008f - O_INTOP(0x0000008f)   // 143 (143)
0x00000F4C: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x00000F52: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000F58: 0x8121            - O_GIQ_OPTION
0x00000F5A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000F60: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000F66: 0xC001 0x00000090 - O_INTOP(0x00000090)   // 144 (144)
0x00000F6C: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x00000F72: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000F78: 0x8121            - O_GIQ_OPTION
0x00000F7A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000F80: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000F86: 0xC001 0x00000091 - O_INTOP(0x00000091)   // 145 (145)
0x00000F8C: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x00000F92: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000F98: 0x8121            - O_GIQ_OPTION
0x00000F9A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000FA0: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000FA6: 0xC001 0x00000092 - O_INTOP(0x00000092)   // 146 (146)
0x00000FAC: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00000FB2: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000FB8: 0x8121            - O_GIQ_OPTION
0x00000FBA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000FC0: 0x800D            - O_D_TO_A
0x00000FC2: 0x8019            - O_SWAPA
0x00000FC4: 0x802A            - O_POP_TO_BASE
0x00000FC6: 0x8029            - O_POP_BASE
0x00000FC8: 0x800C            - O_A_TO_D
0x00000FCA: 0x801C            - O_POP_RETURN
0x00000FCC: 0x802A            - O_POP_TO_BASE
0x00000FCE: 0x8029            - O_POP_BASE
0x00000FD0: 0x801C            - O_POP_RETURN

19: Lorri12 (0x00000fd2)
===============================
0x00000FD2: 0x802B            - O_PUSH_BASE
0x00000FD4: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00000FDA: 0xC001 0x00000093 - O_INTOP(0x00000093)   // 147 (147)
0x00000FE0: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000FE6: 0x8120            - O_GSAY_MESSAGE
0x00000FE8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000FEE: 0x800D            - O_D_TO_A
0x00000FF0: 0x8019            - O_SWAPA
0x00000FF2: 0x802A            - O_POP_TO_BASE
0x00000FF4: 0x8029            - O_POP_BASE
0x00000FF6: 0x800C            - O_A_TO_D
0x00000FF8: 0x801C            - O_POP_RETURN
0x00000FFA: 0x802A            - O_POP_TO_BASE
0x00000FFC: 0x8029            - O_POP_BASE
0x00000FFE: 0x801C            - O_POP_RETURN

20: Lorri13 (0x00001000)
===============================
0x00001000: 0x802B            - O_PUSH_BASE
0x00001002: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00001008: 0xC001 0x00000094 - O_INTOP(0x00000094)   // 148 (148)
0x0000100E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001014: 0x8120            - O_GSAY_MESSAGE
0x00001016: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000101C: 0x800D            - O_D_TO_A
0x0000101E: 0x8019            - O_SWAPA
0x00001020: 0x802A            - O_POP_TO_BASE
0x00001022: 0x8029            - O_POP_BASE
0x00001024: 0x800C            - O_A_TO_D
0x00001026: 0x801C            - O_POP_RETURN
0x00001028: 0x802A            - O_POP_TO_BASE
0x0000102A: 0x8029            - O_POP_BASE
0x0000102C: 0x801C            - O_POP_RETURN

21: Lorri14 (0x0000102e)
===============================
0x0000102E: 0x802B            - O_PUSH_BASE
0x00001030: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00001036: 0xC001 0x00000095 - O_INTOP(0x00000095)   // 149 (149)
0x0000103C: 0x811E            - O_GSAY_REPLY
0x0000103E: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001044: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x0000104A: 0xC001 0x00000096 - O_INTOP(0x00000096)   // 150 (150)
0x00001050: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x00001056: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000105C: 0x8121            - O_GIQ_OPTION
0x0000105E: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001064: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x0000106A: 0xC001 0x00000097 - O_INTOP(0x00000097)   // 151 (151)
0x00001070: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00001076: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000107C: 0x8121            - O_GIQ_OPTION
0x0000107E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001084: 0x800D            - O_D_TO_A
0x00001086: 0x8019            - O_SWAPA
0x00001088: 0x802A            - O_POP_TO_BASE
0x0000108A: 0x8029            - O_POP_BASE
0x0000108C: 0x800C            - O_A_TO_D
0x0000108E: 0x801C            - O_POP_RETURN
0x00001090: 0x802A            - O_POP_TO_BASE
0x00001092: 0x8029            - O_POP_BASE
0x00001094: 0x801C            - O_POP_RETURN

22: Lorri15 (0x00001096)
===============================
0x00001096: 0x802B            - O_PUSH_BASE
0x00001098: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x0000109E: 0xC001 0x00000098 - O_INTOP(0x00000098)   // 152 (152)
0x000010A4: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000010AA: 0x8120            - O_GSAY_MESSAGE
0x000010AC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000010B2: 0x800D            - O_D_TO_A
0x000010B4: 0x8019            - O_SWAPA
0x000010B6: 0x802A            - O_POP_TO_BASE
0x000010B8: 0x8029            - O_POP_BASE
0x000010BA: 0x800C            - O_A_TO_D
0x000010BC: 0x801C            - O_POP_RETURN
0x000010BE: 0x802A            - O_POP_TO_BASE
0x000010C0: 0x8029            - O_POP_BASE
0x000010C2: 0x801C            - O_POP_RETURN

23: Lorri16 (0x000010c4)
===============================
0x000010C4: 0x802B            - O_PUSH_BASE
0x000010C6: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x000010CC: 0xC001 0x00000099 - O_INTOP(0x00000099)   // 153 (153)
0x000010D2: 0x811E            - O_GSAY_REPLY
0x000010D4: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000010DA: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x000010E0: 0xC001 0x0000009a - O_INTOP(0x0000009a)   // 154 (154)
0x000010E6: 0xC001 0x00000018 - O_INTOP(0x00000018)   // 24 (24)
0x000010EC: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000010F2: 0x8121            - O_GIQ_OPTION
0x000010F4: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000010FA: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00001100: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00001106: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x0000110C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001112: 0x8121            - O_GIQ_OPTION
0x00001114: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000111A: 0x800D            - O_D_TO_A
0x0000111C: 0x8019            - O_SWAPA
0x0000111E: 0x802A            - O_POP_TO_BASE
0x00001120: 0x8029            - O_POP_BASE
0x00001122: 0x800C            - O_A_TO_D
0x00001124: 0x801C            - O_POP_RETURN
0x00001126: 0x802A            - O_POP_TO_BASE
0x00001128: 0x8029            - O_POP_BASE
0x0000112A: 0x801C            - O_POP_RETURN

24: Lorri17 (0x0000112c)
===============================
0x0000112C: 0x802B            - O_PUSH_BASE
0x0000112E: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00001134: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x0000113A: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x00001140: 0x8105            - O_MESSAGE_STR
0x00001142: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00001148: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x0000114E: 0x8105            - O_MESSAGE_STR
0x00001150: 0x8039            - O_ADD
0x00001152: 0x811E            - O_GSAY_REPLY
0x00001154: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000115A: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00001160: 0xC001 0x0000009e - O_INTOP(0x0000009e)   // 158 (158)
0x00001166: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x0000116C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001172: 0x8121            - O_GIQ_OPTION
0x00001174: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000117A: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00001180: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00001186: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x0000118C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001192: 0x8121            - O_GIQ_OPTION
0x00001194: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000119A: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x000011A0: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x000011A6: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x000011AC: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000011B2: 0x8121            - O_GIQ_OPTION
0x000011B4: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000011BA: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x000011C0: 0xC001 0x000000a2 - O_INTOP(0x000000a2)   // 162 (162)
0x000011C6: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x000011CC: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000011D2: 0x8121            - O_GIQ_OPTION
0x000011D4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000011DA: 0x800D            - O_D_TO_A
0x000011DC: 0x8019            - O_SWAPA
0x000011DE: 0x802A            - O_POP_TO_BASE
0x000011E0: 0x8029            - O_POP_BASE
0x000011E2: 0x800C            - O_A_TO_D
0x000011E4: 0x801C            - O_POP_RETURN
0x000011E6: 0x802A            - O_POP_TO_BASE
0x000011E8: 0x8029            - O_POP_BASE
0x000011EA: 0x801C            - O_POP_RETURN

25: Lorri18 (0x000011ec)
===============================
0x000011EC: 0x802B            - O_PUSH_BASE
0x000011EE: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x000011F4: 0xC001 0x000000a3 - O_INTOP(0x000000a3)   // 163 (163)
0x000011FA: 0x811E            - O_GSAY_REPLY
0x000011FC: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001202: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00001208: 0xC001 0x000000a4 - O_INTOP(0x000000a4)   // 164 (164)
0x0000120E: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x00001214: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000121A: 0x8121            - O_GIQ_OPTION
0x0000121C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001222: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00001228: 0xC001 0x000000a5 - O_INTOP(0x000000a5)   // 165 (165)
0x0000122E: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00001234: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000123A: 0x8121            - O_GIQ_OPTION
0x0000123C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001242: 0x800D            - O_D_TO_A
0x00001244: 0x8019            - O_SWAPA
0x00001246: 0x802A            - O_POP_TO_BASE
0x00001248: 0x8029            - O_POP_BASE
0x0000124A: 0x800C            - O_A_TO_D
0x0000124C: 0x801C            - O_POP_RETURN
0x0000124E: 0x802A            - O_POP_TO_BASE
0x00001250: 0x8029            - O_POP_BASE
0x00001252: 0x801C            - O_POP_RETURN

26: Lorri19 (0x00001254)
===============================
0x00001254: 0x802B            - O_PUSH_BASE
0x00001256: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x0000125C: 0xC001 0x000000a6 - O_INTOP(0x000000a6)   // 166 (166)
0x00001262: 0x811E            - O_GSAY_REPLY
0x00001264: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000126A: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00001270: 0xC001 0x000000a7 - O_INTOP(0x000000a7)   // 167 (167)
0x00001276: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x0000127C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001282: 0x8121            - O_GIQ_OPTION
0x00001284: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000128A: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00001290: 0xC001 0x000000a8 - O_INTOP(0x000000a8)   // 168 (168)
0x00001296: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x0000129C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000012A2: 0x8121            - O_GIQ_OPTION
0x000012A4: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000012AA: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x000012B0: 0xC001 0x000000a9 - O_INTOP(0x000000a9)   // 169 (169)
0x000012B6: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x000012BC: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000012C2: 0x8121            - O_GIQ_OPTION
0x000012C4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000012CA: 0x800D            - O_D_TO_A
0x000012CC: 0x8019            - O_SWAPA
0x000012CE: 0x802A            - O_POP_TO_BASE
0x000012D0: 0x8029            - O_POP_BASE
0x000012D2: 0x800C            - O_A_TO_D
0x000012D4: 0x801C            - O_POP_RETURN
0x000012D6: 0x802A            - O_POP_TO_BASE
0x000012D8: 0x8029            - O_POP_BASE
0x000012DA: 0x801C            - O_POP_RETURN

27: Lorri20 (0x000012dc)
===============================
0x000012DC: 0x802B            - O_PUSH_BASE
0x000012DE: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x000012E4: 0xC001 0x000000aa - O_INTOP(0x000000aa)   // 170 (170)
0x000012EA: 0x811E            - O_GSAY_REPLY
0x000012EC: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000012F2: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x000012F8: 0xC001 0x000000ab - O_INTOP(0x000000ab)   // 171 (171)
0x000012FE: 0xC001 0x0000001c - O_INTOP(0x0000001c)   // 28 (28)
0x00001304: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000130A: 0x8121            - O_GIQ_OPTION
0x0000130C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001312: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00001318: 0xC001 0x000000ac - O_INTOP(0x000000ac)   // 172 (172)
0x0000131E: 0xC001 0x0000001d - O_INTOP(0x0000001d)   // 29 (29)
0x00001324: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000132A: 0x8121            - O_GIQ_OPTION
0x0000132C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001332: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00001338: 0xC001 0x000000ad - O_INTOP(0x000000ad)   // 173 (173)
0x0000133E: 0xC001 0x0000001e - O_INTOP(0x0000001e)   // 30 (30)
0x00001344: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000134A: 0x8121            - O_GIQ_OPTION
0x0000134C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001352: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00001358: 0xC001 0x000000ae - O_INTOP(0x000000ae)   // 174 (174)
0x0000135E: 0xC001 0x0000001f - O_INTOP(0x0000001f)   // 31 (31)
0x00001364: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000136A: 0x8121            - O_GIQ_OPTION
0x0000136C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001372: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00001378: 0xC001 0x000000af - O_INTOP(0x000000af)   // 175 (175)
0x0000137E: 0xC001 0x00000020 - O_INTOP(0x00000020)   // 32 (32)
0x00001384: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000138A: 0x8121            - O_GIQ_OPTION
0x0000138C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001392: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00001398: 0xC001 0x000000b0 - O_INTOP(0x000000b0)   // 176 (176)
0x0000139E: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x000013A4: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000013AA: 0x8121            - O_GIQ_OPTION
0x000013AC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000013B2: 0x800D            - O_D_TO_A
0x000013B4: 0x8019            - O_SWAPA
0x000013B6: 0x802A            - O_POP_TO_BASE
0x000013B8: 0x8029            - O_POP_BASE
0x000013BA: 0x800C            - O_A_TO_D
0x000013BC: 0x801C            - O_POP_RETURN
0x000013BE: 0x802A            - O_POP_TO_BASE
0x000013C0: 0x8029            - O_POP_BASE
0x000013C2: 0x801C            - O_POP_RETURN

28: Lorri21 (0x000013c4)
===============================
0x000013C4: 0x802B            - O_PUSH_BASE
0x000013C6: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x000013CC: 0xC001 0x000000b1 - O_INTOP(0x000000b1)   // 177 (177)
0x000013D2: 0x811E            - O_GSAY_REPLY
0x000013D4: 0xC001 0x000013ea - O_INTOP(0x000013ea)   // 5098 (5098)
0x000013DA: 0x800D            - O_D_TO_A
0x000013DC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000013E2: 0xC001 0x00000021 - O_INTOP(0x00000021)   // 33 (33)
0x000013E8: 0x8005            - O_CALL
0x000013EA: 0x801A            - O_POP
0x000013EC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000013F2: 0x800D            - O_D_TO_A
0x000013F4: 0x8019            - O_SWAPA
0x000013F6: 0x802A            - O_POP_TO_BASE
0x000013F8: 0x8029            - O_POP_BASE
0x000013FA: 0x800C            - O_A_TO_D
0x000013FC: 0x801C            - O_POP_RETURN
0x000013FE: 0x802A            - O_POP_TO_BASE
0x00001400: 0x8029            - O_POP_BASE
0x00001402: 0x801C            - O_POP_RETURN

29: Lorri22 (0x00001404)
===============================
0x00001404: 0x802B            - O_PUSH_BASE
0x00001406: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x0000140C: 0xC001 0x000000b2 - O_INTOP(0x000000b2)   // 178 (178)
0x00001412: 0x811E            - O_GSAY_REPLY
0x00001414: 0xC001 0x0000142a - O_INTOP(0x0000142a)   // 5162 (5162)
0x0000141A: 0x800D            - O_D_TO_A
0x0000141C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001422: 0xC001 0x00000021 - O_INTOP(0x00000021)   // 33 (33)
0x00001428: 0x8005            - O_CALL
0x0000142A: 0x801A            - O_POP
0x0000142C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001432: 0x800D            - O_D_TO_A
0x00001434: 0x8019            - O_SWAPA
0x00001436: 0x802A            - O_POP_TO_BASE
0x00001438: 0x8029            - O_POP_BASE
0x0000143A: 0x800C            - O_A_TO_D
0x0000143C: 0x801C            - O_POP_RETURN
0x0000143E: 0x802A            - O_POP_TO_BASE
0x00001440: 0x8029            - O_POP_BASE
0x00001442: 0x801C            - O_POP_RETURN

30: Lorri23 (0x00001444)
===============================
0x00001444: 0x802B            - O_PUSH_BASE
0x00001446: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x0000144C: 0xC001 0x000000b3 - O_INTOP(0x000000b3)   // 179 (179)
0x00001452: 0x811E            - O_GSAY_REPLY
0x00001454: 0xC001 0x0000146a - O_INTOP(0x0000146a)   // 5226 (5226)
0x0000145A: 0x800D            - O_D_TO_A
0x0000145C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001462: 0xC001 0x00000021 - O_INTOP(0x00000021)   // 33 (33)
0x00001468: 0x8005            - O_CALL
0x0000146A: 0x801A            - O_POP
0x0000146C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001472: 0x800D            - O_D_TO_A
0x00001474: 0x8019            - O_SWAPA
0x00001476: 0x802A            - O_POP_TO_BASE
0x00001478: 0x8029            - O_POP_BASE
0x0000147A: 0x800C            - O_A_TO_D
0x0000147C: 0x801C            - O_POP_RETURN
0x0000147E: 0x802A            - O_POP_TO_BASE
0x00001480: 0x8029            - O_POP_BASE
0x00001482: 0x801C            - O_POP_RETURN

31: Lorri24 (0x00001484)
===============================
0x00001484: 0x802B            - O_PUSH_BASE
0x00001486: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x0000148C: 0xC001 0x000000b4 - O_INTOP(0x000000b4)   // 180 (180)
0x00001492: 0x811E            - O_GSAY_REPLY
0x00001494: 0xC001 0x000014aa - O_INTOP(0x000014aa)   // 5290 (5290)
0x0000149A: 0x800D            - O_D_TO_A
0x0000149C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000014A2: 0xC001 0x00000021 - O_INTOP(0x00000021)   // 33 (33)
0x000014A8: 0x8005            - O_CALL
0x000014AA: 0x801A            - O_POP
0x000014AC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000014B2: 0x800D            - O_D_TO_A
0x000014B4: 0x8019            - O_SWAPA
0x000014B6: 0x802A            - O_POP_TO_BASE
0x000014B8: 0x8029            - O_POP_BASE
0x000014BA: 0x800C            - O_A_TO_D
0x000014BC: 0x801C            - O_POP_RETURN
0x000014BE: 0x802A            - O_POP_TO_BASE
0x000014C0: 0x8029            - O_POP_BASE
0x000014C2: 0x801C            - O_POP_RETURN

32: Lorri25 (0x000014c4)
===============================
0x000014C4: 0x802B            - O_PUSH_BASE
0x000014C6: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x000014CC: 0xC001 0x000000b5 - O_INTOP(0x000000b5)   // 181 (181)
0x000014D2: 0x811E            - O_GSAY_REPLY
0x000014D4: 0xC001 0x000014ea - O_INTOP(0x000014ea)   // 5354 (5354)
0x000014DA: 0x800D            - O_D_TO_A
0x000014DC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000014E2: 0xC001 0x00000021 - O_INTOP(0x00000021)   // 33 (33)
0x000014E8: 0x8005            - O_CALL
0x000014EA: 0x801A            - O_POP
0x000014EC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000014F2: 0x800D            - O_D_TO_A
0x000014F4: 0x8019            - O_SWAPA
0x000014F6: 0x802A            - O_POP_TO_BASE
0x000014F8: 0x8029            - O_POP_BASE
0x000014FA: 0x800C            - O_A_TO_D
0x000014FC: 0x801C            - O_POP_RETURN
0x000014FE: 0x802A            - O_POP_TO_BASE
0x00001500: 0x8029            - O_POP_BASE
0x00001502: 0x801C            - O_POP_RETURN

33: Lorri26 (0x00001504)
===============================
0x00001504: 0x802B            - O_PUSH_BASE
0x00001506: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000150C: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00001512: 0xC001 0x000000b6 - O_INTOP(0x000000b6)   // 182 (182)
0x00001518: 0xC001 0x0000001b - O_INTOP(0x0000001b)   // 27 (27)
0x0000151E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001524: 0x8121            - O_GIQ_OPTION
0x00001526: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000152C: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00001532: 0xC001 0x000000b7 - O_INTOP(0x000000b7)   // 183 (183)
0x00001538: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x0000153E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001544: 0x8121            - O_GIQ_OPTION
0x00001546: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000154C: 0x800D            - O_D_TO_A
0x0000154E: 0x8019            - O_SWAPA
0x00001550: 0x802A            - O_POP_TO_BASE
0x00001552: 0x8029            - O_POP_BASE
0x00001554: 0x800C            - O_A_TO_D
0x00001556: 0x801C            - O_POP_RETURN
0x00001558: 0x802A            - O_POP_TO_BASE
0x0000155A: 0x8029            - O_POP_BASE
0x0000155C: 0x801C            - O_POP_RETURN

34: Lorri27 (0x0000155e)
===============================
0x0000155E: 0x802B            - O_PUSH_BASE
0x00001560: 0xC001 0x000000fd - O_INTOP(0x000000fd)   // 253 (253)
0x00001566: 0xC001 0x000000b8 - O_INTOP(0x000000b8)   // 184 (184)
0x0000156C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001572: 0x8120            - O_GSAY_MESSAGE
0x00001574: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000157A: 0x800D            - O_D_TO_A
0x0000157C: 0x8019            - O_SWAPA
0x0000157E: 0x802A            - O_POP_TO_BASE
0x00001580: 0x8029            - O_POP_BASE
0x00001582: 0x800C            - O_A_TO_D
0x00001584: 0x801C            - O_POP_RETURN
0x00001586: 0x802A            - O_POP_TO_BASE
0x00001588: 0x8029            - O_POP_BASE
0x0000158A: 0x801C            - O_POP_RETURN

