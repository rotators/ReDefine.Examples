Fallout script decompiler, version 8.4.6 (sfall edition)
Copyright (C) Anchorite (TeamX), 2005-2009
anchorite2001@yandex.ru
Continued by Nirran, phobos2077, Mr.Stalin (2014-2020)
Crossplatformed by alexeevdv (2015)
Loading file Games/Fallout2.Steam/scripts/DOG2.int...
  Read startup code
  Read procedures table
  Read namespace
  Read stringspace
  Read tail of startup code
    Check "Jump to 'start' procedure" / "Jump to end of statup code"
    Check "# of argument to 'start' procedure"
    Extract "Export var" section
    Extract "Set exported var values" section
    Extract "Export procedures" section
    Extract "Global variables" section
  Read procedure's bodies
    Procedure: 0
    Procedure: 1
File Games/Fallout2.Steam/scripts/DOG2.int loaded successfuly

Decompiling...
  Init definitions
  Processing code
    Intial reducing
    Building execution tree
        Procedure: 0
        Procedure: 1
    Extracting and reducing conditions
    Setting borders of blocks
        Procedure: 0
        Procedure: 1
Error: Conditional expression left in stack

============== Procedures table ==================

======== Procedure 0 ========
Name offset:       0x00000006
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000102
Number of args:    0x00000000  // 0

======== Procedure 1 ========
Name offset:       0x00000018
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000102
Number of args:    0x00000000  // 0



============== Namespace ==================
0x00000006: ".............."
0x00000018: "start"
0x00000020: "rndx"
0x00000028: "rndy"
0x00000030: "critter_tile"
0x00000040: "Herebefore"
0x0000004E: "Talked_Once"
0x0000005C: "only_once"
==================
8 item(s)



============== Stringspace ==================
Empty


============== Global variables values ==================
0: O_INTOP(0x00000000)   // 0 (0)
1: O_INTOP(0x00000000)   // 0 (0)
2: O_INTOP(0x00000000)   // 0 (0)
3: O_INTOP(0x00000000)   // 0 (0)
4: O_INTOP(0x00000000)   // 0 (0)
5: O_INTOP(0x00000001)   // 1 (1)


============== Exported variables ==================
Not found


============== Procedures ==================

0: .............. (0x00000102)
===============================

1: start (0x00000102)
===============================
0x00000102: 0x802B            - O_PUSH_BASE
0x00000104: 0xC001 0x0000018a - O_INTOP(0x0000018a)   // 394 (394)
0x0000010A: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000110: 0x8012            - O_FETCH_GLOBAL
0x00000112: 0x802F            - O_IF
0x00000114: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000011A: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000120: 0x8013            - O_STORE_GLOBAL
0x00000122: 0x80BC            - O_SELF_OBJ
0x00000124: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000012A: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000130: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x00000136: 0x8102            - O_CRITTER_ADD_TRAIT
0x00000138: 0xC001 0x00000174 - O_INTOP(0x00000174)   // 372 (372)
0x0000013E: 0x8101            - O_CUR_MAP_INDEX
0x00000140: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x00000146: 0x8033            - O_EQUAL
0x00000148: 0x8101            - O_CUR_MAP_INDEX
0x0000014A: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00000150: 0x8033            - O_EQUAL
0x00000152: 0x803F            - O_OR
0x00000154: 0x802F            - O_IF
0x00000156: 0x80BC            - O_SELF_OBJ
0x00000158: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000015E: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000164: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x0000016A: 0x8102            - O_CRITTER_ADD_TRAIT
0x0000016C: 0xC001 0x0000018a - O_INTOP(0x0000018a)   // 394 (394)
0x00000172: 0x8004            - O_JMP
0x00000174: 0x80BC            - O_SELF_OBJ
0x00000176: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000017C: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000182: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x00000188: 0x8102            - O_CRITTER_ADD_TRAIT
0x0000018A: 0xC001 0x0000031c - O_INTOP(0x0000031c)   // 796 (796)
0x00000190: 0x80C7            - O_SCRIPT_ACTION
0x00000192: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00000198: 0x8033            - O_EQUAL
0x0000019A: 0x802F            - O_IF
0x0000019C: 0xC001 0x00000222 - O_INTOP(0x00000222)   // 546 (546)
0x000001A2: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000001A8: 0x80C5            - O_GLOBAL_VAR
0x000001AA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000001B0: 0x8033            - O_EQUAL
0x000001B2: 0x80BC            - O_SELF_OBJ
0x000001B4: 0x80BF            - O_DUDE_OBJ
0x000001B6: 0x80D3            - O_TILE_DISTANCE_OBJS
0x000001B8: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000001BE: 0x8038            - O_GREATER
0x000001C0: 0x803E            - O_AND
0x000001C2: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000001C8: 0x8012            - O_FETCH_GLOBAL
0x000001CA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000001D0: 0x8033            - O_EQUAL
0x000001D2: 0x803E            - O_AND
0x000001D4: 0x802F            - O_IF
0x000001D6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000001DC: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000001E2: 0x80B4            - O_RANDOM
0x000001E4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000001EA: 0x8013            - O_STORE_GLOBAL
0x000001EC: 0x80BF            - O_DUDE_OBJ
0x000001EE: 0x80D4            - O_TILE_NUM
0x000001F0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000001F6: 0x8012            - O_FETCH_GLOBAL
0x000001F8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000001FE: 0x80D5            - O_TILE_NUM_IN_DIRECTION
0x00000200: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000206: 0x8013            - O_STORE_GLOBAL
0x00000208: 0x80BC            - O_SELF_OBJ
0x0000020A: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000210: 0x8012            - O_FETCH_GLOBAL
0x00000212: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000218: 0x80CE            - O_ANIMATE_MOVE_OBJ_TO_TILE
0x0000021A: 0xC001 0x00000294 - O_INTOP(0x00000294)   // 660 (660)
0x00000220: 0x8004            - O_JMP
0x00000222: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000228: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x0000022E: 0x80B4            - O_RANDOM
0x00000230: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000236: 0x8013            - O_STORE_GLOBAL
0x00000238: 0xC001 0x00000294 - O_INTOP(0x00000294)   // 660 (660)
0x0000023E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000244: 0x8012            - O_FETCH_GLOBAL
0x00000246: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000024C: 0x8033            - O_EQUAL
0x0000024E: 0x802F            - O_IF
0x00000250: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000256: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x0000025C: 0x80B4            - O_RANDOM
0x0000025E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000264: 0x8013            - O_STORE_GLOBAL
0x00000266: 0x80BC            - O_SELF_OBJ
0x00000268: 0x80D4            - O_TILE_NUM
0x0000026A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000270: 0x8012            - O_FETCH_GLOBAL
0x00000272: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000278: 0x80D5            - O_TILE_NUM_IN_DIRECTION
0x0000027A: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000280: 0x8013            - O_STORE_GLOBAL
0x00000282: 0x80BC            - O_SELF_OBJ
0x00000284: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x0000028A: 0x8012            - O_FETCH_GLOBAL
0x0000028C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000292: 0x80CE            - O_ANIMATE_MOVE_OBJ_TO_TILE
0x00000294: 0xC001 0x00000314 - O_INTOP(0x00000314)   // 788 (788)
0x0000029A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000002A0: 0x80C5            - O_GLOBAL_VAR
0x000002A2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000002A8: 0x8033            - O_EQUAL
0x000002AA: 0x802F            - O_IF
0x000002AC: 0xC001 0x00000314 - O_INTOP(0x00000314)   // 788 (788)
0x000002B2: 0x80BC            - O_SELF_OBJ
0x000002B4: 0x80BF            - O_DUDE_OBJ
0x000002B6: 0x80DC            - O_OBJ_CAN_SEE_OBJ
0x000002B8: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000002BE: 0x80C5            - O_GLOBAL_VAR
0x000002C0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000002C6: 0x8033            - O_EQUAL
0x000002C8: 0x803E            - O_AND
0x000002CA: 0x802F            - O_IF
0x000002CC: 0xC001 0x00000314 - O_INTOP(0x00000314)   // 788 (788)
0x000002D2: 0x80BF            - O_DUDE_OBJ
0x000002D4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000002DA: 0x8106            - O_CRITTER_INVEN_OBJ
0x000002DC: 0x8100            - O_OBJ_PID
0x000002DE: 0xC001 0x0000004a - O_INTOP(0x0000004a)   // 74 (74)
0x000002E4: 0x8033            - O_EQUAL
0x000002E6: 0x802F            - O_IF
0x000002E8: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000002EE: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000002F4: 0x80C6            - O_SET_GLOBAL_VAR
0x000002F6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000002FC: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000302: 0x8013            - O_STORE_GLOBAL
0x00000304: 0xC001 0x000000f2 - O_INTOP(0x000000f2)   // 242 (242)
0x0000030A: 0xC001 0x00000066 - O_INTOP(0x00000066)   // 102 (102)
0x00000310: 0x8105            - O_MESSAGE_STR
0x00000312: 0x80B8            - O_DISPLAY_MSG
0x00000314: 0xC001 0x0000036e - O_INTOP(0x0000036e)   // 878 (878)
0x0000031A: 0x8004            - O_JMP
0x0000031C: 0xC001 0x0000034e - O_INTOP(0x0000034e)   // 846 (846)
0x00000322: 0x80C7            - O_SCRIPT_ACTION
0x00000324: 0xC001 0x00000012 - O_INTOP(0x00000012)   // 18 (18)
0x0000032A: 0x8033            - O_EQUAL
0x0000032C: 0x802F            - O_IF
0x0000032E: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000334: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000033A: 0x80C5            - O_GLOBAL_VAR
0x0000033C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000342: 0x8039            - O_ADD
0x00000344: 0x80C6            - O_SET_GLOBAL_VAR
0x00000346: 0xC001 0x0000036e - O_INTOP(0x0000036e)   // 878 (878)
0x0000034C: 0x8004            - O_JMP
0x0000034E: 0xC001 0x0000036e - O_INTOP(0x0000036e)   // 878 (878)
0x00000354: 0x80C7            - O_SCRIPT_ACTION
0x00000356: 0xC001 0x0000000d - O_INTOP(0x0000000d)   // 13 (13)
0x0000035C: 0x8033            - O_EQUAL
0x0000035E: 0x802F            - O_IF
0x00000360: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000366: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000036C: 0x80C6            - O_SET_GLOBAL_VAR
0x0000036E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000374: 0x800D            - O_D_TO_A
0x00000376: 0x8019            - O_SWAPA
0x00000378: 0x802A            - O_POP_TO_BASE
0x0000037A: 0x8029            - O_POP_BASE
0x0000037C: 0x800C            - O_A_TO_D
0x0000037E: 0x801C            - O_POP_RETURN
0x00000380: 0x802A            - O_POP_TO_BASE
0x00000382: 0x8029            - O_POP_BASE
0x00000384: 0x801C            - O_POP_RETURN

