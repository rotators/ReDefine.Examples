Fallout script decompiler, version 8.4.6 (sfall edition)
Copyright (C) Anchorite (TeamX), 2005-2009
anchorite2001@yandex.ru
Continued by Nirran, phobos2077, Mr.Stalin (2014-2020)
Crossplatformed by alexeevdv (2015)
Loading file Games/Fallout2.Steam/scripts/SAMMAEL.int...
  Read startup code
  Read procedures table
  Read namespace
  Read stringspace
  Read tail of startup code
    Check "Jump to 'start' procedure" / "Jump to end of statup code"
    Check "# of argument to 'start' procedure"
    Extract "Export var" section
    Extract "Set exported var values" section
    Extract "Export procedures" section
    Extract "Global variables" section
  Read procedure's bodies
    Procedure: 0
    Procedure: 1
    Procedure: 2
    Procedure: 3
    Procedure: 4
    Procedure: 5
    Procedure: 6
    Procedure: 7
    Procedure: 8
    Procedure: 9
    Procedure: 10
    Procedure: 11
    Procedure: 12
    Procedure: 13
    Procedure: 14
    Procedure: 15
    Procedure: 16
    Procedure: 17
    Procedure: 18
    Procedure: 19
    Procedure: 20
    Procedure: 21
    Procedure: 22
File Games/Fallout2.Steam/scripts/SAMMAEL.int loaded successfuly

Decompiling...
  Init definitions
  Processing code
    Intial reducing
    Building execution tree
        Procedure: 0
        Procedure: 1
        Procedure: 2
        Procedure: 3
        Procedure: 4
        Procedure: 5
        Procedure: 6
        Procedure: 7
        Procedure: 8
        Procedure: 9
        Procedure: 10
        Procedure: 11
        Procedure: 12
        Procedure: 13
        Procedure: 14
        Procedure: 15
        Procedure: 16
        Procedure: 17
        Procedure: 18
        Procedure: 19
        Procedure: 20
        Procedure: 21
        Procedure: 22
    Extracting and reducing conditions
    Setting borders of blocks
        Procedure: 0
        Procedure: 1
Error: Conditional expression left in stack

============== Procedures table ==================

======== Procedure 0 ========
Name offset:       0x00000006
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000003CA
Number of args:    0x00000000  // 0

======== Procedure 1 ========
Name offset:       0x00000018
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000003CA
Number of args:    0x00000000  // 0

======== Procedure 2 ========
Name offset:       0x00000020
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000572
Number of args:    0x00000000  // 0

======== Procedure 3 ========
Name offset:       0x00000032
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000616
Number of args:    0x00000000  // 0

======== Procedure 4 ========
Name offset:       0x00000042
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000662
Number of args:    0x00000000  // 0

======== Procedure 5 ========
Name offset:       0x00000054
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000007E4
Number of args:    0x00000000  // 0

======== Procedure 6 ========
Name offset:       0x00000066
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000838
Number of args:    0x00000000  // 0

======== Procedure 7 ========
Name offset:       0x00000076
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000860
Number of args:    0x00000000  // 0

======== Procedure 8 ========
Name offset:       0x00000084
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000008E8
Number of args:    0x00000000  // 0

======== Procedure 9 ========
Name offset:       0x00000090
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000998
Number of args:    0x00000000  // 0

======== Procedure 10 ========
Name offset:       0x0000009C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000A0E
Number of args:    0x00000000  // 0

======== Procedure 11 ========
Name offset:       0x000000A8
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000A3C
Number of args:    0x00000000  // 0

======== Procedure 12 ========
Name offset:       0x000000B4
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000AE4
Number of args:    0x00000000  // 0

======== Procedure 13 ========
Name offset:       0x000000C0
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000B12
Number of args:    0x00000000  // 0

======== Procedure 14 ========
Name offset:       0x000000CC
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000B9A
Number of args:    0x00000000  // 0

======== Procedure 15 ========
Name offset:       0x000000D8
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000BC8
Number of args:    0x00000000  // 0

======== Procedure 16 ========
Name offset:       0x000000E4
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000CB0
Number of args:    0x00000000  // 0

======== Procedure 17 ========
Name offset:       0x000000F0
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000CF6
Number of args:    0x00000000  // 0

======== Procedure 18 ========
Name offset:       0x000000FC
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000D50
Number of args:    0x00000000  // 0

======== Procedure 19 ========
Name offset:       0x00000108
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000D96
Number of args:    0x00000000  // 0

======== Procedure 20 ========
Name offset:       0x00000114
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000DDC
Number of args:    0x00000000  // 0

======== Procedure 21 ========
Name offset:       0x00000120
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000E36
Number of args:    0x00000000  // 0

======== Procedure 22 ========
Name offset:       0x0000012C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000E9E
Number of args:    0x00000000  // 0



============== Namespace ==================
0x00000006: ".............."
0x00000018: "start"
0x00000020: "critter_p_proc"
0x00000032: "damage_p_proc"
0x00000042: "destroy_p_proc"
0x00000054: "look_at_p_proc"
0x00000066: "pickup_p_proc"
0x00000076: "talk_p_proc"
0x00000084: "Sammael01"
0x00000090: "Sammael02"
0x0000009C: "Sammael03"
0x000000A8: "Sammael04"
0x000000B4: "Sammael05"
0x000000C0: "Sammael06"
0x000000CC: "Sammael07"
0x000000D8: "Sammael08"
0x000000E4: "Sammael09"
0x000000F0: "Sammael10"
0x000000FC: "Sammael11"
0x00000108: "Sammael12"
0x00000114: "Sammael13"
0x00000120: "Sammael14"
0x0000012C: "Sammael15"
0x00000138: "hostile"
0x00000142: "initialized"
==================
25 item(s)



============== Stringspace ==================
Empty


============== Global variables values ==================
0: O_INTOP(0x00000000)   // 0 (0)
1: O_INTOP(0x00000000)   // 0 (0)


============== Exported variables ==================
Not found


============== Procedures ==================

0: .............. (0x000003ca)
===============================

1: start (0x000003ca)
===============================
0x000003CA: 0x802B            - O_PUSH_BASE
0x000003CC: 0xC001 0x00000468 - O_INTOP(0x00000468)   // 1128 (1128)
0x000003D2: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000003D8: 0x8012            - O_FETCH_GLOBAL
0x000003DA: 0x8045            - O_NOT
0x000003DC: 0x802F            - O_IF
0x000003DE: 0xC001 0x00000426 - O_INTOP(0x00000426)   // 1062 (1062)
0x000003E4: 0xC001 0x00000265 - O_INTOP(0x00000265)   // 613 (613)
0x000003EA: 0x80C5            - O_GLOBAL_VAR
0x000003EC: 0xC001 0x0000238f - O_INTOP(0x0000238f)   // 9103 (9103)
0x000003F2: 0x8033            - O_EQUAL
0x000003F4: 0xC001 0x00000265 - O_INTOP(0x00000265)   // 613 (613)
0x000003FA: 0x80C5            - O_GLOBAL_VAR
0x000003FC: 0xC001 0x0000238e - O_INTOP(0x0000238e)   // 9102 (9102)
0x00000402: 0x8033            - O_EQUAL
0x00000404: 0x803F            - O_OR
0x00000406: 0x802F            - O_IF
0x00000408: 0x80BC            - O_SELF_OBJ
0x0000040A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000410: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000416: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000041C: 0x8102            - O_CRITTER_ADD_TRAIT
0x0000041E: 0xC001 0x0000043c - O_INTOP(0x0000043c)   // 1084 (1084)
0x00000424: 0x8004            - O_JMP
0x00000426: 0x80BC            - O_SELF_OBJ
0x00000428: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000042E: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000434: 0xC001 0x00000031 - O_INTOP(0x00000031)   // 49 (49)
0x0000043A: 0x8102            - O_CRITTER_ADD_TRAIT
0x0000043C: 0x80BC            - O_SELF_OBJ
0x0000043E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000444: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x0000044A: 0xC001 0x0000001d - O_INTOP(0x0000001d)   // 29 (29)
0x00000450: 0x8102            - O_CRITTER_ADD_TRAIT
0x00000452: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000458: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000045E: 0x8013            - O_STORE_GLOBAL
0x00000460: 0xC001 0x0000055a - O_INTOP(0x0000055a)   // 1370 (1370)
0x00000466: 0x8004            - O_JMP
0x00000468: 0xC001 0x0000049a - O_INTOP(0x0000049a)   // 1178 (1178)
0x0000046E: 0x80C7            - O_SCRIPT_ACTION
0x00000470: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00000476: 0x8033            - O_EQUAL
0x00000478: 0x802F            - O_IF
0x0000047A: 0xC001 0x00000490 - O_INTOP(0x00000490)   // 1168 (1168)
0x00000480: 0x800D            - O_D_TO_A
0x00000482: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000488: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x0000048E: 0x8005            - O_CALL
0x00000490: 0x801A            - O_POP
0x00000492: 0xC001 0x0000055a - O_INTOP(0x0000055a)   // 1370 (1370)
0x00000498: 0x8004            - O_JMP
0x0000049A: 0xC001 0x000004cc - O_INTOP(0x000004cc)   // 1228 (1228)
0x000004A0: 0x80C7            - O_SCRIPT_ACTION
0x000004A2: 0xC001 0x00000012 - O_INTOP(0x00000012)   // 18 (18)
0x000004A8: 0x8033            - O_EQUAL
0x000004AA: 0x802F            - O_IF
0x000004AC: 0xC001 0x000004c2 - O_INTOP(0x000004c2)   // 1218 (1218)
0x000004B2: 0x800D            - O_D_TO_A
0x000004B4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000004BA: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000004C0: 0x8005            - O_CALL
0x000004C2: 0x801A            - O_POP
0x000004C4: 0xC001 0x0000055a - O_INTOP(0x0000055a)   // 1370 (1370)
0x000004CA: 0x8004            - O_JMP
0x000004CC: 0xC001 0x000004fe - O_INTOP(0x000004fe)   // 1278 (1278)
0x000004D2: 0x80C7            - O_SCRIPT_ACTION
0x000004D4: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x000004DA: 0x8033            - O_EQUAL
0x000004DC: 0x802F            - O_IF
0x000004DE: 0xC001 0x000004f4 - O_INTOP(0x000004f4)   // 1268 (1268)
0x000004E4: 0x800D            - O_D_TO_A
0x000004E6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000004EC: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000004F2: 0x8005            - O_CALL
0x000004F4: 0x801A            - O_POP
0x000004F6: 0xC001 0x0000055a - O_INTOP(0x0000055a)   // 1370 (1370)
0x000004FC: 0x8004            - O_JMP
0x000004FE: 0xC001 0x00000530 - O_INTOP(0x00000530)   // 1328 (1328)
0x00000504: 0x80C7            - O_SCRIPT_ACTION
0x00000506: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000050C: 0x8033            - O_EQUAL
0x0000050E: 0x802F            - O_IF
0x00000510: 0xC001 0x00000526 - O_INTOP(0x00000526)   // 1318 (1318)
0x00000516: 0x800D            - O_D_TO_A
0x00000518: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000051E: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000524: 0x8005            - O_CALL
0x00000526: 0x801A            - O_POP
0x00000528: 0xC001 0x0000055a - O_INTOP(0x0000055a)   // 1370 (1370)
0x0000052E: 0x8004            - O_JMP
0x00000530: 0xC001 0x0000055a - O_INTOP(0x0000055a)   // 1370 (1370)
0x00000536: 0x80C7            - O_SCRIPT_ACTION
0x00000538: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x0000053E: 0x8033            - O_EQUAL
0x00000540: 0x802F            - O_IF
0x00000542: 0xC001 0x00000558 - O_INTOP(0x00000558)   // 1368 (1368)
0x00000548: 0x800D            - O_D_TO_A
0x0000054A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000550: 0xC001 0x00000007 - O_INTOP(0x00000007)   // 7 (7)
0x00000556: 0x8005            - O_CALL
0x00000558: 0x801A            - O_POP
0x0000055A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000560: 0x800D            - O_D_TO_A
0x00000562: 0x8019            - O_SWAPA
0x00000564: 0x802A            - O_POP_TO_BASE
0x00000566: 0x8029            - O_POP_BASE
0x00000568: 0x800C            - O_A_TO_D
0x0000056A: 0x801C            - O_POP_RETURN
0x0000056C: 0x802A            - O_POP_TO_BASE
0x0000056E: 0x8029            - O_POP_BASE
0x00000570: 0x801C            - O_POP_RETURN

2: critter_p_proc (0x00000572)
===============================
0x00000572: 0x802B            - O_PUSH_BASE
0x00000574: 0xC001 0x000005c8 - O_INTOP(0x000005c8)   // 1480 (1480)
0x0000057A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000580: 0x8012            - O_FETCH_GLOBAL
0x00000582: 0x802F            - O_IF
0x00000584: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000058A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000590: 0x8013            - O_STORE_GLOBAL
0x00000592: 0x80BF            - O_DUDE_OBJ
0x00000594: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000059A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000005A0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000005A6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000005AC: 0xC001 0x00007530 - O_INTOP(0x00007530)   // 30000 (30000)
0x000005B2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000005B8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000005BE: 0x80D0            - O_ATTACK_COMPLEX
0x000005C0: 0xC001 0x000005fe - O_INTOP(0x000005fe)   // 1534 (1534)
0x000005C6: 0x8004            - O_JMP
0x000005C8: 0xC001 0x000005f4 - O_INTOP(0x000005f4)   // 1524 (1524)
0x000005CE: 0x80BF            - O_DUDE_OBJ
0x000005D0: 0x80BC            - O_SELF_OBJ
0x000005D2: 0x80D3            - O_TILE_DISTANCE_OBJS
0x000005D4: 0x80BF            - O_DUDE_OBJ
0x000005D6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000005DC: 0x80CA            - O_GET_CRITTER_STAT
0x000005DE: 0x8038            - O_GREATER
0x000005E0: 0x802F            - O_IF
0x000005E2: 0x80BC            - O_SELF_OBJ
0x000005E4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000005EA: 0x80E3            - O_SET_OBJ_VISIBILITY
0x000005EC: 0xC001 0x000005fe - O_INTOP(0x000005fe)   // 1534 (1534)
0x000005F2: 0x8004            - O_JMP
0x000005F4: 0x80BC            - O_SELF_OBJ
0x000005F6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000005FC: 0x80E3            - O_SET_OBJ_VISIBILITY
0x000005FE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000604: 0x800D            - O_D_TO_A
0x00000606: 0x8019            - O_SWAPA
0x00000608: 0x802A            - O_POP_TO_BASE
0x0000060A: 0x8029            - O_POP_BASE
0x0000060C: 0x800C            - O_A_TO_D
0x0000060E: 0x801C            - O_POP_RETURN
0x00000610: 0x802A            - O_POP_TO_BASE
0x00000612: 0x8029            - O_POP_BASE
0x00000614: 0x801C            - O_POP_RETURN

3: damage_p_proc (0x00000616)
===============================
0x00000616: 0x802B            - O_PUSH_BASE
0x00000618: 0xC001 0x0000064a - O_INTOP(0x0000064a)   // 1610 (1610)
0x0000061E: 0x80BD            - O_SOURCE_OBJ
0x00000620: 0x80BF            - O_DUDE_OBJ
0x00000622: 0x8033            - O_EQUAL
0x00000624: 0x802F            - O_IF
0x00000626: 0xC001 0x000000fb - O_INTOP(0x000000fb)   // 251 (251)
0x0000062C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000632: 0x80C6            - O_SET_GLOBAL_VAR
0x00000634: 0x80BC            - O_SELF_OBJ
0x00000636: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000063C: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000642: 0xC001 0x00000031 - O_INTOP(0x00000031)   // 49 (49)
0x00000648: 0x8102            - O_CRITTER_ADD_TRAIT
0x0000064A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000650: 0x800D            - O_D_TO_A
0x00000652: 0x8019            - O_SWAPA
0x00000654: 0x802A            - O_POP_TO_BASE
0x00000656: 0x8029            - O_POP_BASE
0x00000658: 0x800C            - O_A_TO_D
0x0000065A: 0x801C            - O_POP_RETURN
0x0000065C: 0x802A            - O_POP_TO_BASE
0x0000065E: 0x8029            - O_POP_BASE
0x00000660: 0x801C            - O_POP_RETURN

4: destroy_p_proc (0x00000662)
===============================
0x00000662: 0x802B            - O_PUSH_BASE
0x00000664: 0xC001 0x000007cc - O_INTOP(0x000007cc)   // 1996 (1996)
0x0000066A: 0x80BD            - O_SOURCE_OBJ
0x0000066C: 0x80BF            - O_DUDE_OBJ
0x0000066E: 0x8033            - O_EQUAL
0x00000670: 0x802F            - O_IF
0x00000672: 0xC001 0x000000fb - O_INTOP(0x000000fb)   // 251 (251)
0x00000678: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000067E: 0x80C6            - O_SET_GLOBAL_VAR
0x00000680: 0xC001 0x000007b6 - O_INTOP(0x000007b6)   // 1974 (1974)
0x00000686: 0x80BD            - O_SOURCE_OBJ
0x00000688: 0x80BF            - O_DUDE_OBJ
0x0000068A: 0x8033            - O_EQUAL
0x0000068C: 0x802F            - O_IF
0x0000068E: 0xC001 0x000006fa - O_INTOP(0x000006fa)   // 1786 (1786)
0x00000694: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x0000069A: 0x80C5            - O_GLOBAL_VAR
0x0000069C: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x000006A2: 0x80C5            - O_GLOBAL_VAR
0x000006A4: 0x8039            - O_ADD
0x000006A6: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x000006AC: 0x8036            - O_GREATER_EQUAL
0x000006AE: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x000006B4: 0x80C5            - O_GLOBAL_VAR
0x000006B6: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000006BC: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x000006C2: 0x80C5            - O_GLOBAL_VAR
0x000006C4: 0x803B            - O_MUL
0x000006C6: 0x8038            - O_GREATER
0x000006C8: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x000006CE: 0x80C5            - O_GLOBAL_VAR
0x000006D0: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000006D6: 0x8033            - O_EQUAL
0x000006D8: 0x803F            - O_OR
0x000006DA: 0x803E            - O_AND
0x000006DC: 0x802F            - O_IF
0x000006DE: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x000006E4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000006EA: 0x80C6            - O_SET_GLOBAL_VAR
0x000006EC: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x000006F2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000006F8: 0x80C6            - O_SET_GLOBAL_VAR
0x000006FA: 0xC001 0x00000766 - O_INTOP(0x00000766)   // 1894 (1894)
0x00000700: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00000706: 0x80C5            - O_GLOBAL_VAR
0x00000708: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x0000070E: 0x80C5            - O_GLOBAL_VAR
0x00000710: 0x8039            - O_ADD
0x00000712: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00000718: 0x8036            - O_GREATER_EQUAL
0x0000071A: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00000720: 0x80C5            - O_GLOBAL_VAR
0x00000722: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000728: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x0000072E: 0x80C5            - O_GLOBAL_VAR
0x00000730: 0x803B            - O_MUL
0x00000732: 0x8038            - O_GREATER
0x00000734: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x0000073A: 0x80C5            - O_GLOBAL_VAR
0x0000073C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000742: 0x8033            - O_EQUAL
0x00000744: 0x803F            - O_OR
0x00000746: 0x803E            - O_AND
0x00000748: 0x802F            - O_IF
0x0000074A: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x00000750: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000756: 0x80C6            - O_SET_GLOBAL_VAR
0x00000758: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x0000075E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000764: 0x80C6            - O_SET_GLOBAL_VAR
0x00000766: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x0000076C: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000772: 0x80C5            - O_GLOBAL_VAR
0x00000774: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000077A: 0x8039            - O_ADD
0x0000077C: 0x80C6            - O_SET_GLOBAL_VAR
0x0000077E: 0xC001 0x000007b6 - O_INTOP(0x000007b6)   // 1974 (1974)
0x00000784: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x0000078A: 0x80C5            - O_GLOBAL_VAR
0x0000078C: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000792: 0x803D            - O_MOD
0x00000794: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000079A: 0x8033            - O_EQUAL
0x0000079C: 0x802F            - O_IF
0x0000079E: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x000007A4: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x000007AA: 0x80C5            - O_GLOBAL_VAR
0x000007AC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000007B2: 0x803A            - O_SUB
0x000007B4: 0x80C6            - O_SET_GLOBAL_VAR
0x000007B6: 0x80BC            - O_SELF_OBJ
0x000007B8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000007BE: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x000007C4: 0xC001 0x00000031 - O_INTOP(0x00000031)   // 49 (49)
0x000007CA: 0x8102            - O_CRITTER_ADD_TRAIT
0x000007CC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000007D2: 0x800D            - O_D_TO_A
0x000007D4: 0x8019            - O_SWAPA
0x000007D6: 0x802A            - O_POP_TO_BASE
0x000007D8: 0x8029            - O_POP_BASE
0x000007DA: 0x800C            - O_A_TO_D
0x000007DC: 0x801C            - O_POP_RETURN
0x000007DE: 0x802A            - O_POP_TO_BASE
0x000007E0: 0x8029            - O_POP_BASE
0x000007E2: 0x801C            - O_POP_RETURN

5: look_at_p_proc (0x000007e4)
===============================
0x000007E4: 0x802B            - O_PUSH_BASE
0x000007E6: 0x80B9            - O_SCRIPT_OVERRIDES
0x000007E8: 0xC001 0x00000810 - O_INTOP(0x00000810)   // 2064 (2064)
0x000007EE: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000007F4: 0x80C1            - O_LOCAL_VAR
0x000007F6: 0x802F            - O_IF
0x000007F8: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x000007FE: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x00000804: 0x8105            - O_MESSAGE_STR
0x00000806: 0x80B8            - O_DISPLAY_MSG
0x00000808: 0xC001 0x00000820 - O_INTOP(0x00000820)   // 2080 (2080)
0x0000080E: 0x8004            - O_JMP
0x00000810: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x00000816: 0xC001 0x00000065 - O_INTOP(0x00000065)   // 101 (101)
0x0000081C: 0x8105            - O_MESSAGE_STR
0x0000081E: 0x80B8            - O_DISPLAY_MSG
0x00000820: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000826: 0x800D            - O_D_TO_A
0x00000828: 0x8019            - O_SWAPA
0x0000082A: 0x802A            - O_POP_TO_BASE
0x0000082C: 0x8029            - O_POP_BASE
0x0000082E: 0x800C            - O_A_TO_D
0x00000830: 0x801C            - O_POP_RETURN
0x00000832: 0x802A            - O_POP_TO_BASE
0x00000834: 0x8029            - O_POP_BASE
0x00000836: 0x801C            - O_POP_RETURN

6: pickup_p_proc (0x00000838)
===============================
0x00000838: 0x802B            - O_PUSH_BASE
0x0000083A: 0xC001 0x000000fb - O_INTOP(0x000000fb)   // 251 (251)
0x00000840: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000846: 0x80C6            - O_SET_GLOBAL_VAR
0x00000848: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000084E: 0x800D            - O_D_TO_A
0x00000850: 0x8019            - O_SWAPA
0x00000852: 0x802A            - O_POP_TO_BASE
0x00000854: 0x8029            - O_POP_BASE
0x00000856: 0x800C            - O_A_TO_D
0x00000858: 0x801C            - O_POP_RETURN
0x0000085A: 0x802A            - O_POP_TO_BASE
0x0000085C: 0x8029            - O_POP_BASE
0x0000085E: 0x801C            - O_POP_RETURN

7: talk_p_proc (0x00000860)
===============================
0x00000860: 0x802B            - O_PUSH_BASE
0x00000862: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x00000868: 0x80BC            - O_SELF_OBJ
0x0000086A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000870: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000876: 0x8046            - O_NEGATE
0x00000878: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000087E: 0x8046            - O_NEGATE
0x00000880: 0x80DE            - O_START_GDIALOG
0x00000882: 0x811C            - O_GSAY_START
0x00000884: 0xC001 0x000008b4 - O_INTOP(0x000008b4)   // 2228 (2228)
0x0000088A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000890: 0x80C1            - O_LOCAL_VAR
0x00000892: 0x802F            - O_IF
0x00000894: 0xC001 0x000008aa - O_INTOP(0x000008aa)   // 2218 (2218)
0x0000089A: 0x800D            - O_D_TO_A
0x0000089C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000008A2: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x000008A8: 0x8005            - O_CALL
0x000008AA: 0x801A            - O_POP
0x000008AC: 0xC001 0x000008cc - O_INTOP(0x000008cc)   // 2252 (2252)
0x000008B2: 0x8004            - O_JMP
0x000008B4: 0xC001 0x000008ca - O_INTOP(0x000008ca)   // 2250 (2250)
0x000008BA: 0x800D            - O_D_TO_A
0x000008BC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000008C2: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x000008C8: 0x8005            - O_CALL
0x000008CA: 0x801A            - O_POP
0x000008CC: 0x811D            - O_GSAY_END
0x000008CE: 0x80DF            - O_END_DIALOGUE
0x000008D0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000008D6: 0x800D            - O_D_TO_A
0x000008D8: 0x8019            - O_SWAPA
0x000008DA: 0x802A            - O_POP_TO_BASE
0x000008DC: 0x8029            - O_POP_BASE
0x000008DE: 0x800C            - O_A_TO_D
0x000008E0: 0x801C            - O_POP_RETURN
0x000008E2: 0x802A            - O_POP_TO_BASE
0x000008E4: 0x8029            - O_POP_BASE
0x000008E6: 0x801C            - O_POP_RETURN

8: Sammael01 (0x000008e8)
===============================
0x000008E8: 0x802B            - O_PUSH_BASE
0x000008EA: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x000008F0: 0xC001 0x00000066 - O_INTOP(0x00000066)   // 102 (102)
0x000008F6: 0x811E            - O_GSAY_REPLY
0x000008F8: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000008FE: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x00000904: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x0000090A: 0xC001 0x00000067 - O_INTOP(0x00000067)   // 103 (103)
0x00000910: 0x8105            - O_MESSAGE_STR
0x00000912: 0x80BF            - O_DUDE_OBJ
0x00000914: 0x8100            - O_OBJ_PID
0x00000916: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000091C: 0x8104            - O_PROTO_DATA
0x0000091E: 0x8039            - O_ADD
0x00000920: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x00000926: 0xC001 0x00000068 - O_INTOP(0x00000068)   // 104 (104)
0x0000092C: 0x8105            - O_MESSAGE_STR
0x0000092E: 0x8039            - O_ADD
0x00000930: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x00000936: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000093C: 0x8121            - O_GIQ_OPTION
0x0000093E: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000944: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x0000094A: 0xC001 0x00000069 - O_INTOP(0x00000069)   // 105 (105)
0x00000950: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00000956: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000095C: 0x8121            - O_GIQ_OPTION
0x0000095E: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000964: 0x8046            - O_NEGATE
0x00000966: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x0000096C: 0xC001 0x0000006a - O_INTOP(0x0000006a)   // 106 (106)
0x00000972: 0xC001 0x00000016 - O_INTOP(0x00000016)   // 22 (22)
0x00000978: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000097E: 0x8121            - O_GIQ_OPTION
0x00000980: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000986: 0x800D            - O_D_TO_A
0x00000988: 0x8019            - O_SWAPA
0x0000098A: 0x802A            - O_POP_TO_BASE
0x0000098C: 0x8029            - O_POP_BASE
0x0000098E: 0x800C            - O_A_TO_D
0x00000990: 0x801C            - O_POP_RETURN
0x00000992: 0x802A            - O_POP_TO_BASE
0x00000994: 0x8029            - O_POP_BASE
0x00000996: 0x801C            - O_POP_RETURN

9: Sammael02 (0x00000998)
===============================
0x00000998: 0x802B            - O_PUSH_BASE
0x0000099A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000009A0: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000009A6: 0x80C2            - O_SET_LOCAL_VAR
0x000009A8: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x000009AE: 0xC001 0x0000006b - O_INTOP(0x0000006b)   // 107 (107)
0x000009B4: 0x811E            - O_GSAY_REPLY
0x000009B6: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000009BC: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x000009C2: 0xC001 0x0000006c - O_INTOP(0x0000006c)   // 108 (108)
0x000009C8: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000009CE: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000009D4: 0x8121            - O_GIQ_OPTION
0x000009D6: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000009DC: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x000009E2: 0xC001 0x0000006d - O_INTOP(0x0000006d)   // 109 (109)
0x000009E8: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x000009EE: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000009F4: 0x8121            - O_GIQ_OPTION
0x000009F6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000009FC: 0x800D            - O_D_TO_A
0x000009FE: 0x8019            - O_SWAPA
0x00000A00: 0x802A            - O_POP_TO_BASE
0x00000A02: 0x8029            - O_POP_BASE
0x00000A04: 0x800C            - O_A_TO_D
0x00000A06: 0x801C            - O_POP_RETURN
0x00000A08: 0x802A            - O_POP_TO_BASE
0x00000A0A: 0x8029            - O_POP_BASE
0x00000A0C: 0x801C            - O_POP_RETURN

10: Sammael03 (0x00000a0e)
===============================
0x00000A0E: 0x802B            - O_PUSH_BASE
0x00000A10: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x00000A16: 0xC001 0x0000006e - O_INTOP(0x0000006e)   // 110 (110)
0x00000A1C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000A22: 0x8120            - O_GSAY_MESSAGE
0x00000A24: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A2A: 0x800D            - O_D_TO_A
0x00000A2C: 0x8019            - O_SWAPA
0x00000A2E: 0x802A            - O_POP_TO_BASE
0x00000A30: 0x8029            - O_POP_BASE
0x00000A32: 0x800C            - O_A_TO_D
0x00000A34: 0x801C            - O_POP_RETURN
0x00000A36: 0x802A            - O_POP_TO_BASE
0x00000A38: 0x8029            - O_POP_BASE
0x00000A3A: 0x801C            - O_POP_RETURN

11: Sammael04 (0x00000a3c)
===============================
0x00000A3C: 0x802B            - O_PUSH_BASE
0x00000A3E: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x00000A44: 0xC001 0x0000006f - O_INTOP(0x0000006f)   // 111 (111)
0x00000A4A: 0x811E            - O_GSAY_REPLY
0x00000A4C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000A52: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x00000A58: 0xC001 0x00000070 - O_INTOP(0x00000070)   // 112 (112)
0x00000A5E: 0xC001 0x0000000d - O_INTOP(0x0000000d)   // 13 (13)
0x00000A64: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000A6A: 0x8121            - O_GIQ_OPTION
0x00000A6C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000A72: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x00000A78: 0xC001 0x00000071 - O_INTOP(0x00000071)   // 113 (113)
0x00000A7E: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x00000A84: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000A8A: 0x8121            - O_GIQ_OPTION
0x00000A8C: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000A92: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x00000A98: 0xC001 0x00000072 - O_INTOP(0x00000072)   // 114 (114)
0x00000A9E: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x00000AA4: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000AAA: 0x8121            - O_GIQ_OPTION
0x00000AAC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000AB2: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x00000AB8: 0xC001 0x00000073 - O_INTOP(0x00000073)   // 115 (115)
0x00000ABE: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00000AC4: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000ACA: 0x8121            - O_GIQ_OPTION
0x00000ACC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000AD2: 0x800D            - O_D_TO_A
0x00000AD4: 0x8019            - O_SWAPA
0x00000AD6: 0x802A            - O_POP_TO_BASE
0x00000AD8: 0x8029            - O_POP_BASE
0x00000ADA: 0x800C            - O_A_TO_D
0x00000ADC: 0x801C            - O_POP_RETURN
0x00000ADE: 0x802A            - O_POP_TO_BASE
0x00000AE0: 0x8029            - O_POP_BASE
0x00000AE2: 0x801C            - O_POP_RETURN

12: Sammael05 (0x00000ae4)
===============================
0x00000AE4: 0x802B            - O_PUSH_BASE
0x00000AE6: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x00000AEC: 0xC001 0x00000074 - O_INTOP(0x00000074)   // 116 (116)
0x00000AF2: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000AF8: 0x8120            - O_GSAY_MESSAGE
0x00000AFA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000B00: 0x800D            - O_D_TO_A
0x00000B02: 0x8019            - O_SWAPA
0x00000B04: 0x802A            - O_POP_TO_BASE
0x00000B06: 0x8029            - O_POP_BASE
0x00000B08: 0x800C            - O_A_TO_D
0x00000B0A: 0x801C            - O_POP_RETURN
0x00000B0C: 0x802A            - O_POP_TO_BASE
0x00000B0E: 0x8029            - O_POP_BASE
0x00000B10: 0x801C            - O_POP_RETURN

13: Sammael06 (0x00000b12)
===============================
0x00000B12: 0x802B            - O_PUSH_BASE
0x00000B14: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x00000B1A: 0xC001 0x00000075 - O_INTOP(0x00000075)   // 117 (117)
0x00000B20: 0x811E            - O_GSAY_REPLY
0x00000B22: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000B28: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x00000B2E: 0xC001 0x00000076 - O_INTOP(0x00000076)   // 118 (118)
0x00000B34: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x00000B3A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000B40: 0x8121            - O_GIQ_OPTION
0x00000B42: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000B48: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x00000B4E: 0xC001 0x00000077 - O_INTOP(0x00000077)   // 119 (119)
0x00000B54: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x00000B5A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000B60: 0x8121            - O_GIQ_OPTION
0x00000B62: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000B68: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x00000B6E: 0xC001 0x00000078 - O_INTOP(0x00000078)   // 120 (120)
0x00000B74: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00000B7A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000B80: 0x8121            - O_GIQ_OPTION
0x00000B82: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000B88: 0x800D            - O_D_TO_A
0x00000B8A: 0x8019            - O_SWAPA
0x00000B8C: 0x802A            - O_POP_TO_BASE
0x00000B8E: 0x8029            - O_POP_BASE
0x00000B90: 0x800C            - O_A_TO_D
0x00000B92: 0x801C            - O_POP_RETURN
0x00000B94: 0x802A            - O_POP_TO_BASE
0x00000B96: 0x8029            - O_POP_BASE
0x00000B98: 0x801C            - O_POP_RETURN

14: Sammael07 (0x00000b9a)
===============================
0x00000B9A: 0x802B            - O_PUSH_BASE
0x00000B9C: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x00000BA2: 0xC001 0x00000079 - O_INTOP(0x00000079)   // 121 (121)
0x00000BA8: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000BAE: 0x8120            - O_GSAY_MESSAGE
0x00000BB0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000BB6: 0x800D            - O_D_TO_A
0x00000BB8: 0x8019            - O_SWAPA
0x00000BBA: 0x802A            - O_POP_TO_BASE
0x00000BBC: 0x8029            - O_POP_BASE
0x00000BBE: 0x800C            - O_A_TO_D
0x00000BC0: 0x801C            - O_POP_RETURN
0x00000BC2: 0x802A            - O_POP_TO_BASE
0x00000BC4: 0x8029            - O_POP_BASE
0x00000BC6: 0x801C            - O_POP_RETURN

15: Sammael08 (0x00000bc8)
===============================
0x00000BC8: 0x802B            - O_PUSH_BASE
0x00000BCA: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x00000BD0: 0xC001 0x0000007a - O_INTOP(0x0000007a)   // 122 (122)
0x00000BD6: 0x811E            - O_GSAY_REPLY
0x00000BD8: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000BDE: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x00000BE4: 0xC001 0x0000007b - O_INTOP(0x0000007b)   // 123 (123)
0x00000BEA: 0xC001 0x00000010 - O_INTOP(0x00000010)   // 16 (16)
0x00000BF0: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000BF6: 0x8121            - O_GIQ_OPTION
0x00000BF8: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000BFE: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x00000C04: 0xC001 0x0000007c - O_INTOP(0x0000007c)   // 124 (124)
0x00000C0A: 0xC001 0x00000011 - O_INTOP(0x00000011)   // 17 (17)
0x00000C10: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000C16: 0x8121            - O_GIQ_OPTION
0x00000C18: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000C1E: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x00000C24: 0xC001 0x0000007d - O_INTOP(0x0000007d)   // 125 (125)
0x00000C2A: 0xC001 0x00000012 - O_INTOP(0x00000012)   // 18 (18)
0x00000C30: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000C36: 0x8121            - O_GIQ_OPTION
0x00000C38: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000C3E: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x00000C44: 0xC001 0x0000007e - O_INTOP(0x0000007e)   // 126 (126)
0x00000C4A: 0xC001 0x00000013 - O_INTOP(0x00000013)   // 19 (19)
0x00000C50: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000C56: 0x8121            - O_GIQ_OPTION
0x00000C58: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000C5E: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x00000C64: 0xC001 0x0000007f - O_INTOP(0x0000007f)   // 127 (127)
0x00000C6A: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x00000C70: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000C76: 0x8121            - O_GIQ_OPTION
0x00000C78: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000C7E: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x00000C84: 0xC001 0x00000080 - O_INTOP(0x00000080)   // 128 (128)
0x00000C8A: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00000C90: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000C96: 0x8121            - O_GIQ_OPTION
0x00000C98: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000C9E: 0x800D            - O_D_TO_A
0x00000CA0: 0x8019            - O_SWAPA
0x00000CA2: 0x802A            - O_POP_TO_BASE
0x00000CA4: 0x8029            - O_POP_BASE
0x00000CA6: 0x800C            - O_A_TO_D
0x00000CA8: 0x801C            - O_POP_RETURN
0x00000CAA: 0x802A            - O_POP_TO_BASE
0x00000CAC: 0x8029            - O_POP_BASE
0x00000CAE: 0x801C            - O_POP_RETURN

16: Sammael09 (0x00000cb0)
===============================
0x00000CB0: 0x802B            - O_PUSH_BASE
0x00000CB2: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x00000CB8: 0xC001 0x00000081 - O_INTOP(0x00000081)   // 129 (129)
0x00000CBE: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000CC4: 0x8120            - O_GSAY_MESSAGE
0x00000CC6: 0xC001 0x00000cdc - O_INTOP(0x00000cdc)   // 3292 (3292)
0x00000CCC: 0x800D            - O_D_TO_A
0x00000CCE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000CD4: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x00000CDA: 0x8005            - O_CALL
0x00000CDC: 0x801A            - O_POP
0x00000CDE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000CE4: 0x800D            - O_D_TO_A
0x00000CE6: 0x8019            - O_SWAPA
0x00000CE8: 0x802A            - O_POP_TO_BASE
0x00000CEA: 0x8029            - O_POP_BASE
0x00000CEC: 0x800C            - O_A_TO_D
0x00000CEE: 0x801C            - O_POP_RETURN
0x00000CF0: 0x802A            - O_POP_TO_BASE
0x00000CF2: 0x8029            - O_POP_BASE
0x00000CF4: 0x801C            - O_POP_RETURN

17: Sammael10 (0x00000cf6)
===============================
0x00000CF6: 0x802B            - O_PUSH_BASE
0x00000CF8: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x00000CFE: 0xC001 0x00000082 - O_INTOP(0x00000082)   // 130 (130)
0x00000D04: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000D0A: 0x8120            - O_GSAY_MESSAGE
0x00000D0C: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x00000D12: 0xC001 0x00000083 - O_INTOP(0x00000083)   // 131 (131)
0x00000D18: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000D1E: 0x8120            - O_GSAY_MESSAGE
0x00000D20: 0xC001 0x00000d36 - O_INTOP(0x00000d36)   // 3382 (3382)
0x00000D26: 0x800D            - O_D_TO_A
0x00000D28: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D2E: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x00000D34: 0x8005            - O_CALL
0x00000D36: 0x801A            - O_POP
0x00000D38: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D3E: 0x800D            - O_D_TO_A
0x00000D40: 0x8019            - O_SWAPA
0x00000D42: 0x802A            - O_POP_TO_BASE
0x00000D44: 0x8029            - O_POP_BASE
0x00000D46: 0x800C            - O_A_TO_D
0x00000D48: 0x801C            - O_POP_RETURN
0x00000D4A: 0x802A            - O_POP_TO_BASE
0x00000D4C: 0x8029            - O_POP_BASE
0x00000D4E: 0x801C            - O_POP_RETURN

18: Sammael11 (0x00000d50)
===============================
0x00000D50: 0x802B            - O_PUSH_BASE
0x00000D52: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x00000D58: 0xC001 0x00000084 - O_INTOP(0x00000084)   // 132 (132)
0x00000D5E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000D64: 0x8120            - O_GSAY_MESSAGE
0x00000D66: 0xC001 0x00000d7c - O_INTOP(0x00000d7c)   // 3452 (3452)
0x00000D6C: 0x800D            - O_D_TO_A
0x00000D6E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D74: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x00000D7A: 0x8005            - O_CALL
0x00000D7C: 0x801A            - O_POP
0x00000D7E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D84: 0x800D            - O_D_TO_A
0x00000D86: 0x8019            - O_SWAPA
0x00000D88: 0x802A            - O_POP_TO_BASE
0x00000D8A: 0x8029            - O_POP_BASE
0x00000D8C: 0x800C            - O_A_TO_D
0x00000D8E: 0x801C            - O_POP_RETURN
0x00000D90: 0x802A            - O_POP_TO_BASE
0x00000D92: 0x8029            - O_POP_BASE
0x00000D94: 0x801C            - O_POP_RETURN

19: Sammael12 (0x00000d96)
===============================
0x00000D96: 0x802B            - O_PUSH_BASE
0x00000D98: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x00000D9E: 0xC001 0x00000085 - O_INTOP(0x00000085)   // 133 (133)
0x00000DA4: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000DAA: 0x8120            - O_GSAY_MESSAGE
0x00000DAC: 0xC001 0x00000dc2 - O_INTOP(0x00000dc2)   // 3522 (3522)
0x00000DB2: 0x800D            - O_D_TO_A
0x00000DB4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000DBA: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x00000DC0: 0x8005            - O_CALL
0x00000DC2: 0x801A            - O_POP
0x00000DC4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000DCA: 0x800D            - O_D_TO_A
0x00000DCC: 0x8019            - O_SWAPA
0x00000DCE: 0x802A            - O_POP_TO_BASE
0x00000DD0: 0x8029            - O_POP_BASE
0x00000DD2: 0x800C            - O_A_TO_D
0x00000DD4: 0x801C            - O_POP_RETURN
0x00000DD6: 0x802A            - O_POP_TO_BASE
0x00000DD8: 0x8029            - O_POP_BASE
0x00000DDA: 0x801C            - O_POP_RETURN

20: Sammael13 (0x00000ddc)
===============================
0x00000DDC: 0x802B            - O_PUSH_BASE
0x00000DDE: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x00000DE4: 0xC001 0x00000086 - O_INTOP(0x00000086)   // 134 (134)
0x00000DEA: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000DF0: 0x8120            - O_GSAY_MESSAGE
0x00000DF2: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x00000DF8: 0xC001 0x00000087 - O_INTOP(0x00000087)   // 135 (135)
0x00000DFE: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000E04: 0x8120            - O_GSAY_MESSAGE
0x00000E06: 0xC001 0x00000e1c - O_INTOP(0x00000e1c)   // 3612 (3612)
0x00000E0C: 0x800D            - O_D_TO_A
0x00000E0E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E14: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x00000E1A: 0x8005            - O_CALL
0x00000E1C: 0x801A            - O_POP
0x00000E1E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E24: 0x800D            - O_D_TO_A
0x00000E26: 0x8019            - O_SWAPA
0x00000E28: 0x802A            - O_POP_TO_BASE
0x00000E2A: 0x8029            - O_POP_BASE
0x00000E2C: 0x800C            - O_A_TO_D
0x00000E2E: 0x801C            - O_POP_RETURN
0x00000E30: 0x802A            - O_POP_TO_BASE
0x00000E32: 0x8029            - O_POP_BASE
0x00000E34: 0x801C            - O_POP_RETURN

21: Sammael14 (0x00000e36)
===============================
0x00000E36: 0x802B            - O_PUSH_BASE
0x00000E38: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x00000E3E: 0xC001 0x00000088 - O_INTOP(0x00000088)   // 136 (136)
0x00000E44: 0x811E            - O_GSAY_REPLY
0x00000E46: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000E4C: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x00000E52: 0xC001 0x00000089 - O_INTOP(0x00000089)   // 137 (137)
0x00000E58: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00000E5E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000E64: 0x8121            - O_GIQ_OPTION
0x00000E66: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000E6C: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x00000E72: 0xC001 0x0000008a - O_INTOP(0x0000008a)   // 138 (138)
0x00000E78: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00000E7E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000E84: 0x8121            - O_GIQ_OPTION
0x00000E86: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E8C: 0x800D            - O_D_TO_A
0x00000E8E: 0x8019            - O_SWAPA
0x00000E90: 0x802A            - O_POP_TO_BASE
0x00000E92: 0x8029            - O_POP_BASE
0x00000E94: 0x800C            - O_A_TO_D
0x00000E96: 0x801C            - O_POP_RETURN
0x00000E98: 0x802A            - O_POP_TO_BASE
0x00000E9A: 0x8029            - O_POP_BASE
0x00000E9C: 0x801C            - O_POP_RETURN

22: Sammael15 (0x00000e9e)
===============================
0x00000E9E: 0x802B            - O_PUSH_BASE
0x00000EA0: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x00000EA6: 0xC001 0x0000008b - O_INTOP(0x0000008b)   // 139 (139)
0x00000EAC: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000EB2: 0x8120            - O_GSAY_MESSAGE
0x00000EB4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000EBA: 0x800D            - O_D_TO_A
0x00000EBC: 0x8019            - O_SWAPA
0x00000EBE: 0x802A            - O_POP_TO_BASE
0x00000EC0: 0x8029            - O_POP_BASE
0x00000EC2: 0x800C            - O_A_TO_D
0x00000EC4: 0x801C            - O_POP_RETURN
0x00000EC6: 0x802A            - O_POP_TO_BASE
0x00000EC8: 0x8029            - O_POP_BASE
0x00000ECA: 0x801C            - O_POP_RETURN

