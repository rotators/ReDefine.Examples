Fallout script decompiler, version 8.4.6 (sfall edition)
Copyright (C) Anchorite (TeamX), 2005-2009
anchorite2001@yandex.ru
Continued by Nirran, phobos2077, Mr.Stalin (2014-2020)
Crossplatformed by alexeevdv (2015)
Loading file Games/Fallout2.Steam/scripts/JULIANNA.int...
  Read startup code
  Read procedures table
  Read namespace
  Read stringspace
  Read tail of startup code
    Check "Jump to 'start' procedure" / "Jump to end of statup code"
    Check "# of argument to 'start' procedure"
    Extract "Export var" section
    Extract "Set exported var values" section
    Extract "Export procedures" section
    Extract "Global variables" section
  Read procedure's bodies
    Procedure: 0
    Procedure: 1
    Procedure: 2
    Procedure: 3
    Procedure: 4
    Procedure: 5
    Procedure: 6
    Procedure: 7
    Procedure: 8
    Procedure: 9
    Procedure: 10
    Procedure: 11
    Procedure: 12
    Procedure: 13
    Procedure: 14
    Procedure: 15
    Procedure: 16
    Procedure: 17
    Procedure: 18
    Procedure: 19
    Procedure: 20
    Procedure: 21
    Procedure: 22
    Procedure: 23
    Procedure: 24
    Procedure: 25
    Procedure: 26
    Procedure: 27
    Procedure: 28
    Procedure: 29
    Procedure: 30
    Procedure: 31
    Procedure: 32
    Procedure: 33
File Games/Fallout2.Steam/scripts/JULIANNA.int loaded successfuly

Decompiling...
  Init definitions
  Processing code
    Intial reducing
    Building execution tree
        Procedure: 0
        Procedure: 1
        Procedure: 2
        Procedure: 3
        Procedure: 4
        Procedure: 5
        Procedure: 6
        Procedure: 7
        Procedure: 8
        Procedure: 9
        Procedure: 10
        Procedure: 11
        Procedure: 12
        Procedure: 13
        Procedure: 14
        Procedure: 15
        Procedure: 16
        Procedure: 17
        Procedure: 18
        Procedure: 19
        Procedure: 20
        Procedure: 21
        Procedure: 22
        Procedure: 23
        Procedure: 24
        Procedure: 25
        Procedure: 26
        Procedure: 27
        Procedure: 28
        Procedure: 29
        Procedure: 30
        Procedure: 31
        Procedure: 32
        Procedure: 33
    Extracting and reducing conditions
    Setting borders of blocks
        Procedure: 0
        Procedure: 1
Error: Conditional expression left in stack

============== Procedures table ==================

======== Procedure 0 ========
Name offset:       0x00000006
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000060C
Number of args:    0x00000000  // 0

======== Procedure 1 ========
Name offset:       0x00000018
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000060C
Number of args:    0x00000000  // 0

======== Procedure 2 ========
Name offset:       0x00000020
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000083A
Number of args:    0x00000000  // 0

======== Procedure 3 ========
Name offset:       0x00000032
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000008BE
Number of args:    0x00000000  // 0

======== Procedure 4 ========
Name offset:       0x00000042
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000090A
Number of args:    0x00000000  // 0

======== Procedure 5 ========
Name offset:       0x00000054
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000A8C
Number of args:    0x00000000  // 0

======== Procedure 6 ========
Name offset:       0x00000066
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000AE0
Number of args:    0x00000000  // 0

======== Procedure 7 ========
Name offset:       0x00000076
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000B08
Number of args:    0x00000000  // 0

======== Procedure 8 ========
Name offset:       0x00000084
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000C1E
Number of args:    0x00000000  // 0

======== Procedure 9 ========
Name offset:       0x0000009A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000C70
Number of args:    0x00000000  // 0

======== Procedure 10 ========
Name offset:       0x000000A6
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000D44
Number of args:    0x00000000  // 0

======== Procedure 11 ========
Name offset:       0x000000B4
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000E18
Number of args:    0x00000000  // 0

======== Procedure 12 ========
Name offset:       0x000000C2
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000E8E
Number of args:    0x00000000  // 0

======== Procedure 13 ========
Name offset:       0x000000D0
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000F10
Number of args:    0x00000000  // 0

======== Procedure 14 ========
Name offset:       0x000000DE
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000F72
Number of args:    0x00000000  // 0

======== Procedure 15 ========
Name offset:       0x000000EC
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000FD4
Number of args:    0x00000000  // 0

======== Procedure 16 ========
Name offset:       0x000000FA
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000106E
Number of args:    0x00000000  // 0

======== Procedure 17 ========
Name offset:       0x00000108
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000010AC
Number of args:    0x00000000  // 0

======== Procedure 18 ========
Name offset:       0x00000116
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001126
Number of args:    0x00000000  // 0

======== Procedure 19 ========
Name offset:       0x00000124
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001194
Number of args:    0x00000000  // 0

======== Procedure 20 ========
Name offset:       0x00000132
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000011C2
Number of args:    0x00000000  // 0

======== Procedure 21 ========
Name offset:       0x00000140
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000011DC
Number of args:    0x00000000  // 0

======== Procedure 22 ========
Name offset:       0x000001AE
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000141C
Number of args:    0x00000000  // 0

======== Procedure 23 ========
Name offset:       0x000001BE
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000016AE
Number of args:    0x00000000  // 0

======== Procedure 24 ========
Name offset:       0x000001CE
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001732
Number of args:    0x00000000  // 0

======== Procedure 25 ========
Name offset:       0x000001DE
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000017CE
Number of args:    0x00000000  // 0

======== Procedure 26 ========
Name offset:       0x000001E8
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001818
Number of args:    0x00000000  // 0

======== Procedure 27 ========
Name offset:       0x000001F4
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001862
Number of args:    0x00000000  // 0

======== Procedure 28 ========
Name offset:       0x00000202
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001898
Number of args:    0x00000000  // 0

======== Procedure 29 ========
Name offset:       0x0000020E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000018CE
Number of args:    0x00000000  // 0

======== Procedure 30 ========
Name offset:       0x0000021C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001918
Number of args:    0x00000000  // 0

======== Procedure 31 ========
Name offset:       0x0000022C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001962
Number of args:    0x00000000  // 0

======== Procedure 32 ========
Name offset:       0x0000023C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000019D2
Number of args:    0x00000000  // 0

======== Procedure 33 ========
Name offset:       0x0000024E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001A42
Number of args:    0x00000000  // 0



============== Namespace ==================
0x00000006: ".............."
0x00000018: "start"
0x00000020: "critter_p_proc"
0x00000032: "damage_p_proc"
0x00000042: "destroy_p_proc"
0x00000054: "look_at_p_proc"
0x00000066: "pickup_p_proc"
0x00000076: "talk_p_proc"
0x00000084: "timed_event_p_proc"
0x0000009A: "flee_dude"
0x000000A6: "Julianna01"
0x000000B4: "Julianna02"
0x000000C2: "Julianna03"
0x000000D0: "Julianna04"
0x000000DE: "Julianna05"
0x000000EC: "Julianna06"
0x000000FA: "Julianna07"
0x00000108: "Julianna08"
0x00000116: "Julianna09"
0x00000124: "Julianna10"
0x00000132: "JuliannaEnd"
0x00000140: "sleeping"
0x0000014C: "night_person"
0x0000015C: "wake_time"
0x00000168: "sleep_time"
0x00000176: "home_tile"
0x00000182: "sleep_tile"
0x00000190: "initialized"
0x0000019E: "round_counter"
0x000001AE: "get_reaction"
0x000001BE: "ReactToLevel"
0x000001CE: "LevelToReact"
0x000001DE: "UpReact"
0x000001E8: "DownReact"
0x000001F4: "BottomReact"
0x00000202: "TopReact"
0x0000020E: "BigUpReact"
0x0000021C: "BigDownReact"
0x0000022C: "UpReactLevel"
0x0000023C: "DownReactLevel"
0x0000024E: "Goodbyes"
0x0000025A: "exit_line"
==================
42 item(s)



============== Stringspace ==================
Empty


============== Global variables values ==================
0: O_INTOP(0x00000000)   // 0 (0)
1: O_INTOP(0x00000000)   // 0 (0)
2: O_INTOP(0x00000000)   // 0 (0)
3: O_INTOP(0x00000000)   // 0 (0)
4: O_INTOP(0x00000000)   // 0 (0)
5: O_INTOP(0x00000000)   // 0 (0)
6: O_INTOP(0x00000000)   // 0 (0)
7: O_INTOP(0x00000000)   // 0 (0)


============== Exported variables ==================
Not found


============== Procedures ==================

0: .............. (0x0000060c)
===============================

1: start (0x0000060c)
===============================
0x0000060C: 0x802B            - O_PUSH_BASE
0x0000060E: 0xC001 0x000006cc - O_INTOP(0x000006cc)   // 1740 (1740)
0x00000614: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x0000061A: 0x8012            - O_FETCH_GLOBAL
0x0000061C: 0x8045            - O_NOT
0x0000061E: 0x802F            - O_IF
0x00000620: 0xC001 0x00000668 - O_INTOP(0x00000668)   // 1640 (1640)
0x00000626: 0xC001 0x00000265 - O_INTOP(0x00000265)   // 613 (613)
0x0000062C: 0x80C5            - O_GLOBAL_VAR
0x0000062E: 0xC001 0x0000238f - O_INTOP(0x0000238f)   // 9103 (9103)
0x00000634: 0x8033            - O_EQUAL
0x00000636: 0xC001 0x00000265 - O_INTOP(0x00000265)   // 613 (613)
0x0000063C: 0x80C5            - O_GLOBAL_VAR
0x0000063E: 0xC001 0x0000238e - O_INTOP(0x0000238e)   // 9102 (9102)
0x00000644: 0x8033            - O_EQUAL
0x00000646: 0x803F            - O_OR
0x00000648: 0x802F            - O_IF
0x0000064A: 0x80BC            - O_SELF_OBJ
0x0000064C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000652: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000658: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000065E: 0x8102            - O_CRITTER_ADD_TRAIT
0x00000660: 0xC001 0x0000067e - O_INTOP(0x0000067e)   // 1662 (1662)
0x00000666: 0x8004            - O_JMP
0x00000668: 0x80BC            - O_SELF_OBJ
0x0000066A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000670: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000676: 0xC001 0x00000031 - O_INTOP(0x00000031)   // 49 (49)
0x0000067C: 0x8102            - O_CRITTER_ADD_TRAIT
0x0000067E: 0xC001 0x0000078a - O_INTOP(0x0000078a)   // 1930 (1930)
0x00000684: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x0000068A: 0x8013            - O_STORE_GLOBAL
0x0000068C: 0xC001 0x0000033e - O_INTOP(0x0000033e)   // 830 (830)
0x00000692: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000698: 0x8013            - O_STORE_GLOBAL
0x0000069A: 0xC001 0x00005a6f - O_INTOP(0x00005a6f)   // 23151 (23151)
0x000006A0: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000006A6: 0x8013            - O_STORE_GLOBAL
0x000006A8: 0xC001 0x000058dd - O_INTOP(0x000058dd)   // 22749 (22749)
0x000006AE: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000006B4: 0x8013            - O_STORE_GLOBAL
0x000006B6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000006BC: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000006C2: 0x8013            - O_STORE_GLOBAL
0x000006C4: 0xC001 0x00000822 - O_INTOP(0x00000822)   // 2082 (2082)
0x000006CA: 0x8004            - O_JMP
0x000006CC: 0xC001 0x000006fe - O_INTOP(0x000006fe)   // 1790 (1790)
0x000006D2: 0x80C7            - O_SCRIPT_ACTION
0x000006D4: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x000006DA: 0x8033            - O_EQUAL
0x000006DC: 0x802F            - O_IF
0x000006DE: 0xC001 0x000006f4 - O_INTOP(0x000006f4)   // 1780 (1780)
0x000006E4: 0x800D            - O_D_TO_A
0x000006E6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000006EC: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000006F2: 0x8005            - O_CALL
0x000006F4: 0x801A            - O_POP
0x000006F6: 0xC001 0x00000822 - O_INTOP(0x00000822)   // 2082 (2082)
0x000006FC: 0x8004            - O_JMP
0x000006FE: 0xC001 0x00000730 - O_INTOP(0x00000730)   // 1840 (1840)
0x00000704: 0x80C7            - O_SCRIPT_ACTION
0x00000706: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x0000070C: 0x8033            - O_EQUAL
0x0000070E: 0x802F            - O_IF
0x00000710: 0xC001 0x00000726 - O_INTOP(0x00000726)   // 1830 (1830)
0x00000716: 0x800D            - O_D_TO_A
0x00000718: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000071E: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000724: 0x8005            - O_CALL
0x00000726: 0x801A            - O_POP
0x00000728: 0xC001 0x00000822 - O_INTOP(0x00000822)   // 2082 (2082)
0x0000072E: 0x8004            - O_JMP
0x00000730: 0xC001 0x00000762 - O_INTOP(0x00000762)   // 1890 (1890)
0x00000736: 0x80C7            - O_SCRIPT_ACTION
0x00000738: 0xC001 0x00000012 - O_INTOP(0x00000012)   // 18 (18)
0x0000073E: 0x8033            - O_EQUAL
0x00000740: 0x802F            - O_IF
0x00000742: 0xC001 0x00000758 - O_INTOP(0x00000758)   // 1880 (1880)
0x00000748: 0x800D            - O_D_TO_A
0x0000074A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000750: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000756: 0x8005            - O_CALL
0x00000758: 0x801A            - O_POP
0x0000075A: 0xC001 0x00000822 - O_INTOP(0x00000822)   // 2082 (2082)
0x00000760: 0x8004            - O_JMP
0x00000762: 0xC001 0x00000794 - O_INTOP(0x00000794)   // 1940 (1940)
0x00000768: 0x80C7            - O_SCRIPT_ACTION
0x0000076A: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x00000770: 0x8033            - O_EQUAL
0x00000772: 0x802F            - O_IF
0x00000774: 0xC001 0x0000078a - O_INTOP(0x0000078a)   // 1930 (1930)
0x0000077A: 0x800D            - O_D_TO_A
0x0000077C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000782: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000788: 0x8005            - O_CALL
0x0000078A: 0x801A            - O_POP
0x0000078C: 0xC001 0x00000822 - O_INTOP(0x00000822)   // 2082 (2082)
0x00000792: 0x8004            - O_JMP
0x00000794: 0xC001 0x000007c6 - O_INTOP(0x000007c6)   // 1990 (1990)
0x0000079A: 0x80C7            - O_SCRIPT_ACTION
0x0000079C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000007A2: 0x8033            - O_EQUAL
0x000007A4: 0x802F            - O_IF
0x000007A6: 0xC001 0x000007bc - O_INTOP(0x000007bc)   // 1980 (1980)
0x000007AC: 0x800D            - O_D_TO_A
0x000007AE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000007B4: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x000007BA: 0x8005            - O_CALL
0x000007BC: 0x801A            - O_POP
0x000007BE: 0xC001 0x00000822 - O_INTOP(0x00000822)   // 2082 (2082)
0x000007C4: 0x8004            - O_JMP
0x000007C6: 0xC001 0x000007f8 - O_INTOP(0x000007f8)   // 2040 (2040)
0x000007CC: 0x80C7            - O_SCRIPT_ACTION
0x000007CE: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000007D4: 0x8033            - O_EQUAL
0x000007D6: 0x802F            - O_IF
0x000007D8: 0xC001 0x000007ee - O_INTOP(0x000007ee)   // 2030 (2030)
0x000007DE: 0x800D            - O_D_TO_A
0x000007E0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000007E6: 0xC001 0x00000007 - O_INTOP(0x00000007)   // 7 (7)
0x000007EC: 0x8005            - O_CALL
0x000007EE: 0x801A            - O_POP
0x000007F0: 0xC001 0x00000822 - O_INTOP(0x00000822)   // 2082 (2082)
0x000007F6: 0x8004            - O_JMP
0x000007F8: 0xC001 0x00000822 - O_INTOP(0x00000822)   // 2082 (2082)
0x000007FE: 0x80C7            - O_SCRIPT_ACTION
0x00000800: 0xC001 0x00000016 - O_INTOP(0x00000016)   // 22 (22)
0x00000806: 0x8033            - O_EQUAL
0x00000808: 0x802F            - O_IF
0x0000080A: 0xC001 0x00000820 - O_INTOP(0x00000820)   // 2080 (2080)
0x00000810: 0x800D            - O_D_TO_A
0x00000812: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000818: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x0000081E: 0x8005            - O_CALL
0x00000820: 0x801A            - O_POP
0x00000822: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000828: 0x800D            - O_D_TO_A
0x0000082A: 0x8019            - O_SWAPA
0x0000082C: 0x802A            - O_POP_TO_BASE
0x0000082E: 0x8029            - O_POP_BASE
0x00000830: 0x800C            - O_A_TO_D
0x00000832: 0x801C            - O_POP_RETURN
0x00000834: 0x802A            - O_POP_TO_BASE
0x00000836: 0x8029            - O_POP_BASE
0x00000838: 0x801C            - O_POP_RETURN

2: critter_p_proc (0x0000083a)
===============================
0x0000083A: 0x802B            - O_PUSH_BASE
0x0000083C: 0xC001 0x0000088e - O_INTOP(0x0000088e)   // 2190 (2190)
0x00000842: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000848: 0x80C1            - O_LOCAL_VAR
0x0000084A: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000850: 0x80C1            - O_LOCAL_VAR
0x00000852: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000858: 0x8033            - O_EQUAL
0x0000085A: 0x803E            - O_AND
0x0000085C: 0x80BC            - O_SELF_OBJ
0x0000085E: 0x80BF            - O_DUDE_OBJ
0x00000860: 0x80D3            - O_TILE_DISTANCE_OBJS
0x00000862: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x00000868: 0x8037            - O_LESS
0x0000086A: 0x803E            - O_AND
0x0000086C: 0x802F            - O_IF
0x0000086E: 0xC001 0x00000884 - O_INTOP(0x00000884)   // 2180 (2180)
0x00000874: 0x800D            - O_D_TO_A
0x00000876: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000087C: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x00000882: 0x8005            - O_CALL
0x00000884: 0x801A            - O_POP
0x00000886: 0xC001 0x000008a6 - O_INTOP(0x000008a6)   // 2214 (2214)
0x0000088C: 0x8004            - O_JMP
0x0000088E: 0xC001 0x000008a4 - O_INTOP(0x000008a4)   // 2212 (2212)
0x00000894: 0x800D            - O_D_TO_A
0x00000896: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000089C: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x000008A2: 0x8005            - O_CALL
0x000008A4: 0x801A            - O_POP
0x000008A6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000008AC: 0x800D            - O_D_TO_A
0x000008AE: 0x8019            - O_SWAPA
0x000008B0: 0x802A            - O_POP_TO_BASE
0x000008B2: 0x8029            - O_POP_BASE
0x000008B4: 0x800C            - O_A_TO_D
0x000008B6: 0x801C            - O_POP_RETURN
0x000008B8: 0x802A            - O_POP_TO_BASE
0x000008BA: 0x8029            - O_POP_BASE
0x000008BC: 0x801C            - O_POP_RETURN

3: damage_p_proc (0x000008be)
===============================
0x000008BE: 0x802B            - O_PUSH_BASE
0x000008C0: 0xC001 0x000008f2 - O_INTOP(0x000008f2)   // 2290 (2290)
0x000008C6: 0x80BD            - O_SOURCE_OBJ
0x000008C8: 0x80BF            - O_DUDE_OBJ
0x000008CA: 0x8033            - O_EQUAL
0x000008CC: 0x802F            - O_IF
0x000008CE: 0xC001 0x000000fb - O_INTOP(0x000000fb)   // 251 (251)
0x000008D4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000008DA: 0x80C6            - O_SET_GLOBAL_VAR
0x000008DC: 0x80BC            - O_SELF_OBJ
0x000008DE: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000008E4: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x000008EA: 0xC001 0x00000031 - O_INTOP(0x00000031)   // 49 (49)
0x000008F0: 0x8102            - O_CRITTER_ADD_TRAIT
0x000008F2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000008F8: 0x800D            - O_D_TO_A
0x000008FA: 0x8019            - O_SWAPA
0x000008FC: 0x802A            - O_POP_TO_BASE
0x000008FE: 0x8029            - O_POP_BASE
0x00000900: 0x800C            - O_A_TO_D
0x00000902: 0x801C            - O_POP_RETURN
0x00000904: 0x802A            - O_POP_TO_BASE
0x00000906: 0x8029            - O_POP_BASE
0x00000908: 0x801C            - O_POP_RETURN

4: destroy_p_proc (0x0000090a)
===============================
0x0000090A: 0x802B            - O_PUSH_BASE
0x0000090C: 0xC001 0x00000a74 - O_INTOP(0x00000a74)   // 2676 (2676)
0x00000912: 0x80BD            - O_SOURCE_OBJ
0x00000914: 0x80BF            - O_DUDE_OBJ
0x00000916: 0x8033            - O_EQUAL
0x00000918: 0x802F            - O_IF
0x0000091A: 0xC001 0x000000fb - O_INTOP(0x000000fb)   // 251 (251)
0x00000920: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000926: 0x80C6            - O_SET_GLOBAL_VAR
0x00000928: 0xC001 0x00000a5e - O_INTOP(0x00000a5e)   // 2654 (2654)
0x0000092E: 0x80BD            - O_SOURCE_OBJ
0x00000930: 0x80BF            - O_DUDE_OBJ
0x00000932: 0x8033            - O_EQUAL
0x00000934: 0x802F            - O_IF
0x00000936: 0xC001 0x000009a2 - O_INTOP(0x000009a2)   // 2466 (2466)
0x0000093C: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00000942: 0x80C5            - O_GLOBAL_VAR
0x00000944: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x0000094A: 0x80C5            - O_GLOBAL_VAR
0x0000094C: 0x8039            - O_ADD
0x0000094E: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00000954: 0x8036            - O_GREATER_EQUAL
0x00000956: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x0000095C: 0x80C5            - O_GLOBAL_VAR
0x0000095E: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000964: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x0000096A: 0x80C5            - O_GLOBAL_VAR
0x0000096C: 0x803B            - O_MUL
0x0000096E: 0x8038            - O_GREATER
0x00000970: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x00000976: 0x80C5            - O_GLOBAL_VAR
0x00000978: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000097E: 0x8033            - O_EQUAL
0x00000980: 0x803F            - O_OR
0x00000982: 0x803E            - O_AND
0x00000984: 0x802F            - O_IF
0x00000986: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x0000098C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000992: 0x80C6            - O_SET_GLOBAL_VAR
0x00000994: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x0000099A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000009A0: 0x80C6            - O_SET_GLOBAL_VAR
0x000009A2: 0xC001 0x00000a0e - O_INTOP(0x00000a0e)   // 2574 (2574)
0x000009A8: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x000009AE: 0x80C5            - O_GLOBAL_VAR
0x000009B0: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x000009B6: 0x80C5            - O_GLOBAL_VAR
0x000009B8: 0x8039            - O_ADD
0x000009BA: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x000009C0: 0x8036            - O_GREATER_EQUAL
0x000009C2: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x000009C8: 0x80C5            - O_GLOBAL_VAR
0x000009CA: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000009D0: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x000009D6: 0x80C5            - O_GLOBAL_VAR
0x000009D8: 0x803B            - O_MUL
0x000009DA: 0x8038            - O_GREATER
0x000009DC: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x000009E2: 0x80C5            - O_GLOBAL_VAR
0x000009E4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000009EA: 0x8033            - O_EQUAL
0x000009EC: 0x803F            - O_OR
0x000009EE: 0x803E            - O_AND
0x000009F0: 0x802F            - O_IF
0x000009F2: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x000009F8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000009FE: 0x80C6            - O_SET_GLOBAL_VAR
0x00000A00: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x00000A06: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A0C: 0x80C6            - O_SET_GLOBAL_VAR
0x00000A0E: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000A14: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000A1A: 0x80C5            - O_GLOBAL_VAR
0x00000A1C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000A22: 0x8039            - O_ADD
0x00000A24: 0x80C6            - O_SET_GLOBAL_VAR
0x00000A26: 0xC001 0x00000a5e - O_INTOP(0x00000a5e)   // 2654 (2654)
0x00000A2C: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000A32: 0x80C5            - O_GLOBAL_VAR
0x00000A34: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000A3A: 0x803D            - O_MOD
0x00000A3C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A42: 0x8033            - O_EQUAL
0x00000A44: 0x802F            - O_IF
0x00000A46: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00000A4C: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00000A52: 0x80C5            - O_GLOBAL_VAR
0x00000A54: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000A5A: 0x803A            - O_SUB
0x00000A5C: 0x80C6            - O_SET_GLOBAL_VAR
0x00000A5E: 0x80BC            - O_SELF_OBJ
0x00000A60: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000A66: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000A6C: 0xC001 0x00000031 - O_INTOP(0x00000031)   // 49 (49)
0x00000A72: 0x8102            - O_CRITTER_ADD_TRAIT
0x00000A74: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A7A: 0x800D            - O_D_TO_A
0x00000A7C: 0x8019            - O_SWAPA
0x00000A7E: 0x802A            - O_POP_TO_BASE
0x00000A80: 0x8029            - O_POP_BASE
0x00000A82: 0x800C            - O_A_TO_D
0x00000A84: 0x801C            - O_POP_RETURN
0x00000A86: 0x802A            - O_POP_TO_BASE
0x00000A88: 0x8029            - O_POP_BASE
0x00000A8A: 0x801C            - O_POP_RETURN

5: look_at_p_proc (0x00000a8c)
===============================
0x00000A8C: 0x802B            - O_PUSH_BASE
0x00000A8E: 0x80B9            - O_SCRIPT_OVERRIDES
0x00000A90: 0xC001 0x00000ab8 - O_INTOP(0x00000ab8)   // 2744 (2744)
0x00000A96: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000A9C: 0x80C1            - O_LOCAL_VAR
0x00000A9E: 0x802F            - O_IF
0x00000AA0: 0xC001 0x00000101 - O_INTOP(0x00000101)   // 257 (257)
0x00000AA6: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x00000AAC: 0x8105            - O_MESSAGE_STR
0x00000AAE: 0x80B8            - O_DISPLAY_MSG
0x00000AB0: 0xC001 0x00000ac8 - O_INTOP(0x00000ac8)   // 2760 (2760)
0x00000AB6: 0x8004            - O_JMP
0x00000AB8: 0xC001 0x00000101 - O_INTOP(0x00000101)   // 257 (257)
0x00000ABE: 0xC001 0x00000065 - O_INTOP(0x00000065)   // 101 (101)
0x00000AC4: 0x8105            - O_MESSAGE_STR
0x00000AC6: 0x80B8            - O_DISPLAY_MSG
0x00000AC8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000ACE: 0x800D            - O_D_TO_A
0x00000AD0: 0x8019            - O_SWAPA
0x00000AD2: 0x802A            - O_POP_TO_BASE
0x00000AD4: 0x8029            - O_POP_BASE
0x00000AD6: 0x800C            - O_A_TO_D
0x00000AD8: 0x801C            - O_POP_RETURN
0x00000ADA: 0x802A            - O_POP_TO_BASE
0x00000ADC: 0x8029            - O_POP_BASE
0x00000ADE: 0x801C            - O_POP_RETURN

6: pickup_p_proc (0x00000ae0)
===============================
0x00000AE0: 0x802B            - O_PUSH_BASE
0x00000AE2: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000AE8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000AEE: 0x80C2            - O_SET_LOCAL_VAR
0x00000AF0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000AF6: 0x800D            - O_D_TO_A
0x00000AF8: 0x8019            - O_SWAPA
0x00000AFA: 0x802A            - O_POP_TO_BASE
0x00000AFC: 0x8029            - O_POP_BASE
0x00000AFE: 0x800C            - O_A_TO_D
0x00000B00: 0x801C            - O_POP_RETURN
0x00000B02: 0x802A            - O_POP_TO_BASE
0x00000B04: 0x8029            - O_POP_BASE
0x00000B06: 0x801C            - O_POP_RETURN

7: talk_p_proc (0x00000b08)
===============================
0x00000B08: 0x802B            - O_PUSH_BASE
0x00000B0A: 0xC001 0x00000b3a - O_INTOP(0x00000b3a)   // 2874 (2874)
0x00000B10: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000B16: 0x80C1            - O_LOCAL_VAR
0x00000B18: 0x802F            - O_IF
0x00000B1A: 0x80BC            - O_SELF_OBJ
0x00000B1C: 0xC001 0x0000029d - O_INTOP(0x0000029d)   // 669 (669)
0x00000B22: 0xC001 0x00000066 - O_INTOP(0x00000066)   // 102 (102)
0x00000B28: 0x8105            - O_MESSAGE_STR
0x00000B2A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000B30: 0x810A            - O_FLOAT_MSG
0x00000B32: 0xC001 0x00000bb0 - O_INTOP(0x00000bb0)   // 2992 (2992)
0x00000B38: 0x8004            - O_JMP
0x00000B3A: 0xC001 0x00000101 - O_INTOP(0x00000101)   // 257 (257)
0x00000B40: 0x80BC            - O_SELF_OBJ
0x00000B42: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000B48: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000B4E: 0x8046            - O_NEGATE
0x00000B50: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000B56: 0x8046            - O_NEGATE
0x00000B58: 0x80DE            - O_START_GDIALOG
0x00000B5A: 0x811C            - O_GSAY_START
0x00000B5C: 0xC001 0x00000b94 - O_INTOP(0x00000b94)   // 2964 (2964)
0x00000B62: 0xC001 0x0000007f - O_INTOP(0x0000007f)   // 127 (127)
0x00000B68: 0x80C5            - O_GLOBAL_VAR
0x00000B6A: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000B70: 0x8037            - O_LESS
0x00000B72: 0x802F            - O_IF
0x00000B74: 0xC001 0x00000b8a - O_INTOP(0x00000b8a)   // 2954 (2954)
0x00000B7A: 0x800D            - O_D_TO_A
0x00000B7C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000B82: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00000B88: 0x8005            - O_CALL
0x00000B8A: 0x801A            - O_POP
0x00000B8C: 0xC001 0x00000bac - O_INTOP(0x00000bac)   // 2988 (2988)
0x00000B92: 0x8004            - O_JMP
0x00000B94: 0xC001 0x00000baa - O_INTOP(0x00000baa)   // 2986 (2986)
0x00000B9A: 0x800D            - O_D_TO_A
0x00000B9C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000BA2: 0xC001 0x00000013 - O_INTOP(0x00000013)   // 19 (19)
0x00000BA8: 0x8005            - O_CALL
0x00000BAA: 0x801A            - O_POP
0x00000BAC: 0x811D            - O_GSAY_END
0x00000BAE: 0x80DF            - O_END_DIALOGUE
0x00000BB0: 0xC001 0x00000c06 - O_INTOP(0x00000c06)   // 3078 (3078)
0x00000BB6: 0xC001 0x0000007f - O_INTOP(0x0000007f)   // 127 (127)
0x00000BBC: 0x80C5            - O_GLOBAL_VAR
0x00000BBE: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000BC4: 0x8033            - O_EQUAL
0x00000BC6: 0x802F            - O_IF
0x00000BC8: 0xC001 0x00000c06 - O_INTOP(0x00000c06)   // 3078 (3078)
0x00000BCE: 0xC001 0x00000007 - O_INTOP(0x00000007)   // 7 (7)
0x00000BD4: 0x80C1            - O_LOCAL_VAR
0x00000BD6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000BDC: 0x8033            - O_EQUAL
0x00000BDE: 0x802F            - O_IF
0x00000BE0: 0xC001 0x00000007 - O_INTOP(0x00000007)   // 7 (7)
0x00000BE6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000BEC: 0x80C2            - O_SET_LOCAL_VAR
0x00000BEE: 0xC001 0x00000101 - O_INTOP(0x00000101)   // 257 (257)
0x00000BF4: 0xC001 0x0000007e - O_INTOP(0x0000007e)   // 126 (126)
0x00000BFA: 0x8105            - O_MESSAGE_STR
0x00000BFC: 0x80B8            - O_DISPLAY_MSG
0x00000BFE: 0xC001 0x000000fa - O_INTOP(0x000000fa)   // 250 (250)
0x00000C04: 0x80A1            - O_GIVE_EXP_POINTS
0x00000C06: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000C0C: 0x800D            - O_D_TO_A
0x00000C0E: 0x8019            - O_SWAPA
0x00000C10: 0x802A            - O_POP_TO_BASE
0x00000C12: 0x8029            - O_POP_BASE
0x00000C14: 0x800C            - O_A_TO_D
0x00000C16: 0x801C            - O_POP_RETURN
0x00000C18: 0x802A            - O_POP_TO_BASE
0x00000C1A: 0x8029            - O_POP_BASE
0x00000C1C: 0x801C            - O_POP_RETURN

8: timed_event_p_proc (0x00000c1e)
===============================
0x00000C1E: 0x802B            - O_PUSH_BASE
0x00000C20: 0x80BC            - O_SELF_OBJ
0x00000C22: 0xC001 0x00000101 - O_INTOP(0x00000101)   // 257 (257)
0x00000C28: 0xC001 0x0000007c - O_INTOP(0x0000007c)   // 124 (124)
0x00000C2E: 0x8105            - O_MESSAGE_STR
0x00000C30: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000C36: 0x810A            - O_FLOAT_MSG
0x00000C38: 0xC001 0x00000101 - O_INTOP(0x00000101)   // 257 (257)
0x00000C3E: 0xC001 0x0000007d - O_INTOP(0x0000007d)   // 125 (125)
0x00000C44: 0x8105            - O_MESSAGE_STR
0x00000C46: 0x80B8            - O_DISPLAY_MSG
0x00000C48: 0x80BC            - O_SELF_OBJ
0x00000C4A: 0xC001 0x000000c8 - O_INTOP(0x000000c8)   // 200 (200)
0x00000C50: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000C56: 0x80EF            - O_CRITTER_DMG
0x00000C58: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000C5E: 0x800D            - O_D_TO_A
0x00000C60: 0x8019            - O_SWAPA
0x00000C62: 0x802A            - O_POP_TO_BASE
0x00000C64: 0x8029            - O_POP_BASE
0x00000C66: 0x800C            - O_A_TO_D
0x00000C68: 0x801C            - O_POP_RETURN
0x00000C6A: 0x802A            - O_POP_TO_BASE
0x00000C6C: 0x8029            - O_POP_BASE
0x00000C6E: 0x801C            - O_POP_RETURN

9: flee_dude (0x00000c70)
===============================
0x00000C70: 0x802B            - O_PUSH_BASE
0x00000C72: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000C78: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000C7E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000C84: 0xC001 0x00000d1a - O_INTOP(0x00000d1a)   // 3354 (3354)
0x00000C8A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000C90: 0x8032            - O_FETCH
0x00000C92: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000C98: 0x8037            - O_LESS
0x00000C9A: 0x8030            - O_WHILE
0x00000C9C: 0xC001 0x00000cfa - O_INTOP(0x00000cfa)   // 3322 (3322)
0x00000CA2: 0x80BF            - O_DUDE_OBJ
0x00000CA4: 0x80D4            - O_TILE_NUM
0x00000CA6: 0x80BC            - O_SELF_OBJ
0x00000CA8: 0x80D4            - O_TILE_NUM
0x00000CAA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000CB0: 0x8032            - O_FETCH
0x00000CB2: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000CB8: 0x80D5            - O_TILE_NUM_IN_DIRECTION
0x00000CBA: 0x80D2            - O_TILE_DISTANCE
0x00000CBC: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000CC2: 0x8032            - O_FETCH
0x00000CC4: 0x8038            - O_GREATER
0x00000CC6: 0x802F            - O_IF
0x00000CC8: 0x80BC            - O_SELF_OBJ
0x00000CCA: 0x80D4            - O_TILE_NUM
0x00000CCC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000CD2: 0x8032            - O_FETCH
0x00000CD4: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000CDA: 0x80D5            - O_TILE_NUM_IN_DIRECTION
0x00000CDC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000CE2: 0x8031            - O_STORE
0x00000CE4: 0x80BF            - O_DUDE_OBJ
0x00000CE6: 0x80D4            - O_TILE_NUM
0x00000CE8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000CEE: 0x8032            - O_FETCH
0x00000CF0: 0x80D2            - O_TILE_DISTANCE
0x00000CF2: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000CF8: 0x8031            - O_STORE
0x00000CFA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000D00: 0x8032            - O_FETCH
0x00000D02: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000D08: 0x8039            - O_ADD
0x00000D0A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000D10: 0x8031            - O_STORE
0x00000D12: 0xC001 0x00000c8a - O_INTOP(0x00000c8a)   // 3210 (3210)
0x00000D18: 0x8004            - O_JMP
0x00000D1A: 0x80BC            - O_SELF_OBJ
0x00000D1C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D22: 0x8032            - O_FETCH
0x00000D24: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D2A: 0x80CE            - O_ANIMATE_MOVE_OBJ_TO_TILE
0x00000D2C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D32: 0x800D            - O_D_TO_A
0x00000D34: 0x8019            - O_SWAPA
0x00000D36: 0x802A            - O_POP_TO_BASE
0x00000D38: 0x8029            - O_POP_BASE
0x00000D3A: 0x800C            - O_A_TO_D
0x00000D3C: 0x801C            - O_POP_RETURN
0x00000D3E: 0x802A            - O_POP_TO_BASE
0x00000D40: 0x8029            - O_POP_BASE
0x00000D42: 0x801C            - O_POP_RETURN

10: Julianna01 (0x00000d44)
===============================
0x00000D44: 0x802B            - O_PUSH_BASE
0x00000D46: 0xC001 0x00000101 - O_INTOP(0x00000101)   // 257 (257)
0x00000D4C: 0xC001 0x00000066 - O_INTOP(0x00000066)   // 102 (102)
0x00000D52: 0x811E            - O_GSAY_REPLY
0x00000D54: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000D5A: 0x8046            - O_NEGATE
0x00000D5C: 0xC001 0x00000101 - O_INTOP(0x00000101)   // 257 (257)
0x00000D62: 0xC001 0x00000067 - O_INTOP(0x00000067)   // 103 (103)
0x00000D68: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x00000D6E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000D74: 0x8121            - O_GIQ_OPTION
0x00000D76: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000D7C: 0xC001 0x00000101 - O_INTOP(0x00000101)   // 257 (257)
0x00000D82: 0xC001 0x00000068 - O_INTOP(0x00000068)   // 104 (104)
0x00000D88: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x00000D8E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000D94: 0x8121            - O_GIQ_OPTION
0x00000D96: 0xC001 0x00000dce - O_INTOP(0x00000dce)   // 3534 (3534)
0x00000D9C: 0xC001 0x0000007f - O_INTOP(0x0000007f)   // 127 (127)
0x00000DA2: 0x80C5            - O_GLOBAL_VAR
0x00000DA4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000DAA: 0x8033            - O_EQUAL
0x00000DAC: 0x802F            - O_IF
0x00000DAE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000DB4: 0xC001 0x00000101 - O_INTOP(0x00000101)   // 257 (257)
0x00000DBA: 0xC001 0x00000069 - O_INTOP(0x00000069)   // 105 (105)
0x00000DC0: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x00000DC6: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000DCC: 0x8121            - O_GIQ_OPTION
0x00000DCE: 0xC001 0x00000e00 - O_INTOP(0x00000e00)   // 3584 (3584)
0x00000DD4: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000DDA: 0x80C1            - O_LOCAL_VAR
0x00000DDC: 0x8045            - O_NOT
0x00000DDE: 0x802F            - O_IF
0x00000DE0: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000DE6: 0xC001 0x00000101 - O_INTOP(0x00000101)   // 257 (257)
0x00000DEC: 0xC001 0x0000006a - O_INTOP(0x0000006a)   // 106 (106)
0x00000DF2: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00000DF8: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000DFE: 0x8121            - O_GIQ_OPTION
0x00000E00: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E06: 0x800D            - O_D_TO_A
0x00000E08: 0x8019            - O_SWAPA
0x00000E0A: 0x802A            - O_POP_TO_BASE
0x00000E0C: 0x8029            - O_POP_BASE
0x00000E0E: 0x800C            - O_A_TO_D
0x00000E10: 0x801C            - O_POP_RETURN
0x00000E12: 0x802A            - O_POP_TO_BASE
0x00000E14: 0x8029            - O_POP_BASE
0x00000E16: 0x801C            - O_POP_RETURN

11: Julianna02 (0x00000e18)
===============================
0x00000E18: 0x802B            - O_PUSH_BASE
0x00000E1A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000E20: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000E26: 0x80C2            - O_SET_LOCAL_VAR
0x00000E28: 0xC001 0x00000101 - O_INTOP(0x00000101)   // 257 (257)
0x00000E2E: 0xC001 0x0000006b - O_INTOP(0x0000006b)   // 107 (107)
0x00000E34: 0x811E            - O_GSAY_REPLY
0x00000E36: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000E3C: 0xC001 0x00000101 - O_INTOP(0x00000101)   // 257 (257)
0x00000E42: 0xC001 0x0000006c - O_INTOP(0x0000006c)   // 108 (108)
0x00000E48: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00000E4E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000E54: 0x8121            - O_GIQ_OPTION
0x00000E56: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000E5C: 0xC001 0x00000101 - O_INTOP(0x00000101)   // 257 (257)
0x00000E62: 0xC001 0x0000006d - O_INTOP(0x0000006d)   // 109 (109)
0x00000E68: 0xC001 0x0000000d - O_INTOP(0x0000000d)   // 13 (13)
0x00000E6E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000E74: 0x8121            - O_GIQ_OPTION
0x00000E76: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E7C: 0x800D            - O_D_TO_A
0x00000E7E: 0x8019            - O_SWAPA
0x00000E80: 0x802A            - O_POP_TO_BASE
0x00000E82: 0x8029            - O_POP_BASE
0x00000E84: 0x800C            - O_A_TO_D
0x00000E86: 0x801C            - O_POP_RETURN
0x00000E88: 0x802A            - O_POP_TO_BASE
0x00000E8A: 0x8029            - O_POP_BASE
0x00000E8C: 0x801C            - O_POP_RETURN

12: Julianna03 (0x00000e8e)
===============================
0x00000E8E: 0x802B            - O_PUSH_BASE
0x00000E90: 0xC001 0x00000101 - O_INTOP(0x00000101)   // 257 (257)
0x00000E96: 0xC001 0x0000006e - O_INTOP(0x0000006e)   // 110 (110)
0x00000E9C: 0x811E            - O_GSAY_REPLY
0x00000E9E: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000EA4: 0xC001 0x00000101 - O_INTOP(0x00000101)   // 257 (257)
0x00000EAA: 0xC001 0x0000006f - O_INTOP(0x0000006f)   // 111 (111)
0x00000EB0: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x00000EB6: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000EBC: 0x8121            - O_GIQ_OPTION
0x00000EBE: 0xC001 0x00000ed4 - O_INTOP(0x00000ed4)   // 3796 (3796)
0x00000EC4: 0x800D            - O_D_TO_A
0x00000EC6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000ECC: 0xC001 0x00000021 - O_INTOP(0x00000021)   // 33 (33)
0x00000ED2: 0x8005            - O_CALL
0x00000ED4: 0x801A            - O_POP
0x00000ED6: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000EDC: 0xC001 0x0000027a - O_INTOP(0x0000027a)   // 634 (634)
0x00000EE2: 0xC001 0x00000007 - O_INTOP(0x00000007)   // 7 (7)
0x00000EE8: 0x8012            - O_FETCH_GLOBAL
0x00000EEA: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x00000EF0: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000EF6: 0x8121            - O_GIQ_OPTION
0x00000EF8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000EFE: 0x800D            - O_D_TO_A
0x00000F00: 0x8019            - O_SWAPA
0x00000F02: 0x802A            - O_POP_TO_BASE
0x00000F04: 0x8029            - O_POP_BASE
0x00000F06: 0x800C            - O_A_TO_D
0x00000F08: 0x801C            - O_POP_RETURN
0x00000F0A: 0x802A            - O_POP_TO_BASE
0x00000F0C: 0x8029            - O_POP_BASE
0x00000F0E: 0x801C            - O_POP_RETURN

13: Julianna04 (0x00000f10)
===============================
0x00000F10: 0x802B            - O_PUSH_BASE
0x00000F12: 0xC001 0x00000101 - O_INTOP(0x00000101)   // 257 (257)
0x00000F18: 0xC001 0x00000070 - O_INTOP(0x00000070)   // 112 (112)
0x00000F1E: 0x811E            - O_GSAY_REPLY
0x00000F20: 0xC001 0x00000f36 - O_INTOP(0x00000f36)   // 3894 (3894)
0x00000F26: 0x800D            - O_D_TO_A
0x00000F28: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F2E: 0xC001 0x00000021 - O_INTOP(0x00000021)   // 33 (33)
0x00000F34: 0x8005            - O_CALL
0x00000F36: 0x801A            - O_POP
0x00000F38: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000F3E: 0xC001 0x0000027a - O_INTOP(0x0000027a)   // 634 (634)
0x00000F44: 0xC001 0x00000007 - O_INTOP(0x00000007)   // 7 (7)
0x00000F4A: 0x8012            - O_FETCH_GLOBAL
0x00000F4C: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x00000F52: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000F58: 0x8121            - O_GIQ_OPTION
0x00000F5A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F60: 0x800D            - O_D_TO_A
0x00000F62: 0x8019            - O_SWAPA
0x00000F64: 0x802A            - O_POP_TO_BASE
0x00000F66: 0x8029            - O_POP_BASE
0x00000F68: 0x800C            - O_A_TO_D
0x00000F6A: 0x801C            - O_POP_RETURN
0x00000F6C: 0x802A            - O_POP_TO_BASE
0x00000F6E: 0x8029            - O_POP_BASE
0x00000F70: 0x801C            - O_POP_RETURN

14: Julianna05 (0x00000f72)
===============================
0x00000F72: 0x802B            - O_PUSH_BASE
0x00000F74: 0xC001 0x00000101 - O_INTOP(0x00000101)   // 257 (257)
0x00000F7A: 0xC001 0x00000071 - O_INTOP(0x00000071)   // 113 (113)
0x00000F80: 0x811E            - O_GSAY_REPLY
0x00000F82: 0xC001 0x00000f98 - O_INTOP(0x00000f98)   // 3992 (3992)
0x00000F88: 0x800D            - O_D_TO_A
0x00000F8A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F90: 0xC001 0x00000021 - O_INTOP(0x00000021)   // 33 (33)
0x00000F96: 0x8005            - O_CALL
0x00000F98: 0x801A            - O_POP
0x00000F9A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000FA0: 0xC001 0x0000027a - O_INTOP(0x0000027a)   // 634 (634)
0x00000FA6: 0xC001 0x00000007 - O_INTOP(0x00000007)   // 7 (7)
0x00000FAC: 0x8012            - O_FETCH_GLOBAL
0x00000FAE: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x00000FB4: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000FBA: 0x8121            - O_GIQ_OPTION
0x00000FBC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000FC2: 0x800D            - O_D_TO_A
0x00000FC4: 0x8019            - O_SWAPA
0x00000FC6: 0x802A            - O_POP_TO_BASE
0x00000FC8: 0x8029            - O_POP_BASE
0x00000FCA: 0x800C            - O_A_TO_D
0x00000FCC: 0x801C            - O_POP_RETURN
0x00000FCE: 0x802A            - O_POP_TO_BASE
0x00000FD0: 0x8029            - O_POP_BASE
0x00000FD2: 0x801C            - O_POP_RETURN

15: Julianna06 (0x00000fd4)
===============================
0x00000FD4: 0x802B            - O_PUSH_BASE
0x00000FD6: 0xC001 0x00000101 - O_INTOP(0x00000101)   // 257 (257)
0x00000FDC: 0xC001 0x00000072 - O_INTOP(0x00000072)   // 114 (114)
0x00000FE2: 0x811E            - O_GSAY_REPLY
0x00000FE4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000FEA: 0xC001 0x00000101 - O_INTOP(0x00000101)   // 257 (257)
0x00000FF0: 0xC001 0x00000073 - O_INTOP(0x00000073)   // 115 (115)
0x00000FF6: 0xC001 0x00000010 - O_INTOP(0x00000010)   // 16 (16)
0x00000FFC: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001002: 0x8121            - O_GIQ_OPTION
0x00001004: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000100A: 0xC001 0x00000101 - O_INTOP(0x00000101)   // 257 (257)
0x00001010: 0xC001 0x00000074 - O_INTOP(0x00000074)   // 116 (116)
0x00001016: 0xC001 0x00000011 - O_INTOP(0x00000011)   // 17 (17)
0x0000101C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001022: 0x8121            - O_GIQ_OPTION
0x00001024: 0xC001 0x00001056 - O_INTOP(0x00001056)   // 4182 (4182)
0x0000102A: 0x80BF            - O_DUDE_OBJ
0x0000102C: 0xC001 0x00000063 - O_INTOP(0x00000063)   // 99 (99)
0x00001032: 0x80BA            - O_OBJ_IS_CARRYING_OBJ_PID
0x00001034: 0x802F            - O_IF
0x00001036: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000103C: 0xC001 0x00000101 - O_INTOP(0x00000101)   // 257 (257)
0x00001042: 0xC001 0x00000075 - O_INTOP(0x00000075)   // 117 (117)
0x00001048: 0xC001 0x00000012 - O_INTOP(0x00000012)   // 18 (18)
0x0000104E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001054: 0x8121            - O_GIQ_OPTION
0x00001056: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000105C: 0x800D            - O_D_TO_A
0x0000105E: 0x8019            - O_SWAPA
0x00001060: 0x802A            - O_POP_TO_BASE
0x00001062: 0x8029            - O_POP_BASE
0x00001064: 0x800C            - O_A_TO_D
0x00001066: 0x801C            - O_POP_RETURN
0x00001068: 0x802A            - O_POP_TO_BASE
0x0000106A: 0x8029            - O_POP_BASE
0x0000106C: 0x801C            - O_POP_RETURN

16: Julianna07 (0x0000106e)
===============================
0x0000106E: 0x802B            - O_PUSH_BASE
0x00001070: 0xC001 0x00000101 - O_INTOP(0x00000101)   // 257 (257)
0x00001076: 0xC001 0x00000076 - O_INTOP(0x00000076)   // 118 (118)
0x0000107C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001082: 0x8120            - O_GSAY_MESSAGE
0x00001084: 0x80BC            - O_SELF_OBJ
0x00001086: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000108C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001092: 0x80F0            - O_ADD_TIMER_EVENT
0x00001094: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000109A: 0x800D            - O_D_TO_A
0x0000109C: 0x8019            - O_SWAPA
0x0000109E: 0x802A            - O_POP_TO_BASE
0x000010A0: 0x8029            - O_POP_BASE
0x000010A2: 0x800C            - O_A_TO_D
0x000010A4: 0x801C            - O_POP_RETURN
0x000010A6: 0x802A            - O_POP_TO_BASE
0x000010A8: 0x8029            - O_POP_BASE
0x000010AA: 0x801C            - O_POP_RETURN

17: Julianna08 (0x000010ac)
===============================
0x000010AC: 0x802B            - O_PUSH_BASE
0x000010AE: 0xC001 0x00000101 - O_INTOP(0x00000101)   // 257 (257)
0x000010B4: 0xC001 0x00000077 - O_INTOP(0x00000077)   // 119 (119)
0x000010BA: 0x811E            - O_GSAY_REPLY
0x000010BC: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000010C2: 0xC001 0x00000101 - O_INTOP(0x00000101)   // 257 (257)
0x000010C8: 0xC001 0x00000078 - O_INTOP(0x00000078)   // 120 (120)
0x000010CE: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x000010D4: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000010DA: 0x8121            - O_GIQ_OPTION
0x000010DC: 0xC001 0x0000110e - O_INTOP(0x0000110e)   // 4366 (4366)
0x000010E2: 0x80BF            - O_DUDE_OBJ
0x000010E4: 0xC001 0x00000063 - O_INTOP(0x00000063)   // 99 (99)
0x000010EA: 0x80BA            - O_OBJ_IS_CARRYING_OBJ_PID
0x000010EC: 0x802F            - O_IF
0x000010EE: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000010F4: 0xC001 0x00000101 - O_INTOP(0x00000101)   // 257 (257)
0x000010FA: 0xC001 0x00000079 - O_INTOP(0x00000079)   // 121 (121)
0x00001100: 0xC001 0x00000012 - O_INTOP(0x00000012)   // 18 (18)
0x00001106: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000110C: 0x8121            - O_GIQ_OPTION
0x0000110E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001114: 0x800D            - O_D_TO_A
0x00001116: 0x8019            - O_SWAPA
0x00001118: 0x802A            - O_POP_TO_BASE
0x0000111A: 0x8029            - O_POP_BASE
0x0000111C: 0x800C            - O_A_TO_D
0x0000111E: 0x801C            - O_POP_RETURN
0x00001120: 0x802A            - O_POP_TO_BASE
0x00001122: 0x8029            - O_POP_BASE
0x00001124: 0x801C            - O_POP_RETURN

18: Julianna09 (0x00001126)
===============================
0x00001126: 0x802B            - O_PUSH_BASE
0x00001128: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000112E: 0x80BF            - O_DUDE_OBJ
0x00001130: 0xC001 0x00000063 - O_INTOP(0x00000063)   // 99 (99)
0x00001136: 0x810D            - O_OBJ_CARRYING_PID_OBJ
0x00001138: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000113E: 0x8031            - O_STORE
0x00001140: 0x80BF            - O_DUDE_OBJ
0x00001142: 0x80BF            - O_DUDE_OBJ
0x00001144: 0xC001 0x00000063 - O_INTOP(0x00000063)   // 99 (99)
0x0000114A: 0x810D            - O_OBJ_CARRYING_PID_OBJ
0x0000114C: 0x80D9            - O_RM_OBJ_FROM_INVEN
0x0000114E: 0x80BC            - O_SELF_OBJ
0x00001150: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001156: 0x8032            - O_FETCH
0x00001158: 0x80D8            - O_ADD_OBJ_TO_INVEN
0x0000115A: 0xC001 0x00000101 - O_INTOP(0x00000101)   // 257 (257)
0x00001160: 0xC001 0x0000007a - O_INTOP(0x0000007a)   // 122 (122)
0x00001166: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000116C: 0x8120            - O_GSAY_MESSAGE
0x0000116E: 0xC001 0x0000007f - O_INTOP(0x0000007f)   // 127 (127)
0x00001174: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x0000117A: 0x80C6            - O_SET_GLOBAL_VAR
0x0000117C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001182: 0x800D            - O_D_TO_A
0x00001184: 0x8019            - O_SWAPA
0x00001186: 0x802A            - O_POP_TO_BASE
0x00001188: 0x8029            - O_POP_BASE
0x0000118A: 0x800C            - O_A_TO_D
0x0000118C: 0x801C            - O_POP_RETURN
0x0000118E: 0x802A            - O_POP_TO_BASE
0x00001190: 0x8029            - O_POP_BASE
0x00001192: 0x801C            - O_POP_RETURN

19: Julianna10 (0x00001194)
===============================
0x00001194: 0x802B            - O_PUSH_BASE
0x00001196: 0xC001 0x00000101 - O_INTOP(0x00000101)   // 257 (257)
0x0000119C: 0xC001 0x0000007b - O_INTOP(0x0000007b)   // 123 (123)
0x000011A2: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000011A8: 0x8120            - O_GSAY_MESSAGE
0x000011AA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000011B0: 0x800D            - O_D_TO_A
0x000011B2: 0x8019            - O_SWAPA
0x000011B4: 0x802A            - O_POP_TO_BASE
0x000011B6: 0x8029            - O_POP_BASE
0x000011B8: 0x800C            - O_A_TO_D
0x000011BA: 0x801C            - O_POP_RETURN
0x000011BC: 0x802A            - O_POP_TO_BASE
0x000011BE: 0x8029            - O_POP_BASE
0x000011C0: 0x801C            - O_POP_RETURN

20: JuliannaEnd (0x000011c2)
===============================
0x000011C2: 0x802B            - O_PUSH_BASE
0x000011C4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000011CA: 0x800D            - O_D_TO_A
0x000011CC: 0x8019            - O_SWAPA
0x000011CE: 0x802A            - O_POP_TO_BASE
0x000011D0: 0x8029            - O_POP_BASE
0x000011D2: 0x800C            - O_A_TO_D
0x000011D4: 0x801C            - O_POP_RETURN
0x000011D6: 0x802A            - O_POP_TO_BASE
0x000011D8: 0x8029            - O_POP_BASE
0x000011DA: 0x801C            - O_POP_RETURN

21: sleeping (0x000011dc)
===============================
0x000011DC: 0x802B            - O_PUSH_BASE
0x000011DE: 0xC001 0x00001300 - O_INTOP(0x00001300)   // 4864 (4864)
0x000011E4: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x000011EA: 0x80C1            - O_LOCAL_VAR
0x000011EC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000011F2: 0x8033            - O_EQUAL
0x000011F4: 0x802F            - O_IF
0x000011F6: 0xC001 0x000012f8 - O_INTOP(0x000012f8)   // 4856 (4856)
0x000011FC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001202: 0x8012            - O_FETCH_GLOBAL
0x00001204: 0x8045            - O_NOT
0x00001206: 0x80F6            - O_GAME_TIME_HOUR
0x00001208: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000120E: 0x8012            - O_FETCH_GLOBAL
0x00001210: 0x8036            - O_GREATER_EQUAL
0x00001212: 0x803E            - O_AND
0x00001214: 0x80F6            - O_GAME_TIME_HOUR
0x00001216: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x0000121C: 0x8012            - O_FETCH_GLOBAL
0x0000121E: 0x8037            - O_LESS
0x00001220: 0x803E            - O_AND
0x00001222: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001228: 0x8012            - O_FETCH_GLOBAL
0x0000122A: 0x80F6            - O_GAME_TIME_HOUR
0x0000122C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001232: 0x8012            - O_FETCH_GLOBAL
0x00001234: 0x8036            - O_GREATER_EQUAL
0x00001236: 0x80F6            - O_GAME_TIME_HOUR
0x00001238: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x0000123E: 0x8012            - O_FETCH_GLOBAL
0x00001240: 0x8037            - O_LESS
0x00001242: 0x803F            - O_OR
0x00001244: 0x803E            - O_AND
0x00001246: 0x803F            - O_OR
0x00001248: 0x802F            - O_IF
0x0000124A: 0xC001 0x000012c2 - O_INTOP(0x000012c2)   // 4802 (4802)
0x00001250: 0x80F6            - O_GAME_TIME_HOUR
0x00001252: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001258: 0x8012            - O_FETCH_GLOBAL
0x0000125A: 0x803A            - O_SUB
0x0000125C: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00001262: 0x8037            - O_LESS
0x00001264: 0x80F6            - O_GAME_TIME_HOUR
0x00001266: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000126C: 0x8012            - O_FETCH_GLOBAL
0x0000126E: 0x803A            - O_SUB
0x00001270: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001276: 0x8038            - O_GREATER
0x00001278: 0x803E            - O_AND
0x0000127A: 0x802F            - O_IF
0x0000127C: 0xC001 0x000012ac - O_INTOP(0x000012ac)   // 4780 (4780)
0x00001282: 0x80BC            - O_SELF_OBJ
0x00001284: 0x80D4            - O_TILE_NUM
0x00001286: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x0000128C: 0x8012            - O_FETCH_GLOBAL
0x0000128E: 0x8034            - O_NOT_EQUAL
0x00001290: 0x802F            - O_IF
0x00001292: 0x80BC            - O_SELF_OBJ
0x00001294: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x0000129A: 0x8012            - O_FETCH_GLOBAL
0x0000129C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000012A2: 0x80CE            - O_ANIMATE_MOVE_OBJ_TO_TILE
0x000012A4: 0xC001 0x000012ba - O_INTOP(0x000012ba)   // 4794 (4794)
0x000012AA: 0x8004            - O_JMP
0x000012AC: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x000012B2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000012B8: 0x80C2            - O_SET_LOCAL_VAR
0x000012BA: 0xC001 0x000012f8 - O_INTOP(0x000012f8)   // 4856 (4856)
0x000012C0: 0x8004            - O_JMP
0x000012C2: 0x80BC            - O_SELF_OBJ
0x000012C4: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000012CA: 0x8012            - O_FETCH_GLOBAL
0x000012CC: 0x80BC            - O_SELF_OBJ
0x000012CE: 0x80EC            - O_ELEVATION
0x000012D0: 0x80B6            - O_MOVE_TO
0x000012D2: 0x801A            - O_POP
0x000012D4: 0xC001 0x000012f8 - O_INTOP(0x000012f8)   // 4856 (4856)
0x000012DA: 0x80BC            - O_SELF_OBJ
0x000012DC: 0x80D4            - O_TILE_NUM
0x000012DE: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000012E4: 0x8012            - O_FETCH_GLOBAL
0x000012E6: 0x8033            - O_EQUAL
0x000012E8: 0x802F            - O_IF
0x000012EA: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x000012F0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000012F6: 0x80C2            - O_SET_LOCAL_VAR
0x000012F8: 0xC001 0x00001404 - O_INTOP(0x00001404)   // 5124 (5124)
0x000012FE: 0x8004            - O_JMP
0x00001300: 0xC001 0x00001404 - O_INTOP(0x00001404)   // 5124 (5124)
0x00001306: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000130C: 0x8012            - O_FETCH_GLOBAL
0x0000130E: 0x80F6            - O_GAME_TIME_HOUR
0x00001310: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001316: 0x8012            - O_FETCH_GLOBAL
0x00001318: 0x8036            - O_GREATER_EQUAL
0x0000131A: 0x803E            - O_AND
0x0000131C: 0x80F6            - O_GAME_TIME_HOUR
0x0000131E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001324: 0x8012            - O_FETCH_GLOBAL
0x00001326: 0x8037            - O_LESS
0x00001328: 0x803E            - O_AND
0x0000132A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001330: 0x8012            - O_FETCH_GLOBAL
0x00001332: 0x8045            - O_NOT
0x00001334: 0x80F6            - O_GAME_TIME_HOUR
0x00001336: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x0000133C: 0x8012            - O_FETCH_GLOBAL
0x0000133E: 0x8036            - O_GREATER_EQUAL
0x00001340: 0x80F6            - O_GAME_TIME_HOUR
0x00001342: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001348: 0x8012            - O_FETCH_GLOBAL
0x0000134A: 0x8037            - O_LESS
0x0000134C: 0x803F            - O_OR
0x0000134E: 0x803E            - O_AND
0x00001350: 0x803F            - O_OR
0x00001352: 0x802F            - O_IF
0x00001354: 0xC001 0x000013c6 - O_INTOP(0x000013c6)   // 5062 (5062)
0x0000135A: 0x80F6            - O_GAME_TIME_HOUR
0x0000135C: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001362: 0x8012            - O_FETCH_GLOBAL
0x00001364: 0x803A            - O_SUB
0x00001366: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x0000136C: 0x8037            - O_LESS
0x0000136E: 0x80F6            - O_GAME_TIME_HOUR
0x00001370: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001376: 0x8012            - O_FETCH_GLOBAL
0x00001378: 0x803A            - O_SUB
0x0000137A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001380: 0x8038            - O_GREATER
0x00001382: 0x803E            - O_AND
0x00001384: 0x802F            - O_IF
0x00001386: 0xC001 0x000013b0 - O_INTOP(0x000013b0)   // 5040 (5040)
0x0000138C: 0x80BC            - O_SELF_OBJ
0x0000138E: 0x80D4            - O_TILE_NUM
0x00001390: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001396: 0x8012            - O_FETCH_GLOBAL
0x00001398: 0x8034            - O_NOT_EQUAL
0x0000139A: 0x802F            - O_IF
0x0000139C: 0x80BC            - O_SELF_OBJ
0x0000139E: 0x80BC            - O_SELF_OBJ
0x000013A0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000013A6: 0x80CE            - O_ANIMATE_MOVE_OBJ_TO_TILE
0x000013A8: 0xC001 0x000013be - O_INTOP(0x000013be)   // 5054 (5054)
0x000013AE: 0x8004            - O_JMP
0x000013B0: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x000013B6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000013BC: 0x80C2            - O_SET_LOCAL_VAR
0x000013BE: 0xC001 0x00001404 - O_INTOP(0x00001404)   // 5124 (5124)
0x000013C4: 0x8004            - O_JMP
0x000013C6: 0xC001 0x000013f6 - O_INTOP(0x000013f6)   // 5110 (5110)
0x000013CC: 0x80BC            - O_SELF_OBJ
0x000013CE: 0x80D4            - O_TILE_NUM
0x000013D0: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000013D6: 0x8012            - O_FETCH_GLOBAL
0x000013D8: 0x8034            - O_NOT_EQUAL
0x000013DA: 0x802F            - O_IF
0x000013DC: 0x80BC            - O_SELF_OBJ
0x000013DE: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000013E4: 0x8012            - O_FETCH_GLOBAL
0x000013E6: 0x80BC            - O_SELF_OBJ
0x000013E8: 0x80EC            - O_ELEVATION
0x000013EA: 0x80B6            - O_MOVE_TO
0x000013EC: 0x801A            - O_POP
0x000013EE: 0xC001 0x00001404 - O_INTOP(0x00001404)   // 5124 (5124)
0x000013F4: 0x8004            - O_JMP
0x000013F6: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x000013FC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001402: 0x80C2            - O_SET_LOCAL_VAR
0x00001404: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000140A: 0x800D            - O_D_TO_A
0x0000140C: 0x8019            - O_SWAPA
0x0000140E: 0x802A            - O_POP_TO_BASE
0x00001410: 0x8029            - O_POP_BASE
0x00001412: 0x800C            - O_A_TO_D
0x00001414: 0x801C            - O_POP_RETURN
0x00001416: 0x802A            - O_POP_TO_BASE
0x00001418: 0x8029            - O_POP_BASE
0x0000141A: 0x801C            - O_POP_RETURN

22: get_reaction (0x0000141c)
===============================
0x0000141C: 0x802B            - O_PUSH_BASE
0x0000141E: 0xC001 0x00001696 - O_INTOP(0x00001696)   // 5782 (5782)
0x00001424: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x0000142A: 0x80C1            - O_LOCAL_VAR
0x0000142C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001432: 0x8033            - O_EQUAL
0x00001434: 0x802F            - O_IF
0x00001436: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000143C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001442: 0x80C2            - O_SET_LOCAL_VAR
0x00001444: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000144A: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001450: 0x80C2            - O_SET_LOCAL_VAR
0x00001452: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001458: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000145E: 0x80C2            - O_SET_LOCAL_VAR
0x00001460: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001466: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000146C: 0x80C1            - O_LOCAL_VAR
0x0000146E: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001474: 0x80BF            - O_DUDE_OBJ
0x00001476: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x0000147C: 0x80CA            - O_GET_CRITTER_STAT
0x0000147E: 0x803B            - O_MUL
0x00001480: 0x8039            - O_ADD
0x00001482: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00001488: 0x803A            - O_SUB
0x0000148A: 0x80C2            - O_SET_LOCAL_VAR
0x0000148C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001492: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001498: 0x80C1            - O_LOCAL_VAR
0x0000149A: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x000014A0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000014A6: 0x80BF            - O_DUDE_OBJ
0x000014A8: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x000014AE: 0x80F3            - O_HAS_TRAIT
0x000014B0: 0x803B            - O_MUL
0x000014B2: 0x8039            - O_ADD
0x000014B4: 0x80C2            - O_SET_LOCAL_VAR
0x000014B6: 0xC001 0x0000152a - O_INTOP(0x0000152a)   // 5418 (5418)
0x000014BC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000014C2: 0x80BF            - O_DUDE_OBJ
0x000014C4: 0xC001 0x00000027 - O_INTOP(0x00000027)   // 39 (39)
0x000014CA: 0x80F3            - O_HAS_TRAIT
0x000014CC: 0x802F            - O_IF
0x000014CE: 0xC001 0x00001508 - O_INTOP(0x00001508)   // 5384 (5384)
0x000014D4: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x000014DA: 0x80C5            - O_GLOBAL_VAR
0x000014DC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000014E2: 0x8038            - O_GREATER
0x000014E4: 0x802F            - O_IF
0x000014E6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000014EC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000014F2: 0x80C1            - O_LOCAL_VAR
0x000014F4: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x000014FA: 0x80C5            - O_GLOBAL_VAR
0x000014FC: 0x8039            - O_ADD
0x000014FE: 0x80C2            - O_SET_LOCAL_VAR
0x00001500: 0xC001 0x00001522 - O_INTOP(0x00001522)   // 5410 (5410)
0x00001506: 0x8004            - O_JMP
0x00001508: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000150E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001514: 0x80C1            - O_LOCAL_VAR
0x00001516: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x0000151C: 0x80C5            - O_GLOBAL_VAR
0x0000151E: 0x803A            - O_SUB
0x00001520: 0x80C2            - O_SET_LOCAL_VAR
0x00001522: 0xC001 0x0000157e - O_INTOP(0x0000157e)   // 5502 (5502)
0x00001528: 0x8004            - O_JMP
0x0000152A: 0xC001 0x00001564 - O_INTOP(0x00001564)   // 5476 (5476)
0x00001530: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001536: 0x80C1            - O_LOCAL_VAR
0x00001538: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000153E: 0x8033            - O_EQUAL
0x00001540: 0x802F            - O_IF
0x00001542: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001548: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000154E: 0x80C1            - O_LOCAL_VAR
0x00001550: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00001556: 0x80C5            - O_GLOBAL_VAR
0x00001558: 0x803A            - O_SUB
0x0000155A: 0x80C2            - O_SET_LOCAL_VAR
0x0000155C: 0xC001 0x0000157e - O_INTOP(0x0000157e)   // 5502 (5502)
0x00001562: 0x8004            - O_JMP
0x00001564: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000156A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001570: 0x80C1            - O_LOCAL_VAR
0x00001572: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00001578: 0x80C5            - O_GLOBAL_VAR
0x0000157A: 0x8039            - O_ADD
0x0000157C: 0x80C2            - O_SET_LOCAL_VAR
0x0000157E: 0xC001 0x000015ae - O_INTOP(0x000015ae)   // 5550 (5550)
0x00001584: 0xC001 0x0000009e - O_INTOP(0x0000009e)   // 158 (158)
0x0000158A: 0x80C5            - O_GLOBAL_VAR
0x0000158C: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001592: 0x8038            - O_GREATER
0x00001594: 0x802F            - O_IF
0x00001596: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000159C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000015A2: 0x80C1            - O_LOCAL_VAR
0x000015A4: 0xC001 0x0000001e - O_INTOP(0x0000001e)   // 30 (30)
0x000015AA: 0x803A            - O_SUB
0x000015AC: 0x80C2            - O_SET_LOCAL_VAR
0x000015AE: 0xC001 0x00001616 - O_INTOP(0x00001616)   // 5654 (5654)
0x000015B4: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x000015BA: 0x80C5            - O_GLOBAL_VAR
0x000015BC: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x000015C2: 0x80C5            - O_GLOBAL_VAR
0x000015C4: 0x8039            - O_ADD
0x000015C6: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x000015CC: 0x8036            - O_GREATER_EQUAL
0x000015CE: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x000015D4: 0x80C5            - O_GLOBAL_VAR
0x000015D6: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000015DC: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x000015E2: 0x80C5            - O_GLOBAL_VAR
0x000015E4: 0x803B            - O_MUL
0x000015E6: 0x8038            - O_GREATER
0x000015E8: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x000015EE: 0x80C5            - O_GLOBAL_VAR
0x000015F0: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000015F6: 0x8033            - O_EQUAL
0x000015F8: 0x803F            - O_OR
0x000015FA: 0x803E            - O_AND
0x000015FC: 0x802F            - O_IF
0x000015FE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001604: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000160A: 0x80C1            - O_LOCAL_VAR
0x0000160C: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x00001612: 0x8039            - O_ADD
0x00001614: 0x80C2            - O_SET_LOCAL_VAR
0x00001616: 0xC001 0x0000167e - O_INTOP(0x0000167e)   // 5758 (5758)
0x0000161C: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00001622: 0x80C5            - O_GLOBAL_VAR
0x00001624: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x0000162A: 0x80C5            - O_GLOBAL_VAR
0x0000162C: 0x8039            - O_ADD
0x0000162E: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00001634: 0x8036            - O_GREATER_EQUAL
0x00001636: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x0000163C: 0x80C5            - O_GLOBAL_VAR
0x0000163E: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001644: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x0000164A: 0x80C5            - O_GLOBAL_VAR
0x0000164C: 0x803B            - O_MUL
0x0000164E: 0x8038            - O_GREATER
0x00001650: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x00001656: 0x80C5            - O_GLOBAL_VAR
0x00001658: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000165E: 0x8033            - O_EQUAL
0x00001660: 0x803F            - O_OR
0x00001662: 0x803E            - O_AND
0x00001664: 0x802F            - O_IF
0x00001666: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000166C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001672: 0x80C1            - O_LOCAL_VAR
0x00001674: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x0000167A: 0x803A            - O_SUB
0x0000167C: 0x80C2            - O_SET_LOCAL_VAR
0x0000167E: 0xC001 0x00001694 - O_INTOP(0x00001694)   // 5780 (5780)
0x00001684: 0x800D            - O_D_TO_A
0x00001686: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000168C: 0xC001 0x00000017 - O_INTOP(0x00000017)   // 23 (23)
0x00001692: 0x8005            - O_CALL
0x00001694: 0x801A            - O_POP
0x00001696: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000169C: 0x800D            - O_D_TO_A
0x0000169E: 0x8019            - O_SWAPA
0x000016A0: 0x802A            - O_POP_TO_BASE
0x000016A2: 0x8029            - O_POP_BASE
0x000016A4: 0x800C            - O_A_TO_D
0x000016A6: 0x801C            - O_POP_RETURN
0x000016A8: 0x802A            - O_POP_TO_BASE
0x000016AA: 0x8029            - O_POP_BASE
0x000016AC: 0x801C            - O_POP_RETURN

23: ReactToLevel (0x000016ae)
===============================
0x000016AE: 0x802B            - O_PUSH_BASE
0x000016B0: 0xC001 0x000016de - O_INTOP(0x000016de)   // 5854 (5854)
0x000016B6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000016BC: 0x80C1            - O_LOCAL_VAR
0x000016BE: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x000016C4: 0x8035            - O_LESS_EQUAL
0x000016C6: 0x802F            - O_IF
0x000016C8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000016CE: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000016D4: 0x80C2            - O_SET_LOCAL_VAR
0x000016D6: 0xC001 0x0000171a - O_INTOP(0x0000171a)   // 5914 (5914)
0x000016DC: 0x8004            - O_JMP
0x000016DE: 0xC001 0x0000170c - O_INTOP(0x0000170c)   // 5900 (5900)
0x000016E4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000016EA: 0x80C1            - O_LOCAL_VAR
0x000016EC: 0xC001 0x0000004b - O_INTOP(0x0000004b)   // 75 (75)
0x000016F2: 0x8035            - O_LESS_EQUAL
0x000016F4: 0x802F            - O_IF
0x000016F6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000016FC: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001702: 0x80C2            - O_SET_LOCAL_VAR
0x00001704: 0xC001 0x0000171a - O_INTOP(0x0000171a)   // 5914 (5914)
0x0000170A: 0x8004            - O_JMP
0x0000170C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001712: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001718: 0x80C2            - O_SET_LOCAL_VAR
0x0000171A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001720: 0x800D            - O_D_TO_A
0x00001722: 0x8019            - O_SWAPA
0x00001724: 0x802A            - O_POP_TO_BASE
0x00001726: 0x8029            - O_POP_BASE
0x00001728: 0x800C            - O_A_TO_D
0x0000172A: 0x801C            - O_POP_RETURN
0x0000172C: 0x802A            - O_POP_TO_BASE
0x0000172E: 0x8029            - O_POP_BASE
0x00001730: 0x801C            - O_POP_RETURN

24: LevelToReact (0x00001732)
===============================
0x00001732: 0x802B            - O_PUSH_BASE
0x00001734: 0xC001 0x0000176a - O_INTOP(0x0000176a)   // 5994 (5994)
0x0000173A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001740: 0x80C1            - O_LOCAL_VAR
0x00001742: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001748: 0x8033            - O_EQUAL
0x0000174A: 0x802F            - O_IF
0x0000174C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001752: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001758: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x0000175E: 0x80B4            - O_RANDOM
0x00001760: 0x80C2            - O_SET_LOCAL_VAR
0x00001762: 0xC001 0x000017b6 - O_INTOP(0x000017b6)   // 6070 (6070)
0x00001768: 0x8004            - O_JMP
0x0000176A: 0xC001 0x000017a0 - O_INTOP(0x000017a0)   // 6048 (6048)
0x00001770: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001776: 0x80C1            - O_LOCAL_VAR
0x00001778: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x0000177E: 0x8033            - O_EQUAL
0x00001780: 0x802F            - O_IF
0x00001782: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001788: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x0000178E: 0xC001 0x0000004b - O_INTOP(0x0000004b)   // 75 (75)
0x00001794: 0x80B4            - O_RANDOM
0x00001796: 0x80C2            - O_SET_LOCAL_VAR
0x00001798: 0xC001 0x000017b6 - O_INTOP(0x000017b6)   // 6070 (6070)
0x0000179E: 0x8004            - O_JMP
0x000017A0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000017A6: 0xC001 0x0000004c - O_INTOP(0x0000004c)   // 76 (76)
0x000017AC: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x000017B2: 0x80B4            - O_RANDOM
0x000017B4: 0x80C2            - O_SET_LOCAL_VAR
0x000017B6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000017BC: 0x800D            - O_D_TO_A
0x000017BE: 0x8019            - O_SWAPA
0x000017C0: 0x802A            - O_POP_TO_BASE
0x000017C2: 0x8029            - O_POP_BASE
0x000017C4: 0x800C            - O_A_TO_D
0x000017C6: 0x801C            - O_POP_RETURN
0x000017C8: 0x802A            - O_POP_TO_BASE
0x000017CA: 0x8029            - O_POP_BASE
0x000017CC: 0x801C            - O_POP_RETURN

25: UpReact (0x000017ce)
===============================
0x000017CE: 0x802B            - O_PUSH_BASE
0x000017D0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000017D6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000017DC: 0x80C1            - O_LOCAL_VAR
0x000017DE: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x000017E4: 0x8039            - O_ADD
0x000017E6: 0x80C2            - O_SET_LOCAL_VAR
0x000017E8: 0xC001 0x000017fe - O_INTOP(0x000017fe)   // 6142 (6142)
0x000017EE: 0x800D            - O_D_TO_A
0x000017F0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000017F6: 0xC001 0x00000017 - O_INTOP(0x00000017)   // 23 (23)
0x000017FC: 0x8005            - O_CALL
0x000017FE: 0x801A            - O_POP
0x00001800: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001806: 0x800D            - O_D_TO_A
0x00001808: 0x8019            - O_SWAPA
0x0000180A: 0x802A            - O_POP_TO_BASE
0x0000180C: 0x8029            - O_POP_BASE
0x0000180E: 0x800C            - O_A_TO_D
0x00001810: 0x801C            - O_POP_RETURN
0x00001812: 0x802A            - O_POP_TO_BASE
0x00001814: 0x8029            - O_POP_BASE
0x00001816: 0x801C            - O_POP_RETURN

26: DownReact (0x00001818)
===============================
0x00001818: 0x802B            - O_PUSH_BASE
0x0000181A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001820: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001826: 0x80C1            - O_LOCAL_VAR
0x00001828: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x0000182E: 0x803A            - O_SUB
0x00001830: 0x80C2            - O_SET_LOCAL_VAR
0x00001832: 0xC001 0x00001848 - O_INTOP(0x00001848)   // 6216 (6216)
0x00001838: 0x800D            - O_D_TO_A
0x0000183A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001840: 0xC001 0x00000017 - O_INTOP(0x00000017)   // 23 (23)
0x00001846: 0x8005            - O_CALL
0x00001848: 0x801A            - O_POP
0x0000184A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001850: 0x800D            - O_D_TO_A
0x00001852: 0x8019            - O_SWAPA
0x00001854: 0x802A            - O_POP_TO_BASE
0x00001856: 0x8029            - O_POP_BASE
0x00001858: 0x800C            - O_A_TO_D
0x0000185A: 0x801C            - O_POP_RETURN
0x0000185C: 0x802A            - O_POP_TO_BASE
0x0000185E: 0x8029            - O_POP_BASE
0x00001860: 0x801C            - O_POP_RETURN

27: BottomReact (0x00001862)
===============================
0x00001862: 0x802B            - O_PUSH_BASE
0x00001864: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000186A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001870: 0x80C2            - O_SET_LOCAL_VAR
0x00001872: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001878: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000187E: 0x80C2            - O_SET_LOCAL_VAR
0x00001880: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001886: 0x800D            - O_D_TO_A
0x00001888: 0x8019            - O_SWAPA
0x0000188A: 0x802A            - O_POP_TO_BASE
0x0000188C: 0x8029            - O_POP_BASE
0x0000188E: 0x800C            - O_A_TO_D
0x00001890: 0x801C            - O_POP_RETURN
0x00001892: 0x802A            - O_POP_TO_BASE
0x00001894: 0x8029            - O_POP_BASE
0x00001896: 0x801C            - O_POP_RETURN

28: TopReact (0x00001898)
===============================
0x00001898: 0x802B            - O_PUSH_BASE
0x0000189A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000018A0: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x000018A6: 0x80C2            - O_SET_LOCAL_VAR
0x000018A8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000018AE: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000018B4: 0x80C2            - O_SET_LOCAL_VAR
0x000018B6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000018BC: 0x800D            - O_D_TO_A
0x000018BE: 0x8019            - O_SWAPA
0x000018C0: 0x802A            - O_POP_TO_BASE
0x000018C2: 0x8029            - O_POP_BASE
0x000018C4: 0x800C            - O_A_TO_D
0x000018C6: 0x801C            - O_POP_RETURN
0x000018C8: 0x802A            - O_POP_TO_BASE
0x000018CA: 0x8029            - O_POP_BASE
0x000018CC: 0x801C            - O_POP_RETURN

29: BigUpReact (0x000018ce)
===============================
0x000018CE: 0x802B            - O_PUSH_BASE
0x000018D0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000018D6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000018DC: 0x80C1            - O_LOCAL_VAR
0x000018DE: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x000018E4: 0x8039            - O_ADD
0x000018E6: 0x80C2            - O_SET_LOCAL_VAR
0x000018E8: 0xC001 0x000018fe - O_INTOP(0x000018fe)   // 6398 (6398)
0x000018EE: 0x800D            - O_D_TO_A
0x000018F0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000018F6: 0xC001 0x00000017 - O_INTOP(0x00000017)   // 23 (23)
0x000018FC: 0x8005            - O_CALL
0x000018FE: 0x801A            - O_POP
0x00001900: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001906: 0x800D            - O_D_TO_A
0x00001908: 0x8019            - O_SWAPA
0x0000190A: 0x802A            - O_POP_TO_BASE
0x0000190C: 0x8029            - O_POP_BASE
0x0000190E: 0x800C            - O_A_TO_D
0x00001910: 0x801C            - O_POP_RETURN
0x00001912: 0x802A            - O_POP_TO_BASE
0x00001914: 0x8029            - O_POP_BASE
0x00001916: 0x801C            - O_POP_RETURN

30: BigDownReact (0x00001918)
===============================
0x00001918: 0x802B            - O_PUSH_BASE
0x0000191A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001920: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001926: 0x80C1            - O_LOCAL_VAR
0x00001928: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x0000192E: 0x803A            - O_SUB
0x00001930: 0x80C2            - O_SET_LOCAL_VAR
0x00001932: 0xC001 0x00001948 - O_INTOP(0x00001948)   // 6472 (6472)
0x00001938: 0x800D            - O_D_TO_A
0x0000193A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001940: 0xC001 0x00000017 - O_INTOP(0x00000017)   // 23 (23)
0x00001946: 0x8005            - O_CALL
0x00001948: 0x801A            - O_POP
0x0000194A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001950: 0x800D            - O_D_TO_A
0x00001952: 0x8019            - O_SWAPA
0x00001954: 0x802A            - O_POP_TO_BASE
0x00001956: 0x8029            - O_POP_BASE
0x00001958: 0x800C            - O_A_TO_D
0x0000195A: 0x801C            - O_POP_RETURN
0x0000195C: 0x802A            - O_POP_TO_BASE
0x0000195E: 0x8029            - O_POP_BASE
0x00001960: 0x801C            - O_POP_RETURN

31: UpReactLevel (0x00001962)
===============================
0x00001962: 0x802B            - O_PUSH_BASE
0x00001964: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000196A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001970: 0x80C1            - O_LOCAL_VAR
0x00001972: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001978: 0x8039            - O_ADD
0x0000197A: 0x80C2            - O_SET_LOCAL_VAR
0x0000197C: 0xC001 0x000019a2 - O_INTOP(0x000019a2)   // 6562 (6562)
0x00001982: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001988: 0x80C1            - O_LOCAL_VAR
0x0000198A: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001990: 0x8038            - O_GREATER
0x00001992: 0x802F            - O_IF
0x00001994: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000199A: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000019A0: 0x80C2            - O_SET_LOCAL_VAR
0x000019A2: 0xC001 0x000019b8 - O_INTOP(0x000019b8)   // 6584 (6584)
0x000019A8: 0x800D            - O_D_TO_A
0x000019AA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000019B0: 0xC001 0x00000018 - O_INTOP(0x00000018)   // 24 (24)
0x000019B6: 0x8005            - O_CALL
0x000019B8: 0x801A            - O_POP
0x000019BA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000019C0: 0x800D            - O_D_TO_A
0x000019C2: 0x8019            - O_SWAPA
0x000019C4: 0x802A            - O_POP_TO_BASE
0x000019C6: 0x8029            - O_POP_BASE
0x000019C8: 0x800C            - O_A_TO_D
0x000019CA: 0x801C            - O_POP_RETURN
0x000019CC: 0x802A            - O_POP_TO_BASE
0x000019CE: 0x8029            - O_POP_BASE
0x000019D0: 0x801C            - O_POP_RETURN

32: DownReactLevel (0x000019d2)
===============================
0x000019D2: 0x802B            - O_PUSH_BASE
0x000019D4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000019DA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000019E0: 0x80C1            - O_LOCAL_VAR
0x000019E2: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000019E8: 0x803A            - O_SUB
0x000019EA: 0x80C2            - O_SET_LOCAL_VAR
0x000019EC: 0xC001 0x00001a12 - O_INTOP(0x00001a12)   // 6674 (6674)
0x000019F2: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000019F8: 0x80C1            - O_LOCAL_VAR
0x000019FA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001A00: 0x8037            - O_LESS
0x00001A02: 0x802F            - O_IF
0x00001A04: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001A0A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001A10: 0x80C2            - O_SET_LOCAL_VAR
0x00001A12: 0xC001 0x00001a28 - O_INTOP(0x00001a28)   // 6696 (6696)
0x00001A18: 0x800D            - O_D_TO_A
0x00001A1A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001A20: 0xC001 0x00000018 - O_INTOP(0x00000018)   // 24 (24)
0x00001A26: 0x8005            - O_CALL
0x00001A28: 0x801A            - O_POP
0x00001A2A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001A30: 0x800D            - O_D_TO_A
0x00001A32: 0x8019            - O_SWAPA
0x00001A34: 0x802A            - O_POP_TO_BASE
0x00001A36: 0x8029            - O_POP_BASE
0x00001A38: 0x800C            - O_A_TO_D
0x00001A3A: 0x801C            - O_POP_RETURN
0x00001A3C: 0x802A            - O_POP_TO_BASE
0x00001A3E: 0x8029            - O_POP_BASE
0x00001A40: 0x801C            - O_POP_RETURN

33: Goodbyes (0x00001a42)
===============================
0x00001A42: 0x802B            - O_PUSH_BASE
0x00001A44: 0xC001 0x0000027a - O_INTOP(0x0000027a)   // 634 (634)
0x00001A4A: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x00001A50: 0xC001 0x00000069 - O_INTOP(0x00000069)   // 105 (105)
0x00001A56: 0x80B4            - O_RANDOM
0x00001A58: 0x8105            - O_MESSAGE_STR
0x00001A5A: 0xC001 0x00000007 - O_INTOP(0x00000007)   // 7 (7)
0x00001A60: 0x8013            - O_STORE_GLOBAL
0x00001A62: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001A68: 0x800D            - O_D_TO_A
0x00001A6A: 0x8019            - O_SWAPA
0x00001A6C: 0x802A            - O_POP_TO_BASE
0x00001A6E: 0x8029            - O_POP_BASE
0x00001A70: 0x800C            - O_A_TO_D
0x00001A72: 0x801C            - O_POP_RETURN
0x00001A74: 0x802A            - O_POP_TO_BASE
0x00001A76: 0x8029            - O_POP_BASE
0x00001A78: 0x801C            - O_POP_RETURN

