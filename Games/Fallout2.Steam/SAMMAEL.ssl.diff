diff --git a/Games/Fallout2.Steam/Original/SAMMAEL.ssl b/Games/Fallout2.Steam/ReDefine/SAMMAEL.ssl
index 60372b7..12a16ac 100644
--- a/Games/Fallout2.Steam/Original/SAMMAEL.ssl
+++ b/Games/Fallout2.Steam/ReDefine/SAMMAEL.ssl
@@ -28,33 +28,33 @@ variable initialized;
 procedure start
 begin
     if (not(initialized)) then begin
-        if ((global_var(613) == 9103) or (global_var(613) == 9102)) then begin
-            critter_add_trait(self_obj, 1, 6, 0);
+        if ((global_var(GVAR_SPECIAL_ENCOUNTER_GUARDIAN) == 9103) or (global_var(GVAR_SPECIAL_ENCOUNTER_GUARDIAN) == 9102)) then begin
+            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 0);
         end
         else begin
-            critter_add_trait(self_obj, 1, 6, 49);
+            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 49);
         end
-        critter_add_trait(self_obj, 1, 5, 29);
+        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_VAULT_DEATHCLAWS);
         initialized := 1;
     end
     else begin
-        if (script_action == 12) then begin
+        if (script_action == critter_proc) then begin
             call critter_p_proc();
         end
         else begin
-            if (script_action == 18) then begin
+            if (script_action == destroy_proc) then begin
                 call destroy_p_proc();
             end
             else begin
-                if (script_action == 21) then begin
+                if (script_action == look_at_proc) then begin
                     call look_at_p_proc();
                 end
                 else begin
-                    if (script_action == 4) then begin
+                    if (script_action == pickup_proc) then begin
                         call pickup_p_proc();
                     end
                     else begin
-                        if (script_action == 11) then begin
+                        if (script_action == talk_proc) then begin
                             call talk_p_proc();
                         end
                     end
@@ -68,10 +68,10 @@ procedure critter_p_proc
 begin
     if (hostile) then begin
         hostile := 0;
-        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
+        attack(dude_obj);
     end
     else begin
-        if (tile_distance_objs(dude_obj, self_obj) > get_critter_stat(dude_obj, 1)) then begin
+        if (tile_distance_objs(dude_obj, self_obj) > dude_perception) then begin
             set_obj_visibility(self_obj, 1);
         end
         else begin
@@ -83,30 +83,30 @@ end
 procedure damage_p_proc
 begin
     if (source_obj == dude_obj) then begin
-        set_global_var(251, 1);
-        critter_add_trait(self_obj, 1, 6, 49);
+        set_global_var(GVAR_SALVATORE_WARNINGS, 1);
+        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 49);
     end
 end
 
 procedure destroy_p_proc
 begin
     if (source_obj == dude_obj) then begin
-        set_global_var(251, 1);
+        set_global_var(GVAR_SALVATORE_WARNINGS, 1);
         if (source_obj == dude_obj) then begin
-            if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
-                set_global_var(156, 1);
-                set_global_var(157, 0);
+            if (((global_var(GVAR_GECKO_SKEETER_PART) + global_var(GVAR_GECKO_REQ_FORM)) >= 25) and ((global_var(GVAR_GECKO_REQ_FORM) > (2 * global_var(GVAR_GECKO_SKEETER_PART))) or (global_var(GVAR_SIERRA_LOCKOUT) == 1))) then begin
+                set_global_var(GVAR_SIERRA_LOCKOUT, 1);
+                set_global_var(GVAR_SIERRA_PASSWORD, 0);
             end
-            if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
-                set_global_var(157, 1);
-                set_global_var(156, 0);
+            if (((global_var(GVAR_GECKO_SKEETER_PART) + global_var(GVAR_GECKO_REQ_FORM)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GECKO_REQ_FORM))) or (global_var(GVAR_SIERRA_PASSWORD) == 1))) then begin
+                set_global_var(GVAR_SIERRA_PASSWORD, 1);
+                set_global_var(GVAR_SIERRA_LOCKOUT, 0);
             end
-            set_global_var(159, global_var(159) + 1);
-            if ((global_var(159) % 2) == 0) then begin
-                set_global_var(155, global_var(155) - 1);
+            set_global_var(GVAR_GECKO_REQ_FORM, global_var(GVAR_GECKO_REQ_FORM) + 1);
+            if ((global_var(GVAR_GECKO_REQ_FORM) % 2) == 0) then begin
+                set_global_var(GVAR_BRAIN_BOT_BRAIN, global_var(GVAR_BRAIN_BOT_BRAIN) - 1);
             end
         end
-        critter_add_trait(self_obj, 1, 6, 49);
+        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 49);
     end
 end
 
@@ -114,16 +114,16 @@ procedure look_at_p_proc
 begin
     script_overrides;
     if (local_var(4)) then begin
-        display_msg(message_str(254, 100));
+        display_msg(message_str(SCRIPT_SISHELF2, 100));
     end
     else begin
-        display_msg(message_str(254, 101));
+        display_msg(message_str(SCRIPT_SISHELF2, 101));
     end
 end
 
 procedure pickup_p_proc
 begin
-    set_global_var(251, 1);
+    set_global_var(GVAR_SALVATORE_WARNINGS, 1);
 end
 
 procedure talk_p_proc
@@ -142,104 +142,103 @@ end
 
 procedure Sammael01
 begin
-    gsay_reply(254, 102);
-    giq_option(4, 254, message_str(254, 103) + proto_data(obj_pid(dude_obj), 1) + message_str(254, 104), Sammael02, 50);
-    giq_option(4, 254, 105, Sammael03, 50);
-    giq_option(-3, 254, 106, Sammael15, 50);
+    gsay_reply(SCRIPT_SISHELF2, 102);
+    giq_option(4, SCRIPT_SISHELF2, message_str(SCRIPT_SISHELF2, 103) + proto_data(obj_pid(dude_obj), 1) + message_str(SCRIPT_SISHELF2, 104), Sammael02, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SISHELF2, 105, Sammael03, NEUTRAL_REACTION);
+    giq_option(-3, SCRIPT_SISHELF2, 106, Sammael15, NEUTRAL_REACTION);
 end
 
 procedure Sammael02
 begin
     set_local_var(4, 1);
-    gsay_reply(254, 107);
-    giq_option(4, 254, 108, Sammael04, 50);
-    giq_option(4, 254, 109, Sammael05, 50);
+    gsay_reply(SCRIPT_SISHELF2, 107);
+    giq_option(4, SCRIPT_SISHELF2, 108, Sammael04, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SISHELF2, 109, Sammael05, NEUTRAL_REACTION);
 end
 
 procedure Sammael03
 begin
-    gsay_message(254, 110, 50);
+    gsay_message(SCRIPT_SISHELF2, 110, NEUTRAL_REACTION);
 end
 
 procedure Sammael04
 begin
-    gsay_reply(254, 111);
-    giq_option(4, 254, 112, Sammael06, 50);
-    giq_option(4, 254, 113, Sammael07, 50);
-    giq_option(6, 254, 114, Sammael08, 50);
-    giq_option(0, 254, 115, Sammael05, 50);
+    gsay_reply(SCRIPT_SISHELF2, 111);
+    giq_option(4, SCRIPT_SISHELF2, 112, Sammael06, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SISHELF2, 113, Sammael07, NEUTRAL_REACTION);
+    giq_option(6, SCRIPT_SISHELF2, 114, Sammael08, NEUTRAL_REACTION);
+    giq_option(0, SCRIPT_SISHELF2, 115, Sammael05, NEUTRAL_REACTION);
 end
 
 procedure Sammael05
 begin
-    gsay_message(254, 116, 50);
+    gsay_message(SCRIPT_SISHELF2, 116, NEUTRAL_REACTION);
 end
 
 procedure Sammael06
 begin
-    gsay_reply(254, 117);
-    giq_option(4, 254, 118, Sammael07, 50);
-    giq_option(6, 254, 119, Sammael08, 50);
-    giq_option(4, 254, 120, Sammael05, 50);
+    gsay_reply(SCRIPT_SISHELF2, 117);
+    giq_option(4, SCRIPT_SISHELF2, 118, Sammael07, NEUTRAL_REACTION);
+    giq_option(6, SCRIPT_SISHELF2, 119, Sammael08, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SISHELF2, 120, Sammael05, NEUTRAL_REACTION);
 end
 
 procedure Sammael07
 begin
-    gsay_message(254, 121, 50);
+    gsay_message(SCRIPT_SISHELF2, 121, NEUTRAL_REACTION);
 end
 
 procedure Sammael08
 begin
-    gsay_reply(254, 122);
-    giq_option(4, 254, 123, Sammael09, 50);
-    giq_option(4, 254, 124, Sammael10, 50);
-    giq_option(4, 254, 125, Sammael11, 50);
-    giq_option(4, 254, 126, Sammael12, 50);
-    giq_option(4, 254, 127, Sammael13, 50);
-    giq_option(4, 254, 128, Sammael05, 50);
+    gsay_reply(SCRIPT_SISHELF2, 122);
+    giq_option(4, SCRIPT_SISHELF2, 123, Sammael09, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SISHELF2, 124, Sammael10, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SISHELF2, 125, Sammael11, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SISHELF2, 126, Sammael12, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SISHELF2, 127, Sammael13, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SISHELF2, 128, Sammael05, NEUTRAL_REACTION);
 end
 
 procedure Sammael09
 begin
-    gsay_message(254, 129, 50);
+    gsay_message(SCRIPT_SISHELF2, 129, NEUTRAL_REACTION);
     call Sammael08();
 end
 
 procedure Sammael10
 begin
-    gsay_message(254, 130, 50);
-    gsay_message(254, 131, 50);
+    gsay_message(SCRIPT_SISHELF2, 130, NEUTRAL_REACTION);
+    gsay_message(SCRIPT_SISHELF2, 131, NEUTRAL_REACTION);
     call Sammael08();
 end
 
 procedure Sammael11
 begin
-    gsay_message(254, 132, 50);
+    gsay_message(SCRIPT_SISHELF2, 132, NEUTRAL_REACTION);
     call Sammael08();
 end
 
 procedure Sammael12
 begin
-    gsay_message(254, 133, 50);
+    gsay_message(SCRIPT_SISHELF2, 133, NEUTRAL_REACTION);
     call Sammael08();
 end
 
 procedure Sammael13
 begin
-    gsay_message(254, 134, 50);
-    gsay_message(254, 135, 50);
+    gsay_message(SCRIPT_SISHELF2, 134, NEUTRAL_REACTION);
+    gsay_message(SCRIPT_SISHELF2, 135, NEUTRAL_REACTION);
     call Sammael08();
 end
 
 procedure Sammael14
 begin
-    gsay_reply(254, 136);
-    giq_option(4, 254, 137, Sammael04, 50);
-    giq_option(4, 254, 138, Sammael05, 50);
+    gsay_reply(SCRIPT_SISHELF2, 136);
+    giq_option(4, SCRIPT_SISHELF2, 137, Sammael04, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SISHELF2, 138, Sammael05, NEUTRAL_REACTION);
 end
 
 procedure Sammael15
 begin
-    gsay_message(254, 139, 50);
+    gsay_message(SCRIPT_SISHELF2, 139, NEUTRAL_REACTION);
 end
-
