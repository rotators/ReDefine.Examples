diff --git a/Games/Fallout2.Steam/Original/VCONCOMP.ssl b/Games/Fallout2.Steam/ReDefine/VCONCOMP.ssl
index 54f3662..ce893d5 100644
--- a/Games/Fallout2.Steam/Original/VCONCOMP.ssl
+++ b/Games/Fallout2.Steam/ReDefine/VCONCOMP.ssl
@@ -53,31 +53,31 @@ procedure Update_Invasion;
 
 procedure start
 begin
-    if (script_action == 14) then begin
+    if (script_action == damage_proc) then begin
         call damage_p_proc();
     end
     else begin
-        if (script_action == 21) then begin
+        if (script_action == look_at_proc) then begin
             call look_at_p_proc();
         end
         else begin
-            if (script_action == 3) then begin
+            if (script_action == description_proc) then begin
                 call description_p_proc();
             end
             else begin
-                if (script_action == 11) then begin
+                if (script_action == talk_proc) then begin
                     call talk_p_proc();
                 end
                 else begin
-                    if (script_action == 6) then begin
+                    if (script_action == use_proc) then begin
                         call use_p_proc();
                     end
                     else begin
-                        if (script_action == 7) then begin
+                        if (script_action == use_obj_on_proc) then begin
                             call use_obj_on_p_proc();
                         end
                         else begin
-                            if (script_action == 8) then begin
+                            if (script_action == use_skill_on_proc) then begin
                                 call use_skill_on_p_proc();
                             end
                         end
@@ -90,31 +90,31 @@ end
 
 procedure damage_p_proc
 begin
-    if (global_var(17) == 0) then begin
-        set_global_var(147, game_time / 10);
-        set_global_var(155, global_var(155) + 5);
-        set_global_var(17, 1);
-        set_global_var(308, 2);
+    if (global_var(GVAR_DEN_WAREHOUSE_ACCESS) == 0) then begin
+        set_global_var(GVAR_BROKEN_HILLS_FRAUD, game_time / 10);
+        set_global_var(GVAR_BRAIN_BOT_BRAIN, global_var(GVAR_BRAIN_BOT_BRAIN) + 5);
+        set_global_var(GVAR_DEN_WAREHOUSE_ACCESS, 1);
+        set_global_var(GVAR_TOWN_REP_GHOST_FARM, 2);
         call Update_Invasion();
-        display_msg(message_str(371, 179));
+        display_msg(message_str(SCRIPT_SCGGCAP, 179));
     end
 end
 
 procedure description_p_proc
 begin
     script_overrides;
-    display_msg(message_str(371, 200));
+    display_msg(message_str(SCRIPT_SCGGCAP, 200));
 end
 
 procedure look_at_p_proc
 begin
     script_overrides;
-    display_msg(message_str(371, 100));
+    display_msg(message_str(SCRIPT_SCGGCAP, 100));
 end
 
 procedure talk_p_proc
 begin
-    if (global_var(147) == 0) then begin
+    if (global_var(GVAR_BROKEN_HILLS_FRAUD) == 0) then begin
         if (local_var(0) == 1) then begin
             start_gdialog(371, self_obj, 4, -1, -1);
             gsay_start;
@@ -136,7 +136,7 @@ procedure use_p_proc
 begin
     script_overrides;
     if (local_var(0) == 0) then begin
-        display_msg(message_str(371, 177));
+        display_msg(message_str(SCRIPT_SCGGCAP, 177));
     end
     else begin
         dialogue_system_enter;
@@ -148,7 +148,7 @@ begin
     if (obj_pid(obj_being_used_with) == 221) then begin
         if (local_var(0) == 0) then begin
             script_overrides;
-            display_msg(message_str(371, 180));
+            display_msg(message_str(SCRIPT_SCGGCAP, 180));
             set_local_var(0, 1);
             dialogue_system_enter;
         end
@@ -161,10 +161,10 @@ begin
         script_overrides;
         if (is_success(roll_vs_skill(dude_obj, 12, 0))) then begin
             set_local_var(0, 1);
-            display_msg(message_str(371, 176));
+            display_msg(message_str(SCRIPT_SCGGCAP, 176));
         end
         else begin
-            display_msg(message_str(371, 178));
+            display_msg(message_str(SCRIPT_SCGGCAP, 178));
         end
         game_time_advance(game_ticks(300));
     end
@@ -172,38 +172,38 @@ end
 
 procedure VConComp00
 begin
-    gsay_message(371, 101, 51);
+    gsay_message(SCRIPT_SCGGCAP, 101, BAD_REACTION);
 end
 
 procedure VConComp01
 begin
-    gsay_reply(371, 102);
+    gsay_reply(SCRIPT_SCGGCAP, 102);
     call VConComp01a();
 end
 
 procedure VConComp01a
 begin
-    giq_option(4, 371, 103, VConComp02, 50);
-    giq_option(4, 371, 104, VConComp11, 50);
-    giq_option(4, 371, 106, VConComp05, 50);
-    giq_option(0, 371, 181, VConCompEnd, 50);
+    giq_option(4, SCRIPT_SCGGCAP, 103, VConComp02, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SCGGCAP, 104, VConComp11, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SCGGCAP, 106, VConComp05, NEUTRAL_REACTION);
+    giq_option(0, SCRIPT_SCGGCAP, 181, VConCompEnd, NEUTRAL_REACTION);
 end
 
 procedure VConComp02
 begin
-    gsay_reply(371, 140);
-    giq_option(4, 371, 107, VConComp03, 50);
-    giq_option(4, 371, 108, VConComp04, 50);
-    giq_option(4, 371, 109, VConComp05, 50);
-    giq_option(4, 371, 110, VConComp06, 50);
-    giq_option(4, 371, 111, VConComp07, 50);
-    giq_option(4, 371, 112, VConComp08, 50);
-    giq_option(5, 371, 113, VConComp02a, 50);
+    gsay_reply(SCRIPT_SCGGCAP, 140);
+    giq_option(4, SCRIPT_SCGGCAP, 107, VConComp03, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SCGGCAP, 108, VConComp04, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SCGGCAP, 109, VConComp05, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SCGGCAP, 110, VConComp06, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SCGGCAP, 111, VConComp07, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SCGGCAP, 112, VConComp08, NEUTRAL_REACTION);
+    giq_option(5, SCRIPT_SCGGCAP, 113, VConComp02a, NEUTRAL_REACTION);
 end
 
 procedure VConComp02a
 begin
-    if (is_success(roll_vs_skill(dude_obj, 12, -10)) or (global_var(298) == 1)) then begin
+    if (is_success(roll_vs_skill(dude_obj, 12, -10)) or (global_var(GVAR_DEN_CEASAR_STATUS) == 1)) then begin
         call VConComp09();
     end
     else begin
@@ -213,136 +213,136 @@ end
 
 procedure VConComp03
 begin
-    gsay_message(371, 114, 50);
-    set_global_var(147, (game_time / 10) - 240);
-    set_global_var(155, global_var(155) + 5);
-    set_global_var(17, 1);
-    set_global_var(308, 2);
+    gsay_message(SCRIPT_SCGGCAP, 114, NEUTRAL_REACTION);
+    set_global_var(GVAR_BROKEN_HILLS_FRAUD, (game_time / 10) - 240);
+    set_global_var(GVAR_BRAIN_BOT_BRAIN, global_var(GVAR_BRAIN_BOT_BRAIN) + 5);
+    set_global_var(GVAR_DEN_WAREHOUSE_ACCESS, 1);
+    set_global_var(GVAR_TOWN_REP_GHOST_FARM, 2);
 end
 
 procedure VConComp04
 begin
-    gsay_message(371, 115, 50);
-    set_global_var(155, global_var(155) + 5);
-    set_global_var(147, (game_time / 10) - 30);
-    set_global_var(17, 1);
-    set_global_var(308, 2);
+    gsay_message(SCRIPT_SCGGCAP, 115, NEUTRAL_REACTION);
+    set_global_var(GVAR_BRAIN_BOT_BRAIN, global_var(GVAR_BRAIN_BOT_BRAIN) + 5);
+    set_global_var(GVAR_BROKEN_HILLS_FRAUD, (game_time / 10) - 30);
+    set_global_var(GVAR_DEN_WAREHOUSE_ACCESS, 1);
+    set_global_var(GVAR_TOWN_REP_GHOST_FARM, 2);
 end
 
 procedure VConComp05
 begin
-    gsay_message(371, 116, 50);
-    set_global_var(146, 1);
+    gsay_message(SCRIPT_SCGGCAP, 116, NEUTRAL_REACTION);
+    set_global_var(GVAR_ENEMY_VAULT_VILLAGE, 1);
 end
 
 procedure VConComp06
 begin
-    gsay_message(371, 117, 50);
-    set_global_var(147, game_time / 10);
-    set_global_var(155, global_var(155) + 5);
-    set_global_var(17, 1);
-    set_global_var(308, 2);
+    gsay_message(SCRIPT_SCGGCAP, 117, NEUTRAL_REACTION);
+    set_global_var(GVAR_BROKEN_HILLS_FRAUD, game_time / 10);
+    set_global_var(GVAR_BRAIN_BOT_BRAIN, global_var(GVAR_BRAIN_BOT_BRAIN) + 5);
+    set_global_var(GVAR_DEN_WAREHOUSE_ACCESS, 1);
+    set_global_var(GVAR_TOWN_REP_GHOST_FARM, 2);
 end
 
 procedure VConComp07
 begin
-    gsay_message(371, 118, 50);
-    set_global_var(147, game_time / 10);
-    set_global_var(155, global_var(155) + 5);
-    set_global_var(17, 1);
-    set_global_var(308, 2);
+    gsay_message(SCRIPT_SCGGCAP, 118, NEUTRAL_REACTION);
+    set_global_var(GVAR_BROKEN_HILLS_FRAUD, game_time / 10);
+    set_global_var(GVAR_BRAIN_BOT_BRAIN, global_var(GVAR_BRAIN_BOT_BRAIN) + 5);
+    set_global_var(GVAR_DEN_WAREHOUSE_ACCESS, 1);
+    set_global_var(GVAR_TOWN_REP_GHOST_FARM, 2);
 end
 
 procedure VConComp08
 begin
-    gsay_message(371, 119, 50);
-    set_global_var(147, (game_time / 10) - 299);
-    set_global_var(155, global_var(155) + 5);
-    set_global_var(17, 1);
-    set_global_var(308, 2);
+    gsay_message(SCRIPT_SCGGCAP, 119, NEUTRAL_REACTION);
+    set_global_var(GVAR_BROKEN_HILLS_FRAUD, (game_time / 10) - 299);
+    set_global_var(GVAR_BRAIN_BOT_BRAIN, global_var(GVAR_BRAIN_BOT_BRAIN) + 5);
+    set_global_var(GVAR_DEN_WAREHOUSE_ACCESS, 1);
+    set_global_var(GVAR_TOWN_REP_GHOST_FARM, 2);
 end
 
 procedure VConComp09
 begin
-    gsay_reply(371, 120);
-    giq_option(4, 371, 121, VConComp03, 50);
-    giq_option(4, 371, 122, VConComp04, 50);
-    giq_option(4, 371, 123, VConComp05, 50);
-    giq_option(4, 371, 124, VConComp06, 50);
-    giq_option(4, 371, 125, VConComp07, 50);
-    giq_option(4, 371, 126, VConComp08, 50);
+    gsay_reply(SCRIPT_SCGGCAP, 120);
+    giq_option(4, SCRIPT_SCGGCAP, 121, VConComp03, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SCGGCAP, 122, VConComp04, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SCGGCAP, 123, VConComp05, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SCGGCAP, 124, VConComp06, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SCGGCAP, 125, VConComp07, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SCGGCAP, 126, VConComp08, NEUTRAL_REACTION);
 end
 
 procedure VConComp10
 begin
     if (local_var(1) == 1) then begin
-        set_global_var(146, 1);
+        set_global_var(GVAR_ENEMY_VAULT_VILLAGE, 1);
     end
     else begin
         set_local_var(1, 1);
     end
-    gsay_message(371, 127, 51);
+    gsay_message(SCRIPT_SCGGCAP, 127, BAD_REACTION);
 end
 
 procedure VConComp11
 begin
-    gsay_reply(371, 127);
-    giq_option(4, 371, 129, VConComp12, 50);
-    giq_option(4, 371, 130, VConComp14, 50);
-    giq_option(4, 371, 131, VConComp13, 50);
-    giq_option(4, 371, 132, VConComp14, 50);
+    gsay_reply(SCRIPT_SCGGCAP, 127);
+    giq_option(4, SCRIPT_SCGGCAP, 129, VConComp12, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SCGGCAP, 130, VConComp14, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SCGGCAP, 131, VConComp13, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SCGGCAP, 132, VConComp14, NEUTRAL_REACTION);
 end
 
 procedure VConComp12
 begin
-    gsay_reply(371, 133);
-    giq_option(4, 371, 134, VConComp12a, 50);
-    giq_option(4, 371, 135, VConComp15, 50);
+    gsay_reply(SCRIPT_SCGGCAP, 133);
+    giq_option(4, SCRIPT_SCGGCAP, 134, VConComp12a, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SCGGCAP, 135, VConComp15, NEUTRAL_REACTION);
 end
 
 procedure VConComp12a
 begin
-    set_global_var(234, 1);
+    set_global_var(GVAR_NCR_POWER_ON, 1);
     call VConComp15();
 end
 
 procedure VConComp13
 begin
-    gsay_reply(371, 136);
-    giq_option(4, 371, 134, VConComp13a, 50);
+    gsay_reply(SCRIPT_SCGGCAP, 136);
+    giq_option(4, SCRIPT_SCGGCAP, 134, VConComp13a, NEUTRAL_REACTION);
 end
 
 procedure VConComp13a
 begin
-    set_global_var(235, 1);
+    set_global_var(GVAR_SULIK_FREE, 1);
     call VConComp15();
 end
 
 procedure VConComp14
 begin
-    gsay_reply(371, 139);
+    gsay_reply(SCRIPT_SCGGCAP, 139);
     call VConComp01a();
 end
 
 procedure VConComp15
 begin
-    gsay_reply(371, 140);
+    gsay_reply(SCRIPT_SCGGCAP, 140);
     call VConComp01a();
 end
 
 procedure VConComp16
 begin
-    gsay_reply(371, 141);
-    giq_option(6, 371, 142, VConComp17, 50);
-    giq_option(4, 371, 138, VConComp15, 50);
+    gsay_reply(SCRIPT_SCGGCAP, 141);
+    giq_option(6, SCRIPT_SCGGCAP, 142, VConComp17, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SCGGCAP, 138, VConComp15, NEUTRAL_REACTION);
 end
 
 procedure VConComp17
 begin
-    gsay_reply(371, 143);
-    giq_option(4, 634, 104, VConCompEnd, 50);
-    giq_option(6, 371, 144, VConComp17a, 50);
-    giq_option(6, 371, 145, VConComp17b, 50);
+    gsay_reply(SCRIPT_SCGGCAP, 143);
+    giq_option(4, SCRIPT_BSCOMP3, 104, VConCompEnd, NEUTRAL_REACTION);
+    giq_option(6, SCRIPT_SCGGCAP, 144, VConComp17a, NEUTRAL_REACTION);
+    giq_option(6, SCRIPT_SCGGCAP, 145, VConComp17b, NEUTRAL_REACTION);
 end
 
 procedure VConComp17a
@@ -367,25 +367,25 @@ end
 
 procedure VConComp18
 begin
-    gsay_reply(371, 146);
+    gsay_reply(SCRIPT_SCGGCAP, 146);
     call VConComp18a();
 end
 
 procedure VConComp18a
 begin
-    giq_option(6, 371, 147, VConComp19, 50);
-    giq_option(6, 371, 148, VConComp19, 50);
-    giq_option(7, 371, 149, VConComp19, 50);
-    giq_option(4, 371, 150, VConCompEnd, 50);
+    giq_option(6, SCRIPT_SCGGCAP, 147, VConComp19, NEUTRAL_REACTION);
+    giq_option(6, SCRIPT_SCGGCAP, 148, VConComp19, NEUTRAL_REACTION);
+    giq_option(7, SCRIPT_SCGGCAP, 149, VConComp19, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SCGGCAP, 150, VConCompEnd, NEUTRAL_REACTION);
 end
 
 procedure VConComp19
 begin
-    gsay_reply(371, 151);
-    giq_option(6, 371, 152, VConComp20, 50);
-    giq_option(6, 371, 153, VConComp21, 50);
-    giq_option(6, 371, 154, VConComp20, 50);
-    giq_option(7, 371, 155, VConComp19a, 50);
+    gsay_reply(SCRIPT_SCGGCAP, 151);
+    giq_option(6, SCRIPT_SCGGCAP, 152, VConComp20, NEUTRAL_REACTION);
+    giq_option(6, SCRIPT_SCGGCAP, 153, VConComp21, NEUTRAL_REACTION);
+    giq_option(6, SCRIPT_SCGGCAP, 154, VConComp20, NEUTRAL_REACTION);
+    giq_option(7, SCRIPT_SCGGCAP, 155, VConComp19a, NEUTRAL_REACTION);
 end
 
 procedure VConComp19a
@@ -400,95 +400,95 @@ end
 
 procedure VConComp20
 begin
-    gsay_reply(371, 156);
+    gsay_reply(SCRIPT_SCGGCAP, 156);
     call VConComp18a();
 end
 
 procedure VConComp21
 begin
-    gsay_reply(371, 157);
-    giq_option(6, 371, 158, VConComp27, 50);
-    giq_option(7, 371, 159, VConComp30, 50);
-    giq_option(4, 371, 150, VConCompEnd, 50);
+    gsay_reply(SCRIPT_SCGGCAP, 157);
+    giq_option(6, SCRIPT_SCGGCAP, 158, VConComp27, NEUTRAL_REACTION);
+    giq_option(7, SCRIPT_SCGGCAP, 159, VConComp30, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SCGGCAP, 150, VConCompEnd, NEUTRAL_REACTION);
 end
 
 procedure VConComp22
 begin
-    gsay_reply(371, 160);
-    giq_option(4, 371, 161, VConComp23, 50);
-    giq_option(4, 371, 162, VConComp24, 50);
-    giq_option(4, 371, 163, VConComp25, 50);
-    giq_option(4, 371, 164, VConComp26, 50);
+    gsay_reply(SCRIPT_SCGGCAP, 160);
+    giq_option(4, SCRIPT_SCGGCAP, 161, VConComp23, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SCGGCAP, 162, VConComp24, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SCGGCAP, 163, VConComp25, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SCGGCAP, 164, VConComp26, NEUTRAL_REACTION);
 end
 
 procedure VConComp23
 begin
-    gsay_reply(371, 165);
-    giq_option(4, 371, 166, VConComp22, 50);
-    giq_option(4, 371, 138, VConComp18, 50);
+    gsay_reply(SCRIPT_SCGGCAP, 165);
+    giq_option(4, SCRIPT_SCGGCAP, 166, VConComp22, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SCGGCAP, 138, VConComp18, NEUTRAL_REACTION);
 end
 
 procedure VConComp24
 begin
-    gsay_reply(371, 167);
-    giq_option(4, 371, 166, VConComp22, 50);
-    giq_option(4, 371, 138, VConComp18, 50);
+    gsay_reply(SCRIPT_SCGGCAP, 167);
+    giq_option(4, SCRIPT_SCGGCAP, 166, VConComp22, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SCGGCAP, 138, VConComp18, NEUTRAL_REACTION);
 end
 
 procedure VConComp25
 begin
-    gsay_reply(371, 168);
-    giq_option(4, 371, 166, VConComp22, 50);
-    giq_option(4, 371, 138, VConComp18, 50);
+    gsay_reply(SCRIPT_SCGGCAP, 168);
+    giq_option(4, SCRIPT_SCGGCAP, 166, VConComp22, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SCGGCAP, 138, VConComp18, NEUTRAL_REACTION);
 end
 
 procedure VConComp26
 begin
-    gsay_reply(371, 169);
-    giq_option(4, 371, 166, VConComp22, 50);
-    giq_option(4, 371, 138, VConComp18, 50);
+    gsay_reply(SCRIPT_SCGGCAP, 169);
+    giq_option(4, SCRIPT_SCGGCAP, 166, VConComp22, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SCGGCAP, 138, VConComp18, NEUTRAL_REACTION);
 end
 
 procedure VConComp27
 begin
-    gsay_reply(371, 170);
-    giq_option(4, 371, 172, VConComp28, 50);
-    giq_option(4, 371, 173, VConComp29, 50);
+    gsay_reply(SCRIPT_SCGGCAP, 170);
+    giq_option(4, SCRIPT_SCGGCAP, 172, VConComp28, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SCGGCAP, 173, VConComp29, NEUTRAL_REACTION);
 end
 
 procedure VConComp28
 begin
-    gsay_reply(371, 171);
-    giq_option(4, 371, 138, VConComp32, 50);
-    giq_option(4, 371, 150, VConCompEnd, 50);
+    gsay_reply(SCRIPT_SCGGCAP, 171);
+    giq_option(4, SCRIPT_SCGGCAP, 138, VConComp32, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SCGGCAP, 150, VConCompEnd, NEUTRAL_REACTION);
 end
 
 procedure VConComp29
 begin
-    gsay_reply(371, 146);
+    gsay_reply(SCRIPT_SCGGCAP, 146);
     call VConComp18a();
 end
 
 procedure VConComp30
 begin
-    gsay_reply(371, 174);
-    giq_option(4, 371, 172, VConComp31, 50);
-    giq_option(4, 371, 173, VConComp29, 50);
+    gsay_reply(SCRIPT_SCGGCAP, 174);
+    giq_option(4, SCRIPT_SCGGCAP, 172, VConComp31, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SCGGCAP, 173, VConComp29, NEUTRAL_REACTION);
 end
 
 procedure VConComp31
 begin
-    gsay_reply(371, 175);
-    giq_option(4, 371, 138, VConComp32, 50);
-    giq_option(4, 371, 150, VConCompEnd, 50);
+    gsay_reply(SCRIPT_SCGGCAP, 175);
+    giq_option(4, SCRIPT_SCGGCAP, 138, VConComp32, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SCGGCAP, 150, VConCompEnd, NEUTRAL_REACTION);
 end
 
 procedure VConComp32
 begin
-    gsay_reply(371, 176);
-    giq_option(4, 371, 103, VConComp02, 50);
-    giq_option(4, 371, 104, VConComp11, 50);
-    giq_option(4, 371, 105, VConComp05, 50);
+    gsay_reply(SCRIPT_SCGGCAP, 176);
+    giq_option(4, SCRIPT_SCGGCAP, 103, VConComp02, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SCGGCAP, 104, VConComp11, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_SCGGCAP, 105, VConComp05, NEUTRAL_REACTION);
 end
 
 procedure VConCompEnd
@@ -502,15 +502,14 @@ begin
     variable LVar2 := 0;
     variable LVar3 := 0;
     variable LVar4 := 0;
-    LVar0 := global_var(150) - ((global_var(150) - (game_time / (10 * 60 * 60 * 24))) / 2);
-    LVar1 := global_var(151) - ((global_var(151) - (game_time / (10 * 60 * 60 * 24))) / 2);
-    LVar2 := global_var(152) - ((global_var(152) - (game_time / (10 * 60 * 60 * 24))) / 2);
-    LVar3 := global_var(153) - ((global_var(153) - (game_time / (10 * 60 * 60 * 24))) / 2);
-    LVar4 := global_var(154) - ((global_var(154) - (game_time / (10 * 60 * 60 * 24))) / 2);
-    set_global_var(150, LVar0);
-    set_global_var(151, LVar1);
-    set_global_var(152, LVar2);
-    set_global_var(153, LVar3);
-    set_global_var(154, LVar4);
+    LVar0 := global_var(GVAR_SIERRA_BASE_LEVEL_BREACH) - ((global_var(GVAR_SIERRA_BASE_LEVEL_BREACH) - (game_time / (10 * 60 * 60 * 24))) / 2);
+    LVar1 := global_var(GVAR_SIERRA_BASE_ALERT) - ((global_var(GVAR_SIERRA_BASE_ALERT) - (game_time / (10 * 60 * 60 * 24))) / 2);
+    LVar2 := global_var(GVAR_SIERRA_BASE_ENEMY) - ((global_var(GVAR_SIERRA_BASE_ENEMY) - (game_time / (10 * 60 * 60 * 24))) / 2);
+    LVar3 := global_var(GVAR_SIERRA_BASE_POWER) - ((global_var(GVAR_SIERRA_BASE_POWER) - (game_time / (10 * 60 * 60 * 24))) / 2);
+    LVar4 := global_var(GVAR_SIERRA_BASE_SECURITY) - ((global_var(GVAR_SIERRA_BASE_SECURITY) - (game_time / (10 * 60 * 60 * 24))) / 2);
+    set_global_var(GVAR_SIERRA_BASE_LEVEL_BREACH, LVar0);
+    set_global_var(GVAR_SIERRA_BASE_ALERT, LVar1);
+    set_global_var(GVAR_SIERRA_BASE_ENEMY, LVar2);
+    set_global_var(GVAR_SIERRA_BASE_POWER, LVar3);
+    set_global_var(GVAR_SIERRA_BASE_SECURITY, LVar4);
 end
-
