diff --git a/Games/Fallout2.Steam/Original/ZCSLAVE.ssl b/Games/Fallout2.Steam/ReDefine/ZCSLAVE.ssl
index 423ac82..e9e85c2 100644
--- a/Games/Fallout2.Steam/Original/ZCSLAVE.ssl
+++ b/Games/Fallout2.Steam/ReDefine/ZCSLAVE.ssl
@@ -149,12 +149,12 @@ procedure start
 begin
     if (only_once == 0) then begin
         only_once := 1;
-        critter_add_trait(self_obj, 1, 6, 25);
+        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 25);
         if ((obj_pid(self_obj) == 16777240) or (obj_pid(self_obj) == 16777239) or ((obj_pid(self_obj) == 16777238) or (obj_pid(self_obj) == 16777237))) then begin
-            critter_add_trait(self_obj, 1, 5, 13);
+            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_THUGS);
         end
         else begin
-            critter_add_trait(self_obj, 1, 5, 14);
+            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_PEASANTS);
         end
     end
 end
@@ -187,12 +187,12 @@ begin
                             animate_move_obj_to_tile(self_obj, step_tile, 1);
                         end
                         if (anim_busy(self_obj) == 0) then begin
-                            if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
+                            if (tile_get_next_critter(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), elevation(self_obj), 0) != 0) then begin
                                 if (anim_busy(self_obj) == 0) then begin
-                                    global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
+                                    global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                     animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                     global_temp := (global_temp + 1) % 6;
-                                    while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
+                                    while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                         debug_msg("flee loop: rot == " + global_temp);
                                         animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                         global_temp := (global_temp + 1) % 6;
@@ -217,26 +217,26 @@ begin
             if (local_var(2) == 0) then begin
                 if (tile_distance_objs(self_obj, dude_obj) > 7) then begin
                     if (tile_distance_objs(self_obj, dude_obj) > (7 * 2)) then begin
-                        if ((tile_num(self_obj) != tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 3)) and (tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 3) != 0)) then begin
-                            if ((dest_tile == tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 3)) and (step_tile < 0)) then begin
+                        if ((tile_num(self_obj) != tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), 3)) and (tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), 3) != 0)) then begin
+                            if ((dest_tile == tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), 3)) and (step_tile < 0)) then begin
                                 step_tile := step_tile + 1;
                             end
                             else begin
                                 if (anim_busy(self_obj) == 0) then begin
-                                    dest_tile := tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 3);
-                                    step_tile := tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 3);
+                                    dest_tile := tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), 3);
+                                    step_tile := tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), 3);
                                     animate_move_obj_to_tile(self_obj, step_tile, 1);
-                                    while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 3)) >= tile_distance(step_tile, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 3)))) do begin
+                                    while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), 3)) >= tile_distance(step_tile, tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), 3)))) do begin
                                         step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), (((tile_distance_objs(dude_obj, self_obj) / 5) + 1) % tile_distance(step_tile, tile_num(self_obj))) + 1);
                                         animate_move_obj_to_tile(self_obj, step_tile, 1);
                                     end
                                     if (anim_busy(self_obj) == 0) then begin
-                                        if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
+                                        if (tile_get_next_critter(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), elevation(self_obj), 0) != 0) then begin
                                             if (anim_busy(self_obj) == 0) then begin
-                                                global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
+                                                global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                                 animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                 global_temp := (global_temp + 1) % 6;
-                                                while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
+                                                while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                     debug_msg("flee loop: rot == " + global_temp);
                                                     animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                     global_temp := (global_temp + 1) % 6;
@@ -249,7 +249,7 @@ begin
                                     end
                                 end
                                 else begin
-                                    if (tile_distance(tile_num(self_obj), tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 3)) < tile_distance(dest_tile, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 3))) then begin
+                                    if (tile_distance(tile_num(self_obj), tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), 3)) < tile_distance(dest_tile, tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), 3))) then begin
                                         reg_anim_func(2, self_obj);
                                     end
                                 end
@@ -257,26 +257,26 @@ begin
                         end
                     end
                     else begin
-                        if ((tile_num(self_obj) != tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 3)) and (tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 3) != 0)) then begin
-                            if ((dest_tile == tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 3)) and (step_tile < 0)) then begin
+                        if ((tile_num(self_obj) != tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), 3)) and (tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), 3) != 0)) then begin
+                            if ((dest_tile == tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), 3)) and (step_tile < 0)) then begin
                                 step_tile := step_tile + 1;
                             end
                             else begin
                                 if (anim_busy(self_obj) == 0) then begin
-                                    dest_tile := tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 3);
-                                    step_tile := tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 3);
+                                    dest_tile := tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), 3);
+                                    step_tile := tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), 3);
                                     animate_move_obj_to_tile(self_obj, step_tile, 0);
-                                    while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 3)) >= tile_distance(step_tile, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 3)))) do begin
+                                    while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), 3)) >= tile_distance(step_tile, tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), 3)))) do begin
                                         step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), (((tile_distance_objs(dude_obj, self_obj) / 5) + 1) % tile_distance(step_tile, tile_num(self_obj))) + 1);
                                         animate_move_obj_to_tile(self_obj, step_tile, 0);
                                     end
                                     if (anim_busy(self_obj) == 0) then begin
-                                        if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
+                                        if (tile_get_next_critter(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), elevation(self_obj), 0) != 0) then begin
                                             if (anim_busy(self_obj) == 0) then begin
-                                                global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
+                                                global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                                 animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                 global_temp := (global_temp + 1) % 6;
-                                                while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
+                                                while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                     debug_msg("flee loop: rot == " + global_temp);
                                                     animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                     global_temp := (global_temp + 1) % 6;
@@ -289,7 +289,7 @@ begin
                                     end
                                 end
                                 else begin
-                                    if (tile_distance(tile_num(self_obj), tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 3)) < tile_distance(dest_tile, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 3))) then begin
+                                    if (tile_distance(tile_num(self_obj), tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), 3)) < tile_distance(dest_tile, tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), 3))) then begin
                                         reg_anim_func(2, self_obj);
                                     end
                                 end
@@ -326,10 +326,10 @@ procedure look_at_p_proc
 begin
     script_overrides;
     if (local_var(1)) then begin
-        display_msg(message_str(71, 101));
+        display_mstr(101);
     end
     else begin
-        display_msg(message_str(71, 100));
+        display_mstr(100);
     end
 end
 
@@ -337,10 +337,10 @@ procedure description_p_proc
 begin
     script_overrides;
     if (local_var(1) > 0) then begin
-        display_msg(message_str(71, 151));
+        display_mstr(151);
     end
     else begin
-        display_msg(message_str(71, 150));
+        display_mstr(150);
     end
 end
 
@@ -363,7 +363,7 @@ begin
     if (is_attacking == 0) then begin
         is_attacking := 1;
         set_local_var(0, 1);
-        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
+        attack(dude_obj);
     end
 end
 
@@ -375,4 +375,3 @@ end
 procedure Node999
 begin
 end
-
