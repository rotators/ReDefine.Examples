diff --git a/Games/Fallout2.Steam/Original/DANE.ssl b/Games/Fallout2.Steam/ReDefine/DANE.ssl
index 48f00a2..3869a3a 100644
--- a/Games/Fallout2.Steam/Original/DANE.ssl
+++ b/Games/Fallout2.Steam/ReDefine/DANE.ssl
@@ -51,44 +51,44 @@ variable exit_line;
 procedure start
 begin
     if (Only_Once) then begin
-        critter_add_trait(self_obj, 1, 6, 20);
-        critter_add_trait(self_obj, 1, 5, 69);
+        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 20);
+        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_PARTY_MACRAE_AGGRESSIVE);
         Only_Once := 0;
     end
-    if (script_action == 11) then begin
+    if (script_action == talk_proc) then begin
         call do_dialogue();
     end
     else begin
-        if ((script_action == 21) or (script_action == 3)) then begin
+        if ((script_action == look_at_proc) or (script_action == description_proc)) then begin
             script_overrides;
-            display_msg(message_str(499, 100));
+            display_msg(message_str(SCRIPT_ECMUTPAT, 100));
         end
         else begin
-            if (script_action == 4) then begin
+            if (script_action == pickup_proc) then begin
                 hostile := 1;
             end
             else begin
-                if (script_action == 18) then begin
+                if (script_action == destroy_proc) then begin
                     if (source_obj == dude_obj) then begin
-                        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
-                            set_global_var(156, 1);
-                            set_global_var(157, 0);
+                        if (((global_var(GVAR_GECKO_SKEETER_PART) + global_var(GVAR_GECKO_REQ_FORM)) >= 25) and ((global_var(GVAR_GECKO_REQ_FORM) > (2 * global_var(GVAR_GECKO_SKEETER_PART))) or (global_var(GVAR_SIERRA_LOCKOUT) == 1))) then begin
+                            set_global_var(GVAR_SIERRA_LOCKOUT, 1);
+                            set_global_var(GVAR_SIERRA_PASSWORD, 0);
                         end
-                        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
-                            set_global_var(157, 1);
-                            set_global_var(156, 0);
+                        if (((global_var(GVAR_GECKO_SKEETER_PART) + global_var(GVAR_GECKO_REQ_FORM)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GECKO_REQ_FORM))) or (global_var(GVAR_SIERRA_PASSWORD) == 1))) then begin
+                            set_global_var(GVAR_SIERRA_PASSWORD, 1);
+                            set_global_var(GVAR_SIERRA_LOCKOUT, 0);
                         end
-                        set_global_var(160, global_var(160) + 1);
-                        if ((global_var(160) % 6) == 0) then begin
-                            set_global_var(155, global_var(155) + 1);
+                        set_global_var(GVAR_GECKO_SKEETER_PART, global_var(GVAR_GECKO_SKEETER_PART) + 1);
+                        if ((global_var(GVAR_GECKO_SKEETER_PART) % 6) == 0) then begin
+                            set_global_var(GVAR_BRAIN_BOT_BRAIN, global_var(GVAR_BRAIN_BOT_BRAIN) + 1);
                         end
                     end
                 end
                 else begin
-                    if (script_action == 12) then begin
+                    if (script_action == critter_proc) then begin
                         if (hostile) then begin
                             hostile := 0;
-                            attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
+                            attack(dude_obj);
                         end
                     end
                 end
@@ -100,7 +100,7 @@ end
 procedure do_dialogue
 begin
     call get_reaction();
-    start_gdialog(-1, self_obj, 4, -1, -1);
+    start_dialogue(self_obj, 4);
     gsay_start;
     if (local_var(6) == 0) then begin
         call dane00();
@@ -224,244 +224,244 @@ end
 procedure dane00
 begin
     set_local_var(6, 1);
-    gsay_reply(499, 101);
+    gsay_reply(SCRIPT_ECMUTPAT, 101);
     call danemore();
-    gsay_reply(499, 102);
+    gsay_reply(SCRIPT_ECMUTPAT, 102);
     call danemore();
-    gsay_message(499, 103, 50);
+    gsay_message(SCRIPT_ECMUTPAT, 103, NEUTRAL_REACTION);
 end
 
 procedure dane01
 begin
     set_local_var(7, 1);
-    gsay_reply(499, 104);
+    gsay_reply(SCRIPT_ECMUTPAT, 104);
     call danemore();
-    gsay_reply(499, 105);
+    gsay_reply(SCRIPT_ECMUTPAT, 105);
     call danemore();
-    gsay_message(499, 106, 50);
+    gsay_message(SCRIPT_ECMUTPAT, 106, NEUTRAL_REACTION);
 end
 
 procedure dane02
 begin
     set_local_var(8, 1);
-    gsay_reply(499, 107);
+    gsay_reply(SCRIPT_ECMUTPAT, 107);
     call danemore();
-    gsay_reply(499, 108);
+    gsay_reply(SCRIPT_ECMUTPAT, 108);
     call danemore();
-    gsay_reply(499, 109);
+    gsay_reply(SCRIPT_ECMUTPAT, 109);
     call danemore();
-    gsay_message(499, 110, 50);
+    gsay_message(SCRIPT_ECMUTPAT, 110, NEUTRAL_REACTION);
 end
 
 procedure dane03
 begin
     set_local_var(9, 1);
-    gsay_reply(499, 111);
+    gsay_reply(SCRIPT_ECMUTPAT, 111);
     call danemore();
-    gsay_reply(499, 112);
+    gsay_reply(SCRIPT_ECMUTPAT, 112);
     call danemore();
-    gsay_message(499, 113, 50);
+    gsay_message(SCRIPT_ECMUTPAT, 113, NEUTRAL_REACTION);
 end
 
 procedure dane04
 begin
     set_local_var(10, 1);
-    gsay_reply(499, 114);
+    gsay_reply(SCRIPT_ECMUTPAT, 114);
     call danemore();
-    gsay_reply(499, 115);
+    gsay_reply(SCRIPT_ECMUTPAT, 115);
     call danemore();
-    gsay_reply(499, 116);
+    gsay_reply(SCRIPT_ECMUTPAT, 116);
     call danemore();
-    gsay_message(499, 117, 50);
+    gsay_message(SCRIPT_ECMUTPAT, 117, NEUTRAL_REACTION);
 end
 
 procedure dane05
 begin
     set_local_var(11, 1);
-    gsay_reply(499, 118);
+    gsay_reply(SCRIPT_ECMUTPAT, 118);
     call danemore();
-    gsay_reply(499, 119);
+    gsay_reply(SCRIPT_ECMUTPAT, 119);
     call danemore();
-    gsay_message(499, 120, 50);
+    gsay_message(SCRIPT_ECMUTPAT, 120, NEUTRAL_REACTION);
 end
 
 procedure dane06
 begin
     set_local_var(12, 1);
-    gsay_reply(499, 121);
+    gsay_reply(SCRIPT_ECMUTPAT, 121);
     call danemore();
-    gsay_reply(499, 122);
+    gsay_reply(SCRIPT_ECMUTPAT, 122);
     call danemore();
-    gsay_reply(499, 123);
+    gsay_reply(SCRIPT_ECMUTPAT, 123);
     call danemore();
-    gsay_message(499, 124, 50);
+    gsay_message(SCRIPT_ECMUTPAT, 124, NEUTRAL_REACTION);
 end
 
 procedure dane07
 begin
     set_local_var(13, 1);
-    gsay_reply(499, 125);
+    gsay_reply(SCRIPT_ECMUTPAT, 125);
     call danemore();
-    gsay_reply(499, 126);
+    gsay_reply(SCRIPT_ECMUTPAT, 126);
     call danemore();
-    gsay_message(499, 127, 50);
+    gsay_message(SCRIPT_ECMUTPAT, 127, NEUTRAL_REACTION);
 end
 
 procedure dane08
 begin
     set_local_var(14, 1);
-    gsay_reply(499, 128);
+    gsay_reply(SCRIPT_ECMUTPAT, 128);
     call danemore();
-    gsay_reply(499, 129);
+    gsay_reply(SCRIPT_ECMUTPAT, 129);
     call danemore();
-    gsay_reply(499, 130);
+    gsay_reply(SCRIPT_ECMUTPAT, 130);
     call danemore();
-    gsay_message(499, 131, 50);
+    gsay_message(SCRIPT_ECMUTPAT, 131, NEUTRAL_REACTION);
 end
 
 procedure dane09
 begin
     set_local_var(15, 1);
-    gsay_reply(499, 132);
+    gsay_reply(SCRIPT_ECMUTPAT, 132);
     call danemore();
-    gsay_reply(499, 133);
+    gsay_reply(SCRIPT_ECMUTPAT, 133);
     call danemore();
-    gsay_reply(499, 134);
+    gsay_reply(SCRIPT_ECMUTPAT, 134);
     call danemore();
-    gsay_message(499, 135, 50);
+    gsay_message(SCRIPT_ECMUTPAT, 135, NEUTRAL_REACTION);
 end
 
 procedure dane10
 begin
     set_local_var(16, 1);
-    gsay_reply(499, 136);
+    gsay_reply(SCRIPT_ECMUTPAT, 136);
     call danemore();
-    gsay_reply(499, 137);
+    gsay_reply(SCRIPT_ECMUTPAT, 137);
     call danemore();
-    gsay_message(499, 138, 50);
+    gsay_message(SCRIPT_ECMUTPAT, 138, NEUTRAL_REACTION);
 end
 
 procedure dane11
 begin
     set_local_var(17, 1);
-    gsay_reply(499, 139);
+    gsay_reply(SCRIPT_ECMUTPAT, 139);
     call danemore();
-    gsay_reply(499, 140);
+    gsay_reply(SCRIPT_ECMUTPAT, 140);
     call danemore();
-    gsay_reply(499, 141);
+    gsay_reply(SCRIPT_ECMUTPAT, 141);
     call danemore();
-    gsay_message(499, 142, 50);
+    gsay_message(SCRIPT_ECMUTPAT, 142, NEUTRAL_REACTION);
 end
 
 procedure dane12
 begin
     set_local_var(18, 1);
-    gsay_reply(499, 143);
+    gsay_reply(SCRIPT_ECMUTPAT, 143);
     call danemore();
-    gsay_reply(499, 144);
+    gsay_reply(SCRIPT_ECMUTPAT, 144);
     call danemore();
-    gsay_reply(499, 145);
+    gsay_reply(SCRIPT_ECMUTPAT, 145);
     call danemore();
-    gsay_message(499, 146, 50);
+    gsay_message(SCRIPT_ECMUTPAT, 146, NEUTRAL_REACTION);
 end
 
 procedure dane13
 begin
     set_local_var(19, 1);
-    gsay_reply(499, 147);
+    gsay_reply(SCRIPT_ECMUTPAT, 147);
     call danemore();
-    gsay_reply(499, 148);
+    gsay_reply(SCRIPT_ECMUTPAT, 148);
     call danemore();
-    gsay_reply(499, 149);
+    gsay_reply(SCRIPT_ECMUTPAT, 149);
     call danemore();
-    gsay_reply(499, 150);
+    gsay_reply(SCRIPT_ECMUTPAT, 150);
     call danemore();
-    gsay_message(499, 151, 50);
+    gsay_message(SCRIPT_ECMUTPAT, 151, NEUTRAL_REACTION);
 end
 
 procedure dane14
 begin
     set_local_var(20, 1);
-    gsay_reply(499, 152);
+    gsay_reply(SCRIPT_ECMUTPAT, 152);
     call danemore();
-    gsay_reply(499, 153);
+    gsay_reply(SCRIPT_ECMUTPAT, 153);
     call danemore();
-    gsay_reply(499, 154);
+    gsay_reply(SCRIPT_ECMUTPAT, 154);
     call danemore();
-    gsay_message(499, 155, 50);
+    gsay_message(SCRIPT_ECMUTPAT, 155, NEUTRAL_REACTION);
 end
 
 procedure dane15
 begin
     set_local_var(21, 1);
-    gsay_reply(499, 156);
+    gsay_reply(SCRIPT_ECMUTPAT, 156);
     call danemore();
-    gsay_reply(499, 157);
+    gsay_reply(SCRIPT_ECMUTPAT, 157);
     call danemore();
-    gsay_message(499, 158, 50);
+    gsay_message(SCRIPT_ECMUTPAT, 158, NEUTRAL_REACTION);
 end
 
 procedure dane16
 begin
-    gsay_reply(499, 159);
+    gsay_reply(SCRIPT_ECMUTPAT, 159);
     call danemore();
-    gsay_reply(499, 160);
+    gsay_reply(SCRIPT_ECMUTPAT, 160);
     call danemore();
-    gsay_reply(499, 161);
+    gsay_reply(SCRIPT_ECMUTPAT, 161);
     call danemore();
-    gsay_reply(499, 162);
-    giq_option(7, 499, 163, dane17, 50);
-    giq_option(7, 499, 164, dane18, 50);
-    giq_option(4, 499, 165, dane19, 50);
-    giq_option(4, 499, 166, dane20, 50);
-    giq_option(4, 499, 167, dane21, 50);
-    giq_option(4, 499, 168, dane22, 50);
-    giq_option(-3, 499, 169, dane23, 50);
+    gsay_reply(SCRIPT_ECMUTPAT, 162);
+    giq_option(7, SCRIPT_ECMUTPAT, 163, dane17, NEUTRAL_REACTION);
+    giq_option(7, SCRIPT_ECMUTPAT, 164, dane18, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_ECMUTPAT, 165, dane19, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_ECMUTPAT, 166, dane20, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_ECMUTPAT, 167, dane21, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_ECMUTPAT, 168, dane22, NEUTRAL_REACTION);
+    giq_option(-3, SCRIPT_ECMUTPAT, 169, dane23, NEUTRAL_REACTION);
 end
 
 procedure dane17
 begin
-    gsay_reply(499, 170);
+    gsay_reply(SCRIPT_ECMUTPAT, 170);
     call danemore();
-    gsay_reply(499, 171);
+    gsay_reply(SCRIPT_ECMUTPAT, 171);
     call danemore();
-    gsay_reply(499, 172);
+    gsay_reply(SCRIPT_ECMUTPAT, 172);
     if (local_var(4) == 0) then begin
         set_local_var(4, 1);
-        gsay_reply(499, 173);
-        giq_option(7, 499, 174, dane18, 50);
-        giq_option(4, 499, 175, dane19, 50);
-        giq_option(4, 499, 176, dane20, 50);
-        giq_option(4, 499, 177, dane21, 50);
-        giq_option(4, 499, 178, dane22, 50);
+        gsay_reply(SCRIPT_ECMUTPAT, 173);
+        giq_option(7, SCRIPT_ECMUTPAT, 174, dane18, NEUTRAL_REACTION);
+        giq_option(4, SCRIPT_ECMUTPAT, 175, dane19, NEUTRAL_REACTION);
+        giq_option(4, SCRIPT_ECMUTPAT, 176, dane20, NEUTRAL_REACTION);
+        giq_option(4, SCRIPT_ECMUTPAT, 177, dane21, NEUTRAL_REACTION);
+        giq_option(4, SCRIPT_ECMUTPAT, 178, dane22, NEUTRAL_REACTION);
     end
     else begin
         call danemore();
-        gsay_message(499, 179, 50);
+        gsay_message(SCRIPT_ECMUTPAT, 179, NEUTRAL_REACTION);
     end
 end
 
 procedure dane18
 begin
-    gsay_reply(499, 180);
+    gsay_reply(SCRIPT_ECMUTPAT, 180);
     call danemore();
-    gsay_reply(499, 181);
+    gsay_reply(SCRIPT_ECMUTPAT, 181);
     call danemore();
-    gsay_reply(499, 182);
+    gsay_reply(SCRIPT_ECMUTPAT, 182);
     call danemore();
-    gsay_reply(499, 183);
+    gsay_reply(SCRIPT_ECMUTPAT, 183);
     if (local_var(4) == 0) then begin
         set_local_var(4, 1);
-        gsay_reply(499, 184);
-        giq_option(7, 499, 185, dane18, 50);
-        giq_option(4, 499, 186, dane19, 50);
-        giq_option(4, 499, 187, dane20, 50);
-        giq_option(4, 499, 188, dane21, 50);
-        giq_option(4, 499, 189, dane22, 50);
+        gsay_reply(SCRIPT_ECMUTPAT, 184);
+        giq_option(7, SCRIPT_ECMUTPAT, 185, dane18, NEUTRAL_REACTION);
+        giq_option(4, SCRIPT_ECMUTPAT, 186, dane19, NEUTRAL_REACTION);
+        giq_option(4, SCRIPT_ECMUTPAT, 187, dane20, NEUTRAL_REACTION);
+        giq_option(4, SCRIPT_ECMUTPAT, 188, dane21, NEUTRAL_REACTION);
+        giq_option(4, SCRIPT_ECMUTPAT, 189, dane22, NEUTRAL_REACTION);
     end
     else begin
         call danemore();
-        gsay_message(499, 190, 50);
+        gsay_message(SCRIPT_ECMUTPAT, 190, NEUTRAL_REACTION);
     end
 end
 
@@ -469,84 +469,84 @@ procedure dane19
 begin
     if (local_var(4) == 0) then begin
         set_local_var(4, 1);
-        gsay_reply(499, 191);
-        giq_option(7, 499, 192, dane18, 50);
-        giq_option(4, 499, 193, dane19, 50);
-        giq_option(4, 499, 194, dane20, 50);
-        giq_option(4, 499, 195, dane21, 50);
-        giq_option(4, 499, 196, dane22, 50);
+        gsay_reply(SCRIPT_ECMUTPAT, 191);
+        giq_option(7, SCRIPT_ECMUTPAT, 192, dane18, NEUTRAL_REACTION);
+        giq_option(4, SCRIPT_ECMUTPAT, 193, dane19, NEUTRAL_REACTION);
+        giq_option(4, SCRIPT_ECMUTPAT, 194, dane20, NEUTRAL_REACTION);
+        giq_option(4, SCRIPT_ECMUTPAT, 195, dane21, NEUTRAL_REACTION);
+        giq_option(4, SCRIPT_ECMUTPAT, 196, dane22, NEUTRAL_REACTION);
     end
     else begin
-        gsay_message(499, 197, 50);
+        gsay_message(SCRIPT_ECMUTPAT, 197, NEUTRAL_REACTION);
     end
 end
 
 procedure dane20
 begin
-    gsay_reply(499, 198);
+    gsay_reply(SCRIPT_ECMUTPAT, 198);
     call danemore();
-    gsay_reply(499, 199);
+    gsay_reply(SCRIPT_ECMUTPAT, 199);
     if (local_var(4) == 0) then begin
         set_local_var(4, 1);
-        giq_option(7, 499, 200, dane19, 50);
-        giq_option(7, 499, 201, dane18, 50);
-        giq_option(4, 499, 202, dane19, 50);
-        giq_option(4, 499, 203, dane21, 50);
-        giq_option(4, 499, 204, dane22, 50);
-        giq_option(-3, 499, 205, dane23, 50);
+        giq_option(7, SCRIPT_ECMUTPAT, 200, dane19, NEUTRAL_REACTION);
+        giq_option(7, SCRIPT_ECMUTPAT, 201, dane18, NEUTRAL_REACTION);
+        giq_option(4, SCRIPT_ECMUTPAT, 202, dane19, NEUTRAL_REACTION);
+        giq_option(4, SCRIPT_ECMUTPAT, 203, dane21, NEUTRAL_REACTION);
+        giq_option(4, SCRIPT_ECMUTPAT, 204, dane22, NEUTRAL_REACTION);
+        giq_option(-3, SCRIPT_ECMUTPAT, 205, dane23, NEUTRAL_REACTION);
     end
     else begin
         call danemore();
-        gsay_message(499, 206, 50);
+        gsay_message(SCRIPT_ECMUTPAT, 206, NEUTRAL_REACTION);
     end
 end
 
 procedure dane21
 begin
-    gsay_reply(499, 207);
+    gsay_reply(SCRIPT_ECMUTPAT, 207);
     call danemore();
-    gsay_reply(499, 208);
+    gsay_reply(SCRIPT_ECMUTPAT, 208);
     if (local_var(4) == 0) then begin
         set_local_var(4, 1);
-        giq_option(7, 499, 209, dane19, 50);
-        giq_option(7, 499, 210, dane18, 50);
-        giq_option(4, 499, 211, dane19, 50);
-        giq_option(4, 499, 212, dane20, 50);
-        giq_option(4, 499, 213, dane22, 50);
-        giq_option(-3, 499, 214, dane23, 50);
+        giq_option(7, SCRIPT_ECMUTPAT, 209, dane19, NEUTRAL_REACTION);
+        giq_option(7, SCRIPT_ECMUTPAT, 210, dane18, NEUTRAL_REACTION);
+        giq_option(4, SCRIPT_ECMUTPAT, 211, dane19, NEUTRAL_REACTION);
+        giq_option(4, SCRIPT_ECMUTPAT, 212, dane20, NEUTRAL_REACTION);
+        giq_option(4, SCRIPT_ECMUTPAT, 213, dane22, NEUTRAL_REACTION);
+        giq_option(-3, SCRIPT_ECMUTPAT, 214, dane23, NEUTRAL_REACTION);
     end
     else begin
         call danemore();
-        gsay_message(499, 215, 50);
+        gsay_message(SCRIPT_ECMUTPAT, 215, NEUTRAL_REACTION);
     end
 end
 
 procedure dane22
 begin
     set_local_var(5, 1);
-    gsay_reply(499, 216);
+    gsay_reply(SCRIPT_ECMUTPAT, 216);
     call danemore();
-    gsay_reply(499, 217);
+    gsay_reply(SCRIPT_ECMUTPAT, 217);
     call danemore();
-    gsay_reply(499, 218);
+    gsay_reply(SCRIPT_ECMUTPAT, 218);
     call danemore();
-    gsay_message(499, 219, 50);
+    gsay_message(SCRIPT_ECMUTPAT, 219, NEUTRAL_REACTION);
 end
 
 procedure dane23
 begin
     set_local_var(5, 1);
-    gsay_message(499, 220, 50);
+    gsay_message(SCRIPT_ECMUTPAT, 220, NEUTRAL_REACTION);
 end
 
 procedure dane24
 begin
-    gsay_message(499, 221, 50);
+    gsay_message(SCRIPT_ECMUTPAT, 221, NEUTRAL_REACTION);
 end
 
 procedure danemore
 begin
-    gsay_option(499, 222, danereturn, 50);
+    giq_option(1, SCRIPT_ECMUTPAT, 222, danereturn, NEUTRAL_REACTION);
 end
 
 procedure danereturn
@@ -559,31 +559,31 @@ begin
         set_local_var(0, 50);
         set_local_var(1, 2);
         set_local_var(2, 1);
-        set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, 3)) - 25);
-        set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
-        if (has_trait(0, dude_obj, 39)) then begin
-            if (global_var(155) > 0) then begin
-                set_local_var(0, local_var(0) + global_var(155));
+        set_local_var(0, local_var(0) + (5 * dude_charisma) - 25);
+        set_local_var(0, local_var(0) + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence)));
+        if (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality)) then begin
+            if (global_var(GVAR_BRAIN_BOT_BRAIN) > 0) then begin
+                set_local_var(0, local_var(0) + global_var(GVAR_BRAIN_BOT_BRAIN));
             end
             else begin
-                set_local_var(0, local_var(0) - global_var(155));
+                set_local_var(0, local_var(0) - global_var(GVAR_BRAIN_BOT_BRAIN));
             end
         end
         else begin
             if (local_var(3) == 1) then begin
-                set_local_var(0, local_var(0) - global_var(155));
+                set_local_var(0, local_var(0) - global_var(GVAR_BRAIN_BOT_BRAIN));
             end
             else begin
-                set_local_var(0, local_var(0) + global_var(155));
+                set_local_var(0, local_var(0) + global_var(GVAR_BRAIN_BOT_BRAIN));
             end
         end
-        if (global_var(158) > 2) then begin
+        if (global_var(GVAR_GECKO_ECON_DISK) > 2) then begin
             set_local_var(0, local_var(0) - 30);
         end
-        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
+        if (((global_var(GVAR_GECKO_SKEETER_PART) + global_var(GVAR_GECKO_REQ_FORM)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GECKO_REQ_FORM))) or (global_var(GVAR_SIERRA_PASSWORD) == 1))) then begin
             set_local_var(0, local_var(0) + 20);
         end
-        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
+        if (((global_var(GVAR_GECKO_SKEETER_PART) + global_var(GVAR_GECKO_REQ_FORM)) >= 25) and ((global_var(GVAR_GECKO_REQ_FORM) > (2 * global_var(GVAR_GECKO_SKEETER_PART))) or (global_var(GVAR_SIERRA_LOCKOUT) == 1))) then begin
             set_local_var(0, local_var(0) - 20);
         end
         call ReactToLevel();
@@ -676,6 +676,5 @@ end
 
 procedure Goodbyes
 begin
-    exit_line := message_str(634, random(100, 105));
+    exit_line := message_str(SCRIPT_BSCOMP3, random(100, 105));
 end
-
