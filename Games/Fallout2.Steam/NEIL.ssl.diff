diff --git a/Games/Fallout2.Steam/Original/NEIL.ssl b/Games/Fallout2.Steam/ReDefine/NEIL.ssl
index 90cb822..5a6ecf6 100644
--- a/Games/Fallout2.Steam/Original/NEIL.ssl
+++ b/Games/Fallout2.Steam/ReDefine/NEIL.ssl
@@ -48,27 +48,27 @@ variable initialized;
 procedure start
 begin
     if (not(initialized)) then begin
-        critter_add_trait(self_obj, 1, 6, 46);
+        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 46);
         initialized := 1;
     end
     else begin
-        if (script_action == 12) then begin
+        if (script_action == critter_proc) then begin
             call critter_p_proc();
         end
         else begin
-            if (script_action == 18) then begin
+            if (script_action == destroy_proc) then begin
                 call destroy_p_proc();
             end
             else begin
-                if (script_action == 21) then begin
+                if (script_action == look_at_proc) then begin
                     call look_at_p_proc();
                 end
                 else begin
-                    if (script_action == 4) then begin
+                    if (script_action == pickup_proc) then begin
                         call pickup_p_proc();
                     end
                     else begin
-                        if (script_action == 11) then begin
+                        if (script_action == talk_proc) then begin
                             call talk_p_proc();
                         end
                     end
@@ -82,24 +82,24 @@ procedure critter_p_proc
 begin
     if (hostile) then begin
         hostile := 0;
-        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
+        attack(dude_obj);
     end
 end
 
 procedure destroy_p_proc
 begin
     if (source_obj == dude_obj) then begin
-        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
-            set_global_var(156, 1);
-            set_global_var(157, 0);
+        if (((global_var(GVAR_GECKO_SKEETER_PART) + global_var(GVAR_GECKO_REQ_FORM)) >= 25) and ((global_var(GVAR_GECKO_REQ_FORM) > (2 * global_var(GVAR_GECKO_SKEETER_PART))) or (global_var(GVAR_SIERRA_LOCKOUT) == 1))) then begin
+            set_global_var(GVAR_SIERRA_LOCKOUT, 1);
+            set_global_var(GVAR_SIERRA_PASSWORD, 0);
         end
-        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
-            set_global_var(157, 1);
-            set_global_var(156, 0);
+        if (((global_var(GVAR_GECKO_SKEETER_PART) + global_var(GVAR_GECKO_REQ_FORM)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GECKO_REQ_FORM))) or (global_var(GVAR_SIERRA_PASSWORD) == 1))) then begin
+            set_global_var(GVAR_SIERRA_PASSWORD, 1);
+            set_global_var(GVAR_SIERRA_LOCKOUT, 0);
         end
-        set_global_var(159, global_var(159) + 1);
-        if ((global_var(159) % 2) == 0) then begin
-            set_global_var(155, global_var(155) - 1);
+        set_global_var(GVAR_GECKO_REQ_FORM, global_var(GVAR_GECKO_REQ_FORM) + 1);
+        if ((global_var(GVAR_GECKO_REQ_FORM) % 2) == 0) then begin
+            set_global_var(GVAR_BRAIN_BOT_BRAIN, global_var(GVAR_BRAIN_BOT_BRAIN) - 1);
         end
     end
 end
@@ -108,10 +108,10 @@ procedure look_at_p_proc
 begin
     script_overrides;
     if (local_var(4)) then begin
-        display_msg(message_str(271, 100));
+        display_msg(message_str(SCRIPT_ZCLGECKO, 100));
     end
     else begin
-        display_msg(message_str(271, 101));
+        display_msg(message_str(SCRIPT_ZCLGECKO, 101));
     end
 end
 
@@ -127,11 +127,11 @@ begin
         call Neil00();
     end
     else begin
-        if (global_var(133) == 1) then begin
+        if (global_var(GVAR_MUTATE_WHEN) == 1) then begin
             call Neil27();
         end
         else begin
-            if ((global_var(133) == 2) and (local_var(5) == 0)) then begin
+            if ((global_var(GVAR_MUTATE_WHEN) == 2) and (local_var(5) == 0)) then begin
                 set_local_var(5, 1);
                 start_gdialog(271, self_obj, 4, -1, -1);
                 gsay_start;
@@ -140,7 +140,7 @@ begin
                 end_dialogue;
             end
             else begin
-                if ((global_var(132) == 1) and (local_var(6) == 0)) then begin
+                if ((global_var(GVAR_MUTATE) == 1) and (local_var(6) == 0)) then begin
                     call Neil31();
                 end
                 else begin
@@ -157,128 +157,128 @@ end
 
 procedure Neil00
 begin
-    float_msg(self_obj, message_str(271, 102), 2);
+    float_msg(self_obj, message_str(SCRIPT_ZCLGECKO, 102), FLOAT_MSG_RED);
 end
 
 procedure Neil01
 begin
-    gsay_reply(271, 103);
-    giq_option(-3, 271, 104, Neil02, 50);
-    giq_option(-3, 271, 105, Neil03, 50);
-    giq_option(-3, 271, 106, NeilCombat, 50);
-    giq_option(4, 271, message_str(271, 107) + proto_data(obj_pid(dude_obj), 1) + message_str(271, 108), Neil07, 50);
-    giq_option(4, 271, message_str(271, 109) + proto_data(obj_pid(dude_obj), 1) + message_str(271, 110), NeilCombat, 50);
-    giq_option(5, 271, 111, Neil16, 50);
-    giq_option(6, 271, 112, Neil24, 50);
-    giq_option(8, 271, 113, Neil26, 50);
+    gsay_reply(SCRIPT_ZCLGECKO, 103);
+    giq_option(-3, SCRIPT_ZCLGECKO, 104, Neil02, NEUTRAL_REACTION);
+    giq_option(-3, SCRIPT_ZCLGECKO, 105, Neil03, NEUTRAL_REACTION);
+    giq_option(-3, SCRIPT_ZCLGECKO, 106, NeilCombat, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_ZCLGECKO, message_str(SCRIPT_ZCLGECKO, 107) + proto_data(obj_pid(dude_obj), 1) + message_str(SCRIPT_ZCLGECKO, 108), Neil07, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_ZCLGECKO, message_str(SCRIPT_ZCLGECKO, 109) + proto_data(obj_pid(dude_obj), 1) + message_str(SCRIPT_ZCLGECKO, 110), NeilCombat, NEUTRAL_REACTION);
+    giq_option(5, SCRIPT_ZCLGECKO, 111, Neil16, NEUTRAL_REACTION);
+    giq_option(6, SCRIPT_ZCLGECKO, 112, Neil24, NEUTRAL_REACTION);
+    giq_option(8, SCRIPT_ZCLGECKO, 113, Neil26, NEUTRAL_REACTION);
 end
 
 procedure Neil02
 begin
-    gsay_reply(271, 114);
-    giq_option(0, 271, 115, Neil03, 50);
-    giq_option(0, 271, 116, NeilCombat, 50);
-    giq_option(0, 271, 117, Neil04, 50);
+    gsay_reply(SCRIPT_ZCLGECKO, 114);
+    giq_option(0, SCRIPT_ZCLGECKO, 115, Neil03, NEUTRAL_REACTION);
+    giq_option(0, SCRIPT_ZCLGECKO, 116, NeilCombat, NEUTRAL_REACTION);
+    giq_option(0, SCRIPT_ZCLGECKO, 117, Neil04, NEUTRAL_REACTION);
 end
 
 procedure Neil03
 begin
-    gsay_message(271, 118, 50);
+    gsay_message(SCRIPT_ZCLGECKO, 118, NEUTRAL_REACTION);
 end
 
 procedure Neil04
 begin
-    gsay_reply(271, 119);
-    giq_option(0, 271, 120, Neil05, 50);
-    giq_option(0, 271, 121, Neil06, 50);
+    gsay_reply(SCRIPT_ZCLGECKO, 119);
+    giq_option(0, SCRIPT_ZCLGECKO, 120, Neil05, NEUTRAL_REACTION);
+    giq_option(0, SCRIPT_ZCLGECKO, 121, Neil06, NEUTRAL_REACTION);
 end
 
 procedure Neil05
 begin
-    gsay_message(271, 122, 50);
-    set_global_var(133, 1);
+    gsay_message(SCRIPT_ZCLGECKO, 122, NEUTRAL_REACTION);
+    set_global_var(GVAR_MUTATE_WHEN, 1);
 end
 
 procedure Neil06
 begin
-    gsay_message(271, 123, 50);
+    gsay_message(SCRIPT_ZCLGECKO, 123, NEUTRAL_REACTION);
 end
 
 procedure Neil07
 begin
-    gsay_reply(271, 124);
-    giq_option(4, 271, 125, Neil08, 50);
-    giq_option(4, 271, 126, Neil14, 50);
-    giq_option(4, 271, 127, Neil15, 50);
+    gsay_reply(SCRIPT_ZCLGECKO, 124);
+    giq_option(4, SCRIPT_ZCLGECKO, 125, Neil08, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_ZCLGECKO, 126, Neil14, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_ZCLGECKO, 127, Neil15, NEUTRAL_REACTION);
 end
 
 procedure Neil08
 begin
-    gsay_reply(271, 128);
-    giq_option(4, 271, 129, Neil09, 50);
-    giq_option(4, 271, 130, NeilEnd, 50);
-    giq_option(4, 271, 131, NeilCombat, 50);
-    giq_option(4, 271, 132, Neil13, 50);
+    gsay_reply(SCRIPT_ZCLGECKO, 128);
+    giq_option(4, SCRIPT_ZCLGECKO, 129, Neil09, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_ZCLGECKO, 130, NeilEnd, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_ZCLGECKO, 131, NeilCombat, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_ZCLGECKO, 132, Neil13, NEUTRAL_REACTION);
 end
 
 procedure Neil09
 begin
-    gsay_reply(271, 133);
-    giq_option(4, 271, 134, NeilQuest, 50);
-    giq_option(4, 271, 135, Neil10, 50);
-    giq_option(4, 271, 136, Neil13, 50);
+    gsay_reply(SCRIPT_ZCLGECKO, 133);
+    giq_option(4, SCRIPT_ZCLGECKO, 134, NeilQuest, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_ZCLGECKO, 135, Neil10, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_ZCLGECKO, 136, Neil13, NEUTRAL_REACTION);
 end
 
 procedure Neil10
 begin
-    gsay_reply(271, 137);
-    giq_option(4, 271, 138, Neil11, 50);
-    giq_option(4, 271, 139, NeilEnd, 50);
-    giq_option(4, 271, 140, NeilCombat, 50);
+    gsay_reply(SCRIPT_ZCLGECKO, 137);
+    giq_option(4, SCRIPT_ZCLGECKO, 138, Neil11, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_ZCLGECKO, 139, NeilEnd, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_ZCLGECKO, 140, NeilCombat, NEUTRAL_REACTION);
 end
 
 procedure Neil11
 begin
-    gsay_reply(271, 141);
-    giq_option(4, 271, 142, Neil12, 50);
-    giq_option(4, 271, 143, Neil13, 50);
+    gsay_reply(SCRIPT_ZCLGECKO, 141);
+    giq_option(4, SCRIPT_ZCLGECKO, 142, Neil12, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_ZCLGECKO, 143, Neil13, NEUTRAL_REACTION);
 end
 
 procedure Neil12
 begin
-    gsay_message(271, 144, 50);
+    gsay_message(SCRIPT_ZCLGECKO, 144, NEUTRAL_REACTION);
     call NeilQuest();
 end
 
 procedure Neil13
 begin
-    gsay_message(271, 145, 50);
+    gsay_message(SCRIPT_ZCLGECKO, 145, NEUTRAL_REACTION);
     call NeilCombat();
 end
 
 procedure Neil14
 begin
-    gsay_reply(271, 146);
-    giq_option(4, 271, 147, Neil09, 50);
-    giq_option(4, 271, 148, NeilEnd, 50);
-    giq_option(4, 271, 149, NeilCombat, 50);
-    giq_option(4, 271, 150, Neil13, 50);
+    gsay_reply(SCRIPT_ZCLGECKO, 146);
+    giq_option(4, SCRIPT_ZCLGECKO, 147, Neil09, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_ZCLGECKO, 148, NeilEnd, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_ZCLGECKO, 149, NeilCombat, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_ZCLGECKO, 150, Neil13, NEUTRAL_REACTION);
 end
 
 procedure Neil15
 begin
-    gsay_reply(271, 151);
-    giq_option(4, 271, 152, Neil09, 50);
-    giq_option(4, 271, 153, NeilCombat, 50);
-    giq_option(4, 271, 154, Neil13, 50);
+    gsay_reply(SCRIPT_ZCLGECKO, 151);
+    giq_option(4, SCRIPT_ZCLGECKO, 152, Neil09, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_ZCLGECKO, 153, NeilCombat, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_ZCLGECKO, 154, Neil13, NEUTRAL_REACTION);
 end
 
 procedure Neil16
 begin
-    gsay_reply(271, 155);
-    giq_option(5, 271, 156, Neil17, 50);
-    giq_option(5, 271, 157, Neil18, 50);
-    giq_option(5, 271, 158, Neil16a, 50);
+    gsay_reply(SCRIPT_ZCLGECKO, 155);
+    giq_option(5, SCRIPT_ZCLGECKO, 156, Neil17, NEUTRAL_REACTION);
+    giq_option(5, SCRIPT_ZCLGECKO, 157, Neil18, NEUTRAL_REACTION);
+    giq_option(5, SCRIPT_ZCLGECKO, 158, Neil16a, NEUTRAL_REACTION);
 end
 
 procedure Neil16a
@@ -295,114 +295,114 @@ procedure Neil17
 begin
     variable LVar0 := 0;
     item_caps_adjust(dude_obj, 200);
-    gsay_message(271, message_str(271, 159) + " " + message_str(271, 160), 50);
+    gsay_message(SCRIPT_ZCLGECKO, message_str(SCRIPT_ZCLGECKO, 159) + " " + message_str(SCRIPT_ZCLGECKO, 160), NEUTRAL_REACTION);
     call NeilCombat();
 end
 
 procedure Neil18
 begin
-    gsay_message(271, 161, 50);
+    gsay_message(SCRIPT_ZCLGECKO, 161, NEUTRAL_REACTION);
 end
 
 procedure Neil19
 begin
-    gsay_reply(271, 162);
-    giq_option(5, 271, 163, Neil20, 50);
-    giq_option(5, 271, 164, Neil21, 50);
-    giq_option(5, 271, 165, Neil22, 50);
-    giq_option(5, 271, 166, NeilCombat, 50);
-    giq_option(5, 271, 167, NeilEnd, 50);
+    gsay_reply(SCRIPT_ZCLGECKO, 162);
+    giq_option(5, SCRIPT_ZCLGECKO, 163, Neil20, NEUTRAL_REACTION);
+    giq_option(5, SCRIPT_ZCLGECKO, 164, Neil21, NEUTRAL_REACTION);
+    giq_option(5, SCRIPT_ZCLGECKO, 165, Neil22, NEUTRAL_REACTION);
+    giq_option(5, SCRIPT_ZCLGECKO, 166, NeilCombat, NEUTRAL_REACTION);
+    giq_option(5, SCRIPT_ZCLGECKO, 167, NeilEnd, NEUTRAL_REACTION);
 end
 
 procedure Neil20
 begin
-    gsay_reply(271, 168);
-    giq_option(5, 271, 169, Neil21, 50);
-    giq_option(5, 271, 170, Neil22, 50);
-    giq_option(5, 271, 171, NeilCombat, 50);
-    giq_option(5, 271, 172, NeilEnd, 50);
+    gsay_reply(SCRIPT_ZCLGECKO, 168);
+    giq_option(5, SCRIPT_ZCLGECKO, 169, Neil21, NEUTRAL_REACTION);
+    giq_option(5, SCRIPT_ZCLGECKO, 170, Neil22, NEUTRAL_REACTION);
+    giq_option(5, SCRIPT_ZCLGECKO, 171, NeilCombat, NEUTRAL_REACTION);
+    giq_option(5, SCRIPT_ZCLGECKO, 172, NeilEnd, NEUTRAL_REACTION);
 end
 
 procedure Neil21
 begin
-    gsay_reply(271, 173);
-    giq_option(5, 271, 174, Neil20, 50);
-    giq_option(5, 271, 175, Neil22, 50);
-    giq_option(5, 271, 176, NeilCombat, 50);
-    giq_option(5, 271, 177, NeilEnd, 50);
+    gsay_reply(SCRIPT_ZCLGECKO, 173);
+    giq_option(5, SCRIPT_ZCLGECKO, 174, Neil20, NEUTRAL_REACTION);
+    giq_option(5, SCRIPT_ZCLGECKO, 175, Neil22, NEUTRAL_REACTION);
+    giq_option(5, SCRIPT_ZCLGECKO, 176, NeilCombat, NEUTRAL_REACTION);
+    giq_option(5, SCRIPT_ZCLGECKO, 177, NeilEnd, NEUTRAL_REACTION);
 end
 
 procedure Neil22
 begin
-    gsay_reply(271, 178);
-    giq_option(5, 271, 179, Neil20, 50);
-    giq_option(5, 271, 180, Neil21, 50);
-    giq_option(5, 271, 181, NeilCombat, 50);
-    giq_option(5, 271, 182, NeilEnd, 50);
+    gsay_reply(SCRIPT_ZCLGECKO, 178);
+    giq_option(5, SCRIPT_ZCLGECKO, 179, Neil20, NEUTRAL_REACTION);
+    giq_option(5, SCRIPT_ZCLGECKO, 180, Neil21, NEUTRAL_REACTION);
+    giq_option(5, SCRIPT_ZCLGECKO, 181, NeilCombat, NEUTRAL_REACTION);
+    giq_option(5, SCRIPT_ZCLGECKO, 182, NeilEnd, NEUTRAL_REACTION);
 end
 
 procedure Neil23
 begin
-    gsay_message(271, 183, 50);
+    gsay_message(SCRIPT_ZCLGECKO, 183, NEUTRAL_REACTION);
     call NeilCombat();
 end
 
 procedure Neil24
 begin
-    gsay_reply(271, 184);
-    giq_option(6, 271, 185, Neil08, 50);
-    giq_option(6, 271, 186, Neil14, 50);
-    giq_option(6, 271, 187, Neil25, 50);
-    giq_option(6, 271, 188, NeilEnd, 50);
+    gsay_reply(SCRIPT_ZCLGECKO, 184);
+    giq_option(6, SCRIPT_ZCLGECKO, 185, Neil08, NEUTRAL_REACTION);
+    giq_option(6, SCRIPT_ZCLGECKO, 186, Neil14, NEUTRAL_REACTION);
+    giq_option(6, SCRIPT_ZCLGECKO, 187, Neil25, NEUTRAL_REACTION);
+    giq_option(6, SCRIPT_ZCLGECKO, 188, NeilEnd, NEUTRAL_REACTION);
 end
 
 procedure Neil25
 begin
-    gsay_message(271, 189, 50);
+    gsay_message(SCRIPT_ZCLGECKO, 189, NEUTRAL_REACTION);
 end
 
 procedure Neil26
 begin
-    gsay_message(271, 190, 50);
+    gsay_message(SCRIPT_ZCLGECKO, 190, NEUTRAL_REACTION);
 end
 
 procedure Neil27
 begin
-    float_msg(self_obj, message_str(271, 191), 8);
+    float_msg(self_obj, message_str(SCRIPT_ZCLGECKO, 191), FLOAT_MSG_YELLOW);
 end
 
 procedure Neil28
 begin
-    gsay_reply(271, 192);
-    giq_option(4, 271, 193, Neil29, 50);
-    giq_option(4, 271, 194, NeilEnd, 50);
+    gsay_reply(SCRIPT_ZCLGECKO, 192);
+    giq_option(4, SCRIPT_ZCLGECKO, 193, Neil29, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_ZCLGECKO, 194, NeilEnd, NEUTRAL_REACTION);
 end
 
 procedure Neil29
 begin
-    gsay_reply(271, 195);
-    giq_option(4, 271, 196, Neil30, 50);
-    giq_option(4, 271, 197, NeilEnd, 50);
+    gsay_reply(SCRIPT_ZCLGECKO, 195);
+    giq_option(4, SCRIPT_ZCLGECKO, 196, Neil30, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_ZCLGECKO, 197, NeilEnd, NEUTRAL_REACTION);
 end
 
 procedure Neil30
 begin
-    gsay_reply(271, 198);
+    gsay_reply(SCRIPT_ZCLGECKO, 198);
     gfade_out(20);
     game_time_advance(game_ticks(24 * 3600));
-    set_global_var(132, 1);
+    set_global_var(GVAR_MUTATE, 1);
     gfade_in(20);
-    giq_option(4, 271, 199, Neil31, 50);
+    giq_option(4, SCRIPT_ZCLGECKO, 199, Neil31, NEUTRAL_REACTION);
 end
 
 procedure Neil31
 begin
-    float_msg(self_obj, message_str(271, 200), 8);
+    float_msg(self_obj, message_str(SCRIPT_ZCLGECKO, 200), FLOAT_MSG_YELLOW);
 end
 
 procedure NeilQuest
 begin
-    set_global_var(133, 1);
+    set_global_var(GVAR_MUTATE_WHEN, 1);
 end
 
 procedure NeilCombat
@@ -413,4 +413,3 @@ end
 procedure NeilEnd
 begin
 end
-
