diff --git a/Games/Fallout2.Steam/Original/CHDGUARD.ssl b/Games/Fallout2.Steam/ReDefine/CHDGUARD.ssl
index a82af10..0e17187 100644
--- a/Games/Fallout2.Steam/Original/CHDGUARD.ssl
+++ b/Games/Fallout2.Steam/ReDefine/CHDGUARD.ssl
@@ -50,23 +50,23 @@ variable initialized;
 procedure start
 begin
     if (not(initialized)) then begin
-        critter_add_trait(self_obj, 1, 6, 20);
+        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 20);
         initialized := 1;
     end
     else begin
-        if (script_action == 12) then begin
+        if (script_action == critter_proc) then begin
             call critter_p_proc();
         end
         else begin
-            if (script_action == 18) then begin
+            if (script_action == destroy_proc) then begin
                 call destroy_p_proc();
             end
             else begin
-                if (script_action == 21) then begin
+                if (script_action == look_at_proc) then begin
                     call look_at_p_proc();
                 end
                 else begin
-                    if (script_action == 11) then begin
+                    if (script_action == talk_proc) then begin
                         call talk_p_proc();
                     end
                 end
@@ -79,24 +79,24 @@ procedure critter_p_proc
 begin
     if (hostile) then begin
         hostile := 0;
-        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
+        attack(dude_obj);
     end
 end
 
 procedure destroy_p_proc
 begin
     if (source_obj == dude_obj) then begin
-        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
-            set_global_var(156, 1);
-            set_global_var(157, 0);
+        if (((global_var(GVAR_GECKO_SKEETER_PART) + global_var(GVAR_GECKO_REQ_FORM)) >= 25) and ((global_var(GVAR_GECKO_REQ_FORM) > (2 * global_var(GVAR_GECKO_SKEETER_PART))) or (global_var(GVAR_SIERRA_LOCKOUT) == 1))) then begin
+            set_global_var(GVAR_SIERRA_LOCKOUT, 1);
+            set_global_var(GVAR_SIERRA_PASSWORD, 0);
         end
-        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
-            set_global_var(157, 1);
-            set_global_var(156, 0);
+        if (((global_var(GVAR_GECKO_SKEETER_PART) + global_var(GVAR_GECKO_REQ_FORM)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GECKO_REQ_FORM))) or (global_var(GVAR_SIERRA_PASSWORD) == 1))) then begin
+            set_global_var(GVAR_SIERRA_PASSWORD, 1);
+            set_global_var(GVAR_SIERRA_LOCKOUT, 0);
         end
-        set_global_var(160, global_var(160) + 1);
-        if ((global_var(160) % 6) == 0) then begin
-            set_global_var(155, global_var(155) + 1);
+        set_global_var(GVAR_GECKO_SKEETER_PART, global_var(GVAR_GECKO_SKEETER_PART) + 1);
+        if ((global_var(GVAR_GECKO_SKEETER_PART) % 6) == 0) then begin
+            set_global_var(GVAR_BRAIN_BOT_BRAIN, global_var(GVAR_BRAIN_BOT_BRAIN) + 1);
         end
     end
 end
@@ -104,7 +104,7 @@ end
 procedure look_at_p_proc
 begin
     script_overrides;
-    display_msg(message_str(275, 100));
+    display_msg(message_str(SCRIPT_GECKTUNL, 100));
 end
 
 procedure talk_p_proc
@@ -125,127 +125,127 @@ end
 
 procedure ChdGuard0
 begin
-    gsay_reply(275, 101);
-    giq_option(-3, 275, 102, ChdGuard1, 50);
-    giq_option(4, 275, 103, ChdGuard13, 50);
-    giq_option(4, 275, 104, ChdGuard25, 50);
-    giq_option(6, 275, 105, ChdGuard26, 50);
-    giq_option(6, 275, 106, ChdGuard27, 50);
+    gsay_reply(SCRIPT_GECKTUNL, 101);
+    giq_option(-3, SCRIPT_GECKTUNL, 102, ChdGuard1, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_GECKTUNL, 103, ChdGuard13, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_GECKTUNL, 104, ChdGuard25, NEUTRAL_REACTION);
+    giq_option(6, SCRIPT_GECKTUNL, 105, ChdGuard26, NEUTRAL_REACTION);
+    giq_option(6, SCRIPT_GECKTUNL, 106, ChdGuard27, NEUTRAL_REACTION);
 end
 
 procedure ChdGuard1
 begin
-    gsay_reply(275, 107);
-    giq_option(-3, 275, 108, ChdGuard2, 50);
-    giq_option(-3, 275, 109, combat, 50);
-    giq_option(-3, 275, 110, ChdGuard9, 50);
+    gsay_reply(SCRIPT_GECKTUNL, 107);
+    giq_option(-3, SCRIPT_GECKTUNL, 108, ChdGuard2, NEUTRAL_REACTION);
+    giq_option(-3, SCRIPT_GECKTUNL, 109, combat, NEUTRAL_REACTION);
+    giq_option(-3, SCRIPT_GECKTUNL, 110, ChdGuard9, NEUTRAL_REACTION);
 end
 
 procedure ChdGuard2
 begin
-    gsay_reply(275, 111);
-    giq_option(-3, 275, 112, combat, 50);
-    giq_option(-3, 275, 113, ChdGuard3, 50);
-    giq_option(-3, 275, 114, ChdGuard4, 50);
+    gsay_reply(SCRIPT_GECKTUNL, 111);
+    giq_option(-3, SCRIPT_GECKTUNL, 112, combat, NEUTRAL_REACTION);
+    giq_option(-3, SCRIPT_GECKTUNL, 113, ChdGuard3, NEUTRAL_REACTION);
+    giq_option(-3, SCRIPT_GECKTUNL, 114, ChdGuard4, NEUTRAL_REACTION);
 end
 
 procedure ChdGuard3
 begin
-    gsay_message(275, 115, 50);
+    gsay_message(SCRIPT_GECKTUNL, 115, NEUTRAL_REACTION);
 end
 
 procedure ChdGuard4
 begin
-    gsay_reply(275, 116);
-    giq_option(-3, 275, 117, ChdGuard5, 50);
-    giq_option(-3, 275, 118, combat, 50);
-    giq_option(-3, 275, 119, ChdGuard6, 50);
+    gsay_reply(SCRIPT_GECKTUNL, 116);
+    giq_option(-3, SCRIPT_GECKTUNL, 117, ChdGuard5, NEUTRAL_REACTION);
+    giq_option(-3, SCRIPT_GECKTUNL, 118, combat, NEUTRAL_REACTION);
+    giq_option(-3, SCRIPT_GECKTUNL, 119, ChdGuard6, NEUTRAL_REACTION);
 end
 
 procedure ChdGuard5
 begin
-    gsay_message(275, 120, 50);
+    gsay_message(SCRIPT_GECKTUNL, 120, NEUTRAL_REACTION);
 end
 
 procedure ChdGuard6
 begin
-    gsay_reply(275, 121);
-    giq_option(-3, 275, 122, ChdGuard7, 50);
-    giq_option(-3, 275, 123, ChdGuard5, 50);
-    giq_option(-3, 275, 124, ChdGuard8, 50);
+    gsay_reply(SCRIPT_GECKTUNL, 121);
+    giq_option(-3, SCRIPT_GECKTUNL, 122, ChdGuard7, NEUTRAL_REACTION);
+    giq_option(-3, SCRIPT_GECKTUNL, 123, ChdGuard5, NEUTRAL_REACTION);
+    giq_option(-3, SCRIPT_GECKTUNL, 124, ChdGuard8, NEUTRAL_REACTION);
 end
 
 procedure ChdGuard7
 begin
-    gsay_message(275, 125, 50);
+    gsay_message(SCRIPT_GECKTUNL, 125, NEUTRAL_REACTION);
 end
 
 procedure ChdGuard8
 begin
-    gsay_message(275, 126, 50);
+    gsay_message(SCRIPT_GECKTUNL, 126, NEUTRAL_REACTION);
 end
 
 procedure ChdGuard9
 begin
-    gsay_reply(275, 127);
-    giq_option(-3, 275, 128, ChdGuard10, 50);
-    giq_option(-3, 275, 129, ChdGuard12, 50);
-    giq_option(-3, 275, 130, ChdGuardend, 50);
+    gsay_reply(SCRIPT_GECKTUNL, 127);
+    giq_option(-3, SCRIPT_GECKTUNL, 128, ChdGuard10, NEUTRAL_REACTION);
+    giq_option(-3, SCRIPT_GECKTUNL, 129, ChdGuard12, NEUTRAL_REACTION);
+    giq_option(-3, SCRIPT_GECKTUNL, 130, ChdGuardend, NEUTRAL_REACTION);
 end
 
 procedure ChdGuard10
 begin
-    gsay_reply(275, 131);
-    giq_option(-3, 275, 132, ChdGuard11, 50);
-    giq_option(-3, 275, 133, ChdGuardend, 50);
+    gsay_reply(SCRIPT_GECKTUNL, 131);
+    giq_option(-3, SCRIPT_GECKTUNL, 132, ChdGuard11, NEUTRAL_REACTION);
+    giq_option(-3, SCRIPT_GECKTUNL, 133, ChdGuardend, NEUTRAL_REACTION);
 end
 
 procedure ChdGuard11
 begin
-    gsay_message(275, 134, 50);
+    gsay_message(SCRIPT_GECKTUNL, 134, NEUTRAL_REACTION);
 end
 
 procedure ChdGuard12
 begin
-    gsay_reply(275, 135);
-    giq_option(-3, 275, 136, ChdGuardend, 50);
+    gsay_reply(SCRIPT_GECKTUNL, 135);
+    giq_option(-3, SCRIPT_GECKTUNL, 136, ChdGuardend, NEUTRAL_REACTION);
 end
 
 procedure ChdGuard13
 begin
-    gsay_reply(275, 137);
-    giq_option(4, 275, 138, ChdGuard14, 50);
-    giq_option(4, 275, 139, ChdGuard15, 50);
-    giq_option(4, 275, message_str(275, 140) + proto_data(obj_pid(dude_obj), 1) + message_str(275, 141), ChdGuard22, 50);
-    giq_option(4, 275, 142, ChdGuard24, 50);
-    giq_option(4, 275, 143, combat, 50);
+    gsay_reply(SCRIPT_GECKTUNL, 137);
+    giq_option(4, SCRIPT_GECKTUNL, 138, ChdGuard14, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_GECKTUNL, 139, ChdGuard15, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_GECKTUNL, message_str(SCRIPT_GECKTUNL, 140) + proto_data(obj_pid(dude_obj), 1) + message_str(SCRIPT_GECKTUNL, 141), ChdGuard22, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_GECKTUNL, 142, ChdGuard24, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_GECKTUNL, 143, combat, NEUTRAL_REACTION);
 end
 
 procedure ChdGuard14
 begin
-    gsay_message(275, 144, 50);
+    gsay_message(SCRIPT_GECKTUNL, 144, NEUTRAL_REACTION);
     call combat();
 end
 
 procedure ChdGuard15
 begin
-    gsay_reply(275, 145);
-    giq_option(4, 275, 146, ChdGuard16, 50);
-    giq_option(4, 275, 147, ChdGuard17, 50);
+    gsay_reply(SCRIPT_GECKTUNL, 145);
+    giq_option(4, SCRIPT_GECKTUNL, 146, ChdGuard16, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_GECKTUNL, 147, ChdGuard17, NEUTRAL_REACTION);
 end
 
 procedure ChdGuard16
 begin
-    gsay_message(275, 148, 50);
+    gsay_message(SCRIPT_GECKTUNL, 148, NEUTRAL_REACTION);
     call combat();
 end
 
 procedure ChdGuard17
 begin
-    gsay_reply(275, 149);
-    giq_option(4, 275, message_str(275, 150) + proto_data(obj_pid(dude_obj), 1) + message_str(275, 151), ChdGuard17a, 50);
-    giq_option(4, 275, 152, ChdGuard20, 50);
-    giq_option(4, 275, 153, combat, 50);
+    gsay_reply(SCRIPT_GECKTUNL, 149);
+    giq_option(4, SCRIPT_GECKTUNL, message_str(SCRIPT_GECKTUNL, 150) + proto_data(obj_pid(dude_obj), 1) + message_str(SCRIPT_GECKTUNL, 151), ChdGuard17a, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_GECKTUNL, 152, ChdGuard20, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_GECKTUNL, 153, combat, NEUTRAL_REACTION);
 end
 
 procedure ChdGuard17a
@@ -260,121 +260,121 @@ end
 
 procedure ChdGuard18
 begin
-    gsay_message(275, 154, 50);
+    gsay_message(SCRIPT_GECKTUNL, 154, NEUTRAL_REACTION);
 end
 
 procedure ChdGuard19
 begin
-    gsay_message(275, 155, 50);
+    gsay_message(SCRIPT_GECKTUNL, 155, NEUTRAL_REACTION);
     call combat();
 end
 
 procedure ChdGuard20
 begin
-    gsay_reply(275, 156);
-    giq_option(4, 275, message_str(275, 157) + proto_data(obj_pid(dude_obj), 1) + message_str(275, 158), ChdGuard21, 50);
-    giq_option(4, 275, 159, combat, 50);
+    gsay_reply(SCRIPT_GECKTUNL, 156);
+    giq_option(4, SCRIPT_GECKTUNL, message_str(SCRIPT_GECKTUNL, 157) + proto_data(obj_pid(dude_obj), 1) + message_str(SCRIPT_GECKTUNL, 158), ChdGuard21, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_GECKTUNL, 159, combat, NEUTRAL_REACTION);
 end
 
 procedure ChdGuard21
 begin
-    gsay_message(275, 160, 50);
+    gsay_message(SCRIPT_GECKTUNL, 160, NEUTRAL_REACTION);
     call ChdGuard17a();
 end
 
 procedure ChdGuard22
 begin
-    gsay_reply(275, message_str(275, 161) + proto_data(obj_pid(dude_obj), 1) + message_str(275, 162));
-    giq_option(4, 275, 163, ChdGuard23, 50);
-    giq_option(4, 275, 164, ChdGuard23, 50);
-    giq_option(4, 275, 165, combat, 50);
+    gsay_reply(SCRIPT_GECKTUNL, message_str(SCRIPT_GECKTUNL, 161) + proto_data(obj_pid(dude_obj), 1) + message_str(SCRIPT_GECKTUNL, 162));
+    giq_option(4, SCRIPT_GECKTUNL, 163, ChdGuard23, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_GECKTUNL, 164, ChdGuard23, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_GECKTUNL, 165, combat, NEUTRAL_REACTION);
 end
 
 procedure ChdGuard23
 begin
-    gsay_message(275, 166, 50);
+    gsay_message(SCRIPT_GECKTUNL, 166, NEUTRAL_REACTION);
     call combat();
 end
 
 procedure ChdGuard24
 begin
-    gsay_message(275, 167, 50);
+    gsay_message(SCRIPT_GECKTUNL, 167, NEUTRAL_REACTION);
     call combat();
 end
 
 procedure ChdGuard25
 begin
-    gsay_reply(275, 168);
-    giq_option(4, 275, 169, ChdGuard14, 50);
-    giq_option(4, 275, 170, ChdGuard15, 50);
-    giq_option(4, 275, message_str(275, 171) + proto_data(obj_pid(dude_obj), 1) + message_str(275, 172), ChdGuard22, 50);
-    giq_option(4, 275, 173, ChdGuard24, 50);
-    giq_option(4, 275, 174, combat, 50);
+    gsay_reply(SCRIPT_GECKTUNL, 168);
+    giq_option(4, SCRIPT_GECKTUNL, 169, ChdGuard14, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_GECKTUNL, 170, ChdGuard15, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_GECKTUNL, message_str(SCRIPT_GECKTUNL, 171) + proto_data(obj_pid(dude_obj), 1) + message_str(SCRIPT_GECKTUNL, 172), ChdGuard22, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_GECKTUNL, 173, ChdGuard24, NEUTRAL_REACTION);
+    giq_option(4, SCRIPT_GECKTUNL, 174, combat, NEUTRAL_REACTION);
 end
 
 procedure ChdGuard26
 begin
-    gsay_message(275, 175, 50);
+    gsay_message(SCRIPT_GECKTUNL, 175, NEUTRAL_REACTION);
     call combat();
 end
 
 procedure ChdGuard27
 begin
-    gsay_reply(275, 176);
-    giq_option(6, 275, 177, ChdGuard28, 50);
-    giq_option(6, 275, 178, ChdGuard29, 50);
-    giq_option(6, 275, 179, ChdGuard30, 50);
-    giq_option(6, 275, 180, ChdGuard34, 50);
+    gsay_reply(SCRIPT_GECKTUNL, 176);
+    giq_option(6, SCRIPT_GECKTUNL, 177, ChdGuard28, NEUTRAL_REACTION);
+    giq_option(6, SCRIPT_GECKTUNL, 178, ChdGuard29, NEUTRAL_REACTION);
+    giq_option(6, SCRIPT_GECKTUNL, 179, ChdGuard30, NEUTRAL_REACTION);
+    giq_option(6, SCRIPT_GECKTUNL, 180, ChdGuard34, NEUTRAL_REACTION);
 end
 
 procedure ChdGuard28
 begin
-    gsay_message(275, 181, 50);
+    gsay_message(SCRIPT_GECKTUNL, 181, NEUTRAL_REACTION);
 end
 
 procedure ChdGuard29
 begin
-    gsay_message(275, 182, 50);
+    gsay_message(SCRIPT_GECKTUNL, 182, NEUTRAL_REACTION);
 end
 
 procedure ChdGuard30
 begin
-    gsay_reply(275, 183);
-    giq_option(6, 275, 184, ChdGuard31, 50);
-    giq_option(6, 275, 185, ChdGuard32, 50);
-    giq_option(6, 275, 186, combat, 50);
+    gsay_reply(SCRIPT_GECKTUNL, 183);
+    giq_option(6, SCRIPT_GECKTUNL, 184, ChdGuard31, NEUTRAL_REACTION);
+    giq_option(6, SCRIPT_GECKTUNL, 185, ChdGuard32, NEUTRAL_REACTION);
+    giq_option(6, SCRIPT_GECKTUNL, 186, combat, NEUTRAL_REACTION);
 end
 
 procedure ChdGuard31
 begin
-    gsay_message(275, 187, 50);
+    gsay_message(SCRIPT_GECKTUNL, 187, NEUTRAL_REACTION);
     call combat();
 end
 
 procedure ChdGuard32
 begin
-    gsay_reply(275, 188);
-    giq_option(6, 275, 189, ChdGuard33, 50);
-    giq_option(6, 275, 190, ChdGuard33, 50);
-    giq_option(6, 275, 191, combat, 50);
+    gsay_reply(SCRIPT_GECKTUNL, 188);
+    giq_option(6, SCRIPT_GECKTUNL, 189, ChdGuard33, NEUTRAL_REACTION);
+    giq_option(6, SCRIPT_GECKTUNL, 190, ChdGuard33, NEUTRAL_REACTION);
+    giq_option(6, SCRIPT_GECKTUNL, 191, combat, NEUTRAL_REACTION);
 end
 
 procedure ChdGuard33
 begin
-    gsay_reply(275, 192);
-    giq_option(6, 275, 193, ChdGuardend, 50);
-    giq_option(6, 275, 194, combat, 50);
+    gsay_reply(SCRIPT_GECKTUNL, 192);
+    giq_option(6, SCRIPT_GECKTUNL, 193, ChdGuardend, NEUTRAL_REACTION);
+    giq_option(6, SCRIPT_GECKTUNL, 194, combat, NEUTRAL_REACTION);
 end
 
 procedure ChdGuard34
 begin
-    gsay_message(275, 195, 50);
+    gsay_message(SCRIPT_GECKTUNL, 195, NEUTRAL_REACTION);
     call combat();
 end
 
 procedure ChdGuard35
 begin
-    gsay_message(275, 196, 50);
+    gsay_message(SCRIPT_GECKTUNL, 196, NEUTRAL_REACTION);
     call combat();
 end
 
@@ -386,4 +386,3 @@ procedure combat
 begin
     hostile := 1;
 end
-
