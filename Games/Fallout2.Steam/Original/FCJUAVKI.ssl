variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node998;
procedure Node999;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure doSequence;
procedure CheckTalkSequence;
procedure doEndSequence;
procedure checkLoadPos;
procedure DoCallGuards;
procedure DoAdjust;
procedure DoIndoctranation;
procedure doAdjustLesson1;
procedure doAdjustEnd;

import variable i_he_obj;
import variable i_she_obj;

variable Only_Once;
variable lastDudeTile;
variable lastMapNum;
variable callGuards;
variable callAdjust;
variable callIndoctranation;
variable adjustLesson;
variable her_last_tile;
variable her_last_rot;
variable him_last_tile;
variable him_last_rot;

procedure NodeAdjust;
procedure Node009a;
procedure Node013a;
procedure Node017a;
procedure Node998a;
procedure NodeJoin;
procedure Node248a;
procedure Node999a;
procedure Node999b;
procedure Node2627;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if ((local_var(5) > 0) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        if (critter_is_fleeing(self_obj)) then begin
            if (anim_busy(self_obj) == 0) then begin
                if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                    if (anim_busy(self_obj) == 0) then begin
                        global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                        global_temp := (global_temp + 1) % 6;
                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                            debug_msg("flee loop: rot == " + global_temp);
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                        end
                    end
                end
            end
        end
        else begin
            attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
        end
    end
    if (get_critter_stat(self_obj, 34) == 0) then begin
        i_he_obj := self_obj;
    end
    else begin
        i_she_obj := self_obj;
    end
    if (map_var(0) == 0) then begin
        if (get_critter_stat(self_obj, 34) == 0) then begin
            if (obj_on_screen(self_obj)) then begin
                if (tile_distance_objs(self_obj, dude_obj) <= 5) then begin
                    call doSequence();
                end
            end
        end
    end
    else begin
        if (map_var(0) == 21) then begin
            if (get_critter_stat(self_obj, 34) == 0) then begin
                if ((tile_num(self_obj) != 12288) and (tile_num(self_obj) != 9308)) then begin
                    if (not(anim_busy(self_obj))) then begin
                        reg_anim_func(2, self_obj);
                        reg_anim_func(1, 1);
                        animate_move_obj_to_tile(self_obj, 12288, 0);
                        reg_anim_func(3, 0);
                    end
                end
            end
            else begin
                if (tile_num(self_obj) != 12487) then begin
                    if (not(anim_busy(self_obj)) and (tile_num(self_obj) != 9707)) then begin
                        reg_anim_func(2, self_obj);
                        reg_anim_func(1, 1);
                        animate_move_obj_to_tile(self_obj, 12487, 0);
                        reg_anim_func(3, 0);
                    end
                end
            end
        end
    end
    if ((tile_num(self_obj) == 12288) and (get_critter_stat(self_obj, 34) == 0)) then begin
        if (not(anim_busy(self_obj))) then begin
            reg_anim_func(1, 1);
            anim(self_obj, 1000, 3);
            reg_anim_func(3, 0);
        end
    end
    if ((tile_num(self_obj) == 12487) and (get_critter_stat(self_obj, 34) == 1)) then begin
        if (not(anim_busy(self_obj))) then begin
            reg_anim_func(1, 1);
            anim(self_obj, 1000, 2);
            reg_anim_func(3, 0);
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure talk_p_proc
begin
    variable LVar0 := 0;
    Evil_Critter := 1;
    Slavery_Tolerant := 2;
    Karma_Perception := 1;
    if (map_var(0) == 21) then begin
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (local_var(2) == 0) then begin
            set_local_var(2, 1);
            set_local_var(3, (get_critter_stat(dude_obj, 3) - get_critter_stat(self_obj, 3)) * 5);
            debug_msg("Base Reaction == " + local_var(3));
        end
        Static_Reaction := 0;
        set_local_var(0, 0);
        debug_msg("Start Reaction == " + local_var(0));
        if (reaction_bonus_karma >= 0) then begin
            reaction_bonus_karma := reaction_bonus_karma / 1000;
        end
        else begin
            reaction_bonus_karma := -1 * (-1 * reaction_bonus_karma / 1000);
        end
        if (global_var(61) >= 0) then begin
            reaction_bonus_town_rep := global_var(61) / 2;
        end
        else begin
            reaction_bonus_town_rep := -1 * (-1 * global_var(61) / 2);
        end
        if (has_trait(2, dude_obj, 13)) then begin
            if (get_critter_stat(dude_obj, 34) == get_critter_stat(self_obj, 34)) then begin
                Static_Reaction := Static_Reaction + -20;
            end
            else begin
                Static_Reaction := Static_Reaction + 20;
            end
            debug_msg("Sex Appeal Bonus == " + Static_Reaction);
        end
        else begin
            debug_msg("Sex Appeal Bonus == 0");
        end
        if (Evil_Critter == 1) then begin
            Static_Reaction := Static_Reaction - reaction_bonus_karma;
            debug_msg("Karma Reaction Bonus == " + Static_Reaction);
            Static_Reaction := Static_Reaction - reaction_bonus_town_rep;
            debug_msg("Town Rep Bonus == " + Static_Reaction);
            set_global_var(37, 0);
            set_global_var(38, 0);
            set_global_var(39, 0);
            set_global_var(40, 0);
            set_global_var(41, 0);
            set_global_var(42, 0);
            set_global_var(43, 0);
            set_global_var(44, 0);
            set_global_var(45, 0);
            if (global_var(0) >= 1000) then begin
                set_global_var(37, 1);
            end
            else begin
                if (global_var(0) >= 750) then begin
                    set_global_var(38, 1);
                end
                else begin
                    if (global_var(0) >= 500) then begin
                        set_global_var(39, 1);
                    end
                    else begin
                        if (global_var(0) >= 250) then begin
                            set_global_var(40, 1);
                        end
                        else begin
                            if (global_var(0) > -250) then begin
                                set_global_var(41, 1);
                            end
                            else begin
                                if (global_var(0) > -500) then begin
                                    set_global_var(42, 1);
                                end
                                else begin
                                    if (global_var(0) > -750) then begin
                                        set_global_var(43, 1);
                                    end
                                    else begin
                                        if (global_var(0) > -1000) then begin
                                            set_global_var(44, 1);
                                        end
                                        else begin
                                            set_global_var(45, 1);
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            if (global_var(37) == 1) then begin
                Static_Reaction := Static_Reaction - 20;
            end
            else begin
                if (global_var(38) == 1) then begin
                    Static_Reaction := Static_Reaction - 15;
                end
                else begin
                    if (global_var(39) == 1) then begin
                        Static_Reaction := Static_Reaction - 10;
                    end
                    else begin
                        if (global_var(40) == 1) then begin
                            Static_Reaction := Static_Reaction - 5;
                        end
                        else begin
                            if (global_var(41) == 1) then begin
                                Static_Reaction := Static_Reaction - 0;
                            end
                            else begin
                                if (global_var(42) == 1) then begin
                                    Static_Reaction := Static_Reaction - -5;
                                end
                                else begin
                                    if (global_var(43) == 1) then begin
                                        Static_Reaction := Static_Reaction - -10;
                                    end
                                    else begin
                                        if (global_var(44) == 1) then begin
                                            Static_Reaction := Static_Reaction - -15;
                                        end
                                        else begin
                                            Static_Reaction := Static_Reaction - -20;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            debug_msg("Bad Person Reaction Bonus == " + Static_Reaction);
        end
        else begin
            Static_Reaction := Static_Reaction + reaction_bonus_karma;
            debug_msg("Karma Reaction Bonus == " + Static_Reaction);
            Static_Reaction := Static_Reaction + reaction_bonus_town_rep;
            debug_msg("Town Rep Bonus == " + Static_Reaction);
            set_global_var(37, 0);
            set_global_var(38, 0);
            set_global_var(39, 0);
            set_global_var(40, 0);
            set_global_var(41, 0);
            set_global_var(42, 0);
            set_global_var(43, 0);
            set_global_var(44, 0);
            set_global_var(45, 0);
            if (global_var(0) >= 1000) then begin
                set_global_var(37, 1);
            end
            else begin
                if (global_var(0) >= 750) then begin
                    set_global_var(38, 1);
                end
                else begin
                    if (global_var(0) >= 500) then begin
                        set_global_var(39, 1);
                    end
                    else begin
                        if (global_var(0) >= 250) then begin
                            set_global_var(40, 1);
                        end
                        else begin
                            if (global_var(0) > -250) then begin
                                set_global_var(41, 1);
                            end
                            else begin
                                if (global_var(0) > -500) then begin
                                    set_global_var(42, 1);
                                end
                                else begin
                                    if (global_var(0) > -750) then begin
                                        set_global_var(43, 1);
                                    end
                                    else begin
                                        if (global_var(0) > -1000) then begin
                                            set_global_var(44, 1);
                                        end
                                        else begin
                                            set_global_var(45, 1);
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            if (global_var(37) == 1) then begin
                Static_Reaction := Static_Reaction + 20;
            end
            else begin
                if (global_var(38) == 1) then begin
                    Static_Reaction := Static_Reaction + 15;
                end
                else begin
                    if (global_var(39) == 1) then begin
                        Static_Reaction := Static_Reaction + 10;
                    end
                    else begin
                        if (global_var(40) == 1) then begin
                            Static_Reaction := Static_Reaction + 5;
                        end
                        else begin
                            if (global_var(41) == 1) then begin
                                Static_Reaction := Static_Reaction + 0;
                            end
                            else begin
                                if (global_var(42) == 1) then begin
                                    Static_Reaction := Static_Reaction + -5;
                                end
                                else begin
                                    if (global_var(43) == 1) then begin
                                        Static_Reaction := Static_Reaction + -10;
                                    end
                                    else begin
                                        if (global_var(44) == 1) then begin
                                            Static_Reaction := Static_Reaction + -15;
                                        end
                                        else begin
                                            Static_Reaction := Static_Reaction + -20;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            debug_msg("Good Person Reaction Bonus == " + Static_Reaction);
        end
        if (Slavery_Tolerant == 0) then begin
            if (global_var(11) == 1) then begin
                Static_Reaction := Static_Reaction + (2 * -25);
            end
        end
        else begin
            if (Slavery_Tolerant == 1) then begin
                if (global_var(11) == 1) then begin
                    Static_Reaction := Static_Reaction + -25;
                end
            end
            else begin
                if (Slavery_Tolerant == 3) then begin
                    if (global_var(11) == 1) then begin
                        Static_Reaction := Static_Reaction - -25;
                    end
                end
            end
        end
        debug_msg("Slaver + Aligned Reaction == " + Static_Reaction);
        Static_Reaction := Static_Reaction + (10 * has_trait(0, dude_obj, 10));
        debug_msg("Presence Reaction == " + Static_Reaction);
        if (global_var(1) >= 2) then begin
            Static_Reaction := Static_Reaction + -30;
        end
        debug_msg("Childkiller Reaction == " + Static_Reaction);
        set_local_var(0, local_var(3) + Static_Reaction);
        debug_msg("Initial Reaction == " + local_var(0));
        if (get_critter_stat(self_obj, 34) == 0) then begin
            if (i_she_obj == -1) then begin
                set_local_var(5, 2);
                LVar0 := 1;
                callGuards := 1;
            end
        end
        else begin
            if (i_he_obj == -1) then begin
                set_local_var(5, 2);
                LVar0 := 1;
                callGuards := 1;
            end
        end
        if (LVar0 == 0) then begin
            if ((global_var(361) bwand 262144) != 0) then begin
                start_gdialog(994, self_obj, 4, -1, -1);
                gsay_start;
                call Node023();
                gsay_end;
                end_dialogue;
            end
            else begin
                if ((local_var(4) == 1) and ((global_var(366) == 1) or (global_var(366) == 4))) then begin
                    start_gdialog(994, self_obj, 4, -1, -1);
                    gsay_start;
                    call Node028();
                    gsay_end;
                    end_dialogue;
                end
                else begin
                    if ((local_var(4) == 1) and (global_var(366) < 8)) then begin
                        start_gdialog(994, self_obj, 4, -1, -1);
                        gsay_start;
                        call Node008();
                        gsay_end;
                        end_dialogue;
                    end
                    else begin
                        if ((local_var(4) == 1) and ((global_var(366) >= 8) and not((global_var(361) bwand 262144) != 0))) then begin
                            start_gdialog(994, self_obj, 4, -1, -1);
                            gsay_start;
                            call Node024();
                            gsay_end;
                            end_dialogue;
                        end
                        else begin
                            start_gdialog(994, self_obj, 4, -1, -1);
                            gsay_start;
                            call Node001();
                            gsay_end;
                            end_dialogue;
                        end
                    end
                end
            end
        end
        set_local_var(4, 1);
        if (callGuards == 1) then begin
            callGuards := 0;
            call DoCallGuards();
        end
        if (callAdjust == 1) then begin
            callAdjust := 0;
            call DoAdjust();
        end
        if (callIndoctranation == 1) then begin
            callIndoctranation := 0;
            call DoIndoctranation();
            start_gdialog(994, self_obj, 4, -1, -1);
            gsay_start;
            call Node021();
            gsay_end;
            end_dialogue;
        end
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(4, global_var(4) + 1);
        if (metarule(51, self_obj) == 2) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(2, 0);
                set_global_var(1, global_var(1) + 1);
                set_global_var(0, global_var(0) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(37, 0);
                set_global_var(38, 0);
                set_global_var(39, 0);
                set_global_var(40, 0);
                set_global_var(41, 0);
                set_global_var(42, 0);
                set_global_var(43, 0);
                set_global_var(44, 0);
                set_global_var(45, 0);
                if (global_var(0) >= 1000) then begin
                    set_global_var(37, 1);
                end
                else begin
                    if (global_var(0) >= 750) then begin
                        set_global_var(38, 1);
                    end
                    else begin
                        if (global_var(0) >= 500) then begin
                            set_global_var(39, 1);
                        end
                        else begin
                            if (global_var(0) >= 250) then begin
                                set_global_var(40, 1);
                            end
                            else begin
                                if (global_var(0) > -250) then begin
                                    set_global_var(41, 1);
                                end
                                else begin
                                    if (global_var(0) > -500) then begin
                                        set_global_var(42, 1);
                                    end
                                    else begin
                                        if (global_var(0) > -750) then begin
                                            set_global_var(43, 1);
                                        end
                                        else begin
                                            if (global_var(0) > -1000) then begin
                                                set_global_var(44, 1);
                                            end
                                            else begin
                                                set_global_var(45, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(61, global_var(61) + -8);
                debug_msg("Added " + -8 + " to Town Rep");
            end
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
            set_global_var(3, 1);
            set_global_var(2, 0);
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
            set_global_var(2, 1);
            set_global_var(3, 0);
        end
        set_global_var(0, global_var(0) + 5);
        debug_msg("Player gains " + 5 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(61, global_var(61) + 2);
        debug_msg("Added " + 2 + " to Town Rep");
    end
    if (get_critter_stat(self_obj, 34) == 1) then begin
        i_she_obj := -1;
    end
    else begin
        i_he_obj := -1;
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 0) then begin
        display_msg(message_str(994, 100));
    end
    else begin
        display_msg(message_str(994, 101));
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(994, 102));
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(6, 1);
    end
end

procedure map_enter_p_proc
begin
    Only_Once := 0;
    critter_add_trait(self_obj, 1, 6, 198);
    if (get_critter_stat(self_obj, 34) == 0) then begin
        critter_add_trait(self_obj, 1, 5, 159);
    end
    else begin
        critter_add_trait(self_obj, 1, 5, 160);
    end
    if (not(metarule(22, 0))) then begin
        call checkLoadPos();
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 2) then begin
        call CheckTalkSequence();
    end
    else begin
        if (fixed_param == 3) then begin
            call doAdjustLesson1();
        end
        else begin
            if (fixed_param == 4) then begin
                call doAdjustEnd();
            end
        end
    end
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
end

procedure Node001
begin
    gsay_reply(994, 103);
    giq_option(-3, 994, 104, Node002, 50);
    giq_option(4, 994, 105, Node006, 50);
    giq_option(7, 994, 106, Node011, 50);
    giq_option(4, 994, 107, Node016, 50);
    if (global_var(462) == 1) then begin
        giq_option(4, 994, 108, Node020, 50);
    end
    giq_option(4, 994, 109, Node999, 50);
end

procedure Node002
begin
    gsay_reply(994, 110);
    giq_option(1, 994, 111, NodeAdjust, 50);
    giq_option(1, 994, 112, Node004, 50);
end

procedure Node003
begin
    gsay_reply(994, 113);
    giq_option(-3, 994, 114, Node999, 50);
    giq_option(4, 994, 115, Node005, 50);
end

procedure Node004
begin
    gsay_reply(994, 116);
    giq_option(1, 994, 117, Node999, 50);
end

procedure Node005
begin
    gsay_reply(994, 118);
    giq_option(4, 994, 119, Node008, 50);
    giq_option(4, 994, 120, Node999, 50);
end

procedure Node006
begin
    if (not(global_var(232) > 0)) then begin
        gsay_reply(994, 121);
    end
    else begin
        gsay_reply(994, message_str(994, 121) + " " + message_str(994, 122));
    end
    giq_option(4, 994, 123, Node009a, 51);
    giq_option(4, 994, 124, Node007, 50);
    giq_option(4, 994, 125, Node008, 50);
    giq_option(4, 994, 126, Node999, 50);
end

procedure Node007
begin
    gsay_reply(994, 127);
    giq_option(4, 994, 128, Node011, 50);
    giq_option(4, 994, 129, Node012, 50);
    giq_option(4, 994, 130, Node016, 50);
    giq_option(4, 994, 131, Node008, 50);
    giq_option(4, 994, 132, Node999, 50);
end

procedure Node008
begin
    gsay_reply(994, 133);
    giq_option(4, 994, 135, Node006, 50);
    giq_option(4, 994, 136, Node015, 50);
    giq_option(4, 994, 137, Node016, 50);
    if ((global_var(462) == 1) or (global_var(462) == 2)) then begin
        giq_option(4, 994, 138, Node020, 50);
    end
    giq_option(4, 994, 139, Node999, 50);
end

procedure Node009
begin
    gsay_reply(994, 140);
    giq_option(4, 994, 141, Node008, 50);
    giq_option(4, 994, 142, Node999, 50);
end

procedure Node010
begin
    gsay_reply(994, 143);
    giq_option(4, 994, 144, Node008, 50);
    giq_option(4, 994, 145, Node013a, 51);
    giq_option(4, 994, 146, Node016, 50);
    giq_option(4, 994, 147, Node999, 50);
end

procedure Node011
begin
    gsay_reply(994, 148);
    giq_option(4, 994, 149, Node008, 50);
    giq_option(4, 994, 150, Node999, 50);
end

procedure Node012
begin
    gsay_reply(994, 151);
    giq_option(4, 994, 152, Node014, 50);
    giq_option(4, 994, 153, Node016, 50);
    giq_option(4, 994, 154, Node017a, 51);
    giq_option(4, 994, 155, Node999, 50);
end

procedure Node013
begin
    gsay_reply(994, 156);
    giq_option(4, 994, 157, Node998a, 50);
    giq_option(4, 994, 158, Node999, 50);
    giq_option(4, 994, 159, Node999, 50);
end

procedure Node014
begin
    gsay_reply(994, 160);
    giq_option(4, 994, 161, Node016, 50);
    giq_option(4, 994, 162, Node013a, 51);
    giq_option(4, 994, 163, Node016, 50);
    giq_option(4, 994, 164, Node008, 50);
    giq_option(4, 994, 165, Node999, 50);
end

procedure Node015
begin
    gsay_reply(994, 166);
    giq_option(4, 994, 167, Node008, 50);
    giq_option(4, 994, 168, Node016, 50);
    giq_option(4, 994, 169, Node999, 50);
end

procedure Node016
begin
    gsay_reply(994, 170);
    giq_option(4, 994, 171, NodeJoin, 50);
    giq_option(4, 994, 172, Node022, 50);
end

procedure Node017
begin
    gsay_reply(994, 173);
    giq_option(4, 994, 174, Node018, 49);
    giq_option(4, 994, 175, Node998a, 51);
    giq_option(4, 994, 176, Node999, 50);
end

procedure Node018
begin
    gsay_reply(994, 177);
    giq_option(4, 994, 178, Node998a, 51);
    giq_option(4, 994, 179, Node016, 50);
    giq_option(4, 994, 180, Node998a, 51);
    giq_option(4, 994, 181, Node999, 50);
end

procedure Node019
begin
    gsay_reply(994, 182);
    giq_option(1, 994, 183, Node999, 50);
end

procedure Node020
begin
    gsay_reply(994, 184);
    giq_option(4, 994, 185, Node248a, 50);
    giq_option(4, 994, 186, Node999a, 50);
end

procedure Node021
begin
    gsay_reply(994, 187);
    giq_option(4, 994, 188, Node999b, 50);
end

procedure Node022
begin
    gsay_reply(994, 189);
    giq_option(4, 994, 190, NodeJoin, 50);
end

procedure Node023
begin
    gsay_reply(994, 191);
    giq_option(4, 994, 192, Node998a, 50);
end

procedure Node024
begin
    gsay_reply(994, message_str(994, 193) + " " + obj_name(dude_obj) + message_str(994, 228));
    giq_option(4, 994, 194, Node025, 50);
    giq_option(4, 994, 195, Node2627, 50);
    if ((global_var(462) == 1) or (global_var(462) == 2)) then begin
        giq_option(4, 994, 138, Node020, 50);
    end
    giq_option(4, 994, 196, Node999, 50);
end

procedure Node025
begin
    gsay_reply(994, 199);
    giq_option(4, 994, 200, Node2627, 50);
    giq_option(4, 994, 201, Node999, 50);
end

procedure Node026
begin
    gsay_reply(994, 202);
    giq_option(4, 994, 203, Node025, 50);
    giq_option(4, 994, 204, Node999, 50);
end

procedure Node027
begin
    gsay_reply(994, 205);
    giq_option(4, 994, 206, Node025, 50);
    giq_option(4, 994, 207, Node999, 50);
end

procedure Node028
begin
    gsay_reply(994, 231);
    giq_option(0, 994, message_str(14, 350), Node999, 50);
end

procedure doSequence
begin
    if (get_critter_stat(self_obj, 34) == 0) then begin
        set_map_var(0, 1);
        add_timer_event(self_obj, 0, 2);
    end
end

procedure CheckTalkSequence
begin
    if (not(combat_is_initialized)) then begin
        if ((map_var(0) > 0) and (map_var(0) < 20)) then begin
            if (map_var(0) bwand 1) then begin
                if (get_critter_stat(self_obj, 34) == 0) then begin
                    float_msg(i_she_obj, 0, 0);
                    float_msg(self_obj, message_str(994, 207 + map_var(0)), 4);
                    set_map_var(0, map_var(0) + 1);
                    add_timer_event(i_she_obj, game_ticks(3), 2);
                end
            end
            else begin
                if (get_critter_stat(self_obj, 34) == 1) then begin
                    float_msg(self_obj, message_str(994, 207 + map_var(0)), 3);
                    float_msg(i_he_obj, 0, 0);
                    set_map_var(0, map_var(0) + 1);
                    add_timer_event(i_he_obj, game_ticks(3), 2);
                end
            end
        end
        else begin
            if (map_var(0) == 20) then begin
                display_msg(message_str(994, 227));
                set_map_var(0, map_var(0) + 1);
                add_timer_event(i_he_obj, game_ticks(1), 2);
                add_timer_event(i_she_obj, game_ticks(1), 2);
            end
            else begin
                if (map_var(0) == 21) then begin
                    call doEndSequence();
                end
            end
        end
    end
    else begin
        call doEndSequence();
    end
end

procedure doEndSequence
begin
end

procedure checkLoadPos
begin
    if (local_var(7) == 1) then begin
        if (get_critter_stat(self_obj, 34) == 0) then begin
            if (tile_num(self_obj) != 12288) then begin
                move_to(self_obj, 12288, 0);
            end
        end
        else begin
            if (tile_num(self_obj) != 12487) then begin
                move_to(self_obj, 12487, 0);
            end
        end
    end
end

procedure DoCallGuards
begin
    set_global_var(477, -1);
    set_global_var(478, dude_obj);
end

procedure DoAdjust
begin
    gfade_out(1);
    game_ui_disable;
    adjustLesson := 1;
    him_last_tile := tile_num(i_he_obj);
    him_last_rot := has_trait(1, i_he_obj, 10);
    her_last_tile := tile_num(i_she_obj);
    her_last_rot := has_trait(1, i_she_obj, 10);
    move_to(dude_obj, 9910, 0);
    move_to(i_he_obj, 9308, 0);
    move_to(i_she_obj, 9707, 0);
    reg_anim_func(2, dude_obj);
    reg_anim_func(1, 1);
    anim(dude_obj, 1000, 5);
    reg_anim_func(3, 0);
    reg_anim_func(2, i_he_obj);
    reg_anim_func(1, 1);
    anim(self_obj, 1000, 2);
    reg_anim_func(3, 0);
    reg_anim_func(2, i_she_obj);
    reg_anim_func(1, 1);
    anim(self_obj, 1000, 3);
    reg_anim_func(3, 0);
    gfade_in(1);
    add_timer_event(self_obj, game_ticks(1), 3);
end

procedure DoIndoctranation
begin
    gfade_out(1);
    gfade_in(1);
end

procedure doAdjustLesson1
begin
    if (adjustLesson == 1) then begin
        adjustLesson := adjustLesson + 1;
        float_msg(self_obj, message_str(994, 229), 3);
        add_timer_event(self_obj, game_ticks(5), 3);
    end
    else begin
        if (adjustLesson == 2) then begin
            adjustLesson := adjustLesson + 1;
            if (get_critter_stat(dude_obj, 4) >= 4) then begin
                float_msg(dude_obj, message_str(994, 230), 8);
            end
            add_timer_event(self_obj, game_ticks(2), 3);
        end
        else begin
            if (adjustLesson == 3) then begin
                game_ui_enable;
                start_gdialog(994, self_obj, 4, -1, -1);
                gsay_start;
                call Node003();
                gsay_end;
                end_dialogue;
                game_ui_disable;
                add_timer_event(self_obj, 0, 4);
            end
        end
    end
end

procedure doAdjustEnd
begin
    gfade_out(1);
    set_global_var(212, 1);
    if (random(1, 100) <= 50) then begin
        set_critter_stat(dude_obj, 6, 1);
        set_critter_stat(dude_obj, 4, 1);
        debug_msg("FCOZ7: uhh made luck and iq");
    end
    else begin
        debug_msg("FCOZ7: uhh lost luck");
        set_critter_stat(dude_obj, 6, -1);
    end
    move_to(i_he_obj, him_last_tile, 0);
    move_to(i_she_obj, her_last_tile, 0);
    reg_anim_func(2, i_he_obj);
    reg_anim_func(1, 1);
    anim(i_he_obj, 1000, him_last_rot);
    reg_anim_func(3, 0);
    reg_anim_func(2, i_she_obj);
    reg_anim_func(1, 1);
    anim(i_she_obj, 1000, her_last_rot);
    reg_anim_func(3, 0);
    game_ui_enable;
    adjustLesson := 0;
    gfade_in(1);
end

procedure NodeAdjust
begin
    if (not(global_var(212))) then begin
        callAdjust := 1;
        call Node999();
    end
    else begin
        call Node019();
    end
end

procedure Node009a
begin
    set_local_var(3, local_var(3) + -10);
    set_local_var(0, local_var(0) + -10);
    if (local_var(0) <= -75) then begin
        set_local_var(1, -4);
    end
    else begin
        if (local_var(0) <= -50) then begin
            set_local_var(1, -3);
        end
        else begin
            if (local_var(0) <= -25) then begin
                set_local_var(1, -2);
            end
            else begin
                if (local_var(0) <= -10) then begin
                    set_local_var(1, -1);
                end
                else begin
                    if (local_var(0) <= 10) then begin
                        set_local_var(1, 0);
                    end
                    else begin
                        if (local_var(0) <= 25) then begin
                            set_local_var(1, 1);
                        end
                        else begin
                            if (local_var(0) <= 50) then begin
                                set_local_var(1, 2);
                            end
                            else begin
                                if (local_var(0) <= 75) then begin
                                    set_local_var(1, 3);
                                end
                                else begin
                                    set_local_var(1, 4);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    call Node009();
end

procedure Node013a
begin
    set_local_var(3, local_var(3) + -20);
    set_local_var(0, local_var(0) + -20);
    if (local_var(0) <= -75) then begin
        set_local_var(1, -4);
    end
    else begin
        if (local_var(0) <= -50) then begin
            set_local_var(1, -3);
        end
        else begin
            if (local_var(0) <= -25) then begin
                set_local_var(1, -2);
            end
            else begin
                if (local_var(0) <= -10) then begin
                    set_local_var(1, -1);
                end
                else begin
                    if (local_var(0) <= 10) then begin
                        set_local_var(1, 0);
                    end
                    else begin
                        if (local_var(0) <= 25) then begin
                            set_local_var(1, 1);
                        end
                        else begin
                            if (local_var(0) <= 50) then begin
                                set_local_var(1, 2);
                            end
                            else begin
                                if (local_var(0) <= 75) then begin
                                    set_local_var(1, 3);
                                end
                                else begin
                                    set_local_var(1, 4);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    set_global_var(366, 4);
    set_global_var(361, global_var(361) bwor 262144);
    call Node013();
end

procedure Node017a
begin
    set_global_var(366, 4);
    call Node017();
end

procedure Node998a
begin
    callGuards := 1;
    call Node998();
end

procedure NodeJoin
begin
    callIndoctranation := 1;
    add_obj_to_inven(dude_obj, create_object_sid(472, 0, 0, 1093));
end

procedure Node248a
begin
    set_global_var(462, 4);
    if ((global_var(366) >= 8) and not((global_var(361) bwand 262144) != 0)) then begin
        call Node024();
    end
    else begin
        call Node008();
    end
end

procedure Node999a
begin
    set_global_var(462, 4);
    call Node999();
end

procedure Node999b
begin
    set_global_var(366, 1);
    call Node999();
end

procedure Node2627
begin
    if (get_critter_stat(dude_obj, 3) > 5) then begin
        call Node026();
    end
    else begin
        call Node027();
    end
end

