variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable restock_amt;
variable restock_obj;

procedure start;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure Initial_Inven;
procedure LoadCritters;
procedure loadParts(variable arg0, variable arg1);
procedure loadBlood(variable arg0, variable arg1);


procedure start
begin
end

procedure map_enter_p_proc
begin
    if (metarule(14, 0)) then begin
        display_msg(message_str(676, 100));
        call loadParts(40, 20301);
    end
    if ((game_time_hour >= 600) and (game_time_hour < 700)) then begin
        set_light_level(game_time_hour - 600 + 40);
    end
    else begin
        if ((game_time_hour > 600) and (game_time_hour < 1800)) then begin
            set_light_level(100);
        end
        else begin
            if ((game_time_hour >= 1800) and (game_time_hour < 1900)) then begin
                set_light_level(100 - (game_time_hour - 1800));
            end
            else begin
                set_light_level(40);
            end
        end
    end
end

procedure map_update_p_proc
begin
    if ((game_time_hour >= 600) and (game_time_hour < 700)) then begin
        set_light_level(game_time_hour - 600 + 40);
    end
    else begin
        if ((game_time_hour > 600) and (game_time_hour < 1800)) then begin
            set_light_level(100);
        end
        else begin
            if ((game_time_hour >= 1800) and (game_time_hour < 1900)) then begin
                set_light_level(100 - (game_time_hour - 1800));
            end
            else begin
                set_light_level(40);
            end
        end
    end
    call LoadCritters();
end

procedure Initial_Inven
begin
end

procedure LoadCritters
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    debug_msg("MVAR_Current_Cow_Bombs: " + map_var(0));
    LVar0 := 6 - map_var(0);
    while (LVar0 > 0) do begin
        LVar2 := tile_num_in_direction(20301, random(0, 5), random(1, 10));
        LVar1 := create_object_sid(16777226, LVar2, elevation(dude_obj), 677);
        critter_attempt_placement(LVar1, LVar2, elevation(dude_obj));
        LVar0 := LVar0 - 1;
    end
    set_map_var(0, 6);
end

procedure loadParts(variable arg0, variable arg1)
begin
    variable LVar2 := 0;
    variable LVar3 := 0;
    variable LVar4 := 0;
    LVar2 := arg0;
    while (LVar2 > 0) do begin
        LVar2 := LVar2 - 1;
        LVar4 := tile_num_in_direction(arg1, random(0, 5), random(1, 10));
        LVar3 := create_object_sid(random(33555731, 33555736), 0, 0, 575);
        critter_attempt_placement(LVar3, LVar4, elevation(dude_obj));
        if (random(1, 2) == 1) then begin
            arg1 := LVar4;
        end
    end
end

procedure loadBlood(variable arg0, variable arg1)
begin
    variable LVar2 := 0;
    variable LVar3 := 0;
    variable LVar4 := 0;
    LVar2 := 0;
    while (LVar2 > 0) do begin
        LVar2 := LVar2 - 1;
        LVar4 := tile_num_in_direction(arg1, random(0, 5), random(1, 10));
        LVar3 := create_object_sid(random(33555753, 33555761), 0, 0, 575);
        critter_attempt_placement(LVar3, LVar4, elevation(dude_obj));
        if (random(1, 2) == 1) then begin
            arg1 := LVar4;
        end
    end
end

