variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure use_p_proc;
procedure talk_p_proc;
procedure look_p_proc;
procedure description_p_proc;
procedure Node001;
procedure Node002;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node013a;
procedure Node013b;
procedure Node013c;
procedure Node013d;
procedure Node013e;
procedure Node014;
procedure Node015;
procedure Node015a;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node022a;
procedure Node023;
procedure Node023a;
procedure Node024;
procedure Node024a;
procedure Node025;
procedure Node025a;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node028a;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node999;

variable Brain_Status;
variable Brain_Type;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure use_p_proc
begin
    variable LVar0 := 0;
    if (get_critter_stat(source_obj, 4) < 4) then begin
        if (source_obj == dude_obj) then begin
            display_msg(message_str(164, 102));
        end
        else begin
            display_msg(obj_name(source_obj) + message_str(164, 300));
        end
    end
    else begin
        dialogue_system_enter;
    end
end

procedure talk_p_proc
begin
    variable LVar0 := 0;
    if (local_var(0) == 1) then begin
        start_gdialog(164, self_obj, 4, -1, -1);
        gsay_start;
        call Node002();
        gsay_end;
        end_dialogue;
    end
    else begin
        start_gdialog(164, self_obj, 4, -1, -1);
        gsay_start;
        call Node001();
        gsay_end;
        end_dialogue;
    end
    if (local_var(0) == 1) then begin
        if (tile_contains_obj_pid(11311, elevation(self_obj), 16777290)) then begin
            LVar0 := tile_contains_pid_obj(11311, elevation(self_obj), 16777290);
            critter_dmg(LVar0, 1000, 6);
        end
    end
end

procedure look_p_proc
begin
    script_overrides;
    display_msg(message_str(164, 100));
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(164, 101));
end

procedure Node001
begin
    gsay_reply(164, message_str(164, 103) + message_str(164, 104) + message_str(164, 105) + message_str(164, 106));
    giq_option(4, 164, 107, Node010, 50);
    giq_option(4, 164, 108, Node031, 50);
    giq_option(4, 164, 109, Node999, 50);
end

procedure Node002
begin
    gsay_reply(164, message_str(164, 112) + message_str(164, 113));
    giq_option(4, 164, 115, Node999, 50);
end

procedure Node010
begin
    gsay_reply(164, message_str(164, 116) + message_str(164, 117) + message_str(164, 118) + message_str(164, 119));
    if (global_var(149) == 0) then begin
        giq_option(4, 164, 120, Node011, 50);
    end
    giq_option(4, 164, 121, Node013, 50);
    if (map_var(0) == 0) then begin
        giq_option(4, 164, 122, Node027, 50);
    end
    else begin
        giq_option(4, 164, 122, Node030, 50);
    end
    giq_option(4, 164, 123, Node001, 50);
    giq_option(4, 164, 124, Node999, 50);
end

procedure Node011
begin
    gsay_reply(164, message_str(164, 125) + message_str(164, 126) + message_str(164, 127) + message_str(164, 128) + message_str(164, 129) + message_str(164, 130));
    giq_option(4, 164, 131, Node012, 50);
    giq_option(4, 164, 132, Node012, 50);
    giq_option(4, 164, 133, Node012, 50);
    giq_option(4, 164, 134, Node012, 50);
    giq_option(4, 164, 135, Node012, 50);
    giq_option(4, 164, 137, Node001, 50);
    giq_option(4, 164, 138, Node999, 50);
end

procedure Node012
begin
    set_global_var(149, game_time);
    gsay_reply(164, 139);
    giq_option(4, 164, 140, Node999, 50);
end

procedure Node013
begin
    gsay_reply(164, message_str(164, 141) + message_str(164, 142) + message_str(164, 143) + message_str(164, 144) + message_str(164, 145) + message_str(164, 146));
    if (local_var(1) == 0) then begin
        giq_option(4, 164, 147, Node013a, 50);
    end
    if (local_var(2) == 0) then begin
        giq_option(4, 164, 148, Node013b, 50);
    end
    if (local_var(3) == 0) then begin
        giq_option(4, 164, 149, Node013c, 50);
    end
    if (local_var(4) == 0) then begin
        giq_option(4, 164, 150, Node013d, 50);
    end
    if (local_var(5) == 0) then begin
        giq_option(4, 164, 151, Node013e, 50);
    end
    giq_option(4, 164, 152, Node010, 50);
    giq_option(4, 164, 153, Node999, 50);
end

procedure Node013a
begin
    set_local_var(1, 1);
    call Node014();
end

procedure Node013b
begin
    call Node015();
end

procedure Node013c
begin
    set_local_var(3, 1);
    call Node014();
end

procedure Node013d
begin
    set_local_var(4, 1);
    call Node014();
end

procedure Node013e
begin
    set_local_var(5, 1);
    call Node014();
end

procedure Node014
begin
    gsay_reply(164, message_str(164, 154) + message_str(164, 155));
    giq_option(4, 164, 156, Node013, 50);
    giq_option(4, 164, 157, Node010, 50);
    giq_option(4, 164, 158, Node999, 50);
end

procedure Node015
begin
    gsay_reply(164, message_str(164, 159) + message_str(164, 160) + message_str(164, 161) + message_str(164, 162));
    if (local_var(6) == 0) then begin
        giq_option(4, 164, 163, Node015a, 50);
    end
    giq_option(4, 164, 164, Node010, 50);
    giq_option(4, 164, 165, Node999, 50);
end

procedure Node015a
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    set_local_var(6, 1);
    if (is_success(roll_vs_skill(dude_obj, 12, -30))) then begin
        LVar0 := 0;
    end
    else begin
        LVar0 := -40;
    end
    LVar1 := has_skill(dude_obj, 12) + LVar0;
    if (LVar1 <= 0) then begin
        call Node016();
    end
    else begin
        if (LVar1 <= 40) then begin
            call Node017();
        end
        else begin
            if (LVar1 <= 80) then begin
                call Node018();
            end
            else begin
                if (LVar1 <= 120) then begin
                    call Node019();
                end
                else begin
                    call Node020();
                end
            end
        end
    end
end

procedure Node016
begin
    gsay_reply(164, 166);
    giq_option(4, 164, 167, Node999, 50);
end

procedure Node017
begin
    Brain_Status := 1;
    gsay_reply(164, 168);
    giq_option(4, 164, 169, Node021, 50);
end

procedure Node018
begin
    Brain_Status := 2;
    gsay_reply(164, 170);
    giq_option(4, 164, 171, Node021, 50);
end

procedure Node019
begin
    Brain_Status := 3;
    gsay_reply(164, 172);
    giq_option(4, 164, 173, Node021, 50);
end

procedure Node020
begin
    Brain_Status := 4;
    gsay_reply(164, 174);
    giq_option(4, 164, 175, Node021, 50);
end

procedure Node021
begin
    if (Brain_Status == 4) then begin
        gsay_reply(164, 176);
    end
    else begin
        if (Brain_Status == 3) then begin
            gsay_reply(164, 177);
        end
        else begin
            if (Brain_Status == 2) then begin
                gsay_reply(164, 178);
            end
            else begin
                if (Brain_Status == 1) then begin
                    gsay_reply(164, 179);
                end
            end
        end
    end
    giq_option(4, 164, 196, Node022, 50);
    if (Brain_Status > 1) then begin
        giq_option(4, 164, 197, Node023, 50);
    end
    if (Brain_Status > 2) then begin
        giq_option(4, 164, 198, Node024, 50);
    end
    if (Brain_Status > 3) then begin
        giq_option(4, 164, 199, Node025, 50);
    end
end

procedure Node022
begin
    gsay_reply(164, message_str(164, 200));
    giq_option(4, 164, 202, Node022a, 50);
    giq_option(4, 164, 203, Node021, 50);
end

procedure Node022a
begin
    Brain_Type := 324;
    call Node026();
end

procedure Node023
begin
    gsay_reply(164, message_str(164, 204));
    giq_option(4, 164, 202, Node023a, 50);
    giq_option(4, 164, 203, Node021, 50);
end

procedure Node023a
begin
    Brain_Type := 323;
    call Node026();
end

procedure Node024
begin
    gsay_reply(164, message_str(164, 208));
    giq_option(4, 164, 202, Node024a, 50);
    giq_option(4, 164, 203, Node021, 50);
end

procedure Node024a
begin
    Brain_Type := 322;
    call Node026();
end

procedure Node025
begin
    gsay_reply(164, message_str(164, 212));
    giq_option(4, 164, 202, Node025a, 50);
    giq_option(4, 164, 203, Node021, 50);
end

procedure Node025a
begin
    Brain_Type := 321;
    call Node026();
end

procedure Node026
begin
    variable LVar0 := 0;
    set_local_var(2, 1);
    LVar0 := create_object_sid(Brain_Type, 0, 0, -1);
    set_global_var(604, 2);
    add_obj_to_inven(dude_obj, LVar0);
    set_local_var(0, 1);
    gsay_reply(164, 216);
    giq_option(4, 164, 217, Node999, 50);
end

procedure Node027
begin
    gsay_reply(164, message_str(164, 218) + message_str(164, 219));
    giq_option(4, 164, 220, Node028, 50);
    giq_option(4, 164, 221, Node010, 50);
    giq_option(4, 164, 222, Node999, 50);
end

procedure Node028
begin
    gsay_reply(164, message_str(164, 223) + message_str(164, 224));
    giq_option(4, 164, 225, Node028a, 50);
    giq_option(4, 164, 226, Node027, 50);
end

procedure Node028a
begin
    variable LVar0 := 0;
    set_map_var(0, 1);
    LVar0 := create_object_sid(16777350, 0, 0, 166);
    critter_attempt_placement(LVar0, 11910, 0);
    call Node029();
end

procedure Node029
begin
    gsay_reply(164, 227);
    giq_option(4, 164, 228, Node999, 50);
end

procedure Node030
begin
    gsay_reply(164, 229);
    giq_option(4, 164, 230, Node010, 50);
    giq_option(4, 164, 231, Node999, 50);
end

procedure Node031
begin
    gsay_reply(164, 232);
    giq_option(4, 164, 233, Node001, 50);
    giq_option(4, 164, 234, Node999, 50);
end

procedure Node999
begin
end

