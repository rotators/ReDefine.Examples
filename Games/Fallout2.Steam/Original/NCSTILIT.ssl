variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable last_timed_obj;
variable last_timed_param;
variable check_still_kill;
variable stored_msg;
variable stored_node;
variable top_msg;
variable var_num;

procedure ChooseFromList;
procedure CLICK_PREV;
procedure CLICK_0;
procedure CLICK_1;
procedure CLICK_2;
procedure CLICK_3;
procedure CLICK_4;
procedure CLICK_MORE;

variable floater_patch_msg;
variable hs_temp;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure map_update_p_proc;
procedure Node998;
procedure Node999;
procedure Node001;

import variable fighting_boxer_1_obj;
import variable fighting_boxer_2_obj;

variable temp_tile;
variable the_sound;
variable the_sound2;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure ChooseFromList
begin
    variable LVar0 := 0;
    gsay_reply(320, stored_msg);
    if (message_str(353, top_msg - 1) != "") then begin
        giq_option(1, 320, message_str(353, 150), CLICK_PREV, 50);
    end
    if (LVar0 == 0) then begin
        if (message_str(353, top_msg + 0) != "") then begin
            giq_option(1, 320, message_str(353, top_msg + 0), CLICK_0, 50);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(353, top_msg + 1) != "") then begin
            giq_option(1, 320, message_str(353, top_msg + 1), CLICK_1, 50);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(353, top_msg + 2) != "") then begin
            giq_option(1, 320, message_str(353, top_msg + 2), CLICK_2, 50);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(353, top_msg + 3) != "") then begin
            giq_option(1, 320, message_str(353, top_msg + 3), CLICK_3, 50);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(353, top_msg + 4) != "") then begin
            giq_option(1, 320, message_str(353, top_msg + 4), CLICK_4, 50);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(353, top_msg + 5) != "") then begin
            giq_option(1, 320, message_str(353, 151), CLICK_MORE, 50);
        end
    end
end

procedure CLICK_PREV
begin
    top_msg := top_msg - 5;
    call ChooseFromList();
end

procedure CLICK_0
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + (top_msg % 100));
    call stored_node();
end

procedure CLICK_1
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + ((top_msg + 1) % 100));
    call stored_node();
end

procedure CLICK_2
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + ((top_msg + 2) % 100));
    call stored_node();
end

procedure CLICK_3
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + ((top_msg + 3) % 100));
    call stored_node();
end

procedure CLICK_4
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + ((top_msg + 4) % 100));
    call stored_node();
end

procedure CLICK_MORE
begin
    top_msg := top_msg + 5;
    call ChooseFromList();
end

procedure start
begin
end

procedure critter_p_proc
begin
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(0, local_var(0) bwor 2);
    end
end

procedure talk_p_proc
begin
    call Node001();
end

procedure destroy_p_proc
begin
    removed_qty := obj_is_carrying_obj_pid(self_obj, 489);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(self_obj, 489);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(self_obj, 489);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(self_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(self_obj, restock_obj);
                    add_obj_to_inven(self_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                    metarule(43, self_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
        destroy_object(restock_obj);
    end
    restock_obj := 0;
    restock_amt := 0;
    if (source_obj == dude_obj) then begin
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
            set_global_var(2, 1);
            set_global_var(3, 0);
        end
        if (metarule(51, self_obj) == 2) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(2, 0);
                set_global_var(1, global_var(1) + 1);
                set_global_var(0, global_var(0) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(37, 0);
                set_global_var(38, 0);
                set_global_var(39, 0);
                set_global_var(40, 0);
                set_global_var(41, 0);
                set_global_var(42, 0);
                set_global_var(43, 0);
                set_global_var(44, 0);
                set_global_var(45, 0);
                if (global_var(0) >= 1000) then begin
                    set_global_var(37, 1);
                end
                else begin
                    if (global_var(0) >= 750) then begin
                        set_global_var(38, 1);
                    end
                    else begin
                        if (global_var(0) >= 500) then begin
                            set_global_var(39, 1);
                        end
                        else begin
                            if (global_var(0) >= 250) then begin
                                set_global_var(40, 1);
                            end
                            else begin
                                if (global_var(0) > -250) then begin
                                    set_global_var(41, 1);
                                end
                                else begin
                                    if (global_var(0) > -500) then begin
                                        set_global_var(42, 1);
                                    end
                                    else begin
                                        if (global_var(0) > -750) then begin
                                            set_global_var(43, 1);
                                        end
                                        else begin
                                            if (global_var(0) > -1000) then begin
                                                set_global_var(44, 1);
                                            end
                                            else begin
                                                set_global_var(45, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(55, global_var(55) + -8);
                debug_msg("Added " + -8 + " to Town Rep");
            end
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
            set_global_var(3, 1);
            set_global_var(2, 0);
        end
        set_global_var(0, global_var(0) + 0);
        debug_msg("Player gains " + 0 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    set_global_var(495, global_var(495) bwor 8);
    if (self_obj == fighting_boxer_1_obj) then begin
        fighting_boxer_1_obj := 0;
    end
    else begin
        if (self_obj == fighting_boxer_2_obj) then begin
            fighting_boxer_2_obj := 0;
        end
    end
end

procedure look_at_p_proc
begin
    debug_msg("look_at_p_proc for boxer #" + local_var(4));
    script_overrides;
    display_msg(message_str(320, 100));
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(320, random(160 - (0 * 10), 162 + (0 * 6))));
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(0, local_var(0) bwor 8);
        set_local_var(0, local_var(0) bwor 2);
    end
end

procedure map_enter_p_proc
begin
    variable LVar0 := 0;
    if (metarule(22, 0) == 0) then begin
        if (metarule(14, 0)) then begin
            critter_add_trait(self_obj, 1, 6, 54);
            critter_add_trait(self_obj, 1, 5, 40);
            set_local_var(2, 50);
            set_local_var(1, tile_num(self_obj));
            if (obj_art_fid(self_obj) == 16777312) then begin
                restock_obj := create_object_sid(489, 0, 0, -1);
                add_mult_objs_to_inven(self_obj, restock_obj, 1);
            end
        end
        else begin
            if ((global_var(495) bwand 8) != 0) then begin
                destroy_object(self_obj);
            end
        end
        if (has_trait(1, self_obj, 666) == 0) then begin
            set_obj_visibility(self_obj, 1);
        end
        LVar0 := 0;
        while ((tile_in_tile_rect(24479, 24471, 26479, 26471, tile_num(self_obj)) == 0) and (LVar0 <= 5)) do begin
            LVar0 := LVar0 + 1;
            debug_msg("trying to find a place for the boxer to be in the ring");
            temp_tile := 24479;
            while (tile_distance(temp_tile, 26471) > (tile_distance(24479, 26471) / 2)) do begin
                temp_tile := tile_num_in_direction(temp_tile, rotation_to_tile(temp_tile, 26471), 1);
            end
            temp_tile := tile_num_in_direction(temp_tile, random(0, 5), tile_distance(24479, 26471) / 2);
            if (tile_in_tile_rect(24479, 24471, 26479, 26471, temp_tile) == 0) then begin
                temp_tile := 0;
            end
            critter_attempt_placement(self_obj, temp_tile, elevation(self_obj));
        end
        last_timed_obj := self_obj;
        last_timed_param := last_timed_param;
        metarule3(100, self_obj, 25, 0);
        add_timer_event(self_obj, game_ticks(1) + random(0, game_ticks(3 - 1)), 25);
    end
    if (tile_in_tile_rect(24479, 24471, 26479, 26471, tile_num(self_obj))) then begin
        if (local_var(4) == 1) then begin
            fighting_boxer_1_obj := self_obj;
        end
        else begin
            if (local_var(4) == 2) then begin
                fighting_boxer_2_obj := self_obj;
            end
            else begin
                if (fighting_boxer_1_obj == 0) then begin
                    fighting_boxer_1_obj := self_obj;
                    set_local_var(4, 1);
                end
                else begin
                    fighting_boxer_2_obj := self_obj;
                    set_local_var(4, 2);
                end
            end
        end
    end
    if (local_var(4) == 1) then begin
        if (random(0, 1)) then begin
            set_global_var(495, global_var(495) bwor 4);
            last_timed_obj := self_obj;
            last_timed_param := last_timed_param;
            metarule3(100, self_obj, 26, 0);
            add_timer_event(self_obj, game_ticks(5) + random(0, game_ticks(15 - 5)), 26);
        end
        else begin
            set_global_var(495, global_var(495) bwand (-1 - 4));
            last_timed_obj := self_obj;
            last_timed_param := last_timed_param;
            metarule3(100, self_obj, 26, 0);
            add_timer_event(self_obj, game_ticks(15) + random(0, game_ticks(60 - 15)), 26);
        end
    end
end

procedure timed_event_p_proc
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    if (has_trait(1, self_obj, 666)) then begin
        if (fixed_param == 1) then begin
            set_local_var(0, local_var(0) bwand (-1 - 512));
        end
        else begin
            if (fixed_param == 26) then begin
                if (((global_var(495) bwand 8) != 0) == 0) then begin
                    if ((global_var(495) bwand 4) != 0) then begin
                        set_global_var(495, global_var(495) bwand (-1 - 4));
                        last_timed_obj := self_obj;
                        last_timed_param := last_timed_param;
                        metarule3(100, self_obj, 26, 0);
                        add_timer_event(self_obj, game_ticks(60 * 10), 26);
                        if (fighting_boxer_1_obj != 0) then begin
                            last_timed_obj := fighting_boxer_1_obj;
                            last_timed_param := last_timed_param;
                            metarule3(100, fighting_boxer_1_obj, 28, 0);
                            add_timer_event(fighting_boxer_1_obj, 0, 28);
                        end
                        if (fighting_boxer_2_obj != 0) then begin
                            last_timed_obj := fighting_boxer_2_obj;
                            last_timed_param := last_timed_param;
                            metarule3(100, fighting_boxer_2_obj, 28, 0);
                            add_timer_event(fighting_boxer_2_obj, 0, 28);
                        end
                    end
                    else begin
                        set_global_var(495, global_var(495) bwor 4);
                        last_timed_obj := self_obj;
                        last_timed_param := last_timed_param;
                        metarule3(100, self_obj, 26, 0);
                        add_timer_event(self_obj, 15 * 10, 26);
                    end
                end
            end
            else begin
                if (fixed_param == 29) then begin
                    set_local_var(0, local_var(0) bwor 2048);
                end
                else begin
                    if (fixed_param == 30) then begin
                        set_local_var(0, local_var(0) bwand (-1 - 2048));
                    end
                    else begin
                        if (fixed_param == 27) then begin
                            if (((local_var(0) bwand 1024) != 0) == 0) then begin
                                if (is_success(do_check(self_obj, 0, -random(0, 5)))) then begin
                                    reg_anim_func(2, self_obj);
                                    reg_anim_func(1, 1);
                                    reg_anim_animate(self_obj, 13, -1);
                                    reg_anim_func(3, 0);
                                    if ((((local_var(0) bwand 512) != 0) == 0) or ((global_var(495) bwand 4) != 0)) then begin
                                        if ((LVar0 != 0) and (((global_var(495) bwand 4) != 0) == 0)) then begin
                                            float_msg(LVar0, " ", 8);
                                        end
                                        float_msg(self_obj, message_str(320, random(310, 315)), 8);
                                        last_timed_obj := self_obj;
                                        last_timed_param := last_timed_param;
                                        metarule3(100, self_obj, 1, 0);
                                        add_timer_event(self_obj, game_ticks(5) + random(0, game_ticks(15 - 5)), 1);
                                    end
                                    set_local_var(0, local_var(0) bwor 512);
                                end
                                else begin
                                    set_local_var(2, local_var(2) - random(1, 5));
                                    if (local_var(2) > 0) then begin
                                        the_sound := sfx_build_char_name(self_obj, 16, 4);
                                        reg_anim_func(2, self_obj);
                                        reg_anim_func(1, 1);
                                        reg_anim_animate(self_obj, 14, -1);
                                        reg_anim_play_sfx(self_obj, the_sound, 1);
                                        reg_anim_func(3, 0);
                                        if ((((local_var(0) bwand 512) != 0) == 0) or ((global_var(495) bwand 4) != 0)) then begin
                                            if ((LVar0 != 0) and (((global_var(495) bwand 4) != 0) == 0)) then begin
                                                float_msg(LVar0, " ", 8);
                                            end
                                            float_msg(self_obj, message_str(320, random(300, 305)), 8);
                                            last_timed_obj := self_obj;
                                            last_timed_param := last_timed_param;
                                            metarule3(100, self_obj, 1, 0);
                                            add_timer_event(self_obj, game_ticks(5) + random(0, game_ticks(15 - 5)), 1);
                                        end
                                        set_local_var(0, local_var(0) bwor 512);
                                    end
                                    else begin
                                        set_local_var(0, local_var(0) bwor 1024);
                                        if (self_obj == fighting_boxer_1_obj) then begin
                                            LVar0 := fighting_boxer_2_obj;
                                        end
                                        else begin
                                            if (self_obj == fighting_boxer_2_obj) then begin
                                                LVar0 := fighting_boxer_1_obj;
                                            end
                                        end
                                        if (LVar0 != 0) then begin
                                            last_timed_obj := LVar0;
                                            last_timed_param := last_timed_param;
                                            metarule3(100, LVar0, 29, 0);
                                            add_timer_event(LVar0, 0, 29);
                                        end
                                        the_sound := sfx_build_char_name(self_obj, 16, 4);
                                        the_sound2 := sfx_build_char_name(self_obj, 20, 1);
                                        reg_anim_func(2, self_obj);
                                        reg_anim_func(1, 1);
                                        reg_anim_animate(self_obj, 20, -1);
                                        reg_anim_play_sfx(self_obj, the_sound, 1);
                                        reg_anim_play_sfx(self_obj, the_sound, 5);
                                        reg_anim_func(3, 0);
                                        if ((((local_var(0) bwand 512) != 0) == 0) or ((global_var(495) bwand 4) != 0)) then begin
                                            if ((LVar0 != 0) and (((global_var(495) bwand 4) != 0) == 0)) then begin
                                                float_msg(LVar0, " ", 8);
                                            end
                                            float_msg(self_obj, message_str(320, random(330, 335)), 8);
                                            last_timed_obj := self_obj;
                                            last_timed_param := last_timed_param;
                                            metarule3(100, self_obj, 1, 0);
                                            add_timer_event(self_obj, game_ticks(5) + random(0, game_ticks(15 - 5)), 1);
                                        end
                                        set_local_var(0, local_var(0) bwor 512);
                                    end
                                end
                            end
                        end
                        else begin
                            if (fixed_param == 28) then begin
                                set_local_var(2, local_var(2) + ((50 - local_var(2)) / 2));
                            end
                            else begin
                                if (fixed_param == 25) then begin
                                    if (combat_is_initialized == 0) then begin
                                        if (((global_var(495) bwand 8) != 0) == 0) then begin
                                            if ((local_var(0) bwand 1024) != 0) then begin
                                                set_local_var(3, local_var(3) + 1);
                                                if (local_var(2) < random(0, 4)) then begin
                                                    set_local_var(2, local_var(2) + random(0, 2));
                                                    if (local_var(3) > 3) then begin
                                                        if (((global_var(495) bwand 4) != 0) == 0) then begin
                                                            if (fighting_boxer_1_obj != 0) then begin
                                                                last_timed_obj := fighting_boxer_1_obj;
                                                                last_timed_param := last_timed_param;
                                                                metarule3(100, fighting_boxer_1_obj, 26, 0);
                                                                add_timer_event(fighting_boxer_1_obj, 0, 26);
                                                            end
                                                        end
                                                    end
                                                end
                                                else begin
                                                    set_local_var(0, local_var(0) bwand (-1 - 1024));
                                                    if (self_obj == fighting_boxer_1_obj) then begin
                                                        LVar0 := fighting_boxer_2_obj;
                                                    end
                                                    else begin
                                                        if (self_obj == fighting_boxer_2_obj) then begin
                                                            LVar0 := fighting_boxer_1_obj;
                                                        end
                                                    end
                                                    if (LVar0 != 0) then begin
                                                        last_timed_obj := LVar0;
                                                        last_timed_param := last_timed_param;
                                                        metarule3(100, LVar0, 30, 0);
                                                        add_timer_event(LVar0, 0, 30);
                                                    end
                                                    reg_anim_func(2, self_obj);
                                                    reg_anim_func(1, 1);
                                                    reg_anim_animate(self_obj, 37, -1);
                                                    reg_anim_func(3, 0);
                                                end
                                            end
                                            else begin
                                                if ((global_var(495) bwand 4) != 0) then begin
                                                    if (tile_num(self_obj) != local_var(1)) then begin
                                                        animate_move_obj_to_tile(self_obj, local_var(1), 0);
                                                    end
                                                    else begin
                                                        if ((((local_var(0) bwand 512) != 0) == 0) or ((global_var(495) bwand 4) != 0)) then begin
                                                            if ((LVar0 != 0) and (((global_var(495) bwand 4) != 0) == 0)) then begin
                                                                float_msg(LVar0, " ", 8);
                                                            end
                                                            float_msg(self_obj, message_str(320, random(360, 368)), 8);
                                                            last_timed_obj := self_obj;
                                                            last_timed_param := last_timed_param;
                                                            metarule3(100, self_obj, 1, 0);
                                                            add_timer_event(self_obj, game_ticks(5) + random(0, game_ticks(15 - 5)), 1);
                                                        end
                                                        set_local_var(0, local_var(0) bwor 512);
                                                    end
                                                end
                                                else begin
                                                    set_local_var(3, 0);
                                                    if (self_obj == fighting_boxer_1_obj) then begin
                                                        LVar0 := fighting_boxer_2_obj;
                                                    end
                                                    else begin
                                                        if (self_obj == fighting_boxer_2_obj) then begin
                                                            LVar0 := fighting_boxer_1_obj;
                                                        end
                                                    end
                                                    if ((LVar0 != 0) and (anim_busy(self_obj) == 0)) then begin
                                                        if (tile_distance_objs(self_obj, LVar0) > 1) then begin
                                                            temp_tile := tile_num(self_obj);
                                                            while (tile_distance(temp_tile, tile_num(LVar0)) > (tile_distance(tile_num(self_obj), tile_num(LVar0)) / 2)) do begin
                                                                temp_tile := tile_num_in_direction(temp_tile, rotation_to_tile(temp_tile, tile_num(LVar0)), 1);
                                                            end
                                                            animate_move_obj_to_tile(self_obj, temp_tile, 0);
                                                        end
                                                        else begin
                                                            if (rotation_to_tile(tile_num(self_obj), tile_num(LVar0)) != has_trait(1, self_obj, 10)) then begin
                                                                anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(LVar0)));
                                                            end
                                                            else begin
                                                                if (anim_busy(LVar0) == 0) then begin
                                                                    if ((random(1, 6) == 3) or ((local_var(0) bwand 2048) != 0)) then begin
                                                                        if ((local_var(0) bwand 2048) != 0) then begin
                                                                            if ((((local_var(0) bwand 512) != 0) == 0) or ((global_var(495) bwand 4) != 0)) then begin
                                                                                if ((LVar0 != 0) and (((global_var(495) bwand 4) != 0) == 0)) then begin
                                                                                    float_msg(LVar0, " ", 8);
                                                                                end
                                                                                float_msg(self_obj, message_str(320, random(320, 323)), 8);
                                                                                last_timed_obj := self_obj;
                                                                                last_timed_param := last_timed_param;
                                                                                metarule3(100, self_obj, 1, 0);
                                                                                add_timer_event(self_obj, game_ticks(5) + random(0, game_ticks(15 - 5)), 1);
                                                                            end
                                                                            set_local_var(0, local_var(0) bwor 512);
                                                                        end
                                                                        if (tile_distance_objs(self_obj, LVar0) < 4) then begin
                                                                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), (has_trait(1, self_obj, 10) + random(2, 4)) % 6, random(1, 3)), 0);
                                                                        end
                                                                    end
                                                                    else begin
                                                                        if (random(1, 15) != 2) then begin
                                                                            if (random(1, 7) == 2) then begin
                                                                                if ((obj_item_subtype(critter_inven_obj(self_obj, 1)) == 3) or (obj_item_subtype(critter_inven_obj(self_obj, 2)) == 3)) then begin
                                                                                    metarule(43, self_obj);
                                                                                end
                                                                                else begin
                                                                                    if (obj_art_fid(self_obj) == 16777312) then begin
                                                                                        if (obj_is_carrying_obj_pid(self_obj, 489) > 0) then begin
                                                                                            wield_obj_critter(self_obj, obj_carrying_pid_obj(self_obj, 489));
                                                                                        end
                                                                                    end
                                                                                end
                                                                            end
                                                                            else begin
                                                                                if ((((local_var(0) bwand 512) != 0) == 0) or ((global_var(495) bwand 4) != 0)) then begin
                                                                                    if ((LVar0 != 0) and (((global_var(495) bwand 4) != 0) == 0)) then begin
                                                                                        float_msg(LVar0, " ", 8);
                                                                                    end
                                                                                    float_msg(self_obj, message_str(320, random(340, 347)), 8);
                                                                                    last_timed_obj := self_obj;
                                                                                    last_timed_param := last_timed_param;
                                                                                    metarule3(100, self_obj, 1, 0);
                                                                                    add_timer_event(self_obj, game_ticks(5) + random(0, game_ticks(15 - 5)), 1);
                                                                                end
                                                                                set_local_var(0, local_var(0) bwor 512);
                                                                                reg_anim_func(2, self_obj);
                                                                                reg_anim_func(1, 1);
                                                                                LVar1 := random(1, 2) + (2 * ((obj_item_subtype(critter_inven_obj(self_obj, 1)) == 3) or (obj_item_subtype(critter_inven_obj(self_obj, 2)) == 3)));
                                                                                if (LVar1 == 1) then begin
                                                                                    reg_anim_animate(self_obj, 17, -1);
                                                                                end
                                                                                else begin
                                                                                    if (LVar1 == 2) then begin
                                                                                        reg_anim_animate(self_obj, 16, -1);
                                                                                    end
                                                                                    else begin
                                                                                        if (LVar1 == 3) then begin
                                                                                            reg_anim_animate(self_obj, 41, -1);
                                                                                        end
                                                                                        else begin
                                                                                            reg_anim_animate(self_obj, 42, -1);
                                                                                        end
                                                                                    end
                                                                                end
                                                                                reg_anim_func(3, 0);
                                                                                last_timed_obj := LVar0;
                                                                                last_timed_param := last_timed_param;
                                                                                metarule3(100, LVar0, 27, 0);
                                                                                add_timer_event(LVar0, 3, 27);
                                                                            end
                                                                        end
                                                                        else begin
                                                                            if ((((local_var(0) bwand 512) != 0) == 0) or ((global_var(495) bwand 4) != 0)) then begin
                                                                                if ((LVar0 != 0) and (((global_var(495) bwand 4) != 0) == 0)) then begin
                                                                                    float_msg(LVar0, " ", 8);
                                                                                end
                                                                                float_msg(self_obj, message_str(320, random(350, 357)), 8);
                                                                                last_timed_obj := self_obj;
                                                                                last_timed_param := last_timed_param;
                                                                                metarule3(100, self_obj, 1, 0);
                                                                                add_timer_event(self_obj, game_ticks(5) + random(0, game_ticks(15 - 5)), 1);
                                                                            end
                                                                            set_local_var(0, local_var(0) bwor 512);
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                    last_timed_obj := self_obj;
                                    last_timed_param := last_timed_param;
                                    metarule3(100, self_obj, 25, 0);
                                    add_timer_event(self_obj, game_ticks(1) + random(0, game_ticks(2 - 1)), 25);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure map_update_p_proc
begin
end

procedure Node998
begin
    set_local_var(0, local_var(0) bwor 2);
end

procedure Node999
begin
end

procedure Node001
begin
    if ((obj_pid(critter_inven_obj(dude_obj, 0)) == 3) or (obj_pid(critter_inven_obj(dude_obj, 0)) == 348) or (obj_pid(critter_inven_obj(dude_obj, 0)) == 349) or (obj_pid(critter_inven_obj(dude_obj, 0)) == 232) or (global_var(259) > 0)) then begin
        float_msg(self_obj, message_str(320, random(203, 211)), 8);
    end
    else begin
        float_msg(self_obj, message_str(320, random(216 - ((get_critter_stat(dude_obj, 34) == 1) * 4), 219 + ((get_critter_stat(dude_obj, 34) == 1) * 8))), 8);
    end
end

