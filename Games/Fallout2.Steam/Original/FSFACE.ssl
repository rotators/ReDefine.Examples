variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure sequence;

variable q1;
variable q2;
variable q3;
variable doSeq;
variable seqCnt;
variable lastDudePos;
variable lastDudeRot;
variable guard1;
variable guard2;
variable body;
variable matt;
variable wep;

procedure timed_event_p_proc;
procedure Node999;
procedure NodeHeal15;
procedure NodePois15;
procedure NodeRad15;
procedure NodeCrip15;
procedure NodeStr15;
procedure NodeInt15;
procedure NodePer15;
procedure NodeChr15;
procedure Node007s;
procedure Node009s;
procedure Node011s;
procedure Node013s;
procedure Node017a;
procedure Node022a;
procedure Node023a;
procedure NodeSequence;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure use_p_proc
begin
    dialogue_system_enter;
end

procedure look_at_p_proc
begin
end

procedure description_p_proc
begin
end

procedure use_skill_on_p_proc
begin
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
end

procedure map_enter_p_proc
begin
end

procedure map_update_p_proc
begin
end

procedure talk_p_proc
begin
    start_gdialog(1162, self_obj, 4, -1, -1);
    gsay_start;
    call Node001();
    gsay_end;
    end_dialogue;
    if (doSeq == 1) then begin
        doSeq := 0;
        call sequence();
    end
end

procedure Node001
begin
    gsay_reply(1162, 100);
    giq_option(1, 1162, 101, Node002, 50);
    giq_option(1, 1162, 102, Node999, 50);
    giq_option(-3, 1162, 103, Node016, 50);
    giq_option(4, 1162, 104, Node016, 50);
    if (((global_var(582) bwand 4) != 0) and not((global_var(582) bwand 262144) != 0)) then begin
        giq_option(4, 1162, 223, Node024, 50);
    end
end

procedure Node002
begin
    gsay_reply(1162, 105);
    if (get_critter_stat(dude_obj, 35) != get_critter_stat(dude_obj, 7)) then begin
        giq_option(-3, 1162, 106, Node003, 50);
        giq_option(4, 1162, 115, Node003, 50);
    end
    if (get_poison(dude_obj)) then begin
        giq_option(-3, 1162, 107, Node004, 50);
        giq_option(4, 1162, 116, Node004, 50);
    end
    if (get_critter_stat(dude_obj, 37)) then begin
        giq_option(-3, 1162, 108, Node005, 50);
        giq_option(4, 1162, 117, Node005, 50);
    end
    if ((critter_state(dude_obj) bwand 4) or (critter_state(dude_obj) bwand 8) or (critter_state(dude_obj) bwand 16) or (critter_state(dude_obj) bwand 32)) then begin
        giq_option(-3, 1162, 109, Node006, 50);
        giq_option(4, 1162, 118, Node006, 50);
    end
    if (not((local_var(1) bwand 1) != 0) and (get_critter_stat(dude_obj, 0) < 10)) then begin
        giq_option(-3, 1162, 110, Node007, 50);
        giq_option(4, 1162, 119, Node007, 50);
    end
    if (not((local_var(1) bwand 2) != 0) and (get_critter_stat(dude_obj, 4) < 10)) then begin
        giq_option(-3, 1162, 111, Node009, 50);
        giq_option(4, 1162, 120, Node009, 50);
    end
    if (not((local_var(1) bwand 4) != 0) and (get_critter_stat(dude_obj, 1) < 10)) then begin
        giq_option(-3, 1162, 112, Node011, 50);
        giq_option(4, 1162, 121, Node011, 50);
    end
    if (not((local_var(1) bwand 8) != 0) and (get_critter_stat(dude_obj, 3) < 10)) then begin
        giq_option(-3, 1162, 113, Node013, 50);
        giq_option(4, 1162, 122, Node013, 50);
    end
    giq_option(-3, 1162, 114, Node999, 50);
    giq_option(4, 1162, 123, Node999, 50);
end

procedure Node003
begin
    gsay_reply(1162, 124);
    giq_option(-3, 1162, 125, NodeHeal15, 50);
    giq_option(-3, 1162, 126, Node002, 50);
    giq_option(4, 1162, 127, NodeHeal15, 50);
    giq_option(4, 1162, 128, Node002, 50);
end

procedure Node004
begin
    gsay_reply(1162, 129);
    giq_option(-3, 1162, 130, NodePois15, 50);
    giq_option(-3, 1162, 131, Node002, 50);
    giq_option(4, 1162, 132, NodePois15, 50);
    giq_option(4, 1162, 133, Node002, 50);
end

procedure Node005
begin
    gsay_reply(1162, 134);
    giq_option(-3, 1162, 135, NodeRad15, 50);
    giq_option(-3, 1162, 136, Node002, 50);
    giq_option(4, 1162, 137, NodeRad15, 50);
    giq_option(4, 1162, 138, Node002, 50);
end

procedure Node006
begin
    gsay_reply(1162, 139);
    giq_option(-3, 1162, 140, NodeCrip15, 50);
    giq_option(-3, 1162, 141, Node002, 50);
    giq_option(4, 1162, 142, NodeCrip15, 50);
    giq_option(4, 1162, 143, Node002, 50);
end

procedure Node007
begin
    if (not((local_var(2) bwand 1) != 0)) then begin
        gsay_reply(1162, 144);
        if (obj_carrying_pid_obj(dude_obj, 505)) then begin
            giq_option(-3, 1162, 145, Node007s, 50);
            giq_option(4, 1162, 147, Node007s, 50);
        end
        else begin
            giq_option(-3, 1162, 146, Node999, 50);
            giq_option(4, 1162, 148, Node999, 50);
        end
    end
    else begin
        gsay_reply(1162, 149);
        giq_option(-3, 1162, 150, Node008, 50);
        giq_option(-3, 1162, 151, Node002, 50);
        giq_option(4, 1162, 152, Node008, 50);
        giq_option(4, 1162, 153, Node002, 50);
    end
end

procedure Node008
begin
    gsay_reply(1162, 154);
    giq_option(1, 1162, 155, NodeStr15, 50);
end

procedure Node009
begin
    if (not((local_var(2) bwand 2) != 0)) then begin
        gsay_reply(1162, 156);
        if (obj_carrying_pid_obj(dude_obj, 506)) then begin
            giq_option(-3, 1162, 157, Node009s, 50);
            giq_option(4, 1162, 159, Node009s, 50);
        end
        else begin
            giq_option(-3, 1162, 158, Node999, 50);
            giq_option(4, 1162, 160, Node999, 50);
        end
    end
    else begin
        gsay_reply(1162, 161);
        giq_option(-3, 1162, 162, Node010, 50);
        giq_option(-3, 1162, 163, Node002, 50);
        giq_option(4, 1162, 164, Node010, 50);
        giq_option(4, 1162, 165, Node002, 50);
    end
end

procedure Node010
begin
    gsay_reply(1162, 166);
    giq_option(1, 1162, 167, NodeInt15, 50);
end

procedure Node011
begin
    if (not((local_var(2) bwand 4) != 0)) then begin
        gsay_reply(1162, 168);
        if (obj_carrying_pid_obj(dude_obj, 504)) then begin
            giq_option(-3, 1162, 169, Node011s, 50);
            giq_option(4, 1162, 171, Node011s, 50);
        end
        else begin
            giq_option(-3, 1162, 170, Node999, 50);
            giq_option(4, 1162, 172, Node999, 50);
        end
    end
    else begin
        gsay_reply(1162, 173);
        giq_option(-3, 1162, 174, Node012, 50);
        giq_option(-3, 1162, 175, Node002, 50);
        giq_option(4, 1162, 176, Node012, 50);
        giq_option(4, 1162, 177, Node002, 50);
    end
end

procedure Node012
begin
    gsay_reply(1162, 178);
    giq_option(1, 1162, 179, NodePer15, 50);
end

procedure Node013
begin
    if (not((local_var(2) bwand 8) != 0)) then begin
        gsay_reply(1162, 180);
        if (obj_carrying_pid_obj(dude_obj, 503)) then begin
            giq_option(-3, 1162, 181, Node013s, 50);
            giq_option(4, 1162, 183, Node013s, 50);
        end
        else begin
            giq_option(-3, 1162, 182, Node999, 50);
            giq_option(4, 1162, 184, Node999, 50);
        end
    end
    else begin
        gsay_reply(1162, 185);
        giq_option(-3, 1162, 186, Node014, 50);
        giq_option(-3, 1162, 187, Node002, 50);
        giq_option(4, 1162, 188, Node014, 50);
        giq_option(4, 1162, 189, Node002, 50);
    end
end

procedure Node014
begin
    gsay_reply(1162, 190);
    giq_option(1, 1162, 191, NodeChr15, 50);
end

procedure Node015
begin
    gsay_reply(1162, 192);
    giq_option(1, 1162, 193, Node999, 50);
end

procedure Node016
begin
    gsay_reply(1162, 194);
    if (not(q1)) then begin
        giq_option(-3, 1162, 195, Node017a, 50);
        giq_option(4, 1162, 199, Node017a, 50);
    end
    if (not(q2)) then begin
        giq_option(-3, 1162, 196, Node022a, 50);
        giq_option(4, 1162, 200, Node022a, 50);
    end
    if (not(q3)) then begin
        giq_option(-3, 1162, 197, Node023a, 50);
        giq_option(4, 1162, 201, Node023a, 50);
    end
    giq_option(-3, 1162, 198, Node999, 50);
    giq_option(4, 1162, 202, Node999, 50);
end

procedure Node017
begin
    gsay_reply(1162, 203);
    giq_option(-3, 1162, 204, Node018, 50);
    giq_option(4, 1162, 205, Node019, 50);
end

procedure Node018
begin
    gsay_reply(1162, 206);
    giq_option(-3, 1162, 207, Node019, 50);
end

procedure Node019
begin
    gsay_reply(1162, 208);
    giq_option(1, 1162, 209, Node020, 50);
end

procedure Node020
begin
    gsay_reply(1162, 210);
    giq_option(-3, 1162, 211, Node021, 50);
    giq_option(-3, 1162, 212, Node016, 50);
    giq_option(4, 1162, 213, Node021, 50);
    giq_option(4, 1162, 214, Node016, 50);
end

procedure Node021
begin
    gsay_reply(1162, 215);
    giq_option(-3, 1162, 216, Node016, 50);
    giq_option(4, 1162, 217, Node016, 50);
end

procedure Node022
begin
    gsay_reply(1162, 218);
    giq_option(-3, 1162, 219, Node016, 50);
    giq_option(4, 1162, 220, Node016, 50);
end

procedure Node023
begin
    gsay_reply(1162, 221);
    giq_option(1, 1162, 222, Node016, 50);
end

procedure Node024
begin
    gsay_reply(1162, 224);
    giq_option(1, 1162, 225, NodeSequence, 50);
    giq_option(1, 1162, 226, Node001, 50);
end

procedure sequence
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    if (seqCnt == 0) then begin
        gfade_out(500);
        game_ui_disable;
        lastDudePos := tile_num(dude_obj);
        lastDudeRot := has_trait(1, dude_obj, 10);
        set_obj_visibility(dude_obj, 1);
        guard1 := create_object_sid(16777466, 14324, 2, -1);
        guard2 := create_object_sid(16777466, 14328, 2, -1);
        body := create_object_sid(16777504, 14726, 2, -1);
        matt := create_object_sid(16777256, 15326, 2, -1);
        anim(guard1, 1000, rotation_to_tile(tile_num(guard1), tile_num(matt)));
        anim(guard2, 1000, rotation_to_tile(tile_num(guard2), tile_num(matt)));
        anim(body, 1000, rotation_to_tile(tile_num(body), tile_num(matt)));
        anim(matt, 1000, rotation_to_tile(tile_num(matt), tile_num(body)));
        set_global_var(398, 1);
        move_to(dude_obj, 15125, 2);
        gfade_in(500);
        float_msg(matt, message_str(1162, 227), 0);
        seqCnt := seqCnt + 1;
        add_timer_event(self_obj, game_ticks(3), 1);
    end
    else begin
        if (seqCnt == 1) then begin
            float_msg(body, message_str(1162, 228), 0);
            seqCnt := seqCnt + 1;
            add_timer_event(self_obj, game_ticks(3), 1);
        end
        else begin
            if (seqCnt == 2) then begin
                float_msg(matt, message_str(1162, 229), 0);
                seqCnt := seqCnt + 1;
                add_timer_event(self_obj, game_ticks(3), 1);
            end
            else begin
                if (seqCnt == 3) then begin
                    float_msg(body, message_str(1162, 230), 2);
                    seqCnt := seqCnt + 1;
                    add_timer_event(self_obj, game_ticks(5), 1);
                end
                else begin
                    if (seqCnt == 4) then begin
                        float_msg(matt, message_str(1162, 231), 0);
                        seqCnt := seqCnt + 1;
                        add_timer_event(self_obj, game_ticks(3), 1);
                    end
                    else begin
                        if (seqCnt == 5) then begin
                            float_msg(body, message_str(1162, 232), 3);
                            seqCnt := seqCnt + 1;
                            add_timer_event(self_obj, game_ticks(3), 1);
                        end
                        else begin
                            if (seqCnt == 6) then begin
                                wep := create_object_sid(233, 0, 0, -1);
                                add_obj_to_inven(matt, wep);
                                wield_obj_critter(matt, wep);
                                seqCnt := seqCnt + 1;
                                add_timer_event(self_obj, game_ticks(2), 1);
                            end
                            else begin
                                if (seqCnt == 7) then begin
                                    float_msg(body, message_str(1162, 233), 0);
                                    seqCnt := seqCnt + 1;
                                    add_timer_event(self_obj, game_ticks(1), 1);
                                end
                                else begin
                                    if ((seqCnt > 7) and (seqCnt < 10)) then begin
                                        LVar0 := sfx_build_weapon_name(1, wep, 0, self_obj);
                                        LVar1 := sfx_build_char_name(body, 14, 4);
                                        reg_anim_func(2, matt);
                                        reg_anim_func(1, 1);
                                        reg_anim_animate(matt, 45, -1);
                                        reg_anim_play_sfx(matt, LVar0, 0);
                                        reg_anim_func(3, 0);
                                        reg_anim_func(2, body);
                                        reg_anim_func(1, 1);
                                        reg_anim_animate(body, 14, -1);
                                        reg_anim_play_sfx(body, LVar1, 0);
                                        reg_anim_func(3, 0);
                                        seqCnt := seqCnt + 1;
                                        add_timer_event(self_obj, game_ticks(1), 1);
                                    end
                                    else begin
                                        if (seqCnt == 10) then begin
                                            float_msg(body, message_str(1162, 234), 3);
                                            seqCnt := seqCnt + 1;
                                            add_timer_event(self_obj, game_ticks(3), 1);
                                        end
                                        else begin
                                            if (seqCnt == 11) then begin
                                                float_msg(body, message_str(1162, 235), 3);
                                                seqCnt := seqCnt + 1;
                                                add_timer_event(self_obj, game_ticks(3), 1);
                                            end
                                            else begin
                                                if (seqCnt == 12) then begin
                                                    float_msg(matt, message_str(1162, 236), 3);
                                                    seqCnt := seqCnt + 1;
                                                    add_timer_event(self_obj, game_ticks(1), 1);
                                                end
                                                else begin
                                                    if (seqCnt == 13) then begin
                                                        reg_anim_func(2, body);
                                                        reg_anim_func(1, 1);
                                                        animate_move_obj_to_tile(body, 15126, 0);
                                                        reg_anim_func(3, 0);
                                                        seqCnt := seqCnt + 1;
                                                        add_timer_event(self_obj, game_ticks(1), 1);
                                                    end
                                                    else begin
                                                        if (seqCnt == 14) then begin
                                                            LVar0 := sfx_build_char_name(body, 16, 4);
                                                            LVar1 := sfx_build_char_name(matt, 23, 3);
                                                            reg_anim_func(2, body);
                                                            reg_anim_func(1, 1);
                                                            reg_anim_animate(body, 16, -1);
                                                            reg_anim_play_sfx(body, LVar0, 0);
                                                            reg_anim_func(3, 0);
                                                            reg_anim_func(2, matt);
                                                            reg_anim_func(1, 1);
                                                            reg_anim_animate(matt, 23, -1);
                                                            reg_anim_play_sfx(matt, LVar1, 0);
                                                            reg_anim_func(3, 0);
                                                            seqCnt := seqCnt + 1;
                                                            add_timer_event(self_obj, game_ticks(5), 1);
                                                        end
                                                        else begin
                                                            if (seqCnt == 15) then begin
                                                                anim(body, 1000, rotation_to_tile(tile_num(body), tile_num(guard1)));
                                                                float_msg(matt, message_str(1162, 237), 0);
                                                                seqCnt := seqCnt + 1;
                                                                add_timer_event(self_obj, game_ticks(3), 1);
                                                            end
                                                            else begin
                                                                if (seqCnt == 16) then begin
                                                                    float_msg(guard1, message_str(1162, 238), 3);
                                                                    seqCnt := seqCnt + 1;
                                                                    add_timer_event(self_obj, game_ticks(1), 1);
                                                                end
                                                                else begin
                                                                    if (seqCnt == 17) then begin
                                                                        float_msg(guard2, message_str(1162, 239), 0);
                                                                        seqCnt := seqCnt + 1;
                                                                        add_timer_event(self_obj, game_ticks(3), 1);
                                                                    end
                                                                    else begin
                                                                        if (seqCnt == 18) then begin
                                                                            gfade_out(500);
                                                                            seqCnt := 0;
                                                                            destroy_object(matt);
                                                                            destroy_object(guard1);
                                                                            destroy_object(guard2);
                                                                            destroy_object(body);
                                                                            matt := 0;
                                                                            guard1 := 0;
                                                                            guard2 := 0;
                                                                            body := 0;
                                                                            move_to(dude_obj, 14547, 1);
                                                                            set_global_var(398, 0);
                                                                            anim(self_obj, 1000, dude_obj);
                                                                            set_obj_visibility(dude_obj, 0);
                                                                            game_ui_enable;
                                                                            set_global_var(582, global_var(582) bwor 262144);
                                                                            gfade_in(500);
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        call sequence();
    end
end

procedure Node999
begin
end

procedure NodeHeal15
begin
    gfade_out(500);
    critter_heal(dude_obj, get_critter_stat(dude_obj, 7) - get_critter_stat(dude_obj, 35));
    game_time_advance(60 * 10 * 5);
    gfade_in(500);
    call Node015();
end

procedure NodePois15
begin
    gfade_out(500);
    poison(dude_obj, -get_poison(dude_obj));
    game_time_advance(60 * 10 * 30);
    gfade_in(500);
    call Node015();
end

procedure NodeRad15
begin
    gfade_out(500);
    radiation_dec(dude_obj, get_critter_stat(dude_obj, 37));
    game_time_advance(60 * 10 * 60);
    gfade_in(500);
    call Node015();
end

procedure NodeCrip15
begin
    gfade_out(500);
    critter_injure(dude_obj, 4 bwor 8 bwor 16 bwor 32 bwor 8388608);
    game_time_advance(24 * (60 * (60 * 10)));
    gfade_in(500);
    call Node015();
end

procedure NodeStr15
begin
    gfade_out(500);
    set_critter_stat(dude_obj, 0, 1);
    game_time_advance(7 * (24 * (60 * (60 * 10))) * 2);
    gfade_in(500);
    set_local_var(1, local_var(1) bwor 1);
    call Node015();
end

procedure NodeInt15
begin
    gfade_out(500);
    set_critter_stat(dude_obj, 4, 1);
    game_time_advance(7 * (24 * (60 * (60 * 10))) * 4);
    gfade_in(500);
    set_local_var(1, local_var(1) bwor 2);
    call Node015();
end

procedure NodePer15
begin
    gfade_out(500);
    set_critter_stat(dude_obj, 1, 1);
    game_time_advance(7 * (24 * (60 * (60 * 10))) * 2);
    gfade_in(500);
    set_local_var(1, local_var(1) bwor 4);
    call Node015();
end

procedure NodeChr15
begin
    gfade_out(500);
    set_critter_stat(dude_obj, 3, 1);
    game_time_advance(7 * (24 * (60 * (60 * 10))) * 3);
    gfade_in(500);
    set_local_var(1, local_var(1) bwor 8);
    call Node015();
end

procedure Node007s
begin
    variable LVar0 := 0;
    LVar0 := obj_carrying_pid_obj(dude_obj, 505);
    rm_obj_from_inven(dude_obj, LVar0);
    destroy_object(LVar0);
    set_local_var(2, local_var(2) bwor 1);
    call Node007();
end

procedure Node009s
begin
    variable LVar0 := 0;
    LVar0 := obj_carrying_pid_obj(dude_obj, 506);
    rm_obj_from_inven(dude_obj, LVar0);
    destroy_object(LVar0);
    set_local_var(2, local_var(2) bwor 2);
    call Node009();
end

procedure Node011s
begin
    variable LVar0 := 0;
    LVar0 := obj_carrying_pid_obj(dude_obj, 504);
    rm_obj_from_inven(dude_obj, LVar0);
    destroy_object(LVar0);
    set_local_var(2, local_var(2) bwor 4);
    call Node011();
end

procedure Node013s
begin
    variable LVar0 := 0;
    LVar0 := obj_carrying_pid_obj(dude_obj, 503);
    rm_obj_from_inven(dude_obj, LVar0);
    destroy_object(LVar0);
    set_local_var(2, local_var(2) bwor 8);
    call Node013();
end

procedure Node017a
begin
    q1 := 1;
    call Node017();
end

procedure Node022a
begin
    q2 := 1;
    call Node022();
end

procedure Node023a
begin
    q3 := 1;
    call Node023();
end

procedure NodeSequence
begin
    doSeq := 1;
    call Node999();
end

