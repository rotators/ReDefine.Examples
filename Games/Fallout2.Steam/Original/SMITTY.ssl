procedure Start;
procedure look_at_p_proc;
procedure description_p_proc;
procedure talk_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure pickup_p_proc;
procedure Smitty01;
procedure Smitty02;
procedure Smitty03;
procedure Smitty04;
procedure Smitty05;
procedure Smitty06;
procedure Smitty07;
procedure Smitty08;
procedure Smitty09;
procedure Smitty10;
procedure Smitty11;
procedure Smitty12;
procedure Smitty14;
procedure Smitty14a;
procedure Smitty15;
procedure SmittyEnd;

variable Initialize := 1;
variable DisplayMessage := 100;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure Start
begin
    if (Initialize) then begin
        if (obj_is_carrying_obj_pid(self_obj, 41) == 0) then begin
            item_caps_adjust(self_obj, random(500, 750));
        end
        if ((global_var(613) == 9103) or (global_var(613) == 9102)) then begin
            critter_add_trait(self_obj, 1, 6, 0);
        end
        else begin
            critter_add_trait(self_obj, 1, 6, 49);
        end
        critter_add_trait(self_obj, 1, 5, 6);
        Initialize := 0;
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 1) then begin
        display_msg(message_str(250, 100));
    end
    else begin
        display_msg(message_str(250, 101));
    end
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(4) == 1) then begin
        display_msg(message_str(250, 100));
    end
    else begin
        display_msg(message_str(250, 101));
    end
end

procedure talk_p_proc
begin
    if (global_var(251) == 1) then begin
        float_msg(self_obj, message_str(669, random(100, 105)), 2);
    end
    else begin
        if ((local_var(4) == 1) and (get_critter_stat(dude_obj, 4) < 4)) then begin
            float_msg(self_obj, message_str(250, 117), 0);
        end
        else begin
            if (local_var(5) == 2) then begin
                float_msg(self_obj, message_str(250, 131), 0);
            end
            else begin
                call get_reaction();
                start_gdialog(250, self_obj, -1, -1, -1);
                gsay_start;
                if (global_var(138) == 9303) then begin
                    call Smitty11();
                end
                else begin
                    if (global_var(138) == 9304) then begin
                        if (local_var(5) == 0) then begin
                            call Smitty12();
                        end
                        else begin
                            if (local_var(5) == 9307) then begin
                                if (obj_is_carrying_obj_pid(dude_obj, 15)) then begin
                                    call Smitty14();
                                end
                                else begin
                                    call Smitty15();
                                end
                            end
                        end
                    end
                    else begin
                        if (local_var(1) < 2) then begin
                            DisplayMessage := 103;
                            call Smitty01();
                        end
                        else begin
                            DisplayMessage := 102;
                            call Smitty01();
                        end
                    end
                end
                gsay_end;
                end_dialogue;
            end
        end
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(251, 1);
        critter_add_trait(self_obj, 1, 6, 49);
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(251, 1);
        if (source_obj == dude_obj) then begin
            if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
                set_global_var(156, 1);
                set_global_var(157, 0);
            end
            if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
                set_global_var(157, 1);
                set_global_var(156, 0);
            end
            set_global_var(159, global_var(159) + 1);
            if ((global_var(159) % 2) == 0) then begin
                set_global_var(155, global_var(155) - 1);
            end
        end
        critter_add_trait(self_obj, 1, 6, 49);
    end
end

procedure pickup_p_proc
begin
    set_global_var(251, 1);
end

procedure Smitty01
begin
    gsay_reply(250, DisplayMessage);
    DisplayMessage := 112;
    if (local_var(4) == 0) then begin
        giq_option(4, 250, 104, Smitty03, 50);
    end
    if ((global_var(138) < 9303) and (global_var(138) > 2)) then begin
        giq_option(4, 250, 105, Smitty10, 50);
    end
    giq_option(4, 250, 106, Smitty02, 50);
    giq_option(4, 250, 107, Smitty04, 50);
    giq_option(4, 250, 108, Smitty06, 50);
    giq_option(-3, 250, 109, Smitty05, 50);
end

procedure Smitty02
begin
    DisplayMessage := 110;
    call Smitty01();
end

procedure Smitty03
begin
    set_local_var(4, 1);
    DisplayMessage := 111;
    call Smitty01();
end

procedure Smitty04
begin
    gsay_reply(250, DisplayMessage);
    gsay_option(250, 113, Smitty07, 50);
    gsay_option(250, 114, Smitty08, 50);
    gsay_option(250, 115, Smitty09, 50);
    gsay_option(250, 116, Smitty06, 50);
end

procedure Smitty05
begin
    set_local_var(4, 1);
    gsay_message(250, 117, 50);
end

procedure Smitty06
begin
    gsay_message(250, 118, 50);
end

procedure Smitty07
begin
    DisplayMessage := 119;
    call Smitty04();
end

procedure Smitty08
begin
    DisplayMessage := 120;
    call Smitty04();
end

procedure Smitty09
begin
    DisplayMessage := 121;
    call Smitty04();
end

procedure Smitty10
begin
    gsay_message(250, 122, 50);
    gfade_out(600);
    game_time_advance(10 * 60 * 60);
    gfade_in(600);
    set_global_var(138, 9303);
    gsay_message(250, 123, 50);
end

procedure Smitty11
begin
    gsay_message(250, 124, 50);
end

procedure Smitty12
begin
    gsay_message(250, 125, 50);
    set_local_var(5, 9307);
    if (obj_is_carrying_obj_pid(dude_obj, 15)) then begin
        call Smitty14();
    end
end

procedure Smitty14
begin
    gsay_reply(250, 127);
    gsay_option(250, 126, Smitty14a, 50);
end

procedure Smitty14a
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    gsay_message(250, 128, 50);
    LVar1 := create_object_sid(42, 0, 0, -1);
    move_obj_inven_to_obj(dude_obj, LVar1);
    move_obj_inven_to_obj(LVar1, dude_obj);
    LVar0 := obj_carrying_pid_obj(dude_obj, 15);
    rm_obj_from_inven(dude_obj, LVar0);
    destroy_object(LVar0);
    destroy_object(LVar1);
    gfade_out(600);
    game_time_advance(10 * 60 * 60 * 2);
    gfade_in(600);
    gsay_message(250, 129, 50);
    LVar0 := create_object_sid(233, 0, 0, -1);
    add_obj_to_inven(dude_obj, LVar0);
    set_local_var(5, 2);
end

procedure Smitty15
begin
    gsay_message(250, 130, 50);
end

procedure SmittyEnd
begin
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, 3)) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
        if (has_trait(0, dude_obj, 39)) then begin
            if (global_var(155) > 0) then begin
                set_local_var(0, local_var(0) + global_var(155));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(155));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(155));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(155));
            end
        end
        if (global_var(158) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(634, random(100, 105));
end

