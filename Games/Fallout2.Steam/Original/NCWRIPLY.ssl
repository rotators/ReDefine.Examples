variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;
variable last_timed_obj;
variable last_timed_param;
variable check_still_kill;
variable stored_msg;
variable stored_node;
variable top_msg;
variable var_num;

procedure ChooseFromList;
procedure CLICK_PREV;
procedure CLICK_0;
procedure CLICK_1;
procedure CLICK_2;
procedure CLICK_3;
procedure CLICK_4;
procedure CLICK_MORE;

variable floater_patch_msg;
variable hs_temp;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node998;
procedure Node999;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure Node035;
procedure Node036;
procedure Node037;
procedure Node038;
procedure Node039;

variable the_pistol;
variable set_flee;

import variable wright_child_playing_obj;
import variable new_reno_wright_teen_obj;

procedure map_exit_p_proc;
procedure Node990;
procedure Node987;
procedure Node986;
procedure Node985;
procedure Node984;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure ChooseFromList
begin
    variable LVar0 := 0;
    gsay_reply(447, stored_msg);
    if (message_str(353, top_msg - 1) != "") then begin
        giq_option(1, 447, message_str(353, 150), CLICK_PREV, 50);
    end
    if (LVar0 == 0) then begin
        if (message_str(353, top_msg + 0) != "") then begin
            giq_option(1, 447, message_str(353, top_msg + 0), CLICK_0, 50);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(353, top_msg + 1) != "") then begin
            giq_option(1, 447, message_str(353, top_msg + 1), CLICK_1, 50);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(353, top_msg + 2) != "") then begin
            giq_option(1, 447, message_str(353, top_msg + 2), CLICK_2, 50);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(353, top_msg + 3) != "") then begin
            giq_option(1, 447, message_str(353, top_msg + 3), CLICK_3, 50);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(353, top_msg + 4) != "") then begin
            giq_option(1, 447, message_str(353, top_msg + 4), CLICK_4, 50);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(353, top_msg + 5) != "") then begin
            giq_option(1, 447, message_str(353, 151), CLICK_MORE, 50);
        end
    end
end

procedure CLICK_PREV
begin
    top_msg := top_msg - 5;
    call ChooseFromList();
end

procedure CLICK_0
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + (top_msg % 100));
    call stored_node();
end

procedure CLICK_1
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + ((top_msg + 1) % 100));
    call stored_node();
end

procedure CLICK_2
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + ((top_msg + 2) % 100));
    call stored_node();
end

procedure CLICK_3
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + ((top_msg + 3) % 100));
    call stored_node();
end

procedure CLICK_4
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + ((top_msg + 4) % 100));
    call stored_node();
end

procedure CLICK_MORE
begin
    top_msg := top_msg + 5;
    call ChooseFromList();
end

procedure start
begin
end

procedure critter_p_proc
begin
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(4) bwand 2) != 0) then begin
            if (critter_is_fleeing(self_obj)) then begin
                if (anim_busy(self_obj) == 0) then begin
                    if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                        if (anim_busy(self_obj) == 0) then begin
                            global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                                debug_msg("flee loop: rot == " + global_temp);
                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                global_temp := (global_temp + 1) % 6;
                            end
                        end
                    end
                end
            end
            else begin
                attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
            end
        end
        else begin
            if ((local_var(4) bwand 2048) != 0) then begin
                if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                    if (anim_busy(self_obj) == 0) then begin
                        global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                        global_temp := (global_temp + 1) % 6;
                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                            debug_msg("flee loop: rot == " + global_temp);
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                        end
                    end
                end
            end
            else begin
                if ((local_var(4) bwand 512) != 0) then begin
                    if (anim_busy(self_obj) == 0) then begin
                        set_flee := 0;
                        if (new_reno_wright_teen_obj != 0) then begin
                            if (elevation(self_obj) == elevation(new_reno_wright_teen_obj)) then begin
                                if (tile_distance_objs(self_obj, dude_obj) < tile_distance_objs(new_reno_wright_teen_obj, dude_obj)) then begin
                                    set_flee := 1;
                                    if (tile_distance_objs(self_obj, new_reno_wright_teen_obj) > 1) then begin
                                        if ((tile_num(self_obj) != tile_num_in_direction(tile_num(new_reno_wright_teen_obj), rotation_to_tile(tile_num(new_reno_wright_teen_obj), tile_num(self_obj)), 1)) and (tile_num_in_direction(tile_num(new_reno_wright_teen_obj), rotation_to_tile(tile_num(new_reno_wright_teen_obj), tile_num(self_obj)), 1) != 0)) then begin
                                            if ((dest_tile == tile_num_in_direction(tile_num(new_reno_wright_teen_obj), rotation_to_tile(tile_num(new_reno_wright_teen_obj), tile_num(self_obj)), 1)) and (step_tile < 0)) then begin
                                                step_tile := step_tile + 1;
                                            end
                                            else begin
                                                if (anim_busy(self_obj) == 0) then begin
                                                    dest_tile := tile_num_in_direction(tile_num(new_reno_wright_teen_obj), rotation_to_tile(tile_num(new_reno_wright_teen_obj), tile_num(self_obj)), 1);
                                                    step_tile := tile_num_in_direction(tile_num(new_reno_wright_teen_obj), rotation_to_tile(tile_num(new_reno_wright_teen_obj), tile_num(self_obj)), 1);
                                                    animate_move_obj_to_tile(self_obj, step_tile, 1);
                                                    while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), tile_num_in_direction(tile_num(new_reno_wright_teen_obj), rotation_to_tile(tile_num(new_reno_wright_teen_obj), tile_num(self_obj)), 1)) >= tile_distance(step_tile, tile_num_in_direction(tile_num(new_reno_wright_teen_obj), rotation_to_tile(tile_num(new_reno_wright_teen_obj), tile_num(self_obj)), 1)))) do begin
                                                        step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), (1 % tile_distance(step_tile, tile_num(self_obj))) + 1);
                                                        animate_move_obj_to_tile(self_obj, step_tile, 1);
                                                    end
                                                    if (anim_busy(self_obj) == 0) then begin
                                                        if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
                                                            if (anim_busy(self_obj) == 0) then begin
                                                                global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                                global_temp := (global_temp + 1) % 6;
                                                                while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                                    debug_msg("flee loop: rot == " + global_temp);
                                                                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                                    global_temp := (global_temp + 1) % 6;
                                                                end
                                                            end
                                                        end
                                                        else begin
                                                            step_tile := -10;
                                                        end
                                                    end
                                                end
                                                else begin
                                                    if (tile_distance(tile_num(self_obj), tile_num_in_direction(tile_num(new_reno_wright_teen_obj), rotation_to_tile(tile_num(new_reno_wright_teen_obj), tile_num(self_obj)), 1)) < tile_distance(dest_tile, tile_num_in_direction(tile_num(new_reno_wright_teen_obj), rotation_to_tile(tile_num(new_reno_wright_teen_obj), tile_num(self_obj)), 1))) then begin
                                                        reg_anim_func(2, self_obj);
                                                    end
                                                end
                                            end
                                        end
                                    end
                                    else begin
                                        if (rotation_to_tile(tile_num(self_obj), tile_num(new_reno_wright_teen_obj)) != has_trait(1, self_obj, 10)) then begin
                                            if (anim_busy(self_obj) == 0) then begin
                                                anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(new_reno_wright_teen_obj)));
                                            end
                                        end
                                    end
                                end
                            end
                        end
                        if (set_flee == 0) then begin
                            if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                                if (anim_busy(self_obj) == 0) then begin
                                    global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
                                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                    global_temp := (global_temp + 1) % 6;
                                    while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                                        debug_msg("flee loop: rot == " + global_temp);
                                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                        global_temp := (global_temp + 1) % 6;
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    else begin
        set_local_var(4, local_var(4) bwand (-1 - 2048));
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        call Node998();
    end
end

procedure talk_p_proc
begin
    script_overrides;
    if (global_var(494) == 8) then begin
        call Node004();
    end
    else begin
        if ((local_var(4) bwand 512) != 0) then begin
            call Node037();
        end
        else begin
            if ((local_var(4) bwand 1024) != 0) then begin
                if (obj_is_carrying_obj_pid(self_obj, 8) > 0) then begin
                    the_pistol := 8;
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 122) > 0) then begin
                        the_pistol := 122;
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 313) > 0) then begin
                            the_pistol := 313;
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 398) > 0) then begin
                                the_pistol := 398;
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, 18) > 0) then begin
                                    the_pistol := 18;
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, 404) > 0) then begin
                                        the_pistol := 404;
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, 22) > 0) then begin
                                            the_pistol := 22;
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, 241) > 0) then begin
                                                the_pistol := 241;
                                            end
                                            else begin
                                                the_pistol := 0;
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                if (the_pistol != 0) then begin
                    call Node038();
                end
                else begin
                    call Node039();
                end
            end
            else begin
                if ((obj_pid(critter_inven_obj(dude_obj, 0)) == 3) or (obj_pid(critter_inven_obj(dude_obj, 0)) == 348) or (obj_pid(critter_inven_obj(dude_obj, 0)) == 349) or (obj_pid(critter_inven_obj(dude_obj, 0)) == 232)) then begin
                    call Node005();
                end
                else begin
                    Evil_Critter := 1;
                    Slavery_Tolerant := 0;
                    Karma_Perception := 50;
                    set_global_var(37, 0);
                    set_global_var(38, 0);
                    set_global_var(39, 0);
                    set_global_var(40, 0);
                    set_global_var(41, 0);
                    set_global_var(42, 0);
                    set_global_var(43, 0);
                    set_global_var(44, 0);
                    set_global_var(45, 0);
                    if (global_var(0) >= 1000) then begin
                        set_global_var(37, 1);
                    end
                    else begin
                        if (global_var(0) >= 750) then begin
                            set_global_var(38, 1);
                        end
                        else begin
                            if (global_var(0) >= 500) then begin
                                set_global_var(39, 1);
                            end
                            else begin
                                if (global_var(0) >= 250) then begin
                                    set_global_var(40, 1);
                                end
                                else begin
                                    if (global_var(0) > -250) then begin
                                        set_global_var(41, 1);
                                    end
                                    else begin
                                        if (global_var(0) > -500) then begin
                                            set_global_var(42, 1);
                                        end
                                        else begin
                                            if (global_var(0) > -750) then begin
                                                set_global_var(43, 1);
                                            end
                                            else begin
                                                if (global_var(0) > -1000) then begin
                                                    set_global_var(44, 1);
                                                end
                                                else begin
                                                    set_global_var(45, 1);
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                    if (local_var(2) == 0) then begin
                        set_local_var(2, 1);
                        set_local_var(3, (get_critter_stat(dude_obj, 3) - get_critter_stat(self_obj, 3)) * 5);
                        debug_msg("Base Reaction == " + local_var(3));
                    end
                    Static_Reaction := 0;
                    set_local_var(0, 0);
                    debug_msg("Start Reaction == " + local_var(0));
                    if (reaction_bonus_karma >= 0) then begin
                        reaction_bonus_karma := reaction_bonus_karma / 1000;
                    end
                    else begin
                        reaction_bonus_karma := -1 * (-1 * reaction_bonus_karma / 1000);
                    end
                    if (global_var(55) >= 0) then begin
                        reaction_bonus_town_rep := global_var(55) / 2;
                    end
                    else begin
                        reaction_bonus_town_rep := -1 * (-1 * global_var(55) / 2);
                    end
                    if (has_trait(2, dude_obj, 13)) then begin
                        if (get_critter_stat(dude_obj, 34) == get_critter_stat(self_obj, 34)) then begin
                            Static_Reaction := Static_Reaction + -20;
                        end
                        else begin
                            Static_Reaction := Static_Reaction + 20;
                        end
                        debug_msg("Sex Appeal Bonus == " + Static_Reaction);
                    end
                    else begin
                        debug_msg("Sex Appeal Bonus == 0");
                    end
                    if (Evil_Critter == 1) then begin
                        Static_Reaction := Static_Reaction - reaction_bonus_karma;
                        debug_msg("Karma Reaction Bonus == " + Static_Reaction);
                        Static_Reaction := Static_Reaction - reaction_bonus_town_rep;
                        debug_msg("Town Rep Bonus == " + Static_Reaction);
                        set_global_var(37, 0);
                        set_global_var(38, 0);
                        set_global_var(39, 0);
                        set_global_var(40, 0);
                        set_global_var(41, 0);
                        set_global_var(42, 0);
                        set_global_var(43, 0);
                        set_global_var(44, 0);
                        set_global_var(45, 0);
                        if (global_var(0) >= 1000) then begin
                            set_global_var(37, 1);
                        end
                        else begin
                            if (global_var(0) >= 750) then begin
                                set_global_var(38, 1);
                            end
                            else begin
                                if (global_var(0) >= 500) then begin
                                    set_global_var(39, 1);
                                end
                                else begin
                                    if (global_var(0) >= 250) then begin
                                        set_global_var(40, 1);
                                    end
                                    else begin
                                        if (global_var(0) > -250) then begin
                                            set_global_var(41, 1);
                                        end
                                        else begin
                                            if (global_var(0) > -500) then begin
                                                set_global_var(42, 1);
                                            end
                                            else begin
                                                if (global_var(0) > -750) then begin
                                                    set_global_var(43, 1);
                                                end
                                                else begin
                                                    if (global_var(0) > -1000) then begin
                                                        set_global_var(44, 1);
                                                    end
                                                    else begin
                                                        set_global_var(45, 1);
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                        if (global_var(37) == 1) then begin
                            Static_Reaction := Static_Reaction - 20;
                        end
                        else begin
                            if (global_var(38) == 1) then begin
                                Static_Reaction := Static_Reaction - 15;
                            end
                            else begin
                                if (global_var(39) == 1) then begin
                                    Static_Reaction := Static_Reaction - 10;
                                end
                                else begin
                                    if (global_var(40) == 1) then begin
                                        Static_Reaction := Static_Reaction - 5;
                                    end
                                    else begin
                                        if (global_var(41) == 1) then begin
                                            Static_Reaction := Static_Reaction - 0;
                                        end
                                        else begin
                                            if (global_var(42) == 1) then begin
                                                Static_Reaction := Static_Reaction - -5;
                                            end
                                            else begin
                                                if (global_var(43) == 1) then begin
                                                    Static_Reaction := Static_Reaction - -10;
                                                end
                                                else begin
                                                    if (global_var(44) == 1) then begin
                                                        Static_Reaction := Static_Reaction - -15;
                                                    end
                                                    else begin
                                                        Static_Reaction := Static_Reaction - -20;
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                        debug_msg("Bad Person Reaction Bonus == " + Static_Reaction);
                    end
                    else begin
                        Static_Reaction := Static_Reaction + reaction_bonus_karma;
                        debug_msg("Karma Reaction Bonus == " + Static_Reaction);
                        Static_Reaction := Static_Reaction + reaction_bonus_town_rep;
                        debug_msg("Town Rep Bonus == " + Static_Reaction);
                        set_global_var(37, 0);
                        set_global_var(38, 0);
                        set_global_var(39, 0);
                        set_global_var(40, 0);
                        set_global_var(41, 0);
                        set_global_var(42, 0);
                        set_global_var(43, 0);
                        set_global_var(44, 0);
                        set_global_var(45, 0);
                        if (global_var(0) >= 1000) then begin
                            set_global_var(37, 1);
                        end
                        else begin
                            if (global_var(0) >= 750) then begin
                                set_global_var(38, 1);
                            end
                            else begin
                                if (global_var(0) >= 500) then begin
                                    set_global_var(39, 1);
                                end
                                else begin
                                    if (global_var(0) >= 250) then begin
                                        set_global_var(40, 1);
                                    end
                                    else begin
                                        if (global_var(0) > -250) then begin
                                            set_global_var(41, 1);
                                        end
                                        else begin
                                            if (global_var(0) > -500) then begin
                                                set_global_var(42, 1);
                                            end
                                            else begin
                                                if (global_var(0) > -750) then begin
                                                    set_global_var(43, 1);
                                                end
                                                else begin
                                                    if (global_var(0) > -1000) then begin
                                                        set_global_var(44, 1);
                                                    end
                                                    else begin
                                                        set_global_var(45, 1);
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                        if (global_var(37) == 1) then begin
                            Static_Reaction := Static_Reaction + 20;
                        end
                        else begin
                            if (global_var(38) == 1) then begin
                                Static_Reaction := Static_Reaction + 15;
                            end
                            else begin
                                if (global_var(39) == 1) then begin
                                    Static_Reaction := Static_Reaction + 10;
                                end
                                else begin
                                    if (global_var(40) == 1) then begin
                                        Static_Reaction := Static_Reaction + 5;
                                    end
                                    else begin
                                        if (global_var(41) == 1) then begin
                                            Static_Reaction := Static_Reaction + 0;
                                        end
                                        else begin
                                            if (global_var(42) == 1) then begin
                                                Static_Reaction := Static_Reaction + -5;
                                            end
                                            else begin
                                                if (global_var(43) == 1) then begin
                                                    Static_Reaction := Static_Reaction + -10;
                                                end
                                                else begin
                                                    if (global_var(44) == 1) then begin
                                                        Static_Reaction := Static_Reaction + -15;
                                                    end
                                                    else begin
                                                        Static_Reaction := Static_Reaction + -20;
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                        debug_msg("Good Person Reaction Bonus == " + Static_Reaction);
                    end
                    if (Slavery_Tolerant == 0) then begin
                        if (global_var(11) == 1) then begin
                            Static_Reaction := Static_Reaction + (2 * -25);
                        end
                    end
                    else begin
                        if (Slavery_Tolerant == 1) then begin
                            if (global_var(11) == 1) then begin
                                Static_Reaction := Static_Reaction + -25;
                            end
                        end
                        else begin
                            if (Slavery_Tolerant == 3) then begin
                                if (global_var(11) == 1) then begin
                                    Static_Reaction := Static_Reaction - -25;
                                end
                            end
                        end
                    end
                    debug_msg("Slaver + Aligned Reaction == " + Static_Reaction);
                    Static_Reaction := Static_Reaction + (10 * has_trait(0, dude_obj, 10));
                    debug_msg("Presence Reaction == " + Static_Reaction);
                    if (global_var(1) >= 2) then begin
                        Static_Reaction := Static_Reaction + -30;
                    end
                    debug_msg("Childkiller Reaction == " + Static_Reaction);
                    set_local_var(0, local_var(3) + Static_Reaction);
                    debug_msg("Initial Reaction == " + local_var(0));
                    if ((local_var(1) < 0) or (global_var(11) == 1) or ((global_var(230) > 0) and ((global_var(230) / 100) != 4))) then begin
                        call Node006();
                    end
                    else begin
                        if (in_dialog == 0) then begin
                            in_dialog := 1;
                            start_gdialog(447, self_obj, 4, -1, -1);
                            gsay_start;
                            call Node007();
                            gsay_end;
                            end_dialogue;
                            in_dialog := 0;
                        end
                        else begin
                            call Node007();
                        end
                    end
                end
            end
        end
    end
    set_local_var(4, local_var(4) bwor 1);
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(5, global_var(5) + 1);
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
            set_global_var(2, 1);
            set_global_var(3, 0);
        end
        if (metarule(51, self_obj) == 2) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(2, 0);
                set_global_var(1, global_var(1) + 1);
                set_global_var(0, global_var(0) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(37, 0);
                set_global_var(38, 0);
                set_global_var(39, 0);
                set_global_var(40, 0);
                set_global_var(41, 0);
                set_global_var(42, 0);
                set_global_var(43, 0);
                set_global_var(44, 0);
                set_global_var(45, 0);
                if (global_var(0) >= 1000) then begin
                    set_global_var(37, 1);
                end
                else begin
                    if (global_var(0) >= 750) then begin
                        set_global_var(38, 1);
                    end
                    else begin
                        if (global_var(0) >= 500) then begin
                            set_global_var(39, 1);
                        end
                        else begin
                            if (global_var(0) >= 250) then begin
                                set_global_var(40, 1);
                            end
                            else begin
                                if (global_var(0) > -250) then begin
                                    set_global_var(41, 1);
                                end
                                else begin
                                    if (global_var(0) > -500) then begin
                                        set_global_var(42, 1);
                                    end
                                    else begin
                                        if (global_var(0) > -750) then begin
                                            set_global_var(43, 1);
                                        end
                                        else begin
                                            if (global_var(0) > -1000) then begin
                                                set_global_var(44, 1);
                                            end
                                            else begin
                                                set_global_var(45, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(55, global_var(55) + -8);
                debug_msg("Added " + -8 + " to Town Rep");
            end
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
            set_global_var(3, 1);
            set_global_var(2, 0);
        end
        set_global_var(0, global_var(0) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(55, global_var(55) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(447, 100));
end

procedure description_p_proc
begin
    script_overrides;
    if (global_var(494) == 8) then begin
        display_msg(message_str(447, random(150, 152)));
    end
    else begin
        display_msg(message_str(447, random(200, 201)));
    end
    set_local_var(4, local_var(4) bwor 4);
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(4, local_var(4) bwor 8);
        set_local_var(4, local_var(4) bwor 2);
    end
end

procedure map_enter_p_proc
begin
    if (metarule(22, 0) == 0) then begin
        if (metarule(14, 0)) then begin
            set_local_var(5, tile_num(self_obj));
            critter_add_trait(self_obj, 1, 6, 66);
            critter_add_trait(self_obj, 1, 5, 15);
        end
        if ((global_var(285) bwand 1024) != 0) then begin
            destroy_object(self_obj);
        end
        else begin
            if ((global_var(285) bwand 4) != 0) then begin
                kill_critter(self_obj, random(61, 62));
            end
            else begin
                if ((800 < game_time_hour) and (game_time_hour <= 2100)) then begin
                    if (has_trait(1, self_obj, 666) == 0) then begin
                        set_obj_visibility(self_obj, 0);
                    end
                    last_timed_obj := self_obj;
                    last_timed_param := last_timed_param;
                    metarule3(100, self_obj, 1, 0);
                    add_timer_event(self_obj, game_ticks(10) + random(0, game_ticks(30 - 10)), 1);
                    last_timed_obj := self_obj;
                    last_timed_param := last_timed_param;
                    metarule3(100, self_obj, 21, 0);
                    add_timer_event(self_obj, game_ticks(2) + random(0, game_ticks(5 - 2)), 21);
                end
                else begin
                    if (has_trait(1, self_obj, 666) == 1) then begin
                        set_obj_visibility(self_obj, 1);
                    end
                end
            end
        end
    end
end

procedure timed_event_p_proc
begin
    variable LVar0 := 0;
    if (has_trait(1, self_obj, 666)) then begin
        if (fixed_param == 1) then begin
            if (combat_is_initialized == 0) then begin
                if (obj_can_see_obj(self_obj, dude_obj) and ((local_var(4) bwand 2048) != 0)) then begin
                    if ((local_var(4) bwand 512) != 0) then begin
                        call Node037();
                    end
                end
                else begin
                    if (global_var(494) == 8) then begin
                        call Node002();
                    end
                    else begin
                        call Node003();
                    end
                end
            end
            last_timed_obj := self_obj;
            last_timed_param := last_timed_param;
            metarule3(100, self_obj, 1, 0);
            add_timer_event(self_obj, game_ticks(10) + random(0, game_ticks(30 - 10)), 1);
        end
        else begin
            if (fixed_param == 21) then begin
                if (combat_is_initialized == 0) then begin
                    if (obj_can_see_obj(self_obj, dude_obj) and ((local_var(4) bwand 512) != 0)) then begin
                        if (new_reno_wright_teen_obj != 0) then begin
                            if (tile_distance_objs(new_reno_wright_teen_obj, self_obj) <= 15) then begin
                                last_timed_obj := new_reno_wright_teen_obj;
                                last_timed_param := last_timed_param;
                                metarule3(100, new_reno_wright_teen_obj, 19, 0);
                                add_timer_event(new_reno_wright_teen_obj, 0, 19);
                            end
                        end
                    end
                    else begin
                        if (anim_busy(self_obj) == 0) then begin
                            if (wright_child_playing_obj == 0) then begin
                                wright_child_playing_obj := self_obj;
                            end
                            else begin
                                if (wright_child_playing_obj != self_obj) then begin
                                    if (tile_distance_objs(self_obj, wright_child_playing_obj) <= 1) then begin
                                        wright_child_playing_obj := self_obj;
                                    end
                                end
                            end
                            if (wright_child_playing_obj == self_obj) then begin
                                if (tile_distance(tile_num(self_obj), local_var(5)) > 10) then begin
                                    LVar0 := tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(self_obj), local_var(5)), random(5, 10));
                                end
                                else begin
                                    LVar0 := tile_num_in_direction(tile_num(self_obj), random(0, 5), random(5, 10));
                                end
                                animate_move_obj_to_tile(self_obj, LVar0, 1);
                            end
                            else begin
                                if (tile_distance_objs(self_obj, wright_child_playing_obj) > 1) then begin
                                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(wright_child_playing_obj), (has_trait(1, wright_child_playing_obj, 10) + 3) % 6, 1), 1);
                                end
                            end
                        end
                    end
                end
                last_timed_obj := self_obj;
                last_timed_param := last_timed_param;
                metarule3(100, self_obj, 21, 0);
                add_timer_event(self_obj, game_ticks(2) + random(0, game_ticks(5 - 2)), 21);
            end
        end
    end
end

procedure Node998
begin
    if (((local_var(4) bwand 2) != 0) == 0) then begin
        set_local_var(4, local_var(4) bwor 2);
    end
end

procedure Node999
begin
end

procedure Node002
begin
    float_msg(self_obj, message_str(447, random(210, 228)), 8);
end

procedure Node003
begin
    float_msg(self_obj, message_str(447, random(240, 255)), 8);
end

procedure Node004
begin
    floater_patch_msg := random(270, 282);
    if ((floater_patch_msg == 277) or (floater_patch_msg == 278) or (floater_patch_msg == 279) or (floater_patch_msg == 282)) then begin
        float_msg(self_obj, message_str(447, floater_patch_msg) + obj_name(dude_obj) + message_str(447, floater_patch_msg + 5000), 8);
    end
    else begin
        float_msg(self_obj, message_str(447, floater_patch_msg), 8);
    end
end

procedure Node005
begin
    float_msg(self_obj, message_str(447, random(300, 302)), 8);
    if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
        if (anim_busy(self_obj) == 0) then begin
            global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
            global_temp := (global_temp + 1) % 6;
            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                debug_msg("flee loop: rot == " + global_temp);
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                global_temp := (global_temp + 1) % 6;
            end
        end
    end
end

procedure Node006
begin
    float_msg(self_obj, message_str(447, random(310, 312)), 8);
    if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
        if (anim_busy(self_obj) == 0) then begin
            global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
            global_temp := (global_temp + 1) % 6;
            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                debug_msg("flee loop: rot == " + global_temp);
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                global_temp := (global_temp + 1) % 6;
            end
        end
    end
end

procedure Node007
begin
    gsay_reply(447, 320);
    giq_option(-3, 447, message_str(447, 321) + obj_name(dude_obj) + message_str(447, 5321), Node008, 50);
    giq_option(-3, 447, 322, Node999, 50);
    giq_option(4, 447, 323, Node017, 51);
    giq_option(4, 447, 324, Node020, 50);
    giq_option(4, 447, 325, Node032, 50);
    giq_option(4, 447, 326, Node999, 50);
end

procedure Node008
begin
    gsay_reply(447, 330);
    giq_option(-3, 447, 331, Node009, 50);
    giq_option(-3, 447, obj_name(dude_obj) + message_str(447, 332), Node009, 50);
    giq_option(-3, 447, 333, Node010, 50);
    giq_option(-3, 447, message_str(447, 334) + obj_name(dude_obj) + message_str(447, 5334), Node010, 51);
    giq_option(-3, 447, 335, Node999, 50);
end

procedure Node009
begin
    gsay_reply(447, 340);
    giq_option(-3, 447, 341, Node990, 50);
    giq_option(-3, 447, 342, Node999, 50);
    giq_option(4, 447, 343, Node999, 50);
end

procedure Node010
begin
    gsay_reply(447, 350);
    giq_option(-3, 447, 351, Node011, 51);
    giq_option(-3, 447, 352, Node013, 51);
    giq_option(-3, 447, message_str(447, 353) + obj_name(dude_obj) + message_str(447, 5353), Node013, 51);
    giq_option(-3, 447, message_str(447, 354) + obj_name(dude_obj) + message_str(447, 5354) + obj_name(dude_obj) + message_str(447, 6354) + obj_name(dude_obj) + message_str(447, 7354), Node015, 51);
    if (global_var(1) >= 2) then begin
        giq_option(-3, 447, obj_name(dude_obj) + message_str(447, 355), Node019, 51);
    end
    giq_option(-3, 447, 356, Node999, 50);
end

procedure Node011
begin
    gsay_reply(447, 360);
    giq_option(-3, 447, 351, Node012, 51);
    giq_option(-3, 447, 362, Node014, 50);
    giq_option(-3, 447, 363, Node014, 50);
    giq_option(-3, 447, 364, Node999, 50);
end

procedure Node012
begin
    gsay_reply(447, message_str(447, 370 + ((800 < game_time_hour) and (game_time_hour <= 2100))) + message_str(447, 372));
    giq_option(-3, 447, 373, Node036, 50);
    giq_option(-3, 447, 374, Node999, 50);
end

procedure Node013
begin
    gsay_reply(447, 380);
    giq_option(-3, 447, 381, Node019, 51);
    giq_option(-3, 447, message_str(447, 382) + obj_name(dude_obj) + message_str(447, 5382) + obj_name(dude_obj) + message_str(447, 6382), Node019, 51);
    giq_option(-3, 447, 383, Node999, 50);
    giq_option(4, 447, 384, Node999, 51);
    giq_option(4, 447, 343, Node999, 50);
end

procedure Node014
begin
    gsay_reply(447, 390);
    giq_option(-3, 447, 391, Node016, 50);
    giq_option(-3, 447, 356, Node999, 50);
end

procedure Node015
begin
    gsay_reply(447, message_str(447, 400 + ((800 < game_time_hour) and (game_time_hour <= 2100))) + message_str(447, 412));
    giq_option(-3, 447, 403, Node013, 51);
    giq_option(-3, 447, 404, Node036, 50);
    giq_option(-3, 447, 405, Node999, 50);
end

procedure Node016
begin
    gsay_reply(447, message_str(447, 410 + ((800 < game_time_hour) and (game_time_hour <= 2100))) + message_str(447, 412));
    giq_option(-3, 447, 404, Node036, 50);
    giq_option(-3, 447, 405, Node999, 50);
end

procedure Node017
begin
    gsay_reply(447, 420);
    if (global_var(0) >= 0) then begin
        giq_option(4, 447, 421, Node018, 50);
    end
    giq_option(4, 447, 422, Node019, 51);
    giq_option(4, 447, 423, Node999, 50);
end

procedure Node018
begin
    gsay_reply(447, 430);
    if (get_critter_stat(dude_obj, 3) > 5) then begin
        giq_option(4, 447, 432, Node020, 50);
    end
    else begin
        giq_option(4, 447, 324, Node020, 50);
    end
    giq_option(4, 447, 433, Node032, 50);
    giq_option(4, 447, 434, Node999, 50);
end

procedure Node019
begin
    set_local_var(4, local_var(4) bwor 2048);
    set_local_var(4, local_var(4) bwor 512);
    gsay_reply(447, 440 + (get_critter_stat(dude_obj, 4) > 3));
    giq_option(-3, 447, 442, Node999, 50);
    giq_option(4, 447, 443, Node999, 50);
end

procedure Node020
begin
    if (obj_is_carrying_obj_pid(dude_obj, 8) > 0) then begin
        the_pistol := 8;
    end
    else begin
        if (obj_is_carrying_obj_pid(dude_obj, 122) > 0) then begin
            the_pistol := 122;
        end
        else begin
            if (obj_is_carrying_obj_pid(dude_obj, 313) > 0) then begin
                the_pistol := 313;
            end
            else begin
                if (obj_is_carrying_obj_pid(dude_obj, 398) > 0) then begin
                    the_pistol := 398;
                end
                else begin
                    if (obj_is_carrying_obj_pid(dude_obj, 18) > 0) then begin
                        the_pistol := 18;
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(dude_obj, 404) > 0) then begin
                            the_pistol := 404;
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(dude_obj, 22) > 0) then begin
                                the_pistol := 22;
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(dude_obj, 241) > 0) then begin
                                    the_pistol := 241;
                                end
                                else begin
                                    the_pistol := 0;
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    if (the_pistol != 0) then begin
        gsay_reply(447, message_str(447, 450) + message_str(447, 451));
        giq_option(4, 447, 452, Node021, 51);
        giq_option(4, 447, 453, Node021, 51);
        giq_option(4, 447, 454, Node028, 49);
        giq_option(4, 447, 456, Node021, 50);
        giq_option(4, 447, 458, Node021, 50);
    end
    else begin
        gsay_reply(447, 450);
        giq_option(4, 447, 456, Node022, 50);
        giq_option(4, 447, 457, Node999, 50);
    end
end

procedure Node021
begin
    gsay_reply(447, 470);
    if (global_var(0) >= 0) then begin
        giq_option(4, 447, 471, Node021, 51);
    end
    else begin
        giq_option(4, 447, 473, Node013, 51);
    end
    giq_option(4, 447, 472, Node013, 51);
    giq_option(4, 447, 474, Node028, 49);
    giq_option(4, 447, 476, Node999, 50);
end

procedure Node022
begin
    gsay_reply(447, 485);
    if (get_critter_stat(dude_obj, 3) > 5) then begin
        giq_option(4, 447, 486, Node987, 49);
    end
    giq_option(4, 447, 487, Node986, 50);
    giq_option(4, 447, 488, Node026, 51);
    giq_option(4, 447, 489, Node999, 51);
    giq_option(4, 447, 490, Node999, 50);
end

procedure Node023
begin
    gsay_reply(447, 500);
    giq_option(4, 447, 501, Node035, 50);
    giq_option(4, 447, 502, Node035, 50);
    giq_option(4, 447, 503, Node999, 50);
end

procedure Node024
begin
    gsay_reply(447, message_str(447, 510 + ((800 < game_time_hour) and (game_time_hour <= 2100))) + message_str(447, 412));
    if (((global_var(495) bwand 65536) != 0) and (((global_var(314) bwand 32768) != 0) or (global_var(494) == 8))) then begin
        giq_option(4, 447, 515, Node025, 50);
    end
    else begin
        if ((((global_var(314) bwand 32768) != 0) or (global_var(494) == 8)) == 0) then begin
            giq_option(1, 447, 513 + (get_critter_stat(dude_obj, 4) < 9), Node036, 50);
        end
    end
    giq_option(4, 447, 516, Node034, 50);
    giq_option(4, 447, 326, Node999, 50);
end

procedure Node025
begin
    gsay_reply(447, 530);
    if (get_critter_stat(dude_obj, 4) < 8) then begin
        giq_option(4, 447, 531, Node034, 50);
    end
    else begin
        giq_option(4, 447, 532, Node034, 50);
    end
    giq_option(4, 447, 533, Node034, 51);
end

procedure Node026
begin
    gsay_reply(447, 540);
    giq_option(4, 447, 541, Node035, 50);
    giq_option(4, 447, 542, Node035, 50);
    giq_option(4, 447, 543, Node999, 50);
end

procedure Node027
begin
    gsay_reply(447, message_str(447, 550 + ((800 < game_time_hour) and (game_time_hour <= 2100))) + message_str(447, 552));
    if (((global_var(495) bwand 65536) != 0) and (((global_var(314) bwand 32768) != 0) or (global_var(494) == 8))) then begin
        giq_option(4, 447, 515, Node025, 50);
    end
    else begin
        if ((((global_var(314) bwand 32768) != 0) or (global_var(494) == 8)) == 0) then begin
            giq_option(1, 447, 514, Node036, 50);
        end
    end
    giq_option(4, 447, 516, Node034, 50);
    giq_option(4, 447, 556, Node999, 50);
end

procedure Node028
begin
    if (((local_var(4) bwand 1024) != 0) == 0) then begin
        set_global_var(0, global_var(0) + -3);
        debug_msg("Player gains " + -3 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    set_local_var(4, local_var(4) bwor 1024);
    restock_amt := 1;
    if (obj_is_carrying_obj_pid(dude_obj, the_pistol) < 1) then begin
        restock_amt := obj_is_carrying_obj_pid(dude_obj, the_pistol);
    end
    if (restock_amt > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, the_pistol);
        restock_trash := rm_mult_objs_from_inven(dude_obj, restock_obj, restock_amt);
        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt);
    end
    gsay_reply(447, message_str(447, 560) + message_str(447, 561));
    giq_option(4, 447, 562, Node029, 51);
    giq_option(4, 447, 563, Node985, 49);
    giq_option(4, 447, 564, Node031, 50);
    giq_option(4, 447, 565, Node999, 50);
end

procedure Node029
begin
    gsay_reply(447, 570);
    giq_option(4, 447, 571, Node030, 51);
    giq_option(4, 447, 572, Node030, 50);
    giq_option(4, 447, 573, Node999, 50);
end

procedure Node030
begin
    set_local_var(4, local_var(4) bwor 2048);
    gsay_reply(447, 580);
    giq_option(1, 447, 581, Node999, 51);
    giq_option(1, 447, 277, Node999, 50);
end

procedure Node031
begin
    if (((global_var(285) bwand 2048) != 0) == 0) then begin
        set_global_var(0, global_var(0) + -5);
        debug_msg("Player gains " + -5 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    set_global_var(285, global_var(285) bwor 2048);
    set_local_var(4, local_var(4) bwor 2048);
    set_local_var(4, local_var(4) bwor 4096);
    gsay_reply(447, 590);
    giq_option(1, 447, 591, Node999, 50);
    giq_option(1, 447, 592, Node999, 50);
end

procedure Node032
begin
    gsay_reply(447, 600);
    giq_option(4, 447, 323, Node017, 51);
    giq_option(4, 447, 324, Node020, 50);
    giq_option(4, 447, 603, Node999, 50);
end

procedure Node033
begin
    gsay_reply(447, 610);
    giq_option(1, 447, 343, Node999, 50);
end

procedure Node034
begin
    gsay_reply(447, 620);
    giq_option(1, 447, 343, Node999, 50);
end

procedure Node035
begin
    gsay_reply(447, 630);
    giq_option(1, 447, 631, Node999, 50);
    giq_option(4, 447, 632, Node999, 51);
end

procedure Node036
begin
    gsay_reply(447, 640 + (((game_time_hour <= 600) or (game_time_hour >= 1800)) == 0));
    giq_option(1, 447, 642, Node984, 50);
end

procedure Node037
begin
    if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
        if (anim_busy(self_obj) == 0) then begin
            global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
            global_temp := (global_temp + 1) % 6;
            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                debug_msg("flee loop: rot == " + global_temp);
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                global_temp := (global_temp + 1) % 6;
            end
        end
    end
    float_msg(self_obj, message_str(447, 701 - (get_critter_stat(dude_obj, 34) == 0)), 8);
end

procedure Node038
begin
    float_msg(self_obj, message_str(447, 711 - (get_critter_stat(dude_obj, 34) == 0)), 8);
end

procedure Node039
begin
    float_msg(self_obj, message_str(447, 721 - (get_critter_stat(dude_obj, 34) == 0)), 8);
end

procedure map_exit_p_proc
begin
    if (obj_is_carrying_obj_pid(self_obj, 8) > 0) then begin
        the_pistol := 8;
    end
    else begin
        if (obj_is_carrying_obj_pid(self_obj, 122) > 0) then begin
            the_pistol := 122;
        end
        else begin
            if (obj_is_carrying_obj_pid(self_obj, 313) > 0) then begin
                the_pistol := 313;
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 398) > 0) then begin
                    the_pistol := 398;
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 18) > 0) then begin
                        the_pistol := 18;
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 404) > 0) then begin
                            the_pistol := 404;
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 22) > 0) then begin
                                the_pistol := 22;
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, 241) > 0) then begin
                                    the_pistol := 241;
                                end
                                else begin
                                    the_pistol := 0;
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    if (the_pistol != 0) then begin
        set_global_var(285, global_var(285) bwor 4);
        if ((local_var(4) bwand 4096) != 0) then begin
            set_global_var(285, global_var(285) bwor 1024);
            set_global_var(523, the_pistol);
        end
    end
end

procedure Node990
begin
    gfade_out(10);
    game_time_advance(60 * (60 * 10));
    gfade_in(10);
end

procedure Node987
begin
    if ((get_critter_stat(dude_obj, 3) > 6) or is_success(roll_vs_skill(dude_obj, 14, 0)) or has_trait(0, dude_obj, 22) or (local_var(1) > 0)) then begin
        call Node024();
    end
    else begin
        call Node023();
    end
end

procedure Node986
begin
    if ((get_critter_stat(dude_obj, 3) > 8) or is_success(roll_vs_skill(dude_obj, 14, -20)) or has_trait(0, dude_obj, 22) or (local_var(1) > 2)) then begin
        call Node027();
    end
    else begin
        call Node026();
    end
end

procedure Node985
begin
    set_local_var(3, 100);
    set_local_var(1, 4);
    call Node022();
end

procedure Node984
begin
    load_map(147, 0);
end

