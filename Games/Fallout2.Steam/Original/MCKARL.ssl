variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable caught_thief;
variable the_follow_obj;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_exit_p_proc;
procedure map_update_p_proc;
procedure Node000;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node020;
procedure Node021;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node040;
procedure Node041;
procedure Node042;
procedure Node043;
procedure Node044;
procedure Node045;
procedure Node046;
procedure Node999;
procedure Node998;
procedure Node996;
procedure Node995;

variable say_message_time;
variable last_message_said;

procedure timed_event_p_proc;
procedure Node994;
procedure Node993;
procedure Node992;
procedure Node991;
procedure Node990;
procedure Node989;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if (has_trait(1, self_obj, 666)) then begin
        if (tile_num(self_obj) == global_var(46)) then begin
            destroy_object(self_obj);
        end
        else begin
            if ((local_var(4) bwand 512) != 0) then begin
                if ((tile_num(self_obj) != global_var(67)) and (global_var(67) != 0)) then begin
                    if ((dest_tile == global_var(67)) and (step_tile < 0)) then begin
                        step_tile := step_tile + 1;
                    end
                    else begin
                        if (anim_busy(self_obj) == 0) then begin
                            dest_tile := global_var(67);
                            step_tile := global_var(67);
                            animate_move_obj_to_tile(self_obj, step_tile, 1);
                            while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), global_var(67)) >= tile_distance(step_tile, global_var(67)))) do begin
                                step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), (4 % tile_distance(step_tile, tile_num(self_obj))) + 1);
                                animate_move_obj_to_tile(self_obj, step_tile, 1);
                            end
                            if (anim_busy(self_obj) == 0) then begin
                                if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
                                    if (anim_busy(self_obj) == 0) then begin
                                        global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                        global_temp := (global_temp + 1) % 6;
                                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                            debug_msg("flee loop: rot == " + global_temp);
                                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                            global_temp := (global_temp + 1) % 6;
                                        end
                                    end
                                end
                                else begin
                                    step_tile := -10;
                                end
                            end
                        end
                        else begin
                            if (tile_distance(tile_num(self_obj), global_var(67)) < tile_distance(dest_tile, global_var(67))) then begin
                                reg_anim_func(2, self_obj);
                            end
                        end
                    end
                end
            end
            else begin
                if ((global_var(402) bwand 16384) != 0) then begin
                    if ((tile_num(self_obj) != global_var(67)) and (global_var(67) != 0)) then begin
                        if ((dest_tile == global_var(67)) and (step_tile < 0)) then begin
                            step_tile := step_tile + 1;
                        end
                        else begin
                            if (anim_busy(self_obj) == 0) then begin
                                dest_tile := global_var(67);
                                step_tile := global_var(67);
                                animate_move_obj_to_tile(self_obj, step_tile, 0);
                                while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), global_var(67)) >= tile_distance(step_tile, global_var(67)))) do begin
                                    step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), (4 % tile_distance(step_tile, tile_num(self_obj))) + 1);
                                    animate_move_obj_to_tile(self_obj, step_tile, 0);
                                end
                                if (anim_busy(self_obj) == 0) then begin
                                    if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
                                        if (anim_busy(self_obj) == 0) then begin
                                            global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                            global_temp := (global_temp + 1) % 6;
                                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                debug_msg("flee loop: rot == " + global_temp);
                                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                global_temp := (global_temp + 1) % 6;
                                            end
                                        end
                                    end
                                    else begin
                                        step_tile := -10;
                                    end
                                end
                            end
                            else begin
                                if (tile_distance(tile_num(self_obj), global_var(67)) < tile_distance(dest_tile, global_var(67))) then begin
                                    reg_anim_func(2, self_obj);
                                end
                            end
                        end
                    end
                end
                else begin
                    if ((local_var(5) > 0) or (critter_state(self_obj) bwand 2)) then begin
                        if (game_time > say_message_time) then begin
                            if (game_time >= local_var(5)) then begin
                                if (anim_busy(self_obj) == 0) then begin
                                    if (0 == 1) then begin
                                        if (local_var(5) == 0) then begin
                                            reg_anim_func(2, self_obj);
                                            reg_anim_func(1, 1);
                                            reg_anim_animate(self_obj, 20, -1);
                                            reg_anim_func(3, 0);
                                            critter_injure(self_obj, 2);
                                        end
                                        set_local_var(5, game_time + (60 * 10 * random(15, 120)));
                                    end
                                    else begin
                                        animate_stand_obj(self_obj);
                                        set_local_var(5, 0);
                                    end
                                    debug_msg("set karl passed out == " + 0);
                                end
                            end
                            else begin
                                if (last_message_said <= 5) then begin
                                    float_msg(self_obj, message_str(104, 250 + last_message_said), 8);
                                end
                                else begin
                                    last_message_said := 0;
                                end
                                say_message_time := game_time + (10 * random(5, 15));
                            end
                        end
                    end
                    else begin
                        if (obj_can_see_obj(self_obj, dude_obj)) then begin
                            if (cur_map_index == 7) then begin
                                if (((local_var(4) bwand 2) != 0) or ((global_var(446) bwand 524288) != 0)) then begin
                                    if (critter_is_fleeing(self_obj)) then begin
                                        if (anim_busy(self_obj) == 0) then begin
                                            if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                                                if (anim_busy(self_obj) == 0) then begin
                                                    global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
                                                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                                    global_temp := (global_temp + 1) % 6;
                                                    while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                                                        debug_msg("flee loop: rot == " + global_temp);
                                                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                                        global_temp := (global_temp + 1) % 6;
                                                    end
                                                end
                                            end
                                        end
                                    end
                                    else begin
                                        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
                                    end
                                end
                                else begin
                                    if (game_time > say_message_time) then begin
                                        if (get_critter_stat(dude_obj, 3) <= 1) then begin
                                            float_msg(self_obj, message_str(104, 161), 8);
                                        end
                                        else begin
                                            if (last_message_said <= 3) then begin
                                                float_msg(self_obj, message_str(104, 153 + last_message_said), 8);
                                                last_message_said := last_message_said + 1;
                                            end
                                        end
                                        say_message_time := game_time + (10 * random(15, 30));
                                    end
                                end
                            end
                            else begin
                                if (((local_var(4) bwand 2) != 0) or (global_var(52) <= -1000)) then begin
                                    if (critter_is_fleeing(self_obj)) then begin
                                        if (anim_busy(self_obj) == 0) then begin
                                            if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                                                if (anim_busy(self_obj) == 0) then begin
                                                    global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
                                                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                                    global_temp := (global_temp + 1) % 6;
                                                    while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                                                        debug_msg("flee loop: rot == " + global_temp);
                                                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                                        global_temp := (global_temp + 1) % 6;
                                                    end
                                                end
                                            end
                                        end
                                    end
                                    else begin
                                        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
                                    end
                                end
                            end
                        end
                        else begin
                            say_message_time := 0;
                            last_message_said := 0;
                        end
                    end
                end
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        call Node998();
    end
end

procedure talk_p_proc
begin
    script_overrides;
    if (local_var(5) > 0) then begin
        debug_msg("passed_out");
        if ((local_var(4) bwand 1) != 0) then begin
            display_msg(message_str(104, 159));
        end
        else begin
            display_msg(message_str(104, 160));
        end
    end
    else begin
        if (cur_map_index == 18) then begin
            float_msg(self_obj, message_str(104, 157), 8);
        end
        else begin
            if ((global_var(402) bwand 16384) != 0) then begin
                float_msg(self_obj, message_str(104, 300), 8);
            end
            else begin
                if ((global_var(402) bwand 131072) != 0) then begin
                    start_gdialog(104, self_obj, 4, -1, -1);
                    gsay_start;
                    call Node003();
                    gsay_end;
                    end_dialogue;
                end
                else begin
                    if ((local_var(4) bwand 16384) != 0) then begin
                        float_msg(self_obj, message_str(104, 156), 8);
                    end
                    else begin
                        start_gdialog(104, self_obj, 4, -1, -1);
                        gsay_start;
                        if ((local_var(4) bwand 2048) != 0) then begin
                            call Node004();
                        end
                        else begin
                            if ((local_var(4) bwand 1024) != 0) then begin
                                call Node001();
                            end
                            else begin
                                if ((local_var(4) bwand 1) != 0) then begin
                                    call Node002();
                                end
                                else begin
                                    call Node000();
                                end
                            end
                        end
                        gsay_end;
                        end_dialogue;
                    end
                end
            end
        end
        set_local_var(4, local_var(4) bwor 1);
    end
    last_message_said := 4;
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(5, global_var(5) + 1);
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
            set_global_var(2, 1);
            set_global_var(3, 0);
        end
        if (metarule(51, self_obj) == 2) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(2, 0);
                set_global_var(1, global_var(1) + 1);
                set_global_var(0, global_var(0) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(37, 0);
                set_global_var(38, 0);
                set_global_var(39, 0);
                set_global_var(40, 0);
                set_global_var(41, 0);
                set_global_var(42, 0);
                set_global_var(43, 0);
                set_global_var(44, 0);
                set_global_var(45, 0);
                if (global_var(0) >= 1000) then begin
                    set_global_var(37, 1);
                end
                else begin
                    if (global_var(0) >= 750) then begin
                        set_global_var(38, 1);
                    end
                    else begin
                        if (global_var(0) >= 500) then begin
                            set_global_var(39, 1);
                        end
                        else begin
                            if (global_var(0) >= 250) then begin
                                set_global_var(40, 1);
                            end
                            else begin
                                if (global_var(0) > -250) then begin
                                    set_global_var(41, 1);
                                end
                                else begin
                                    if (global_var(0) > -500) then begin
                                        set_global_var(42, 1);
                                    end
                                    else begin
                                        if (global_var(0) > -750) then begin
                                            set_global_var(43, 1);
                                        end
                                        else begin
                                            if (global_var(0) > -1000) then begin
                                                set_global_var(44, 1);
                                            end
                                            else begin
                                                set_global_var(45, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(52, global_var(52) + -8);
                debug_msg("Added " + -8 + " to Town Rep");
            end
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
            set_global_var(3, 1);
            set_global_var(2, 0);
        end
        set_global_var(0, global_var(0) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(52, global_var(52) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
    set_global_var(119, -1);
end

procedure look_at_p_proc
begin
    script_overrides;
    if (((local_var(4) bwand 1) != 0) or (cur_map_index == 18)) then begin
        if ((local_var(5) > 0) == 0) then begin
            display_msg(message_str(104, 101));
        end
        else begin
            display_msg(message_str(104, 159));
        end
    end
    else begin
        display_msg(message_str(104, 100));
    end
end

procedure description_p_proc
begin
    script_overrides;
    if ((local_var(5) > 0) == 0) then begin
        display_msg(message_str(104, 102));
    end
    else begin
        display_msg(message_str(104, 160));
    end
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (anim_busy(self_obj) == 0) then begin
        if (0 == 1) then begin
            if (local_var(5) == 0) then begin
                reg_anim_func(2, self_obj);
                reg_anim_func(1, 1);
                reg_anim_animate(self_obj, 20, -1);
                reg_anim_func(3, 0);
                critter_injure(self_obj, 2);
            end
            set_local_var(5, game_time + (60 * 10 * random(15, 120)));
        end
        else begin
            animate_stand_obj(self_obj);
            set_local_var(5, 0);
        end
        debug_msg("set karl passed out == " + 0);
    end
    if (source_obj == dude_obj) then begin
        if (cur_map_index == 18) then begin
            if ((global_var(52) <= -1000) == 0) then begin
                set_global_var(52, -1000);
            end
        end
        call Node998();
    end
end

procedure map_enter_p_proc
begin
    if (metarule(22, 0) == 0) then begin
        if (metarule(14, 0)) then begin
            if (cur_map_index == 18) then begin
                critter_add_trait(self_obj, 1, 6, 28);
            end
            else begin
                critter_add_trait(self_obj, 1, 6, 14);
            end
        end
        debug_msg("karl: map_enter_p_proc");
        if (global_var(119) == -1) then begin
            debug_msg("   karl_dead");
            destroy_object(self_obj);
        end
        else begin
            if (cur_map_index == 18) then begin
                debug_msg("   karl_in_modoc");
                if ((cur_map_index == 19) and (elevation(self_obj) != ((global_var(297) bwand 1) != 0))) then begin
                    move_to(self_obj, tile_num(self_obj), (global_var(297) bwand 1) != 0);
                end
                if (has_trait(1, self_obj, 666) == (((global_var(402) bwand 16384) != 0) == 0)) then begin
                    set_obj_visibility(self_obj, ((global_var(402) bwand 16384) != 0) == 0);
                end
            end
            else begin
                if ((global_var(402) bwand 16384) != 0) then begin
                    debug_msg("   karl_going_home");
                    destroy_object(self_obj);
                end
            end
        end
    end
end

procedure map_exit_p_proc
begin
    if ((global_var(402) bwand 16384) != 0) then begin
        if ((local_var(4) bwand 2) != 0) then begin
            if ((global_var(52) <= -1000) == 0) then begin
                set_global_var(52, -1000);
            end
        end
    end
end

procedure map_update_p_proc
begin
end

procedure Node000
begin
    gsay_reply(104, 162);
    giq_option(4, 104, 163, Node010, 50);
    giq_option(4, 104, 164, Node020, 50);
    giq_option(4, 104, 165, Node025, 50);
    giq_option(4, 104, 166, Node046, 50);
    if (item_caps_total(dude_obj) >= 2) then begin
        giq_option(-3, 104, 167, Node030, 50);
    end
    giq_option(-3, 104, 168, Node031, 50);
end

procedure Node001
begin
    gsay_reply(104, 169);
    giq_option(4, 104, 170, Node994, 50);
    if (obj_is_carrying_obj_pid(dude_obj, 124)) then begin
        giq_option(4, 104, 150, Node993, 50);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 125)) then begin
        giq_option(4, 104, 151, Node992, 50);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 106)) then begin
        giq_option(4, 104, 152, Node991, 50);
    end
    giq_option(4, 104, 173, Node999, 50);
    giq_option(4, 104, 174, Node013, 50);
    if ((local_var(4) bwand 8192) != 0) then begin
        giq_option(4, 104, 175, Node042, 50);
    end
    giq_option(4, 104, 166, Node046, 50);
    if (item_caps_total(dude_obj) >= 2) then begin
        giq_option(-3, 104, 167, Node030, 50);
    end
    giq_option(-3, 104, 178, Node999, 50);
end

procedure Node002
begin
    gsay_reply(104, 179);
    giq_option(4, 104, 180, Node990, 50);
    if (item_caps_total(dude_obj) >= 1) then begin
        giq_option(4, 104, 184, Node033, 50);
    end
    if ((local_var(4) bwand 8192) != 0) then begin
        giq_option(4, 104, 175, Node042, 50);
    end
    giq_option(4, 104, 173, Node025, 50);
    giq_option(4, 104, 166, Node046, 50);
    if (item_caps_total(dude_obj) >= 2) then begin
        giq_option(-3, 104, 185, Node030, 50);
    end
    giq_option(-3, 104, 186, Node032, 50);
end

procedure Node003
begin
    gsay_reply(104, 187);
    giq_option(4, 104, 188, Node040, 50);
    giq_option(4, 104, 189, Node041, 50);
    giq_option(-3, 104, 190, Node999, 50);
end

procedure Node004
begin
    gsay_reply(104, 191);
    giq_option(4, 104, 170, Node994, 50);
    if (obj_is_carrying_obj_pid(dude_obj, 124)) then begin
        giq_option(4, 104, 150, Node993, 50);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 125)) then begin
        giq_option(4, 104, 151, Node992, 50);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 106)) then begin
        giq_option(4, 104, 152, Node991, 50);
    end
    giq_option(4, 104, 173, Node999, 50);
    giq_option(4, 104, 174, Node013, 50);
    if ((local_var(4) bwand 8192) != 0) then begin
        giq_option(4, 104, 175, Node042, 50);
    end
    if (item_caps_total(dude_obj) >= 2) then begin
        giq_option(-3, 104, 167, Node030, 50);
    end
    giq_option(-3, 104, 178, Node999, 50);
end

procedure Node010
begin
    gsay_reply(104, 198);
    giq_option(1, 104, 199, Node996, 50);
    giq_option(1, 104, 200, Node990, 50);
    giq_option(1, 104, 201, Node999, 50);
end

procedure Node011
begin
    gsay_reply(104, 202);
    giq_option(1, 104, 203, Node995, 50);
    giq_option(1, 104, 204, Node989, 50);
end

procedure Node012
begin
    if (1) then begin
        set_local_var(4, local_var(4) bwor 2048);
    end
    else begin
        set_local_var(4, local_var(4) bwand (-1 - 2048));
    end
    gsay_reply(104, 205);
    giq_option(1, 104, message_str(14, 350), Node989, 50);
end

procedure Node013
begin
    gsay_reply(104, 206);
    giq_option(1, 104, 207, Node014, 50);
    giq_option(1, 104, 208, Node999, 50);
end

procedure Node014
begin
    gsay_reply(104, 209);
    giq_option(1, 104, 210, Node015, 50);
    giq_option(1, 104, 208, Node999, 50);
end

procedure Node015
begin
    if (1) then begin
        set_local_var(4, local_var(4) bwor 8192);
    end
    else begin
        set_local_var(4, local_var(4) bwand (-1 - 8192));
    end
    gsay_reply(104, 212);
    giq_option(1, 104, 213, Node989, 50);
end

procedure Node016
begin
    if (0) then begin
        set_local_var(4, local_var(4) bwor 2048);
    end
    else begin
        set_local_var(4, local_var(4) bwand (-1 - 2048));
    end
    gsay_reply(104, 214);
    giq_option(1, 104, 215, Node013, 50);
    giq_option(1, 104, 216, Node999, 50);
end

procedure Node020
begin
    gsay_reply(104, 217);
    giq_option(1, 104, 180, Node990, 50);
    giq_option(1, 104, 219, Node021, 50);
    giq_option(1, 104, message_str(14, random(375, 376)), Node999, 50);
end

procedure Node021
begin
    if (1) then begin
        set_local_var(4, local_var(4) bwor 2048);
    end
    else begin
        set_local_var(4, local_var(4) bwand (-1 - 2048));
    end
    gsay_reply(104, 220);
    giq_option(1, 104, 221, Node989, 50);
end

procedure Node025
begin
    gsay_reply(104, 222);
    if (obj_is_carrying_obj_pid(dude_obj, 124)) then begin
        giq_option(1, 104, 150, Node993, 50);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 125)) then begin
        giq_option(1, 104, 151, Node992, 50);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 106)) then begin
        giq_option(1, 104, 152, Node991, 50);
    end
    giq_option(1, 104, 173, Node999, 50);
end

procedure Node026
begin
    if (1 == 1) then begin
        if (local_var(5) == 0) then begin
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            reg_anim_animate(self_obj, 20, -1);
            reg_anim_func(3, 0);
            critter_injure(self_obj, 2);
        end
        set_local_var(5, game_time + (60 * 10 * random(15, 120)));
    end
    else begin
        animate_stand_obj(self_obj);
        set_local_var(5, 0);
    end
    debug_msg("set karl passed out == " + 1);
    if (0) then begin
        set_local_var(4, local_var(4) bwor 2048);
    end
    else begin
        set_local_var(4, local_var(4) bwand (-1 - 2048));
    end
    gsay_reply(104, 224);
    giq_option(1, 104, 225, Node999, 50);
end

procedure Node027
begin
    if (1) then begin
        set_local_var(4, local_var(4) bwor 2048);
    end
    else begin
        set_local_var(4, local_var(4) bwand (-1 - 2048));
    end
    gsay_reply(104, 226);
    giq_option(1, 104, message_str(14, 350), Node999, 50);
end

procedure Node030
begin
    variable LVar0 := 0;
    LVar0 := item_caps_total(dude_obj) / 2;
    item_caps_adjust(self_obj, LVar0);
    if (1) then begin
        set_local_var(4, local_var(4) bwor 1024);
    end
    else begin
        set_local_var(4, local_var(4) bwand (-1 - 1024));
    end
    item_caps_adjust(dude_obj, -LVar0);
    gsay_reply(104, 227);
    giq_option(1, 104, 228, Node015, 50);
    giq_option(1, 104, 229, Node999, 50);
end

procedure Node031
begin
    gsay_reply(104, 230);
    giq_option(1, 104, message_str(14, 350), Node999, 50);
end

procedure Node032
begin
    gsay_reply(104, 231);
    giq_option(1, 104, message_str(14, 350), Node999, 50);
end

procedure Node033
begin
    gsay_reply(104, 232);
    giq_option(1, 104, message_str(14, 350), Node999, 50);
end

procedure Node040
begin
    display_msg(message_str(104, 400));
    if (((global_var(402) bwand 16384) != 0) == 0) then begin
        give_exp_points(500);
        display_msg(message_str(14, 100) + 500 + message_str(14, 101));
        set_global_var(0, global_var(0) + 3);
        debug_msg("Player gains " + 3 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    set_global_var(402, global_var(402) bwor 16384);
    if ((global_var(109) >= 4) == 0) then begin
        set_global_var(109, 3);
    end
    else begin
        if ((global_var(109) >= 7) == 0) then begin
            set_global_var(109, 8);
        end
    end
    gsay_reply(104, 233);
    giq_option(1, 104, message_str(14, 350), Node999, 50);
end

procedure Node041
begin
    if (global_var(631) < 5) then begin
        set_global_var(631, 5);
    end
    debug_msg("ghost pip == " + global_var(631));
    if (1) then begin
        set_local_var(4, local_var(4) bwor 512);
    end
    else begin
        set_local_var(4, local_var(4) bwand (-1 - 512));
    end
    set_global_var(109, 2);
    set_global_var(52, global_var(52) + 1);
    gsay_reply(104, 234);
    giq_option(1, 104, message_str(14, 350), Node999, 50);
end

procedure Node042
begin
    gsay_reply(104, 235);
    giq_option(1, 104, 236, Node013, 50);
    giq_option(1, 104, 237, Node999, 50);
end

procedure Node043
begin
    gsay_reply(104, 238);
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        giq_option(1, 104, 239, Node044, 50);
    end
    giq_option(1, 104, 240, Node045, 50);
    giq_option(10, 104, 241, Node014, 50);
    giq_option(1, 104, 242, Node999, 50);
end

procedure Node044
begin
    gsay_reply(104, 243);
    giq_option(1, 104, 244, Node999, 50);
    giq_option(1, 104, 245, Node045, 50);
end

procedure Node045
begin
    variable LVar0 := 0;
    LVar0 := item_caps_total(self_obj);
    if (LVar0 > 0) then begin
        if (LVar0 >= 1000) then begin
            item_caps_adjust(self_obj, -1000);
            if (1) then begin
                set_local_var(4, local_var(4) bwor 1024);
            end
            else begin
                set_local_var(4, local_var(4) bwand (-1 - 1024));
            end
            item_caps_adjust(dude_obj, --1000);
            gsay_reply(104, 246);
        end
        else begin
            item_caps_adjust(self_obj, -LVar0);
            if (1) then begin
                set_local_var(4, local_var(4) bwor 1024);
            end
            else begin
                set_local_var(4, local_var(4) bwand (-1 - 1024));
            end
            item_caps_adjust(dude_obj, --LVar0);
            gsay_reply(104, message_str(104, 260) + LVar0 + message_str(104, 261));
        end
    end
    else begin
        gsay_reply(104, 262);
    end
    giq_option(1, 104, message_str(14, 350), Node999, 50);
end

procedure Node046
begin
    if ((global_var(119) == -1) == 0) then begin
        set_global_var(119, 1);
    end
    if (1) then begin
        set_local_var(4, local_var(4) bwor 16384);
    end
    else begin
        set_local_var(4, local_var(4) bwand (-1 - 16384));
    end
    gsay_reply(104, 247);
    giq_option(1, 104, message_str(14, 350), Node999, 50);
end

procedure Node999
begin
end

procedure Node998
begin
    set_local_var(4, local_var(4) bwor 2);
end

procedure Node996
begin
    if (item_caps_total(dude_obj) >= 1000) then begin
        item_caps_adjust(self_obj, 1000);
        if (1) then begin
            set_local_var(4, local_var(4) bwor 1024);
        end
        else begin
            set_local_var(4, local_var(4) bwand (-1 - 1024));
        end
        item_caps_adjust(dude_obj, -1000);
        call Node011();
    end
    else begin
        call Node012();
    end
end

procedure Node995
begin
    if ((item_caps_total(self_obj) >= 1000) and (get_critter_stat(dude_obj, 3) >= 8)) then begin
        call Node043();
    end
    else begin
        call Node013();
    end
end

procedure timed_event_p_proc
begin
end

procedure Node994
begin
    if (item_caps_total(dude_obj) >= 100) then begin
        item_caps_adjust(self_obj, 100);
        if (1) then begin
            set_local_var(4, local_var(4) bwor 1024);
        end
        else begin
            set_local_var(4, local_var(4) bwand (-1 - 1024));
        end
        item_caps_adjust(dude_obj, -100);
        call Node016();
    end
    else begin
        call Node012();
    end
end

procedure Node993
begin
    restock_amt := 1;
    if (obj_is_carrying_obj_pid(dude_obj, 124) < 1) then begin
        restock_amt := obj_is_carrying_obj_pid(dude_obj, 124);
    end
    if (restock_amt > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 124);
        restock_trash := rm_mult_objs_from_inven(dude_obj, restock_obj, restock_amt);
        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt);
    end
    call Node026();
end

procedure Node992
begin
    restock_amt := 1;
    if (obj_is_carrying_obj_pid(dude_obj, 125) < 1) then begin
        restock_amt := obj_is_carrying_obj_pid(dude_obj, 125);
    end
    if (restock_amt > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 125);
        restock_trash := rm_mult_objs_from_inven(dude_obj, restock_obj, restock_amt);
        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt);
    end
    call Node026();
end

procedure Node991
begin
    restock_amt := 1;
    if (obj_is_carrying_obj_pid(dude_obj, 106) < 1) then begin
        restock_amt := obj_is_carrying_obj_pid(dude_obj, 106);
    end
    if (restock_amt > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 106);
        restock_trash := rm_mult_objs_from_inven(dude_obj, restock_obj, restock_amt);
        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt);
    end
    call Node027();
end

procedure Node990
begin
    if (item_caps_total(dude_obj) >= 25) then begin
        item_caps_adjust(self_obj, 25);
        if (1) then begin
            set_local_var(4, local_var(4) bwor 1024);
        end
        else begin
            set_local_var(4, local_var(4) bwand (-1 - 1024));
        end
        item_caps_adjust(dude_obj, -25);
        call Node016();
    end
    else begin
        call Node012();
    end
end

procedure Node989
begin
    if (1 == 1) then begin
        if (local_var(5) == 0) then begin
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            reg_anim_animate(self_obj, 20, -1);
            reg_anim_func(3, 0);
            critter_injure(self_obj, 2);
        end
        set_local_var(5, game_time + (60 * 10 * random(15, 120)));
    end
    else begin
        animate_stand_obj(self_obj);
        set_local_var(5, 0);
    end
    debug_msg("set karl passed out == " + 1);
end

