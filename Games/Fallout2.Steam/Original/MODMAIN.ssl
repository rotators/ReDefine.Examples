variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure map_exit_p_proc;

export variable modoc_grisham_box_obj;
export variable modoc_jo_box_obj;
export variable modoc_balthas_box_obj;
export variable generic_temp_box;
export variable modoc_jo_obj;
export variable brahmin_1_object;
export variable modoc_jerky_box_obj;
export variable jonny_obj;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure map_enter_p_proc
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    variable LVar3 := 0;
    debug_msg("start: map_enter_p_proc for MODOC");
    debug_msg("global_var(GVAR_LOAD_MAP_INDEX) == " + global_var(27));
    debug_msg("Check_Create_Car(" + 24531 + "," + 0 + ")");
    if (not(metarule(22, 0))) then begin
        if (global_var(18) != 0) then begin
            debug_msg("car_current_town == " + metarule(30, 0) + " / map_get_load_area == " + metarule3(111, 0, 0, 0));
            if ((metarule(30, 0) == metarule3(111, 0, 0, 0)) or ((26 <= metarule(30, 0)) and (metarule(30, 0) <= 29) and (metarule3(111, 0, 0, 0) == -1))) then begin
                debug_msg("Place_Car(" + 24531 + "," + 0 + ")");
                debug_msg("   GVAR_CAR_PLACED_TILE == " + global_var(633));
                debug_msg("   Car_At_Loc == " + (tile_contains_pid_obj(24531, 0, 33555441) != 0));
                if ((global_var(633) <= 0) or (24531 == global_var(633))) then begin
                    set_global_var(633, 24531);
                    if (not(tile_contains_pid_obj(24531, 0, 33555441) != 0)) then begin
                        Scenery_Creation := create_object_sid(33555441, 24531, 0, 304);
                        Scenery_Creation_Hex := 24531;
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 2) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
                            Scenery_Creation := create_object_sid(33554499, Scenery_Creation_Hex, 0, -1);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 2) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 2, 1);
                            Scenery_Creation := create_object_sid(33554499, Scenery_Creation_Hex, 0, -1);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 2) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 3, 1);
                            Scenery_Creation := create_object_sid(33554499, Scenery_Creation_Hex, 0, -1);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 2) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
                            Scenery_Creation := create_object_sid(33554499, Scenery_Creation_Hex, 0, -1);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
                            Scenery_Creation := create_object_sid(33554499, Scenery_Creation_Hex, 0, -1);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
                            Scenery_Creation := create_object_sid(33554499, Scenery_Creation_Hex, 0, -1);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
                            Scenery_Creation := create_object_sid(33554499, Scenery_Creation_Hex, 0, -1);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
                            Scenery_Creation := create_object_sid(33554499, Scenery_Creation_Hex, 0, -1);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
                            Scenery_Creation := create_object_sid(33554499, Scenery_Creation_Hex, 0, -1);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
                            Scenery_Creation := create_object_sid(33554499, Scenery_Creation_Hex, 0, -1);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 0, 1);
                            Scenery_Creation := create_object_sid(33554499, Scenery_Creation_Hex, 0, -1);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
                            Scenery_Creation := create_object_sid(33554499, Scenery_Creation_Hex, 0, -1);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 2) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 0, 1);
                            Scenery_Creation := create_object_sid(33554499, Scenery_Creation_Hex, 0, -1);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
                            Scenery_Creation := create_object_sid(33554499, Scenery_Creation_Hex, 0, -1);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 2, 1);
                            Scenery_Creation := create_object_sid(33554499, Scenery_Creation_Hex, 0, -1);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                    end
                end
                if (tile_contains_pid_obj(24531, 0, 33555441) != 0) then begin
                    if (not(tile_contains_pid_obj(tile_num_in_direction(tile_num_in_direction(24531, 5, 2), 4, 1), 0, 455) != 0)) then begin
                        debug_msg("placing trunk:");
                        Scenery_Creation_Ptr := 0;
                        if (party_member_obj(455) != 0) then begin
                            Scenery_Creation_Ptr := party_member_obj(455);
                        end
                        else begin
                            if (global_var(18) == 0) then begin
                                Scenery_Creation_Ptr := create_object_sid(455, 0, 0, 920);
                            end
                        end
                        if (Scenery_Creation_Ptr != 0) then begin
                            Scenery_Creation_Hex := tile_num_in_direction(tile_num_in_direction(24531, 5, 2), 4, 1);
                            move_to(Scenery_Creation_Ptr, Scenery_Creation_Hex, 0);
                            Scenery_Creation_Count := 0;
                            while (Scenery_Creation_Count < 1) do begin
                                Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
                                Scenery_Creation := create_object_sid(33554499, Scenery_Creation_Hex, 0, -1);
                                Scenery_Creation_Count := Scenery_Creation_Count + 1;
                            end
                            Scenery_Creation_Count := 0;
                            while (Scenery_Creation_Count < 1) do begin
                                Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 2, 1);
                                Scenery_Creation := create_object_sid(33554499, Scenery_Creation_Hex, 0, -1);
                                Scenery_Creation_Count := Scenery_Creation_Count + 1;
                            end
                        end
                        else begin
                            debug_msg("WE HAD AN ERROR WITH THE TRUNK PTR, OHHH FUCK");
                        end
                    end
                end
            end
            else begin
                if (tile_contains_pid_obj(24531, 0, 33555441) != 0) then begin
                    debug_msg("Dest_Car_Loc(" + 24531 + "," + 0 + ")");
                    Scenery_Creation_Ptr := tile_contains_pid_obj(24531, 0, 33555441);
                    if (Scenery_Creation_Ptr != 0) then begin
                        destroy_object(Scenery_Creation_Ptr);
                        Scenery_Creation_Hex := 24531;
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 2) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 2) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 2, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 2) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 3, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 2) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 0, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 2) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 0, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 2, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 2, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                    end
                    Scenery_Creation_Ptr := tile_contains_pid_obj(tile_num_in_direction(tile_num_in_direction(24531, 5, 2), 4, 1), 0, 455);
                    if (Scenery_Creation_Ptr != 0) then begin
                        if (Scenery_Creation_Ptr == party_member_obj(455)) then begin
                            set_obj_visibility(Scenery_Creation_Ptr, 1);
                        end
                        else begin
                            destroy_object(Scenery_Creation_Ptr);
                        end
                    end
                end
            end
        end
        else begin
            debug_msg("the player hasn't gotten the car, can't place it");
        end
    end
    else begin
        debug_msg("sorry, can't place the car, the game's loading");
    end
    set_global_var(27, 0);
    if ((global_var(402) bwand 512) != 0) then begin
        override_map_start(15121 % 200, 15121 / 200, 0, 5);
    end
    else begin
        override_map_start(23533 % 200, 23533 / 200, 0, 5);
    end
    set_global_var(46, 27950);
    set_global_var(67, 9061);
    if (global_var(388) == 0) then begin
        if (global_var(388) < 1) then begin
            set_global_var(388, 1);
        end
        debug_msg("set_modoc_ending_default");
    end
    if (metarule(14, 0)) then begin
        display_msg(message_str(195, 100));
    end
    if (metarule(22, 0) == 0) then begin
        if (global_var(112) == 1) then begin
            set_global_var(112, 2);
        end
        if ((global_var(297) bwand 256) != 0) then begin
            set_global_var(297, global_var(297) bwand (-1 - 256));
        end
        LVar0 := random(15, 20);
        while (LVar0 > 0) do begin
            LVar0 := LVar0 - 1;
            LVar1 := create_object_sid(random(33555731, 33555736), 0, 0, 575);
            if (random(1, 2) == 1) then begin
                LVar3 := 20075;
            end
            else begin
                LVar3 := 20068;
            end
            LVar2 := tile_num_in_direction(LVar3, random(0, 5), random(1, 8));
            while (tile_in_tile_rect(19485, 19461, 21485, 21461, LVar2) == 0) do begin
                LVar2 := tile_num_in_direction(LVar3, random(0, 5), random(1, 8));
            end
            move_to(LVar1, LVar2, 0);
        end
        LVar0 := random(15, 20);
        while (LVar0 > 0) do begin
            LVar0 := LVar0 - 1;
            LVar1 := create_object_sid(random(33555753, 33555761), 0, 0, 575);
            if (random(1, 2) == 1) then begin
                LVar3 := 20075;
            end
            else begin
                LVar3 := 20068;
            end
            LVar2 := tile_num_in_direction(LVar3, random(0, 5), random(1, 8));
            while (tile_in_tile_rect(19485, 19461, 21485, 21461, LVar2) == 0) do begin
                LVar2 := tile_num_in_direction(LVar3, random(0, 5), random(1, 8));
            end
            move_to(LVar1, LVar2, 0);
        end
    end
    if ((get_month >= 3) and (get_month < 5)) then begin
        if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
            set_light_level(game_time_hour - 600 + 40);
        end
        else begin
            if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                set_light_level(100);
            end
            else begin
                if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                    set_light_level(100 - (game_time_hour - 1800));
                end
                else begin
                    set_light_level(40);
                end
            end
        end
    end
    else begin
        if ((get_month >= 5) and (get_month < 9)) then begin
            if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                set_light_level(game_time_hour - 500 + 40);
            end
            else begin
                if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1900));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 9) and (get_month < 11)) then begin
                if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                    set_light_level(game_time_hour - 600 + 40);
                end
                else begin
                    if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1800));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                    set_light_level(game_time_hour - 700 + 40);
                end
                else begin
                    if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1700));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
        end
    end
    debug_msg("end: map_enter_p_proc for MODOC");
end

procedure map_update_p_proc
begin
    if ((get_month >= 3) and (get_month < 5)) then begin
        if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
            set_light_level(game_time_hour - 600 + 40);
        end
        else begin
            if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                set_light_level(100);
            end
            else begin
                if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                    set_light_level(100 - (game_time_hour - 1800));
                end
                else begin
                    set_light_level(40);
                end
            end
        end
    end
    else begin
        if ((get_month >= 5) and (get_month < 9)) then begin
            if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                set_light_level(game_time_hour - 500 + 40);
            end
            else begin
                if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1900));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 9) and (get_month < 11)) then begin
                if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                    set_light_level(game_time_hour - 600 + 40);
                end
                else begin
                    if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1800));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                    set_light_level(game_time_hour - 700 + 40);
                end
                else begin
                    if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1700));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
        end
    end
end

procedure map_exit_p_proc
begin
    if ((((global_var(402) bwand 4) != 0) or (global_var(388) == 4)) == 0) then begin
        if (((global_var(402) bwand 1024) != 0) and (global_var(310) <= 0) or ((global_var(112) == 2) or (((global_var(403) - (game_time / (10 * 60 * 60 * 24))) <= 0) or ((global_var(403) - (game_time / (10 * 60 * 60 * 24))) > 31) and (global_var(403) > 0)))) then begin
            set_global_var(402, global_var(402) bwor 4);
        end
    end
    set_global_var(402, global_var(402) bwand (-1 - 512));
end

