variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable last_timed_obj;
variable last_timed_param;
variable check_still_kill;
variable stored_msg;
variable stored_node;
variable top_msg;
variable var_num;

procedure ChooseFromList;
procedure CLICK_PREV;
procedure CLICK_0;
procedure CLICK_1;
procedure CLICK_2;
procedure CLICK_3;
procedure CLICK_4;
procedure CLICK_MORE;

variable floater_patch_msg;
variable hs_temp;

procedure start;
procedure map_enter_p_proc;
procedure map_update_p_proc;

export variable new_reno_temp_box;
export variable new_reno_renesco_box;
export variable new_reno_eldridge_obj;
export variable new_reno_eldridge_box;
export variable new_reno_eldridge_box_2;
export variable new_reno_barking_dog_obj;
export variable new_reno_poor_box_obj;
export variable new_reno_ethyl_wright_box;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure ChooseFromList
begin
    variable LVar0 := 0;
    gsay_reply(355, stored_msg);
    if (message_str(353, top_msg - 1) != "") then begin
        giq_option(1, 355, message_str(353, 150), CLICK_PREV, 50);
    end
    if (LVar0 == 0) then begin
        if (message_str(353, top_msg + 0) != "") then begin
            giq_option(1, 355, message_str(353, top_msg + 0), CLICK_0, 50);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(353, top_msg + 1) != "") then begin
            giq_option(1, 355, message_str(353, top_msg + 1), CLICK_1, 50);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(353, top_msg + 2) != "") then begin
            giq_option(1, 355, message_str(353, top_msg + 2), CLICK_2, 50);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(353, top_msg + 3) != "") then begin
            giq_option(1, 355, message_str(353, top_msg + 3), CLICK_3, 50);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(353, top_msg + 4) != "") then begin
            giq_option(1, 355, message_str(353, top_msg + 4), CLICK_4, 50);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(353, top_msg + 5) != "") then begin
            giq_option(1, 355, message_str(353, 151), CLICK_MORE, 50);
        end
    end
end

procedure CLICK_PREV
begin
    top_msg := top_msg - 5;
    call ChooseFromList();
end

procedure CLICK_0
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + (top_msg % 100));
    call stored_node();
end

procedure CLICK_1
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + ((top_msg + 1) % 100));
    call stored_node();
end

procedure CLICK_2
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + ((top_msg + 2) % 100));
    call stored_node();
end

procedure CLICK_3
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + ((top_msg + 3) % 100));
    call stored_node();
end

procedure CLICK_4
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + ((top_msg + 4) % 100));
    call stored_node();
end

procedure CLICK_MORE
begin
    top_msg := top_msg + 5;
    call ChooseFromList();
end

procedure start
begin
end

procedure map_enter_p_proc
begin
    set_global_var(46, 21047);
    set_global_var(67, 0);
    debug_msg("Check_Create_Car(" + 30894 + "," + 0 + ")");
    if (not(metarule(22, 0))) then begin
        if (global_var(18) != 0) then begin
            debug_msg("car_current_town == " + metarule(30, 0) + " / map_get_load_area == " + metarule3(111, 0, 0, 0));
            if ((metarule(30, 0) == metarule3(111, 0, 0, 0)) or ((26 <= metarule(30, 0)) and (metarule(30, 0) <= 29) and (metarule3(111, 0, 0, 0) == -1))) then begin
                debug_msg("Place_Car(" + 30894 + "," + 0 + ")");
                debug_msg("   GVAR_CAR_PLACED_TILE == " + global_var(633));
                debug_msg("   Car_At_Loc == " + (tile_contains_pid_obj(30894, 0, 33555441) != 0));
                if ((global_var(633) <= 0) or (30894 == global_var(633))) then begin
                    set_global_var(633, 30894);
                    if (not(tile_contains_pid_obj(30894, 0, 33555441) != 0)) then begin
                        Scenery_Creation := create_object_sid(33555441, 30894, 0, 304);
                        Scenery_Creation_Hex := 30894;
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 2) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
                            Scenery_Creation := create_object_sid(33554499, Scenery_Creation_Hex, 0, -1);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 2) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 2, 1);
                            Scenery_Creation := create_object_sid(33554499, Scenery_Creation_Hex, 0, -1);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 2) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 3, 1);
                            Scenery_Creation := create_object_sid(33554499, Scenery_Creation_Hex, 0, -1);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 2) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
                            Scenery_Creation := create_object_sid(33554499, Scenery_Creation_Hex, 0, -1);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
                            Scenery_Creation := create_object_sid(33554499, Scenery_Creation_Hex, 0, -1);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
                            Scenery_Creation := create_object_sid(33554499, Scenery_Creation_Hex, 0, -1);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
                            Scenery_Creation := create_object_sid(33554499, Scenery_Creation_Hex, 0, -1);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
                            Scenery_Creation := create_object_sid(33554499, Scenery_Creation_Hex, 0, -1);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
                            Scenery_Creation := create_object_sid(33554499, Scenery_Creation_Hex, 0, -1);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
                            Scenery_Creation := create_object_sid(33554499, Scenery_Creation_Hex, 0, -1);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 0, 1);
                            Scenery_Creation := create_object_sid(33554499, Scenery_Creation_Hex, 0, -1);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
                            Scenery_Creation := create_object_sid(33554499, Scenery_Creation_Hex, 0, -1);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 2) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 0, 1);
                            Scenery_Creation := create_object_sid(33554499, Scenery_Creation_Hex, 0, -1);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
                            Scenery_Creation := create_object_sid(33554499, Scenery_Creation_Hex, 0, -1);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 2, 1);
                            Scenery_Creation := create_object_sid(33554499, Scenery_Creation_Hex, 0, -1);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                    end
                end
                if (tile_contains_pid_obj(30894, 0, 33555441) != 0) then begin
                    if (not(tile_contains_pid_obj(tile_num_in_direction(tile_num_in_direction(30894, 5, 2), 4, 1), 0, 455) != 0)) then begin
                        debug_msg("placing trunk:");
                        Scenery_Creation_Ptr := 0;
                        if (party_member_obj(455) != 0) then begin
                            Scenery_Creation_Ptr := party_member_obj(455);
                        end
                        else begin
                            if (global_var(18) == 0) then begin
                                Scenery_Creation_Ptr := create_object_sid(455, 0, 0, 920);
                            end
                        end
                        if (Scenery_Creation_Ptr != 0) then begin
                            Scenery_Creation_Hex := tile_num_in_direction(tile_num_in_direction(30894, 5, 2), 4, 1);
                            move_to(Scenery_Creation_Ptr, Scenery_Creation_Hex, 0);
                            Scenery_Creation_Count := 0;
                            while (Scenery_Creation_Count < 1) do begin
                                Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
                                Scenery_Creation := create_object_sid(33554499, Scenery_Creation_Hex, 0, -1);
                                Scenery_Creation_Count := Scenery_Creation_Count + 1;
                            end
                            Scenery_Creation_Count := 0;
                            while (Scenery_Creation_Count < 1) do begin
                                Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 2, 1);
                                Scenery_Creation := create_object_sid(33554499, Scenery_Creation_Hex, 0, -1);
                                Scenery_Creation_Count := Scenery_Creation_Count + 1;
                            end
                        end
                        else begin
                            debug_msg("WE HAD AN ERROR WITH THE TRUNK PTR, OHHH FUCK");
                        end
                    end
                end
            end
            else begin
                if (tile_contains_pid_obj(30894, 0, 33555441) != 0) then begin
                    debug_msg("Dest_Car_Loc(" + 30894 + "," + 0 + ")");
                    Scenery_Creation_Ptr := tile_contains_pid_obj(30894, 0, 33555441);
                    if (Scenery_Creation_Ptr != 0) then begin
                        destroy_object(Scenery_Creation_Ptr);
                        Scenery_Creation_Hex := 30894;
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 2) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 2) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 2, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 2) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 3, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 2) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 0, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 2) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 0, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 2, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 2, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                    end
                    Scenery_Creation_Ptr := tile_contains_pid_obj(tile_num_in_direction(tile_num_in_direction(30894, 5, 2), 4, 1), 0, 455);
                    if (Scenery_Creation_Ptr != 0) then begin
                        if (Scenery_Creation_Ptr == party_member_obj(455)) then begin
                            set_obj_visibility(Scenery_Creation_Ptr, 1);
                        end
                        else begin
                            destroy_object(Scenery_Creation_Ptr);
                        end
                    end
                end
            end
        end
        else begin
            debug_msg("the player hasn't gotten the car, can't place it");
        end
    end
    else begin
        debug_msg("sorry, can't place the car, the game's loading");
    end
    if (elevation(dude_obj) == 1) then begin
        set_light_level(50);
    end
    else begin
        if ((get_month >= 3) and (get_month < 5)) then begin
            if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                set_light_level(game_time_hour - 600 + 40);
            end
            else begin
                if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1800));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 5) and (get_month < 9)) then begin
                if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                    set_light_level(game_time_hour - 500 + 40);
                end
                else begin
                    if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1900));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((get_month >= 9) and (get_month < 11)) then begin
                    if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                        set_light_level(game_time_hour - 600 + 40);
                    end
                    else begin
                        if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                            set_light_level(100);
                        end
                        else begin
                            if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                                set_light_level(100 - (game_time_hour - 1800));
                            end
                            else begin
                                set_light_level(40);
                            end
                        end
                    end
                end
                else begin
                    if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                        set_light_level(game_time_hour - 700 + 40);
                    end
                    else begin
                        if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                            set_light_level(100);
                        end
                        else begin
                            if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                                set_light_level(100 - (game_time_hour - 1700));
                            end
                            else begin
                                set_light_level(40);
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure map_update_p_proc
begin
    if (elevation(dude_obj) == 1) then begin
        set_light_level(50);
    end
    else begin
        if ((get_month >= 3) and (get_month < 5)) then begin
            if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                set_light_level(game_time_hour - 600 + 40);
            end
            else begin
                if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1800));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 5) and (get_month < 9)) then begin
                if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                    set_light_level(game_time_hour - 500 + 40);
                end
                else begin
                    if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1900));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((get_month >= 9) and (get_month < 11)) then begin
                    if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                        set_light_level(game_time_hour - 600 + 40);
                    end
                    else begin
                        if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                            set_light_level(100);
                        end
                        else begin
                            if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                                set_light_level(100 - (game_time_hour - 1800));
                            end
                            else begin
                                set_light_level(40);
                            end
                        end
                    end
                end
                else begin
                    if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                        set_light_level(game_time_hour - 700 + 40);
                    end
                    else begin
                        if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                            set_light_level(100);
                        end
                        else begin
                            if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                                set_light_level(100 - (game_time_hour - 1700));
                            end
                            else begin
                                set_light_level(40);
                            end
                        end
                    end
                end
            end
        end
    end
end

