procedure start;
procedure critter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure flee_dude;
procedure Duc01;
procedure Duc02;
procedure Duc03;
procedure Duc04;
procedure Duc05;
procedure Duc06;
procedure Duc07;
procedure Duc08;
procedure Duc09;
procedure Duc10;
procedure DucBarter;
procedure DucEnd;

variable known;
variable initialized;
variable Tandi_seed;
variable Tandi_rescued;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure start
begin
    if (not(initialized)) then begin
        critter_add_trait(self_obj, 1, 6, 2);
        critter_add_trait(self_obj, 1, 5, 6);
        known := global_var(333);
        initialized := 1;
    end
    else begin
        if (script_action == 12) then begin
            call critter_p_proc();
        end
        else begin
            if (script_action == 14) then begin
                call damage_p_proc();
            end
            else begin
                if (script_action == 18) then begin
                    call destroy_p_proc();
                end
                else begin
                    if (script_action == 21) then begin
                        call look_at_p_proc();
                    end
                    else begin
                        if (script_action == 4) then begin
                            call pickup_p_proc();
                        end
                        else begin
                            if (script_action == 11) then begin
                                call talk_p_proc();
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure critter_p_proc
begin
    if ((global_var(289) == 1) and (tile_distance_objs(dude_obj, self_obj) < 8)) then begin
        call flee_dude();
    end
end

procedure damage_p_proc
begin
    set_global_var(289, 1);
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (source_obj == dude_obj) then begin
            if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
                set_global_var(156, 1);
                set_global_var(157, 0);
            end
            if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
                set_global_var(157, 1);
                set_global_var(156, 0);
            end
            set_global_var(159, global_var(159) + 1);
            if ((global_var(159) % 2) == 0) then begin
                set_global_var(155, global_var(155) - 1);
            end
        end
    end
    set_global_var(331, 1);
    set_global_var(289, 1);
end

procedure look_at_p_proc
begin
    script_overrides;
    if (not(known)) then begin
        display_msg(message_str(243, 100));
    end
    else begin
        display_msg(message_str(243, 101));
    end
end

procedure pickup_p_proc
begin
    set_global_var(289, 1);
end

procedure talk_p_proc
begin
    if (global_var(289) == 1) then begin
        float_msg(self_obj, message_str(669, random(100, 105)), 0);
    end
    else begin
        start_gdialog(243, self_obj, 4, -1, -1);
        gsay_start;
        call get_reaction();
        if ((global_var(26) == 1) and (Tandi_seed == 0)) then begin
            call Duc09();
        end
        else begin
            if ((global_var(26) == 2) and (Tandi_rescued == 0)) then begin
                call Duc10();
            end
            else begin
                if (not(known)) then begin
                    if (local_var(1) > 1) then begin
                        call Duc01();
                    end
                    else begin
                        call Duc06();
                    end
                end
                else begin
                    if (local_var(1) > 1) then begin
                        call Duc07();
                    end
                    else begin
                        call Duc08();
                    end
                end
            end
        end
        gsay_end;
        end_dialogue;
    end
end

procedure flee_dude
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    while (LVar1 < 5) do begin
        if (tile_distance(tile_num(dude_obj), tile_num_in_direction(tile_num(self_obj), LVar1, 3)) > LVar2) then begin
            LVar0 := tile_num_in_direction(tile_num(self_obj), LVar1, 3);
            LVar2 := tile_distance(tile_num(dude_obj), LVar0);
        end
        LVar1 := LVar1 + 1;
    end
    animate_move_obj_to_tile(self_obj, LVar0, 1);
end

procedure Duc01
begin
    gsay_reply(243, 102);
    known := 1;
    set_global_var(333, known);
    giq_option(4, 243, 103, Duc02, 50);
    giq_option(4, 243, 104, Duc03, 50);
    giq_option(-3, 243, 105, Duc04, 50);
end

procedure Duc02
begin
    gsay_reply(243, 106);
    giq_option(0, 634, 106, DucBarter, 49);
end

procedure Duc03
begin
    gsay_reply(243, 107);
    giq_option(4, 243, 108, Duc05, 50);
    giq_option(4, 243, 109, DucEnd, 50);
end

procedure Duc04
begin
    gsay_message(243, 110, 50);
end

procedure Duc05
begin
    gsay_message(243, 111, 50);
    game_time_advance(game_ticks(86400));
    if (global_var(68) < 1) then begin
        set_global_var(68, 1);
    end
    load_map(26, 1);
end

procedure Duc06
begin
    gsay_reply(243, 113);
    giq_option(4, 243, 114, Duc04, 51);
    giq_option(4, 243, message_str(243, 115) + proto_data(obj_pid(dude_obj), 1) + message_str(243, 116), Duc08, 50);
    giq_option(-3, 243, 117, Duc04, 50);
end

procedure Duc07
begin
    gsay_reply(243, 118);
    giq_option(4, 243, 119, Duc05, 50);
    giq_option(4, 243, 120, Duc02, 50);
    giq_option(4, 243, 121, DucEnd, 50);
end

procedure Duc08
begin
    gsay_reply(243, 122);
    known := 1;
    set_global_var(333, known);
    giq_option(6, 243, 123, DucEnd, 50);
    giq_option(6, 243, 124, Duc02, 50);
    giq_option(-3, 243, 125, Duc04, 50);
end

procedure Duc09
begin
    gsay_message(243, 126, 50);
    Tandi_seed := 1;
end

procedure Duc10
begin
    gsay_message(243, 127, 49);
    Tandi_rescued := 1;
    call UpReact();
end

procedure DucBarter
begin
    gdialog_mod_barter(0);
    giq_option(0, 634, 100, DucEnd, 50);
end

procedure DucEnd
begin
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, 3)) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
        if (has_trait(0, dude_obj, 39)) then begin
            if (global_var(155) > 0) then begin
                set_local_var(0, local_var(0) + global_var(155));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(155));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(155));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(155));
            end
        end
        if (global_var(158) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(634, random(100, 105));
end

