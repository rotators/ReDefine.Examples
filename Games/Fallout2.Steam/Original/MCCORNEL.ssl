variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure timed_event_p_proc;
procedure combat_p_proc;
procedure push_p_proc;
procedure Node000;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node999;
procedure Node998;
procedure Node996;

variable node_26_reply;

import variable modoc_cornelius_obj;
import variable modoc_farrel_obj;
import variable ghost_farm_slag_obj;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
    if (cur_map_index == 19) then begin
        modoc_cornelius_obj := self_obj;
    end
end

procedure critter_p_proc
begin
    if ((local_var(5) != 0) or (global_var(52) <= -1000) and obj_can_see_obj(self_obj, dude_obj)) then begin
        if (critter_is_fleeing(self_obj)) then begin
            if (anim_busy(self_obj) == 0) then begin
                if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                    if (anim_busy(self_obj) == 0) then begin
                        global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                        global_temp := (global_temp + 1) % 6;
                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                            debug_msg("flee loop: rot == " + global_temp);
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                        end
                    end
                end
            end
        end
        else begin
            attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
        end
    end
    else begin
        if (cur_map_index == 24) then begin
            if (has_trait(1, self_obj, 666)) then begin
                if (obj_can_see_obj(self_obj, ghost_farm_slag_obj)) then begin
                    attack_complex(ghost_farm_slag_obj, 0, 1, 0, 0, 30000, 0, 0);
                end
                else begin
                    if (tile_distance_objs(self_obj, dude_obj) > 9) then begin
                        if (tile_distance_objs(self_obj, dude_obj) > (9 * 2)) then begin
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(dude_obj), (has_trait(1, dude_obj, 10) + 3) % 6, 6), 1);
                        end
                        else begin
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(dude_obj), (has_trait(1, dude_obj, 10) + 3) % 6, 6), 0);
                        end
                    end
                end
            end
        end
        else begin
            if (cur_map_index == 19) then begin
                if (anim_busy(self_obj) == 0) then begin
                    if (local_var(8) != 0) then begin
                        if (modoc_farrel_obj != 0) then begin
                            if (tile_distance_objs(self_obj, modoc_farrel_obj) > 1) then begin
                                if ((tile_num(self_obj) != tile_num_in_direction(tile_num(modoc_farrel_obj), rotation_to_tile(tile_num(modoc_farrel_obj), tile_num(self_obj)), 1)) and (tile_num_in_direction(tile_num(modoc_farrel_obj), rotation_to_tile(tile_num(modoc_farrel_obj), tile_num(self_obj)), 1) != 0)) then begin
                                    if ((dest_tile == tile_num_in_direction(tile_num(modoc_farrel_obj), rotation_to_tile(tile_num(modoc_farrel_obj), tile_num(self_obj)), 1)) and (step_tile < 0)) then begin
                                        step_tile := step_tile + 1;
                                    end
                                    else begin
                                        if (anim_busy(self_obj) == 0) then begin
                                            dest_tile := tile_num_in_direction(tile_num(modoc_farrel_obj), rotation_to_tile(tile_num(modoc_farrel_obj), tile_num(self_obj)), 1);
                                            step_tile := tile_num_in_direction(tile_num(modoc_farrel_obj), rotation_to_tile(tile_num(modoc_farrel_obj), tile_num(self_obj)), 1);
                                            animate_move_obj_to_tile(self_obj, step_tile, 0);
                                            while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), tile_num_in_direction(tile_num(modoc_farrel_obj), rotation_to_tile(tile_num(modoc_farrel_obj), tile_num(self_obj)), 1)) >= tile_distance(step_tile, tile_num_in_direction(tile_num(modoc_farrel_obj), rotation_to_tile(tile_num(modoc_farrel_obj), tile_num(self_obj)), 1)))) do begin
                                                step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), (1 % tile_distance(step_tile, tile_num(self_obj))) + 1);
                                                animate_move_obj_to_tile(self_obj, step_tile, 0);
                                            end
                                            if (anim_busy(self_obj) == 0) then begin
                                                if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
                                                    if (anim_busy(self_obj) == 0) then begin
                                                        global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                        global_temp := (global_temp + 1) % 6;
                                                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                            debug_msg("flee loop: rot == " + global_temp);
                                                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                            global_temp := (global_temp + 1) % 6;
                                                        end
                                                    end
                                                end
                                                else begin
                                                    step_tile := -10;
                                                end
                                            end
                                        end
                                        else begin
                                            if (tile_distance(tile_num(self_obj), tile_num_in_direction(tile_num(modoc_farrel_obj), rotation_to_tile(tile_num(modoc_farrel_obj), tile_num(self_obj)), 1)) < tile_distance(dest_tile, tile_num_in_direction(tile_num(modoc_farrel_obj), rotation_to_tile(tile_num(modoc_farrel_obj), tile_num(self_obj)), 1))) then begin
                                                reg_anim_func(2, self_obj);
                                            end
                                        end
                                    end
                                end
                            end
                            else begin
                                if (rotation_to_tile(tile_num(self_obj), tile_num(modoc_farrel_obj)) != has_trait(1, self_obj, 10)) then begin
                                    if (anim_busy(self_obj) == 0) then begin
                                        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(modoc_farrel_obj)));
                                    end
                                end
                            end
                            if (local_var(8) == -1) then begin
                                if (obj_can_see_obj(self_obj, modoc_farrel_obj)) then begin
                                    set_local_var(8, 1);
                                    add_timer_event(self_obj, 0, 1);
                                end
                            end
                        end
                        else begin
                            if ((tile_num(self_obj) != local_var(4)) and (local_var(4) != 0)) then begin
                                if ((dest_tile == local_var(4)) and (step_tile < 0)) then begin
                                    step_tile := step_tile + 1;
                                end
                                else begin
                                    if (anim_busy(self_obj) == 0) then begin
                                        dest_tile := local_var(4);
                                        step_tile := local_var(4);
                                        animate_move_obj_to_tile(self_obj, step_tile, 0);
                                        while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), local_var(4)) >= tile_distance(step_tile, local_var(4)))) do begin
                                            step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), (3 % tile_distance(step_tile, tile_num(self_obj))) + 1);
                                            animate_move_obj_to_tile(self_obj, step_tile, 0);
                                        end
                                        if (anim_busy(self_obj) == 0) then begin
                                            if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
                                                if (anim_busy(self_obj) == 0) then begin
                                                    global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                    global_temp := (global_temp + 1) % 6;
                                                    while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                        debug_msg("flee loop: rot == " + global_temp);
                                                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                        global_temp := (global_temp + 1) % 6;
                                                    end
                                                end
                                            end
                                            else begin
                                                step_tile := -10;
                                            end
                                        end
                                    end
                                    else begin
                                        if (tile_distance(tile_num(self_obj), local_var(4)) < tile_distance(dest_tile, local_var(4))) then begin
                                            reg_anim_func(2, self_obj);
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        call Node998();
    end
end

procedure talk_p_proc
begin
    if (cur_map_index == 24) then begin
        float_msg(self_obj, message_str(195, random(1000, 1003)), 2);
    end
    else begin
        if (local_var(8) == 0) then begin
            script_overrides;
            start_gdialog(98, self_obj, 4, -1, -1);
            gsay_start;
            if ((global_var(297) bwand 65536) != 0) then begin
                call Node003();
            end
            else begin
                if (local_var(6) == 0) then begin
                    call Node000();
                end
                else begin
                    call Node002();
                end
            end
            gsay_end;
            end_dialogue;
            set_local_var(6, local_var(6) + 1);
        end
        else begin
            display_msg(550);
        end
    end
end

procedure destroy_p_proc
begin
    if (cur_map_index == 19) then begin
        modoc_cornelius_obj := 0;
    end
    set_global_var(297, global_var(297) bwor 16384);
    if (source_obj == dude_obj) then begin
        set_global_var(5, global_var(5) + 1);
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
            set_global_var(2, 1);
            set_global_var(3, 0);
        end
        if (metarule(51, self_obj) == 2) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(2, 0);
                set_global_var(1, global_var(1) + 1);
                set_global_var(0, global_var(0) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(37, 0);
                set_global_var(38, 0);
                set_global_var(39, 0);
                set_global_var(40, 0);
                set_global_var(41, 0);
                set_global_var(42, 0);
                set_global_var(43, 0);
                set_global_var(44, 0);
                set_global_var(45, 0);
                if (global_var(0) >= 1000) then begin
                    set_global_var(37, 1);
                end
                else begin
                    if (global_var(0) >= 750) then begin
                        set_global_var(38, 1);
                    end
                    else begin
                        if (global_var(0) >= 500) then begin
                            set_global_var(39, 1);
                        end
                        else begin
                            if (global_var(0) >= 250) then begin
                                set_global_var(40, 1);
                            end
                            else begin
                                if (global_var(0) > -250) then begin
                                    set_global_var(41, 1);
                                end
                                else begin
                                    if (global_var(0) > -500) then begin
                                        set_global_var(42, 1);
                                    end
                                    else begin
                                        if (global_var(0) > -750) then begin
                                            set_global_var(43, 1);
                                        end
                                        else begin
                                            if (global_var(0) > -1000) then begin
                                                set_global_var(44, 1);
                                            end
                                            else begin
                                                set_global_var(45, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(52, global_var(52) + -8);
                debug_msg("Added " + -8 + " to Town Rep");
            end
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
            set_global_var(3, 1);
            set_global_var(2, 0);
        end
        set_global_var(0, global_var(0) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(52, global_var(52) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(6) > 0) then begin
        display_msg(message_str(98, 101));
    end
    else begin
        display_msg(message_str(98, 100));
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(98, 102));
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        if ((global_var(52) <= -1000) == 0) then begin
            set_global_var(52, -1000);
        end
        call Node998();
    end
end

procedure map_enter_p_proc
begin
    if ((global_var(297) bwand 16384) != 0) then begin
        destroy_object(self_obj);
    end
    if ((cur_map_index == 19) and (elevation(self_obj) != ((global_var(297) bwand 1) != 0))) then begin
        move_to(self_obj, tile_num(self_obj), (global_var(297) bwand 1) != 0);
    end
    if (cur_map_index == 19) then begin
        modoc_cornelius_obj := self_obj;
    end
    if (metarule(14, 0)) then begin
        if (cur_map_index == 19) then begin
            critter_add_trait(self_obj, 1, 6, 28);
        end
        critter_add_trait(self_obj, 1, 5, 14);
        restock_amt := random(1, 1);
        if (obj_is_carrying_obj_pid(self_obj, 289) < restock_amt) then begin
            if (100 >= random(1, 100)) then begin
                if (obj_is_carrying_obj_pid(self_obj, 289) < restock_amt) then begin
                    restock_obj := create_object_sid(289, 0, 0, -1);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 289));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 289) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 289);
                        if ((obj_is_carrying_obj_pid(self_obj, 289) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 289) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 289);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 289);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        metarule(43, self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            destroy_object(restock_obj);
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
        end
        else begin
            if (obj_is_carrying_obj_pid(self_obj, 289) < restock_amt) then begin
                restock_obj := create_object_sid(289, 0, 0, -1);
                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 289));
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 289) > restock_amt) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 289);
                    if ((obj_is_carrying_obj_pid(self_obj, 289) - restock_amt) < removed_qty) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 289) - restock_amt;
                    end
                    if (removed_qty > 0) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 289);
                        if (obj_type(self_obj) == 1) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 289);
                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                    restock_obj := critter_inven_obj(self_obj, 0);
                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    add_obj_to_inven(self_obj, restock_obj);
                                end
                            end
                            else begin
                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                    metarule(43, self_obj);
                                end
                            end
                        end
                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                        destroy_object(restock_obj);
                    end
                    restock_obj := 0;
                    restock_amt := 0;
                end
                else begin
                    restock_obj := 0;
                end
            end
        end
        restock_amt := random(2, 2);
        if (obj_is_carrying_obj_pid(self_obj, 284) < restock_amt) then begin
            if (100 >= random(1, 100)) then begin
                if (obj_is_carrying_obj_pid(self_obj, 284) < restock_amt) then begin
                    restock_obj := create_object_sid(284, 0, 0, -1);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 284));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 284) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 284);
                        if ((obj_is_carrying_obj_pid(self_obj, 284) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 284) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 284);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 284);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        metarule(43, self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            destroy_object(restock_obj);
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
        end
        else begin
            if (obj_is_carrying_obj_pid(self_obj, 284) < restock_amt) then begin
                restock_obj := create_object_sid(284, 0, 0, -1);
                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 284));
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 284) > restock_amt) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 284);
                    if ((obj_is_carrying_obj_pid(self_obj, 284) - restock_amt) < removed_qty) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 284) - restock_amt;
                    end
                    if (removed_qty > 0) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 284);
                        if (obj_type(self_obj) == 1) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 284);
                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                    restock_obj := critter_inven_obj(self_obj, 0);
                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    add_obj_to_inven(self_obj, restock_obj);
                                end
                            end
                            else begin
                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                    metarule(43, self_obj);
                                end
                            end
                        end
                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                        destroy_object(restock_obj);
                    end
                    restock_obj := 0;
                    restock_amt := 0;
                end
                else begin
                    restock_obj := 0;
                end
            end
        end
        if (local_var(4) == 0) then begin
            set_local_var(4, tile_num(self_obj));
        end
    end
    if (metarule(22, 0) == 0) then begin
        if ((party_member_obj(obj_pid(self_obj)) != 0) == 0) then begin
            if (cur_map_index == 24) then begin
                if (((global_var(402) bwand 1024) != 0) and (global_var(310) <= 0) or ((global_var(112) == 2) or (((global_var(403) - (game_time / (10 * 60 * 60 * 24))) <= 0) or ((global_var(403) - (game_time / (10 * 60 * 60 * 24))) > 31) and (global_var(403) > 0)))) then begin
                    debug_msg("no need for attackers");
                    if (has_trait(1, self_obj, 666) == 1) then begin
                        set_obj_visibility(self_obj, 1);
                    end
                    destroy_object(self_obj);
                end
                else begin
                    if (global_var(112) == 1) then begin
                        debug_msg("showing need for attackers");
                        critter_add_trait(self_obj, 1, 6, 0);
                        if (has_trait(1, self_obj, 666) == 0) then begin
                            set_obj_visibility(self_obj, 0);
                        end
                    end
                    else begin
                        debug_msg("hiding need for attackers");
                        if (has_trait(1, self_obj, 666) == 1) then begin
                            set_obj_visibility(self_obj, 1);
                        end
                    end
                end
            end
        end
    end
end

procedure map_update_p_proc
begin
    if (cur_map_index == 19) then begin
        modoc_cornelius_obj := self_obj;
    end
end

procedure timed_event_p_proc
begin
    variable LVar0 := 0;
    if (fixed_param == 2) then begin
        float_msg(self_obj, " ", 8);
    end
    else begin
        if (modoc_farrel_obj != 0) then begin
            if (cur_map_index == 19) then begin
                modoc_cornelius_obj := self_obj;
            end
            if ((local_var(8) <= 0) or (local_var(8) > 4)) then begin
                set_local_var(8, 1);
            end
            float_msg(self_obj, message_str(98, 500 + local_var(8)), 8 + ((2 - 8) * has_trait(0, dude_obj, 22)));
            set_local_var(8, local_var(8) + 1);
            LVar0 := random(3, 5);
            add_timer_event(self_obj, game_ticks(LVar0), 2);
            add_timer_event(modoc_farrel_obj, game_ticks(LVar0), 1);
        end
        else begin
            set_local_var(8, 0);
        end
    end
end

procedure combat_p_proc
begin
    if (global_var(52) <= -1000) then begin
        if (has_trait(1, self_obj, 6) == 0) then begin
            critter_add_trait(self_obj, 1, 6, 28);
        end
    end
    else begin
        if (cur_map_index == 24) then begin
            critter_add_trait(self_obj, 1, 6, 0);
        end
    end
end

procedure push_p_proc
begin
    if (local_var(4) != tile_num(self_obj)) then begin
        script_overrides;
    end
end

procedure Node000
begin
    gsay_reply(98, 150);
    giq_option(4, 98, 151, Node010, 50);
    if ((global_var(106) >= 4) and (global_var(106) < 7) and ((global_var(105) >= 4) == 0) and ((obj_is_carrying_obj_pid(dude_obj, 257) > 0) == 0)) then begin
        giq_option(4, 98, 152, Node011, 50);
    end
    giq_option(4, 98, 153, Node012, 50);
    giq_option(4, 98, 154, Node013, 50);
    giq_option(4, 98, 155, Node014, 50);
    giq_option(-3, 98, message_str(14, 301), Node027, 50);
    giq_option(4, 98, message_str(14, 375), Node999, 50);
end

procedure Node001
begin
    gsay_reply(98, 156);
    giq_option(4, 98, 151, Node010, 50);
    if ((global_var(106) >= 4) and (global_var(106) < 7) and ((global_var(105) >= 4) == 0) and ((obj_is_carrying_obj_pid(dude_obj, 257) > 0) == 0)) then begin
        giq_option(4, 98, 152, Node011, 50);
    end
    if ((global_var(105) == 0) or (global_var(106) == 0)) then begin
        giq_option(4, 98, 153, Node012, 50);
        giq_option(4, 98, 154, Node013, 50);
        giq_option(4, 98, 155, Node014, 50);
        giq_option(4, 98, 162, Node017, 50);
    end
    if ((map_var(0) >= 1) and ((global_var(105) >= 4) and (global_var(105) < 7)) and (local_var(7) == 0)) then begin
        giq_option(4, 98, 163, Node996, 50);
    end
    if ((global_var(105) >= 4) and (global_var(105) < 7) or ((global_var(106) >= 4) and (global_var(106) < 7)) and (obj_is_carrying_obj_pid(dude_obj, 257) > 0)) then begin
        giq_option(4, 98, 164, Node024, 50);
        giq_option(4, 98, 165, Node025, 50);
    end
    giq_option(-3, 98, message_str(14, 301), Node027, 50);
    giq_option(4, 98, message_str(14, 375), Node999, 50);
end

procedure Node002
begin
    gsay_reply(98, 166);
    giq_option(4, 98, 151, Node010, 50);
    if ((global_var(106) >= 4) and (global_var(106) < 7) and ((global_var(105) >= 4) == 0) and ((obj_is_carrying_obj_pid(dude_obj, 257) > 0) == 0)) then begin
        giq_option(4, 98, 152, Node011, 50);
    end
    if ((global_var(105) >= 4) and (global_var(105) < 7) or ((global_var(106) >= 4) and (global_var(106) < 7)) and (obj_is_carrying_obj_pid(dude_obj, 257) > 0)) then begin
        giq_option(4, 98, 164, Node024, 50);
        giq_option(4, 98, 165, Node025, 50);
    end
    else begin
        giq_option(4, 98, 153, Node012, 50);
        giq_option(4, 98, 154, Node013, 50);
        giq_option(4, 98, 155, Node014, 50);
        giq_option(4, 98, 162, Node017, 50);
    end
    if ((map_var(0) >= 1) and (local_var(7) == 0)) then begin
        giq_option(4, 98, 163, Node996, 50);
    end
    giq_option(4, 98, message_str(14, random(375, 376)), Node999, 50);
    giq_option(-3, 98, 301, Node999, 50);
end

procedure Node003
begin
    gsay_reply(98, 176);
    giq_option(4, 98, 177, Node028, 50);
    giq_option(-3, 98, 225, Node028, 50);
    giq_option(4, 98, 178, Node999, 50);
    giq_option(-3, 98, message_str(14, 300), Node999, 50);
end

procedure Node010
begin
    gsay_reply(98, 179);
    giq_option(4, 98, 180, Node001, 50);
    giq_option(4, 98, message_str(14, random(375, 376)), Node999, 50);
end

procedure Node011
begin
    gsay_reply(98, 181);
    giq_option(4, 98, message_str(14, random(375, 376)), Node999, 50);
end

procedure Node012
begin
    gsay_reply(98, 182);
    giq_option(4, 98, 183, Node026, 50);
    giq_option(4, 98, message_str(14, random(375, 376)), Node999, 50);
end

procedure Node013
begin
    gsay_reply(98, 184);
    giq_option(4, 98, 185, Node026, 50);
    giq_option(4, 98, message_str(14, random(375, 376)), Node999, 50);
end

procedure Node014
begin
    gsay_reply(98, 186);
    giq_option(4, 98, 187, Node026, 50);
    giq_option(4, 98, message_str(14, random(375, 376)), Node999, 50);
end

procedure Node016
begin
    gsay_reply(98, 188);
    giq_option(4, 98, 189, Node020, 50);
    giq_option(4, 98, 190, Node021, 50);
    giq_option(4, 98, message_str(14, random(375, 376)), Node999, 50);
end

procedure Node017
begin
    gsay_reply(98, 191);
    giq_option(4, 98, 192, Node016, 50);
    giq_option(4, 98, 193, Node002, 50);
    giq_option(4, 98, 194, Node018, 50);
    giq_option(4, 98, message_str(14, random(375, 376)), Node999, 50);
end

procedure Node018
begin
    gsay_reply(98, 195);
    giq_option(4, 98, 196, Node019, 50);
    giq_option(4, 98, 197, Node999, 50);
end

procedure Node019
begin
    if (global_var(105) < 4) then begin
        set_global_var(105, 4);
    end
    gsay_reply(98, 198);
    giq_option(4, 98, message_str(14, 350), Node999, 50);
end

procedure Node020
begin
    if (global_var(105) < 4) then begin
        set_global_var(105, 4);
    end
    gsay_reply(98, 199);
    giq_option(4, 98, message_str(14, 350), Node999, 50);
end

procedure Node021
begin
    gsay_reply(98, 200);
    giq_option(4, 98, 201, Node020, 50);
    giq_option(4, 98, 202, Node999, 50);
end

procedure Node022
begin
    if (local_var(8) == 0) then begin
        set_local_var(8, -1);
    end
    if ((global_var(105) >= 4) == 0) then begin
        set_global_var(105, 3);
    end
    else begin
        if ((global_var(105) >= 7) == 0) then begin
            set_global_var(105, 8);
        end
    end
    if ((global_var(106) >= 4) == 0) then begin
        set_global_var(106, 3);
    end
    else begin
        if ((global_var(106) >= 7) == 0) then begin
            set_global_var(106, 8);
        end
    end
    set_global_var(52, global_var(52) + -10);
    set_global_var(0, global_var(0) + -5);
    debug_msg("Player gains " + -5 + " Karma Points.");
    set_global_var(37, 0);
    set_global_var(38, 0);
    set_global_var(39, 0);
    set_global_var(40, 0);
    set_global_var(41, 0);
    set_global_var(42, 0);
    set_global_var(43, 0);
    set_global_var(44, 0);
    set_global_var(45, 0);
    if (global_var(0) >= 1000) then begin
        set_global_var(37, 1);
    end
    else begin
        if (global_var(0) >= 750) then begin
            set_global_var(38, 1);
        end
        else begin
            if (global_var(0) >= 500) then begin
                set_global_var(39, 1);
            end
            else begin
                if (global_var(0) >= 250) then begin
                    set_global_var(40, 1);
                end
                else begin
                    if (global_var(0) > -250) then begin
                        set_global_var(41, 1);
                    end
                    else begin
                        if (global_var(0) > -500) then begin
                            set_global_var(42, 1);
                        end
                        else begin
                            if (global_var(0) > -750) then begin
                                set_global_var(43, 1);
                            end
                            else begin
                                if (global_var(0) > -1000) then begin
                                    set_global_var(44, 1);
                                end
                                else begin
                                    set_global_var(45, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    gsay_reply(98, 203);
    giq_option(4, 98, message_str(14, 350), Node999, 50);
end

procedure Node023
begin
    gsay_reply(98, 204);
    giq_option(4, 98, 180, Node001, 50);
    giq_option(4, 98, message_str(14, 350), Node999, 50);
end

procedure Node024
begin
    variable LVar0 := 0;
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 257);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 257);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 257);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    metarule(43, dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        destroy_object(restock_obj);
    end
    restock_obj := 0;
    restock_amt := 0;
    if ((global_var(105) >= 4) == 0) then begin
        set_global_var(105, 3);
    end
    else begin
        if ((global_var(105) >= 7) == 0) then begin
            set_global_var(105, 8);
        end
    end
    if ((global_var(106) >= 4) == 0) then begin
        set_global_var(106, 3);
    end
    else begin
        if ((global_var(106) >= 7) == 0) then begin
            set_global_var(106, 8);
        end
    end
    if (local_var(8) == 0) then begin
        set_local_var(8, -1);
    end
    set_global_var(52, global_var(52) + -10);
    set_global_var(0, global_var(0) + -5);
    debug_msg("Player gains " + -5 + " Karma Points.");
    set_global_var(37, 0);
    set_global_var(38, 0);
    set_global_var(39, 0);
    set_global_var(40, 0);
    set_global_var(41, 0);
    set_global_var(42, 0);
    set_global_var(43, 0);
    set_global_var(44, 0);
    set_global_var(45, 0);
    if (global_var(0) >= 1000) then begin
        set_global_var(37, 1);
    end
    else begin
        if (global_var(0) >= 750) then begin
            set_global_var(38, 1);
        end
        else begin
            if (global_var(0) >= 500) then begin
                set_global_var(39, 1);
            end
            else begin
                if (global_var(0) >= 250) then begin
                    set_global_var(40, 1);
                end
                else begin
                    if (global_var(0) > -250) then begin
                        set_global_var(41, 1);
                    end
                    else begin
                        if (global_var(0) > -500) then begin
                            set_global_var(42, 1);
                        end
                        else begin
                            if (global_var(0) > -750) then begin
                                set_global_var(43, 1);
                            end
                            else begin
                                if (global_var(0) > -1000) then begin
                                    set_global_var(44, 1);
                                end
                                else begin
                                    set_global_var(45, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    display_msg(message_str(98, 600));
    give_exp_points(500);
    display_msg(message_str(14, 100) + 500 + message_str(14, 101));
    gsay_reply(98, 206);
    giq_option(4, 98, message_str(14, 350), Node999, 50);
end

procedure Node025
begin
    variable LVar0 := 0;
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 257);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 257);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 257);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    metarule(43, dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        destroy_object(restock_obj);
    end
    restock_obj := 0;
    restock_amt := 0;
    if ((global_var(105) >= 4) == 0) then begin
        set_global_var(105, 3);
    end
    else begin
        if ((global_var(105) >= 7) == 0) then begin
            set_global_var(105, 8);
        end
    end
    if ((global_var(106) >= 4) == 0) then begin
        set_global_var(106, 3);
    end
    else begin
        if ((global_var(106) >= 7) == 0) then begin
            set_global_var(106, 8);
        end
    end
    set_global_var(52, global_var(52) + 1);
    set_global_var(0, global_var(0) + 10);
    debug_msg("Player gains " + 10 + " Karma Points.");
    set_global_var(37, 0);
    set_global_var(38, 0);
    set_global_var(39, 0);
    set_global_var(40, 0);
    set_global_var(41, 0);
    set_global_var(42, 0);
    set_global_var(43, 0);
    set_global_var(44, 0);
    set_global_var(45, 0);
    if (global_var(0) >= 1000) then begin
        set_global_var(37, 1);
    end
    else begin
        if (global_var(0) >= 750) then begin
            set_global_var(38, 1);
        end
        else begin
            if (global_var(0) >= 500) then begin
                set_global_var(39, 1);
            end
            else begin
                if (global_var(0) >= 250) then begin
                    set_global_var(40, 1);
                end
                else begin
                    if (global_var(0) > -250) then begin
                        set_global_var(41, 1);
                    end
                    else begin
                        if (global_var(0) > -500) then begin
                            set_global_var(42, 1);
                        end
                        else begin
                            if (global_var(0) > -750) then begin
                                set_global_var(43, 1);
                            end
                            else begin
                                if (global_var(0) > -1000) then begin
                                    set_global_var(44, 1);
                                end
                                else begin
                                    set_global_var(45, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    display_msg(message_str(98, 650));
    give_exp_points(1500);
    display_msg(message_str(14, 100) + 1500 + message_str(14, 101));
    gsay_reply(98, 207);
    giq_option(4, 98, 208, Node999, 50);
end

procedure Node026
begin
    variable LVar0 := 0;
    LVar0 := random(209, 220);
    if (LVar0 == node_26_reply) then begin
        LVar0 := LVar0 + 1;
        if (LVar0 > 220) then begin
            LVar0 := 209;
        end
    end
    node_26_reply := LVar0;
    gsay_reply(98, node_26_reply);
    giq_option(6, 98, 300, Node026, 50);
    giq_option(4, 98, 180, Node001, 50);
    giq_option(4, 98, message_str(14, 350), Node999, 50);
end

procedure Node027
begin
    gsay_reply(98, 222);
    giq_option(4, 98, message_str(14, 350), Node999, 50);
end

procedure Node028
begin
    if ((global_var(52) <= -1000) == 0) then begin
        set_global_var(52, -1000);
    end
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        gsay_reply(98, 223);
    end
    else begin
        gsay_reply(98, 224);
    end
    giq_option(1, 98, message_str(14, 350), Node998, 50);
end

procedure Node999
begin
end

procedure Node998
begin
    set_local_var(5, 1);
end

procedure Node996
begin
    set_local_var(7, 1);
    if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
        call Node022();
    end
    else begin
        call Node023();
    end
end

