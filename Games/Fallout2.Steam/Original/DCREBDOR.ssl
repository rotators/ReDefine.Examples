variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;
variable caught_thief;
variable the_follow_obj;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_exit_p_proc;
procedure timed_event_p_proc;
procedure Node998;
procedure Node999;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;

import variable becky_guard_obj;
import variable becky_door_guard_obj;
import variable becky_door_obj;

variable the_door;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
    becky_door_guard_obj := self_obj;
end

procedure critter_p_proc
begin
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        the_door := 0;
        if (becky_door_obj != 0) then begin
            if (obj_is_open(becky_door_obj) and obj_can_see_obj(self_obj, becky_door_obj)) then begin
                the_door := 1;
            end
        end
        if (((local_var(4) bwand 2) != 0) or the_door) then begin
            if (critter_is_fleeing(self_obj)) then begin
                if (anim_busy(self_obj) == 0) then begin
                    if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                        if (anim_busy(self_obj) == 0) then begin
                            global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                                debug_msg("flee loop: rot == " + global_temp);
                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                global_temp := (global_temp + 1) % 6;
                            end
                        end
                    end
                end
            end
            else begin
                attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
            end
        end
        if (becky_guard_obj == 0) then begin
            becky_guard_obj := self_obj;
        end
        else begin
            if (tile_distance_objs(self_obj, dude_obj) < tile_distance_objs(becky_guard_obj, dude_obj)) then begin
                becky_guard_obj := self_obj;
            end
        end
    end
    else begin
        if (anim_busy(self_obj) == 0) then begin
            if (local_var(5) == 3) then begin
                the_door := 0;
                if (becky_door_obj != 0) then begin
                    if (obj_is_open(becky_door_obj) and obj_can_see_obj(self_obj, becky_door_obj)) then begin
                        the_door := 1;
                    end
                end
                if (the_door) then begin
                    if (anim_busy(becky_door_obj) == 0) then begin
                        use_obj_on_obj(self_obj, becky_door_obj);
                        display_msg(message_str(984, 375));
                    end
                end
                else begin
                    if (tile_num(self_obj) != local_var(6)) then begin
                        animate_move_obj_to_tile(self_obj, local_var(6), 0);
                    end
                    else begin
                        if (has_trait(1, self_obj, 10) != local_var(7)) then begin
                            anim(self_obj, 1000, local_var(7));
                        end
                        else begin
                            if (0 == 0) then begin
                                metarule3(100, self_obj, 14, 0);
                                add_timer_event(self_obj, game_ticks(random(120, 270)), 14);
                            end
                            else begin
                                if (0 == 2) then begin
                                    if (local_var(5) != 0) then begin
                                        float_msg(self_obj, message_str(984, random(300, 307)), 8);
                                        metarule3(100, self_obj, 14, 0);
                                        add_timer_event(self_obj, game_ticks(random(15, 20)), 14);
                                    end
                                end
                                else begin
                                    if (0 == 3) then begin
                                        if (local_var(5) == 2) then begin
                                            animate_move_obj_to_tile(self_obj, 17267, 0);
                                            float_msg(self_obj, message_str(984, random(350, 357)), 8);
                                        end
                                    end
                                end
                            end
                            debug_msg("guard post state == " + 0);
                            set_local_var(5, 0);
                        end
                    end
                end
            end
            else begin
                if (local_var(5) == 1) then begin
                    if (tile_distance(tile_num(self_obj), 17267) > 1) then begin
                        animate_move_obj_to_tile(self_obj, 17267, 0);
                    end
                    else begin
                        if (2 == 0) then begin
                            metarule3(100, self_obj, 14, 0);
                            add_timer_event(self_obj, game_ticks(random(120, 270)), 14);
                        end
                        else begin
                            if (2 == 2) then begin
                                if (local_var(5) != 2) then begin
                                    float_msg(self_obj, message_str(984, random(300, 307)), 8);
                                    metarule3(100, self_obj, 14, 0);
                                    add_timer_event(self_obj, game_ticks(random(15, 20)), 14);
                                end
                            end
                            else begin
                                if (2 == 3) then begin
                                    if (local_var(5) == 2) then begin
                                        animate_move_obj_to_tile(self_obj, 17267, 0);
                                        float_msg(self_obj, message_str(984, random(350, 357)), 8);
                                    end
                                end
                            end
                        end
                        debug_msg("guard post state == " + 2);
                        set_local_var(5, 2);
                    end
                end
            end
        end
    end
end

procedure pickup_p_proc
begin
    if ((source_obj == dude_obj) or (party_member_obj(obj_pid(source_obj)) != 0)) then begin
        caught_thief := 0;
        if (cur_map_index == 6) then begin
            if (tile_in_tile_rect(16679, 16667, 19479, 19467, source_obj) and (becky_guard_obj != 0)) then begin
                metarule3(100, becky_guard_obj, 12, 0);
                add_timer_event(becky_guard_obj, 0, 12);
            end
        end
        if (caught_thief == 0) then begin
            call Node998();
        end
    end
end

procedure talk_p_proc
begin
    if ((local_var(4) bwand 2) != 0) then begin
        call Node001();
    end
    else begin
        call Node002();
    end
    set_local_var(4, local_var(4) bwor 1);
end

procedure destroy_p_proc
begin
    becky_door_guard_obj := 0;
    if (becky_guard_obj == self_obj) then begin
        becky_guard_obj := 0;
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(984, 100 + ((global_var(447) bwand 128) != 0)));
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(984, 150));
    set_local_var(4, local_var(4) bwor 4);
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(4, local_var(4) bwor 8);
        set_local_var(4, local_var(4) bwor 2);
    end
end

procedure map_enter_p_proc
begin
    becky_door_guard_obj := self_obj;
    if ((global_var(445) bwand 16) != 0) then begin
        destroy_object(self_obj);
    end
    else begin
        if (metarule(22, 0) == 0) then begin
            if (metarule(14, 0)) then begin
                critter_add_trait(self_obj, 1, 6, 9);
                critter_add_trait(self_obj, 1, 5, 22);
                set_local_var(6, tile_num(self_obj));
                set_local_var(7, has_trait(1, self_obj, 10));
            end
            if (3 == 0) then begin
                metarule3(100, self_obj, 14, 0);
                add_timer_event(self_obj, game_ticks(random(120, 270)), 14);
            end
            else begin
                if (3 == 2) then begin
                    if (local_var(5) != 3) then begin
                        float_msg(self_obj, message_str(984, random(300, 307)), 8);
                        metarule3(100, self_obj, 14, 0);
                        add_timer_event(self_obj, game_ticks(random(15, 20)), 14);
                    end
                end
                else begin
                    if (3 == 3) then begin
                        if (local_var(5) == 2) then begin
                            animate_move_obj_to_tile(self_obj, 17267, 0);
                            float_msg(self_obj, message_str(984, random(350, 357)), 8);
                        end
                    end
                end
            end
            debug_msg("guard post state == " + 3);
            set_local_var(5, 3);
        end
    end
end

procedure map_exit_p_proc
begin
end

procedure timed_event_p_proc
begin
    if (fixed_param == 6) then begin
        call Node003();
    end
    else begin
        if (fixed_param == 13) then begin
            call Node004();
            if (critter_is_fleeing(self_obj)) then begin
                if (anim_busy(self_obj) == 0) then begin
                    if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                        if (anim_busy(self_obj) == 0) then begin
                            global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                                debug_msg("flee loop: rot == " + global_temp);
                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                global_temp := (global_temp + 1) % 6;
                            end
                        end
                    end
                end
            end
            else begin
                attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
            end
        end
        else begin
            if (fixed_param == 12) then begin
                call Node005();
                if (critter_is_fleeing(self_obj)) then begin
                    if (anim_busy(self_obj) == 0) then begin
                        if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                            if (anim_busy(self_obj) == 0) then begin
                                global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                global_temp := (global_temp + 1) % 6;
                                while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                                    debug_msg("flee loop: rot == " + global_temp);
                                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                    global_temp := (global_temp + 1) % 6;
                                end
                            end
                        end
                    end
                end
                else begin
                    attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
                end
            end
            else begin
                if (fixed_param == 14) then begin
                    if (local_var(5) == 0) then begin
                        if (1 == 0) then begin
                            metarule3(100, self_obj, 14, 0);
                            add_timer_event(self_obj, game_ticks(random(120, 270)), 14);
                        end
                        else begin
                            if (1 == 2) then begin
                                if (local_var(5) != 1) then begin
                                    float_msg(self_obj, message_str(984, random(300, 307)), 8);
                                    metarule3(100, self_obj, 14, 0);
                                    add_timer_event(self_obj, game_ticks(random(15, 20)), 14);
                                end
                            end
                            else begin
                                if (1 == 3) then begin
                                    if (local_var(5) == 2) then begin
                                        animate_move_obj_to_tile(self_obj, 17267, 0);
                                        float_msg(self_obj, message_str(984, random(350, 357)), 8);
                                    end
                                end
                            end
                        end
                        debug_msg("guard post state == " + 1);
                        set_local_var(5, 1);
                    end
                    else begin
                        if (3 == 0) then begin
                            metarule3(100, self_obj, 14, 0);
                            add_timer_event(self_obj, game_ticks(random(120, 270)), 14);
                        end
                        else begin
                            if (3 == 2) then begin
                                if (local_var(5) != 3) then begin
                                    float_msg(self_obj, message_str(984, random(300, 307)), 8);
                                    metarule3(100, self_obj, 14, 0);
                                    add_timer_event(self_obj, game_ticks(random(15, 20)), 14);
                                end
                            end
                            else begin
                                if (3 == 3) then begin
                                    if (local_var(5) == 2) then begin
                                        animate_move_obj_to_tile(self_obj, 17267, 0);
                                        float_msg(self_obj, message_str(984, random(350, 357)), 8);
                                    end
                                end
                            end
                        end
                        debug_msg("guard post state == " + 3);
                        set_local_var(5, 3);
                    end
                end
            end
        end
    end
end

procedure Node998
begin
    set_local_var(4, local_var(4) bwor 2);
end

procedure Node999
begin
end

procedure Node001
begin
    float_msg(self_obj, message_str(984, 200), 8);
    if (critter_is_fleeing(self_obj)) then begin
        if (anim_busy(self_obj) == 0) then begin
            if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                if (anim_busy(self_obj) == 0) then begin
                    global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                    global_temp := (global_temp + 1) % 6;
                    while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                        debug_msg("flee loop: rot == " + global_temp);
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                        global_temp := (global_temp + 1) % 6;
                    end
                end
            end
        end
    end
    else begin
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
end

procedure Node002
begin
    float_msg(self_obj, message_str(984, random(210, 215)), 8);
end

procedure Node003
begin
    float_msg(self_obj, message_str(984, random(230, 234)), 8);
end

procedure Node004
begin
    float_msg(self_obj, message_str(984, 240), 8);
end

procedure Node005
begin
    float_msg(self_obj, message_str(984, 250), 8);
end

