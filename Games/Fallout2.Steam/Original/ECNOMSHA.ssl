procedure start;

variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure combat_p_proc;
procedure Node998;
procedure Node999;

variable n1count;
variable healing_price;
variable cripple_price;
variable radation_price;
variable poison_price;
variable radation_heal_amt;
variable poison_heal_amt;
variable powder_price;

procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure NodeFleeing;
procedure NodeFighting;
procedure NodeCurePoison;
procedure NodeCureHits;
procedure NodeCureCripple;
procedure NodeCombine;


procedure start
begin
end

procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure critter_p_proc
begin
    if ((local_var(1) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(1, 1);
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(1, 2);
    end
end

procedure talk_p_proc
begin
    start_gdialog(770, self_obj, 4, -1, -1);
    gsay_start;
    call Node001();
    gsay_end;
    end_dialogue;
    set_local_var(0, 1);
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(5, global_var(5) + 1);
        if (metarule(51, self_obj) == 2) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(2, 0);
                set_global_var(1, global_var(1) + 1);
                set_global_var(0, global_var(0) - -15);
                set_global_var(37, 0);
                set_global_var(38, 0);
                set_global_var(39, 0);
                set_global_var(40, 0);
                set_global_var(41, 0);
                set_global_var(42, 0);
                set_global_var(43, 0);
                set_global_var(44, 0);
                set_global_var(45, 0);
                if (global_var(0) >= 1000) then begin
                    set_global_var(37, 1);
                end
                else begin
                    if (global_var(0) >= 750) then begin
                        set_global_var(38, 1);
                    end
                    else begin
                        if (global_var(0) >= 500) then begin
                            set_global_var(39, 1);
                        end
                        else begin
                            if (global_var(0) >= 250) then begin
                                set_global_var(40, 1);
                            end
                            else begin
                                if (global_var(0) > -250) then begin
                                    set_global_var(41, 1);
                                end
                                else begin
                                    if (global_var(0) > -500) then begin
                                        set_global_var(42, 1);
                                    end
                                    else begin
                                        if (global_var(0) > -750) then begin
                                            set_global_var(43, 1);
                                        end
                                        else begin
                                            if (global_var(0) > -1000) then begin
                                                set_global_var(44, 1);
                                            end
                                            else begin
                                                set_global_var(45, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
            set_global_var(2, 1);
            set_global_var(3, 0);
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
            set_global_var(3, 1);
            set_global_var(2, 0);
        end
        set_global_var(0, global_var(0) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(0) == 0) then begin
        display_msg(message_str(770, 100));
    end
    else begin
        display_msg(message_str(770, 101));
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(770, 102));
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(2, 1);
    end
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, 1, 6, 129);
    critter_add_trait(self_obj, 1, 5, 24);
    restock_amt := random(2, 5);
    if (obj_is_carrying_obj_pid(self_obj, 7) < restock_amt) then begin
        if (30 >= random(1, 100)) then begin
            if (obj_is_carrying_obj_pid(self_obj, 7) < restock_amt) then begin
                restock_obj := create_object_sid(7, 0, 0, -1);
                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 7));
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 7) > restock_amt) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 7);
                    if ((obj_is_carrying_obj_pid(self_obj, 7) - restock_amt) < removed_qty) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 7) - restock_amt;
                    end
                    if (removed_qty > 0) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 7);
                        if (obj_type(self_obj) == 1) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 7);
                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                    restock_obj := critter_inven_obj(self_obj, 0);
                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    add_obj_to_inven(self_obj, restock_obj);
                                end
                            end
                            else begin
                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                    metarule(43, self_obj);
                                end
                            end
                        end
                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                        destroy_object(restock_obj);
                    end
                    restock_obj := 0;
                    restock_amt := 0;
                end
                else begin
                    restock_obj := 0;
                end
            end
        end
    end
    else begin
        if (obj_is_carrying_obj_pid(self_obj, 7) < restock_amt) then begin
            restock_obj := create_object_sid(7, 0, 0, -1);
            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 7));
        end
        else begin
            if (obj_is_carrying_obj_pid(self_obj, 7) > restock_amt) then begin
                removed_qty := obj_is_carrying_obj_pid(self_obj, 7);
                if ((obj_is_carrying_obj_pid(self_obj, 7) - restock_amt) < removed_qty) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 7) - restock_amt;
                end
                if (removed_qty > 0) then begin
                    restock_obj := obj_carrying_pid_obj(self_obj, 7);
                    if (obj_type(self_obj) == 1) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 7);
                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                restock_obj := critter_inven_obj(self_obj, 0);
                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                rm_obj_from_inven(self_obj, restock_obj);
                                add_obj_to_inven(self_obj, restock_obj);
                            end
                        end
                        else begin
                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                metarule(43, self_obj);
                            end
                        end
                    end
                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                    destroy_object(restock_obj);
                end
                restock_obj := 0;
                restock_amt := 0;
            end
            else begin
                restock_obj := 0;
            end
        end
    end
    restock_amt := random(5, 7);
    if (obj_is_carrying_obj_pid(self_obj, 5) < restock_amt) then begin
        if (40 >= random(1, 100)) then begin
            if (obj_is_carrying_obj_pid(self_obj, 5) < restock_amt) then begin
                restock_obj := create_object_sid(5, 0, 0, -1);
                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 5));
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 5) > restock_amt) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 5);
                    if ((obj_is_carrying_obj_pid(self_obj, 5) - restock_amt) < removed_qty) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 5) - restock_amt;
                    end
                    if (removed_qty > 0) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 5);
                        if (obj_type(self_obj) == 1) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 5);
                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                    restock_obj := critter_inven_obj(self_obj, 0);
                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    add_obj_to_inven(self_obj, restock_obj);
                                end
                            end
                            else begin
                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                    metarule(43, self_obj);
                                end
                            end
                        end
                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                        destroy_object(restock_obj);
                    end
                    restock_obj := 0;
                    restock_amt := 0;
                end
                else begin
                    restock_obj := 0;
                end
            end
        end
    end
    else begin
        if (obj_is_carrying_obj_pid(self_obj, 5) < restock_amt) then begin
            restock_obj := create_object_sid(5, 0, 0, -1);
            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 5));
        end
        else begin
            if (obj_is_carrying_obj_pid(self_obj, 5) > restock_amt) then begin
                removed_qty := obj_is_carrying_obj_pid(self_obj, 5);
                if ((obj_is_carrying_obj_pid(self_obj, 5) - restock_amt) < removed_qty) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 5) - restock_amt;
                end
                if (removed_qty > 0) then begin
                    restock_obj := obj_carrying_pid_obj(self_obj, 5);
                    if (obj_type(self_obj) == 1) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 5);
                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                restock_obj := critter_inven_obj(self_obj, 0);
                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                rm_obj_from_inven(self_obj, restock_obj);
                                add_obj_to_inven(self_obj, restock_obj);
                            end
                        end
                        else begin
                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                metarule(43, self_obj);
                            end
                        end
                    end
                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                    destroy_object(restock_obj);
                end
                restock_obj := 0;
                restock_amt := 0;
            end
            else begin
                restock_obj := 0;
            end
        end
    end
    restock_amt := random(3, 5);
    if (obj_is_carrying_obj_pid(self_obj, 4) < restock_amt) then begin
        if (30 >= random(1, 100)) then begin
            if (obj_is_carrying_obj_pid(self_obj, 4) < restock_amt) then begin
                restock_obj := create_object_sid(4, 0, 0, -1);
                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 4));
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 4) > restock_amt) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 4);
                    if ((obj_is_carrying_obj_pid(self_obj, 4) - restock_amt) < removed_qty) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 4) - restock_amt;
                    end
                    if (removed_qty > 0) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 4);
                        if (obj_type(self_obj) == 1) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 4);
                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                    restock_obj := critter_inven_obj(self_obj, 0);
                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    add_obj_to_inven(self_obj, restock_obj);
                                end
                            end
                            else begin
                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                    metarule(43, self_obj);
                                end
                            end
                        end
                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                        destroy_object(restock_obj);
                    end
                    restock_obj := 0;
                    restock_amt := 0;
                end
                else begin
                    restock_obj := 0;
                end
            end
        end
    end
    else begin
        if (obj_is_carrying_obj_pid(self_obj, 4) < restock_amt) then begin
            restock_obj := create_object_sid(4, 0, 0, -1);
            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 4));
        end
        else begin
            if (obj_is_carrying_obj_pid(self_obj, 4) > restock_amt) then begin
                removed_qty := obj_is_carrying_obj_pid(self_obj, 4);
                if ((obj_is_carrying_obj_pid(self_obj, 4) - restock_amt) < removed_qty) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 4) - restock_amt;
                end
                if (removed_qty > 0) then begin
                    restock_obj := obj_carrying_pid_obj(self_obj, 4);
                    if (obj_type(self_obj) == 1) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 4);
                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                restock_obj := critter_inven_obj(self_obj, 0);
                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                rm_obj_from_inven(self_obj, restock_obj);
                                add_obj_to_inven(self_obj, restock_obj);
                            end
                        end
                        else begin
                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                metarule(43, self_obj);
                            end
                        end
                    end
                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                    destroy_object(restock_obj);
                end
                restock_obj := 0;
                restock_amt := 0;
            end
            else begin
                restock_obj := 0;
            end
        end
    end
    restock_amt := random(4, 6);
    if (obj_is_carrying_obj_pid(self_obj, 320) < restock_amt) then begin
        if (80 >= random(1, 100)) then begin
            if (obj_is_carrying_obj_pid(self_obj, 320) < restock_amt) then begin
                restock_obj := create_object_sid(320, 0, 0, -1);
                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 320));
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 320) > restock_amt) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 320);
                    if ((obj_is_carrying_obj_pid(self_obj, 320) - restock_amt) < removed_qty) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 320) - restock_amt;
                    end
                    if (removed_qty > 0) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 320);
                        if (obj_type(self_obj) == 1) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 320);
                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                    restock_obj := critter_inven_obj(self_obj, 0);
                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    add_obj_to_inven(self_obj, restock_obj);
                                end
                            end
                            else begin
                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                    metarule(43, self_obj);
                                end
                            end
                        end
                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                        destroy_object(restock_obj);
                    end
                    restock_obj := 0;
                    restock_amt := 0;
                end
                else begin
                    restock_obj := 0;
                end
            end
        end
    end
    else begin
        if (obj_is_carrying_obj_pid(self_obj, 320) < restock_amt) then begin
            restock_obj := create_object_sid(320, 0, 0, -1);
            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 320));
        end
        else begin
            if (obj_is_carrying_obj_pid(self_obj, 320) > restock_amt) then begin
                removed_qty := obj_is_carrying_obj_pid(self_obj, 320);
                if ((obj_is_carrying_obj_pid(self_obj, 320) - restock_amt) < removed_qty) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 320) - restock_amt;
                end
                if (removed_qty > 0) then begin
                    restock_obj := obj_carrying_pid_obj(self_obj, 320);
                    if (obj_type(self_obj) == 1) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 320);
                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                restock_obj := critter_inven_obj(self_obj, 0);
                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                rm_obj_from_inven(self_obj, restock_obj);
                                add_obj_to_inven(self_obj, restock_obj);
                            end
                        end
                        else begin
                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                metarule(43, self_obj);
                            end
                        end
                    end
                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                    destroy_object(restock_obj);
                end
                restock_obj := 0;
                restock_amt := 0;
            end
            else begin
                restock_obj := 0;
            end
        end
    end
    restock_amt := random(5, 6);
    if (obj_is_carrying_obj_pid(self_obj, 285) < restock_amt) then begin
        if (10 >= random(1, 100)) then begin
            if (obj_is_carrying_obj_pid(self_obj, 285) < restock_amt) then begin
                restock_obj := create_object_sid(285, 0, 0, -1);
                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 285));
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 285) > restock_amt) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 285);
                    if ((obj_is_carrying_obj_pid(self_obj, 285) - restock_amt) < removed_qty) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 285) - restock_amt;
                    end
                    if (removed_qty > 0) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 285);
                        if (obj_type(self_obj) == 1) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 285);
                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                    restock_obj := critter_inven_obj(self_obj, 0);
                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    add_obj_to_inven(self_obj, restock_obj);
                                end
                            end
                            else begin
                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                    metarule(43, self_obj);
                                end
                            end
                        end
                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                        destroy_object(restock_obj);
                    end
                    restock_obj := 0;
                    restock_amt := 0;
                end
                else begin
                    restock_obj := 0;
                end
            end
        end
    end
    else begin
        if (obj_is_carrying_obj_pid(self_obj, 285) < restock_amt) then begin
            restock_obj := create_object_sid(285, 0, 0, -1);
            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 285));
        end
        else begin
            if (obj_is_carrying_obj_pid(self_obj, 285) > restock_amt) then begin
                removed_qty := obj_is_carrying_obj_pid(self_obj, 285);
                if ((obj_is_carrying_obj_pid(self_obj, 285) - restock_amt) < removed_qty) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 285) - restock_amt;
                end
                if (removed_qty > 0) then begin
                    restock_obj := obj_carrying_pid_obj(self_obj, 285);
                    if (obj_type(self_obj) == 1) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 285);
                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                restock_obj := critter_inven_obj(self_obj, 0);
                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                rm_obj_from_inven(self_obj, restock_obj);
                                add_obj_to_inven(self_obj, restock_obj);
                            end
                        end
                        else begin
                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                metarule(43, self_obj);
                            end
                        end
                    end
                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                    destroy_object(restock_obj);
                end
                restock_obj := 0;
                restock_amt := 0;
            end
            else begin
                restock_obj := 0;
            end
        end
    end
    restock_amt := random(5, 6);
    if (obj_is_carrying_obj_pid(self_obj, 276) < restock_amt) then begin
        if (20 >= random(1, 100)) then begin
            if (obj_is_carrying_obj_pid(self_obj, 276) < restock_amt) then begin
                restock_obj := create_object_sid(276, 0, 0, -1);
                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 276));
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 276) > restock_amt) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 276);
                    if ((obj_is_carrying_obj_pid(self_obj, 276) - restock_amt) < removed_qty) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 276) - restock_amt;
                    end
                    if (removed_qty > 0) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 276);
                        if (obj_type(self_obj) == 1) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 276);
                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                    restock_obj := critter_inven_obj(self_obj, 0);
                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    add_obj_to_inven(self_obj, restock_obj);
                                end
                            end
                            else begin
                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                    metarule(43, self_obj);
                                end
                            end
                        end
                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                        destroy_object(restock_obj);
                    end
                    restock_obj := 0;
                    restock_amt := 0;
                end
                else begin
                    restock_obj := 0;
                end
            end
        end
    end
    else begin
        if (obj_is_carrying_obj_pid(self_obj, 276) < restock_amt) then begin
            restock_obj := create_object_sid(276, 0, 0, -1);
            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 276));
        end
        else begin
            if (obj_is_carrying_obj_pid(self_obj, 276) > restock_amt) then begin
                removed_qty := obj_is_carrying_obj_pid(self_obj, 276);
                if ((obj_is_carrying_obj_pid(self_obj, 276) - restock_amt) < removed_qty) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 276) - restock_amt;
                end
                if (removed_qty > 0) then begin
                    restock_obj := obj_carrying_pid_obj(self_obj, 276);
                    if (obj_type(self_obj) == 1) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 276);
                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                restock_obj := critter_inven_obj(self_obj, 0);
                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                rm_obj_from_inven(self_obj, restock_obj);
                                add_obj_to_inven(self_obj, restock_obj);
                            end
                        end
                        else begin
                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                metarule(43, self_obj);
                            end
                        end
                    end
                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                    destroy_object(restock_obj);
                end
                restock_obj := 0;
                restock_amt := 0;
            end
            else begin
                restock_obj := 0;
            end
        end
    end
    healing_price := random(100, 300);
    cripple_price := random(300, 400);
    radation_price := random(200, 300);
    poison_price := random(50, 200);
    radation_heal_amt := random(20, 100);
    poison_heal_amt := random(30, 100);
    powder_price := random(20, 50);
end

procedure combat_p_proc
begin
    if (critter_is_fleeing(self_obj)) then begin
        if (random(1, 100) <= 40) then begin
            call NodeFleeing();
        end
        else begin
            if (random(1, 100) <= 40) then begin
                call NodeFighting();
            end
        end
    end
end

procedure Node998
begin
    set_local_var(1, 2);
end

procedure Node999
begin
end

procedure Node001
begin
    n1count := n1count + 1;
    if (n1count == 1) then begin
        gsay_reply(770, 103);
    end
    else begin
        gsay_reply(770, 104);
    end
    if ((get_critter_stat(dude_obj, 35) != get_critter_stat(dude_obj, 7)) or ((critter_state(dude_obj) bwand 4) or (critter_state(dude_obj) bwand 8) or (critter_state(dude_obj) bwand 16) or (critter_state(dude_obj) bwand 32)) or get_poison(dude_obj)) then begin
        giq_option(4, 770, 105, Node002, 50);
    end
    giq_option(4, 770, 106, Node008, 50);
    giq_option(4, 770, 107, Node003, 50);
    giq_option(-3, 770, 108, Node011, 50);
end

procedure Node002
begin
    gsay_reply(770, 109);
    giq_option(4, 770, 110, Node003, 50);
end

procedure Node003
begin
    variable LVar0 := 0;
    LVar0 := message_str(770, 111);
    if ((critter_state(dude_obj) bwand 4) or (critter_state(dude_obj) bwand 8) or (critter_state(dude_obj) bwand 16) or (critter_state(dude_obj) bwand 32)) then begin
        LVar0 := LVar0 + (" " + message_str(770, 139));
    end
    if (get_critter_stat(dude_obj, 35) < get_critter_stat(dude_obj, 7)) then begin
        LVar0 := LVar0 + (" " + message_str(770, 137));
    end
    if (get_critter_stat(dude_obj, 37)) then begin
        LVar0 := LVar0 + (" " + message_str(770, 138));
    end
    if (get_poison(dude_obj)) then begin
        LVar0 := LVar0 + (" " + message_str(770, 136));
    end
    gsay_reply(770, LVar0);
    giq_option(4, 770, 112, Node004, 50);
end

procedure Node004
begin
    variable LVar0 := 0;
    LVar0 := message_str(770, 113);
    if ((critter_state(dude_obj) bwand 4) or (critter_state(dude_obj) bwand 8) or (critter_state(dude_obj) bwand 16) or (critter_state(dude_obj) bwand 32)) then begin
        LVar0 := LVar0 + (" " + message_str(770, 141) + cripple_price);
    end
    if (get_critter_stat(dude_obj, 35) < get_critter_stat(dude_obj, 7)) then begin
        LVar0 := LVar0 + (" " + message_str(770, 142) + healing_price);
    end
    if (get_poison(dude_obj)) then begin
        LVar0 := LVar0 + (" " + message_str(770, 140) + poison_price);
    end
    gsay_reply(770, LVar0);
    if (get_poison(dude_obj)) then begin
        giq_option(4, 770, 114, NodeCurePoison, 50);
    end
    if (get_critter_stat(dude_obj, 35) < get_critter_stat(dude_obj, 7)) then begin
        giq_option(4, 770, 115, NodeCureHits, 50);
    end
    if ((critter_state(dude_obj) bwand 4) or (critter_state(dude_obj) bwand 8) or (critter_state(dude_obj) bwand 16) or (critter_state(dude_obj) bwand 32)) then begin
        giq_option(4, 770, 116, NodeCureCripple, 50);
    end
    giq_option(4, 770, 117, Node999, 50);
end

procedure Node005
begin
    gsay_reply(770, 118);
    if (get_poison(dude_obj) or (get_critter_stat(dude_obj, 35) < get_critter_stat(dude_obj, 7)) or ((critter_state(dude_obj) bwand 4) or (critter_state(dude_obj) bwand 8) or (critter_state(dude_obj) bwand 16) or (critter_state(dude_obj) bwand 32))) then begin
        giq_option(4, 770, 121, Node004, 50);
    end
    giq_option(4, 770, 122, Node999, 50);
end

procedure Node006
begin
    gsay_reply(770, 123);
    giq_option(4, 770, 124, Node004, 50);
end

procedure Node007
begin
    gsay_reply(770, 125);
    giq_option(4, 770, 126, Node004, 50);
end

procedure Node008
begin
    gsay_reply(770, message_str(770, 127) + " " + powder_price + " " + message_str(770, 150));
    if (obj_carrying_pid_obj(dude_obj, 272) and obj_carrying_pid_obj(dude_obj, 271)) then begin
        giq_option(4, 770, 128, NodeCombine, 50);
    end
    giq_option(4, 770, 129, Node999, 50);
end

procedure Node009
begin
    gsay_reply(770, 130);
    giq_option(4, 770, 131, Node999, 50);
end

procedure Node010
begin
    gsay_reply(770, 132);
    giq_option(4, 770, 133, Node999, 50);
end

procedure Node011
begin
    gsay_reply(770, 134);
    giq_option(4, 770, 135, Node999, 50);
end

procedure NodeFleeing
begin
    float_msg(self_obj, message_str(770, random(120, 122)), 8);
end

procedure NodeFighting
begin
    float_msg(self_obj, message_str(770, random(116, 119)), 2);
end

procedure NodeCurePoison
begin
    if (item_caps_total(dude_obj) >= poison_price) then begin
        item_caps_adjust(dude_obj, -poison_price);
        item_caps_adjust(self_obj, poison_price);
        if (poison_heal_amt > get_poison(dude_obj)) then begin
            poison(dude_obj, -get_poison(dude_obj));
        end
        else begin
            poison(dude_obj, -poison_heal_amt);
        end
        call Node005();
    end
    else begin
        call Node010();
    end
end

procedure NodeCureHits
begin
    if (item_caps_total(dude_obj) >= healing_price) then begin
        item_caps_adjust(dude_obj, -healing_price);
        item_caps_adjust(self_obj, healing_price);
        critter_heal(dude_obj, get_critter_stat(dude_obj, 7) - get_critter_stat(dude_obj, 35));
        call Node005();
    end
    else begin
        call Node010();
    end
end

procedure NodeCureCripple
begin
    if (item_caps_total(dude_obj) >= cripple_price) then begin
        item_caps_adjust(dude_obj, -cripple_price);
        item_caps_adjust(self_obj, cripple_price);
        critter_injure(dude_obj, 4 bwor 8 bwor 16 bwor 32 bwor 8388608);
        call Node005();
    end
    else begin
        call Node010();
    end
end

procedure NodeCombine
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    variable LVar3 := 0;
    variable LVar4 := 0;
    LVar2 := obj_is_carrying_obj_pid(dude_obj, 272);
    LVar3 := obj_is_carrying_obj_pid(dude_obj, 271);
    LVar0 := obj_carrying_pid_obj(dude_obj, 272);
    LVar1 := obj_carrying_pid_obj(dude_obj, 271);
    item_caps_adjust(dude_obj, -powder_price);
    item_caps_adjust(dude_obj, powder_price);
    while ((LVar2 > 0) and (LVar3 > 0)) do begin
        LVar4 := LVar4 + 1;
        LVar2 := LVar2 - 1;
        LVar3 := LVar3 - 1;
    end
    if (LVar4 > 0) then begin
        LVar2 := rm_mult_objs_from_inven(dude_obj, LVar0, LVar0);
        LVar3 := rm_mult_objs_from_inven(dude_obj, LVar1, LVar4);
        add_mult_objs_to_inven(dude_obj, create_object_sid(273, tile_num(self_obj), 0, -1), LVar4);
    end
    call Node009();
end

