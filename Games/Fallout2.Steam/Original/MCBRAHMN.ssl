variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_exit_p_proc;
procedure timed_event_p_proc;

import variable dog_object;
import variable brahmin_object;

procedure combat_p_proc;
procedure use_obj_on_p_proc;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if (brahmin_object == self_obj) then begin
        if (critter_state(self_obj) bwand 1) then begin
            brahmin_object := 0;
        end
    end
    else begin
        if (brahmin_object == 0) then begin
            brahmin_object := self_obj;
        end
        else begin
            if (dog_object == 0) then begin
            end
            else begin
                if ((global_var(402) bwand 32768) != 0) then begin
                    if (tile_distance_objs(self_obj, dog_object) < tile_distance_objs(brahmin_object, dog_object)) then begin
                        brahmin_object := self_obj;
                    end
                end
                else begin
                    if (tile_distance_objs(self_obj, dog_object) > tile_distance_objs(brahmin_object, dog_object)) then begin
                        brahmin_object := self_obj;
                    end
                    else begin
                        if (anim_busy(self_obj) == 0) then begin
                            if (tile_distance(tile_num(self_obj), local_var(0)) > 0) then begin
                                if ((critter_state(self_obj) bwand 2) == 0) then begin
                                    animate_move_obj_to_tile(self_obj, local_var(0), 0);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure pickup_p_proc
begin
end

procedure talk_p_proc
begin
end

procedure destroy_p_proc
begin
    if (self_obj == brahmin_object) then begin
        brahmin_object := 0;
    end
    set_global_var(115, global_var(115) - 1);
    if (global_var(115) <= 0) then begin
        set_global_var(115, -1);
    end
    debug_msg("current brahmin status == " + global_var(115));
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(203, 100));
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(203, 105));
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 12) then begin
        script_overrides;
        display_msg(message_str(203, 101 + is_success(roll_vs_skill(dude_obj, action_being_used, 0))));
    end
    else begin
        if (action_being_used == 10) then begin
            script_overrides;
        end
    end
end

procedure damage_p_proc
begin
    if (source_obj) then begin
        if ((source_obj == dude_obj) or (party_member_obj(obj_pid(source_obj)) != 0)) then begin
        end
        else begin
            if (((local_var(1) bwand 512) != 0) == 0) then begin
                if (brahmin_object == self_obj) then begin
                    brahmin_object := 0;
                end
            end
            set_local_var(1, local_var(1) bwor 512);
        end
    end
end

procedure map_enter_p_proc
begin
    if ((cur_map_index == 19) and (elevation(self_obj) != ((global_var(297) bwand 1) != 0))) then begin
        move_to(self_obj, tile_num(self_obj), (global_var(297) bwand 1) != 0);
    end
    if (metarule(22, 0) == 0) then begin
        if (local_var(0) == 0) then begin
            set_local_var(0, tile_num(self_obj));
            set_global_var(115, global_var(115) + 1);
        end
        if (metarule(14, 0)) then begin
            critter_add_trait(self_obj, 1, 6, 32);
            critter_add_trait(self_obj, 1, 5, 123);
        end
        metarule3(100, self_obj, 1, 0);
        add_timer_event(self_obj, game_ticks(random(15, 90)), 1);
        metarule3(100, self_obj, 2, 0);
        add_timer_event(self_obj, game_ticks(random(5, 15)), 2);
        metarule3(100, self_obj, 3, 0);
        add_timer_event(self_obj, game_ticks(random(0, 300)), 3);
    end
end

procedure map_exit_p_proc
begin
end

procedure timed_event_p_proc
begin
    variable LVar0 := 0;
    if (fixed_param == 1) then begin
        if (combat_is_initialized == 0) then begin
            set_local_var(0, tile_num_in_direction(local_var(0), random(0, 5), random(1, 3)));
        end
        metarule3(100, self_obj, 1, 0);
        add_timer_event(self_obj, game_ticks(random(45, 90)), 1);
    end
    if (fixed_param == 2) then begin
        if (combat_is_initialized == 0) then begin
            float_msg(self_obj, message_str(203, random(201, 205)), 8);
        end
        metarule3(100, self_obj, 2, 0);
        add_timer_event(self_obj, game_ticks(random(30, 45)), 2);
    end
    else begin
        if (fixed_param == 3) then begin
            if (combat_is_initialized == 0) then begin
                if (random(1, 3) == 1) then begin
                    float_msg(self_obj, message_str(203, 206), 8);
                    debug_msg("BRAHMIN IS POOING!!! hehehehe");
                    LVar0 := create_object_sid(random(33555178, 33555180), 0, 0, 848);
                    move_to(LVar0, tile_num_in_direction(tile_num(self_obj), (has_trait(1, self_obj, 10) + 3) % 6, 1), 0);
                end
            end
            metarule3(100, self_obj, 3, 0);
            add_timer_event(self_obj, game_ticks(random(120, 300)), 3);
        end
    end
end

procedure combat_p_proc
begin
    if (brahmin_object == self_obj) then begin
        if (critter_state(self_obj) bwand 1) then begin
            brahmin_object := 0;
        end
    end
    else begin
        if (brahmin_object == 0) then begin
            brahmin_object := self_obj;
        end
        else begin
            if (dog_object == 0) then begin
            end
            else begin
                if ((global_var(402) bwand 32768) != 0) then begin
                    if (tile_distance_objs(self_obj, dog_object) < tile_distance_objs(brahmin_object, dog_object)) then begin
                        brahmin_object := self_obj;
                    end
                end
                else begin
                    if (tile_distance_objs(self_obj, dog_object) > tile_distance_objs(brahmin_object, dog_object)) then begin
                        brahmin_object := self_obj;
                    end
                end
            end
        end
    end
end

procedure use_obj_on_p_proc
begin
    variable LVar0 := 0;
    if ((obj_pid(obj_being_used_with) == 124) or (obj_pid(obj_being_used_with) == 125)) then begin
        script_overrides;
        LVar0 := obj_being_used_with;
        rm_obj_from_inven(source_obj, obj_being_used_with);
        destroy_object(LVar0);
        if ((critter_state(self_obj) bwand 2) == 0) then begin
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            reg_anim_animate(self_obj, 14, -1);
            reg_anim_animate(self_obj, 20, 5);
            reg_anim_animate(self_obj, 48, -1);
            reg_anim_func(3, 0);
            critter_injure(self_obj, 2);
        end
    end
end

