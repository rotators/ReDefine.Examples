variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure combat_p_proc;
procedure Node000;
procedure Node001;
procedure Node002;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure Node999;
procedure Node998;
procedure Node996;
procedure Node995;
procedure Node994;
procedure Node993;
procedure Node991;
procedure Node990;
procedure Node989;
procedure Node988;
procedure Node987;

variable only_once;
variable food_cost;

import variable modoc_rose_obj;

procedure timed_event_p_proc;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
    modoc_rose_obj := self_obj;
end

procedure critter_p_proc
begin
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if (((local_var(5) bwand 2) != 0) or (global_var(52) <= -1000)) then begin
            if (critter_is_fleeing(self_obj)) then begin
                if (anim_busy(self_obj) == 0) then begin
                    if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                        if (anim_busy(self_obj) == 0) then begin
                            global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                                debug_msg("flee loop: rot == " + global_temp);
                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                global_temp := (global_temp + 1) % 6;
                            end
                        end
                    end
                end
            end
            else begin
                attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        call Node998();
    end
end

procedure talk_p_proc
begin
    script_overrides;
    if ((global_var(297) bwand 16384) != 0) then begin
        float_msg(self_obj, message_str(108, 150), 8);
    end
    else begin
        set_global_var(297, global_var(297) bwor 32);
        start_gdialog(108, self_obj, 4, -1, -1);
        gsay_start;
        if (global_var(111) >= 7) then begin
            call Node002();
        end
        else begin
            if (((local_var(5) bwand 1) != 0) == 0) then begin
                call Node000();
            end
            else begin
                call Node001();
            end
        end
        gsay_end;
        end_dialogue;
    end
    set_local_var(5, local_var(5) bwor 1);
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(5, global_var(5) + 1);
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
            set_global_var(2, 1);
            set_global_var(3, 0);
        end
        if (metarule(51, self_obj) == 2) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(2, 0);
                set_global_var(1, global_var(1) + 1);
                set_global_var(0, global_var(0) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(37, 0);
                set_global_var(38, 0);
                set_global_var(39, 0);
                set_global_var(40, 0);
                set_global_var(41, 0);
                set_global_var(42, 0);
                set_global_var(43, 0);
                set_global_var(44, 0);
                set_global_var(45, 0);
                if (global_var(0) >= 1000) then begin
                    set_global_var(37, 1);
                end
                else begin
                    if (global_var(0) >= 750) then begin
                        set_global_var(38, 1);
                    end
                    else begin
                        if (global_var(0) >= 500) then begin
                            set_global_var(39, 1);
                        end
                        else begin
                            if (global_var(0) >= 250) then begin
                                set_global_var(40, 1);
                            end
                            else begin
                                if (global_var(0) > -250) then begin
                                    set_global_var(41, 1);
                                end
                                else begin
                                    if (global_var(0) > -500) then begin
                                        set_global_var(42, 1);
                                    end
                                    else begin
                                        if (global_var(0) > -750) then begin
                                            set_global_var(43, 1);
                                        end
                                        else begin
                                            if (global_var(0) > -1000) then begin
                                                set_global_var(44, 1);
                                            end
                                            else begin
                                                set_global_var(45, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(52, global_var(52) + -8);
                debug_msg("Added " + -8 + " to Town Rep");
            end
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
            set_global_var(3, 1);
            set_global_var(2, 0);
        end
        set_global_var(0, global_var(0) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(52, global_var(52) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
    modoc_rose_obj := 0;
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(108, 100 + ((local_var(5) bwand 1) != 0)));
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(108, 102));
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        if ((global_var(52) <= -1000) == 0) then begin
            set_global_var(52, -1000);
        end
        call Node998();
    end
end

procedure map_enter_p_proc
begin
    modoc_rose_obj := self_obj;
    if ((cur_map_index == 19) and (elevation(self_obj) != ((global_var(297) bwand 1) != 0))) then begin
        move_to(self_obj, tile_num(self_obj), (global_var(297) bwand 1) != 0);
    end
    if (only_once == 0) then begin
        only_once := 1;
        critter_add_trait(self_obj, 1, 6, 28);
        critter_add_trait(self_obj, 1, 5, 14);
    end
    if (metarule(14, 0)) then begin
        restock_amt := random(20, 20);
        if (obj_is_carrying_obj_pid(self_obj, 41) < restock_amt) then begin
            if (100 >= random(1, 100)) then begin
                if (obj_is_carrying_obj_pid(self_obj, 41) < restock_amt) then begin
                    restock_obj := create_object_sid(41, 0, 0, -1);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 41));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 41) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 41);
                        if ((obj_is_carrying_obj_pid(self_obj, 41) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 41) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 41);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 41);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        metarule(43, self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            destroy_object(restock_obj);
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
        end
        else begin
            if (obj_is_carrying_obj_pid(self_obj, 41) < restock_amt) then begin
                restock_obj := create_object_sid(41, 0, 0, -1);
                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 41));
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 41) > restock_amt) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 41);
                    if ((obj_is_carrying_obj_pid(self_obj, 41) - restock_amt) < removed_qty) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 41) - restock_amt;
                    end
                    if (removed_qty > 0) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 41);
                        if (obj_type(self_obj) == 1) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 41);
                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                    restock_obj := critter_inven_obj(self_obj, 0);
                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    add_obj_to_inven(self_obj, restock_obj);
                                end
                            end
                            else begin
                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                    metarule(43, self_obj);
                                end
                            end
                        end
                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                        destroy_object(restock_obj);
                    end
                    restock_obj := 0;
                    restock_amt := 0;
                end
                else begin
                    restock_obj := 0;
                end
            end
        end
    end
end

procedure combat_p_proc
begin
    if (fixed_param == 4) then begin
    end
end

procedure Node000
begin
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        gsay_reply(108, 154);
    end
    else begin
        gsay_reply(108, 155);
    end
    giq_option(4, 108, 156, Node010, 50);
    giq_option(4, 108, 157, Node032, 50);
    giq_option(4, 108, 158, Node023, 50);
    giq_option(4, 108, message_str(14, random(375, 376)), Node999, 50);
    giq_option(-3, 108, 159, Node996, 50);
    giq_option(-3, 108, message_str(14, random(300, 303)), Node999, 50);
end

procedure Node001
begin
    gsay_reply(108, 160);
    giq_option(4, 108, 156, Node010, 50);
    giq_option(4, 108, 157, Node032, 50);
    giq_option(4, 108, 158, Node023, 50);
    giq_option(4, 108, message_str(14, random(375, 376)), Node999, 50);
    giq_option(-3, 108, 159, Node996, 50);
    giq_option(-3, 108, message_str(14, random(300, 303)), Node999, 50);
end

procedure Node002
begin
    food_cost := 0;
    if ((global_var(402) bwand 262144) != 0) then begin
        gsay_reply(108, 166);
    end
    else begin
        set_global_var(402, global_var(402) bwor 262144);
        gsay_reply(108, 165);
    end
    giq_option(4, 108, 167, Node995, 50);
    giq_option(4, 108, message_str(14, random(375, 376)), Node999, 50);
end

procedure Node010
begin
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        gsay_reply(108, 168);
    end
    else begin
        gsay_reply(108, 169);
    end
    giq_option(4, 108, 170, Node994, 50);
    giq_option(4, 108, 171, Node993, 50);
    if (((global_var(111) >= 7) == 0) and (((local_var(5) bwand 512) != 0) == 0)) then begin
        giq_option(4, 108, 172, Node033, 50);
    end
    giq_option(4, 108, 173, Node991, 50);
    giq_option(4, 108, 174, Node990, 50);
    giq_option(4, 108, 175, Node989, 50);
    giq_option(4, 108, 176, Node999, 50);
end

procedure Node011
begin
    gsay_reply(108, 177);
    if (item_caps_total(dude_obj) >= 3) then begin
        giq_option(4, 108, 178, Node010, 50);
    end
    giq_option(4, 108, 179, Node023, 50);
    giq_option(4, 108, message_str(14, random(375, 376)), Node999, 50);
end

procedure Node012
begin
    if (local_var(4) > 36) then begin
        gsay_reply(108, 180);
        giq_option(4, 108, 182, Node022, 50);
    end
    else begin
        gsay_reply(108, 181);
        giq_option(4, 108, 183, Node013, 50);
        giq_option(4, 108, 184, Node022, 50);
    end
end

procedure Node013
begin
    gsay_reply(108, 185);
    giq_option(4, 108, 186, Node022, 50);
    giq_option(4, 108, 187, Node988, 50);
end

procedure Node014
begin
    item_caps_adjust(self_obj, food_cost);
    item_caps_adjust(dude_obj, -food_cost);
    gsay_reply(108, 188);
    giq_option(4, 108, message_str(14, 352), Node015, 50);
end

procedure Node015
begin
    gsay_reply(108, 189);
    giq_option(4, 108, message_str(14, 352), Node016, 50);
end

procedure Node016
begin
    gsay_reply(108, 190);
    giq_option(4, 108, 191, Node017, 50);
end

procedure Node017
begin
    gsay_reply(108, 192);
    giq_option(4, 108, 193, Node018, 50);
end

procedure Node018
begin
    gsay_reply(108, 194);
    giq_option(4, 108, 195, Node019, 50);
end

procedure Node019
begin
    set_local_var(4, 36 + 1);
    gsay_reply(108, 196);
    giq_option(4, 108, 197, Node020, 50);
end

procedure Node020
begin
    poison(dude_obj, 1);
    item_caps_adjust(dude_obj, 20);
    gsay_reply(108, 198);
    giq_option(4, 108, 199, Node999, 50);
end

procedure Node021
begin
    item_caps_adjust(self_obj, food_cost);
    item_caps_adjust(dude_obj, -food_cost);
    critter_heal(dude_obj, get_critter_stat(dude_obj, 7) - get_critter_stat(dude_obj, 35));
    poison(dude_obj, -get_poison(dude_obj));
    set_local_var(5, local_var(5) bwor 1024);
    gsay_reply(108, 200);
    giq_option(4, 108, 201, Node999, 50);
end

procedure Node022
begin
    item_caps_adjust(self_obj, food_cost);
    item_caps_adjust(dude_obj, -food_cost);
    if (food_cost == 1000) then begin
        if (((local_var(5) bwand 512) != 0) == 0) then begin
            restock_obj := create_object_sid(378, 0, 0, -1);
            add_mult_objs_to_inven(dude_obj, restock_obj, 1);
        end
        set_local_var(5, local_var(5) bwor 512);
        gsay_reply(108, 300);
    end
    else begin
        gsay_reply(108, 202);
    end
    giq_option(4, 108, 203, Node024, 50);
    giq_option(4, 108, message_str(14, random(375, 376)), Node999, 50);
end

procedure Node023
begin
    gsay_reply(108, 204);
    giq_option(4, 108, 205, Node010, 50);
    giq_option(4, 108, message_str(14, random(375, 376)), Node999, 50);
end

procedure Node024
begin
    gsay_reply(108, 206);
    if ((global_var(105) >= 4) and (global_var(105) < 7) or ((global_var(106) >= 4) and (global_var(106) < 7))) then begin
        giq_option(4, 108, 207, Node025, 50);
    end
    giq_option(4, 108, 208, Node027, 50);
    if ((global_var(111) >= 4) and (global_var(111) < 7)) then begin
        giq_option(4, 108, 209, Node028, 50);
    end
    if ((local_var(5) bwand 1024) != 0) then begin
        giq_option(6, 108, 210, Node029, 50);
    end
    giq_option(4, 108, 211, Node030, 50);
    giq_option(4, 108, message_str(14, random(375, 376)), Node999, 50);
end

procedure Node025
begin
    gsay_reply(108, 212);
    giq_option(4, 108, message_str(14, 353), Node026, 50);
end

procedure Node026
begin
    gsay_reply(108, 213);
    giq_option(4, 108, 214, Node023, 50);
    giq_option(4, 108, 215, Node010, 50);
    giq_option(4, 108, message_str(14, random(375, 376)), Node999, 50);
end

procedure Node027
begin
    gsay_reply(108, 216);
    giq_option(4, 108, message_str(14, 353), Node026, 50);
end

procedure Node028
begin
    gsay_reply(108, 217);
    giq_option(4, 108, message_str(14, 353), Node026, 50);
end

procedure Node029
begin
    gsay_reply(108, 218);
    giq_option(4, 108, message_str(14, 353), Node026, 50);
end

procedure Node030
begin
    gsay_reply(108, 220);
    giq_option(4, 108, message_str(14, 353), Node026, 50);
end

procedure Node031
begin
    critter_heal(dude_obj, get_critter_stat(dude_obj, 7) - get_critter_stat(dude_obj, 35));
    poison(dude_obj, -get_poison(dude_obj));
    gsay_reply(108, 221);
    giq_option(1, 108, message_str(14, random(202, 203)), Node026, 50);
end

procedure Node032
begin
    gsay_reply(108, 222);
    giq_option(4, 108, 156, Node010, 50);
    giq_option(4, 108, 158, Node023, 50);
    giq_option(4, 108, message_str(14, random(375, 376)), Node999, 50);
end

procedure Node033
begin
    food_cost := 1000;
    gsay_reply(108, 225);
    giq_option(4, 108, 226, Node987, 50);
    giq_option(4, 108, 227, Node010, 50);
    giq_option(4, 108, message_str(14, random(375, 376)), Node999, 50);
end

procedure Node034
begin
    gsay_reply(108, 228);
    if ((global_var(111) >= 7) == 0) then begin
        giq_option(4, 108, 229, Node010, 50);
    end
    giq_option(4, 108, 230, Node999, 50);
    giq_option(-3, 108, 231, Node999, 50);
end

procedure Node999
begin
end

procedure Node998
begin
    set_local_var(5, local_var(5) bwor 2);
end

procedure Node996
begin
    if ((global_var(297) bwand 2) != 0) then begin
        call Node034();
    end
    else begin
        call Node031();
    end
end

procedure Node995
begin
    if ((global_var(297) bwand 2) != 0) then begin
        call Node034();
    end
    else begin
        call Node021();
    end
end

procedure Node994
begin
    if (item_caps_total(dude_obj) >= 5) then begin
        food_cost := 5;
        call Node012();
    end
    else begin
        call Node011();
    end
end

procedure Node993
begin
    if ((global_var(297) bwand 2) != 0) then begin
        call Node034();
    end
    else begin
        if (item_caps_total(dude_obj) >= 25) then begin
            food_cost := 25;
            call Node021();
        end
        else begin
            call Node011();
        end
    end
end

procedure Node991
begin
    if (item_caps_total(dude_obj) >= 5) then begin
        food_cost := 5;
        call Node022();
    end
    else begin
        call Node011();
    end
end

procedure Node990
begin
    if (item_caps_total(dude_obj) >= 7) then begin
        food_cost := 7;
        call Node022();
    end
    else begin
        call Node011();
    end
end

procedure Node989
begin
    if (item_caps_total(dude_obj) >= 3) then begin
        food_cost := 3;
        call Node022();
    end
    else begin
        call Node011();
    end
end

procedure Node988
begin
    if (item_caps_total(dude_obj) >= 20) then begin
        food_cost := 20;
        call Node014();
    end
    else begin
        call Node011();
    end
end

procedure Node987
begin
    if (item_caps_total(dude_obj) >= 1000) then begin
        food_cost := 1000;
        call Node022();
    end
    else begin
        call Node011();
    end
end

procedure timed_event_p_proc
begin
    if (map_var(1) <= 3) then begin
        float_msg(self_obj, message_str(108, 151 + map_var(1)), 8);
        if (((global_var(402) bwand 262144) != 0) == 0) then begin
            set_map_var(1, map_var(1) + 1);
        end
    end
    if (map_var(1) >= 3) then begin
        call Node998();
    end
end

