variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;

procedure checkPartyMembersNearDoor;

variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure combat_p_proc;
procedure Node000;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node999;
procedure Node998;
procedure Node996;
procedure Node995;
procedure Node994;

variable only_once;

import variable den_closing_door;
import variable den_church_door_obj;

procedure Node010;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if (obj_can_see_obj(self_obj, dude_obj) and (local_var(0) == 2)) then begin
        set_local_var(0, 1);
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
    else begin
        if (critter_is_fleeing(self_obj)) then begin
            if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), random(6, 10)), 1);
            end
        end
        else begin
            if (map_var(6) == 5) then begin
                if (obj_can_see_obj(self_obj, dude_obj)) then begin
                    float_msg(self_obj, message_str(43, 185 + local_var(4)), 8);
                end
                call Node998();
            end
            else begin
                if (local_var(2)) then begin
                    if (obj_is_open(den_church_door_obj)) then begin
                        if ((tile_distance(tile_num(dude_obj), 22735) > 10) or (tile_distance(tile_num(dude_obj), 22735) <= 6) or (metarule(16, 0) > 1) and (den_closing_door == 0)) then begin
                            den_closing_door := 1;
                            use_obj(den_church_door_obj);
                        end
                    end
                    else begin
                        if (tile_num(self_obj) != local_var(3)) then begin
                            den_closing_door := 0;
                            animate_move_obj_to_tile(self_obj, local_var(3), 0);
                        end
                        else begin
                            if (has_trait(1, self_obj, 10) != 2) then begin
                                anim(self_obj, 1000, 2);
                            end
                            else begin
                                if (map_var(4) == 0) then begin
                                    if ((map_var(6) == 3) and obj_can_see_obj(self_obj, dude_obj)) then begin
                                        set_map_var(4, 1);
                                        set_local_var(4, 1);
                                        if (global_var(17) and (metarule(16, 0) > 1)) then begin
                                            float_msg(self_obj, message_str(43, 187), 8);
                                        end
                                        else begin
                                            float_msg(self_obj, message_str(43, random(181, 183)), 8);
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        call Node998();
    end
end

procedure talk_p_proc
begin
    if (local_var(2)) then begin
        if ((metarule(16, 0) > 1) and global_var(17)) then begin
            float_msg(self_obj, message_str(43, 186), 8);
        end
        else begin
            script_overrides;
            if (local_var(0) > 0) then begin
                call Node001();
            end
            else begin
                start_gdialog(43, self_obj, 4, -1, -1);
                gsay_start;
                call Node000();
                gsay_end;
                end_dialogue;
            end
        end
    end
    else begin
        if (random(1, 3) == 1) then begin
            float_msg(self_obj, message_str(43, 203), 8);
        end
        else begin
            if ((game_time_hour >= 1800) and (game_time_hour < 1900) or ((game_time_hour <= 600) or (game_time_hour >= 1800))) then begin
                float_msg(self_obj, message_str(43, 200), 8);
            end
            else begin
                if ((game_time_hour > 600) and (game_time_hour < 1800)) then begin
                    float_msg(self_obj, message_str(43, 201), 8);
                end
                else begin
                    if ((game_time_hour >= 600) and (game_time_hour < 700)) then begin
                        float_msg(self_obj, message_str(43, 202), 8);
                    end
                end
            end
        end
    end
    set_local_var(1, local_var(1) + 1);
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(4, global_var(4) + 1);
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
            set_global_var(3, 1);
            set_global_var(2, 0);
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
            set_global_var(2, 1);
            set_global_var(3, 0);
        end
        set_global_var(0, global_var(0) + 5);
        debug_msg("Player gains " + 5 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(49, global_var(49) + 2);
        debug_msg("Added " + 2 + " to Town Rep");
    end
    if (local_var(2)) then begin
        set_map_var(5, map_var(5) - 1);
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(43, 100));
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(43, 150));
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        call Node998();
    end
end

procedure map_enter_p_proc
begin
    if (only_once == 0) then begin
        den_closing_door := 0;
        critter_add_trait(self_obj, 1, 6, 11);
        critter_add_trait(self_obj, 1, 5, 12);
        if (local_var(3) == 0) then begin
            set_local_var(3, tile_num(self_obj));
            if ((tile_distance_objs(self_obj, den_church_door_obj) <= 4) and (tile_distance(tile_num(dude_obj), 22735) > 6)) then begin
                set_local_var(2, 1);
                set_map_var(5, map_var(5) + 1);
            end
        end
        else begin
            if (metarule(22, 0) == 0) then begin
                critter_attempt_placement(self_obj, local_var(3), elevation(self_obj));
            end
        end
    end
end

procedure combat_p_proc
begin
    if (fixed_param == 4) then begin
        if ((obj_is_open(den_church_door_obj) == 0) and (obj_can_see_obj(self_obj, dude_obj) == 0)) then begin
            use_obj(den_church_door_obj);
        end
    end
end

procedure Node000
begin
    if (global_var(17)) then begin
        call Node009();
    end
    else begin
        if (metarule(16, 0) > 1) then begin
            call Node006();
        end
        else begin
            if ((game_time_hour <= 600) or (game_time_hour >= 1800)) then begin
                call Node002();
            end
            else begin
                call Node008();
            end
        end
    end
end

procedure Node001
begin
    float_msg(self_obj, message_str(43, 152), 8);
    call Node998();
end

procedure Node002
begin
    gsay_reply(43, 154);
    giq_option(6, 43, 155, Node996, 50);
    giq_option(4, 43, 156, Node999, 50);
    giq_option(4, 43, 157, Node004, 50);
end

procedure Node003
begin
    gsay_reply(43, 158);
    giq_option(6, 43, 159, Node995, 50);
    giq_option(4, 43, 160, Node004, 50);
    giq_option(4, 43, 161, Node999, 50);
end

procedure Node004
begin
    gsay_reply(43, 162);
    giq_option(4, 43, 163, Node998, 50);
    giq_option(4, 43, 164, Node999, 50);
end

procedure Node005
begin
    gsay_reply(43, 165);
    giq_option(4, 43, 166, Node994, 50);
    giq_option(4, 43, 167, Node994, 50);
end

procedure Node006
begin
    gsay_reply(43, 168);
    giq_option(4, 43, 169, Node004, 50);
    giq_option(4, 43, 170, Node007, 50);
end

procedure Node007
begin
    gsay_reply(43, 171);
    giq_option(4, 43, 172, Node998, 50);
    giq_option(4, 43, 173, Node999, 50);
end

procedure Node008
begin
    gsay_reply(43, 174);
    giq_option(4, 43, 175, Node004, 50);
    giq_option(6, 43, 176, Node003, 50);
    giq_option(4, 43, 177, Node998, 50);
    giq_option(4, 43, 178, Node999, 50);
end

procedure Node009
begin
    gsay_reply(43, 179);
    giq_option(4, 43, 180, Node994, 50);
end

procedure Node999
begin
end

procedure Node998
begin
    set_local_var(0, 2);
end

procedure Node996
begin
    if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
        call Node003();
    end
    else begin
        call Node004();
    end
end

procedure Node995
begin
    if (is_success(roll_vs_skill(dude_obj, 14, -10))) then begin
        call Node005();
    end
    else begin
        call Node004();
    end
end

procedure Node994
begin
    set_global_var(17, 1);
end

procedure Node010
begin
    gsay_reply(43, 250 + (get_critter_stat(dude_obj, 34) == 1));
    giq_option(1, 43, 252, Node998, 50);
end

