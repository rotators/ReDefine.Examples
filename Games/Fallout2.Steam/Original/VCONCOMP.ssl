procedure start;
procedure damage_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure talk_p_proc;
procedure use_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure VConComp00;
procedure VConComp01;
procedure VConComp01a;
procedure VConComp02;
procedure VConComp02a;
procedure VConComp03;
procedure VConComp04;
procedure VConComp05;
procedure VConComp06;
procedure VConComp07;
procedure VConComp08;
procedure VConComp09;
procedure VConComp10;
procedure VConComp11;
procedure VConComp12;
procedure VConComp12a;
procedure VConComp13;
procedure VConComp13a;
procedure VConComp14;
procedure VConComp15;
procedure VConComp16;
procedure VConComp17;
procedure VConComp17a;
procedure VConComp17b;
procedure VConComp18;
procedure VConComp18a;
procedure VConComp19;
procedure VConComp19a;
procedure VConComp20;
procedure VConComp21;
procedure VConComp22;
procedure VConComp23;
procedure VConComp24;
procedure VConComp25;
procedure VConComp26;
procedure VConComp27;
procedure VConComp28;
procedure VConComp29;
procedure VConComp30;
procedure VConComp31;
procedure VConComp32;
procedure VConCompEnd;
procedure Update_Invasion;


procedure start
begin
    if (script_action == 14) then begin
        call damage_p_proc();
    end
    else begin
        if (script_action == 21) then begin
            call look_at_p_proc();
        end
        else begin
            if (script_action == 3) then begin
                call description_p_proc();
            end
            else begin
                if (script_action == 11) then begin
                    call talk_p_proc();
                end
                else begin
                    if (script_action == 6) then begin
                        call use_p_proc();
                    end
                    else begin
                        if (script_action == 7) then begin
                            call use_obj_on_p_proc();
                        end
                        else begin
                            if (script_action == 8) then begin
                                call use_skill_on_p_proc();
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure damage_p_proc
begin
    if (global_var(17) == 0) then begin
        set_global_var(147, game_time / 10);
        set_global_var(155, global_var(155) + 5);
        set_global_var(17, 1);
        set_global_var(308, 2);
        call Update_Invasion();
        display_msg(message_str(371, 179));
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(371, 200));
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(371, 100));
end

procedure talk_p_proc
begin
    if (global_var(147) == 0) then begin
        if (local_var(0) == 1) then begin
            start_gdialog(371, self_obj, 4, -1, -1);
            gsay_start;
            call VConComp01();
            gsay_end;
            end_dialogue;
        end
        else begin
            start_gdialog(371, self_obj, 4, -1, -1);
            gsay_start;
            call VConComp00();
            gsay_end;
            end_dialogue;
        end
    end
end

procedure use_p_proc
begin
    script_overrides;
    if (local_var(0) == 0) then begin
        display_msg(message_str(371, 177));
    end
    else begin
        dialogue_system_enter;
    end
end

procedure use_obj_on_p_proc
begin
    if (obj_pid(obj_being_used_with) == 221) then begin
        if (local_var(0) == 0) then begin
            script_overrides;
            display_msg(message_str(371, 180));
            set_local_var(0, 1);
            dialogue_system_enter;
        end
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 12) then begin
        script_overrides;
        if (is_success(roll_vs_skill(dude_obj, 12, 0))) then begin
            set_local_var(0, 1);
            display_msg(message_str(371, 176));
        end
        else begin
            display_msg(message_str(371, 178));
        end
        game_time_advance(game_ticks(300));
    end
end

procedure VConComp00
begin
    gsay_message(371, 101, 51);
end

procedure VConComp01
begin
    gsay_reply(371, 102);
    call VConComp01a();
end

procedure VConComp01a
begin
    giq_option(4, 371, 103, VConComp02, 50);
    giq_option(4, 371, 104, VConComp11, 50);
    giq_option(4, 371, 106, VConComp05, 50);
    giq_option(0, 371, 181, VConCompEnd, 50);
end

procedure VConComp02
begin
    gsay_reply(371, 140);
    giq_option(4, 371, 107, VConComp03, 50);
    giq_option(4, 371, 108, VConComp04, 50);
    giq_option(4, 371, 109, VConComp05, 50);
    giq_option(4, 371, 110, VConComp06, 50);
    giq_option(4, 371, 111, VConComp07, 50);
    giq_option(4, 371, 112, VConComp08, 50);
    giq_option(5, 371, 113, VConComp02a, 50);
end

procedure VConComp02a
begin
    if (is_success(roll_vs_skill(dude_obj, 12, -10)) or (global_var(298) == 1)) then begin
        call VConComp09();
    end
    else begin
        call VConComp10();
    end
end

procedure VConComp03
begin
    gsay_message(371, 114, 50);
    set_global_var(147, (game_time / 10) - 240);
    set_global_var(155, global_var(155) + 5);
    set_global_var(17, 1);
    set_global_var(308, 2);
end

procedure VConComp04
begin
    gsay_message(371, 115, 50);
    set_global_var(155, global_var(155) + 5);
    set_global_var(147, (game_time / 10) - 30);
    set_global_var(17, 1);
    set_global_var(308, 2);
end

procedure VConComp05
begin
    gsay_message(371, 116, 50);
    set_global_var(146, 1);
end

procedure VConComp06
begin
    gsay_message(371, 117, 50);
    set_global_var(147, game_time / 10);
    set_global_var(155, global_var(155) + 5);
    set_global_var(17, 1);
    set_global_var(308, 2);
end

procedure VConComp07
begin
    gsay_message(371, 118, 50);
    set_global_var(147, game_time / 10);
    set_global_var(155, global_var(155) + 5);
    set_global_var(17, 1);
    set_global_var(308, 2);
end

procedure VConComp08
begin
    gsay_message(371, 119, 50);
    set_global_var(147, (game_time / 10) - 299);
    set_global_var(155, global_var(155) + 5);
    set_global_var(17, 1);
    set_global_var(308, 2);
end

procedure VConComp09
begin
    gsay_reply(371, 120);
    giq_option(4, 371, 121, VConComp03, 50);
    giq_option(4, 371, 122, VConComp04, 50);
    giq_option(4, 371, 123, VConComp05, 50);
    giq_option(4, 371, 124, VConComp06, 50);
    giq_option(4, 371, 125, VConComp07, 50);
    giq_option(4, 371, 126, VConComp08, 50);
end

procedure VConComp10
begin
    if (local_var(1) == 1) then begin
        set_global_var(146, 1);
    end
    else begin
        set_local_var(1, 1);
    end
    gsay_message(371, 127, 51);
end

procedure VConComp11
begin
    gsay_reply(371, 127);
    giq_option(4, 371, 129, VConComp12, 50);
    giq_option(4, 371, 130, VConComp14, 50);
    giq_option(4, 371, 131, VConComp13, 50);
    giq_option(4, 371, 132, VConComp14, 50);
end

procedure VConComp12
begin
    gsay_reply(371, 133);
    giq_option(4, 371, 134, VConComp12a, 50);
    giq_option(4, 371, 135, VConComp15, 50);
end

procedure VConComp12a
begin
    set_global_var(234, 1);
    call VConComp15();
end

procedure VConComp13
begin
    gsay_reply(371, 136);
    giq_option(4, 371, 134, VConComp13a, 50);
end

procedure VConComp13a
begin
    set_global_var(235, 1);
    call VConComp15();
end

procedure VConComp14
begin
    gsay_reply(371, 139);
    call VConComp01a();
end

procedure VConComp15
begin
    gsay_reply(371, 140);
    call VConComp01a();
end

procedure VConComp16
begin
    gsay_reply(371, 141);
    giq_option(6, 371, 142, VConComp17, 50);
    giq_option(4, 371, 138, VConComp15, 50);
end

procedure VConComp17
begin
    gsay_reply(371, 143);
    giq_option(4, 634, 104, VConCompEnd, 50);
    giq_option(6, 371, 144, VConComp17a, 50);
    giq_option(6, 371, 145, VConComp17b, 50);
end

procedure VConComp17a
begin
    if (is_success(roll_vs_skill(dude_obj, 12, 0))) then begin
        call VConComp18();
    end
    else begin
        call VConComp20();
    end
end

procedure VConComp17b
begin
    if (is_success(roll_vs_skill(dude_obj, 7, 0))) then begin
        call VConComp18();
    end
    else begin
        call VConComp20();
    end
end

procedure VConComp18
begin
    gsay_reply(371, 146);
    call VConComp18a();
end

procedure VConComp18a
begin
    giq_option(6, 371, 147, VConComp19, 50);
    giq_option(6, 371, 148, VConComp19, 50);
    giq_option(7, 371, 149, VConComp19, 50);
    giq_option(4, 371, 150, VConCompEnd, 50);
end

procedure VConComp19
begin
    gsay_reply(371, 151);
    giq_option(6, 371, 152, VConComp20, 50);
    giq_option(6, 371, 153, VConComp21, 50);
    giq_option(6, 371, 154, VConComp20, 50);
    giq_option(7, 371, 155, VConComp19a, 50);
end

procedure VConComp19a
begin
    if (is_success(roll_vs_skill(dude_obj, 12, -10))) then begin
        call VConComp21();
    end
    else begin
        call VConComp20();
    end
end

procedure VConComp20
begin
    gsay_reply(371, 156);
    call VConComp18a();
end

procedure VConComp21
begin
    gsay_reply(371, 157);
    giq_option(6, 371, 158, VConComp27, 50);
    giq_option(7, 371, 159, VConComp30, 50);
    giq_option(4, 371, 150, VConCompEnd, 50);
end

procedure VConComp22
begin
    gsay_reply(371, 160);
    giq_option(4, 371, 161, VConComp23, 50);
    giq_option(4, 371, 162, VConComp24, 50);
    giq_option(4, 371, 163, VConComp25, 50);
    giq_option(4, 371, 164, VConComp26, 50);
end

procedure VConComp23
begin
    gsay_reply(371, 165);
    giq_option(4, 371, 166, VConComp22, 50);
    giq_option(4, 371, 138, VConComp18, 50);
end

procedure VConComp24
begin
    gsay_reply(371, 167);
    giq_option(4, 371, 166, VConComp22, 50);
    giq_option(4, 371, 138, VConComp18, 50);
end

procedure VConComp25
begin
    gsay_reply(371, 168);
    giq_option(4, 371, 166, VConComp22, 50);
    giq_option(4, 371, 138, VConComp18, 50);
end

procedure VConComp26
begin
    gsay_reply(371, 169);
    giq_option(4, 371, 166, VConComp22, 50);
    giq_option(4, 371, 138, VConComp18, 50);
end

procedure VConComp27
begin
    gsay_reply(371, 170);
    giq_option(4, 371, 172, VConComp28, 50);
    giq_option(4, 371, 173, VConComp29, 50);
end

procedure VConComp28
begin
    gsay_reply(371, 171);
    giq_option(4, 371, 138, VConComp32, 50);
    giq_option(4, 371, 150, VConCompEnd, 50);
end

procedure VConComp29
begin
    gsay_reply(371, 146);
    call VConComp18a();
end

procedure VConComp30
begin
    gsay_reply(371, 174);
    giq_option(4, 371, 172, VConComp31, 50);
    giq_option(4, 371, 173, VConComp29, 50);
end

procedure VConComp31
begin
    gsay_reply(371, 175);
    giq_option(4, 371, 138, VConComp32, 50);
    giq_option(4, 371, 150, VConCompEnd, 50);
end

procedure VConComp32
begin
    gsay_reply(371, 176);
    giq_option(4, 371, 103, VConComp02, 50);
    giq_option(4, 371, 104, VConComp11, 50);
    giq_option(4, 371, 105, VConComp05, 50);
end

procedure VConCompEnd
begin
end

procedure Update_Invasion
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    variable LVar3 := 0;
    variable LVar4 := 0;
    LVar0 := global_var(150) - ((global_var(150) - (game_time / (10 * 60 * 60 * 24))) / 2);
    LVar1 := global_var(151) - ((global_var(151) - (game_time / (10 * 60 * 60 * 24))) / 2);
    LVar2 := global_var(152) - ((global_var(152) - (game_time / (10 * 60 * 60 * 24))) / 2);
    LVar3 := global_var(153) - ((global_var(153) - (game_time / (10 * 60 * 60 * 24))) / 2);
    LVar4 := global_var(154) - ((global_var(154) - (game_time / (10 * 60 * 60 * 24))) / 2);
    set_global_var(150, LVar0);
    set_global_var(151, LVar1);
    set_global_var(152, LVar2);
    set_global_var(153, LVar3);
    set_global_var(154, LVar4);
end

