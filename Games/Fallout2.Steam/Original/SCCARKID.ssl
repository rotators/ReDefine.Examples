variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;
procedure old_pickup_p_proc;
procedure pickup_p_proc;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;
variable numTvars;
variable cbFunc;
variable target_tile;
variable tt_num;
variable tt_time;
variable tt_go;
variable tile0;
variable lTime0;
variable tile1;
variable lTime1;
variable tile2;
variable lTime2;
variable tile3;
variable lTime3;
variable tile4;
variable lTime4;
variable tile5;
variable lTime5;
variable tile6;
variable lTime6;
variable tile7;
variable lTime7;
variable tile8;
variable lTime8;
variable tile9;
variable lTime9;
variable tile10;
variable lTime10;
variable tile11;
variable lTime11;
variable tile12;
variable lTime12;
variable tile13;
variable lTime13;
variable tile14;
variable lTime14;
variable tile15;
variable lTime15;
variable tile16;
variable lTime16;
variable tile17;
variable lTime17;
variable tile18;
variable lTime18;
variable tile19;
variable lTime19;
variable tile20;
variable lTime20;
variable tile21;
variable lTime21;
variable tile22;
variable lTime22;
variable tile23;
variable lTime23;
variable tile24;
variable lTime24;
variable tile25;
variable lTime25;

procedure getTile(variable arg0);
procedure getTileTime(variable arg0);
procedure curTimeIsGreater(variable arg0);
procedure check_tile_events(variable arg0);
procedure tvar_Warp_To_Pos(variable arg0, variable arg1);
procedure start;
procedure critter_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure push_p_proc;
procedure Node998;
procedure Node999;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure destCall(variable arg0);
procedure anim_end_call;
procedure walkToCarlson;

variable Only_Once;
variable doNormalWalking;
variable anim_flag;

procedure timed_event_p_proc;
procedure Node999a;
procedure Node129a;
procedure Node999b;
procedure Node999c;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure old_pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (3 == 1) then begin
            attack_complex(source_obj, 0, 1, 0, 0, 30000, 0, 0);
        end
        else begin
            if (3 == 2) then begin
                float_msg(self_obj, message_str(14, random(3325, 3329)), 0);
                if (-1 > -1) then begin
                    if (local_var(-1) >= 1) then begin
                        attack_complex(source_obj, 0, 1, 0, 0, 30000, 0, 0);
                    end
                    set_local_var(-1, local_var(-1) + 1);
                end
            end
            else begin
                if (3 == 3) then begin
                    float_msg(self_obj, message_str(14, random(3050, 3064)), 0);
                    if (-1 > -1) then begin
                        if (local_var(-1) >= 1) then begin
                            attack_complex(source_obj, 0, 1, 0, 0, 30000, 0, 0);
                        end
                        set_local_var(-1, local_var(-1) + 1);
                    end
                end
                else begin
                    if (3 == 4) then begin
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(source_obj), tile_num(self_obj)), random(8, 14)), 1);
                    end
                end
            end
        end
    end
    if (-1 == 1) then begin
        call old_pickup_p_proc();
    end
end

procedure getTile(variable arg0)
begin
    if (arg0 == 0) then begin
        return tile0;
    end
    if (arg0 == 1) then begin
        return tile1;
    end
    if (arg0 == 2) then begin
        return tile2;
    end
    if (arg0 == 3) then begin
        return tile3;
    end
    if (arg0 == 4) then begin
        return tile4;
    end
    if (arg0 == 5) then begin
        return tile5;
    end
    if (arg0 == 6) then begin
        return tile6;
    end
    if (arg0 == 7) then begin
        return tile7;
    end
    if (arg0 == 8) then begin
        return tile8;
    end
    if (arg0 == 9) then begin
        return tile9;
    end
    if (arg0 == 10) then begin
        return tile10;
    end
    if (arg0 == 11) then begin
        return tile11;
    end
    if (arg0 == 12) then begin
        return tile12;
    end
    if (arg0 == 13) then begin
        return tile13;
    end
    if (arg0 == 14) then begin
        return tile14;
    end
    if (arg0 == 15) then begin
        return tile15;
    end
    if (arg0 == 16) then begin
        return tile16;
    end
    if (arg0 == 17) then begin
        return tile17;
    end
    if (arg0 == 18) then begin
        return tile18;
    end
    if (arg0 == 19) then begin
        return tile19;
    end
    if (arg0 == 20) then begin
        return tile20;
    end
    if (arg0 == 21) then begin
        return tile21;
    end
    if (arg0 == 22) then begin
        return tile22;
    end
    if (arg0 == 23) then begin
        return tile23;
    end
    if (arg0 == 24) then begin
        return tile24;
    end
    if (arg0 == 25) then begin
        return tile25;
    end
end

procedure getTileTime(variable arg0)
begin
    if (arg0 == 0) then begin
        return lTime0;
    end
    if (arg0 == 1) then begin
        return lTime1;
    end
    if (arg0 == 2) then begin
        return lTime2;
    end
    if (arg0 == 3) then begin
        return lTime3;
    end
    if (arg0 == 4) then begin
        return lTime4;
    end
    if (arg0 == 5) then begin
        return lTime5;
    end
    if (arg0 == 6) then begin
        return lTime6;
    end
    if (arg0 == 7) then begin
        return lTime7;
    end
    if (arg0 == 8) then begin
        return lTime8;
    end
    if (arg0 == 9) then begin
        return lTime9;
    end
    if (arg0 == 10) then begin
        return lTime10;
    end
    if (arg0 == 11) then begin
        return lTime11;
    end
    if (arg0 == 12) then begin
        return lTime12;
    end
    if (arg0 == 13) then begin
        return lTime13;
    end
    if (arg0 == 14) then begin
        return lTime14;
    end
    if (arg0 == 15) then begin
        return lTime15;
    end
    if (arg0 == 16) then begin
        return lTime16;
    end
    if (arg0 == 17) then begin
        return lTime17;
    end
    if (arg0 == 18) then begin
        return lTime18;
    end
    if (arg0 == 19) then begin
        return lTime19;
    end
    if (arg0 == 20) then begin
        return lTime20;
    end
    if (arg0 == 21) then begin
        return lTime21;
    end
    if (arg0 == 22) then begin
        return lTime22;
    end
    if (arg0 == 23) then begin
        return lTime23;
    end
    if (arg0 == 24) then begin
        return lTime24;
    end
    if (arg0 == 25) then begin
        return lTime25;
    end
end

procedure curTimeIsGreater(variable arg0)
begin
    if (game_time > arg0) then begin
        return 1;
    end
    return 0;
end

procedure check_tile_events(variable arg0)
begin
    variable LVar1 := 0;
    if (arg0 == -1) then begin
        if (tt_go) then begin
            if (tile_num(self_obj) == target_tile) then begin
                call cbFunc(target_tile);
                tt_go := 0;
                tt_num := tt_num + 1;
                if (tt_num >= numTvars) then begin
                    tt_num := 0;
                end
                target_tile := getTile(tt_num);
                tt_time := game_time + getTileTime(tt_num);
            end
        end
        else begin
            if (curTimeIsGreater(tt_time)) then begin
                debug_msg("should be going to tile: " + target_tile);
                tt_go := 1;
                reg_anim_func(2, self_obj);
                reg_anim_func(1, 1);
                animate_move_obj_to_tile(self_obj, target_tile, 1);
                reg_anim_func(3, 0);
            end
        end
        return 1;
    end
    else begin
        return 0;
    end
end

procedure tvar_Warp_To_Pos(variable arg0, variable arg1)
begin
    move_to(self_obj, getTile(arg0), elevation(self_obj));
    arg0 := arg0 + 1;
    if (arg0 >= numTvars) then begin
        arg0 := 0;
    end
    target_tile := getTile(arg0);
    tt_go := 0;
    tt_time := arg1;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if ((local_var(5) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
    if (anim_busy(self_obj)) then begin
        anim_flag := 1;
    end
    else begin
        if (anim_flag == 1) then begin
            anim_flag := 0;
            call anim_end_call();
        end
    end
end

procedure talk_p_proc
begin
    Evil_Critter := 0;
    Slavery_Tolerant := 2;
    Karma_Perception := 1;
    set_global_var(37, 0);
    set_global_var(38, 0);
    set_global_var(39, 0);
    set_global_var(40, 0);
    set_global_var(41, 0);
    set_global_var(42, 0);
    set_global_var(43, 0);
    set_global_var(44, 0);
    set_global_var(45, 0);
    if (global_var(0) >= 1000) then begin
        set_global_var(37, 1);
    end
    else begin
        if (global_var(0) >= 750) then begin
            set_global_var(38, 1);
        end
        else begin
            if (global_var(0) >= 500) then begin
                set_global_var(39, 1);
            end
            else begin
                if (global_var(0) >= 250) then begin
                    set_global_var(40, 1);
                end
                else begin
                    if (global_var(0) > -250) then begin
                        set_global_var(41, 1);
                    end
                    else begin
                        if (global_var(0) > -500) then begin
                            set_global_var(42, 1);
                        end
                        else begin
                            if (global_var(0) > -750) then begin
                                set_global_var(43, 1);
                            end
                            else begin
                                if (global_var(0) > -1000) then begin
                                    set_global_var(44, 1);
                                end
                                else begin
                                    set_global_var(45, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    if (local_var(2) == 0) then begin
        set_local_var(2, 1);
        set_local_var(3, (get_critter_stat(dude_obj, 3) - get_critter_stat(self_obj, 3)) * 5);
        debug_msg("Base Reaction == " + local_var(3));
    end
    Static_Reaction := 0;
    set_local_var(0, 0);
    debug_msg("Start Reaction == " + local_var(0));
    if (reaction_bonus_karma >= 0) then begin
        reaction_bonus_karma := reaction_bonus_karma / 1000;
    end
    else begin
        reaction_bonus_karma := -1 * (-1 * reaction_bonus_karma / 1000);
    end
    if (global_var(57) >= 0) then begin
        reaction_bonus_town_rep := global_var(57) / 2;
    end
    else begin
        reaction_bonus_town_rep := -1 * (-1 * global_var(57) / 2);
    end
    if (has_trait(2, dude_obj, 13)) then begin
        if (get_critter_stat(dude_obj, 34) == get_critter_stat(self_obj, 34)) then begin
            Static_Reaction := Static_Reaction + -20;
        end
        else begin
            Static_Reaction := Static_Reaction + 20;
        end
        debug_msg("Sex Appeal Bonus == " + Static_Reaction);
    end
    else begin
        debug_msg("Sex Appeal Bonus == 0");
    end
    if (Evil_Critter == 1) then begin
        Static_Reaction := Static_Reaction - reaction_bonus_karma;
        debug_msg("Karma Reaction Bonus == " + Static_Reaction);
        Static_Reaction := Static_Reaction - reaction_bonus_town_rep;
        debug_msg("Town Rep Bonus == " + Static_Reaction);
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (global_var(37) == 1) then begin
            Static_Reaction := Static_Reaction - 20;
        end
        else begin
            if (global_var(38) == 1) then begin
                Static_Reaction := Static_Reaction - 15;
            end
            else begin
                if (global_var(39) == 1) then begin
                    Static_Reaction := Static_Reaction - 10;
                end
                else begin
                    if (global_var(40) == 1) then begin
                        Static_Reaction := Static_Reaction - 5;
                    end
                    else begin
                        if (global_var(41) == 1) then begin
                            Static_Reaction := Static_Reaction - 0;
                        end
                        else begin
                            if (global_var(42) == 1) then begin
                                Static_Reaction := Static_Reaction - -5;
                            end
                            else begin
                                if (global_var(43) == 1) then begin
                                    Static_Reaction := Static_Reaction - -10;
                                end
                                else begin
                                    if (global_var(44) == 1) then begin
                                        Static_Reaction := Static_Reaction - -15;
                                    end
                                    else begin
                                        Static_Reaction := Static_Reaction - -20;
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        debug_msg("Bad Person Reaction Bonus == " + Static_Reaction);
    end
    else begin
        Static_Reaction := Static_Reaction + reaction_bonus_karma;
        debug_msg("Karma Reaction Bonus == " + Static_Reaction);
        Static_Reaction := Static_Reaction + reaction_bonus_town_rep;
        debug_msg("Town Rep Bonus == " + Static_Reaction);
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (global_var(37) == 1) then begin
            Static_Reaction := Static_Reaction + 20;
        end
        else begin
            if (global_var(38) == 1) then begin
                Static_Reaction := Static_Reaction + 15;
            end
            else begin
                if (global_var(39) == 1) then begin
                    Static_Reaction := Static_Reaction + 10;
                end
                else begin
                    if (global_var(40) == 1) then begin
                        Static_Reaction := Static_Reaction + 5;
                    end
                    else begin
                        if (global_var(41) == 1) then begin
                            Static_Reaction := Static_Reaction + 0;
                        end
                        else begin
                            if (global_var(42) == 1) then begin
                                Static_Reaction := Static_Reaction + -5;
                            end
                            else begin
                                if (global_var(43) == 1) then begin
                                    Static_Reaction := Static_Reaction + -10;
                                end
                                else begin
                                    if (global_var(44) == 1) then begin
                                        Static_Reaction := Static_Reaction + -15;
                                    end
                                    else begin
                                        Static_Reaction := Static_Reaction + -20;
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        debug_msg("Good Person Reaction Bonus == " + Static_Reaction);
    end
    if (Slavery_Tolerant == 0) then begin
        if (global_var(11) == 1) then begin
            Static_Reaction := Static_Reaction + (2 * -25);
        end
    end
    else begin
        if (Slavery_Tolerant == 1) then begin
            if (global_var(11) == 1) then begin
                Static_Reaction := Static_Reaction + -25;
            end
        end
        else begin
            if (Slavery_Tolerant == 3) then begin
                if (global_var(11) == 1) then begin
                    Static_Reaction := Static_Reaction - -25;
                end
            end
        end
    end
    debug_msg("Slaver + Aligned Reaction == " + Static_Reaction);
    Static_Reaction := Static_Reaction + (10 * has_trait(0, dude_obj, 10));
    debug_msg("Presence Reaction == " + Static_Reaction);
    if (global_var(1) >= 2) then begin
        Static_Reaction := Static_Reaction + -30;
    end
    debug_msg("Childkiller Reaction == " + Static_Reaction);
    set_local_var(0, local_var(3) + Static_Reaction);
    debug_msg("Initial Reaction == " + local_var(0));
    if ((global_var(175) bwand 2) != 0) then begin
        call Node016();
    end
    else begin
        if (((global_var(175) bwand 4) != 0) and (local_var(7) == 0)) then begin
            start_gdialog(510, self_obj, 4, -1, -1);
            gsay_start;
            call Node001();
            gsay_end;
            end_dialogue;
        end
        else begin
            if (local_var(7) == 2) then begin
                call Node015();
            end
            else begin
                if (local_var(7) == 1) then begin
                    start_gdialog(510, self_obj, 4, -1, -1);
                    gsay_start;
                    call Node014();
                    gsay_end;
                    end_dialogue;
                end
                else begin
                    if (local_var(7) == 5) then begin
                        start_gdialog(510, self_obj, 4, -1, -1);
                        gsay_start;
                        call Node011();
                        gsay_end;
                        end_dialogue;
                    end
                    else begin
                        if (local_var(7) == 6) then begin
                            start_gdialog(510, self_obj, 4, -1, -1);
                            gsay_start;
                            call Node013();
                            gsay_end;
                            end_dialogue;
                        end
                        else begin
                            if (local_var(4) == 0) then begin
                                start_gdialog(510, self_obj, 4, -1, -1);
                                gsay_start;
                                call Node001();
                                gsay_end;
                                end_dialogue;
                            end
                            else begin
                                start_gdialog(510, self_obj, 4, -1, -1);
                                gsay_start;
                                call Node007();
                                gsay_end;
                                end_dialogue;
                            end
                        end
                    end
                end
            end
        end
    end
    if ((local_var(7) == 3) or (local_var(7) == 4)) then begin
        call walkToCarlson();
    end
    set_local_var(4, 1);
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(5, global_var(5) + 1);
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
            set_global_var(2, 1);
            set_global_var(3, 0);
        end
        if (metarule(51, self_obj) == 2) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(2, 0);
                set_global_var(1, global_var(1) + 1);
                set_global_var(0, global_var(0) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(37, 0);
                set_global_var(38, 0);
                set_global_var(39, 0);
                set_global_var(40, 0);
                set_global_var(41, 0);
                set_global_var(42, 0);
                set_global_var(43, 0);
                set_global_var(44, 0);
                set_global_var(45, 0);
                if (global_var(0) >= 1000) then begin
                    set_global_var(37, 1);
                end
                else begin
                    if (global_var(0) >= 750) then begin
                        set_global_var(38, 1);
                    end
                    else begin
                        if (global_var(0) >= 500) then begin
                            set_global_var(39, 1);
                        end
                        else begin
                            if (global_var(0) >= 250) then begin
                                set_global_var(40, 1);
                            end
                            else begin
                                if (global_var(0) > -250) then begin
                                    set_global_var(41, 1);
                                end
                                else begin
                                    if (global_var(0) > -500) then begin
                                        set_global_var(42, 1);
                                    end
                                    else begin
                                        if (global_var(0) > -750) then begin
                                            set_global_var(43, 1);
                                        end
                                        else begin
                                            if (global_var(0) > -1000) then begin
                                                set_global_var(44, 1);
                                            end
                                            else begin
                                                set_global_var(45, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(57, global_var(57) + -8);
                debug_msg("Added " + -8 + " to Town Rep");
            end
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
            set_global_var(3, 1);
            set_global_var(2, 0);
        end
        set_global_var(0, global_var(0) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(57, global_var(57) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 0) then begin
        display_msg(message_str(510, 100));
    end
    else begin
        display_msg(message_str(510, 101));
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(510, 102));
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(6, 1);
    end
end

procedure map_enter_p_proc
begin
    Only_Once := 0;
    critter_add_trait(self_obj, 1, 6, 81);
    critter_add_trait(self_obj, 1, 5, 15);
    numTvars := 6;
    tile0 := 19139;
    tile1 := 17129;
    tile2 := 16928;
    tile3 := 19524;
    tile4 := 21928;
    tile5 := 20139;
    tile6 := 19749;
    tile7 := 21348;
    tile8 := 21752;
    lTime0 := game_ticks(random(0, 4));
    lTime1 := game_ticks(random(0, 4));
    lTime2 := game_ticks(random(0, 4));
    lTime3 := game_ticks(random(0, 4));
    lTime4 := game_ticks(random(0, 4));
    lTime5 := game_ticks(random(0, 4));
    if (metarule(22, 0) == 0) then begin
        call tvar_Warp_To_Pos(0, game_time + game_ticks(1));
    end
    cbFunc := "destCall";
    add_timer_event(self_obj, game_ticks(1), -1);
    doNormalWalking := 1;
end

procedure push_p_proc
begin
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
end

procedure Node001
begin
    gsay_reply(510, 103);
    giq_option(1, 510, obj_name(dude_obj), Node002, 50);
    if ((global_var(175) bwand 4) != 0) then begin
        giq_option(4, 510, 105, Node003, 50);
    end
    giq_option(4, 510, 106, Node004, 50);
    if (global_var(1) >= 2) then begin
        giq_option(4, 510, 107, Node006, 51);
    end
    if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
        giq_option(4, 510, 108, Node007, 51);
    end
    giq_option(4, 510, 109, Node999, 50);
end

procedure Node002
begin
    gsay_reply(510, obj_name(dude_obj) + message_str(510, 110));
    giq_option(0, 510, message_str(14, 350), Node999, 50);
end

procedure Node003
begin
    gsay_reply(510, 111);
    giq_option(4, 510, 112, Node006, 50);
    giq_option(4, 510, 113, Node999, 50);
end

procedure Node004
begin
    gsay_reply(510, 114);
    giq_option(4, 510, 115, Node005, 50);
    giq_option(4, 510, 116, Node999, 50);
end

procedure Node005
begin
    gsay_reply(510, 117);
    giq_option(4, 510, 118, Node999a, 50);
    giq_option(4, 510, 119, Node999, 50);
end

procedure Node006
begin
    gsay_reply(510, 120);
    set_local_var(7, 1);
    giq_option(0, 510, message_str(14, 350), Node999, 50);
end

procedure Node007
begin
    gsay_reply(510, 121);
    giq_option(4, 510, 122, Node129a, 50);
    if ((global_var(175) bwand 1) != 0) then begin
        giq_option(7, 510, 123, Node010, 50);
    end
    giq_option(-3, 510, 124, Node008, 50);
end

procedure Node008
begin
    gsay_reply(510, 125);
    giq_option(0, 510, message_str(14, 350), Node999, 50);
end

procedure Node009
begin
    set_local_var(7, 3);
    gsay_reply(510, 126);
    giq_option(0, 510, message_str(14, 350), Node999, 50);
end

procedure Node010
begin
    gsay_reply(510, 127);
    giq_option(7, 510, 128, Node999b, 50);
end

procedure Node011
begin
    set_local_var(7, 0);
    gsay_reply(510, 129);
    giq_option(0, 510, message_str(14, 350), Node999, 50);
end

procedure Node012
begin
    set_local_var(7, 0);
    gsay_reply(510, 130);
    giq_option(0, 510, message_str(14, 350), Node999, 50);
end

procedure Node013
begin
    gsay_reply(510, 131);
    set_map_var(7, 1);
    giq_option(0, 510, message_str(14, 350), Node999, 50);
end

procedure Node014
begin
    gsay_reply(510, 132);
    giq_option(4, 510, 133, Node999c, 50);
    giq_option(4, 510, 134, Node999, 50);
end

procedure Node015
begin
    float_msg(self_obj, message_str(510, 134), 0);
end

procedure Node016
begin
    float_msg(self_obj, message_str(510, 135), 0);
end

procedure destCall(variable arg0)
begin
    debug_msg("SCCARKID: hit tile: " + arg0);
end

procedure anim_end_call
begin
    if ((doNormalWalking == 0) and not(combat_is_initialized)) then begin
        if (tile_num(self_obj) == getTile(5)) then begin
            doNormalWalking := 1;
            call tvar_Warp_To_Pos(5, game_time + game_ticks(1));
            add_timer_event(self_obj, game_ticks(1), -1);
        end
        else begin
            if (tile_num(self_obj) == getTile(6)) then begin
                if ((local_var(7) == 3) or (local_var(7) == 4)) then begin
                    reg_anim_func(2, self_obj);
                    reg_anim_func(1, 1);
                    animate_move_obj_to_tile(self_obj, getTile(7), 1);
                    reg_anim_func(3, 0);
                end
                else begin
                    reg_anim_func(2, self_obj);
                    reg_anim_func(1, 1);
                    animate_move_obj_to_tile(self_obj, getTile(5), 1);
                    reg_anim_func(3, 0);
                end
            end
            else begin
                if (tile_num(self_obj) == getTile(7)) then begin
                    reg_anim_func(2, self_obj);
                    reg_anim_func(1, 1);
                    if ((local_var(7) == 3) or (local_var(7) == 4)) then begin
                        animate_move_obj_to_tile(self_obj, getTile(8), 1);
                    end
                    else begin
                        if ((local_var(7) == 5) or (local_var(7) == 6)) then begin
                            animate_move_obj_to_tile(self_obj, getTile(6), 1);
                        end
                    end
                    reg_anim_func(3, 0);
                end
                else begin
                    if (tile_num(self_obj) == getTile(8)) then begin
                        if ((local_var(7) == 3) or (local_var(7) == 4)) then begin
                            reg_anim_func(2, self_obj);
                            add_timer_event(self_obj, game_ticks(10), 1);
                        end
                        else begin
                            reg_anim_func(2, self_obj);
                            reg_anim_func(1, 1);
                            animate_move_obj_to_tile(self_obj, getTile(7), 1);
                            reg_anim_func(3, 0);
                        end
                    end
                end
            end
        end
    end
end

procedure walkToCarlson
begin
    doNormalWalking := 0;
    reg_anim_func(2, self_obj);
    reg_anim_func(1, 1);
    animate_move_obj_to_tile(self_obj, getTile(6), 1);
    reg_anim_func(3, 0);
end

procedure timed_event_p_proc
begin
    if (doNormalWalking) then begin
        if (check_tile_events(fixed_param)) then begin
            add_timer_event(self_obj, game_ticks(1), -1);
        end
    end
    else begin
        if (fixed_param == 1) then begin
            if (local_var(7) == 3) then begin
                set_local_var(7, 5);
            end
            if (local_var(7) == 4) then begin
                set_local_var(7, 6);
            end
            call anim_end_call();
        end
    end
end

procedure Node999a
begin
    set_local_var(7, 1);
    call Node999();
end

procedure Node129a
begin
    if (local_var(7) == 5) then begin
        set_local_var(7, 0);
        call Node012();
    end
    else begin
        call Node009();
    end
end

procedure Node999b
begin
    set_local_var(7, 4);
    call Node999();
end

procedure Node999c
begin
    set_local_var(7, 2);
    call Node999();
end

