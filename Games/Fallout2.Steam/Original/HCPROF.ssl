variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;
procedure old_pickup_p_proc;
procedure pickup_p_proc;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure critter_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure timed_event_p_proc;
procedure Node998;
procedure Node999;
procedure StartAgility;
procedure StartPerception;
procedure StartIntelligence;
procedure PerformAgilityTest;
procedure PerformPerceptionTest;
procedure PerformIntelligenceTest;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;

import variable professor_obj;
import variable scorpion_obj;
import variable Professor_Box1;
import variable Professor_Box2;

variable Only_Once;
variable Agility_State;
variable Perception_State;
variable Intelligence_State;
variable lost := 1;
variable float_mentats;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure old_pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (3 == 1) then begin
            attack_complex(source_obj, 0, 1, 0, 0, 30000, 0, 0);
        end
        else begin
            if (3 == 2) then begin
                float_msg(self_obj, message_str(14, random(3325, 3329)), 0);
                if (7 > -1) then begin
                    if (local_var(7) >= 1) then begin
                        attack_complex(source_obj, 0, 1, 0, 0, 30000, 0, 0);
                    end
                    set_local_var(7, local_var(7) + 1);
                end
            end
            else begin
                if (3 == 3) then begin
                    float_msg(self_obj, message_str(14, random(3050, 3064)), 0);
                    if (7 > -1) then begin
                        if (local_var(7) >= 1) then begin
                            attack_complex(source_obj, 0, 1, 0, 0, 30000, 0, 0);
                        end
                        set_local_var(7, local_var(7) + 1);
                    end
                end
                else begin
                    if (3 == 4) then begin
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(source_obj), tile_num(self_obj)), random(8, 14)), 1);
                    end
                end
            end
        end
    end
    if (-1 == 1) then begin
        call old_pickup_p_proc();
    end
end

procedure start
begin
    professor_obj := self_obj;
end

procedure critter_p_proc
begin
    if ((local_var(5) != 0) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        if (critter_is_fleeing(self_obj)) then begin
            if (anim_busy(self_obj) == 0) then begin
                if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                    if (anim_busy(self_obj) == 0) then begin
                        global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                        global_temp := (global_temp + 1) % 6;
                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                            debug_msg("flee loop: rot == " + global_temp);
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                        end
                    end
                end
            end
        end
        else begin
            attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
        end
    end
end

procedure talk_p_proc
begin
    Evil_Critter := 0;
    Slavery_Tolerant := 2;
    Karma_Perception := 10;
    set_global_var(37, 0);
    set_global_var(38, 0);
    set_global_var(39, 0);
    set_global_var(40, 0);
    set_global_var(41, 0);
    set_global_var(42, 0);
    set_global_var(43, 0);
    set_global_var(44, 0);
    set_global_var(45, 0);
    if (global_var(0) >= 1000) then begin
        set_global_var(37, 1);
    end
    else begin
        if (global_var(0) >= 750) then begin
            set_global_var(38, 1);
        end
        else begin
            if (global_var(0) >= 500) then begin
                set_global_var(39, 1);
            end
            else begin
                if (global_var(0) >= 250) then begin
                    set_global_var(40, 1);
                end
                else begin
                    if (global_var(0) > -250) then begin
                        set_global_var(41, 1);
                    end
                    else begin
                        if (global_var(0) > -500) then begin
                            set_global_var(42, 1);
                        end
                        else begin
                            if (global_var(0) > -750) then begin
                                set_global_var(43, 1);
                            end
                            else begin
                                if (global_var(0) > -1000) then begin
                                    set_global_var(44, 1);
                                end
                                else begin
                                    set_global_var(45, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    if (local_var(2) == 0) then begin
        set_local_var(2, 1);
        set_local_var(3, (get_critter_stat(dude_obj, 3) - get_critter_stat(self_obj, 3)) * 5);
        debug_msg("Base Reaction == " + local_var(3));
    end
    Static_Reaction := 0;
    set_local_var(0, 0);
    debug_msg("Start Reaction == " + local_var(0));
    if (reaction_bonus_karma >= 0) then begin
        reaction_bonus_karma := reaction_bonus_karma / 1000;
    end
    else begin
        reaction_bonus_karma := -1 * (-1 * reaction_bonus_karma / 1000);
    end
    if (global_var(54) >= 0) then begin
        reaction_bonus_town_rep := global_var(54) / 2;
    end
    else begin
        reaction_bonus_town_rep := -1 * (-1 * global_var(54) / 2);
    end
    if (has_trait(2, dude_obj, 13)) then begin
        if (get_critter_stat(dude_obj, 34) == get_critter_stat(self_obj, 34)) then begin
            Static_Reaction := Static_Reaction + -20;
        end
        else begin
            Static_Reaction := Static_Reaction + 20;
        end
        debug_msg("Sex Appeal Bonus == " + Static_Reaction);
    end
    else begin
        debug_msg("Sex Appeal Bonus == 0");
    end
    if (Evil_Critter == 1) then begin
        Static_Reaction := Static_Reaction - reaction_bonus_karma;
        debug_msg("Karma Reaction Bonus == " + Static_Reaction);
        Static_Reaction := Static_Reaction - reaction_bonus_town_rep;
        debug_msg("Town Rep Bonus == " + Static_Reaction);
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (global_var(37) == 1) then begin
            Static_Reaction := Static_Reaction - 20;
        end
        else begin
            if (global_var(38) == 1) then begin
                Static_Reaction := Static_Reaction - 15;
            end
            else begin
                if (global_var(39) == 1) then begin
                    Static_Reaction := Static_Reaction - 10;
                end
                else begin
                    if (global_var(40) == 1) then begin
                        Static_Reaction := Static_Reaction - 5;
                    end
                    else begin
                        if (global_var(41) == 1) then begin
                            Static_Reaction := Static_Reaction - 0;
                        end
                        else begin
                            if (global_var(42) == 1) then begin
                                Static_Reaction := Static_Reaction - -5;
                            end
                            else begin
                                if (global_var(43) == 1) then begin
                                    Static_Reaction := Static_Reaction - -10;
                                end
                                else begin
                                    if (global_var(44) == 1) then begin
                                        Static_Reaction := Static_Reaction - -15;
                                    end
                                    else begin
                                        Static_Reaction := Static_Reaction - -20;
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        debug_msg("Bad Person Reaction Bonus == " + Static_Reaction);
    end
    else begin
        Static_Reaction := Static_Reaction + reaction_bonus_karma;
        debug_msg("Karma Reaction Bonus == " + Static_Reaction);
        Static_Reaction := Static_Reaction + reaction_bonus_town_rep;
        debug_msg("Town Rep Bonus == " + Static_Reaction);
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (global_var(37) == 1) then begin
            Static_Reaction := Static_Reaction + 20;
        end
        else begin
            if (global_var(38) == 1) then begin
                Static_Reaction := Static_Reaction + 15;
            end
            else begin
                if (global_var(39) == 1) then begin
                    Static_Reaction := Static_Reaction + 10;
                end
                else begin
                    if (global_var(40) == 1) then begin
                        Static_Reaction := Static_Reaction + 5;
                    end
                    else begin
                        if (global_var(41) == 1) then begin
                            Static_Reaction := Static_Reaction + 0;
                        end
                        else begin
                            if (global_var(42) == 1) then begin
                                Static_Reaction := Static_Reaction + -5;
                            end
                            else begin
                                if (global_var(43) == 1) then begin
                                    Static_Reaction := Static_Reaction + -10;
                                end
                                else begin
                                    if (global_var(44) == 1) then begin
                                        Static_Reaction := Static_Reaction + -15;
                                    end
                                    else begin
                                        Static_Reaction := Static_Reaction + -20;
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        debug_msg("Good Person Reaction Bonus == " + Static_Reaction);
    end
    if (Slavery_Tolerant == 0) then begin
        if (global_var(11) == 1) then begin
            Static_Reaction := Static_Reaction + (2 * -25);
        end
    end
    else begin
        if (Slavery_Tolerant == 1) then begin
            if (global_var(11) == 1) then begin
                Static_Reaction := Static_Reaction + -25;
            end
        end
        else begin
            if (Slavery_Tolerant == 3) then begin
                if (global_var(11) == 1) then begin
                    Static_Reaction := Static_Reaction - -25;
                end
            end
        end
    end
    debug_msg("Slaver + Aligned Reaction == " + Static_Reaction);
    Static_Reaction := Static_Reaction + (10 * has_trait(0, dude_obj, 10));
    debug_msg("Presence Reaction == " + Static_Reaction);
    if (global_var(1) >= 2) then begin
        Static_Reaction := Static_Reaction + -30;
    end
    debug_msg("Childkiller Reaction == " + Static_Reaction);
    set_local_var(0, local_var(3) + Static_Reaction);
    debug_msg("Initial Reaction == " + local_var(0));
    Agility_State := 0;
    Perception_State := 0;
    Intelligence_State := 0;
    lost := 1;
    if (map_var(19) == 1) then begin
        call Node012();
    end
    else begin
        start_gdialog(1174, self_obj, 4, -1, -1);
        gsay_start;
        call Node001();
        gsay_end;
        end_dialogue;
        set_local_var(4, 1);
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(5, global_var(5) + 1);
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
            set_global_var(2, 1);
            set_global_var(3, 0);
        end
        if (metarule(51, self_obj) == 2) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(2, 0);
                set_global_var(1, global_var(1) + 1);
                set_global_var(0, global_var(0) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(37, 0);
                set_global_var(38, 0);
                set_global_var(39, 0);
                set_global_var(40, 0);
                set_global_var(41, 0);
                set_global_var(42, 0);
                set_global_var(43, 0);
                set_global_var(44, 0);
                set_global_var(45, 0);
                if (global_var(0) >= 1000) then begin
                    set_global_var(37, 1);
                end
                else begin
                    if (global_var(0) >= 750) then begin
                        set_global_var(38, 1);
                    end
                    else begin
                        if (global_var(0) >= 500) then begin
                            set_global_var(39, 1);
                        end
                        else begin
                            if (global_var(0) >= 250) then begin
                                set_global_var(40, 1);
                            end
                            else begin
                                if (global_var(0) > -250) then begin
                                    set_global_var(41, 1);
                                end
                                else begin
                                    if (global_var(0) > -500) then begin
                                        set_global_var(42, 1);
                                    end
                                    else begin
                                        if (global_var(0) > -750) then begin
                                            set_global_var(43, 1);
                                        end
                                        else begin
                                            if (global_var(0) > -1000) then begin
                                                set_global_var(44, 1);
                                            end
                                            else begin
                                                set_global_var(45, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(54, global_var(54) + -8);
                debug_msg("Added " + -8 + " to Town Rep");
            end
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
            set_global_var(3, 1);
            set_global_var(2, 0);
        end
        set_global_var(0, global_var(0) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(54, global_var(54) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 0) then begin
        display_msg(message_str(1174, 100));
    end
    else begin
        display_msg(message_str(1174, 101));
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(1174, 102));
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (party_member_obj(obj_pid(source_obj)) != 0) then begin
        set_local_var(6, 1);
    end
end

procedure map_enter_p_proc
begin
    Only_Once := 0;
    professor_obj := self_obj;
end

procedure map_update_p_proc
begin
    professor_obj := self_obj;
end

procedure timed_event_p_proc
begin
    if (fixed_param == 0) then begin
        call PerformAgilityTest();
    end
    else begin
        if (fixed_param == 1) then begin
            call PerformPerceptionTest();
        end
        else begin
            if (fixed_param == 2) then begin
                call PerformIntelligenceTest();
            end
        end
    end
end

procedure Node998
begin
end

procedure Node999
begin
end

procedure StartAgility
begin
    add_timer_event(self_obj, 1, 0);
end

procedure StartPerception
begin
    add_timer_event(self_obj, 1, 1);
end

procedure StartIntelligence
begin
    add_timer_event(self_obj, 1, 2);
end

procedure PerformAgilityTest
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    float_msg(self_obj, " ", 8);
    float_msg(dude_obj, " ", 8);
    float_msg(scorpion_obj, " ", 8);
    float_msg(self_obj, 0, 0);
    float_msg(dude_obj, 0, 0);
    float_msg(scorpion_obj, 0, 0);
    if (Agility_State == 0) then begin
        set_map_var(21, 1);
        lost := 1;
        game_ui_disable;
        gfade_out(600);
        obj_close(Professor_Box1);
        obj_lock(Professor_Box1);
        obj_close(Professor_Box2);
        obj_lock(Professor_Box2);
        move_to(self_obj, 23466, 0);
        critter_attempt_placement(self_obj, 23466, 0);
        anim(self_obj, 1000, 1);
        move_to(scorpion_obj, 23661, 0);
        critter_attempt_placement(scorpion_obj, 23661, 0);
        anim(scorpion_obj, 1000, 5);
        move_to(dude_obj, 23663, 0);
        critter_attempt_placement(dude_obj, 23663, 0);
        anim(dude_obj, 1000, 5);
        gfade_in(600);
        Agility_State := Agility_State + 1;
        add_timer_event(self_obj, 5, 0);
    end
    else begin
        if (Agility_State == 1) then begin
            reg_anim_func(2, dude_obj);
            reg_anim_func(1, 1);
            reg_anim_animate(dude_obj, 11, -1);
            reg_anim_func(3, 0);
            Agility_State := Agility_State + 1;
            add_timer_event(self_obj, game_ticks(1), 0);
        end
        else begin
            if (Agility_State == 2) then begin
                LVar0 := do_check(dude_obj, 5, -1);
                if (is_success(LVar0)) then begin
                    obj_unlock(Professor_Box1);
                    obj_open(Professor_Box1);
                    lost := 0;
                    set_local_var(12, local_var(12) + 1);
                    if (local_var(9) == 0) then begin
                        set_local_var(9, 1);
                        display_msg(message_str(1174, 214));
                        if (get_critter_stat(dude_obj, 4) >= 4) then begin
                            give_exp_points(500);
                            display_msg(message_str(14, 100) + 500 + message_str(14, 101));
                        end
                        else begin
                            give_exp_points(500);
                            display_msg(message_str(14, 100) + 500 + message_str(14, 101));
                            float_mentats := 1;
                            LVar2 := create_object_sid(53, 0, 0, -1);
                            add_obj_to_inven(dude_obj, LVar2);
                        end
                    end
                    if (get_critter_stat(dude_obj, 4) >= 4) then begin
                        float_msg(dude_obj, message_str(1174, 200), 4);
                    end
                    else begin
                        float_msg(dude_obj, message_str(1174, 201), 4);
                    end
                end
                else begin
                    if (get_critter_stat(dude_obj, 4) >= 4) then begin
                        float_msg(dude_obj, message_str(1174, 202), 4);
                    end
                    else begin
                        float_msg(dude_obj, message_str(1174, 203), 4);
                    end
                end
                Agility_State := Agility_State + 1;
                add_timer_event(self_obj, game_ticks(3), 0);
            end
            else begin
                if (Agility_State == 3) then begin
                    reg_anim_func(2, scorpion_obj);
                    reg_anim_func(1, 1);
                    reg_anim_animate(scorpion_obj, 0, -1);
                    reg_anim_func(3, 0);
                    Agility_State := Agility_State + 1;
                    add_timer_event(self_obj, game_ticks(1), 0);
                end
                else begin
                    if (Agility_State == 4) then begin
                        obj_unlock(Professor_Box2);
                        obj_open(Professor_Box2);
                        set_local_var(13, local_var(13) + 1);
                        float_msg(scorpion_obj, message_str(1174, 204), 3);
                        Agility_State := Agility_State + 1;
                        add_timer_event(self_obj, game_ticks(2), 0);
                    end
                    else begin
                        if (Agility_State == 5) then begin
                            if (get_critter_stat(dude_obj, 4) >= 4) then begin
                                float_msg(dude_obj, message_str(1174, 205), 4);
                            end
                            else begin
                                float_msg(dude_obj, message_str(1174, 206), 4);
                            end
                            Agility_State := Agility_State + 1;
                            add_timer_event(self_obj, game_ticks(3), 0);
                        end
                        else begin
                            if (Agility_State == 6) then begin
                                float_msg(scorpion_obj, message_str(1174, 207), 3);
                                Agility_State := Agility_State + 1;
                                add_timer_event(self_obj, game_ticks(2), 0);
                            end
                            else begin
                                if (Agility_State == 7) then begin
                                    if (lost == 0) then begin
                                        float_msg(self_obj, message_str(1174, 208), 8);
                                    end
                                    else begin
                                        LVar1 := message_str(1174, 209) + local_var(13) + message_str(1174, 210) + obj_name(dude_obj) + message_str(1174, 211) + local_var(12) + message_str(1174, 212);
                                        float_msg(self_obj, LVar1, 8);
                                    end
                                    Agility_State := Agility_State + 1;
                                    add_timer_event(self_obj, game_ticks(3), 0);
                                end
                                else begin
                                    if (Agility_State == 8) then begin
                                        if ((lost == 0) and (get_critter_stat(dude_obj, 4) <= 3) and (float_mentats == 1)) then begin
                                            float_mentats := 0;
                                            float_msg(self_obj, message_str(1174, 215), 8);
                                            Agility_State := Agility_State + 1;
                                            add_timer_event(self_obj, game_ticks(3), 0);
                                        end
                                        else begin
                                            Agility_State := Agility_State + 1;
                                            add_timer_event(self_obj, 1, 0);
                                        end
                                    end
                                    else begin
                                        if (Agility_State == 9) then begin
                                            if ((lost == 1) and (get_critter_stat(dude_obj, 4) <= 3)) then begin
                                                float_msg(dude_obj, message_str(1174, 213), 4);
                                                Agility_State := Agility_State + 1;
                                                add_timer_event(self_obj, game_ticks(2), 0);
                                            end
                                            else begin
                                                Agility_State := Agility_State + 1;
                                                add_timer_event(self_obj, 1, 0);
                                            end
                                        end
                                        else begin
                                            if (Agility_State == 10) then begin
                                                gfade_out(600);
                                                set_map_var(21, 0);
                                                obj_close(Professor_Box1);
                                                obj_lock(Professor_Box1);
                                                obj_close(Professor_Box2);
                                                obj_lock(Professor_Box2);
                                                move_to(self_obj, 24667, 0);
                                                critter_attempt_placement(self_obj, 24667, 0);
                                                anim(self_obj, 1000, 3);
                                                move_to(scorpion_obj, 23667, 0);
                                                critter_attempt_placement(scorpion_obj, 23667, 0);
                                                anim(scorpion_obj, 1000, 2);
                                                move_to(dude_obj, 24669, 0);
                                                critter_attempt_placement(dude_obj, 24669, 0);
                                                anim(dude_obj, 1000, 1);
                                                game_ui_enable;
                                                gfade_in(600);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure PerformPerceptionTest
begin
    variable LVar0 := 0;
    float_msg(self_obj, " ", 8);
    float_msg(dude_obj, " ", 8);
    float_msg(scorpion_obj, " ", 8);
    float_msg(self_obj, 0, 0);
    float_msg(dude_obj, 0, 0);
    float_msg(scorpion_obj, 0, 0);
    if (Perception_State == 0) then begin
        set_map_var(21, 1);
        lost := 1;
        game_ui_disable;
        gfade_out(600);
        move_to(self_obj, 24063, 0);
        critter_attempt_placement(self_obj, 24063, 0);
        anim(self_obj, 1000, 3);
        move_to(scorpion_obj, 24468, 0);
        critter_attempt_placement(scorpion_obj, 24468, 0);
        anim(scorpion_obj, 1000, 5);
        move_to(dude_obj, 24466, 0);
        critter_attempt_placement(dude_obj, 24466, 0);
        anim(dude_obj, 1000, 5);
        gfade_in(600);
        Perception_State := Perception_State + 1;
        add_timer_event(self_obj, 5, 1);
    end
    else begin
        if (Perception_State == 1) then begin
            LVar0 := do_check(dude_obj, 1, -1);
            if (is_success(LVar0)) then begin
                if (local_var(10) == 0) then begin
                    set_local_var(10, 1);
                    display_msg(message_str(1174, 306));
                    set_local_var(12, local_var(12) + 1);
                    if (get_critter_stat(dude_obj, 4) >= 4) then begin
                        give_exp_points(500);
                        display_msg(message_str(14, 100) + 500 + message_str(14, 101));
                    end
                    else begin
                        give_exp_points(500);
                        display_msg(message_str(14, 100) + 500 + message_str(14, 101));
                    end
                end
                lost := 0;
                float_msg(dude_obj, message_str(1174, 300), 4);
            end
            else begin
                float_msg(dude_obj, message_str(1174, 302), 4);
            end
            Perception_State := Perception_State + 1;
            add_timer_event(self_obj, game_ticks(3), 1);
        end
        else begin
            if (Perception_State == 2) then begin
                if (lost == 0) then begin
                    float_msg(self_obj, message_str(1174, 301), 8);
                end
                else begin
                    float_msg(self_obj, message_str(1174, 303), 8);
                end
                Perception_State := Perception_State + 1;
                add_timer_event(self_obj, game_ticks(3), 1);
            end
            else begin
                if (Perception_State == 3) then begin
                    float_msg(scorpion_obj, message_str(1174, 304), 3);
                    set_local_var(13, local_var(13) + 1);
                    Perception_State := Perception_State + 1;
                    add_timer_event(self_obj, game_ticks(3), 1);
                end
                else begin
                    if (Perception_State == 4) then begin
                        float_msg(self_obj, message_str(1174, 305), 8);
                        Perception_State := Perception_State + 1;
                        add_timer_event(self_obj, game_ticks(4), 1);
                    end
                    else begin
                        if (Perception_State == 5) then begin
                            gfade_out(600);
                            set_map_var(21, 0);
                            move_to(self_obj, 24667, 0);
                            critter_attempt_placement(self_obj, 24667, 0);
                            anim(self_obj, 1000, 3);
                            move_to(scorpion_obj, 23667, 0);
                            critter_attempt_placement(scorpion_obj, 23667, 0);
                            anim(scorpion_obj, 1000, 2);
                            move_to(dude_obj, 24669, 0);
                            critter_attempt_placement(dude_obj, 24669, 0);
                            anim(dude_obj, 1000, 1);
                            game_ui_enable;
                            gfade_in(600);
                        end
                    end
                end
            end
        end
    end
end

procedure PerformIntelligenceTest
begin
    variable LVar0 := 0;
    float_msg(self_obj, " ", 8);
    float_msg(dude_obj, " ", 8);
    float_msg(scorpion_obj, " ", 8);
    float_msg(self_obj, 0, 0);
    float_msg(dude_obj, 0, 0);
    float_msg(scorpion_obj, 0, 0);
    if (Intelligence_State == 0) then begin
        set_map_var(21, 1);
        lost := 1;
        game_ui_disable;
        gfade_out(600);
        move_to(self_obj, 25067, 0);
        critter_attempt_placement(self_obj, 25067, 0);
        anim(self_obj, 1000, 3);
        move_to(scorpion_obj, 24870, 0);
        critter_attempt_placement(scorpion_obj, 24870, 0);
        anim(scorpion_obj, 1000, 2);
        move_to(dude_obj, 25470, 0);
        critter_attempt_placement(dude_obj, 25470, 0);
        anim(dude_obj, 1000, 5);
        gfade_in(600);
        Intelligence_State := Intelligence_State + 1;
        add_timer_event(self_obj, 5, 2);
    end
    else begin
        if (Intelligence_State == 1) then begin
            reg_anim_func(2, dude_obj);
            reg_anim_func(1, 1);
            reg_anim_animate(dude_obj, 11, -1);
            reg_anim_func(3, 0);
            if (map_var(20) == 1) then begin
                Intelligence_State := 6;
                add_timer_event(self_obj, game_ticks(1), 2);
            end
            else begin
                Intelligence_State := Intelligence_State + 1;
                add_timer_event(self_obj, game_ticks(2), 2);
            end
        end
        else begin
            if (Intelligence_State == 2) then begin
                reg_anim_func(2, scorpion_obj);
                reg_anim_func(1, 1);
                reg_anim_animate(scorpion_obj, 0, -1);
                reg_anim_func(3, 0);
                Intelligence_State := Intelligence_State + 1;
                add_timer_event(self_obj, game_ticks(1), 2);
            end
            else begin
                if (Intelligence_State == 3) then begin
                    float_msg(scorpion_obj, message_str(1174, 400), 3);
                    set_local_var(13, local_var(13) + 1);
                    Intelligence_State := Intelligence_State + 1;
                    add_timer_event(self_obj, game_ticks(2), 2);
                end
                else begin
                    if (Intelligence_State == 4) then begin
                        if (get_critter_stat(dude_obj, 4) >= 4) then begin
                            float_msg(dude_obj, message_str(1174, 401), 4);
                        end
                        else begin
                            float_msg(dude_obj, message_str(1174, 402), 4);
                        end
                        Intelligence_State := Intelligence_State + 1;
                        add_timer_event(self_obj, game_ticks(2), 2);
                    end
                    else begin
                        if (Intelligence_State == 5) then begin
                            float_msg(self_obj, message_str(1174, 403), 8);
                            Intelligence_State := 100;
                            add_timer_event(self_obj, game_ticks(2), 2);
                        end
                        else begin
                            if (Intelligence_State == 6) then begin
                                if (local_var(11) == 0) then begin
                                    set_local_var(11, 1);
                                    display_msg(message_str(1174, 407));
                                    set_local_var(12, local_var(12) + 1);
                                    if (get_critter_stat(dude_obj, 4) >= 4) then begin
                                        give_exp_points(500);
                                        display_msg(message_str(14, 100) + 500 + message_str(14, 101));
                                    end
                                    else begin
                                        give_exp_points(500);
                                        display_msg(message_str(14, 100) + 500 + message_str(14, 101));
                                    end
                                end
                                if (get_critter_stat(dude_obj, 4) >= 4) then begin
                                    float_msg(dude_obj, message_str(1174, 404), 4);
                                end
                                else begin
                                    float_msg(dude_obj, message_str(1174, 405), 4);
                                end
                                Intelligence_State := Intelligence_State + 1;
                                add_timer_event(self_obj, game_ticks(2), 2);
                            end
                            else begin
                                if (Intelligence_State == 7) then begin
                                    float_msg(scorpion_obj, message_str(1174, 406), 3);
                                    attack_setup(scorpion_obj, dude_obj);
                                    game_ui_enable;
                                end
                                else begin
                                    if (Intelligence_State == 100) then begin
                                        gfade_out(600);
                                        set_map_var(21, 0);
                                        move_to(self_obj, 24667, 0);
                                        critter_attempt_placement(self_obj, 24667, 0);
                                        anim(self_obj, 1000, 3);
                                        move_to(scorpion_obj, 23667, 0);
                                        critter_attempt_placement(scorpion_obj, 23667, 0);
                                        anim(scorpion_obj, 1000, 2);
                                        move_to(dude_obj, 24669, 0);
                                        critter_attempt_placement(dude_obj, 24669, 0);
                                        anim(dude_obj, 1000, 1);
                                        game_ui_enable;
                                        gfade_in(600);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure Node001
begin
    if (local_var(4) == 0) then begin
        gsay_reply(1174, 104);
    end
    else begin
        gsay_reply(1174, message_str(1174, 103) + " " + message_str(1174, 104));
    end
    giq_option(-3, 1174, 105, Node002, 50);
    if (local_var(8) == 1) then begin
        giq_option(-3, 1174, 106, Node003, 50);
    end
    giq_option(-3, 1174, 148, Node999, 50);
    giq_option(4, 1174, 107, Node009, 50);
    if (local_var(8) == 1) then begin
        giq_option(4, 1174, 108, Node005, 50);
    end
    giq_option(4, 1174, 109, Node999, 50);
end

procedure Node002
begin
    set_local_var(8, 1);
    gsay_reply(1174, 110);
    giq_option(-3, 1174, 111, Node003, 50);
    giq_option(-3, 1174, 112, Node004, 50);
end

procedure Node003
begin
    gsay_reply(1174, 113);
    giq_option(-3, 1174, 114, Node006, 50);
    giq_option(-3, 1174, 115, Node007, 50);
    giq_option(-3, 1174, 116, Node008, 50);
    giq_option(-3, 1174, 117, Node004, 50);
end

procedure Node004
begin
    gsay_reply(1174, 118);
    giq_option(-3, 1174, 119, Node999, 50);
    giq_option(4, 1174, 120, Node999, 50);
end

procedure Node005
begin
    gsay_reply(1174, 121);
    giq_option(4, 1174, 122, Node006, 50);
    giq_option(4, 1174, 123, Node007, 50);
    giq_option(4, 1174, 124, Node008, 50);
    giq_option(4, 1174, 125, Node004, 50);
end

procedure Node006
begin
    gsay_reply(1174, 126);
    giq_option(-3, 1174, 127, StartAgility, 50);
    giq_option(4, 1174, 128, StartAgility, 50);
end

procedure Node007
begin
    gsay_reply(1174, 129);
    giq_option(-3, 1174, 130, StartPerception, 50);
    giq_option(4, 1174, 131, StartPerception, 50);
end

procedure Node008
begin
    gsay_reply(1174, 132);
    giq_option(-3, 1174, 133, StartIntelligence, 50);
    giq_option(4, 1174, 134, StartIntelligence, 50);
end

procedure Node009
begin
    set_local_var(8, 1);
    set_map_var(22, 1);
    gsay_reply(1174, 135);
    giq_option(4, 1174, 136, Node010, 50);
    giq_option(4, 1174, 137, Node005, 50);
    giq_option(4, 1174, 138, Node011, 50);
    giq_option(4, 1174, 139, Node999, 50);
end

procedure Node010
begin
    gsay_reply(1174, 140);
    giq_option(4, 1174, 141, Node011, 50);
    giq_option(4, 1174, 142, Node005, 50);
    giq_option(4, 1174, 143, Node999, 50);
end

procedure Node011
begin
    gsay_reply(1174, 144);
    giq_option(4, 1174, 145, Node005, 50);
    giq_option(4, 1174, 146, Node999, 50);
end

procedure Node012
begin
    float_msg(self_obj, message_str(1174, 147), 8);
end

