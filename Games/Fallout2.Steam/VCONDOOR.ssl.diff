diff --git a/Games/Fallout2.Steam/Original/VCONDOOR.ssl b/Games/Fallout2.Steam/ReDefine/VCONDOOR.ssl
index f65ec56..58edecb 100644
--- a/Games/Fallout2.Steam/Original/VCONDOOR.ssl
+++ b/Games/Fallout2.Steam/ReDefine/VCONDOOR.ssl
@@ -10,23 +10,23 @@ variable test;
 
 procedure start
 begin
-    if (script_action == 3) then begin
+    if (script_action == description_proc) then begin
         call description_p_proc();
     end
     else begin
-        if (script_action == 15) then begin
+        if (script_action == map_enter_proc) then begin
             call map_enter_p_proc();
         end
         else begin
-            if (script_action == 6) then begin
+            if (script_action == use_proc) then begin
                 call use_p_proc();
             end
             else begin
-                if (script_action == 7) then begin
+                if (script_action == use_obj_on_proc) then begin
                     call use_obj_on_p_proc();
                 end
                 else begin
-                    if (script_action == 8) then begin
+                    if (script_action == use_skill_on_proc) then begin
                         call use_skill_on_p_proc();
                     end
                 end
@@ -38,7 +38,7 @@ end
 procedure description_p_proc
 begin
     script_overrides;
-    display_msg(message_str(363, 100));
+    display_msg(message_str(SCRIPT_EILV2DSK, 100));
 end
 
 procedure map_enter_p_proc
@@ -50,7 +50,7 @@ procedure use_p_proc
 begin
     if (obj_is_locked(self_obj)) then begin
         script_overrides;
-        display_msg(message_str(363, 101));
+        display_msg(message_str(SCRIPT_EILV2DSK, 101));
     end
 end
 
@@ -59,21 +59,21 @@ begin
     if (obj_being_used_with == 77) then begin
         script_overrides;
         if (not(obj_is_locked(self_obj))) then begin
-            display_msg(message_str(363, 104));
+            display_msg(message_str(SCRIPT_EILV2DSK, 104));
         end
         else begin
             test := roll_vs_skill(dude_obj, 9, 0);
             if (is_success(test)) then begin
-                display_msg(message_str(363, 102));
+                display_msg(message_str(SCRIPT_EILV2DSK, 102));
                 obj_unlock(self_obj);
             end
             else begin
                 if (is_critical(test)) then begin
-                    display_msg(message_str(363, 103));
+                    display_msg(message_str(SCRIPT_EILV2DSK, 103));
                     jam_lock(self_obj);
                 end
                 else begin
-                    display_msg(message_str(363, 106));
+                    display_msg(message_str(SCRIPT_EILV2DSK, 106));
                 end
             end
         end
@@ -85,24 +85,23 @@ begin
     if (action_being_used == 9) then begin
         script_overrides;
         if (not(obj_is_locked(self_obj))) then begin
-            display_msg(message_str(363, 104));
+            display_msg(message_str(SCRIPT_EILV2DSK, 104));
         end
         else begin
             test := roll_vs_skill(source_obj, action_being_used, -20);
             if (is_success(test)) then begin
-                display_msg(message_str(363, 102));
+                display_msg(message_str(SCRIPT_EILV2DSK, 102));
                 obj_unlock(self_obj);
             end
             else begin
                 if (is_critical(test)) then begin
-                    display_msg(message_str(363, 103));
+                    display_msg(message_str(SCRIPT_EILV2DSK, 103));
                     jam_lock(self_obj);
                 end
                 else begin
-                    display_msg(message_str(363, 105));
+                    display_msg(message_str(SCRIPT_EILV2DSK, 105));
                 end
             end
         end
     end
 end
-
