diff --git a/Games/Fallout2.Steam/Original/DCBLKJCK.ssl b/Games/Fallout2.Steam/ReDefine/DCBLKJCK.ssl
index 866aca3..205be39 100644
--- a/Games/Fallout2.Steam/Original/DCBLKJCK.ssl
+++ b/Games/Fallout2.Steam/ReDefine/DCBLKJCK.ssl
@@ -68,10 +68,10 @@ begin
             if (anim_busy(self_obj) == 0) then begin
                 if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                     if (anim_busy(self_obj) == 0) then begin
-                        global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
+                        global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                         animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                         global_temp := (global_temp + 1) % 6;
-                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
+                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                             debug_msg("flee loop: rot == " + global_temp);
                             animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                             global_temp := (global_temp + 1) % 6;
@@ -81,7 +81,7 @@ begin
             end
         end
         else begin
-            attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
+            attack(dude_obj);
         end
     end
 end
@@ -93,11 +93,11 @@ end
 
 procedure check_pickup
 begin
-    if ((source_obj == dude_obj) or (party_member_obj(obj_pid(source_obj)) != 0)) then begin
+    if ((source_obj == dude_obj) or (obj_in_party(source_obj))) then begin
         caught_thief := 0;
-        if (cur_map_index == 6) then begin
+        if (CUR_MAP_DENBUS1) then begin
             if (tile_in_tile_rect(16679, 16667, 19479, 19467, source_obj) and (becky_guard_obj != 0)) then begin
-                metarule3(100, becky_guard_obj, 12, 0);
+                rm_fixed_timer_event(becky_guard_obj, 12);
                 add_timer_event(becky_guard_obj, 0, 12);
             end
         end
@@ -109,8 +109,8 @@ end
 
 procedure do_talk_p_proc
 begin
-    if ((global_var(447) bwand 2048) != 0) then begin
-        float_msg(self_obj, message_str(75, 100), 8);
+    if ((global_var(GVAR_DEN_FLAG_3) bwand 2048) != 0) then begin
+        float_msg(self_obj, message_str(SCRIPT_DCCRAPS, 100), FLOAT_MSG_YELLOW);
     end
     else begin
         call def_talk_p_proc();
@@ -240,10 +240,10 @@ procedure look_at_p_proc
 begin
     script_overrides;
     if (obj_type(self_obj) == 1) then begin
-        display_msg(message_str(70, 101));
+        display_msg(message_str(SCRIPT_ZIBLKJCK, 101));
     end
     else begin
-        display_msg(message_str(70, 100));
+        display_msg(message_str(SCRIPT_ZIBLKJCK, 100));
     end
 end
 
@@ -251,10 +251,10 @@ procedure description_p_proc
 begin
     script_overrides;
     if (obj_type(self_obj) == 1) then begin
-        display_msg(message_str(70, 101));
+        display_msg(message_str(SCRIPT_ZIBLKJCK, 101));
     end
     else begin
-        display_msg(message_str(70, 110) + 20 + message_str(70, 111));
+        display_msg(message_str(SCRIPT_ZIBLKJCK, 110) + 20 + message_str(SCRIPT_ZIBLKJCK, 111));
     end
 end
 
@@ -275,16 +275,16 @@ begin
         start_gdialog(70, self_obj, 4, -1, -1);
         gsay_start;
         if (((local_var(1) > 0) or (0 == 0)) == 0) then begin
-            gsay_reply(70, message_str(70, 102) + 20 + message_str(70, 103));
-            giq_option(4, 70, 104, Node001, 50);
-            giq_option(4, 70, 105, Node999, 50);
-            giq_option(-3, 70, 106, Node999, 50);
+            gsay_reply(SCRIPT_ZIBLKJCK, message_str(SCRIPT_ZIBLKJCK, 102) + 20 + message_str(SCRIPT_ZIBLKJCK, 103));
+            giq_option(4, SCRIPT_ZIBLKJCK, 104, Node001, NEUTRAL_REACTION);
+            giq_option(4, SCRIPT_ZIBLKJCK, 105, Node999, NEUTRAL_REACTION);
+            giq_option(-3, SCRIPT_ZIBLKJCK, 106, Node999, NEUTRAL_REACTION);
         end
         else begin
-            gsay_reply(70, 129);
-            giq_option(1, 70, 127, Node999, 50);
+            gsay_reply(SCRIPT_ZIBLKJCK, 129);
+            giq_option(1, SCRIPT_ZIBLKJCK, 127, Node999, NEUTRAL_REACTION);
             if ((local_var(1) > 0) or (0 == 0)) then begin
-                giq_option(1, 70, 128, Node998, 50);
+                giq_option(1, SCRIPT_ZIBLKJCK, 128, Node998, NEUTRAL_REACTION);
             end
         end
         gsay_end;
@@ -292,7 +292,7 @@ begin
     end
     else begin
         if (obj_type(self_obj) == 1) then begin
-            float_msg(self_obj, message_str(70, message_str(70, 129)), 8);
+            float_msg(self_obj, message_str(SCRIPT_ZIBLKJCK, message_str(SCRIPT_ZIBLKJCK, 129)), FLOAT_MSG_YELLOW);
         end
     end
 end
@@ -311,7 +311,7 @@ begin
         call Node002();
     end
     else begin
-        gsay_reply(70, 107);
+        gsay_reply(SCRIPT_ZIBLKJCK, 107);
     end
 end
 
@@ -328,7 +328,7 @@ begin
     variable LVar1 := 0;
     LVar0 := PrintDrawCardMessages(0, player_1_card, player_2_card, player_3_card, player_hand_total) + "  " + PrintDrawCardMessages(1, dealer_1_card, dealer_2_card, dealer_3_card, dealer_hand_total) + "  ";
     if ((player_hand_total == dealer_hand_total) or ((player_hand_total > 21) and (dealer_hand_total > 21))) then begin
-        gsay_reply(70, LVar0 + message_str(70, 126));
+        gsay_reply(SCRIPT_ZIBLKJCK, LVar0 + message_str(SCRIPT_ZIBLKJCK, 126));
     end
     else begin
         if ((player_hand_total > dealer_hand_total) or (dealer_hand_total > 21) and (player_hand_total <= 21)) then begin
@@ -340,29 +340,29 @@ begin
             end
             set_local_var(1, local_var(1) + LVar1);
             item_caps_adjust(dude_obj, LVar1);
-            gsay_reply(70, LVar0 + message_str(70, 131) + LVar1 + message_str(70, 132));
+            gsay_reply(SCRIPT_ZIBLKJCK, LVar0 + message_str(SCRIPT_ZIBLKJCK, 131) + LVar1 + message_str(SCRIPT_ZIBLKJCK, 132));
         end
         else begin
             set_local_var(1, local_var(1) + -20);
             item_caps_adjust(dude_obj, -20);
-            gsay_reply(70, LVar0 + message_str(70, 125));
+            gsay_reply(SCRIPT_ZIBLKJCK, LVar0 + message_str(SCRIPT_ZIBLKJCK, 125));
         end
     end
-    giq_option(1, 70, 121, Node006, 50);
+    giq_option(1, SCRIPT_ZIBLKJCK, 121, Node006, NEUTRAL_REACTION);
 end
 
 procedure Node006
 begin
     if ((local_var(1) > 0) or (0 == 0)) then begin
         play_sfx("shuffle");
-        gsay_reply(70, 122);
-        giq_option(1, 70, 104, Node001, 50);
-        giq_option(1, 70, 105, Node999, 50);
+        gsay_reply(SCRIPT_ZIBLKJCK, 122);
+        giq_option(1, SCRIPT_ZIBLKJCK, 104, Node001, NEUTRAL_REACTION);
+        giq_option(1, SCRIPT_ZIBLKJCK, 105, Node999, NEUTRAL_REACTION);
     end
     else begin
-        gsay_reply(70, 123);
-        giq_option(1, 70, 127, Node999, 50);
-        giq_option(1, 70, 128, Node998, 50);
+        gsay_reply(SCRIPT_ZIBLKJCK, 123);
+        giq_option(1, SCRIPT_ZIBLKJCK, 127, Node999, NEUTRAL_REACTION);
+        giq_option(1, SCRIPT_ZIBLKJCK, 128, Node998, NEUTRAL_REACTION);
     end
 end
 
@@ -490,30 +490,29 @@ procedure PrintDrawCardMessages(variable arg0, variable arg1, variable arg2, var
 begin
     variable LVar5 := 0;
     variable LVar6 := 0;
-    LVar5 := message_str(70, 200 + (arg1 - (((((arg1 > ((13 * 1) - 13)) and (arg1 <= (13 * 1))) * 1) + (((arg1 > ((13 * 2) - 13)) and (arg1 <= (13 * 2))) * 2) + (((arg1 > ((13 * 3) - 13)) and (arg1 <= (13 * 3))) * 3) + (((arg1 > ((13 * 4) - 13)) and (arg1 <= (13 * 4))) * 4) - 1) * 13))) + message_str(70, 113) + message_str(70, 250 + ((((arg1 > ((13 * 1) - 13)) and (arg1 <= (13 * 1))) * 1) + (((arg1 > ((13 * 2) - 13)) and (arg1 <= (13 * 2))) * 2) + (((arg1 > ((13 * 3) - 13)) and (arg1 <= (13 * 3))) * 3) + (((arg1 > ((13 * 4) - 13)) and (arg1 <= (13 * 4))) * 4)));
+    LVar5 := message_str(SCRIPT_ZIBLKJCK, 200 + (arg1 - (((((arg1 > ((13 * 1) - 13)) and (arg1 <= (13 * 1))) * 1) + (((arg1 > ((13 * 2) - 13)) and (arg1 <= (13 * 2))) * 2) + (((arg1 > ((13 * 3) - 13)) and (arg1 <= (13 * 3))) * 3) + (((arg1 > ((13 * 4) - 13)) and (arg1 <= (13 * 4))) * 4) - 1) * 13))) + message_str(SCRIPT_ZIBLKJCK, 113) + message_str(SCRIPT_ZIBLKJCK, 250 + ((((arg1 > ((13 * 1) - 13)) and (arg1 <= (13 * 1))) * 1) + (((arg1 > ((13 * 2) - 13)) and (arg1 <= (13 * 2))) * 2) + (((arg1 > ((13 * 3) - 13)) and (arg1 <= (13 * 3))) * 3) + (((arg1 > ((13 * 4) - 13)) and (arg1 <= (13 * 4))) * 4)));
     if (arg3 == 0) then begin
         LVar6 := arg2;
     end
     else begin
-        LVar5 := LVar5 + (message_str(70, 114) + message_str(70, 200 + (arg2 - (((((arg2 > ((13 * 1) - 13)) and (arg2 <= (13 * 1))) * 1) + (((arg2 > ((13 * 2) - 13)) and (arg2 <= (13 * 2))) * 2) + (((arg2 > ((13 * 3) - 13)) and (arg2 <= (13 * 3))) * 3) + (((arg2 > ((13 * 4) - 13)) and (arg2 <= (13 * 4))) * 4) - 1) * 13))) + message_str(70, 113) + message_str(70, 250 + ((((arg2 > ((13 * 1) - 13)) and (arg2 <= (13 * 1))) * 1) + (((arg2 > ((13 * 2) - 13)) and (arg2 <= (13 * 2))) * 2) + (((arg2 > ((13 * 3) - 13)) and (arg2 <= (13 * 3))) * 3) + (((arg2 > ((13 * 4) - 13)) and (arg2 <= (13 * 4))) * 4))));
+        LVar5 := LVar5 + (message_str(SCRIPT_ZIBLKJCK, 114) + message_str(SCRIPT_ZIBLKJCK, 200 + (arg2 - (((((arg2 > ((13 * 1) - 13)) and (arg2 <= (13 * 1))) * 1) + (((arg2 > ((13 * 2) - 13)) and (arg2 <= (13 * 2))) * 2) + (((arg2 > ((13 * 3) - 13)) and (arg2 <= (13 * 3))) * 3) + (((arg2 > ((13 * 4) - 13)) and (arg2 <= (13 * 4))) * 4) - 1) * 13))) + message_str(SCRIPT_ZIBLKJCK, 113) + message_str(SCRIPT_ZIBLKJCK, 250 + ((((arg2 > ((13 * 1) - 13)) and (arg2 <= (13 * 1))) * 1) + (((arg2 > ((13 * 2) - 13)) and (arg2 <= (13 * 2))) * 2) + (((arg2 > ((13 * 3) - 13)) and (arg2 <= (13 * 3))) * 3) + (((arg2 > ((13 * 4) - 13)) and (arg2 <= (13 * 4))) * 4))));
         LVar6 := arg3;
     end
-    LVar5 := LVar5 + (message_str(70, 115) + message_str(70, 200 + (LVar6 - (((((LVar6 > ((13 * 1) - 13)) and (LVar6 <= (13 * 1))) * 1) + (((LVar6 > ((13 * 2) - 13)) and (LVar6 <= (13 * 2))) * 2) + (((LVar6 > ((13 * 3) - 13)) and (LVar6 <= (13 * 3))) * 3) + (((LVar6 > ((13 * 4) - 13)) and (LVar6 <= (13 * 4))) * 4) - 1) * 13))) + message_str(70, 113) + message_str(70, 250 + ((((LVar6 > ((13 * 1) - 13)) and (LVar6 <= (13 * 1))) * 1) + (((LVar6 > ((13 * 2) - 13)) and (LVar6 <= (13 * 2))) * 2) + (((LVar6 > ((13 * 3) - 13)) and (LVar6 <= (13 * 3))) * 3) + (((LVar6 > ((13 * 4) - 13)) and (LVar6 <= (13 * 4))) * 4))) + message_str(70, 116) + arg4);
+    LVar5 := LVar5 + (message_str(SCRIPT_ZIBLKJCK, 115) + message_str(SCRIPT_ZIBLKJCK, 200 + (LVar6 - (((((LVar6 > ((13 * 1) - 13)) and (LVar6 <= (13 * 1))) * 1) + (((LVar6 > ((13 * 2) - 13)) and (LVar6 <= (13 * 2))) * 2) + (((LVar6 > ((13 * 3) - 13)) and (LVar6 <= (13 * 3))) * 3) + (((LVar6 > ((13 * 4) - 13)) and (LVar6 <= (13 * 4))) * 4) - 1) * 13))) + message_str(SCRIPT_ZIBLKJCK, 113) + message_str(SCRIPT_ZIBLKJCK, 250 + ((((LVar6 > ((13 * 1) - 13)) and (LVar6 <= (13 * 1))) * 1) + (((LVar6 > ((13 * 2) - 13)) and (LVar6 <= (13 * 2))) * 2) + (((LVar6 > ((13 * 3) - 13)) and (LVar6 <= (13 * 3))) * 3) + (((LVar6 > ((13 * 4) - 13)) and (LVar6 <= (13 * 4))) * 4))) + message_str(SCRIPT_ZIBLKJCK, 116) + arg4);
     if ((arg4 == 21) and (arg3 == 0)) then begin
-        LVar5 := LVar5 + message_str(70, 117);
+        LVar5 := LVar5 + message_str(SCRIPT_ZIBLKJCK, 117);
     end
     else begin
         if (arg4 > 21) then begin
-            LVar5 := LVar5 + message_str(70, 118);
+            LVar5 := LVar5 + message_str(SCRIPT_ZIBLKJCK, 118);
         end
     end
-    LVar5 := LVar5 + message_str(70, 119);
+    LVar5 := LVar5 + message_str(SCRIPT_ZIBLKJCK, 119);
     if (arg0 == 0) then begin
-        LVar5 := message_str(70, 112) + LVar5;
+        LVar5 := message_str(SCRIPT_ZIBLKJCK, 112) + LVar5;
     end
     else begin
-        LVar5 := message_str(70, 120) + LVar5;
+        LVar5 := message_str(SCRIPT_ZIBLKJCK, 120) + LVar5;
     end
     return LVar5;
 end
-
