diff --git a/Games/Fallout2.Steam/Original/DCREBGRD.ssl b/Games/Fallout2.Steam/ReDefine/DCREBGRD.ssl
index 8683669..0cfd5bc 100644
--- a/Games/Fallout2.Steam/Original/DCREBGRD.ssl
+++ b/Games/Fallout2.Steam/ReDefine/DCREBGRD.ssl
@@ -167,10 +167,10 @@ begin
                 if (anim_busy(self_obj) == 0) then begin
                     if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                         if (anim_busy(self_obj) == 0) then begin
-                            global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
+                            global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                             animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                             global_temp := (global_temp + 1) % 6;
-                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
+                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                                 debug_msg("flee loop: rot == " + global_temp);
                                 animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                 global_temp := (global_temp + 1) % 6;
@@ -180,7 +180,7 @@ begin
                 end
             end
             else begin
-                attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
+                attack(dude_obj);
             end
         end
         if (becky_guard_obj == 0) then begin
@@ -201,11 +201,11 @@ end
 
 procedure pickup_p_proc
 begin
-    if ((source_obj == dude_obj) or (party_member_obj(obj_pid(source_obj)) != 0)) then begin
+    if ((source_obj == dude_obj) or (obj_in_party(source_obj))) then begin
         caught_thief := 0;
-        if (cur_map_index == 6) then begin
+        if (CUR_MAP_DENBUS1) then begin
             if (tile_in_tile_rect(16679, 16667, 19479, 19467, source_obj) and (becky_guard_obj != 0)) then begin
-                metarule3(100, becky_guard_obj, 12, 0);
+                rm_fixed_timer_event(becky_guard_obj, 12);
                 add_timer_event(becky_guard_obj, 0, 12);
             end
         end
@@ -236,13 +236,13 @@ end
 procedure look_at_p_proc
 begin
     script_overrides;
-    display_msg(message_str(983, 100 + ((global_var(447) bwand 128) != 0)));
+    display_mstr(100 + ((global_var(GVAR_DEN_FLAG_3) bwand 128) != 0));
 end
 
 procedure description_p_proc
 begin
     script_overrides;
-    display_msg(message_str(983, 150 + (get_critter_stat(self_obj, 34) == 1)));
+    display_mstr(150 + (self_gender == 1));
     set_local_var(4, local_var(4) bwor 4);
 end
 
@@ -260,14 +260,14 @@ end
 
 procedure map_enter_p_proc
 begin
-    if ((global_var(445) bwand 16) != 0) then begin
+    if ((global_var(GVAR_DEN_FLAG_1) bwand 16) != 0) then begin
         destroy_object(self_obj);
     end
     else begin
-        if (metarule(22, 0) == 0) then begin
-            if (metarule(14, 0)) then begin
-                critter_add_trait(self_obj, 1, 6, 9);
-                critter_add_trait(self_obj, 1, 5, 22);
+        if (is_loading_game == 0) then begin
+            if (map_first_run) then begin
+                critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 9);
+                critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_TOUGH_GUARD);
             end
         end
     end
@@ -287,10 +287,10 @@ begin
                 if (anim_busy(self_obj) == 0) then begin
                     if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                         if (anim_busy(self_obj) == 0) then begin
-                            global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
+                            global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                             animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                             global_temp := (global_temp + 1) % 6;
-                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
+                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                                 debug_msg("flee loop: rot == " + global_temp);
                                 animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                 global_temp := (global_temp + 1) % 6;
@@ -300,7 +300,7 @@ begin
                 end
             end
             else begin
-                attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
+                attack(dude_obj);
             end
         end
         else begin
@@ -309,10 +309,10 @@ begin
                     if (anim_busy(self_obj) == 0) then begin
                         if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                             if (anim_busy(self_obj) == 0) then begin
-                                global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
+                                global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                                 animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                 global_temp := (global_temp + 1) % 6;
-                                while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
+                                while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                                     debug_msg("flee loop: rot == " + global_temp);
                                     animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                     global_temp := (global_temp + 1) % 6;
@@ -322,7 +322,7 @@ begin
                     end
                 end
                 else begin
-                    attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
+                    attack(dude_obj);
                 end
             end
             else begin
@@ -332,10 +332,10 @@ begin
                         if (anim_busy(self_obj) == 0) then begin
                             if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                                 if (anim_busy(self_obj) == 0) then begin
-                                    global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
+                                    global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                                     animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                     global_temp := (global_temp + 1) % 6;
-                                    while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
+                                    while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                                         debug_msg("flee loop: rot == " + global_temp);
                                         animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                         global_temp := (global_temp + 1) % 6;
@@ -345,7 +345,7 @@ begin
                         end
                     end
                     else begin
-                        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
+                        attack(dude_obj);
                     end
                 end
             end
@@ -364,15 +364,15 @@ end
 
 procedure Node001
 begin
-    float_msg(self_obj, message_str(983, random(200, 201)), 8);
+    float_msg(self_obj, mstr(random(200, 201)), FLOAT_MSG_YELLOW);
     if (critter_is_fleeing(self_obj)) then begin
         if (anim_busy(self_obj) == 0) then begin
             if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                 if (anim_busy(self_obj) == 0) then begin
-                    global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
+                    global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                     animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                     global_temp := (global_temp + 1) % 6;
-                    while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
+                    while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                         debug_msg("flee loop: rot == " + global_temp);
                         animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                         global_temp := (global_temp + 1) % 6;
@@ -382,17 +382,16 @@ begin
         end
     end
     else begin
-        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
+        attack(dude_obj);
     end
 end
 
 procedure Node002
 begin
-    float_msg(self_obj, message_str(983, random(210, 218)), 8);
+    float_msg(self_obj, mstr(random(210, 218)), FLOAT_MSG_YELLOW);
 end
 
 procedure Node003
 begin
-    float_msg(self_obj, message_str(983, 230), 8);
+    float_msg(self_obj, mstr(230), FLOAT_MSG_YELLOW);
 end
-
