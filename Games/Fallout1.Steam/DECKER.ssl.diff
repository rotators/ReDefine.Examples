diff --git a/Games/Fallout1.Steam/Original/DECKER.ssl b/Games/Fallout1.Steam/ReDefine/DECKER.ssl
index ce27cf7..5edabca 100644
--- a/Games/Fallout1.Steam/Original/DECKER.ssl
+++ b/Games/Fallout1.Steam/ReDefine/DECKER.ssl
@@ -76,26 +76,26 @@ begin
         if (map_var(50) == 1) then begin
             set_obj_visibility(self_obj, 1);
         end
-        critter_add_trait(self_obj, 1, 6, 38);
-        critter_add_trait(self_obj, 1, 5, 87);
+        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 38);
+        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_DECKER);
     end
-    if (script_action == 21) then begin
+    if (script_action == look_at_proc) then begin
         call look_at_p_proc();
     end
     else begin
-        if (script_action == 4) then begin
+        if (script_action == pickup_proc) then begin
             call pickup_p_proc();
         end
         else begin
-            if (script_action == 11) then begin
+            if (script_action == talk_proc) then begin
                 call talk_p_proc();
             end
             else begin
-                if (script_action == 12) then begin
+                if (script_action == critter_proc) then begin
                     call critter_p_proc();
                 end
                 else begin
-                    if (script_action == 18) then begin
+                    if (script_action == destroy_proc) then begin
                         call destroy_p_proc();
                     end
                 end
@@ -113,7 +113,7 @@ procedure critter_p_proc
 begin
     if (hostile) then begin
         hostile := 0;
-        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
+        attack(dude_obj);
     end
     if (travel == 1) then begin
         travel := 0;
@@ -135,15 +135,15 @@ end
 
 procedure talk_p_proc
 begin
-    set_global_var(219, 1);
+    set_global_var(GVAR_DECKER_KNOWN, 1);
     call get_reaction();
     if ((map_var(49) == 1) or (map_var(45) != 1)) then begin
         if (map_var(52) == 0) then begin
-            float_msg(self_obj, message_str(42, 230), 2);
+            float_msg(self_obj, mstr(230), FLOAT_MSG_RED);
             call combat();
         end
         else begin
-            float_msg(self_obj, message_str(42, 231), 2);
+            float_msg(self_obj, mstr(231), FLOAT_MSG_RED);
             call combat();
         end
     end
@@ -158,7 +158,7 @@ begin
             end_dialogue;
         end
         else begin
-            if (global_var(112) == 2) then begin
+            if (global_var(GVAR_KILL_JAIN) == 2) then begin
                 start_gdialog(42, self_obj, 4, 7, 3);
                 gsay_start;
                 call Decker15();
@@ -166,7 +166,7 @@ begin
                 end_dialogue;
             end
             else begin
-                if (global_var(111) == 2) then begin
+                if (global_var(GVAR_KILL_MERCHANT) == 2) then begin
                     start_gdialog(42, self_obj, 4, 7, 3);
                     gsay_start;
                     call Decker26();
@@ -181,23 +181,23 @@ end
 procedure destroy_p_proc
 begin
     if (source_obj == dude_obj) then begin
-        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
-            set_global_var(156, 1);
-            set_global_var(157, 0);
+        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
+            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
+            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
         end
-        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
-            set_global_var(157, 1);
-            set_global_var(156, 0);
+        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
+            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
+            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
         end
-        set_global_var(160, global_var(160) + 1);
-        if ((global_var(160) % 6) == 0) then begin
-            set_global_var(155, global_var(155) + 1);
+        set_global_var(GVAR_BAD_MONSTER, global_var(GVAR_BAD_MONSTER) + 1);
+        if ((global_var(GVAR_BAD_MONSTER) % 6) == 0) then begin
+            set_global_var(GVAR_PLAYER_REPUATION, global_var(GVAR_PLAYER_REPUATION) + 1);
         end
     end
     set_map_var(50, 1);
-    set_global_var(203, 1);
+    set_global_var(GVAR_DECKER_STATUS, 1);
     if ((map_var(49) == 1) and (map_var(50) == 1)) then begin
-        set_global_var(202, 1);
+        set_global_var(GVAR_UNDERGROUND_STATUS, 1);
         set_map_var(11, 1);
         set_map_var(44, 1);
     end
@@ -206,236 +206,236 @@ end
 procedure look_at_p_proc
 begin
     script_overrides;
-    display_msg(message_str(42, 100));
+    display_mstr(100);
 end
 
 procedure PlayerQuestions
 begin
-    giq_option(4, 42, 144, Decker17, 50);
-    giq_option(4, 42, 145, Decker25, 50);
-    giq_option(4, 42, 146, DeckerEndNormal, 50);
+    giq_option(4, NAME, 144, Decker17, NEUTRAL_REACTION);
+    giq_option(4, NAME, 145, Decker25, NEUTRAL_REACTION);
+    giq_option(4, NAME, 146, DeckerEndNormal, NEUTRAL_REACTION);
 end
 
 procedure Decker01
 begin
-    gsay_reply(42, 103);
-    giq_option(4, 42, message_str(42, 104) + proto_data(obj_pid(dude_obj), 1) + message_str(42, 105), Decker02, 50);
-    giq_option(4, 42, 106, Decker13, 51);
+    Reply(103);
+    giq_option(4, NAME, mstr(104) + proto_data(obj_pid(dude_obj), 1) + mstr(105), Decker02, NEUTRAL_REACTION);
+    giq_option(4, NAME, 106, Decker13, BAD_REACTION);
 end
 
 procedure Decker02
 begin
-    gsay_reply(42, 107);
-    giq_option(4, 42, 108, Decker03, 50);
-    giq_option(4, 42, 109, Decker14, 50);
+    Reply(107);
+    giq_option(4, NAME, 108, Decker03, NEUTRAL_REACTION);
+    giq_option(4, NAME, 109, Decker14, NEUTRAL_REACTION);
 end
 
 procedure Decker03
 begin
-    gsay_reply(42, 110);
-    giq_option(4, 42, 111, Decker04, 50);
+    Reply(110);
+    giq_option(4, NAME, 111, Decker04, NEUTRAL_REACTION);
 end
 
 procedure Decker04
 begin
-    gsay_reply(42, 112);
-    giq_option(4, 42, 113, Decker05, 50);
-    giq_option(4, 42, 114, Decker11, 50);
-    giq_option(4, 42, 115, Decker10, 51);
+    Reply(112);
+    giq_option(4, NAME, 113, Decker05, NEUTRAL_REACTION);
+    giq_option(4, NAME, 114, Decker11, NEUTRAL_REACTION);
+    giq_option(4, NAME, 115, Decker10, BAD_REACTION);
 end
 
 procedure Decker05
 begin
-    gsay_reply(42, 116);
-    giq_option(4, 42, 117, Decker06, 50);
-    giq_option(4, 42, 118, Decker10, 50);
-    giq_option(4, 42, 119, Decker06, 50);
+    Reply(116);
+    giq_option(4, NAME, 117, Decker06, NEUTRAL_REACTION);
+    giq_option(4, NAME, 118, Decker10, NEUTRAL_REACTION);
+    giq_option(4, NAME, 119, Decker06, NEUTRAL_REACTION);
 end
 
 procedure Decker06
 begin
-    gsay_reply(42, 120);
-    giq_option(4, 42, 121, Decker07, 50);
+    Reply(120);
+    giq_option(4, NAME, 121, Decker07, NEUTRAL_REACTION);
 end
 
 procedure Decker07
 begin
-    gsay_reply(42, 122);
-    giq_option(4, 42, 123, Decker08, 50);
-    giq_option(4, 42, 124, Decker09, 50);
-    giq_option(4, 42, 125, Decker10, 50);
+    Reply(122);
+    giq_option(4, NAME, 123, Decker08, NEUTRAL_REACTION);
+    giq_option(4, NAME, 124, Decker09, NEUTRAL_REACTION);
+    giq_option(4, NAME, 125, Decker10, NEUTRAL_REACTION);
 end
 
 procedure Decker08
 begin
-    gsay_message(42, 126, 50);
+    gsay_message(NAME, 126, NEUTRAL_REACTION);
     call DeckerEndAcceptJob1();
 end
 
 procedure Decker09
 begin
-    gsay_reply(42, 127);
-    giq_option(4, 42, 128, Decker08, 50);
-    giq_option(4, 42, 129, Decker10, 50);
+    Reply(127);
+    giq_option(4, NAME, 128, Decker08, NEUTRAL_REACTION);
+    giq_option(4, NAME, 129, Decker10, NEUTRAL_REACTION);
 end
 
 procedure Decker10
 begin
-    gsay_message(42, 130, 50);
+    gsay_message(NAME, 130, NEUTRAL_REACTION);
     call DeckerEndDeclineJob1();
 end
 
 procedure Decker11
 begin
-    gsay_reply(42, 131);
-    giq_option(4, 42, 132, Decker10, 50);
-    giq_option(4, 42, 133, Decker12, 50);
+    Reply(131);
+    giq_option(4, NAME, 132, Decker10, NEUTRAL_REACTION);
+    giq_option(4, NAME, 133, Decker12, NEUTRAL_REACTION);
 end
 
 procedure Decker12
 begin
-    gsay_message(42, 134, 50);
+    gsay_message(NAME, 134, NEUTRAL_REACTION);
     call DeckerEndAcceptJob1();
 end
 
 procedure Decker13
 begin
-    gsay_reply(42, 135);
-    giq_option(4, 42, message_str(42, 136) + proto_data(obj_pid(dude_obj), 1) + message_str(42, 137), Decker02, 50);
-    giq_option(4, 42, 138, Decker14, 50);
+    Reply(135);
+    giq_option(4, NAME, mstr(136) + proto_data(obj_pid(dude_obj), 1) + mstr(137), Decker02, NEUTRAL_REACTION);
+    giq_option(4, NAME, 138, Decker14, NEUTRAL_REACTION);
 end
 
 procedure Decker14
 begin
-    gsay_message(42, 139, 51);
+    gsay_message(NAME, 139, BAD_REACTION);
     call DeckerEndInsult();
 end
 
 procedure Decker15
 begin
-    gsay_reply(42, 140);
-    giq_option(4, 42, 141, Decker16, 50);
-    giq_option(4, 42, 142, DeckerEndNormal, 50);
+    Reply(140);
+    giq_option(4, NAME, 141, Decker16, NEUTRAL_REACTION);
+    giq_option(4, NAME, 142, DeckerEndNormal, NEUTRAL_REACTION);
 end
 
 procedure Decker16
 begin
-    gsay_reply(42, 143);
+    Reply(143);
     call PlayerQuestions();
 end
 
 procedure Decker17
 begin
-    gsay_reply(42, 148);
-    giq_option(4, 42, 149, Decker18, 50);
-    giq_option(4, 42, 150, Decker16, 50);
+    Reply(148);
+    giq_option(4, NAME, 149, Decker18, NEUTRAL_REACTION);
+    giq_option(4, NAME, 150, Decker16, NEUTRAL_REACTION);
 end
 
 procedure Decker18
 begin
-    gsay_reply(42, 151);
-    giq_option(4, 42, 152, Decker19, 50);
-    giq_option(4, 42, 153, Decker16, 50);
+    Reply(151);
+    giq_option(4, NAME, 152, Decker19, NEUTRAL_REACTION);
+    giq_option(4, NAME, 153, Decker16, NEUTRAL_REACTION);
 end
 
 procedure Decker19
 begin
-    gsay_reply(42, 154);
-    giq_option(4, 42, 155, Decker16, 50);
+    Reply(154);
+    giq_option(4, NAME, 155, Decker16, NEUTRAL_REACTION);
 end
 
 procedure Decker25
 begin
-    gsay_reply(42, 167);
+    Reply(167);
     call PlayerQuestions();
 end
 
 procedure Decker26
 begin
-    if (get_critter_stat(dude_obj, 34) == 0) then begin
-        gsay_reply(42, 232);
+    if (dude_gender == 0) then begin
+        Reply(232);
     end
     else begin
-        gsay_reply(42, 233);
+        Reply(233);
     end
-    giq_option(4, 42, 169, Decker27, 50);
-    giq_option(4, 42, 170, Decker35, 51);
+    giq_option(4, NAME, 169, Decker27, NEUTRAL_REACTION);
+    giq_option(4, NAME, 170, Decker35, BAD_REACTION);
 end
 
 procedure Decker27
 begin
-    gsay_reply(42, 171);
-    giq_option(4, 42, 172, Decker28, 50);
-    giq_option(4, 42, 173, Decker35, 51);
+    Reply(171);
+    giq_option(4, NAME, 172, Decker28, NEUTRAL_REACTION);
+    giq_option(4, NAME, 173, Decker35, BAD_REACTION);
 end
 
 procedure Decker28
 begin
-    gsay_reply(42, 174);
-    giq_option(4, 42, 175, Decker29, 50);
+    Reply(174);
+    giq_option(4, NAME, 175, Decker29, NEUTRAL_REACTION);
 end
 
 procedure Decker29
 begin
-    gsay_reply(42, 176);
-    giq_option(4, 42, 177, Decker30, 50);
-    giq_option(4, 42, 178, Decker32, 51);
+    Reply(176);
+    giq_option(4, NAME, 177, Decker30, NEUTRAL_REACTION);
+    giq_option(4, NAME, 178, Decker32, BAD_REACTION);
 end
 
 procedure Decker30
 begin
     call UpReact();
-    gsay_reply(42, 179);
-    giq_option(4, 42, 180, Decker31, 50);
+    Reply(179);
+    giq_option(4, NAME, 180, Decker31, NEUTRAL_REACTION);
 end
 
 procedure Decker31
 begin
-    gsay_message(42, 181, 50);
+    gsay_message(NAME, 181, NEUTRAL_REACTION);
     call DeckerEndAcceptJob2();
 end
 
 procedure Decker32
 begin
-    gsay_reply(42, 182);
-    giq_option(4, 42, 183, Decker33, 50);
-    giq_option(4, 42, 184, Decker34, 50);
+    Reply(182);
+    giq_option(4, NAME, 183, Decker33, NEUTRAL_REACTION);
+    giq_option(4, NAME, 184, Decker34, NEUTRAL_REACTION);
 end
 
 procedure Decker33
 begin
-    gsay_reply(42, 185);
-    giq_option(4, 42, 186, Decker31, 50);
+    Reply(185);
+    giq_option(4, NAME, 186, Decker31, NEUTRAL_REACTION);
 end
 
 procedure Decker34
 begin
-    if (get_critter_stat(dude_obj, 34) == 0) then begin
-        gsay_message(42, 234, 51);
+    if (dude_gender == 0) then begin
+        gsay_message(NAME, 234, BAD_REACTION);
     end
     else begin
-        gsay_message(42, 235, 51);
+        gsay_message(NAME, 235, BAD_REACTION);
     end
     call DeckerEndDeclineJob2();
 end
 
 procedure Decker35
 begin
-    gsay_reply(42, 188);
-    giq_option(4, 42, 189, Decker36, 50);
-    giq_option(4, 42, 190, Decker28, 50);
+    Reply(188);
+    giq_option(4, NAME, 189, Decker36, NEUTRAL_REACTION);
+    giq_option(4, NAME, 190, Decker28, NEUTRAL_REACTION);
 end
 
 procedure Decker36
 begin
-    gsay_message(42, 191, 51);
+    gsay_message(NAME, 191, BAD_REACTION);
     call DeckerEndDeclineJob2();
 end
 
 procedure DeckerEndAcceptJob1
 begin
     set_map_var(46, 2);
-    set_global_var(111, 1);
+    set_global_var(GVAR_KILL_MERCHANT, 1);
     travel := 1;
 end
 
@@ -443,14 +443,14 @@ procedure DeckerEndDeclineJob1
 begin
     set_map_var(46, 1);
     set_map_var(11, 1);
-    set_global_var(111, 0);
+    set_global_var(GVAR_KILL_MERCHANT, 0);
     travel := 1;
 end
 
 procedure DeckerEndAcceptJob2
 begin
     set_map_var(47, 3);
-    set_global_var(112, 1);
+    set_global_var(GVAR_KILL_JAIN, 1);
     travel := 1;
 end
 
@@ -458,7 +458,7 @@ procedure DeckerEndDeclineJob2
 begin
     set_map_var(47, 2);
     set_map_var(11, 1);
-    set_global_var(112, 0);
+    set_global_var(GVAR_KILL_JAIN, 0);
     travel := 1;
 end
 
@@ -480,8 +480,8 @@ begin
     gfade_out(1000);
     move_to(Kane_Ptr, 24336, 0);
     move_to(dude_obj, 23736, 0);
-    anim(Kane_Ptr, 1000, rotation_to_tile(tile_num(Kane_Ptr), tile_num(dude_obj)));
-    anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(Kane_Ptr)));
+    anim(Kane_Ptr, 1000, rotation_to_tile(tile_num(Kane_Ptr), dude_tile));
+    anim(dude_obj, 1000, rotation_to_tile(dude_tile, tile_num(Kane_Ptr)));
     gfade_in(1000);
 end
 
@@ -491,31 +491,31 @@ begin
         set_local_var(0, 50);
         set_local_var(1, 2);
         set_local_var(2, 1);
-        set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, 3)) - 25);
-        set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
-        if (has_trait(0, dude_obj, 39)) then begin
-            if (global_var(155) > 0) then begin
-                set_local_var(0, local_var(0) + global_var(155));
+        set_local_var(0, local_var(0) + (5 * dude_charisma) - 25);
+        set_local_var(0, local_var(0) + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence)));
+        if (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality)) then begin
+            if (global_var(GVAR_PLAYER_REPUATION) > 0) then begin
+                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
             end
             else begin
-                set_local_var(0, local_var(0) - global_var(155));
+                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
             end
         end
         else begin
             if (local_var(3) == 1) then begin
-                set_local_var(0, local_var(0) - global_var(155));
+                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
             end
             else begin
-                set_local_var(0, local_var(0) + global_var(155));
+                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
             end
         end
-        if (global_var(158) > 2) then begin
+        if (global_var(GVAR_CHILDKILLER_REPUATION) > 2) then begin
             set_local_var(0, local_var(0) - 30);
         end
-        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
+        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
             set_local_var(0, local_var(0) + 20);
         end
-        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
+        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
             set_local_var(0, local_var(0) - 20);
         end
         call ReactToLevel();
@@ -608,6 +608,5 @@ end
 
 procedure Goodbyes
 begin
-    exit_line := message_str(634, random(100, 105));
+    exit_line := message_str(SCRIPT_MODREACT, random(100, 105));
 end
-
