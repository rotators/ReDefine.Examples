diff --git a/Games/Fallout1.Steam/Original/WANRATS.ssl b/Games/Fallout1.Steam/ReDefine/WANRATS.ssl
index 9a342a5..8985f2b 100644
--- a/Games/Fallout1.Steam/Original/WANRATS.ssl
+++ b/Games/Fallout1.Steam/ReDefine/WANRATS.ssl
@@ -13,25 +13,25 @@ variable initialized;
 procedure start
 begin
     if (not(initialized)) then begin
-        critter_add_trait(self_obj, 1, 5, 12);
-        critter_add_trait(self_obj, 1, 6, 9);
+        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_RATS);
+        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 9);
         add_timer_event(self_obj, game_ticks(random(1, 5)), 0);
         initialized := 1;
     end
     else begin
-        if (script_action == 12) then begin
+        if (script_action == critter_proc) then begin
             call critter_p_proc();
         end
         else begin
-            if (script_action == 13) then begin
+            if (script_action == combat_proc) then begin
                 call combat_p_proc();
             end
             else begin
-                if (script_action == 22) then begin
+                if (script_action == timed_event_proc) then begin
                     call timed_event_p_proc();
                 end
                 else begin
-                    if (script_action == 8) then begin
+                    if (script_action == use_skill_on_proc) then begin
                         call use_skill_on_p_proc();
                     end
                 end
@@ -44,11 +44,11 @@ procedure critter_p_proc
 begin
     if (hostile and (attacked == 0)) then begin
         hostile := 0;
-        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
+        attack(dude_obj);
     end
     else begin
         if (obj_can_see_obj(self_obj, dude_obj)) then begin
-            if (has_trait(0, dude_obj, 44) == 0) then begin
+            if (has_trait(TRAIT_PERK, dude_obj, PERK_animal_friend) == 0) then begin
                 hostile := 1;
             end
         end
@@ -84,12 +84,11 @@ begin
     variable LVar1 := 0;
     variable LVar2 := 0;
     while (LVar1 < 5) do begin
-        if (tile_distance(tile_num(dude_obj), tile_num_in_direction(tile_num(self_obj), LVar1, 3)) > LVar2) then begin
+        if (tile_distance(dude_tile, tile_num_in_direction(tile_num(self_obj), LVar1, 3)) > LVar2) then begin
             LVar0 := tile_num_in_direction(tile_num(self_obj), LVar1, 3);
-            LVar2 := tile_distance(tile_num(dude_obj), LVar0);
+            LVar2 := tile_distance(dude_tile, LVar0);
         end
         LVar1 := LVar1 + 1;
     end
     animate_move_obj_to_tile(self_obj, LVar0, 1);
 end
-
