diff --git a/Games/Fallout1.Steam/Original/SKUMDOOR.ssl b/Games/Fallout1.Steam/ReDefine/SKUMDOOR.ssl
index 4709c1d..38864bf 100644
--- a/Games/Fallout1.Steam/Original/SKUMDOOR.ssl
+++ b/Games/Fallout1.Steam/ReDefine/SKUMDOOR.ssl
@@ -25,27 +25,27 @@ import variable SkumDoor_ptr;
 
 procedure start
 begin
-    if (script_action == 14) then begin
+    if (script_action == damage_proc) then begin
         call damage_p_proc();
     end
     else begin
-        if (script_action == 18) then begin
+        if (script_action == destroy_proc) then begin
             call destroy_p_proc();
         end
         else begin
-            if (script_action == 15) then begin
+            if (script_action == map_enter_proc) then begin
                 call map_enter_p_proc();
             end
             else begin
-                if (script_action == 6) then begin
+                if (script_action == use_proc) then begin
                     call use_p_proc();
                 end
                 else begin
-                    if (script_action == 7) then begin
+                    if (script_action == use_obj_on_proc) then begin
                         call use_obj_on_p_proc();
                     end
                     else begin
-                        if (script_action == 8) then begin
+                        if (script_action == use_skill_on_proc) then begin
                             call use_skill_on_p_proc();
                         end
                     end
@@ -97,7 +97,7 @@ begin
     if (source_obj == dude_obj) then begin
         if (obj_is_locked(self_obj)) then begin
             script_overrides;
-            display_msg(message_str(853, 100));
+            display_mstr(100);
         end
     end
     else begin
@@ -125,22 +125,22 @@ begin
         if (obj_is_locked(self_obj)) then begin
             GVar0 := roll_vs_skill(source_obj, 9, 0);
             if (is_success(GVar0)) then begin
-                display_msg(message_str(853, 101));
+                display_mstr(101);
                 obj_unlock(self_obj);
                 set_local_var(0, 1);
             end
             else begin
                 if (is_critical(GVar0)) then begin
-                    display_msg(message_str(853, 103));
+                    display_mstr(103);
                     jam_lock(self_obj);
                 end
                 else begin
-                    display_msg(message_str(853, 102));
+                    display_mstr(102);
                 end
             end
         end
         else begin
-            display_msg(message_str(853, 104));
+            display_mstr(104);
         end
     end
 end
@@ -152,23 +152,22 @@ begin
         if (obj_is_locked(self_obj)) then begin
             GVar0 := roll_vs_skill(source_obj, action_being_used, -10);
             if (is_success(GVar0)) then begin
-                display_msg(message_str(853, 101));
+                display_mstr(101);
                 obj_unlock(self_obj);
                 set_local_var(0, 1);
             end
             else begin
                 if (is_critical(GVar0)) then begin
-                    display_msg(message_str(853, 103));
+                    display_mstr(103);
                     jam_lock(self_obj);
                 end
                 else begin
-                    display_msg(message_str(853, 102));
+                    display_mstr(102);
                 end
             end
         end
         else begin
-            display_msg(message_str(853, 104));
+            display_mstr(104);
         end
     end
 end
-
