diff --git a/Games/Fallout1.Steam/Original/KILLSAFE.ssl b/Games/Fallout1.Steam/ReDefine/KILLSAFE.ssl
index b6395d0..1c249cc 100644
--- a/Games/Fallout1.Steam/Original/KILLSAFE.ssl
+++ b/Games/Fallout1.Steam/ReDefine/KILLSAFE.ssl
@@ -16,31 +16,31 @@ import variable KillSafe_ptr;
 
 procedure start
 begin
-    if (script_action == 3) then begin
+    if (script_action == description_proc) then begin
         call description_p_proc();
     end
     else begin
-        if (script_action == 21) then begin
+        if (script_action == look_at_proc) then begin
             call look_at_p_proc();
         end
         else begin
-            if (script_action == 15) then begin
+            if (script_action == map_enter_proc) then begin
                 call map_enter_p_proc();
             end
             else begin
-                if (script_action == 4) then begin
+                if (script_action == pickup_proc) then begin
                     call pickup_p_proc();
                 end
                 else begin
-                    if (script_action == 6) then begin
+                    if (script_action == use_proc) then begin
                         call use_p_proc();
                     end
                     else begin
-                        if (script_action == 7) then begin
+                        if (script_action == use_obj_on_proc) then begin
                             call use_obj_on_p_proc();
                         end
                         else begin
-                            if (script_action == 8) then begin
+                            if (script_action == use_skill_on_proc) then begin
                                 call use_skill_on_p_proc();
                             end
                         end
@@ -55,17 +55,17 @@ procedure description_p_proc
 begin
     script_overrides;
     if (obj_is_locked(self_obj)) then begin
-        display_msg(message_str(340, 105));
+        display_mstr(105);
     end
     else begin
-        display_msg(message_str(340, 101));
+        display_mstr(101);
     end
 end
 
 procedure look_at_p_proc
 begin
     script_overrides;
-    display_msg(message_str(340, 100));
+    display_mstr(100);
 end
 
 procedure map_enter_p_proc
@@ -75,23 +75,23 @@ begin
     obj_lock(self_obj);
     if (local_var(0) == 0) then begin
         if (random(0, 3) == 3) then begin
-            item := create_object_sid(40, 0, 0, -1);
+            item := create_object(40, 0, 0);
             add_obj_to_inven(self_obj, item);
         end
         if (random(0, 3) == 3) then begin
-            item := create_object_sid(31, 0, 0, -1);
+            item := create_object(31, 0, 0);
             add_obj_to_inven(self_obj, item);
         end
         if (random(0, 3) == 3) then begin
-            item := create_object_sid(30, 0, 0, -1);
+            item := create_object(30, 0, 0);
             add_obj_to_inven(self_obj, item);
         end
         if (random(0, 3) == 3) then begin
-            item := create_object_sid(34, 0, 0, -1);
+            item := create_object(34, 0, 0);
             add_obj_to_inven(self_obj, item);
         end
         if (random(0, 3) == 3) then begin
-            item := create_object_sid(4, 0, 0, -1);
+            item := create_object(4, 0, 0);
             add_obj_to_inven(self_obj, item);
         end
     end
@@ -108,7 +108,7 @@ procedure use_p_proc
 begin
     if (obj_is_locked(self_obj)) then begin
         script_overrides;
-        display_msg(message_str(340, 105));
+        display_mstr(105);
         set_map_var(9, 1);
     end
 end
@@ -119,22 +119,22 @@ begin
         script_overrides;
         set_map_var(9, 1);
         if (not(obj_is_locked(self_obj))) then begin
-            display_msg(message_str(340, 101));
+            display_mstr(101);
         end
         else begin
             test := roll_vs_skill(dude_obj, 9, -10);
             if (is_success(test)) then begin
                 obj_unlock(self_obj);
-                display_msg(message_str(340, 103));
+                display_mstr(103);
                 call safe_bonus();
             end
             else begin
                 if (is_critical(test)) then begin
                     jam_lock(self_obj);
-                    display_msg(message_str(340, 107));
+                    display_mstr(107);
                 end
                 else begin
-                    display_msg(message_str(340, 104));
+                    display_mstr(104);
                 end
             end
         end
@@ -147,22 +147,22 @@ begin
         script_overrides;
         set_map_var(9, 1);
         if (not(obj_is_locked(self_obj))) then begin
-            display_msg(message_str(340, 101));
+            display_mstr(101);
         end
         else begin
             test := roll_vs_skill(dude_obj, 9, -30);
             if (is_success(test)) then begin
                 obj_unlock(self_obj);
-                display_msg(message_str(340, 103));
+                display_mstr(103);
                 call safe_bonus();
             end
             else begin
                 if (is_critical(test)) then begin
                     jam_lock(self_obj);
-                    display_msg(message_str(340, 107));
+                    display_mstr(107);
                 end
                 else begin
-                    display_msg(message_str(340, 104));
+                    display_mstr(104);
                 end
             end
         end
@@ -172,9 +172,8 @@ end
 procedure safe_bonus
 begin
     if (local_var(0) == 0) then begin
-        display_msg(message_str(340, 106));
+        display_mstr(106);
         set_local_var(0, 1);
         give_exp_points(500);
     end
 end
-
