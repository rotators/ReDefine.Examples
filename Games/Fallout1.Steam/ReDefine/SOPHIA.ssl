procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure goto00;
procedure goto01;
procedure goto02;
procedure goto03;
procedure goto04;
procedure goto05;
procedure goto06;
procedure goto07;
procedure goto08;
procedure goto09;
procedure goto10;
procedure goto11;
procedure goto12;
procedure goto13;
procedure goto14;
procedure goto15;
procedure goto16;
procedure goto16b;
procedure goto17;
procedure goto18;
procedure goto19;
procedure goto20;
procedure goto20b;
procedure goto21;
procedure anger;
procedure gotoend;
procedure gotostory;

variable hostile;
variable item;
variable Pick;
variable only_once := 1;
variable message;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure start
begin
    if (only_once) then begin
        only_once := 0;
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 44);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_BROTHERHOOD_SCRIBE);
    end
    if (script_action == look_at_proc) then begin
        call look_at_p_proc();
    end
    else begin
        if (script_action == pickup_proc) then begin
            call pickup_p_proc();
        end
        else begin
            if (script_action == talk_proc) then begin
                call talk_p_proc();
            end
            else begin
                if (script_action == critter_proc) then begin
                    call critter_p_proc();
                end
                else begin
                    if (script_action == destroy_proc) then begin
                        call destroy_p_proc();
                    end
                end
            end
        end
    end
end

procedure combat
begin
    hostile := 1;
end

procedure critter_p_proc
begin
    if (global_var(GVAR_ENEMY_BROTHERHOOD)) then begin
        hostile := 1;
    end
    if (tile_distance_objs(self_obj, dude_obj) > 12) then begin
        hostile := 0;
    end
    if (hostile) then begin
        set_global_var(GVAR_ENEMY_BROTHERHOOD, 1);
        hostile := 0;
        attack(dude_obj);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        hostile := 1;
    end
end

procedure talk_p_proc
begin
    call get_reaction();
    start_gdialog(319, self_obj, 4, -1, -1);
    gsay_start;
    if (local_var(4)) then begin
        if (local_var(1) < 2) then begin
            call goto20();
        end
        else begin
            call goto16();
        end
    end
    else begin
        set_local_var(4, 1);
        if (map_var(0) == 1) then begin
            call goto14();
        end
        else begin
            call goto00();
        end
    end
    gsay_end;
    end_dialogue;
end

procedure destroy_p_proc
begin
    set_global_var(GVAR_ENEMY_BROTHERHOOD, 1);
    rm_timer_event(self_obj);
    if (source_obj == dude_obj) then begin
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if ((global_var(GVAR_GOOD_MONSTER) % 2) == 0) then begin
            set_global_var(GVAR_PLAYER_REPUATION, global_var(GVAR_PLAYER_REPUATION) - 1);
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure goto00
begin
    Reply(301);
    giq_option(-3, NAME, 302, goto01, NEUTRAL_REACTION);
    giq_option(4, NAME, 303, goto02, NEUTRAL_REACTION);
    giq_option(4, NAME, 304, goto03, NEUTRAL_REACTION);
    giq_option(4, NAME, 305, goto02, NEUTRAL_REACTION);
    giq_option(4, NAME, 306, anger, BAD_REACTION);
end

procedure goto01
begin
    gsay_message(NAME, 307, BAD_REACTION);
end

procedure goto02
begin
    Reply(308);
    if (global_var(GVAR_NECROP_WATER_CHIP_TAKEN) != 1) then begin
        giq_option(4, NAME, 309, goto04, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 310, goto05, NEUTRAL_REACTION);
    giq_option(4, NAME, 311, goto06, NEUTRAL_REACTION);
    giq_option(4, NAME, 312, gotoend, NEUTRAL_REACTION);
    if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
        giq_option(4, NAME, 313, anger, BAD_REACTION);
    end
end

procedure goto03
begin
    Reply(314);
    giq_option(4, NAME, 315, gotoend, NEUTRAL_REACTION);
    giq_option(4, NAME, 316, goto07, NEUTRAL_REACTION);
end

procedure goto04
begin
    Reply(317);
    giq_option(4, NAME, 318, goto07, NEUTRAL_REACTION);
    giq_option(4, NAME, 319, goto06, NEUTRAL_REACTION);
    giq_option(4, NAME, 320, anger, BAD_REACTION);
    giq_option(4, NAME, 321, gotoend, NEUTRAL_REACTION);
end

procedure goto05
begin
    Reply(322);
    giq_option(4, NAME, 323, gotoend, NEUTRAL_REACTION);
    giq_option(4, NAME, 324, goto08, NEUTRAL_REACTION);
    giq_option(4, NAME, 325, goto09, NEUTRAL_REACTION);
end

procedure goto06
begin
    Reply(326);
    giq_option(4, NAME, 327, goto11, NEUTRAL_REACTION);
    giq_option(4, NAME, 328, goto11, NEUTRAL_REACTION);
    if (local_var(6) != 1) then begin
        giq_option(4, NAME, 329, goto12, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 330, goto07, NEUTRAL_REACTION);
end

procedure goto07
begin
    Reply(331);
    if (local_var(6) != 1) then begin
        giq_option(4, NAME, 332, goto12, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 333, goto09, NEUTRAL_REACTION);
    if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
        giq_option(4, NAME, 334, goto01, BAD_REACTION);
    end
    giq_option(4, NAME, 335, goto05, NEUTRAL_REACTION);
end

procedure goto08
begin
    gsay_message(NAME, 336, NEUTRAL_REACTION);
end

procedure goto09
begin
    Reply(337);
    if (local_var(6) != 1) then begin
        giq_option(4, NAME, 338, goto12, GOOD_REACTION);
    end
    giq_option(4, NAME, 339, DownReact, BAD_REACTION);
    giq_option(4, NAME, 341, goto01, BAD_REACTION);
    giq_option(4, NAME, 342, goto10, NEUTRAL_REACTION);
end

procedure goto10
begin
    gsay_message(NAME, 343, NEUTRAL_REACTION);
end

procedure goto11
begin
    Reply(344);
    giq_option(4, NAME, 345, gotoend, NEUTRAL_REACTION);
    giq_option(4, NAME, 346, goto13, NEUTRAL_REACTION);
    giq_option(4, NAME, 347, DownReact, BAD_REACTION);
end

procedure goto12
begin
    set_local_var(6, 1);
    item := create_object(215, 0, 0);
    add_obj_to_inven(dude_obj, item);
    Reply(348);
    giq_option(4, NAME, 349, gotoend, NEUTRAL_REACTION);
    giq_option(4, NAME, 350, DownReact, BAD_REACTION);
end

procedure goto13
begin
    Reply(351);
    if (local_var(6) != 1) then begin
        giq_option(4, NAME, 352, goto12, GOOD_REACTION);
    end
    giq_option(4, NAME, 349, gotoend, NEUTRAL_REACTION);
    giq_option(4, NAME, 353, anger, BAD_REACTION);
end

procedure goto14
begin
    Reply(301);
    giq_option(-3, NAME, 302, goto01, NEUTRAL_REACTION);
    giq_option(4, NAME, 303, goto02, NEUTRAL_REACTION);
    giq_option(4, NAME, 330, goto15, NEUTRAL_REACTION);
    giq_option(4, NAME, 306, anger, BAD_REACTION);
end

procedure goto15
begin
    Reply(359);
    giq_option(4, NAME, 360, goto07, NEUTRAL_REACTION);
    giq_option(4, NAME, 361, anger, BAD_REACTION);
    giq_option(4, NAME, 362, DownReact, BAD_REACTION);
end

procedure goto16
begin
    Reply(364);
    giq_option(4, NAME, 365, goto17, NEUTRAL_REACTION);
    giq_option(4, NAME, 366, goto16b, NEUTRAL_REACTION);
    giq_option(4, NAME, 367, gotoend, NEUTRAL_REACTION);
    giq_option(-3, NAME, 302, goto01, NEUTRAL_REACTION);
end

procedure goto16b
begin
    if (local_var(6) != 1) then begin
        call goto12();
    end
    else begin
        call goto18();
    end
end

procedure goto17
begin
    Reply(368);
    giq_option(4, NAME, 369, gotoend, NEUTRAL_REACTION);
    giq_option(4, NAME, 316, goto07, NEUTRAL_REACTION);
end

procedure goto18
begin
    Reply(374);
    giq_option(4, NAME, 369, gotoend, NEUTRAL_REACTION);
    giq_option(4, NAME, 350, DownReact, BAD_REACTION);
end

procedure goto19
begin
    Reply(374);
    giq_option(4, NAME, 369, gotoend, NEUTRAL_REACTION);
    giq_option(4, NAME, 350, DownReact, BAD_REACTION);
end

procedure goto20
begin
    Reply(377);
    giq_option(4, NAME, 378, gotoend, NEUTRAL_REACTION);
    giq_option(4, NAME, 379, goto20b, GOOD_REACTION);
    giq_option(-3, NAME, 302, goto01, NEUTRAL_REACTION);
end

procedure goto20b
begin
    if (is_success(roll_vs_skill(dude_obj, 14, -10))) then begin
        call goto21();
    end
    else begin
        call goto01();
    end
end

procedure goto21
begin
    call UpReact();
    Reply(380);
    giq_option(4, NAME, 381, goto17, NEUTRAL_REACTION);
    giq_option(4, NAME, 382, goto16b, NEUTRAL_REACTION);
    giq_option(4, NAME, 383, gotoend, NEUTRAL_REACTION);
end

procedure anger
begin
    call DownReact();
    call goto01();
end

procedure gotoend
begin
end

procedure gotostory
begin
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * dude_charisma) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence)));
        if (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality)) then begin
            if (global_var(GVAR_PLAYER_REPUATION) > 0) then begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
        end
        if (global_var(GVAR_CHILDKILLER_REPUATION) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(SCRIPT_MODREACT, random(100, 105));
end
