procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure LoneRaid00;
procedure LoneRaid01;
procedure LoneRaid02;
procedure LoneRaid03;
procedure LoneRaid03a;
procedure LoneRaid04;
procedure LoneRaid04a;
procedure LoneRaid05;
procedure LoneRaid06;
procedure LoneRaid07;
procedure LoneRaid08;
procedure LoneRaid09;
procedure LoneRaid10;
procedure LoneRaid11;
procedure LoneRaid12;
procedure LoneRaid13;
procedure LoneRaid14;
procedure LoneRaid15;
procedure LoneRaid16;
procedure LoneRaid17;
procedure LoneRaid18;
procedure LoneRaid19;
procedure LoneRaid20;
procedure LoneRaid21;
procedure LoneRaid22;
procedure LoneRaidCombat;
procedure LoneRaidEnd;
procedure LoneRaidLoot;
procedure flee_dude;

variable hostile;
variable initialized;
variable known;
variable broken;


procedure start
begin
    if (not(initialized)) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 6);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_GENERIC_RAIDER);
        initialized := 1;
    end
    else begin
        if (script_action == critter_proc) then begin
            call critter_p_proc();
        end
        else begin
            if (script_action == destroy_proc) then begin
                call destroy_p_proc();
            end
            else begin
                if (script_action == pickup_proc) then begin
                    call pickup_p_proc();
                end
                else begin
                    if (script_action == talk_proc) then begin
                        call talk_p_proc();
                    end
                end
            end
        end
    end
end

procedure critter_p_proc
begin
    if (hostile) then begin
        hostile := 0;
        attack(dude_obj);
    end
    else begin
        if ((tile_distance_objs(self_obj, dude_obj) > 8) and (tile_distance_objs(self_obj, dude_obj) < 24)) then begin
            call flee_dude();
        end
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        set_global_var(GVAR_BAD_MONSTER, global_var(GVAR_BAD_MONSTER) + 1);
        if ((global_var(GVAR_BAD_MONSTER) % 6) == 0) then begin
            set_global_var(GVAR_PLAYER_REPUATION, global_var(GVAR_PLAYER_REPUATION) + 1);
        end
    end
end

procedure pickup_p_proc
begin
    hostile := 1;
end

procedure talk_p_proc
begin
    if (broken) then begin
        call LoneRaid01();
    end
    else begin
        if ((obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND)) == 3) or (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND)) == 3)) then begin
            call LoneRaid00();
        end
        else begin
            if (known) then begin
                call LoneRaid02();
            end
            else begin
                start_gdialog(700, self_obj, 4, -1, -1);
                gsay_start;
                known := 1;
                if (global_var(GVAR_SHADY_SANDS_INVADED)) then begin
                    call LoneRaid06();
                end
                else begin
                    if ((global_var(GVAR_TANDI_STATUS) == 2) or global_var(GVAR_ENEMY_RAIDERS)) then begin
                        call LoneRaid05();
                    end
                    else begin
                        if (global_var(GVAR_GARLS_FRIEND)) then begin
                            call LoneRaid04();
                        end
                        else begin
                            call LoneRaid03();
                        end
                    end
                end
                gsay_end;
                end_dialogue;
            end
        end
    end
end

procedure LoneRaid00
begin
    float_msg(self_obj, mstr(100), FLOAT_MSG_NORMAL);
end

procedure LoneRaid01
begin
    float_msg(self_obj, mstr(101), FLOAT_MSG_NORMAL);
end

procedure LoneRaid02
begin
    float_msg(self_obj, mstr(102), FLOAT_MSG_NORMAL);
end

procedure LoneRaid03
begin
    Reply(103);
    giq_option(7, NAME, 104, LoneRaid07, NEUTRAL_REACTION);
    giq_option(4, NAME, 105, LoneRaid03a, BAD_REACTION);
    giq_option(4, NAME, 106, LoneRaid09, NEUTRAL_REACTION);
    giq_option(4, NAME, 107, LoneRaid10, BAD_REACTION);
    giq_option(-3, NAME, 108, LoneRaid11, BAD_REACTION);
    giq_option(-3, NAME, 109, LoneRaid12, NEUTRAL_REACTION);
end

procedure LoneRaid03a
begin
    if ((dude_strength + dude_endurance) > 13) then begin
        call LoneRaid08();
    end
    else begin
        call LoneRaidCombat();
    end
end

procedure LoneRaid04
begin
    Reply(110 + (dude_gender == 1));
    giq_option(7, NAME, 112, LoneRaid13, GOOD_REACTION);
    giq_option(4, NAME, 113, LoneRaid04a, NEUTRAL_REACTION);
    giq_option(4, NAME, 114, LoneRaid16, NEUTRAL_REACTION);
    giq_option(4, NAME, 115, LoneRaid17, NEUTRAL_REACTION);
    giq_option(-3, NAME, 109, LoneRaid12, NEUTRAL_REACTION);
end

procedure LoneRaid04a
begin
    if (dude_luck < 5) then begin
        call LoneRaid14();
    end
    else begin
        call LoneRaid15();
    end
end

procedure LoneRaid05
begin
    Reply(116);
    if ((global_var(GVAR_RESCUE_TANDI) == 1) and (global_var(GVAR_TANDI_STATUS) == 1)) then begin
        giq_option(7, NAME, 117, LoneRaid18, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 118, LoneRaid03a, BAD_REACTION);
    giq_option(4, NAME, 119, LoneRaid09, NEUTRAL_REACTION);
    giq_option(4, NAME, 120, LoneRaid10, BAD_REACTION);
    giq_option(-3, NAME, 108, LoneRaid11, BAD_REACTION);
    giq_option(-3, NAME, 109, LoneRaid12, NEUTRAL_REACTION);
end

procedure LoneRaid06
begin
    Reply(121);
    giq_option(7, NAME, 122, LoneRaid18, NEUTRAL_REACTION);
    giq_option(4, NAME, 123, LoneRaid19, BAD_REACTION);
    giq_option(4, NAME, 124, LoneRaid20, NEUTRAL_REACTION);
    giq_option(4, NAME, 125, LoneRaid21, NEUTRAL_REACTION);
    giq_option(-3, NAME, 109, LoneRaid12, NEUTRAL_REACTION);
end

procedure LoneRaid07
begin
    Reply(126);
    giq_option(4, NAME, 127, LoneRaid03a, NEUTRAL_REACTION);
    giq_option(4, NAME, 128, LoneRaid09, NEUTRAL_REACTION);
    giq_option(4, NAME, 129, LoneRaid22, BAD_REACTION);
end

procedure LoneRaid08
begin
    broken := 1;
    Reply(130);
    giq_option(0, SCRIPT_MODREACT, 106, LoneRaidLoot, NEUTRAL_REACTION);
end

procedure LoneRaid09
begin
    gsay_message(NAME, 131, NEUTRAL_REACTION);
end

procedure LoneRaid10
begin
    gsay_message(NAME, 132, BAD_REACTION);
end

procedure LoneRaid11
begin
    gsay_message(NAME, 133, BAD_REACTION);
end

procedure LoneRaid12
begin
    gsay_message(NAME, 135, NEUTRAL_REACTION);
end

procedure LoneRaid13
begin
    gsay_message(NAME, 135 + (dude_gender == 1), GOOD_REACTION);
end

procedure LoneRaid14
begin
    gsay_message(NAME, 137, BAD_REACTION);
    hostile := 1;
end

procedure LoneRaid15
begin
    gsay_message(NAME, 138 + (dude_gender == 1), NEUTRAL_REACTION);
end

procedure LoneRaid16
begin
    gsay_message(NAME, 140, NEUTRAL_REACTION);
end

procedure LoneRaid17
begin
    gsay_message(NAME, 141 + (dude_gender == 1), GOOD_REACTION);
end

procedure LoneRaid18
begin
    gsay_message(NAME, 143, NEUTRAL_REACTION);
end

procedure LoneRaid19
begin
    gsay_message(NAME, 144, BAD_REACTION);
    hostile := 1;
end

procedure LoneRaid20
begin
    gsay_message(NAME, 145, NEUTRAL_REACTION);
end

procedure LoneRaid21
begin
    gsay_message(NAME, 146, GOOD_REACTION);
end

procedure LoneRaid22
begin
    gsay_message(NAME, 147, BAD_REACTION);
    hostile := 1;
end

procedure LoneRaidCombat
begin
    hostile := 1;
end

procedure LoneRaidEnd
begin
end

procedure LoneRaidLoot
begin
    gdialog_barter;
    giq_option(0, SCRIPT_MODREACT, 103, LoneRaidEnd, BAD_REACTION);
end

procedure flee_dude
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    while (LVar1 < 5) do begin
        if (tile_distance(dude_tile, tile_num_in_direction(tile_num(self_obj), LVar1, 3)) > LVar2) then begin
            LVar0 := tile_num_in_direction(tile_num(self_obj), LVar1, 3);
            LVar2 := tile_distance(dude_tile, LVar0);
        end
        LVar1 := LVar1 + 1;
    end
    animate_move_obj_to_tile(self_obj, LVar0, 0);
end
