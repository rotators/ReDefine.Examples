procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure damage_p_proc;
procedure look_at_p_proc;
procedure Rutger00;
procedure Rutger00a;
procedure Rutger00b;
procedure Rutger01;
procedure Rutger02;
procedure Rutger03;
procedure Rutger04;
procedure Rutger05;
procedure Rutger06;
procedure Rutger07;
procedure Rutger08;
procedure Rutger09;
procedure Rutger10;
procedure Rutger11;
procedure Rutger11a;
procedure Rutger12;
procedure Rutger13;
procedure Rutger14;
procedure Rutger15;
procedure Rutger16;
procedure Rutger17;
procedure Rutger17a;
procedure Rutger18;
procedure Rutger19;
procedure Rutger20;
procedure Rutger21;
procedure Rutger22;
procedure Rutger22a;
procedure Rutger23;
procedure Rutger24;
procedure Rutger25;
procedure Rutger26;
procedure Rutger27;
procedure Rutger28;
procedure Rutger29;
procedure Rutger29a;
procedure Rutger29b;
procedure Rutger30;
procedure Rutger31;
procedure Rutger32;
procedure Rutger33;
procedure Rutger34;
procedure Rutger35;
procedure Rutger36;
procedure Rutger37;
procedure Rutger38;
procedure Rutger39;
procedure Rutger39a;
procedure Rutger40;
procedure Rutger40a;
procedure Rutger40b;
procedure Rutger41;
procedure Rutger42;
procedure Rutger43;
procedure Rutger44;
procedure Rutger45;
procedure Rutger46;
procedure Rutger47;
procedure Rutger48;
procedure Rutger49;
procedure Rutger50;
procedure Rutger51;
procedure Rutger52;
procedure Rutger53;
procedure Rutger54;
procedure Rutger55;
procedure Rutger55a;
procedure Rutger56;
procedure Rutger56a;
procedure Rutger57;
procedure Rutger58;
procedure Rutger59;
procedure Rutger60;
procedure Rutger61;
procedure Rutger62;
procedure Rutger63;
procedure Rutger64;
procedure Rutger65;
procedure Rutger67;
procedure Rutger68;
procedure Rutger69;
procedure Rutger70;
procedure Rutger71;
procedure Rutger72;
procedure Rutger73;
procedure Rutger74;
procedure Rutger75;
procedure Rutger76;
procedure RutgerEnd;
procedure RutgerEndBad;

variable hostile;
variable Only_Once := 1;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure start
begin
    if (Only_Once) then begin
        Only_Once := 0;
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 36);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_GUARD_HUMOROUS);
    end
    if (script_action == look_at_proc) then begin
        call look_at_p_proc();
    end
    else begin
        if (script_action == pickup_proc) then begin
            call pickup_p_proc();
        end
        else begin
            if (script_action == talk_proc) then begin
                call talk_p_proc();
            end
            else begin
                if (script_action == critter_proc) then begin
                    call critter_p_proc();
                end
                else begin
                    if (script_action == destroy_proc) then begin
                        call destroy_p_proc();
                    end
                end
            end
        end
    end
end

procedure combat
begin
    hostile := 1;
end

procedure critter_p_proc
begin
    if (hostile) then begin
        hostile := 0;
        attack(dude_obj);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        hostile := 1;
    end
end

procedure talk_p_proc
begin
    call get_reaction();
    if (dude_iq < 4) then begin
        float_msg(dude_obj, mstr(314), FLOAT_MSG_GREEN);
        float_msg(self_obj, mstr(315), FLOAT_MSG_RED);
    end
    else begin
        if ((global_var(GVAR_MASTER_BLOWN) == 1) and (global_var(GVAR_VATS_BLOWN) != 1) and (local_var(8) == 0)) then begin
            set_local_var(8, 1);
            set_local_var(4, 1);
            start_gdialog(401, self_obj, 4, -1, -1);
            gsay_start;
            call Rutger55();
            gsay_end;
            end_dialogue;
        end
        else begin
            if ((global_var(GVAR_MASTER_BLOWN) != 1) and (global_var(GVAR_VATS_BLOWN) == 1) and (local_var(8) == 0)) then begin
                set_local_var(8, 1);
                set_local_var(4, 1);
                start_gdialog(401, self_obj, 4, -1, -1);
                gsay_start;
                call Rutger58();
                gsay_end;
                end_dialogue;
            end
            else begin
                if ((map_var(40) == 1) or (map_var(35) == 1)) then begin
                    set_local_var(4, 1);
                    start_gdialog(401, self_obj, 4, -1, -1);
                    gsay_start;
                    call Rutger74();
                    gsay_end;
                    end_dialogue;
                end
                else begin
                    if (local_var(4) == 0) then begin
                        set_local_var(4, 1);
                        start_gdialog(401, self_obj, 4, -1, -1);
                        gsay_start;
                        call Rutger00();
                        gsay_end;
                        end_dialogue;
                    end
                    else begin
                        if (map_var(34) == 0) then begin
                            if (local_var(1) >= 2) then begin
                                start_gdialog(401, self_obj, 4, -1, -1);
                                gsay_start;
                                call Rutger73();
                                gsay_end;
                                end_dialogue;
                            end
                            else begin
                                start_gdialog(401, self_obj, 4, -1, -1);
                                gsay_start;
                                call Rutger74();
                                gsay_end;
                                end_dialogue;
                            end
                        end
                        else begin
                            if ((map_var(34) == 1) and (map_var(41) == 0)) then begin
                                call Rutger21();
                            end
                            else begin
                                if (map_var(41) == 3) then begin
                                    start_gdialog(401, self_obj, 4, -1, -1);
                                    gsay_start;
                                    call Rutger54();
                                    gsay_end;
                                    end_dialogue;
                                end
                                else begin
                                    if (map_var(41) == 4) then begin
                                        start_gdialog(401, self_obj, 4, -1, -1);
                                        gsay_start;
                                        call Rutger56();
                                        gsay_end;
                                        end_dialogue;
                                    end
                                    else begin
                                        if (local_var(6) == 0) then begin
                                            if (map_var(41) == 2) then begin
                                                start_gdialog(401, self_obj, 4, -1, -1);
                                                gsay_start;
                                                call Rutger17();
                                                gsay_end;
                                                end_dialogue;
                                            end
                                            else begin
                                                if (map_var(41) == 1) then begin
                                                    start_gdialog(401, self_obj, 4, -1, -1);
                                                    gsay_start;
                                                    call Rutger25();
                                                    gsay_end;
                                                    end_dialogue;
                                                end
                                                else begin
                                                    if (map_var(41) == 0) then begin
                                                        call Rutger21();
                                                    end
                                                end
                                            end
                                        end
                                        else begin
                                            if ((local_var(6) == 1) and (map_var(41) == 1)) then begin
                                                start_gdialog(401, self_obj, 4, -1, -1);
                                                gsay_start;
                                                call Rutger22();
                                                gsay_end;
                                                end_dialogue;
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if ((global_var(GVAR_GOOD_MONSTER) % 2) == 0) then begin
            set_global_var(GVAR_PLAYER_REPUATION, global_var(GVAR_PLAYER_REPUATION) - 1);
        end
    end
end

procedure damage_p_proc
begin
    variable LVar0 := 0;
    LVar0 := obj_pid(source_obj);
    if (party_member_obj(LVar0) != 0) then begin
        set_global_var(GVAR_ENEMY_HUB, 1);
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure Rutger00
begin
    Reply(101);
    if (global_var(GVAR_FIND_WATER_CHIP) != 2) then begin
        giq_option(4, NAME, 102, Rutger03, NEUTRAL_REACTION);
    end
    if (map_var(43) == 1) then begin
        giq_option(4, NAME, 103, Rutger00a, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 104, Rutger00a, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 105, Rutger07, NEUTRAL_REACTION);
    giq_option(4, NAME, 106, RutgerEnd, NEUTRAL_REACTION);
    giq_option(-3, NAME, 107, Rutger00b, NEUTRAL_REACTION);
end

procedure Rutger00a
begin
    if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
        call Rutger10();
    end
    else begin
        if (global_var(GVAR_CHILDKILLER_REPUATION) > 2) then begin
            call Rutger11();
        end
        else begin
            if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
                call Rutger15();
            end
            else begin
                if ((map_var(35) == 1) or (map_var(40) == 1)) then begin
                    call Rutger75();
                end
                else begin
                    call Rutger16();
                end
            end
        end
    end
end

procedure Rutger00b
begin
    if (dude_strength <= 6) then begin
        call Rutger01();
    end
    else begin
        call Rutger02();
    end
end

procedure Rutger01
begin
    gsay_message(NAME, 108, BAD_REACTION);
end

procedure Rutger02
begin
    gsay_message(NAME, 109, NEUTRAL_REACTION);
end

procedure Rutger03
begin
    Reply(110);
    if (global_var(GVAR_JUNKTOWN) > 0) then begin
        giq_option(4, NAME, 111, Rutger04, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 112, Rutger04, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 113, RutgerEnd, NEUTRAL_REACTION);
end

procedure Rutger04
begin
    Reply(114);
    giq_option(4, NAME, 115, Rutger05, NEUTRAL_REACTION);
    if (map_var(43) == 1) then begin
        giq_option(4, NAME, 116, Rutger00a, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 117, Rutger00a, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 118, RutgerEnd, NEUTRAL_REACTION);
end

procedure Rutger05
begin
    Reply(119);
    giq_option(4, NAME, 120, Rutger06, NEUTRAL_REACTION);
    giq_option(4, NAME, 121, RutgerEnd, NEUTRAL_REACTION);
end

procedure Rutger06
begin
    Reply(122);
    giq_option(4, NAME, 123, Rutger07, NEUTRAL_REACTION);
    giq_option(4, NAME, 124, RutgerEnd, NEUTRAL_REACTION);
end

procedure Rutger07
begin
    if (local_var(5) == 0) then begin
        set_local_var(5, 1);
        Reply(125);
    end
    else begin
        Reply(126);
    end
    giq_option(4, NAME, 127, Rutger08, NEUTRAL_REACTION);
    giq_option(4, NAME, 128, RutgerEnd, NEUTRAL_REACTION);
    if (map_var(43) == 1) then begin
        giq_option(4, NAME, 129, Rutger00a, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 130, Rutger00a, NEUTRAL_REACTION);
    end
end

procedure Rutger08
begin
    Reply(131);
    giq_option(4, NAME, 132, Rutger09, NEUTRAL_REACTION);
    giq_option(4, NAME, 133, RutgerEnd, NEUTRAL_REACTION);
end

procedure Rutger09
begin
    Reply(134);
    giq_option(4, NAME, 135, RutgerEndBad, NEUTRAL_REACTION);
    giq_option(4, NAME, 136, RutgerEnd, NEUTRAL_REACTION);
    if (map_var(43) == 1) then begin
        giq_option(4, NAME, 129, Rutger00a, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 130, Rutger00a, NEUTRAL_REACTION);
    end
end

procedure Rutger10
begin
    set_map_var(34, 1);
    gsay_message(NAME, 139, NEUTRAL_REACTION);
end

procedure Rutger11
begin
    Reply(140);
    giq_option(4, NAME, 141, Rutger11a, NEUTRAL_REACTION);
    giq_option(4, NAME, 142, Rutger14, NEUTRAL_REACTION);
end

procedure Rutger11a
begin
    if (is_success(do_check(dude_obj, 3, -1))) then begin
        call Rutger12();
    end
    else begin
        call Rutger13();
    end
end

procedure Rutger12
begin
    set_map_var(34, 1);
    gsay_message(NAME, 143, NEUTRAL_REACTION);
end

procedure Rutger13
begin
    set_map_var(34, 1);
    if (dude_gender == 0) then begin
        gsay_message(NAME, 144, BAD_REACTION);
    end
    else begin
        gsay_message(NAME, 145, BAD_REACTION);
    end
end

procedure Rutger14
begin
    set_map_var(34, 1);
    gsay_message(NAME, 146, NEUTRAL_REACTION);
end

procedure Rutger15
begin
    set_map_var(34, 1);
    gsay_message(NAME, 147, NEUTRAL_REACTION);
end

procedure Rutger16
begin
    set_map_var(34, 1);
    gsay_message(NAME, 148, NEUTRAL_REACTION);
end

procedure Rutger17
begin
    Reply(149);
    giq_option(4, NAME, 150, RutgerEndBad, NEUTRAL_REACTION);
    giq_option(4, NAME, 151, Rutger17a, NEUTRAL_REACTION);
    giq_option(4, NAME, 152, RutgerEnd, NEUTRAL_REACTION);
    giq_option(-3, NAME, 153, Rutger18, NEUTRAL_REACTION);
end

procedure Rutger17a
begin
    if (is_success(do_check(dude_obj, 3, 1))) then begin
        call Rutger19();
    end
    else begin
        call Rutger20();
    end
end

procedure Rutger18
begin
    gsay_message(NAME, 154, BAD_REACTION);
end

procedure Rutger19
begin
    set_map_var(41, 1);
    set_global_var(GVAR_MISSING_CARAVAN, 1);
    set_map_var(10, 1);
    set_map_var(56, 1);
    gsay_message(NAME, 155, NEUTRAL_REACTION);
    call Rutger25();
end

procedure Rutger20
begin
    set_map_var(35, 1);
    set_map_var(40, 1);
    set_map_var(10, 0);
    call BottomReact();
    gsay_message(NAME, 156, BAD_REACTION);
end

procedure Rutger21
begin
    float_msg(self_obj, mstr(157), FLOAT_MSG_RED);
end

procedure Rutger22
begin
    Reply(159);
    if ((global_var(GVAR_THE_VATS) == 2) or (obj_is_carrying_obj_pid(dude_obj, 196) >= 1)) then begin
        giq_option(4, NAME, 312, Rutger76, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 160, Rutger23, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 161, Rutger26, NEUTRAL_REACTION);
    if (map_var(35) == 0) then begin
        giq_option(4, NAME, 162, Rutger22a, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 163, RutgerEnd, NEUTRAL_REACTION);
    giq_option(-3, NAME, 164, Rutger24, NEUTRAL_REACTION);
end

procedure Rutger22a
begin
    if ((map_var(41) != 3) and (map_var(41) != 4)) then begin
        call Rutger63();
    end
    else begin
        if (map_var(36) == 1) then begin
            call Rutger71();
        end
    end
end

procedure Rutger23
begin
    gsay_message(NAME, 165, NEUTRAL_REACTION);
end

procedure Rutger24
begin
    gsay_message(NAME, 166, BAD_REACTION);
end

procedure Rutger25
begin
    set_local_var(6, 1);
    set_global_var(GVAR_HUB_FILLER_29, 1);
    set_map_var(33, 1);
    Reply(167);
    call Rutger29();
end

procedure Rutger26
begin
    gsay_message(NAME, 168, NEUTRAL_REACTION);
    call Rutger25();
end

procedure Rutger27
begin
    Reply(169);
    giq_option(4, NAME, 170, Rutger28, NEUTRAL_REACTION);
    giq_option(4, NAME, 171, Rutger30, NEUTRAL_REACTION);
end

procedure Rutger28
begin
    Reply(172);
    call Rutger29();
end

procedure Rutger29
begin
    if (global_var(GVAR_BECOME_AN_INITIATE) != 2) then begin
        giq_option(4, NAME, 173, Rutger29a, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 174, Rutger29b, NEUTRAL_REACTION);
    end
    if (map_var(8) == 1) then begin
        giq_option(4, NAME, 175, Rutger38, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 176, Rutger37, NEUTRAL_REACTION);
    giq_option(4, NAME, 177, RutgerEnd, NEUTRAL_REACTION);
end

procedure Rutger29a
begin
    if (obj_pid(critter_inven_obj(dude_obj, 0)) == 3) then begin
        call Rutger27();
    end
    else begin
        call Rutger31();
    end
end

procedure Rutger29b
begin
    if (obj_pid(critter_inven_obj(dude_obj, 0)) == 3) then begin
        call Rutger32();
    end
    else begin
        call Rutger33();
    end
end

procedure Rutger30
begin
    Reply(178);
    call Rutger29();
end

procedure Rutger31
begin
    Reply(179);
    call Rutger29();
end

procedure Rutger32
begin
    Reply(180);
    call Rutger29();
end

procedure Rutger33
begin
    Reply(181);
    giq_option(4, NAME, 182, Rutger34, NEUTRAL_REACTION);
    giq_option(4, NAME, 183, Rutger35, NEUTRAL_REACTION);
    giq_option(4, NAME, 184, Rutger36, NEUTRAL_REACTION);
end

procedure Rutger34
begin
    Reply(185);
    call Rutger29();
end

procedure Rutger35
begin
    Reply(186);
    call Rutger29();
end

procedure Rutger36
begin
    Reply(187);
    call Rutger29();
end

procedure Rutger37
begin
    set_map_var(10, 1);
    Reply(188);
    call Rutger29();
end

procedure Rutger38
begin
    Reply(189);
    call Rutger29();
end

procedure Rutger39
begin
    Reply(190);
    giq_option(4, NAME, 191, Rutger39a, NEUTRAL_REACTION);
    giq_option(4, NAME, 192, RutgerEnd, NEUTRAL_REACTION);
    giq_option(-3, NAME, 193, Rutger24, NEUTRAL_REACTION);
    giq_option(-3, NAME, 194, Rutger24, NEUTRAL_REACTION);
end

procedure Rutger39a
begin
    if (map_var(42) == 16777267) then begin
        call Rutger49();
    end
    else begin
        if (map_var(42) == 1) then begin
            call Rutger50();
        end
        else begin
            if (map_var(42) == 2) then begin
                call Rutger51();
            end
            else begin
                call Rutger40();
            end
        end
    end
end

procedure Rutger40
begin
    Reply(195);
    giq_option(4, NAME, 196, Rutger40a, NEUTRAL_REACTION);
    giq_option(4, NAME, 197, Rutger47, NEUTRAL_REACTION);
    giq_option(4, NAME, 198, Rutger40b, NEUTRAL_REACTION);
    giq_option(4, NAME, 199, Rutger41, NEUTRAL_REACTION);
end

procedure Rutger40a
begin
    if (is_success(do_check(dude_obj, 3, 1))) then begin
        call Rutger42();
    end
    else begin
        call Rutger44();
    end
end

procedure Rutger40b
begin
    if (is_success(do_check(dude_obj, 3, -2))) then begin
        call Rutger45();
    end
    else begin
        call Rutger46();
    end
end

procedure Rutger41
begin
    if (dude_gender == 0) then begin
        gsay_message(NAME, 200, BAD_REACTION);
    end
    else begin
        gsay_message(NAME, 201, BAD_REACTION);
    end
end

procedure Rutger42
begin
    Reply(202);
    giq_option(4, NAME, 203, Rutger43, NEUTRAL_REACTION);
    giq_option(4, NAME, 204, Rutger47, NEUTRAL_REACTION);
    giq_option(4, NAME, 205, RutgerEnd, NEUTRAL_REACTION);
end

procedure Rutger43
begin
    gsay_message(NAME, 206, NEUTRAL_REACTION);
end

procedure Rutger44
begin
    gsay_message(NAME, 207, BAD_REACTION);
end

procedure Rutger45
begin
    Reply(208);
    giq_option(4, NAME, 209, Rutger47, NEUTRAL_REACTION);
    giq_option(4, NAME, 210, Rutger44, NEUTRAL_REACTION);
end

procedure Rutger46
begin
    gsay_message(NAME, 211, BAD_REACTION);
end

procedure Rutger47
begin
    Reply(212);
    if (obj_is_carrying_obj_pid(dude_obj, 196) >= 1) then begin
        if (global_var(GVAR_KILL_DEATHCLAW) == 2) then begin
            giq_option(4, NAME, 213, Rutger48, NEUTRAL_REACTION);
        end
        else begin
            giq_option(4, NAME, 214, Rutger48, NEUTRAL_REACTION);
        end
    end
    else begin
        giq_option(4, NAME, 215, RutgerEnd, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 216, RutgerEnd, NEUTRAL_REACTION);
    giq_option(4, NAME, 217, RutgerEnd, NEUTRAL_REACTION);
end

procedure Rutger48
begin
    variable LVar0 := 0;
    call TopReact();
    LVar0 := item_caps_adjust(dude_obj, 800);
    set_map_var(42, 2);
    set_map_var(36, 1);
    set_map_var(35, 0);
    set_map_var(40, 0);
    set_map_var(10, 1);
    set_map_var(41, 4);
    give_exp_points(1000);
    display_msg(message_str(SCRIPT_GENCHAT, 103) + 1000 + message_str(SCRIPT_GENCHAT, 104));
    set_global_var(GVAR_PLAYER_REPUATION, global_var(GVAR_PLAYER_REPUATION) + 5);
    gsay_message(NAME, 218, GOOD_REACTION);
end

procedure Rutger49
begin
    Reply(219);
    giq_option(4, NAME, 220, Rutger40a, NEUTRAL_REACTION);
    giq_option(4, NAME, 221, Rutger47, NEUTRAL_REACTION);
    giq_option(4, NAME, 222, Rutger40b, NEUTRAL_REACTION);
    giq_option(4, NAME, 223, Rutger41, NEUTRAL_REACTION);
end

procedure Rutger50
begin
    Reply(224);
    giq_option(4, NAME, 225, Rutger40a, NEUTRAL_REACTION);
    giq_option(4, NAME, 226, Rutger47, NEUTRAL_REACTION);
    giq_option(4, NAME, 227, Rutger40b, NEUTRAL_REACTION);
    giq_option(4, NAME, 228, Rutger41, NEUTRAL_REACTION);
end

procedure Rutger51
begin
    Reply(229);
    if (obj_is_carrying_obj_pid(dude_obj, 196) >= 1) then begin
        if (global_var(GVAR_KILL_DEATHCLAW) == 2) then begin
            giq_option(4, NAME, 230, Rutger48, NEUTRAL_REACTION);
        end
        else begin
            giq_option(4, NAME, 231, Rutger48, NEUTRAL_REACTION);
        end
    end
    else begin
        giq_option(4, NAME, 232, RutgerEnd, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 233, RutgerEnd, NEUTRAL_REACTION);
end

procedure Rutger52
begin
    Reply(234);
    if (obj_is_carrying_obj_pid(dude_obj, 196) >= 1) then begin
        giq_option(4, NAME, 235, Rutger48, NEUTRAL_REACTION);
    end
    else begin
        if (global_var(GVAR_KILL_DEATHCLAW) == 2) then begin
            giq_option(4, NAME, 236, Rutger53, NEUTRAL_REACTION);
        end
    end
    giq_option(4, NAME, 237, RutgerEnd, NEUTRAL_REACTION);
    giq_option(-3, NAME, 238, Rutger24, NEUTRAL_REACTION);
end

procedure Rutger53
begin
    gsay_message(NAME, 239, NEUTRAL_REACTION);
end

procedure Rutger54
begin
    Reply(240);
    giq_option(4, NAME, 241, Rutger39a, NEUTRAL_REACTION);
    giq_option(4, NAME, 242, RutgerEnd, NEUTRAL_REACTION);
end

procedure Rutger55
begin
    Reply(243);
    if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
        giq_option(4, NAME, 244, Rutger59, NEUTRAL_REACTION);
    end
    else begin
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            giq_option(4, NAME, 245, Rutger59, NEUTRAL_REACTION);
        end
        else begin
            giq_option(4, NAME, 246, Rutger59, NEUTRAL_REACTION);
        end
    end
    giq_option(4, NAME, 247, Rutger55a, NEUTRAL_REACTION);
    giq_option(4, NAME, 248, RutgerEnd, NEUTRAL_REACTION);
    giq_option(-3, NAME, 249, RutgerEnd, NEUTRAL_REACTION);
end

procedure Rutger55a
begin
    if ((map_var(40) == 1) or (map_var(35) == 1)) then begin
        call Rutger67();
    end
    else begin
        if (map_var(36) == 1) then begin
            call Rutger71();
        end
        else begin
            call Rutger62();
        end
    end
end

procedure Rutger56
begin
    if (dude_gender == 0) then begin
        Reply(250);
    end
    else begin
        if (dude_charisma >= 7) then begin
            Reply(252);
        end
        else begin
            Reply(253);
        end
    end
    giq_option(4, NAME, 254, Rutger55a, NEUTRAL_REACTION);
    giq_option(4, NAME, 255, Rutger56a, NEUTRAL_REACTION);
    giq_option(-3, NAME, 256, Rutger24, NEUTRAL_REACTION);
end

procedure Rutger56a
begin
    if ((global_var(GVAR_MASTER_BLOWN) == 1) or (global_var(GVAR_VATS_BLOWN) == 1)) then begin
        call Rutger57();
    end
    else begin
        call Rutger61();
    end
end

procedure Rutger57
begin
    gsay_message(NAME, 257, GOOD_REACTION);
end

procedure Rutger58
begin
    Reply(258);
    if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
        giq_option(4, NAME, 259, Rutger60, NEUTRAL_REACTION);
    end
    else begin
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            giq_option(4, NAME, 260, Rutger60, NEUTRAL_REACTION);
            giq_option(4, NAME, 261, Rutger60, NEUTRAL_REACTION);
        end
        else begin
            giq_option(4, NAME, 262, Rutger61, NEUTRAL_REACTION);
        end
    end
    giq_option(4, NAME, 263, Rutger55a, NEUTRAL_REACTION);
    giq_option(4, NAME, 248, RutgerEnd, NEUTRAL_REACTION);
    giq_option(-3, NAME, 264, RutgerEnd, NEUTRAL_REACTION);
end

procedure Rutger59
begin
    gsay_message(NAME, 265, NEUTRAL_REACTION);
end

procedure Rutger60
begin
    gsay_message(NAME, 266, NEUTRAL_REACTION);
end

procedure Rutger61
begin
    gsay_message(NAME, 267, NEUTRAL_REACTION);
end

procedure Rutger62
begin
    Reply(268);
    giq_option(4, NAME, 269, Rutger65, NEUTRAL_REACTION);
    giq_option(4, NAME, 270, Rutger64, NEUTRAL_REACTION);
end

procedure Rutger63
begin
    Reply(271);
    giq_option(4, NAME, 272, Rutger68, NEUTRAL_REACTION);
    giq_option(4, NAME, 273, Rutger70, NEUTRAL_REACTION);
    giq_option(4, NAME, 274, RutgerEnd, NEUTRAL_REACTION);
end

procedure Rutger64
begin
    gsay_message(NAME, 275, NEUTRAL_REACTION);
end

procedure Rutger65
begin
    set_map_var(36, 1);
    gsay_message(NAME, 276, NEUTRAL_REACTION);
end

procedure Rutger67
begin
    if (local_var(7) == 0) then begin
        set_local_var(7, 1);
        gsay_message(NAME, 279, NEUTRAL_REACTION);
    end
    gsay_message(NAME, 280, NEUTRAL_REACTION);
end

procedure Rutger68
begin
    Reply(281);
    giq_option(4, NAME, 282, Rutger72, NEUTRAL_REACTION);
    giq_option(4, NAME, 283, Rutger69, NEUTRAL_REACTION);
    giq_option(4, NAME, 284, Rutger70, NEUTRAL_REACTION);
end

procedure Rutger69
begin
    gsay_message(NAME, 285, NEUTRAL_REACTION);
end

procedure Rutger70
begin
    set_map_var(36, 1);
    gsay_message(NAME, 286, NEUTRAL_REACTION);
end

procedure Rutger71
begin
    set_map_var(36, 1);
    gsay_message(NAME, 287, NEUTRAL_REACTION);
end

procedure Rutger72
begin
    Reply(289);
    giq_option(4, NAME, 290, RutgerEnd, NEUTRAL_REACTION);
    giq_option(4, NAME, 291, Rutger70, NEUTRAL_REACTION);
end

procedure Rutger73
begin
    Reply(292);
    if (global_var(GVAR_FIND_WATER_CHIP) != 2) then begin
        giq_option(4, NAME, 294, Rutger03, NEUTRAL_REACTION);
    end
    if (map_var(43) == 1) then begin
        giq_option(4, NAME, 295, Rutger00a, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 296, Rutger00a, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 297, Rutger07, NEUTRAL_REACTION);
    giq_option(4, NAME, 298, RutgerEnd, NEUTRAL_REACTION);
    giq_option(-3, NAME, 299, Rutger00b, NEUTRAL_REACTION);
end

procedure Rutger74
begin
    Reply(random(300, 303));
    if (global_var(GVAR_FIND_WATER_CHIP) != 2) then begin
        giq_option(4, NAME, 305, Rutger03, NEUTRAL_REACTION);
    end
    if (map_var(43) == 1) then begin
        giq_option(4, NAME, 306, Rutger00a, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 307, Rutger00a, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 308, Rutger07, NEUTRAL_REACTION);
    giq_option(4, NAME, 309, RutgerEnd, NEUTRAL_REACTION);
    giq_option(-3, NAME, 310, Rutger00b, NEUTRAL_REACTION);
end

procedure Rutger75
begin
    gsay_message(NAME, 311, NEUTRAL_REACTION);
end

procedure Rutger76
begin
    gsay_message(NAME, 313, NEUTRAL_REACTION);
end

procedure RutgerEnd
begin
end

procedure RutgerEndBad
begin
    call DownReactLevel();
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * dude_charisma) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence)));
        if (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality)) then begin
            if (global_var(GVAR_PLAYER_REPUATION) > 0) then begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
        end
        if (global_var(GVAR_CHILDKILLER_REPUATION) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(SCRIPT_MODREACT, random(100, 105));
end
