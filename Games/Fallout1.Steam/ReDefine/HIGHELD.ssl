procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure Meeting01;
procedure Meeting02;
procedure Meeting02a;
procedure Meeting03;
procedure Meeting04;
procedure Meeting05;
procedure Meeting05a;
procedure Meeting06;
procedure Meeting07;
procedure Meeting08;
procedure Meeting09;
procedure Meeting10;
procedure Meeting11;
procedure Meeting12;
procedure Meeting13;
procedure Elder01;
procedure Elder02;
procedure Elder03;
procedure Elder04;
procedure Elder05;
procedure Elder06;
procedure Elder07;
procedure Elder07a;
procedure Elder08;
procedure Elder09;
procedure Elder10;
procedure Elder11;
procedure Elder12;
procedure ElderEnd;

variable hostile;
variable Only_Once := 1;
variable awardex;
variable temp;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure start
begin
    if (Only_Once) then begin
        Only_Once := 0;
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 44);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_BOS_ELDERS);
    end
    if (script_action == look_at_proc) then begin
        call look_at_p_proc();
    end
    else begin
        if (script_action == pickup_proc) then begin
            call pickup_p_proc();
        end
        else begin
            if (script_action == talk_proc) then begin
                call talk_p_proc();
            end
            else begin
                if (script_action == critter_proc) then begin
                    call critter_p_proc();
                end
                else begin
                    if (script_action == destroy_proc) then begin
                        call destroy_p_proc();
                    end
                end
            end
        end
    end
end

procedure combat
begin
    hostile := 1;
end

procedure critter_p_proc
begin
    if (obj_can_see_obj(self_obj, dude_obj) and (tile_distance_objs(self_obj, dude_obj) < 3)) then begin
        if ((map_var(19) == 1) and (local_var(5) == 0)) then begin
            dialogue_system_enter;
        end
    end
    if (global_var(GVAR_ENEMY_BROTHERHOOD)) then begin
        hostile := 1;
    end
    if (tile_distance_objs(self_obj, dude_obj) > 12) then begin
        hostile := 0;
    end
    if (hostile) then begin
        set_global_var(GVAR_ENEMY_BROTHERHOOD, 1);
        hostile := 0;
        attack(dude_obj);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        hostile := 1;
    end
end

procedure talk_p_proc
begin
    call get_reaction();
    if (global_var(GVAR_VATS_BLOWN) == 1) then begin
        start_gdialog(942, self_obj, 4, -1, -1);
        gsay_start;
        call Elder10();
        gsay_end;
        end_dialogue;
    end
    else begin
        if (local_var(1) == 1) then begin
            call Elder12();
        end
        else begin
            if (local_var(5) == 1) then begin
                float_msg(self_obj, mstr(165), FLOAT_MSG_RED);
            end
            else begin
                if ((map_var(19) == 1) and (local_var(5) == 0)) then begin
                    set_local_var(5, 1);
                    start_gdialog(942, self_obj, 4, -1, -1);
                    gsay_start;
                    call Meeting01();
                    gsay_end;
                    end_dialogue;
                end
                else begin
                    if (local_var(4) == 0) then begin
                        set_local_var(4, 1);
                        start_gdialog(942, self_obj, 4, -1, -1);
                        gsay_start;
                        call Elder01();
                        gsay_end;
                        end_dialogue;
                    end
                    else begin
                        start_gdialog(942, self_obj, 4, -1, -1);
                        gsay_start;
                        call Elder04();
                        gsay_end;
                        end_dialogue;
                    end
                end
            end
        end
    end
    if (awardex) then begin
        if (local_var(6) == 0) then begin
            set_local_var(6, 1);
            temp := 1500;
            display_msg(mstr(166) + temp + mstr(167));
            give_exp_points(temp);
        end
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if ((global_var(GVAR_GOOD_MONSTER) % 2) == 0) then begin
            set_global_var(GVAR_PLAYER_REPUATION, global_var(GVAR_PLAYER_REPUATION) - 1);
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure Meeting01
begin
    Reply(mstr(134) + proto_data(obj_pid(dude_obj), 1) + mstr(135) + proto_data(obj_pid(dude_obj), 1) + mstr(136));
    giq_option(4, NAME, 137, Meeting02, NEUTRAL_REACTION);
    giq_option(-3, NAME, 138, Meeting13, BAD_REACTION);
end

procedure Meeting02
begin
    Reply(139);
    giq_option(6, NAME, 140, Meeting02a, NEUTRAL_REACTION);
    giq_option(4, NAME, 141, Meeting04, NEUTRAL_REACTION);
end

procedure Meeting02a
begin
    if (global_var(GVAR_VREE_DISK) == 1) then begin
        call Meeting03();
    end
    else begin
        call Meeting04();
    end
end

procedure Meeting03
begin
    Reply(142);
    giq_option(6, NAME, 143, Meeting04, NEUTRAL_REACTION);
end

procedure Meeting04
begin
    Reply(144);
    giq_option(4, NAME, 145, Meeting05, NEUTRAL_REACTION);
    giq_option(-3, NAME, 138, Meeting13, BAD_REACTION);
end

procedure Meeting05
begin
    Reply(146);
    if ((global_var(GVAR_NECROPOLIS_INVADED_DATE) < (game_time / (10 * 60 * 60 * 24))) and (global_var(GVAR_NECROPOLIS) == 2)) then begin
        giq_option(4, NAME, 147, Meeting06, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 148, Meeting05a, NEUTRAL_REACTION);
end

procedure Meeting05a
begin
    if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
        call Meeting06();
    end
    else begin
        call Meeting07();
    end
end

procedure Meeting06
begin
    Reply(149);
    giq_option(4, NAME, 150, Meeting08, NEUTRAL_REACTION);
end

procedure Meeting07
begin
    Reply(151);
    giq_option(4, NAME, mstr(152) + mstr(153), Meeting08, NEUTRAL_REACTION);
end

procedure Meeting08
begin
    Reply(154);
    giq_option(4, NAME, 155, Meeting09, NEUTRAL_REACTION);
    if (global_var(GVAR_CATHEDRAL) == 1) then begin
        giq_option(4, NAME, 156, Meeting10, NEUTRAL_REACTION);
    end
end

procedure Meeting09
begin
    awardex := 1;
    set_global_var(GVAR_BROTHERHOOD_INVASION, 2);
    gsay_message(NAME, 157, NEUTRAL_REACTION);
end

procedure Meeting10
begin
    Reply(mstr(158) + mstr(159));
    giq_option(4, NAME, 160, Meeting09, NEUTRAL_REACTION);
    giq_option(4, NAME, 161, Meeting11, NEUTRAL_REACTION);
    giq_option(-3, NAME, 138, Meeting13, BAD_REACTION);
end

procedure Meeting11
begin
    set_global_var(GVAR_BROTHERHOOD_INVASION, 1);
    gsay_message(NAME, 162, NEUTRAL_REACTION);
end

procedure Meeting12
begin
    set_global_var(GVAR_BROTHERHOOD_INVASION, 2);
end

procedure Meeting13
begin
    gsay_message(NAME, 164, BAD_REACTION);
end

procedure Elder01
begin
    Reply(101);
    giq_option(4, NAME, 102, Elder02, NEUTRAL_REACTION);
    giq_option(4, NAME, 103, Elder08, NEUTRAL_REACTION);
    giq_option(-3, NAME, 104, Elder11, BAD_REACTION);
end

procedure Elder02
begin
    Reply(mstr(105) + mstr(106) + mstr(107));
    giq_option(4, NAME, 108, Elder03, NEUTRAL_REACTION);
    giq_option(4, NAME, 109, Elder09, NEUTRAL_REACTION);
    if (global_var(GVAR_THE_VATS) == 2) then begin
        giq_option(4, NAME, 110, Elder07, NEUTRAL_REACTION);
    end
end

procedure Elder03
begin
    Reply(111);
    giq_option(4, NAME, 112, ElderEnd, NEUTRAL_REACTION);
end

procedure Elder04
begin
    Reply(113);
    if (global_var(GVAR_THE_VATS) == 2) then begin
        giq_option(4, NAME, 114, Elder05, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 115, Elder06, NEUTRAL_REACTION);
    end
end

procedure Elder05
begin
    Reply(116);
    giq_option(4, NAME, 117, Elder07, NEUTRAL_REACTION);
end

procedure Elder06
begin
    Reply(118);
    giq_option(4, NAME, 119, ElderEnd, NEUTRAL_REACTION);
end

procedure Elder07
begin
    Reply(120);
    giq_option(4, NAME, 121, ElderEnd, NEUTRAL_REACTION);
end

procedure Elder07a
begin
    set_local_var(1, 1);
end

procedure Elder08
begin
    Reply(122);
    giq_option(4, NAME, 123, Elder02, NEUTRAL_REACTION);
    giq_option(4, NAME, 124, Elder07a, BAD_REACTION);
    giq_option(4, NAME, 125, Elder07a, BAD_REACTION);
end

procedure Elder09
begin
    Reply(126);
    giq_option(4, NAME, 127, ElderEnd, NEUTRAL_REACTION);
end

procedure Elder10
begin
    Reply(128);
    giq_option(4, NAME, 129, ElderEnd, NEUTRAL_REACTION);
    giq_option(-3, NAME, 104, Elder11, BAD_REACTION);
end

procedure Elder11
begin
    gsay_message(NAME, 130, BAD_REACTION);
end

procedure Elder12
begin
    float_msg(self_obj, mstr(random(131, 133)), FLOAT_MSG_RED);
end

procedure ElderEnd
begin
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * dude_charisma) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence)));
        if (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality)) then begin
            if (global_var(GVAR_PLAYER_REPUATION) > 0) then begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
        end
        if (global_var(GVAR_CHILDKILLER_REPUATION) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(SCRIPT_MODREACT, random(100, 105));
end
