procedure start;
procedure combat_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;
procedure razlo00;
procedure razlo00a;
procedure razlo01;
procedure razlo02;
procedure razlo03;
procedure razlo04;
procedure razlo05;
procedure razlo06;
procedure razlo06na;
procedure razlo06nb;
procedure razlo07;
procedure razlo08;
procedure razlo09;
procedure razlo10;
procedure razlo11;
procedure razlo12;
procedure razlo14;
procedure razlo15;
procedure Razlo17;
procedure razlo18;
procedure razlo19;
procedure razlo20;
procedure razlo21;
procedure razlo22;
procedure razlo23;
procedure razlo23a;
procedure razlo24;
procedure razlo25;
procedure razlo26;
procedure razlo27;
procedure razlo27a;
procedure razlo28;
procedure razlo29;
procedure razlo30;
procedure razlo31;
procedure razlo00n;
procedure razlo01n;
procedure razlo02n;
procedure razlo03n;
procedure razlo04n;
procedure razlo05n;
procedure razlo06n;
procedure razlo07n;
procedure razlo08n;
procedure razlo09n;
procedure razlo10n;
procedure razlo11n;
procedure razlo14n;
procedure razlo15n;
procedure razlo16n;
procedure razlowmpa;
procedure razlowmpb;
procedure razlofixa;
procedure razlofixb;
procedure razlofixc;
procedure razlox;
procedure razloend;
procedure givestuff;
procedure remove_items;
procedure critter_p_proc;
procedure look_at_p_proc;
procedure destroy_p_proc;
procedure pickup_p_proc;
procedure sleeping;

variable night_person;
variable wake_time;
variable sleep_time;
variable home_tile;
variable sleep_tile;
variable STIM;
variable FRUIT;
variable damage;
variable HOSTILE;
variable heal;
variable COST;
variable BONUS;
variable NIGHT;
variable round_counter;
variable dummyvar;
variable MONEY;
variable MAX_HITS;
variable HITS;
variable initialized;
variable tail;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure start
begin
    if (script_action == combat_proc) then begin
        call combat_p_proc();
    end
    else begin
        if (script_action == map_update_proc) then begin
            call map_update_p_proc();
        end
        else begin
            if (script_action == talk_proc) then begin
                call talk_p_proc();
            end
            else begin
                if (script_action == pickup_proc) then begin
                    call pickup_p_proc();
                end
                else begin
                    if (script_action == critter_proc) then begin
                        call critter_p_proc();
                    end
                    else begin
                        if (script_action == look_at_proc) then begin
                            call look_at_p_proc();
                        end
                        else begin
                            if (script_action == destroy_proc) then begin
                                call destroy_p_proc();
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure combat_p_proc
begin
    if (fixed_param == 4) then begin
        round_counter := round_counter + 1;
    end
    if (round_counter > 3) then begin
        if (global_var(GVAR_ENEMY_SHADY_SANDS) == 0) then begin
            set_global_var(GVAR_ENEMY_SHADY_SANDS, 1);
            set_global_var(GVAR_PLAYER_REPUATION, global_var(GVAR_PLAYER_REPUATION) - 5);
        end
    end
end

procedure map_update_p_proc
begin
    if (not(initialized)) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 2);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_PEASANT);
        home_tile := 24529;
        sleep_tile := 23133;
        wake_time := 630;
        sleep_time := 2230;
        initialized := 0;
    end
end

procedure talk_p_proc
begin
    MAX_HITS := get_critter_stat(dude_obj, STAT_max_hp);
    HITS := get_critter_stat(dude_obj, STAT_current_hp);
    call get_reaction();
    if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
        set_global_var(GVAR_BERSERKER_REPUTATION, 1);
        set_global_var(GVAR_CHAMPION_REPUTATION, 0);
    end
    if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
        set_global_var(GVAR_CHAMPION_REPUTATION, 1);
        set_global_var(GVAR_BERSERKER_REPUTATION, 0);
    end
    if (local_var(9) == 1) then begin
        float_msg(self_obj, message_str(SCRIPT_GENVAULT, 166), FLOAT_MSG_NORMAL);
    end
    else begin
        if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
            set_local_var(6, 1);
            start_gdialog(129, self_obj, 4, -1, -1);
            gsay_start;
            call razlo00n();
            gsay_end;
            end_dialogue;
        end
        else begin
            if (global_var(GVAR_RADSCORPION_SEED) == 1) then begin
                if ((global_var(GVAR_TANDI_STATUS) == 1) and (local_var(4) == 0) and (global_var(GVAR_TALKED_ABOUT_TANDI) == 1)) then begin
                    set_local_var(4, 1);
                    start_gdialog(129, self_obj, 4, -1, -1);
                    gsay_start;
                    call razlo01();
                    gsay_end;
                    end_dialogue;
                end
                else begin
                    start_gdialog(129, self_obj, 4, -1, -1);
                    gsay_start;
                    call razlo23();
                    gsay_end;
                    end_dialogue;
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(dude_obj, 92)) then begin
                    start_gdialog(129, self_obj, 4, -1, -1);
                    gsay_start;
                    call razlo23();
                    gsay_end;
                    end_dialogue;
                end
                else begin
                    if ((local_var(6) == 0) and (local_var(1) >= 2)) then begin
                        set_local_var(6, 1);
                        start_gdialog(129, self_obj, 4, -1, -1);
                        gsay_start;
                        call razlo10();
                        gsay_end;
                        end_dialogue;
                    end
                    else begin
                        if (local_var(6) == 0) then begin
                            set_local_var(6, 1);
                            start_gdialog(129, self_obj, 4, -1, -1);
                            gsay_start;
                            call razlo18();
                            gsay_end;
                            end_dialogue;
                        end
                        else begin
                            if (global_var(GVAR_TANDI_STATUS) == 3) then begin
                                call razlo09();
                            end
                            else begin
                                if ((global_var(GVAR_TANDI_STATUS) == 2) and (local_var(5) == 0)) then begin
                                    set_local_var(5, 1);
                                    call razlo08();
                                end
                                else begin
                                    if ((global_var(GVAR_TANDI_STATUS) == 1) and (local_var(4) == 0) and (global_var(GVAR_TALKED_ABOUT_TANDI) == 1)) then begin
                                        set_local_var(4, 1);
                                        start_gdialog(129, self_obj, 4, -1, -1);
                                        gsay_start;
                                        call razlo01();
                                        gsay_end;
                                        end_dialogue;
                                    end
                                    else begin
                                        if ((global_var(GVAR_TANDI_STATUS) == 1) and (global_var(GVAR_TALKED_ABOUT_TANDI) == 1) and (local_var(4) == 1)) then begin
                                            set_local_var(4, 2);
                                            call razlo07();
                                        end
                                        else begin
                                            if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1)) or (global_var(GVAR_CHILDKILLER_REPUATION) > 2)) then begin
                                                start_gdialog(129, self_obj, 4, -1, -1);
                                                gsay_start;
                                                call razlo00();
                                                gsay_end;
                                                end_dialogue;
                                                display_mstr(103);
                                            end
                                            else begin
                                                if (local_var(1) >= 2) then begin
                                                    start_gdialog(129, self_obj, 4, -1, -1);
                                                    gsay_start;
                                                    call razlo19();
                                                    gsay_end;
                                                    end_dialogue;
                                                end
                                                else begin
                                                    start_gdialog(129, self_obj, 4, -1, -1);
                                                    gsay_start;
                                                    call razlo21();
                                                    gsay_end;
                                                    end_dialogue;
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    call remove_items();
end

procedure razlo00
begin
    gsay_message(NAME, 101, NEUTRAL_REACTION);
end

procedure razlo00a
begin
    display_mstr(103);
end

procedure razlo01
begin
    Reply(104);
    if ((global_var(GVAR_TANDI_STATUS) == 1) and (global_var(GVAR_TALKED_ABOUT_TANDI) == 1)) then begin
        giq_option(4, NAME, 105, razlo03, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 143, razlo22, NEUTRAL_REACTION);
    giq_option(4, NAME, 144, razlo23a, NEUTRAL_REACTION);
    giq_option(-3, NAME, 106, razlo02, NEUTRAL_REACTION);
end

procedure razlo02
begin
    gsay_message(NAME, 107, NEUTRAL_REACTION);
    set_local_var(4, 1);
end

procedure razlo03
begin
    set_local_var(4, 1);
    Reply(108);
    giq_option(5, NAME, 110, razlo04, NEUTRAL_REACTION);
    giq_option(4, NAME, 109, razloend, NEUTRAL_REACTION);
    giq_option(5, NAME, 111, razloend, NEUTRAL_REACTION);
end

procedure razlo04
begin
    Reply(112);
    giq_option(4, NAME, 113, razlo05, NEUTRAL_REACTION);
    giq_option(4, NAME, 114, razlo06, NEUTRAL_REACTION);
end

procedure razlo05
begin
    gsay_message(NAME, 115, NEUTRAL_REACTION);
end

procedure razlo06
begin
    gsay_message(NAME, 116, NEUTRAL_REACTION);
    call givestuff();
end

procedure razlo06na
begin
    gsay_message(NAME, 306, NEUTRAL_REACTION);
    call razlo06nb();
end

procedure razlo06nb
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    gsay_message(NAME, 307, NEUTRAL_REACTION);
    LVar0 := create_object(49, 0, 0);
    add_obj_to_inven(dude_obj, LVar0);
    LVar1 := obj_carrying_pid_obj(dude_obj, 92);
    rm_obj_from_inven(dude_obj, LVar1);
    destroy_object(LVar1);
    if (local_var(7) == 0) then begin
        set_local_var(7, 1);
        give_exp_points(250);
        display_mstr(300);
    end
    gfade_out(400);
    gfade_in(400);
    game_time_advance(game_ticks(1200 * damage));
    critter_heal(dude_obj, damage);
end

procedure razlo07
begin
    float_msg(self_obj, mstr(117), FLOAT_MSG_RED);
end

procedure razlo08
begin
    float_msg(self_obj, mstr(118), FLOAT_MSG_LIGHT_RED);
end

procedure razlo09
begin
    float_msg(self_obj, mstr(119), FLOAT_MSG_LIGHT_GREY);
end

procedure razlo10
begin
    Reply(120);
    giq_option(4, NAME, 122, razlo14, NEUTRAL_REACTION);
    giq_option(4, NAME, 144, razlo23a, NEUTRAL_REACTION);
    giq_option(4, NAME, 121, razloend, NEUTRAL_REACTION);
    giq_option(-3, NAME, 123, razlo11, NEUTRAL_REACTION);
end

procedure razlo11
begin
    gsay_message(NAME, 124, NEUTRAL_REACTION);
    damage := MAX_HITS - HITS;
    if (damage > (MAX_HITS / 4)) then begin
        call razlo14();
    end
    else begin
        call razlo12();
    end
end

procedure razlo12
begin
    gsay_message(NAME, 125, NEUTRAL_REACTION);
end

procedure razlo14
begin
    gsay_message(NAME, 126, NEUTRAL_REACTION);
    damage := MAX_HITS - HITS;
    if (damage < (MAX_HITS / 4)) then begin
        call razlowmpa();
    end
    else begin
        if (damage < (MAX_HITS / 2)) then begin
            call razlofixa();
        end
        else begin
            if (damage < (3 * MAX_HITS / 4)) then begin
                call razlofixb();
            end
            else begin
                call razlofixc();
            end
        end
    end
end

procedure razlo15
begin
    gsay_message(NAME, 127, NEUTRAL_REACTION);
end

procedure Razlo17
begin
    variable LVar0 := 0;
    if (damage < (MAX_HITS / 2)) then begin
        LVar0 := create_object(218, 0, 0);
        add_obj_to_inven(self_obj, LVar0);
    end
    else begin
        if (damage < (3 * MAX_HITS / 4)) then begin
            LVar0 := create_object(219, 0, 0);
            add_obj_to_inven(self_obj, LVar0);
        end
        else begin
            LVar0 := create_object(220, 0, 0);
            add_obj_to_inven(self_obj, LVar0);
        end
    end
    gdialog_barter;
    gsay_message(NAME, 126, NEUTRAL_REACTION);
    call razlo08n();
end

procedure razlo18
begin
    Reply(128);
    giq_option(4, NAME, 130, razlo14, NEUTRAL_REACTION);
    giq_option(4, NAME, 144, razlo23a, NEUTRAL_REACTION);
    giq_option(5, NAME, 129, razloend, NEUTRAL_REACTION);
end

procedure razlo19
begin
    Reply(131);
    giq_option(4, NAME, 132, razlo20, NEUTRAL_REACTION);
    giq_option(4, NAME, 143, razlo22, NEUTRAL_REACTION);
    giq_option(4, NAME, 144, razlo23a, NEUTRAL_REACTION);
    giq_option(-3, NAME, 134, razlo11, NEUTRAL_REACTION);
end

procedure razlo20
begin
    gsay_message(NAME, 135, NEUTRAL_REACTION);
end

procedure razlo21
begin
    Reply(136);
    giq_option(4, NAME, 138, razlo22, NEUTRAL_REACTION);
    giq_option(4, NAME, 144, razlo23a, NEUTRAL_REACTION);
    giq_option(-3, NAME, 139, razlo11, NEUTRAL_REACTION);
    giq_option(4, NAME, 137, razloend, NEUTRAL_REACTION);
end

procedure razlo22
begin
    gsay_message(NAME, 140, NEUTRAL_REACTION);
    call razlo14();
end

procedure razlo23
begin
    Reply(141);
    giq_option(4, NAME, 143, razlo22, NEUTRAL_REACTION);
    giq_option(4, NAME, 144, razlo23a, NEUTRAL_REACTION);
    giq_option(5, NAME, 145, razlo27, NEUTRAL_REACTION);
    if (obj_is_carrying_obj_pid(dude_obj, 92)) then begin
        giq_option(4, NAME, 146, razlo30, NEUTRAL_REACTION);
        giq_option(-3, NAME, 303, razlo30, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 142, razloend, NEUTRAL_REACTION);
    giq_option(-3, NAME, 147, razlo11, NEUTRAL_REACTION);
end

procedure razlo23a
begin
    if (local_var(8) == 1) then begin
        call razlo25();
    end
    else begin
        call razlo24();
    end
end

procedure razlo24
begin
    gsay_message(NAME, 148, NEUTRAL_REACTION);
end

procedure razlo25
begin
    gsay_message(NAME, 149, NEUTRAL_REACTION);
    if (get_poison(dude_obj) > 0) then begin
        gsay_message(NAME, 150, NEUTRAL_REACTION);
        poison(dude_obj, -get_poison(dude_obj));
        call razlo26();
    end
    else begin
        gsay_message(NAME, 151, NEUTRAL_REACTION);
    end
    poison(dude_obj, -get_poison(dude_obj));
end

procedure razlo26
begin
    gsay_message(NAME, 152, NEUTRAL_REACTION);
end

procedure razlo27
begin
    gsay_message(NAME, 153, NEUTRAL_REACTION);
    Reply(154);
    giq_option(5, NAME, 156, razlo29, NEUTRAL_REACTION);
    giq_option(5, NAME, 157, razlo28, NEUTRAL_REACTION);
    giq_option(4, NAME, 155, razlo27a, GOOD_REACTION);
end

procedure razlo27a
begin
    call UpReact();
end

procedure razlo28
begin
    Reply(158);
    giq_option(5, NAME, 159, razloend, NEUTRAL_REACTION);
end

procedure razlo29
begin
    gsay_message(NAME, 160, NEUTRAL_REACTION);
end

procedure razlo30
begin
    gsay_message(NAME, 161, NEUTRAL_REACTION);
    gfade_out(400);
    gfade_in(400);
    game_time_advance(game_ticks(14400));
    set_local_var(8, 1);
    call razlo31();
end

procedure razlo31
begin
    variable LVar0 := 0;
    gsay_message(NAME, 162, NEUTRAL_REACTION);
    LVar0 := create_object(49, 0, 0);
    add_obj_to_inven(dude_obj, LVar0);
    tail := obj_carrying_pid_obj(dude_obj, 92);
    rm_obj_from_inven(dude_obj, tail);
    destroy_object(tail);
    if (local_var(7) == 0) then begin
        set_local_var(7, 1);
        give_exp_points(250);
        display_mstr(300);
    end
end

procedure razlo00n
begin
    Reply(163);
    giq_option(4, NAME, 164, razlo02n, NEUTRAL_REACTION);
    if (global_var(GVAR_RADSCORPION_SEED) == 1) then begin
        giq_option(5, NAME, 165, razlo09n, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_TANDI_STATUS) == 1) and (global_var(GVAR_TALKED_ABOUT_TANDI) == 1)) then begin
        giq_option(5, NAME, 166, razlo15n, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 167, razlo01n, NEUTRAL_REACTION);
end

procedure razlo01n
begin
    gsay_message(NAME, 168, NEUTRAL_REACTION);
    call DownReact();
end

procedure razlo02n
begin
    Reply(169);
    giq_option(4, NAME, 170, razlo04n, NEUTRAL_REACTION);
    giq_option(4, NAME, 171, razlo03n, NEUTRAL_REACTION);
end

procedure razlo03n
begin
    gsay_message(NAME, 172, NEUTRAL_REACTION);
    call DownReact();
end

procedure razlo04n
begin
    Reply(173);
    giq_option(4, NAME, 174, razlo05n, NEUTRAL_REACTION);
end

procedure razlo05n
begin
    damage := MAX_HITS - HITS;
    if (damage < (MAX_HITS / 4)) then begin
        call razlowmpb();
    end
    else begin
        if (damage < (MAX_HITS / 2)) then begin
            call razlofixa();
        end
        else begin
            if (damage < (3 * MAX_HITS / 4)) then begin
                call razlofixb();
            end
            else begin
                call razlofixc();
            end
        end
    end
end

procedure razlo06n
begin
    Reply(186);
    giq_option(4, NAME, 187, Razlo17, NEUTRAL_REACTION);
    if (obj_is_carrying_obj_pid(dude_obj, 92)) then begin
        giq_option(4, NAME, 305, razlo06na, NEUTRAL_REACTION);
        giq_option(-3, NAME, 303, razlo06na, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 188, razloend, NEUTRAL_REACTION);
    giq_option(-3, NAME, 304, Razlo17, NEUTRAL_REACTION);
    giq_option(-3, NAME, 302, razloend, NEUTRAL_REACTION);
end

procedure razlo07n
begin
    gsay_message(NAME, 189, GOOD_REACTION);
end

procedure razlo08n
begin
    if (obj_is_carrying_obj_pid(dude_obj, 218) or obj_is_carrying_obj_pid(dude_obj, 219) or obj_is_carrying_obj_pid(dude_obj, 220)) then begin
        call razlo14n();
    end
    else begin
        if (item_caps_total(dude_obj) >= COST) then begin
            dummyvar := item_caps_adjust(dude_obj, -COST);
            call razlo14n();
        end
        else begin
            call razlo06n();
        end
    end
end

procedure razlo09n
begin
    Reply(190);
    giq_option(6, NAME, 191, razlo10n, NEUTRAL_REACTION);
end

procedure razlo10n
begin
    gsay_message(NAME, 192, NEUTRAL_REACTION);
end

procedure razlo11n
begin
    Reply(108);
    giq_option(5, NAME, 194, razlo04, NEUTRAL_REACTION);
    giq_option(5, NAME, 195, razloend, NEUTRAL_REACTION);
end

procedure razlo14n
begin
    gsay_message(NAME, 196, NEUTRAL_REACTION);
    gfade_out(400);
    gfade_in(400);
    game_time_advance(game_ticks(1200 * damage));
    critter_heal(dude_obj, damage);
end

procedure razlo15n
begin
    if (local_var(11) == 1) then begin
        call razlo16n();
    end
    else begin
        set_local_var(11, 1);
        call razlo11n();
    end
end

procedure razlo16n
begin
    gsay_message(NAME, 197, NEUTRAL_REACTION);
end

procedure razlowmpa
begin
    gsay_message(NAME, 175, NEUTRAL_REACTION);
end

procedure razlowmpb
begin
    gsay_message(NAME, 176, NEUTRAL_REACTION);
end

procedure razlofixa
begin
    COST := 25;
    Reply(177);
    giq_option(4, NAME, 178, razlo08n, NEUTRAL_REACTION);
    giq_option(4, NAME, 179, razlo06n, NEUTRAL_REACTION);
    giq_option(-3, NAME, 301, razlo08n, NEUTRAL_REACTION);
    giq_option(-3, NAME, 302, razloend, NEUTRAL_REACTION);
end

procedure razlofixb
begin
    COST := 50;
    Reply(180);
    giq_option(4, NAME, 181, razlo08n, NEUTRAL_REACTION);
    giq_option(4, NAME, 182, razlo06n, NEUTRAL_REACTION);
    giq_option(-3, NAME, 301, razlo08n, NEUTRAL_REACTION);
    giq_option(-3, NAME, 302, razloend, NEUTRAL_REACTION);
end

procedure razlofixc
begin
    COST := 100;
    Reply(183);
    giq_option(4, NAME, 184, razlo08n, NEUTRAL_REACTION);
    giq_option(4, NAME, 185, razlo06n, NEUTRAL_REACTION);
    giq_option(-3, NAME, 301, razlo08n, NEUTRAL_REACTION);
    giq_option(-3, NAME, 302, razloend, NEUTRAL_REACTION);
end

procedure razlox
begin
end

procedure razloend
begin
end

procedure givestuff
begin
    variable LVar0 := 0;
    LVar0 := create_object(40, 0, 0);
    add_obj_to_inven(dude_obj, LVar0);
    LVar0 := create_object(40, 0, 0);
    add_obj_to_inven(dude_obj, LVar0);
    LVar0 := create_object(71, 0, 0);
    add_obj_to_inven(dude_obj, LVar0);
    if (local_var(8) == 1) then begin
        LVar0 := create_object(49, 0, 0);
        add_obj_to_inven(dude_obj, LVar0);
    end
end

procedure remove_items
begin
    variable LVar0 := 0;
    if (obj_is_carrying_obj_pid(dude_obj, 218)) then begin
        LVar0 := obj_carrying_pid_obj(dude_obj, 218);
        rm_obj_from_inven(dude_obj, LVar0);
        destroy_object(LVar0);
    end
    if (obj_is_carrying_obj_pid(self_obj, 218)) then begin
        LVar0 := obj_carrying_pid_obj(self_obj, 218);
        rm_obj_from_inven(self_obj, LVar0);
        destroy_object(LVar0);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 219)) then begin
        LVar0 := obj_carrying_pid_obj(dude_obj, 219);
        rm_obj_from_inven(dude_obj, LVar0);
        destroy_object(LVar0);
    end
    if (obj_is_carrying_obj_pid(self_obj, 219)) then begin
        LVar0 := obj_carrying_pid_obj(self_obj, 219);
        rm_obj_from_inven(self_obj, LVar0);
        destroy_object(LVar0);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 220)) then begin
        LVar0 := obj_carrying_pid_obj(dude_obj, 220);
        rm_obj_from_inven(dude_obj, LVar0);
        destroy_object(LVar0);
    end
    if (obj_is_carrying_obj_pid(self_obj, 220)) then begin
        LVar0 := obj_carrying_pid_obj(self_obj, 220);
        rm_obj_from_inven(self_obj, LVar0);
        destroy_object(LVar0);
    end
end

procedure critter_p_proc
begin
    if (map_var(2) == 1) then begin
        set_local_var(10, local_var(10) + 1);
        set_map_var(2, 0);
        if (local_var(10) < 3) then begin
            float_msg(self_obj, mstr(308), FLOAT_MSG_RED);
        end
        else begin
            HOSTILE := 1;
        end
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if (global_var(GVAR_ENEMY_SHADY_SANDS) == 1) then begin
            HOSTILE := 1;
        end
    end
    if (HOSTILE) then begin
        HOSTILE := 0;
        attack(dude_obj);
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_ENEMY_SHADY_SANDS, 1);
    end
    if (source_obj == dude_obj) then begin
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if ((global_var(GVAR_GOOD_MONSTER) % 2) == 0) then begin
            set_global_var(GVAR_PLAYER_REPUATION, global_var(GVAR_PLAYER_REPUATION) - 1);
        end
    end
end

procedure pickup_p_proc
begin
    HOSTILE := 1;
end

procedure sleeping
begin
    if (local_var(9) == 1) then begin
        if (not(night_person) and (game_time_hour >= wake_time) and (game_time_hour < sleep_time) or (night_person and ((game_time_hour >= wake_time) or (game_time_hour < sleep_time)))) then begin
            if (((game_time_hour - wake_time) < 10) and ((game_time_hour - wake_time) > 0)) then begin
                if (tile_num(self_obj) != home_tile) then begin
                    animate_move_obj_to_tile(self_obj, home_tile, 0);
                end
                else begin
                    set_local_var(9, 0);
                end
            end
            else begin
                move_to(self_obj, home_tile, elevation(self_obj));
                if (tile_num(self_obj) == home_tile) then begin
                    set_local_var(9, 0);
                end
            end
        end
    end
    else begin
        if (night_person and (game_time_hour >= sleep_time) and (game_time_hour < wake_time) or (not(night_person) and ((game_time_hour >= sleep_time) or (game_time_hour < wake_time)))) then begin
            if (((game_time_hour - sleep_time) < 10) and ((game_time_hour - sleep_time) > 0)) then begin
                if (tile_num(self_obj) != sleep_tile) then begin
                    animate_move_obj_to_tile(self_obj, self_obj, 0);
                end
                else begin
                    set_local_var(9, 1);
                end
            end
            else begin
                if (tile_num(self_obj) != sleep_tile) then begin
                    move_to(self_obj, sleep_tile, elevation(self_obj));
                end
                else begin
                    set_local_var(9, 1);
                end
            end
        end
    end
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * dude_charisma) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence)));
        if (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality)) then begin
            if (global_var(GVAR_PLAYER_REPUATION) > 0) then begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
        end
        if (global_var(GVAR_CHILDKILLER_REPUATION) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(SCRIPT_MODREACT, random(100, 105));
end
