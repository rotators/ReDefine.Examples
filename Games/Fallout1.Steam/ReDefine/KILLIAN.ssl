/*******************************************************
*      Some unreferenced imported varables found.      *
*      Because of it it is impossible to specify       *
*      the real names of global variables.             *
*******************************************************/

variable GVar0;
variable GVar1;
variable GVar2;
variable GVar3;
variable GVar4;
variable GVar5;
variable GVar6;
variable GVar7;
variable GVar8;
variable GVar9;
variable GVar10;
variable GVar11;
variable GVar12;
variable GVar13;
variable GVar14;
variable GVar15;
variable GVar16;

procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure map_enter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure KillianEnd;
procedure KillianCbt;
procedure Killian0a;
procedure Killian01;
procedure Killian02;
procedure Killian03;
procedure Killian03a;
procedure Killian04;
procedure Killian05;
procedure Killian06;
procedure Killian08;
procedure Killian09;
procedure Killian09a;
procedure Killian10;
procedure Killian11;
procedure Killian11a;
procedure Killian12;
procedure Killian13;
procedure Killian13a;
procedure Killian13b;
procedure Killian14;
procedure Killian15;
procedure Killian16;
procedure Killian21;
procedure Killian22;
procedure Killian23;
procedure Killian24;
procedure Killian26;
procedure Killian27;
procedure Killian28;
procedure Killian29;
procedure Killian30;
procedure Killian31;
procedure Killian32;
procedure Killian34;
procedure Killian35;
procedure Killian36;
procedure Killian37;
procedure Killian38;
procedure Killian39;
procedure Killian40;
procedure Killian41;
procedure Killian42;
procedure Killian43;
procedure Killian44;
procedure Killian45;
procedure Killian45a;
procedure Killian46;
procedure Killian47;
procedure Killian48;
procedure Killian49;
procedure Killian50;
procedure Killian51;
procedure Killian52;
procedure Killian53;
procedure Killian54;
procedure Killian55;
procedure Killian56;
procedure Killian57;
procedure Killian58;
procedure Killian59;
procedure Killian60;
procedure Killian61;
procedure Killian62;
procedure Killian63;
procedure Killian64;
procedure Killian65;
procedure Killian66;
procedure Killian67;
procedure Killian68;
procedure Killian71;
procedure Killian72;
procedure Killian73;
procedure Killian74;
procedure Killian75;
procedure Killian76;
procedure Killian88;
procedure Killian89;
procedure Killian90;
procedure Killianx;
procedure Killianx1;
procedure Killianx2;
procedure Killianx3;
procedure Killianx4;
procedure Killian_barter;
procedure Killian_give_stuff;
procedure Killian_give_shotgun;
procedure Killian_give_armor;
procedure Killian_give_doctor_bag;
procedure Killian_give_stimpaks;
procedure soundcheck;
procedure playback;
procedure Killian02a;
procedure Killian02b;
procedure Killian03aa;
procedure Killian03ba;
procedure Killian03ca;
procedure Killian32a;
procedure Killian63a;
procedure get_stuff_from_safe;
procedure put_stuff_in_safe;

/* ?import? variable rndx; */
/* ?import? variable rndy; */
/* ?import? variable rndz; */
/* ?import? variable WARNED; */
/* ?import? variable WONTPAY; */
/* ?import? variable ILLEGAL; */
/* ?import? variable ILLEGBEFORE; */
/* ?import? variable TRESPASS; */
/* ?import? variable hostile; */
/* ?import? variable item; */
/* ?import? variable go_to_jail; */

procedure sleeping;

/* ?import? variable night_person; */
/* ?import? variable wake_time; */
/* ?import? variable sleep_time; */
/* ?import? variable home_tile; */
/* ?import? variable sleep_tile; */

import variable KillSafe_ptr;
import variable Killian_ptr;

/* ?import? variable assassin_seed; */

import variable Killian_barter_var;
import variable Killian_store1_ptr;
import variable Killian_store2_ptr;
import variable Killian_store3_ptr;
import variable Killian_store4_ptr;

/* ?import? variable removal_ptr; */

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

/* ?import? variable exit_line; */

procedure killian00;
procedure killian69;
procedure killian70;
procedure killian76a;
procedure killian77;
procedure killian78;
procedure killian79;
procedure killian80;
procedure killian81;
procedure killian82;
procedure killian83;
procedure killian84;
procedure killian85;
procedure killian86;
procedure killian87;


procedure start
begin
    if (script_action == critter_proc) then begin
        call critter_p_proc();
    end
    else begin
        if (script_action == destroy_proc) then begin
            call destroy_p_proc();
        end
        else begin
            if (script_action == look_at_proc) then begin
                call look_at_p_proc();
            end
            else begin
                if (script_action == map_enter_proc) then begin
                    call map_enter_p_proc();
                end
                else begin
                    if (script_action == pickup_proc) then begin
                        call pickup_p_proc();
                    end
                    else begin
                        if (script_action == talk_proc) then begin
                            call talk_p_proc();
                        end
                    end
                end
            end
        end
    end
end

procedure critter_p_proc
begin
    if ((game_time_hour >= 1900) or (game_time_hour < 600) and (tile_distance_objs(self_obj, dude_obj) < 12) and obj_can_see_obj(self_obj, dude_obj) and (cur_map_index == 12)) then begin
        GVar5 := 1;
        GVar7 := 1;
        dialogue_system_enter;
    end
    if (map_var(9) == 1) then begin
        if ((cur_map_index == 12) and (local_var(7) == 0) and (tile_distance_objs(self_obj, dude_obj) < 12) and obj_can_see_obj(self_obj, dude_obj)) then begin
            set_map_var(9, 0);
            GVar5 := 1;
            GVar7 := 1;
            dialogue_system_enter;
        end
        else begin
            GVar5 := 0;
            GVar7 := 0;
            set_map_var(9, 0);
        end
    end
    if (GVar8) then begin
        GVar8 := 0;
        attack(dude_obj);
    end
    if (obj_can_see_obj(self_obj, dude_obj) and (tile_distance_objs(self_obj, dude_obj) < 12) and map_var(2) and (cur_map_index == 12)) then begin
        dialogue_system_enter;
    end
    call sleeping();
    if ((game_time_hour > 730) and (game_time_hour < 1900)) then begin
        if (tile_num(self_obj) != GVar14) then begin
            animate_move_obj_to_tile(self_obj, GVar14, 0);
        end
        else begin
            if (obj_get_rot(self_obj) != 2) then begin
                anim(self_obj, 1000, 2);
            end
        end
    end
    if (Killian_barter_var != 0) then begin
        if ((local_var(7) == 0) and (cur_map_index == 12)) then begin
            if (tile_distance_objs(self_obj, dude_obj) < 12) then begin
                dialogue_system_enter;
            end
            else begin
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(dude_tile, random(0, 5), 1), 0);
            end
        end
        else begin
            Killian_barter_var := 0;
        end
    end
end

procedure destroy_p_proc
begin
    variable LVar0 := 0;
    LVar0 := create_object(56, 0, 0);
    add_obj_to_inven(self_obj, LVar0);
    if (source_obj == dude_obj) then begin
        if (global_var(GVAR_ENEMY_JUNKTOWN) == 0) then begin
            set_global_var(GVAR_ENEMY_JUNKTOWN, 1);
            set_global_var(GVAR_PLAYER_REPUATION, global_var(GVAR_PLAYER_REPUATION) - 5);
        end
    end
    set_global_var(GVAR_KILLIAN_DEAD, 1);
    if (source_obj == dude_obj) then begin
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if ((global_var(GVAR_GOOD_MONSTER) % 2) == 0) then begin
            set_global_var(GVAR_PLAYER_REPUATION, global_var(GVAR_PLAYER_REPUATION) - 1);
        end
    end
    if (global_var(GVAR_KILL_KILLIAN) == 1) then begin
        set_global_var(GVAR_KILL_KILLIAN, 2);
    end
    Killian_ptr := 0;
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure map_enter_p_proc
begin
    GVar15 := 27896;
    GVar13 := 1900;
    GVar12 := 700;
    GVar14 := 25683;
    Killian_ptr := self_obj;
    if (cur_map_index == 11) then begin
        if (global_var(GVAR_GIZMO_DEAD) == 1) then begin
            destroy_object(self_obj);
        end
        else begin
            float_msg(self_obj, mstr(271), FLOAT_MSG_GREEN);
        end
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 0);
    end
    else begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 12);
    end
    if (item_caps_total(self_obj) == 0) then begin
        item_caps_adjust(self_obj, random(10, 150));
    end
end

procedure pickup_p_proc
begin
    GVar5 := 1;
    GVar6 := 1;
    GVar7 := 0;
    dialogue_system_enter;
end

procedure talk_p_proc
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    call get_stuff_from_safe();
    if ((local_var(7) == 1) and (GVar7 == 0)) then begin
        float_msg(self_obj, message_str(SCRIPT_GENVAULT, 166), FLOAT_MSG_NORMAL);
    end
    else begin
        if ((global_var(GVAR_GOT_CONFESSION) != 1) and (global_var(GVAR_BUG_PLANTED) != 1) and (global_var(GVAR_GIZMO_DEAD) == 1) and (local_var(9) == 0)) then begin
            call Killian89();
        end
        else begin
            call get_reaction();
            if (Killian_barter_var >= 0) then begin
                if (Killian_barter_var == 1) then begin
                    move_obj_inven_to_obj(Killian_store1_ptr, self_obj);
                end
                else begin
                    if (Killian_barter_var == 2) then begin
                        move_obj_inven_to_obj(Killian_store2_ptr, self_obj);
                    end
                    else begin
                        if (Killian_barter_var == 3) then begin
                            move_obj_inven_to_obj(Killian_store3_ptr, self_obj);
                        end
                        else begin
                            if (Killian_barter_var == 4) then begin
                                move_obj_inven_to_obj(Killian_store4_ptr, self_obj);
                            end
                        end
                    end
                end
            end
            start_gdialog(47, self_obj, 4, 10, 7);
            gsay_start;
            if (GVar5) then begin
                if (GVar6) then begin
                    call Killian30();
                end
                else begin
                    GVar6 := 1;
                    if (GVar7) then begin
                        call Killian31();
                    end
                    else begin
                        call Killian29();
                    end
                end
            end
            else begin
                if (Killian_barter_var == -1) then begin
                    set_local_var(8, local_var(8) + 1);
                    Killian_barter_var := 0;
                    if (local_var(8) == 1) then begin
                        call Killian42();
                    end
                    else begin
                        if (local_var(8) == 2) then begin
                            call Killian43();
                        end
                        else begin
                            if (local_var(8) == 3) then begin
                                call Killian44();
                            end
                            else begin
                                call Killian30();
                            end
                        end
                    end
                end
                else begin
                    if (Killian_barter_var != 0) then begin
                        Reply(115);
                        giq_option(4, NAME, 118, Killian_barter, NEUTRAL_REACTION);
                        giq_option(4, NAME, 121, Killianx, NEUTRAL_REACTION);
                        giq_option(-3, NAME, 122, Killianx, NEUTRAL_REACTION);
                    end
                    else begin
                        if (map_var(2)) then begin
                            call Killian47();
                        end
                        else begin
                            if (local_var(5) == 1) then begin
                                if ((global_var(GVAR_GOT_CONFESSION) == 1) or (global_var(GVAR_BUG_PLANTED) == 1) and (map_var(6) == 0)) then begin
                                    call Killian54();
                                end
                                else begin
                                    if (local_var(1) >= 2) then begin
                                        call Killian24();
                                    end
                                    else begin
                                        call Killian26();
                                    end
                                end
                            end
                            else begin
                                call Killian01();
                            end
                        end
                    end
                end
            end
            gsay_end;
            end_dialogue;
        end
    end
    if ((map_var(5) == 1) and (local_var(7) == 0) and (global_var(GVAR_HIRED_BY_GIZMO) == 0)) then begin
        LVar1 := create_object_sid(16777528, 0, 0, SCRIPT_KENJI);
        GVar9 := create_object(10, 0, 0);
        add_obj_to_inven(LVar1, GVar9);
        critter_add_trait(LVar1, TRAIT_OBJECT, OBJECT_TEAM_NUM, 13);
        critter_add_trait(LVar1, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_BERZERKER);
        critter_attempt_placement(LVar1, 28283, 0);
        set_map_var(5, 2);
    end
    if (map_var(6) == 1) then begin
        set_map_var(6, 2);
        display_mstr(270);
        give_exp_points(500);
    end
    call put_stuff_in_safe();
    if (Killian_barter_var >= 0) then begin
        LVar0 := obj_carrying_pid_obj(self_obj, 18);
        rm_obj_from_inven(self_obj, LVar0);
        if (Killian_barter_var == 1) then begin
            move_obj_inven_to_obj(self_obj, Killian_store1_ptr);
        end
        else begin
            if (Killian_barter_var == 2) then begin
                move_obj_inven_to_obj(self_obj, Killian_store2_ptr);
            end
            else begin
                if (Killian_barter_var == 3) then begin
                    move_obj_inven_to_obj(self_obj, Killian_store3_ptr);
                end
                else begin
                    move_obj_inven_to_obj(self_obj, Killian_store4_ptr);
                end
            end
        end
        Killian_barter_var := 0;
        add_obj_to_inven(self_obj, LVar0);
    end
    if (GVar10) then begin
        set_global_var(GVAR_PLAYER_REPUATION, global_var(GVAR_PLAYER_REPUATION) - 1);
        GVar10 := 0;
        load_map(10, 6);
    end
end

procedure KillianEnd
begin
end

procedure KillianCbt
begin
    GVar8 := 1;
end

procedure Killian0a
begin
    Reply(109);
    giq_option(1, NAME, 110, Killianx, NEUTRAL_REACTION);
    giq_option(1, NAME, 111, Killianx, NEUTRAL_REACTION);
end

procedure Killian01
begin
    set_local_var(5, 1);
    if ((map_var(5) == 0) and (global_var(GVAR_GIZMO_DEAD) == 0) and (map_var(6) == 0) and (global_var(GVAR_HIRED_BY_KILLIAN) == 0)) then begin
        set_map_var(5, 1);
    end
    if (local_var(1) == 3) then begin
        if (dude_gender == 0) then begin
            Reply(112);
        end
        else begin
            Reply(113);
        end
    end
    else begin
        if (local_var(1) == 1) then begin
            Reply(114);
        end
        else begin
            Reply(115);
        end
    end
    call killian00();
end

procedure Killian02
begin
    set_local_var(4, 1);
    Reply(123);
    giq_option(4, NAME, mstr(124) + proto_data(obj_pid(dude_obj), 1) + mstr(125), Killian02b, NEUTRAL_REACTION);
    giq_option(4, NAME, mstr(126) + proto_data(obj_pid(dude_obj), 1) + mstr(127), Killian03, NEUTRAL_REACTION);
    giq_option(5, NAME, 128, Killian02a, BAD_REACTION);
end

procedure Killian03
begin
    Reply(129);
    giq_option(4, NAME, 130, Killian05, BAD_REACTION);
    giq_option(6, NAME, 131, Killian03aa, NEUTRAL_REACTION);
    giq_option(5, NAME, 132, Killian03ba, NEUTRAL_REACTION);
    giq_option(5, NAME, 133, Killian03ca, BAD_REACTION);
end

procedure Killian03a
begin
    gsay_message(NAME, 134, NEUTRAL_REACTION);
    call Killian08();
end

procedure Killian04
begin
    gsay_message(NAME, 135, NEUTRAL_REACTION);
    call killian00();
end

procedure Killian05
begin
    Reply(136);
    giq_option(4, NAME, 137, Killian06, GOOD_REACTION);
    giq_option(5, NAME, 138, Killian04, GOOD_REACTION);
end

procedure Killian06
begin
    Reply(139);
    call killian00();
end

procedure Killian08
begin
    Reply(140);
    giq_option(5, NAME, 141, Killian09, NEUTRAL_REACTION);
    giq_option(4, NAME, 142, killian00, NEUTRAL_REACTION);
end

procedure Killian09
begin
    if (not(global_var(GVAR_THE_HUB))) then begin
        set_global_var(GVAR_THE_HUB, 1);
    end
    if (not(global_var(GVAR_NECROPOLIS))) then begin
        set_global_var(GVAR_NECROPOLIS, 1);
    end
    Reply(143);
    giq_option(5, NAME, 144, Killian10, NEUTRAL_REACTION);
    giq_option(5, NAME, 145, Killian09a, BAD_REACTION);
    giq_option(4, NAME, 146, Killianx, NEUTRAL_REACTION);
end

procedure Killian09a
begin
    call DownReactLevel();
    call Killian04();
end

procedure Killian10
begin
    if (local_var(1) >= 2) then begin
        Reply(147);
    end
    else begin
        Reply(148);
    end
    call killian00();
end

procedure Killian11
begin
    Reply(149);
    giq_option(4, NAME, 150, Killian12, NEUTRAL_REACTION);
    giq_option(5, NAME, 151, Killian13, NEUTRAL_REACTION);
    giq_option(6, NAME, 152, Killian08, NEUTRAL_REACTION);
    giq_option(4, NAME, 153, Killian11a, NEUTRAL_REACTION);
end

procedure Killian11a
begin
    Reply(" ");
    call killian00();
end

procedure Killian12
begin
    Reply(154);
    call killian00();
end

procedure Killian13
begin
    Reply(155);
    giq_option(4, NAME, 156, Killian13b, NEUTRAL_REACTION);
    giq_option(6, NAME, 157, Killian13a, BAD_REACTION);
end

procedure Killian13a
begin
    call DownReactLevel();
    call Killian14();
end

procedure Killian13b
begin
    gsay_reply(0, 0);
    call killian00();
end

procedure Killian14
begin
    Reply(158);
    giq_option(4, NAME, 159, Killian15, NEUTRAL_REACTION);
    giq_option(6, NAME, 160, Killian16, BAD_REACTION);
end

procedure Killian15
begin
    Reply(161);
    call killian00();
end

procedure Killian16
begin
    gsay_message(NAME, 162, BAD_REACTION);
end

procedure Killian21
begin
    Reply(163);
    giq_option(4, SCRIPT_MODREACT, 106, Killian_barter, NEUTRAL_REACTION);
end

procedure Killian22
begin
    gsay_message(NAME, 164, NEUTRAL_REACTION);
end

procedure Killian23
begin
    gsay_message(NAME, 165, NEUTRAL_REACTION);
end

procedure Killian24
begin
    Reply(166);
    call killian00();
end

procedure Killian26
begin
    Reply(167);
    call killian00();
end

procedure Killian27
begin
    gsay_message(NAME, 168, NEUTRAL_REACTION);
end

procedure Killian28
begin
    Reply(169);
    call Killianx1();
end

procedure Killian29
begin
    gsay_message(NAME, 170, NEUTRAL_REACTION);
end

procedure Killian30
begin
    GVar5 := 0;
    GVar6 := 0;
    Reply(171);
    call Killianx1();
end

procedure Killian31
begin
    GVar7 := 0;
    Reply(172);
    giq_option(4, NAME, 173, Killian34, NEUTRAL_REACTION);
    giq_option(5, NAME, 174, Killian32, NEUTRAL_REACTION);
    giq_option(4, NAME, 175, Killian35, NEUTRAL_REACTION);
end

procedure Killian32
begin
    Reply(176);
    giq_option(4, NAME, 177, Killian32a, BAD_REACTION);
    giq_option(5, NAME, 178, KillianCbt, BAD_REACTION);
end

procedure Killian34
begin
    Reply(179);
    giq_option(4, NAME, 180, Killianx2, NEUTRAL_REACTION);
    giq_option(5, NAME, 181, KillianCbt, BAD_REACTION);
end

procedure Killian35
begin
    Reply(182);
    call Killianx1();
end

procedure Killian36
begin
    gsay_message(NAME, 185, NEUTRAL_REACTION);
end

procedure Killian37
begin
    gsay_message(NAME, 186, NEUTRAL_REACTION);
end

procedure Killian38
begin
    gsay_message(NAME, 187, NEUTRAL_REACTION);
end

procedure Killian39
begin
    gsay_message(NAME, 188, NEUTRAL_REACTION);
end

procedure Killian40
begin
    gsay_message(NAME, 189, NEUTRAL_REACTION);
end

procedure Killian41
begin
    gsay_message(NAME, 190, NEUTRAL_REACTION);
end

procedure Killian42
begin
    gsay_message(NAME, 191, NEUTRAL_REACTION);
    call Killianx();
end

procedure Killian43
begin
    gsay_message(NAME, 192, NEUTRAL_REACTION);
    call Killianx();
end

procedure Killian44
begin
    Reply(193);
    call Killianx1();
end

procedure Killian45
begin
    Reply(194);
    giq_option(4, NAME, 195, Killian45a, NEUTRAL_REACTION);
    giq_option(4, NAME, 196, Killian46, NEUTRAL_REACTION);
end

procedure Killian45a
begin
    Reply(" ");
    call killian00();
end

procedure Killian46
begin
    gsay_message(NAME, 197, NEUTRAL_REACTION);
    call Killianx();
end

procedure Killian47
begin
    set_map_var(2, 0);
    Reply(198);
    giq_option(4, NAME, 199, Killian48, NEUTRAL_REACTION);
    giq_option(4, NAME, 200, Killian50, NEUTRAL_REACTION);
    giq_option(4, NAME, 201, Killian90, GOOD_REACTION);
    giq_option(-3, NAME, 110, Killian90, GOOD_REACTION);
    giq_option(-3, NAME, 111, Killian52, NEUTRAL_REACTION);
end

procedure Killian48
begin
    Reply(202);
    giq_option(4, NAME, 203, Killian49, NEUTRAL_REACTION);
    giq_option(4, NAME, 204, Killian51, NEUTRAL_REACTION);
    giq_option(6, NAME, 205, Killian52, NEUTRAL_REACTION);
end

procedure Killian49
begin
    Reply(206);
    giq_option(4, NAME, 207, Killian50, NEUTRAL_REACTION);
    giq_option(5, NAME, 208, Killian51, NEUTRAL_REACTION);
    giq_option(4, NAME, 209, Killian52, NEUTRAL_REACTION);
end

procedure Killian50
begin
    Reply(210);
    giq_option(4, NAME, 211, Killian53, NEUTRAL_REACTION);
    giq_option(4, NAME, 212, Killian52, NEUTRAL_REACTION);
    giq_option(5, NAME, 213, Killian51, NEUTRAL_REACTION);
end

procedure Killian51
begin
    Reply(214);
    giq_option(4, NAME, 215, Killian53, NEUTRAL_REACTION);
    giq_option(4, NAME, 216, Killian52, BAD_REACTION);
end

procedure Killian52
begin
    set_global_var(GVAR_CAPTURE_GIZMO, 2);
    set_map_var(6, 2);
    gsay_message(NAME, 217, BAD_REACTION);
    set_global_var(GVAR_CURE_JARVIS_9, 1);
    call Killianx1();
end

procedure Killian53
begin
    gsay_message(NAME, 218, NEUTRAL_REACTION);
    call Killianx4();
end

procedure Killian54
begin
    Reply(219);
    giq_option(4, NAME, 220, Killian55, NEUTRAL_REACTION);
    giq_option(-3, NAME, 111, Killian55, NEUTRAL_REACTION);
    if ((global_var(GVAR_BUG_PLANTED) == 1) or (global_var(GVAR_GOT_CONFESSION) == 1)) then begin
        giq_option(4, NAME, 221, Killian56, GOOD_REACTION);
        giq_option(-3, NAME, 110, Killian56, GOOD_REACTION);
    end
end

procedure Killian55
begin
    gsay_message(NAME, 222, NEUTRAL_REACTION);
    call Killianx();
end

procedure Killian56
begin
    Reply(223);
    if (global_var(GVAR_BUG_PLANTED)) then begin
        giq_option(4, NAME, 224, Killian57, NEUTRAL_REACTION);
        giq_option(-3, NAME, 108, Killian57, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_GOT_CONFESSION)) then begin
        giq_option(4, NAME, 225, Killian58, NEUTRAL_REACTION);
    end
end

procedure Killian57
begin
    gsay_message(NAME, 226, GOOD_REACTION);
    call soundcheck();
end

procedure Killian58
begin
    Reply(228);
    giq_option(0, SCRIPT_MODREACT, 106, playback, GOOD_REACTION);
end

procedure Killian59
begin
    if (map_var(6) == 0) then begin
        set_map_var(6, 1);
    end
    Reply(230);
    giq_option(4, NAME, 231, Killian60, NEUTRAL_REACTION);
    giq_option(4, NAME, 232, Killian61, NEUTRAL_REACTION);
    giq_option(5, NAME, 233, Killian64, NEUTRAL_REACTION);
    giq_option(-3, NAME, 110, Killian60, NEUTRAL_REACTION);
    giq_option(-3, NAME, 111, Killian64, NEUTRAL_REACTION);
end

procedure Killian60
begin
    set_local_var(1, 3);
    call LevelToReact();
    set_global_var(GVAR_CAPTURE_GIZMO, 1);
    gsay_message(NAME, 234, GOOD_REACTION);
    call Killianx();
end

procedure Killian61
begin
    Reply(235);
    giq_option(4, NAME, 236, Killian62, NEUTRAL_REACTION);
    giq_option(4, NAME, 237, Killian63, NEUTRAL_REACTION);
end

procedure Killian62
begin
    set_global_var(GVAR_CAPTURE_GIZMO, 1);
    gsay_message(NAME, 238, NEUTRAL_REACTION);
    call Killianx();
end

procedure Killian63
begin
    Reply(239);
    giq_option(4, NAME, 240, Killian62, NEUTRAL_REACTION);
    giq_option(4, NAME, 241, Killian63a, BAD_REACTION);
end

procedure Killian64
begin
    gsay_message(NAME, 242, NEUTRAL_REACTION);
    call Killianx();
end

procedure Killian65
begin
    gsay_message(NAME, 243, NEUTRAL_REACTION);
end

procedure Killian66
begin
    gsay_message(NAME, 244, NEUTRAL_REACTION);
end

procedure Killian67
begin
    gsay_message(NAME, 245, NEUTRAL_REACTION);
end

procedure Killian68
begin
    gsay_message(NAME, 246, NEUTRAL_REACTION);
end

procedure Killian71
begin
    gsay_message(NAME, 249, NEUTRAL_REACTION);
end

procedure Killian72
begin
    gsay_message(NAME, 250, NEUTRAL_REACTION);
end

procedure Killian73
begin
    gsay_message(NAME, 251, NEUTRAL_REACTION);
end

procedure Killian74
begin
    gsay_message(NAME, 252, NEUTRAL_REACTION);
end

procedure Killian75
begin
    gsay_message(NAME, 253, NEUTRAL_REACTION);
end

procedure Killian76
begin
    gsay_message(NAME, 254, NEUTRAL_REACTION);
end

procedure Killian88
begin
    Reply(243);
    giq_option(4, NAME, 273, Killianx, NEUTRAL_REACTION);
    giq_option(4, NAME, 274, KillianCbt, BAD_REACTION);
    giq_option(4, NAME, 275, Killian48, GOOD_REACTION);
end

procedure Killian89
begin
    set_local_var(9, 1);
    set_map_var(2, 0);
    float_msg(self_obj, mstr(284), FLOAT_MSG_NORMAL);
end

procedure Killian90
begin
    Reply(165);
    giq_option(4, SCRIPT_MODREACT, 106, Killian53, GOOD_REACTION);
end

procedure Killianx
begin
end

procedure Killianx1
begin
    giq_option(4, NAME, 183, Killianx3, NEUTRAL_REACTION);
    giq_option(4, NAME, 184, KillianCbt, BAD_REACTION);
    giq_option(-3, NAME, 108, KillianCbt, BAD_REACTION);
end

procedure Killianx2
begin
end

procedure Killianx3
begin
    GVar10 := 1;
end

procedure Killianx4
begin
    GVar9 := create_object(57, 0, 0);
    add_obj_to_inven(dude_obj, GVar9);
    if (dude_iq > 3) then begin
        GVar9 := create_object(104, 0, 0);
        add_obj_to_inven(dude_obj, GVar9);
    end
    set_global_var(GVAR_HIRED_BY_KILLIAN, 1);
end

procedure Killian_barter
begin
    gdialog_barter;
    Reply(" ");
    giq_option(0, SCRIPT_MODREACT, 108, Killianx, NEUTRAL_REACTION);
end

procedure Killian_give_stuff
begin
    if (obj_is_carrying_obj_pid(dude_obj, 104)) then begin
        destroy_object(obj_carrying_pid_obj(dude_obj, 104));
    end
    if (obj_is_carrying_obj_pid(dude_obj, 57)) then begin
        destroy_object(obj_carrying_pid_obj(dude_obj, 57));
    end
    giq_option(4, NAME, 276, Killian_give_shotgun, GOOD_REACTION);
    giq_option(4, NAME, 277, Killian_give_armor, GOOD_REACTION);
    giq_option(4, NAME, 278, Killian_give_doctor_bag, GOOD_REACTION);
    giq_option(4, NAME, 279, Killian_give_stimpaks, GOOD_REACTION);
    giq_option(4, NAME, 280, Killian59, GOOD_REACTION);
    giq_option(-3, NAME, 111, Killian59, GOOD_REACTION);
end

procedure Killian_give_shotgun
begin
    GVar9 := create_object(94, 0, 0);
    add_obj_to_inven(dude_obj, GVar9);
    GVar9 := create_object(95, 0, 0);
    add_mult_objs_to_inven(dude_obj, GVar9, 5);
    call Killian59();
end

procedure Killian_give_armor
begin
    GVar9 := create_object(1, 0, 0);
    add_obj_to_inven(dude_obj, GVar9);
    call Killian59();
end

procedure Killian_give_doctor_bag
begin
    GVar9 := create_object(91, 0, 0);
    add_obj_to_inven(dude_obj, GVar9);
    call Killian59();
end

procedure Killian_give_stimpaks
begin
    GVar9 := create_object(40, 0, 0);
    add_mult_objs_to_inven(dude_obj, GVar9, 5);
    call Killian59();
end

procedure soundcheck
begin
    Reply(227);
    call Killian_give_stuff();
end

procedure playback
begin
    Reply(229);
    call Killian_give_stuff();
end

procedure Killian02a
begin
    call DownReactLevel();
    call Killian16();
end

procedure Killian02b
begin
    gsay_reply(0, 0);
    call killian00();
end

procedure Killian03aa
begin
    call DownReactLevel();
    call Killian04();
end

procedure Killian03ba
begin
    call DownReactLevel();
    call Killian03a();
end

procedure Killian03ca
begin
    call DownReactLevel();
    call Killian16();
end

procedure Killian32a
begin
    call DownReactLevel();
    call Killianx2();
end

procedure Killian63a
begin
    call DownReactLevel();
    call Killian64();
end

procedure get_stuff_from_safe
begin
    variable LVar0 := 0;
    if (item_caps_total(KillSafe_ptr) != 0) then begin
        item_caps_adjust(self_obj, item_caps_total(KillSafe_ptr));
        item_caps_adjust(KillSafe_ptr, -item_caps_total(KillSafe_ptr));
    end
    if (obj_is_carrying_obj_pid(KillSafe_ptr, 18) != 0) then begin
        GVar9 := obj_carrying_pid_obj(KillSafe_ptr, 18);
        rm_obj_from_inven(KillSafe_ptr, GVar9);
        add_obj_to_inven(self_obj, GVar9);
    end
    if (obj_is_carrying_obj_pid(KillSafe_ptr, 40) != 0) then begin
        GVar9 := obj_carrying_pid_obj(KillSafe_ptr, 40);
        rm_obj_from_inven(KillSafe_ptr, GVar9);
        add_obj_to_inven(self_obj, GVar9);
    end
    if (obj_is_carrying_obj_pid(KillSafe_ptr, 31) != 0) then begin
        GVar9 := obj_carrying_pid_obj(KillSafe_ptr, 31);
        rm_obj_from_inven(KillSafe_ptr, GVar9);
        add_obj_to_inven(self_obj, GVar9);
    end
    if (obj_is_carrying_obj_pid(KillSafe_ptr, 34) != 0) then begin
        GVar9 := obj_carrying_pid_obj(KillSafe_ptr, 34);
        rm_obj_from_inven(KillSafe_ptr, GVar9);
        add_obj_to_inven(self_obj, GVar9);
    end
    if (obj_is_carrying_obj_pid(KillSafe_ptr, 30) != 0) then begin
        GVar9 := obj_carrying_pid_obj(KillSafe_ptr, 30);
        rm_obj_from_inven(KillSafe_ptr, GVar9);
        add_obj_to_inven(self_obj, GVar9);
    end
    if (obj_is_carrying_obj_pid(KillSafe_ptr, 4) != 0) then begin
        GVar9 := obj_carrying_pid_obj(KillSafe_ptr, 4);
        rm_obj_from_inven(KillSafe_ptr, GVar9);
        add_obj_to_inven(self_obj, GVar9);
    end
end

procedure put_stuff_in_safe
begin
    variable LVar0 := 0;
    if (item_caps_total(self_obj) != 0) then begin
        item_caps_adjust(KillSafe_ptr, item_caps_total(self_obj));
        item_caps_adjust(self_obj, -item_caps_total(self_obj));
    end
    if (obj_is_carrying_obj_pid(self_obj, 18) > 1) then begin
        GVar9 := obj_carrying_pid_obj(self_obj, 18);
        rm_obj_from_inven(self_obj, GVar9);
        add_obj_to_inven(KillSafe_ptr, GVar9);
    end
    if (obj_is_carrying_obj_pid(self_obj, 40) > 1) then begin
        GVar9 := obj_carrying_pid_obj(self_obj, 40);
        rm_obj_from_inven(self_obj, GVar9);
        add_obj_to_inven(KillSafe_ptr, GVar9);
    end
    if (obj_is_carrying_obj_pid(self_obj, 31) > 1) then begin
        GVar9 := obj_carrying_pid_obj(self_obj, 31);
        rm_obj_from_inven(self_obj, GVar9);
        add_obj_to_inven(KillSafe_ptr, GVar9);
    end
    if (obj_is_carrying_obj_pid(self_obj, 34) > 1) then begin
        GVar9 := obj_carrying_pid_obj(self_obj, 34);
        rm_obj_from_inven(self_obj, GVar9);
        add_obj_to_inven(KillSafe_ptr, GVar9);
    end
    if (obj_is_carrying_obj_pid(self_obj, 30) > 1) then begin
        GVar9 := obj_carrying_pid_obj(self_obj, 30);
        rm_obj_from_inven(self_obj, GVar9);
        add_obj_to_inven(KillSafe_ptr, GVar9);
    end
    if (obj_is_carrying_obj_pid(self_obj, 4) > 1) then begin
        GVar9 := obj_carrying_pid_obj(self_obj, 4);
        rm_obj_from_inven(self_obj, GVar9);
        add_obj_to_inven(KillSafe_ptr, GVar9);
    end
end

procedure sleeping
begin
    if (local_var(7) == 1) then begin
        if (not(GVar11) and (game_time_hour >= GVar12) and (game_time_hour < GVar13) or (GVar11 and ((game_time_hour >= GVar12) or (game_time_hour < GVar13)))) then begin
            if (((game_time_hour - GVar12) < 10) and ((game_time_hour - GVar12) > 0)) then begin
                if (tile_num(self_obj) != GVar14) then begin
                    animate_move_obj_to_tile(self_obj, GVar14, 0);
                end
                else begin
                    set_local_var(7, 0);
                end
            end
            else begin
                move_to(self_obj, GVar14, elevation(self_obj));
                if (tile_num(self_obj) == GVar14) then begin
                    set_local_var(7, 0);
                end
            end
        end
    end
    else begin
        if (GVar11 and (game_time_hour >= GVar13) and (game_time_hour < GVar12) or (not(GVar11) and ((game_time_hour >= GVar13) or (game_time_hour < GVar12)))) then begin
            if (((game_time_hour - GVar13) < 10) and ((game_time_hour - GVar13) > 0)) then begin
                if (tile_num(self_obj) != GVar15) then begin
                    animate_move_obj_to_tile(self_obj, self_obj, 0);
                end
                else begin
                    set_local_var(7, 1);
                end
            end
            else begin
                if (tile_num(self_obj) != GVar15) then begin
                    move_to(self_obj, GVar15, elevation(self_obj));
                end
                else begin
                    set_local_var(7, 1);
                end
            end
        end
    end
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * dude_charisma) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence)));
        if (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality)) then begin
            if (global_var(GVAR_PLAYER_REPUATION) > 0) then begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
        end
        if (global_var(GVAR_CHILDKILLER_REPUATION) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    GVar16 := message_str(SCRIPT_MODREACT, random(100, 105));
end

procedure killian00
begin
    if (local_var(4) == 0) then begin
        giq_option(4, NAME, 101, Killian02, NEUTRAL_REACTION);
    end
    giq_option(5, NAME, 102, Killian11, NEUTRAL_REACTION);
    giq_option(5, NAME, 103, Killian22, NEUTRAL_REACTION);
    giq_option(4, NAME, 104, Killian21, NEUTRAL_REACTION);
    giq_option(5, NAME, 105, Killian13, NEUTRAL_REACTION);
    if ((global_var(GVAR_HIRED_BY_GIZMO) == 1) and (global_var(GVAR_GIZMO_DEAD) == 0) and (global_var(GVAR_HIRED_BY_KILLIAN) == 0)) then begin
        giq_option(4, NAME, 272, Killian88, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_HIRED_BY_KILLIAN) == 1) and (global_var(GVAR_GIZMO_DEAD) == 0) and (map_var(6) == 0)) then begin
        giq_option(5, NAME, 106, Killian23, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 107, Killianx, NEUTRAL_REACTION);
    giq_option(-3, NAME, 108, Killian0a, NEUTRAL_REACTION);
end

procedure killian69
begin
    gsay_message(NAME, 247, NEUTRAL_REACTION);
end

procedure killian70
begin
    gsay_message(NAME, 248, NEUTRAL_REACTION);
end

procedure killian76a
begin
    gsay_message(NAME, 255, NEUTRAL_REACTION);
end

procedure killian77
begin
    gsay_message(NAME, 256, NEUTRAL_REACTION);
end

procedure killian78
begin
    gsay_message(NAME, 257, NEUTRAL_REACTION);
end

procedure killian79
begin
    gsay_message(NAME, 258, NEUTRAL_REACTION);
end

procedure killian80
begin
    gsay_message(NAME, 259, NEUTRAL_REACTION);
end

procedure killian81
begin
    gsay_message(NAME, 260, NEUTRAL_REACTION);
end

procedure killian82
begin
    gsay_message(NAME, 261, NEUTRAL_REACTION);
end

procedure killian83
begin
    gsay_message(NAME, 262, NEUTRAL_REACTION);
end

procedure killian84
begin
    gsay_message(NAME, 263, NEUTRAL_REACTION);
end

procedure killian85
begin
    gsay_message(NAME, 264, NEUTRAL_REACTION);
end

procedure killian86
begin
    gsay_message(NAME, 265, NEUTRAL_REACTION);
end

procedure killian87
begin
    gsay_message(NAME, 266, NEUTRAL_REACTION);
end
