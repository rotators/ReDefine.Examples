procedure start;
procedure do_dialogue;
procedure sys_dialog;
procedure guard00;
procedure guard01;
procedure guard02;
procedure guard03;
procedure guard04;
procedure guard05;
procedure guard06;
procedure guard07;
procedure guard07a;
procedure guard07b;
procedure guard08;
procedure guard09;
procedure guard10;
procedure guard11;
procedure guard12;
procedure guard13;
procedure guard14;
procedure guard15;
procedure guardend;
procedure combat;
procedure weapon_check;
procedure Critter_Action;
procedure damage_p_proc;

import variable killing_women;

variable hostile;
variable initialized;
variable Weapons;
variable rndq;
variable rndr;
variable rndx;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;

procedure first;
procedure notfirst;


procedure start
begin
    if (not(initialized)) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 6);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_RAIDER_GUARD);
        initialized := 1;
    end
    if (script_action == timed_event_proc) then begin
        if (fixed_param == 1) then begin
            if ((obj_item_subtype(critter_inven_obj(dude_obj, 1)) == 3) or (obj_item_subtype(critter_inven_obj(dude_obj, 2)) == 3)) then begin
                call combat();
            end
        end
        else begin
            if (fixed_param == 2) then begin
                if (tile_distance_objs(self_obj, dude_obj) < 6) then begin
                    call combat();
                end
            end
            else begin
                if (fixed_param == 3) then begin
                    if (tile_distance_objs(self_obj, dude_obj) < 8) then begin
                        call combat();
                    end
                end
            end
        end
    end
    else begin
        if (script_action == talk_proc) then begin
            if (local_var(5) == 1) then begin
                display_mstr(100);
            end
            else begin
                call do_dialogue();
            end
        end
        else begin
            if (script_action == pickup_proc) then begin
                hostile := 1;
            end
            else begin
                if (script_action == critter_proc) then begin
                    call Critter_Action();
                    if (hostile) then begin
                        hostile := 0;
                        attack(dude_obj);
                    end
                    else begin
                        if (obj_can_see_obj(self_obj, dude_obj) and (global_var(GVAR_GARLS_FRIEND) != 1)) then begin
                            if ((obj_item_subtype(critter_inven_obj(dude_obj, 1)) == 3) or (obj_item_subtype(critter_inven_obj(dude_obj, 2)) == 3) and ((Weapons == 0) and (killing_women == 0))) then begin
                                Weapons := 1;
                                dialogue_system_enter;
                            end
                        end
                    end
                end
                else begin
                    if (script_action == damage_proc) then begin
                        call damage_p_proc();
                    end
                    else begin
                        if (script_action == destroy_proc) then begin
                            if (source_obj == dude_obj) then begin
                                if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
                                    set_global_var(GVAR_BERSERKER_REPUTATION, 1);
                                    set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                                end
                                if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
                                    set_global_var(GVAR_CHAMPION_REPUTATION, 1);
                                    set_global_var(GVAR_BERSERKER_REPUTATION, 0);
                                end
                                set_global_var(GVAR_BAD_MONSTER, global_var(GVAR_BAD_MONSTER) + 1);
                                if ((global_var(GVAR_BAD_MONSTER) % 6) == 0) then begin
                                    set_global_var(GVAR_PLAYER_REPUATION, global_var(GVAR_PLAYER_REPUATION) + 1);
                                end
                            end
                            set_global_var(GVAR_ENEMY_RAIDERS, 1);
                            set_global_var(GVAR_GARLS_FRIEND, 0);
                            set_global_var(GVAR_TOTAL_RAIDERS, global_var(GVAR_TOTAL_RAIDERS) - 1);
                        end
                        else begin
                            if (script_action == look_at_proc) then begin
                                script_overrides;
                                display_mstr(101);
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure do_dialogue
begin
    if (global_var(GVAR_MISTAKEN_ID) == 1) then begin
        call guard00();
    end
    else begin
        if ((Weapons == 1) and (killing_women == 0) and (global_var(GVAR_GARLS_FRIEND) != 1)) then begin
            call guard02();
        end
        else begin
            call sys_dialog();
        end
    end
end

procedure sys_dialog
begin
    set_local_var(3, 1);
    call get_reaction();
    start_gdialog(240, self_obj, 4, -1, -1);
    gsay_start;
    if (local_var(4) == 0) then begin
        set_local_var(4, 1);
        call guard04();
    end
    else begin
        call guard15();
    end
    gsay_end;
    end_dialogue;
end

procedure guard00
begin
    float_msg(self_obj, mstr(random(102, 106)), FLOAT_MSG_YELLOW);
end

procedure guard01
begin
    float_msg(self_obj, mstr(random(107, 111)), FLOAT_MSG_YELLOW);
end

procedure guard02
begin
    float_msg(self_obj, mstr(random(112, 115)), FLOAT_MSG_YELLOW);
    add_timer_event(self_obj, game_ticks(9), 1);
end

procedure guard03
begin
    float_msg(self_obj, mstr(random(116, 118)), FLOAT_MSG_YELLOW);
    add_timer_event(self_obj, game_ticks(10), 2);
end

procedure guard04
begin
    Reply(119);
    if ((global_var(GVAR_RESCUE_TANDI) == 1) and (global_var(GVAR_TALKED_ABOUT_TANDI) == 1)) then begin
        giq_option(4, NAME, 120, guard07, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 121, guard06, NEUTRAL_REACTION);
    giq_option(-3, NAME, 122, guard05, NEUTRAL_REACTION);
end

procedure guard05
begin
    gsay_message(NAME, 123, NEUTRAL_REACTION);
end

procedure guard06
begin
    gsay_message(NAME, 124, NEUTRAL_REACTION);
    call DownReact();
end

procedure guard07
begin
    Reply(125);
    giq_option(4, NAME, 126, guard08, NEUTRAL_REACTION);
    giq_option(6, NAME, 127, guard07a, NEUTRAL_REACTION);
    if (is_success(do_check(dude_obj, 1, 0))) then begin
        giq_option(4, NAME, 128, guard07b, NEUTRAL_REACTION);
    end
end

procedure guard07a
begin
    if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
        call guard09();
    end
    else begin
        call guard11();
    end
end

procedure guard07b
begin
    if (is_success(roll_vs_skill(dude_obj, 14, -20))) then begin
        call guard12();
    end
    else begin
        call guard13();
    end
end

procedure guard08
begin
    gsay_message(NAME, 129, NEUTRAL_REACTION);
end

procedure guard09
begin
    Reply(130);
    giq_option(6, NAME, 131, guard10, NEUTRAL_REACTION);
end

procedure guard10
begin
    gsay_message(NAME, 132, NEUTRAL_REACTION);
end

procedure guard11
begin
    gsay_message(NAME, 133, NEUTRAL_REACTION);
end

procedure guard12
begin
    gsay_message(NAME, 134, NEUTRAL_REACTION);
    set_local_var(5, 1);
end

procedure guard13
begin
    gsay_message(NAME, 135, NEUTRAL_REACTION);
    call combat();
end

procedure guard14
begin
    gsay_message(NAME, 136, NEUTRAL_REACTION);
    add_timer_event(self_obj, game_ticks(12), 3);
end

procedure guard15
begin
    gsay_message(NAME, 137, NEUTRAL_REACTION);
end

procedure guardend
begin
end

procedure combat
begin
    if (global_var(GVAR_MISTAKEN_ID) == 1) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 87);
    end
    hostile := 1;
end

procedure weapon_check
begin
    if ((obj_item_subtype(critter_inven_obj(dude_obj, 1)) == 3) or (obj_item_subtype(critter_inven_obj(dude_obj, 2)) == 3)) then begin
        Weapons := 0;
    end
    else begin
        Weapons := 1;
    end
end

procedure Critter_Action
begin
    variable LVar0 := 0;
    if (global_var(GVAR_TANDI_STATUS) == 2) then begin
        set_global_var(GVAR_ENEMY_RAIDERS, 1);
    end
    else begin
        if (global_var(GVAR_MISTAKEN_ID)) then begin
            set_global_var(GVAR_ENEMY_RAIDERS, 0);
            if (tile_distance_objs(self_obj, dude_obj) < 3) then begin
                LVar0 := tile_num_in_direction(tile_num(self_obj), random(0, 5), 3);
                if (tile_distance(tile_num(self_obj), LVar0) > 2) then begin
                    if (random(0, 9) == 0) then begin
                        float_msg(self_obj, message_str(SCRIPT_GENRAIDR, random(102, 106)), FLOAT_MSG_YELLOW);
                    end
                    animate_move_obj_to_tile(self_obj, LVar0, 0);
                end
            end
        end
        else begin
            if (global_var(GVAR_TANDI_ESCAPE)) then begin
                set_global_var(GVAR_ENEMY_RAIDERS, 1);
            end
            if (obj_can_see_obj(self_obj, dude_obj)) then begin
                if (global_var(GVAR_RAID_LOOTING)) then begin
                    set_global_var(GVAR_ENEMY_RAIDERS, 1);
                end
            end
            if (map_var(2) == 1) then begin
                set_global_var(GVAR_ENEMY_RAIDERS, 1);
            end
        end
    end
    if (global_var(GVAR_ENEMY_RAIDERS) and obj_can_see_obj(self_obj, dude_obj)) then begin
        hostile := 1;
    end
    if (tile_distance_objs(self_obj, dude_obj) > 12) then begin
        hostile := 0;
    end
end

procedure damage_p_proc
begin
    if (global_var(GVAR_MISTAKEN_ID) == 0) then begin
        set_global_var(GVAR_ENEMY_RAIDERS, 1);
    end
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * dude_charisma) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence)));
        if (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality)) then begin
            if (global_var(GVAR_PLAYER_REPUATION) > 0) then begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
        end
        if (global_var(GVAR_CHILDKILLER_REPUATION) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(SCRIPT_MODREACT, random(100, 105));
end

procedure first
begin
end

procedure notfirst
begin
end
