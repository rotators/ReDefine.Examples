procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure Jasmine00;
procedure Jasmine01;
procedure Jasmine02;
procedure Jasmine03;
procedure Jasmine04;
procedure Jasmine05;
procedure Jasmine06;
procedure Jasmine07;
procedure Jasmine08;
procedure Jasmine09;
procedure Jasmine10;
procedure Jasmine11;
procedure Jasmine12;
procedure Jasmine13;
procedure Jasmine14;
procedure Jasmine15;
procedure Jasmine16;
procedure Jasmine17;
procedure JasmineEnd;

variable hostile;
variable Only_Once := 1;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure start
begin
    if (Only_Once) then begin
        Only_Once := 0;
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 39);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_HUB_THIEF);
    end
    if (script_action == look_at_proc) then begin
        call look_at_p_proc();
    end
    else begin
        if (script_action == pickup_proc) then begin
            call pickup_p_proc();
        end
        else begin
            if (script_action == talk_proc) then begin
                call talk_p_proc();
            end
            else begin
                if (script_action == critter_proc) then begin
                    call critter_p_proc();
                end
                else begin
                    if (script_action == destroy_proc) then begin
                        call destroy_p_proc();
                    end
                end
            end
        end
    end
end

procedure combat
begin
    hostile := 1;
end

procedure critter_p_proc
begin
    if (hostile) then begin
        hostile := 0;
        attack(dude_obj);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        hostile := 1;
    end
end

procedure talk_p_proc
begin
    call get_reaction();
    if (map_var(1) == 1) then begin
        call Jasmine01();
    end
    else begin
        if (global_var(GVAR_STEAL_NECKLACE) == 0) then begin
            call Jasmine02();
        end
        else begin
            if ((global_var(GVAR_STEAL_NECKLACE) == 1) and (local_var(6) == 0)) then begin
                start_gdialog(592, self_obj, 4, -1, -1);
                gsay_start;
                call Jasmine03();
                gsay_end;
                end_dialogue;
            end
            else begin
                if (global_var(GVAR_STEAL_NECKLACE) == 1) then begin
                    call Jasmine05();
                end
                else begin
                    if ((map_var(3) == 1) and (local_var(5) == 0)) then begin
                        start_gdialog(592, self_obj, 4, -1, -1);
                        gsay_start;
                        call Jasmine06();
                        gsay_end;
                        end_dialogue;
                    end
                    else begin
                        call Jasmine07();
                    end
                end
            end
        end
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if ((global_var(GVAR_GOOD_MONSTER) % 2) == 0) then begin
            set_global_var(GVAR_PLAYER_REPUATION, global_var(GVAR_PLAYER_REPUATION) - 1);
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure Jasmine00
begin
    float_msg(self_obj, mstr(102), FLOAT_MSG_RED);
    call combat();
end

procedure Jasmine01
begin
    float_msg(self_obj, mstr(103), FLOAT_MSG_RED);
end

procedure Jasmine02
begin
    float_msg(self_obj, mstr(104), FLOAT_MSG_RED);
end

procedure Jasmine03
begin
    variable LVar0 := 0;
    LVar0 := create_object(84, 0, 0);
    add_obj_to_inven(dude_obj, LVar0);
    LVar0 := create_object(79, 0, 0);
    add_mult_objs_to_inven(dude_obj, LVar0, 2);
    LVar0 := create_object(106, 0, 0);
    add_obj_to_inven(dude_obj, LVar0);
    set_local_var(6, 1);
    Reply(105);
    giq_option(4, NAME, 106, Jasmine08, NEUTRAL_REACTION);
    giq_option(4, NAME, 107, Jasmine09, NEUTRAL_REACTION);
    giq_option(4, NAME, 109, Jasmine11, NEUTRAL_REACTION);
    giq_option(4, NAME, 110, Jasmine12, NEUTRAL_REACTION);
    giq_option(4, NAME, 111, Jasmine13, NEUTRAL_REACTION);
    giq_option(-3, NAME, 112, Jasmine14, NEUTRAL_REACTION);
end

procedure Jasmine04
begin
    if (dude_gender == 0) then begin
        float_msg(self_obj, mstr(113), FLOAT_MSG_RED);
    end
    else begin
        float_msg(self_obj, mstr(114), FLOAT_MSG_RED);
    end
end

procedure Jasmine05
begin
    float_msg(self_obj, mstr(117), FLOAT_MSG_RED);
end

procedure Jasmine06
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    set_local_var(5, 1);
    LVar0 := item_caps_adjust(dude_obj, 3000);
    LVar1 := create_object(77, 0, 0);
    add_obj_to_inven(dude_obj, LVar1);
    if (dude_gender == 0) then begin
        gsay_message(NAME, 118, NEUTRAL_REACTION);
    end
    else begin
        gsay_message(NAME, 119, NEUTRAL_REACTION);
    end
    gsay_message(NAME, 121, NEUTRAL_REACTION);
    gsay_message(NAME, 135, NEUTRAL_REACTION);
end

procedure Jasmine07
begin
    float_msg(self_obj, mstr(122), FLOAT_MSG_RED);
end

procedure Jasmine08
begin
    gsay_message(NAME, 123, NEUTRAL_REACTION);
end

procedure Jasmine09
begin
    if (dude_gender == 0) then begin
        gsay_message(NAME, 124, NEUTRAL_REACTION);
    end
    else begin
        gsay_message(NAME, 134, NEUTRAL_REACTION);
    end
end

procedure Jasmine10
begin
    gsay_message(NAME, 125, NEUTRAL_REACTION);
end

procedure Jasmine11
begin
    gsay_message(NAME, 126, NEUTRAL_REACTION);
end

procedure Jasmine12
begin
    gsay_message(NAME, 127, NEUTRAL_REACTION);
end

procedure Jasmine13
begin
    gsay_message(NAME, 128, NEUTRAL_REACTION);
end

procedure Jasmine14
begin
    gsay_message(NAME, 129, NEUTRAL_REACTION);
end

procedure Jasmine15
begin
    float_msg(self_obj, mstr(130), FLOAT_MSG_RED);
end

procedure Jasmine16
begin
    float_msg(self_obj, mstr(131), FLOAT_MSG_RED);
end

procedure Jasmine17
begin
    float_msg(self_obj, mstr(132), FLOAT_MSG_RED);
end

procedure JasmineEnd
begin
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * dude_charisma) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence)));
        if (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality)) then begin
            if (global_var(GVAR_PLAYER_REPUATION) > 0) then begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
        end
        if (global_var(GVAR_CHILDKILLER_REPUATION) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(SCRIPT_MODREACT, random(100, 105));
end
