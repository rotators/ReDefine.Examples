procedure Start;
procedure look_at_p_proc;
procedure description_p_proc;
procedure talk_p_proc;
procedure critter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure timed_event_p_proc;
procedure map_enter_p_proc;
procedure pickup_p_proc;
procedure Moat00;
procedure Moat01;
procedure Moat02;
procedure Moat03;
procedure Moat04;
procedure Moat05;
procedure MoatCombat;
procedure MoatEnd;

variable Initialize := 1;
variable DestTile;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure Start
begin
    if (Initialize) then begin
        if (obj_is_carrying_obj_pid(self_obj, 41) == 0) then begin
            item_caps_adjust(self_obj, random(2, 20));
        end
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 48);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_GUNRUNNERS);
        if (local_var(4) == 0) then begin
            DestTile := tile_num(self_obj);
            set_local_var(4, DestTile);
        end
        Initialize := 0;
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure talk_p_proc
begin
    if (global_var(GVAR_ENEMY_BLADE) == 1) then begin
        float_msg(self_obj, message_str(SCRIPT_ENEMY, random(100, 105)), FLOAT_MSG_RED);
    end
    else begin
        call get_reaction();
        start_gdialog(6, self_obj, -1, -1, -1);
        gsay_start;
        call Moat00();
        gsay_end;
        end_dialogue;
    end
end

procedure critter_p_proc
begin
    if (tile_num(self_obj) != DestTile) then begin
        animate_move_obj_to_tile(self_obj, DestTile, 0);
    end
    else begin
        anim(self_obj, 1000, 2);
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if (global_var(GVAR_ENEMY_BLADES) == 1) then begin
            attack(dude_obj);
        end
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_ENEMY_BLADE, 1);
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_ENEMY_BLADE, 1);
        if (source_obj == dude_obj) then begin
            if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
                set_global_var(GVAR_BERSERKER_REPUTATION, 1);
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
            end
            if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 1);
                set_global_var(GVAR_BERSERKER_REPUTATION, 0);
            end
            set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
            if ((global_var(GVAR_GOOD_MONSTER) % 2) == 0) then begin
                set_global_var(GVAR_PLAYER_REPUATION, global_var(GVAR_PLAYER_REPUATION) - 1);
            end
        end
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if (tile_distance_objs(self_obj, dude_obj) < 5) then begin
            set_global_var(GVAR_ENEMY_BLADE, 1);
            attack(dude_obj);
        end
    end
end

procedure map_enter_p_proc
begin
    move_to(self_obj, local_var(4), 0);
    anim(self_obj, 1000, 2);
end

procedure pickup_p_proc
begin
    set_global_var(GVAR_ENEMY_BLADE, 1);
end

procedure Moat00
begin
    Reply(101);
    giq_option(4, NAME, 103, Moat02, NEUTRAL_REACTION);
    if (local_var(5) == 0) then begin
        giq_option(4, NAME, 104, Moat05, NEUTRAL_REACTION);
        giq_option(4, NAME, 115, Moat03, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 119, Moat04, NEUTRAL_REACTION);
        giq_option(4, NAME, 118, Moat04, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 111, MoatCombat, BAD_REACTION);
    giq_option(-3, NAME, 102, Moat01, NEUTRAL_REACTION);
end

procedure Moat01
begin
    gsay_message(NAME, 107, NEUTRAL_REACTION);
    add_timer_event(self_obj, game_ticks(10), 1);
    call BottomReact();
end

procedure Moat02
begin
    gsay_message(NAME, 107, NEUTRAL_REACTION);
    add_timer_event(self_obj, game_ticks(10 * 2), 1);
    call BottomReact();
end

procedure Moat03
begin
    gsay_message(NAME, 116, NEUTRAL_REACTION);
    DestTile := 26299;
    set_local_var(5, 1);
end

procedure Moat04
begin
    gsay_message(NAME, 117, NEUTRAL_REACTION);
    DestTile := 26299;
end

procedure Moat05
begin
    gsay_message(NAME, 113, NEUTRAL_REACTION);
    DestTile := 26299;
    set_local_var(5, 1);
end

procedure MoatCombat
begin
    add_timer_event(self_obj, game_ticks(10), 1);
    call BottomReact();
end

procedure MoatEnd
begin
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * dude_charisma) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence)));
        if (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality)) then begin
            if (global_var(GVAR_PLAYER_REPUATION) > 0) then begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
        end
        if (global_var(GVAR_CHILDKILLER_REPUATION) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(SCRIPT_MODREACT, random(100, 105));
end
