procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure damage_p_proc;
procedure look_at_p_proc;
procedure Staple00;
procedure Staple01;
procedure Staple02;
procedure Staple03;
procedure Staple04;
procedure Staple05;
procedure Staple06;
procedure Staple06a;
procedure Staple06b;
procedure Staple06c;
procedure Staple07;
procedure Staple08;
procedure Staple09;
procedure Staple10;
procedure Staple11;
procedure Staple12;
procedure Staple13;
procedure Staple14;
procedure Staple15;
procedure Staple15a;
procedure Staple16;
procedure Staple17;
procedure StapleEnd;
procedure Get_Stuff;
procedure Put_Stuff;

variable hostile;
variable Only_Once := 1;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure start
begin
    if (Only_Once) then begin
        Only_Once := 0;
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 70);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_MERCHANT);
    end
    if (script_action == look_at_proc) then begin
        call look_at_p_proc();
    end
    else begin
        if (script_action == pickup_proc) then begin
            call pickup_p_proc();
        end
        else begin
            if (script_action == talk_proc) then begin
                call talk_p_proc();
            end
            else begin
                if (script_action == critter_proc) then begin
                    call critter_p_proc();
                end
                else begin
                    if (script_action == destroy_proc) then begin
                        call destroy_p_proc();
                    end
                end
            end
        end
    end
end

procedure combat
begin
    hostile := 1;
end

procedure critter_p_proc
begin
    if (hostile) then begin
        hostile := 0;
        attack(dude_obj);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        hostile := 1;
    end
end

procedure talk_p_proc
begin
    call Get_Stuff();
    call get_reaction();
    gdialog_set_barter_mod(-50);
    if (local_var(4) == 0) then begin
        set_local_var(4, 1);
        start_gdialog(862, self_obj, 4, -1, -1);
        gsay_start;
        call Staple00();
        gsay_end;
        end_dialogue;
    end
    else begin
        if (local_var(6) == 1) then begin
            call Staple13();
        end
        else begin
            start_gdialog(862, self_obj, 4, -1, -1);
            gsay_start;
            call Staple01();
            gsay_end;
            end_dialogue;
        end
    end
    call Put_Stuff();
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if ((global_var(GVAR_GOOD_MONSTER) % 2) == 0) then begin
            set_global_var(GVAR_PLAYER_REPUATION, global_var(GVAR_PLAYER_REPUATION) - 1);
        end
    end
end

procedure damage_p_proc
begin
    variable LVar0 := 0;
    LVar0 := obj_pid(source_obj);
    if (party_member_obj(LVar0) != 0) then begin
        set_global_var(GVAR_ENEMY_HUB, 1);
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure Staple00
begin
    Reply(102);
    call Staple02();
end

procedure Staple01
begin
    Reply(103);
    call Staple02();
end

procedure Staple02
begin
    giq_option(4, NAME, 104, Staple03, NEUTRAL_REACTION);
    if ((global_var(GVAR_FIND_WATER_CHIP) != 2) and (local_var(5) == 0)) then begin
        giq_option(4, NAME, 105, Staple04, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_CHEMISTRY_BOOK) == 1) then begin
        giq_option(4, NAME, 130, Staple15, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 106, StapleEnd, NEUTRAL_REACTION);
    giq_option(-3, NAME, 125, Staple14, NEUTRAL_REACTION);
end

procedure Staple03
begin
    gsay_message(NAME, 107, NEUTRAL_REACTION);
    gdialog_mod_barter(-50);
    Reply(127);
    giq_option(4, NAME, 128, StapleEnd, NEUTRAL_REACTION);
    giq_option(-3, NAME, 129, StapleEnd, NEUTRAL_REACTION);
end

procedure Staple04
begin
    Reply(108);
    giq_option(4, NAME, 109, Staple05, NEUTRAL_REACTION);
    giq_option(4, NAME, 110, Staple06, NEUTRAL_REACTION);
end

procedure Staple05
begin
    Reply(111);
    giq_option(4, NAME, 112, Staple06, NEUTRAL_REACTION);
end

procedure Staple06
begin
    Reply(113);
    giq_option(4, NAME, 114, Staple06a, NEUTRAL_REACTION);
    giq_option(4, NAME, 115, Staple06b, NEUTRAL_REACTION);
    giq_option(4, NAME, 116, Staple06c, NEUTRAL_REACTION);
    giq_option(4, NAME, 117, StapleEnd, NEUTRAL_REACTION);
end

procedure Staple06a
begin
    if (item_caps_total(dude_obj) >= 750) then begin
        call Staple09();
    end
    else begin
        call Staple07();
    end
end

procedure Staple06b
begin
    if (is_success(do_check(dude_obj, 3, 0)) or is_success(roll_vs_skill(dude_obj, 15, 0))) then begin
        if (item_caps_total(dude_obj) >= 500) then begin
            call Staple10();
        end
        else begin
            call Staple07();
        end
    end
    else begin
        call Staple07();
    end
end

procedure Staple06c
begin
    if (is_success(do_check(dude_obj, 0, 0))) then begin
        call Staple11();
    end
    else begin
        call Staple08();
    end
end

procedure Staple07
begin
    gsay_message(NAME, 118, NEUTRAL_REACTION);
end

procedure Staple08
begin
    set_local_var(6, 1);
    gsay_message(NAME, 119, BAD_REACTION);
end

procedure Staple09
begin
    variable LVar0 := 0;
    LVar0 := item_caps_adjust(dude_obj, -750);
    gsay_message(NAME, 120, NEUTRAL_REACTION);
    call Staple12();
end

procedure Staple10
begin
    variable LVar0 := 0;
    LVar0 := item_caps_adjust(dude_obj, -500);
    gsay_message(NAME, 121, NEUTRAL_REACTION);
    call Staple12();
end

procedure Staple11
begin
    set_local_var(6, 1);
    gsay_message(NAME, 122, BAD_REACTION);
    call Staple12();
end

procedure Staple12
begin
    variable LVar0 := 0;
    set_local_var(5, 1);
    LVar0 := create_object(230, 0, 0);
    add_obj_to_inven(dude_obj, LVar0);
    gsay_message(NAME, 123, NEUTRAL_REACTION);
end

procedure Staple13
begin
    float_msg(self_obj, mstr(124), FLOAT_MSG_RED);
end

procedure Staple14
begin
    gsay_message(NAME, 126, NEUTRAL_REACTION);
end

procedure Staple15
begin
    Reply(131);
    giq_option(4, NAME, 114, Staple15a, NEUTRAL_REACTION);
    giq_option(4, NAME, 117, StapleEnd, NEUTRAL_REACTION);
end

procedure Staple15a
begin
    if (item_caps_total(dude_obj) >= 750) then begin
        call Staple16();
    end
    else begin
        call Staple17();
    end
end

procedure Staple16
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    LVar0 := item_caps_adjust(dude_obj, -750);
    set_global_var(GVAR_CHEMISTRY_BOOK, 2);
    LVar1 := create_object(237, 0, 0);
    add_obj_to_inven(dude_obj, LVar1);
    gsay_message(NAME, 132, NEUTRAL_REACTION);
end

procedure Staple17
begin
    gsay_message(NAME, 133, NEUTRAL_REACTION);
end

procedure StapleEnd
begin
end

procedure Get_Stuff
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    LVar0 := create_object(73, 0, 0);
    add_mult_objs_to_inven(self_obj, LVar0, 5);
    LVar0 := create_object(76, 0, 0);
    add_mult_objs_to_inven(self_obj, LVar0, 5);
    LVar0 := create_object(80, 0, 0);
    add_mult_objs_to_inven(self_obj, LVar0, 5);
    LVar0 := create_object(86, 0, 0);
    add_mult_objs_to_inven(self_obj, LVar0, 5);
    LVar0 := create_object(102, 0, 0);
    add_mult_objs_to_inven(self_obj, LVar0, 5);
    LVar1 := item_caps_adjust(self_obj, 500);
end

procedure Put_Stuff
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    LVar0 := obj_carrying_pid_obj(self_obj, 73);
    if (LVar0 != 0) then begin
        LVar1 := rm_mult_objs_from_inven(self_obj, LVar0, 5);
        destroy_object(LVar0);
    end
    LVar0 := obj_carrying_pid_obj(self_obj, 76);
    if (LVar0 != 0) then begin
        LVar1 := rm_mult_objs_from_inven(self_obj, LVar0, 5);
        destroy_object(LVar0);
    end
    LVar0 := obj_carrying_pid_obj(self_obj, 80);
    if (LVar0 != 0) then begin
        LVar1 := rm_mult_objs_from_inven(self_obj, LVar0, 5);
        destroy_object(LVar0);
    end
    LVar0 := obj_carrying_pid_obj(self_obj, 86);
    if (LVar0 != 0) then begin
        LVar1 := rm_mult_objs_from_inven(self_obj, LVar0, 5);
        destroy_object(LVar0);
    end
    LVar0 := obj_carrying_pid_obj(self_obj, 102);
    if (LVar0 != 0) then begin
        LVar1 := rm_mult_objs_from_inven(self_obj, LVar0, 5);
        destroy_object(LVar0);
    end
    LVar1 := item_caps_adjust(self_obj, -item_caps_total(self_obj));
    LVar1 := item_caps_adjust(self_obj, 24);
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * dude_charisma) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence)));
        if (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality)) then begin
            if (global_var(GVAR_PLAYER_REPUATION) > 0) then begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
        end
        if (global_var(GVAR_CHILDKILLER_REPUATION) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(SCRIPT_MODREACT, random(100, 105));
end
