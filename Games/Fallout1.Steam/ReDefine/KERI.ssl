procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure timed_event_p_proc;
procedure damage_p_proc;
procedure Keri00;
procedure Keri01;
procedure Keri02;
procedure Keri03;
procedure Keri04;
procedure Keri04a;
procedure Keri04b;
procedure Keri05;
procedure Keri06;
procedure Keri07;
procedure Keri08;
procedure Keri09;
procedure Keri10;
procedure Keri10a;
procedure Keri11;
procedure Keri12;
procedure Keri13;
procedure Keri14;
procedure Keri15;
procedure Keri16;
procedure Keri17;
procedure Keri18;
procedure Keri19;
procedure Keri20;
procedure Keri21a;
procedure Keri21b;
procedure Keri21c;
procedure Keri21d;
procedure Keri27;
procedure Keri28;
procedure Keri29;
procedure Keri30;
procedure Keri33;
procedure Keri34;
procedure KeriEnd;
procedure KeriCombat;
procedure Jailed;
procedure RecalcDate;
procedure RecalcDateString;
procedure SendAroundHouse;

variable hostile;
variable Only_Once := 1;
variable days;
variable DayString := "None";
variable SetDayNight;
variable Destination;
variable LastMove;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure start
begin
    if (Only_Once) then begin
        Only_Once := 0;
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 36);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_MERCHANT);
        LastMove := 12127;
    end
    if (script_action == look_at_proc) then begin
        call look_at_p_proc();
    end
    else begin
        if (script_action == pickup_proc) then begin
            call pickup_p_proc();
        end
        else begin
            if (script_action == talk_proc) then begin
                call talk_p_proc();
            end
            else begin
                if (script_action == critter_proc) then begin
                    call critter_p_proc();
                end
                else begin
                    if (script_action == destroy_proc) then begin
                        call destroy_p_proc();
                    end
                    else begin
                        if (script_action == timed_event_proc) then begin
                            call timed_event_p_proc();
                        end
                    end
                end
            end
        end
    end
end

procedure combat
begin
    hostile := 1;
end

procedure critter_p_proc
begin
    variable LVar0 := 0;
    if (hostile) then begin
        hostile := 0;
        attack(dude_obj);
    end
    if (SetDayNight == 0) then begin
        add_timer_event(self_obj, game_ticks(random(3, 8)), 1);
        SetDayNight := 1;
    end
    LVar0 := tile_num(self_obj);
    if (LVar0 == 12126) then begin
        if (anim_busy(self_obj) == 0) then begin
            if (obj_get_rot(self_obj) != 0) then begin
                anim(self_obj, 1000, 0);
            end
        end
    end
    else begin
        if (LVar0 == 11927) then begin
            if (anim_busy(self_obj) == 0) then begin
                if (obj_get_rot(self_obj) != 5) then begin
                    anim(self_obj, 1000, 5);
                end
            end
        end
        else begin
            if (LVar0 == 12127) then begin
                if (anim_busy(self_obj) == 0) then begin
                    if (obj_get_rot(self_obj) != 2) then begin
                        anim(self_obj, 1000, 2);
                    end
                end
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (local_var(5) == 0) then begin
        dialogue_system_enter;
    end
    else begin
        call Keri10();
    end
end

procedure talk_p_proc
begin
    variable LVar0 := 0;
    call get_reaction();
    if (local_var(13) == 1) then begin
        if (local_var(11) < (game_time / (10 * 60 * 60 * 24 * 365))) then begin
            set_local_var(13, 0);
        end
        else begin
            if ((local_var(10) < get_month) or (local_var(10) == 12) and (get_month == 1) and ((local_var(10) != 1) or (get_month != 12))) then begin
                set_local_var(13, 0);
            end
            else begin
                if ((local_var(9) < get_day) and ((local_var(10) != 1) or (get_month != 12))) then begin
                    set_local_var(13, 0);
                end
            end
        end
    end
    call RecalcDate();
    LVar0 := local_var(9);
    if ((map_var(24) == 1) and (map_var(28) == 0)) then begin
        call Keri13();
    end
    else begin
        if (local_var(5) == 1) then begin
            call Keri14();
        end
        else begin
            if (map_var(25) == 1) then begin
                call Keri15();
            end
            else begin
                if (map_var(204) == 3) then begin
                    start_gdialog(595, self_obj, 4, -1, -1);
                    gsay_start;
                    call Keri19();
                    gsay_end;
                    end_dialogue;
                end
                else begin
                    if (map_var(26) == 0) then begin
                        call Keri00();
                    end
                    else begin
                        if (global_var(GVAR_CC_JOB) == 4) then begin
                            start_gdialog(595, self_obj, 4, -1, -1);
                            gsay_start;
                            call Keri27();
                            gsay_end;
                            end_dialogue;
                        end
                        else begin
                            if ((map_var(26) == 1) and (local_var(13) == 0)) then begin
                                start_gdialog(595, self_obj, 4, -1, -1);
                                gsay_start;
                                if (local_var(12) == 0) then begin
                                    call Keri01();
                                end
                                else begin
                                    call Keri03();
                                end
                                gsay_end;
                                end_dialogue;
                            end
                            else begin
                                if ((local_var(13) == 1) and (LVar0 == get_day)) then begin
                                    start_gdialog(595, self_obj, 4, -1, -1);
                                    gsay_start;
                                    call Keri28();
                                    gsay_end;
                                    end_dialogue;
                                end
                                else begin
                                    if ((local_var(13) == 1) and (LVar0 != get_day)) then begin
                                        start_gdialog(595, self_obj, 4, -1, -1);
                                        gsay_start;
                                        call Keri29();
                                        gsay_end;
                                        end_dialogue;
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if ((global_var(GVAR_GOOD_MONSTER) % 2) == 0) then begin
            set_global_var(GVAR_PLAYER_REPUATION, global_var(GVAR_PLAYER_REPUATION) - 1);
        end
    end
    set_map_var(28, 1);
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure timed_event_p_proc
begin
    call SendAroundHouse();
end

procedure damage_p_proc
begin
    variable LVar0 := 0;
    LVar0 := obj_pid(source_obj);
    if (party_member_obj(LVar0) != 0) then begin
        set_global_var(GVAR_ENEMY_HUB, 1);
    end
end

procedure Keri00
begin
    if (local_var(7) == 0) then begin
        set_local_var(7, 1);
        float_msg(self_obj, mstr(101), FLOAT_MSG_RED);
    end
    else begin
        float_msg(self_obj, mstr(102), FLOAT_MSG_RED);
    end
end

procedure Keri01
begin
    if (global_var(GVAR_JUNKTOWN) == 0) then begin
        set_global_var(GVAR_JUNKTOWN, 1);
    end
    if (global_var(GVAR_BROTHERHOOD_OF_STEEL) == 0) then begin
        set_global_var(GVAR_BROTHERHOOD_OF_STEEL, 1);
    end
    if (global_var(GVAR_NECROPOLIS) == 0) then begin
        set_global_var(GVAR_NECROPOLIS, 1);
    end
    if (global_var(GVAR_ANGELS_BONEYARD) == 0) then begin
        set_global_var(GVAR_ANGELS_BONEYARD, 1);
    end
    if (dude_gender == 1) then begin
        Reply(103);
    end
    else begin
        Reply(104);
    end
    giq_option(4, NAME, 105, Keri02, NEUTRAL_REACTION);
    giq_option(-3, NAME, 106, Keri02, NEUTRAL_REACTION);
end

procedure Keri02
begin
    variable LVar0 := 0;
    call RecalcDateString();
    LVar0 := local_var(9);
    if (LVar0 == get_day) then begin
        Reply(mstr(107) + mstr(108));
    end
    else begin
        Reply(mstr(107) + mstr(109) + DayString + mstr(112));
    end
    call Keri04();
end

procedure Keri03
begin
    variable LVar0 := 0;
    if (local_var(1) != 1) then begin
        call RecalcDateString();
        LVar0 := local_var(9);
        if (LVar0 == get_day) then begin
            Reply(mstr(113));
        end
        else begin
            Reply(mstr(114) + DayString + mstr(117));
        end
        call Keri04();
    end
    else begin
        Reply(118);
        call Keri04();
    end
end

procedure Keri04
begin
    giq_option(4, NAME, 119, Keri04a, NEUTRAL_REACTION);
    giq_option(4, NAME, 120, Keri05, NEUTRAL_REACTION);
    if ((dude_gender == 0) and (local_var(14) == 0)) then begin
        giq_option(4, NAME, 121, Keri04b, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 122, Keri06, NEUTRAL_REACTION);
    giq_option(-3, NAME, 123, Keri07, NEUTRAL_REACTION);
end

procedure Keri04a
begin
    variable LVar0 := 0;
    set_local_var(13, 1);
    call RecalcDate();
    LVar0 := local_var(9);
    if (LVar0 == get_day) then begin
        call Keri17();
    end
    else begin
        call Keri18();
    end
end

procedure Keri04b
begin
    variable LVar0 := 0;
    if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
        call Keri08();
    end
    else begin
        LVar0 := dude_charisma;
        if (LVar0 <= 6) then begin
            call Keri16();
        end
        else begin
            if (is_success(do_check(dude_obj, 3, 0))) then begin
                call Keri09();
            end
            else begin
                call Keri16();
            end
        end
    end
end

procedure Keri05
begin
    set_local_var(13, 0);
    gsay_message(NAME, 124, NEUTRAL_REACTION);
end

procedure Keri06
begin
    set_local_var(13, 0);
    gsay_message(NAME, 126, NEUTRAL_REACTION);
end

procedure Keri07
begin
    gsay_message(NAME, 127, NEUTRAL_REACTION);
end

procedure Keri08
begin
    variable LVar0 := 0;
    set_local_var(14, 1);
    gsay_message(NAME, 130, NEUTRAL_REACTION);
    gfade_out(600);
    game_time_advance(game_ticks(60 * 60 * 2));
    gfade_in(600);
    LVar0 := create_object(53, 0, 0);
    add_obj_to_inven(dude_obj, LVar0);
    LVar0 := create_object(87, 0, 0);
    add_obj_to_inven(dude_obj, LVar0);
    LVar0 := create_object(110, 0, 0);
    add_obj_to_inven(dude_obj, LVar0);
    display_mstr(229);
    gsay_message(NAME, 131, NEUTRAL_REACTION);
    gsay_message(NAME, 132, NEUTRAL_REACTION);
end

procedure Keri09
begin
    variable LVar0 := 0;
    set_local_var(14, 1);
    gsay_message(NAME, 133, NEUTRAL_REACTION);
    gfade_out(600);
    game_time_advance(game_ticks(60 * 60 * 2));
    gfade_in(600);
    LVar0 := create_object(53, 0, 0);
    add_obj_to_inven(dude_obj, LVar0);
    LVar0 := create_object(87, 0, 0);
    add_obj_to_inven(dude_obj, LVar0);
    LVar0 := create_object(110, 0, 0);
    add_obj_to_inven(dude_obj, LVar0);
    display_mstr(229);
    gsay_message(NAME, 131, NEUTRAL_REACTION);
    gsay_message(NAME, 132, NEUTRAL_REACTION);
end

procedure Keri10
begin
    if (local_var(5) == 0) then begin
        set_local_var(5, 1);
        set_map_var(25, 1);
        Reply(136);
        giq_option(4, NAME, 137, Keri10a, NEUTRAL_REACTION);
        giq_option(4, NAME, 138, KeriCombat, BAD_REACTION);
        giq_option(4, NAME, 139, KeriCombat, BAD_REACTION);
        giq_option(-3, NAME, 141, KeriCombat, BAD_REACTION);
    end
    else begin
        if (dude_gender == 0) then begin
            float_msg(self_obj, mstr(143), FLOAT_MSG_RED);
        end
        else begin
            float_msg(self_obj, mstr(142), FLOAT_MSG_RED);
        end
        call KeriCombat();
    end
end

procedure Keri10a
begin
    if (is_success(roll_vs_skill(dude_obj, 14, -20))) then begin
        call Keri11();
    end
    else begin
        call Keri12();
    end
end

procedure Keri11
begin
    gsay_message(NAME, 144, NEUTRAL_REACTION);
end

procedure Keri12
begin
    Reply(145);
    call KeriCombat();
end

procedure Keri13
begin
    float_msg(self_obj, mstr(148), FLOAT_MSG_RED);
    call KeriCombat();
end

procedure Keri14
begin
    float_msg(self_obj, mstr(random(149, 150)), FLOAT_MSG_RED);
    call KeriCombat();
end

procedure Keri15
begin
    if (local_var(6) != 3) then begin
        float_msg(self_obj, mstr(151 + local_var(6)), FLOAT_MSG_RED);
        set_local_var(6, local_var(6) + 1);
    end
    else begin
        float_msg(self_obj, mstr(154), FLOAT_MSG_RED);
    end
end

procedure Keri16
begin
    gsay_message(NAME, 155, NEUTRAL_REACTION);
end

procedure Keri17
begin
    Reply(156);
    call Keri33();
    call Keri20();
end

procedure Keri18
begin
    call RecalcDateString();
    Reply(mstr(157) + DayString + mstr(158));
    giq_option(4, NAME, 159, Keri30, NEUTRAL_REACTION);
    giq_option(4, NAME, 160, Keri34, NEUTRAL_REACTION);
end

procedure Keri19
begin
    set_map_var(25, 1);
    set_global_var(GVAR_CC_JOB, 0);
    if (dude_gender == 1) then begin
        float_msg(self_obj, mstr(161), FLOAT_MSG_RED);
    end
    else begin
        float_msg(self_obj, mstr(162), FLOAT_MSG_RED);
    end
end

procedure Keri20
begin
    giq_option(4, NAME, 163, Keri21a, NEUTRAL_REACTION);
    giq_option(4, NAME, 164, Keri21b, NEUTRAL_REACTION);
    giq_option(4, NAME, 165, Keri21c, NEUTRAL_REACTION);
    giq_option(4, NAME, 166, Keri21d, NEUTRAL_REACTION);
    giq_option(4, NAME, 167, Keri34, NEUTRAL_REACTION);
end

procedure Keri21a
begin
    variable LVar0 := 0;
    set_global_var(GVAR_CRIMSON_CARAVANS_STATUS, 1);
    LVar0 := random(1, 8);
    if (LVar0 == 1) then begin
        gsay_message(NAME, 168, NEUTRAL_REACTION);
    end
    else begin
        if (LVar0 == 2) then begin
            gsay_message(NAME, 169, NEUTRAL_REACTION);
        end
        else begin
            if (LVar0 == 3) then begin
                gsay_message(NAME, 170, NEUTRAL_REACTION);
            end
            else begin
                if (LVar0 == 4) then begin
                    gsay_message(NAME, 171, NEUTRAL_REACTION);
                end
                else begin
                    if (LVar0 == 5) then begin
                        gsay_message(NAME, 172, NEUTRAL_REACTION);
                    end
                    else begin
                        if (LVar0 == 6) then begin
                            gsay_message(NAME, 173, NEUTRAL_REACTION);
                        end
                        else begin
                            if (LVar0 == 7) then begin
                                gsay_message(NAME, 174, NEUTRAL_REACTION);
                            end
                            else begin
                                if (LVar0 == 8) then begin
                                    gsay_message(NAME, 175, NEUTRAL_REACTION);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    load_map(59, 3);
end

procedure Keri21b
begin
    variable LVar0 := 0;
    set_global_var(GVAR_CRIMSON_CARAVANS_STATUS, 1);
    LVar0 := random(1, 7);
    if (LVar0 == 1) then begin
        gsay_message(NAME, 168, NEUTRAL_REACTION);
    end
    else begin
        if (LVar0 == 2) then begin
            gsay_message(NAME, 169, NEUTRAL_REACTION);
        end
        else begin
            if (LVar0 == 3) then begin
                gsay_message(NAME, 170, NEUTRAL_REACTION);
            end
            else begin
                if (LVar0 == 4) then begin
                    gsay_message(NAME, 171, NEUTRAL_REACTION);
                end
                else begin
                    if (LVar0 == 5) then begin
                        gsay_message(NAME, 176, NEUTRAL_REACTION);
                    end
                    else begin
                        if (LVar0 == 6) then begin
                            gsay_message(NAME, 177, NEUTRAL_REACTION);
                        end
                        else begin
                            if (LVar0 == 7) then begin
                                gsay_message(NAME, 178, NEUTRAL_REACTION);
                            end
                        end
                    end
                end
            end
        end
    end
    LVar0 := random(1, 4);
    load_map(58, 3);
end

procedure Keri21c
begin
    variable LVar0 := 0;
    set_global_var(GVAR_CRIMSON_CARAVANS_STATUS, 1);
    LVar0 := random(1, 7);
    if (LVar0 == 1) then begin
        gsay_message(NAME, 168, NEUTRAL_REACTION);
    end
    else begin
        if (LVar0 == 2) then begin
            gsay_message(NAME, 169, NEUTRAL_REACTION);
        end
        else begin
            if (LVar0 == 3) then begin
                gsay_message(NAME, 170, NEUTRAL_REACTION);
            end
            else begin
                if (LVar0 == 4) then begin
                    gsay_message(NAME, 171, NEUTRAL_REACTION);
                end
                else begin
                    if (LVar0 == 5) then begin
                        gsay_message(NAME, 179, NEUTRAL_REACTION);
                    end
                    else begin
                        if (LVar0 == 6) then begin
                            gsay_message(NAME, 180, NEUTRAL_REACTION);
                        end
                        else begin
                            if (LVar0 == 7) then begin
                                gsay_message(NAME, 181, NEUTRAL_REACTION);
                            end
                        end
                    end
                end
            end
        end
    end
    load_map(57, 3);
end

procedure Keri21d
begin
    variable LVar0 := 0;
    set_global_var(GVAR_CRIMSON_CARAVANS_STATUS, 1);
    LVar0 := random(1, 7);
    if (LVar0 == 1) then begin
        gsay_message(NAME, 168, NEUTRAL_REACTION);
    end
    else begin
        if (LVar0 == 2) then begin
            gsay_message(NAME, 169, NEUTRAL_REACTION);
        end
        else begin
            if (LVar0 == 3) then begin
                gsay_message(NAME, 170, NEUTRAL_REACTION);
            end
            else begin
                if (LVar0 == 4) then begin
                    gsay_message(NAME, 171, NEUTRAL_REACTION);
                end
                else begin
                    if (LVar0 == 5) then begin
                        gsay_message(NAME, 182, NEUTRAL_REACTION);
                    end
                    else begin
                        if (LVar0 == 6) then begin
                            gsay_message(NAME, 183, NEUTRAL_REACTION);
                        end
                        else begin
                            if (LVar0 == 7) then begin
                                gsay_message(NAME, 184, NEUTRAL_REACTION);
                            end
                        end
                    end
                end
            end
        end
    end
    load_map(56, 3);
end

procedure Keri27
begin
    Reply(198);
    giq_option(4, NAME, 199, Keri04a, NEUTRAL_REACTION);
    giq_option(4, NAME, 200, Keri05, NEUTRAL_REACTION);
    giq_option(4, NAME, 201, Keri06, NEUTRAL_REACTION);
    giq_option(-3, NAME, 202, Keri07, NEUTRAL_REACTION);
    giq_option(-3, NAME, 203, Keri07, NEUTRAL_REACTION);
end

procedure Keri28
begin
    Reply(204);
    giq_option(4, NAME, 205, Keri17, NEUTRAL_REACTION);
    giq_option(4, NAME, 206, KeriEnd, NEUTRAL_REACTION);
    giq_option(-3, NAME, 207, Keri07, NEUTRAL_REACTION);
end

procedure Keri29
begin
    variable LVar0 := 0;
    call RecalcDateString();
    LVar0 := local_var(9);
    gsay_message(NAME, mstr(209) + DayString + mstr(212), NEUTRAL_REACTION);
end

procedure Keri30
begin
    set_local_var(13, 1);
end

procedure Keri33
begin
    variable LVar0 := 0;
    set_local_var(13, 0);
    set_global_var(GVAR_CC_JOB, 1);
    LVar0 := local_var(12);
    set_local_var(12, LVar0 + 1);
end

procedure Keri34
begin
    set_local_var(13, 0);
end

procedure KeriEnd
begin
end

procedure KeriCombat
begin
    set_map_var(24, 1);
    set_map_var(25, 1);
    call combat();
end

procedure Jailed
begin
    set_map_var(25, 1);
    gfade_out(600);
    move_to(dude_obj, 21867, 0);
    gfade_in(600);
end

procedure RecalcDate
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    LVar0 := get_day;
    if (LVar0 <= 3) then begin
        LVar0 := 3;
        LVar1 := get_month;
        LVar2 := game_time / (10 * 60 * 60 * 24 * 365);
    end
    else begin
        if ((LVar0 > 3) and (LVar0 <= 17)) then begin
            LVar0 := 17;
            LVar1 := get_month;
            LVar2 := game_time / (10 * 60 * 60 * 24 * 365);
        end
        else begin
            if (LVar0 > 17) then begin
                LVar0 := 3;
                LVar1 := get_month;
                if (LVar1 == 12) then begin
                    LVar1 := 1;
                    LVar2 := (game_time / (10 * 60 * 60 * 24 * 365)) + 1;
                end
                else begin
                    LVar1 := LVar1 + 1;
                    LVar2 := game_time / (10 * 60 * 60 * 24 * 365);
                end
            end
        end
    end
    set_local_var(9, LVar0);
    set_local_var(10, LVar1);
    set_local_var(11, LVar2);
end

procedure RecalcDateString
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    call RecalcDate();
    LVar0 := local_var(10);
    LVar1 := local_var(9);
    if (LVar0 == 1) then begin
        DayString := mstr(217);
    end
    else begin
        if (LVar0 == 2) then begin
            DayString := mstr(218);
        end
        else begin
            if (LVar0 == 3) then begin
                DayString := mstr(219);
            end
            else begin
                if (LVar0 == 4) then begin
                    DayString := mstr(220);
                end
                else begin
                    if (LVar0 == 5) then begin
                        DayString := mstr(221);
                    end
                    else begin
                        if (LVar0 == 6) then begin
                            DayString := mstr(222);
                        end
                        else begin
                            if (LVar0 == 7) then begin
                                DayString := mstr(223);
                            end
                            else begin
                                if (LVar0 == 8) then begin
                                    DayString := mstr(224);
                                end
                                else begin
                                    if (LVar0 == 9) then begin
                                        DayString := mstr(225);
                                    end
                                    else begin
                                        if (LVar0 == 10) then begin
                                            DayString := mstr(226);
                                        end
                                        else begin
                                            if (LVar0 == 11) then begin
                                                DayString := mstr(227);
                                            end
                                            else begin
                                                if (LVar0 == 12) then begin
                                                    DayString := mstr(228);
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    if (LVar1 == 3) then begin
        DayString := DayString + mstr(210);
    end
    else begin
        if (LVar1 == 17) then begin
            DayString := DayString + mstr(211);
        end
    end
end

procedure SendAroundHouse
begin
    variable LVar0 := 0;
    Destination := 0;
    LVar0 := random(10, 20);
    while (Destination == 0) do begin
        Destination := random(1, 3);
        if (Destination == 1) then begin
            Destination := 12127;
        end
        else begin
            if (Destination == 2) then begin
                Destination := 12126;
            end
            else begin
                if (Destination == 3) then begin
                    Destination := 11927;
                end
            end
        end
        if (Destination == LastMove) then begin
            Destination := 0;
        end
    end
    LastMove := Destination;
    reg_anim_func(2, self_obj);
    reg_anim_func(1, 1);
    reg_anim_obj_move_to_tile(self_obj, Destination, -1);
    reg_anim_func(3, 0);
    rm_timer_event(self_obj);
    add_timer_event(self_obj, game_ticks(LVar0), 1);
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * dude_charisma) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence)));
        if (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality)) then begin
            if (global_var(GVAR_PLAYER_REPUATION) > 0) then begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
        end
        if (global_var(GVAR_CHILDKILLER_REPUATION) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(SCRIPT_MODREACT, random(100, 105));
end
