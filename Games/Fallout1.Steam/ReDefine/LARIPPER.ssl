procedure start;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure map_exit_p_proc;
procedure Lighting;
procedure Darkness;
procedure PlaceCritter;
procedure add_party;
procedure update_party;
procedure remove_party;

variable party_elevation;
variable dude_start_hex;

export variable Ian_ptr;
export variable Dog_ptr;
export variable Tycho_ptr;
export variable Katja_ptr;
export variable Tandi_ptr;

procedure Invasion;


procedure start
begin
    if (script_action == map_enter_proc) then begin
        call map_enter_p_proc();
    end
    else begin
        if (script_action == map_update_proc) then begin
            call map_update_p_proc();
        end
        else begin
            if (script_action == map_exit_proc) then begin
                call map_exit_p_proc();
            end
        end
    end
end

procedure map_enter_p_proc
begin
    variable LVar0 := 0;
    set_global_var(GVAR_MARK_LA_5, 1);
    if (is_loading_game == 0) then begin
        if ((map_var(0) == 0) and (((game_time / 10) - global_var(GVAR_WATER_CHIP_13)) > (60 * 60))) then begin
            set_global_var(GVAR_WATER_CHIP_13, game_time / 10);
            if (map_var(1) == 0) then begin
                LVar0 := random(2, 3);
                set_map_var(1, LVar0);
                set_map_var(3, LVar0);
                call PlaceCritter();
            end
            else begin
                if (map_var(1) == 1) then begin
                    LVar0 := random(1, 2);
                    set_map_var(1, LVar0 + 1);
                    set_map_var(3, LVar0);
                    call PlaceCritter();
                end
                else begin
                    if (map_var(1) == 2) then begin
                        if (random(0, 1)) then begin
                            set_map_var(1, 3);
                            set_map_var(3, 1);
                            call PlaceCritter();
                        end
                    end
                end
            end
        end
    end
    call Lighting();
    override_map_start(96, 121, 0, 0);
    call add_party();
end

procedure map_update_p_proc
begin
    if (dude_elevation == 1) then begin
        call Darkness();
    end
    else begin
        call Lighting();
    end
    call update_party();
end

procedure map_exit_p_proc
begin
    call remove_party();
    if ((map_var(0) == 1) and (map_var(1) == 0) and (map_var(2) == 0)) then begin
        set_global_var(GVAR_WATER_CHIP_8, 9250);
    end
end

procedure Lighting
begin
    variable LVar0 := 0;
    LVar0 := game_time_hour;
    if ((LVar0 >= 600) and (LVar0 < 700)) then begin
        set_light_level(LVar0 - 600 + 40);
    end
    else begin
        if ((LVar0 >= 700) and (LVar0 < 1800)) then begin
            set_light_level(100);
        end
        else begin
            if ((LVar0 >= 1800) and (LVar0 < 1900)) then begin
                set_light_level(100 - (LVar0 - 1800));
            end
            else begin
                set_light_level(40);
            end
        end
    end
end

procedure Darkness
begin
    set_light_level(40);
end

procedure PlaceCritter
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    variable LVar3 := 0;
    LVar3 := map_var(3);
    while (LVar3 > 0) do begin
        LVar2 := random(1, 7);
        if (LVar2 == 1) then begin
            LVar1 := 16890;
        end
        else begin
            if (LVar2 == 2) then begin
                LVar1 := 17269;
            end
            else begin
                if (LVar2 == 3) then begin
                    LVar1 := 23492;
                end
                else begin
                    if (LVar2 == 4) then begin
                        LVar1 := 15885;
                    end
                    else begin
                        if (LVar2 == 5) then begin
                            LVar1 := 12287;
                        end
                        else begin
                            if (LVar2 == 6) then begin
                                LVar1 := 17511;
                            end
                            else begin
                                if (LVar2 == 7) then begin
                                    LVar1 := 15475;
                                end
                            end
                        end
                    end
                end
            end
        end
        LVar0 := create_object_sid(16777267, 0, 0, SCRIPT_ROAMCLAW);
        critter_attempt_placement(LVar0, LVar1, 0);
        LVar3 := LVar3 - 1;
    end
end

procedure add_party
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    party_elevation := dude_elevation;
    if (global_var(GVAR_TANDI_STATUS) == 5) then begin
        if (Tandi_ptr == 0) then begin
        end
        critter_add_trait(Tandi_ptr, TRAIT_OBJECT, OBJECT_TEAM_NUM, 0);
    end
end

procedure update_party
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    if (dude_elevation != party_elevation) then begin
        party_elevation := dude_elevation;
        if (global_var(GVAR_IAN_STATUS) == 2) then begin
            if (Ian_ptr == 0) then begin
            end
            else begin
                move_to(Ian_ptr, tile_num_in_direction(dude_tile, 1, 2), dude_elevation);
            end
        end
        if (global_var(GVAR_DOG_EMPATHY)) then begin
            if (Dog_ptr == 0) then begin
            end
            else begin
                move_to(Dog_ptr, tile_num_in_direction(dude_tile, 2, 1), dude_elevation);
            end
        end
        if (global_var(GVAR_HERNANDEZ_STATUS) == 2) then begin
            if (Tycho_ptr == 0) then begin
            end
            else begin
                move_to(Tycho_ptr, tile_num_in_direction(dude_tile, 3, 2), dude_elevation);
            end
        end
        if (global_var(GVAR_KATJA_STATUS) == 2) then begin
            if (Katja_ptr == 0) then begin
            end
            else begin
                move_to(Katja_ptr, tile_num_in_direction(dude_tile, 4, 2), dude_elevation);
            end
        end
        if (global_var(GVAR_TANDI_STATUS) == 5) then begin
            if (Tandi_ptr == 0) then begin
            end
            else begin
                move_to(Tandi_ptr, tile_num_in_direction(dude_tile, 4, 4), dude_elevation);
            end
        end
    end
end

procedure remove_party
begin
    if (global_var(GVAR_IAN_STATUS) == 2) then begin
        set_global_var(GVAR_IAN_STATUS, 2);
    end
    if (global_var(GVAR_DOG_EMPATHY)) then begin
        set_global_var(GVAR_DOG_EMPATHY, 1);
    end
    if (global_var(GVAR_HERNANDEZ_STATUS) == 2) then begin
        set_global_var(GVAR_HERNANDEZ_STATUS, 2);
    end
    if (global_var(GVAR_KATJA_STATUS) == 2) then begin
        set_global_var(GVAR_KATJA_STATUS, 2);
    end
    if (global_var(GVAR_TANDI_STATUS) == 5) then begin
    end
end

procedure Invasion
begin
    if (not(global_var(GVAR_MASTER_BLOWN) == 2)) then begin
        if (global_var(GVAR_NECROPOLIS_INVADED_DATE) > (game_time / (10 * 60 * 60 * 24))) then begin
            set_global_var(GVAR_NECROPOLIS_INVADED, 1);
        end
        if (global_var(GVAR_THE_HUB_INVADED_DATE) > (game_time / (10 * 60 * 60 * 24))) then begin
            set_global_var(GVAR_HUB_INVADED, 1);
        end
        if (global_var(GVAR_BROTHERHOOD_INVADED_DATE) > (game_time / (10 * 60 * 60 * 24))) then begin
            set_global_var(GVAR_BROTHERHOOD_INVADED, 1);
        end
        if (global_var(GVAR_JUNKTOWN_INVADED_DATE) > (game_time / (10 * 60 * 60 * 24))) then begin
            set_global_var(GVAR_JUNKTOWN_INVADED, 1);
        end
        if (global_var(GVAR_SHADY_SANDS_INVADED_DATE) > (game_time / (10 * 60 * 60 * 24))) then begin
            set_global_var(GVAR_SHADY_SANDS_INVADED, 1);
        end
        if (global_var(GVAR_VAULT_13_INVADED_DATE) <= 0) then begin
            set_global_var(GVAR_VAULT_INVADED, 1);
        end
        if (global_var(GVAR_FOLLOWERS_INVADED_DATE) > (game_time / (10 * 60 * 60 * 24))) then begin
            set_global_var(GVAR_FOLLOWERS_INVADED, 1);
        end
    end
end
