procedure start;
procedure combat_p_proc;
procedure Lighting;
procedure Tandi_Move;
procedure add_party;
procedure update_party;
procedure remove_party;

variable party_elevation;
variable dude_start_hex;

export variable Ian_ptr;
export variable Dog_ptr;
export variable Tycho_ptr;
export variable Katja_ptr;
export variable Tandi_ptr;

procedure Darkness;
procedure Invasion;


procedure start
begin
    if (script_action == map_enter_proc) then begin
        set_global_var(GVAR_MARK_SHADY_3, 1);
        set_global_var(GVAR_MARK_SHADY_2, 1);
        if ((game_time / (10 * 60 * 60 * 24)) >= global_var(GVAR_SHADY_SANDS_INVADED_DATE)) then begin
            set_global_var(GVAR_SHADY_SANDS_INVADED, 1);
        end
        call Lighting();
        if (global_var(GVAR_LOAD_MAP_INDEX) == 3) then begin
            override_map_start(76, 85, 0, 1);
        end
        else begin
            if (global_var(GVAR_LOAD_MAP_INDEX) == 2) then begin
                override_map_start(104, 93, 0, 1);
            end
            else begin
                override_map_start(104, 93, 0, 1);
            end
        end
        call add_party();
    end
    else begin
        if (script_action == map_update_proc) then begin
            call Lighting();
        end
        else begin
            if (script_action == map_exit_proc) then begin
                call remove_party();
            end
            else begin
                if (script_action == combat_proc) then begin
                    call combat_p_proc();
                end
            end
        end
    end
end

procedure combat_p_proc
begin
    script_overrides;
    gfade_out(600);
    load_map(26, 1);
    game_time_advance(game_ticks(1800));
    gfade_in(600);
end

procedure Lighting
begin
    variable LVar0 := 0;
    LVar0 := game_time_hour;
    if ((LVar0 >= 600) and (LVar0 < 700)) then begin
        set_light_level(LVar0 - 600 + 40);
    end
    else begin
        if ((LVar0 >= 700) and (LVar0 < 1800)) then begin
            set_light_level(100);
        end
        else begin
            if ((LVar0 >= 1800) and (LVar0 < 1900)) then begin
                set_light_level(100 - (LVar0 - 1800));
            end
            else begin
                set_light_level(40);
            end
        end
    end
end

procedure Tandi_Move
begin
    variable LVar0 := 0;
    LVar0 := game_time_hour;
    if (LVar0 == 615) then begin
        Tandi_ptr := create_object_sid(16777256, 0, 0, SCRIPT_TANDI);
        move_to(Tandi_ptr, 13565, 0);
    end
    else begin
        if ((LVar0 > 615) and (LVar0 <= 645)) then begin
            Tandi_ptr := create_object_sid(16777256, 0, 0, SCRIPT_TANDI);
            move_to(Tandi_ptr, 18492, 0);
        end
        else begin
            if ((LVar0 > 645) and (LVar0 <= 650)) then begin
                Tandi_ptr := create_object_sid(16777256, 0, 0, SCRIPT_TANDI);
                move_to(Tandi_ptr, 13565, 0);
            end
            else begin
                if (LVar0 == 1305) then begin
                    Tandi_ptr := create_object_sid(16777256, 0, 0, SCRIPT_TANDI);
                    move_to(Tandi_ptr, 13565, 0);
                end
                else begin
                    if ((LVar0 > 1305) and (LVar0 <= 1600)) then begin
                        Tandi_ptr := create_object_sid(16777256, 0, 0, SCRIPT_TANDI);
                        move_to(Tandi_ptr, 23701, 0);
                    end
                    else begin
                        if ((LVar0 > 1600) and (LVar0 <= 1900)) then begin
                            Tandi_ptr := create_object_sid(16777256, 0, 0, SCRIPT_TANDI);
                            move_to(Tandi_ptr, 17279, 0);
                        end
                        else begin
                            if ((LVar0 > 1900) and (LVar0 <= 1905)) then begin
                                Tandi_ptr := create_object_sid(16777256, 0, 0, SCRIPT_TANDI);
                                move_to(Tandi_ptr, 13565, 0);
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure add_party
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    party_elevation := dude_elevation;
    if (global_var(GVAR_TANDI_STATUS) == 5) then begin
        if (Tandi_ptr == 0) then begin
        end
        critter_add_trait(Tandi_ptr, TRAIT_OBJECT, OBJECT_TEAM_NUM, 0);
    end
end

procedure update_party
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    if (dude_elevation != party_elevation) then begin
        party_elevation := dude_elevation;
        if (global_var(GVAR_IAN_STATUS) == 2) then begin
            if (Ian_ptr == 0) then begin
            end
            else begin
                move_to(Ian_ptr, tile_num_in_direction(dude_tile, 1, 2), dude_elevation);
            end
        end
        if (global_var(GVAR_DOG_EMPATHY)) then begin
            if (Dog_ptr == 0) then begin
            end
            else begin
                move_to(Dog_ptr, tile_num_in_direction(dude_tile, 2, 1), dude_elevation);
            end
        end
        if (global_var(GVAR_HERNANDEZ_STATUS) == 2) then begin
            if (Tycho_ptr == 0) then begin
            end
            else begin
                move_to(Tycho_ptr, tile_num_in_direction(dude_tile, 3, 2), dude_elevation);
            end
        end
        if (global_var(GVAR_KATJA_STATUS) == 2) then begin
            if (Katja_ptr == 0) then begin
            end
            else begin
                move_to(Katja_ptr, tile_num_in_direction(dude_tile, 4, 2), dude_elevation);
            end
        end
        if (global_var(GVAR_TANDI_STATUS) == 5) then begin
            if (Tandi_ptr == 0) then begin
            end
            else begin
                move_to(Tandi_ptr, tile_num_in_direction(dude_tile, 4, 4), dude_elevation);
            end
        end
    end
end

procedure remove_party
begin
    if (global_var(GVAR_IAN_STATUS) == 2) then begin
        set_global_var(GVAR_IAN_STATUS, 2);
    end
    if (global_var(GVAR_DOG_EMPATHY)) then begin
        set_global_var(GVAR_DOG_EMPATHY, 1);
    end
    if (global_var(GVAR_HERNANDEZ_STATUS) == 2) then begin
        set_global_var(GVAR_HERNANDEZ_STATUS, 2);
    end
    if (global_var(GVAR_KATJA_STATUS) == 2) then begin
        set_global_var(GVAR_KATJA_STATUS, 2);
    end
    if (global_var(GVAR_TANDI_STATUS) == 5) then begin
    end
end

procedure Darkness
begin
    set_light_level(40);
end

procedure Invasion
begin
    if (not(global_var(GVAR_MASTER_BLOWN) == 2)) then begin
        if (global_var(GVAR_NECROPOLIS_INVADED_DATE) > (game_time / (10 * 60 * 60 * 24))) then begin
            set_global_var(GVAR_NECROPOLIS_INVADED, 1);
        end
        if (global_var(GVAR_THE_HUB_INVADED_DATE) > (game_time / (10 * 60 * 60 * 24))) then begin
            set_global_var(GVAR_HUB_INVADED, 1);
        end
        if (global_var(GVAR_BROTHERHOOD_INVADED_DATE) > (game_time / (10 * 60 * 60 * 24))) then begin
            set_global_var(GVAR_BROTHERHOOD_INVADED, 1);
        end
        if (global_var(GVAR_JUNKTOWN_INVADED_DATE) > (game_time / (10 * 60 * 60 * 24))) then begin
            set_global_var(GVAR_JUNKTOWN_INVADED, 1);
        end
        if (global_var(GVAR_SHADY_SANDS_INVADED_DATE) > (game_time / (10 * 60 * 60 * 24))) then begin
            set_global_var(GVAR_SHADY_SANDS_INVADED, 1);
        end
        if (global_var(GVAR_VAULT_13_INVADED_DATE) <= 0) then begin
            set_global_var(GVAR_VAULT_INVADED, 1);
        end
        if (global_var(GVAR_FOLLOWERS_INVADED_DATE) > (game_time / (10 * 60 * 60 * 24))) then begin
            set_global_var(GVAR_FOLLOWERS_INVADED, 1);
        end
    end
end
