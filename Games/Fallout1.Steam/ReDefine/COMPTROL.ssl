procedure start;
procedure critter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;
procedure GenSupr00;
procedure GenSupr03;
procedure GenSupr03a;
procedure GenSupr03b;
procedure GenSupr04;
procedure GenSupr05;
procedure GenSupr06;
procedure GenSupr07;
procedure GenSupr08;
procedure GenSuprAlert;
procedure GenSuprxx;

variable initialized;
variable hostile;

import variable ignoring_dude;
import variable radio_computer;
import variable valid_target;


procedure start
begin
    if (not(initialized)) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 34);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_SUPER_MUTANT_AGGRESSIVE);
        initialized := 1;
    end
    else begin
        if (script_action == critter_proc) then begin
            call critter_p_proc();
        end
        else begin
            if (script_action == damage_proc) then begin
                call damage_p_proc();
            end
            else begin
                if (script_action == destroy_proc) then begin
                    call destroy_p_proc();
                end
                else begin
                    if (script_action == pickup_proc) then begin
                        call pickup_p_proc();
                    end
                    else begin
                        if (script_action == talk_proc) then begin
                            call talk_p_proc();
                        end
                        else begin
                            if (script_action == timed_event_proc) then begin
                                call timed_event_p_proc();
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure critter_p_proc
begin
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if (hostile) then begin
            hostile := 0;
            attack(dude_obj);
        end
        else begin
            if (global_var(GVAR_VATS_ALERT)) then begin
                hostile := 1;
            end
            else begin
                if (not(ignoring_dude)) then begin
                    if (tile_distance_objs(self_obj, dude_obj) < 12) then begin
                        dialogue_system_enter;
                    end
                end
            end
        end
    end
    if ((global_var(GVAR_DESTROY_VATS_1) >= 1) and (global_var(GVAR_DESTROY_VATS_1) <= 3)) then begin
        valid_target := self_obj;
    end
end

procedure damage_p_proc
begin
    set_map_var(13, 1);
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        set_global_var(GVAR_BAD_MONSTER, global_var(GVAR_BAD_MONSTER) + 1);
        if ((global_var(GVAR_BAD_MONSTER) % 6) == 0) then begin
            set_global_var(GVAR_PLAYER_REPUATION, global_var(GVAR_PLAYER_REPUATION) + 1);
        end
    end
    set_map_var(12, 3);
end

procedure pickup_p_proc
begin
    hostile := 1;
end

procedure talk_p_proc
begin
    if (global_var(GVAR_LIEUTENANTS_DEAD)) then begin
        call GenSupr08();
    end
    else begin
        if ((obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND)) == 3) or (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND)) == 3) and not(hostile)) then begin
            if (random(0, 5) == 5) then begin
                call GenSupr00();
            end
            else begin
                hostile := 1;
            end
        end
        else begin
            start_gdialog(433, self_obj, 4, -1, -1);
            gsay_start;
            call GenSupr03();
            gsay_end;
            end_dialogue;
        end
    end
end

procedure timed_event_p_proc
begin
    hostile := 1;
end

procedure GenSupr00
begin
    float_msg(self_obj, message_str(SCRIPT_GENSUPR, random(101, 103)), FLOAT_MSG_RED);
    hostile := 1;
end

procedure GenSupr03
begin
    gsay_reply(SCRIPT_GENSUPR, random(104, 106));
    giq_option(-3, SCRIPT_GENSUPR, 107, GenSupr04, BAD_REACTION);
    giq_option(4, SCRIPT_GENSUPR, 108, GenSupr04, BAD_REACTION);
    giq_option(5, SCRIPT_GENSUPR, 109, GenSupr05, NEUTRAL_REACTION);
    giq_option(6, SCRIPT_GENSUPR, 110, GenSupr03a, NEUTRAL_REACTION);
    if (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 113) then begin
        giq_option(6, SCRIPT_GENSUPR, 111, GenSupr03b, NEUTRAL_REACTION);
    end
end

procedure GenSupr03a
begin
    if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
        call GenSupr07();
    end
    else begin
        call GenSupr06();
    end
end

procedure GenSupr03b
begin
    if (is_success(roll_vs_skill(dude_obj, 14, 25))) then begin
        call GenSupr07();
    end
    else begin
        call GenSupr06();
    end
end

procedure GenSupr04
begin
    hostile := 1;
    gsay_message(SCRIPT_GENSUPR, random(112, 114), BAD_REACTION);
end

procedure GenSupr05
begin
    gsay_reply(SCRIPT_GENSUPR, 115);
    giq_option(5, SCRIPT_GENSUPR, 116, GenSuprxx, NEUTRAL_REACTION);
    giq_option(5, SCRIPT_GENSUPR, 117, GenSuprAlert, BAD_REACTION);
end

procedure GenSupr06
begin
    hostile := 1;
    gsay_message(SCRIPT_GENSUPR, random(118, 120), BAD_REACTION);
end

procedure GenSupr07
begin
    ignoring_dude := 1;
    gsay_message(SCRIPT_GENSUPR, random(121, 123), NEUTRAL_REACTION);
end

procedure GenSupr08
begin
    float_msg(self_obj, message_str(SCRIPT_GENSUPR, random(124, 127)), FLOAT_MSG_RED);
    hostile := 1;
end

procedure GenSuprAlert
begin
    set_global_var(GVAR_VATS_ALERT, 1);
    use_obj(radio_computer);
    add_timer_event(self_obj, game_ticks(5), 1);
end

procedure GenSuprxx
begin
end
