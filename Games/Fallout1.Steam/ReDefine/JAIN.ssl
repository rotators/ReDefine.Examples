procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure damage_p_proc;
procedure Jain00;
procedure Jain01;
procedure Jain02;
procedure Jain03;
procedure Jain04;
procedure Jain05;
procedure Jain06;
procedure Jain07;
procedure Jain08;
procedure Jain09;
procedure Jain10;
procedure Jain11;
procedure Jain12;
procedure Jain13;
procedure Jain14;
procedure Jain15;
procedure Jain16;
procedure Jain17;
procedure Jain18;
procedure Jain19;
procedure Jain20;
procedure Jain21;
procedure Jain22;
procedure Jain23;
procedure Jain24;
procedure Jain25;
procedure Jain26;
procedure Jain27;
procedure Jain28;
procedure Jain29;
procedure Jain30;
procedure Jain31;
procedure Jain32;
procedure Jain33;
procedure Jain34;
procedure Jain35;
procedure Jain36;
procedure Jain37;
procedure Jain38;
procedure Jain39;
procedure JainEnd;
procedure JainEndCombat;

variable hostile;
variable Only_Once := 1;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure start
begin
    if (Only_Once) then begin
        Only_Once := 0;
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 72);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_COC_HUB_BRAINWASHED);
    end
    if (script_action == look_at_proc) then begin
        call look_at_p_proc();
    end
    else begin
        if (script_action == pickup_proc) then begin
            call pickup_p_proc();
        end
        else begin
            if (script_action == talk_proc) then begin
                call talk_p_proc();
            end
            else begin
                if (script_action == critter_proc) then begin
                    call critter_p_proc();
                end
                else begin
                    if (script_action == destroy_proc) then begin
                        call destroy_p_proc();
                    end
                end
            end
        end
    end
end

procedure combat
begin
    hostile := 1;
end

procedure critter_p_proc
begin
    if (hostile) then begin
        hostile := 0;
        attack(dude_obj);
    end
    if ((map_var(6) == 1) and (obj_can_see_obj(self_obj, dude_obj) == 1)) then begin
        call combat();
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        hostile := 1;
    end
end

procedure talk_p_proc
begin
    call get_reaction();
    if (map_var(0) == 1) then begin
        start_gdialog(46, self_obj, 4, 18, 3);
        gsay_start;
        call Jain29();
        gsay_end;
        end_dialogue;
    end
    else begin
        if (global_var(GVAR_MASTER_BLOWN) == 1) then begin
            start_gdialog(46, self_obj, 4, 18, 3);
            gsay_start;
            call Jain30();
            gsay_end;
            end_dialogue;
        end
        else begin
            if (local_var(4) == 0) then begin
                set_local_var(4, 1);
                start_gdialog(46, self_obj, 4, 18, 3);
                gsay_start;
                call Jain00();
                gsay_end;
                end_dialogue;
            end
            else begin
                if (local_var(1) >= 2) then begin
                    start_gdialog(46, self_obj, 4, 18, 3);
                    gsay_start;
                    call Jain27();
                    gsay_end;
                    end_dialogue;
                end
                else begin
                    start_gdialog(46, self_obj, 4, 18, 3);
                    gsay_start;
                    call Jain29();
                    gsay_end;
                    end_dialogue;
                end
            end
        end
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        set_global_var(GVAR_BAD_MONSTER, global_var(GVAR_BAD_MONSTER) + 1);
        if ((global_var(GVAR_BAD_MONSTER) % 6) == 0) then begin
            set_global_var(GVAR_PLAYER_REPUATION, global_var(GVAR_PLAYER_REPUATION) + 1);
        end
    end
    set_global_var(GVAR_KILL_JAIN, 2);
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure damage_p_proc
begin
    variable LVar0 := 0;
    LVar0 := obj_pid(source_obj);
    if (party_member_obj(LVar0) != 0) then begin
        set_map_var(6, 1);
    end
end

procedure Jain00
begin
    Reply(101);
    giq_option(4, NAME, 102, Jain04, NEUTRAL_REACTION);
    giq_option(4, NAME, 103, Jain07, NEUTRAL_REACTION);
    giq_option(4, NAME, 104, Jain10, NEUTRAL_REACTION);
    giq_option(-3, NAME, 105, Jain02, NEUTRAL_REACTION);
end

procedure Jain01
begin
    Reply(106);
    giq_option(-3, NAME, 107, Jain03, NEUTRAL_REACTION);
    giq_option(-3, NAME, 108, Jain02, NEUTRAL_REACTION);
end

procedure Jain02
begin
    gsay_message(NAME, 109, BAD_REACTION);
    call JainEndCombat();
end

procedure Jain03
begin
    set_map_var(0, 1);
    gsay_message(NAME, 110, NEUTRAL_REACTION);
end

procedure Jain04
begin
    Reply(111);
    giq_option(4, NAME, 112, Jain05, NEUTRAL_REACTION);
    giq_option(4, NAME, 113, Jain03, NEUTRAL_REACTION);
end

procedure Jain05
begin
    set_map_var(0, 1);
    gsay_message(NAME, 114, BAD_REACTION);
end

procedure Jain06
begin
end

procedure Jain07
begin
    Reply(115);
    giq_option(4, NAME, 116, Jain10, NEUTRAL_REACTION);
    giq_option(4, NAME, 117, Jain09, NEUTRAL_REACTION);
    giq_option(4, NAME, 118, Jain08, BAD_REACTION);
    giq_option(4, NAME, 119, JainEnd, NEUTRAL_REACTION);
end

procedure Jain08
begin
    gsay_message(NAME, 120, BAD_REACTION);
    call JainEndCombat();
end

procedure Jain09
begin
    call BigDownReact();
    gsay_message(NAME, 121, BAD_REACTION);
    call JainEndCombat();
end

procedure Jain10
begin
    Reply(122);
    giq_option(4, NAME, 123, Jain11, GOOD_REACTION);
    giq_option(4, NAME, 124, Jain26, BAD_REACTION);
    giq_option(4, NAME, 125, Jain20, NEUTRAL_REACTION);
end

procedure Jain11
begin
    call UpReact();
    Reply(126);
    giq_option(4, NAME, 127, Jain17, BAD_REACTION);
    giq_option(4, NAME, 128, Jain13, NEUTRAL_REACTION);
    giq_option(4, NAME, 129, Jain12, NEUTRAL_REACTION);
end

procedure Jain12
begin
    set_map_var(0, 1);
    Reply(130);
    giq_option(4, NAME, 131, JainEnd, NEUTRAL_REACTION);
    giq_option(4, NAME, 132, JainEndCombat, BAD_REACTION);
end

procedure Jain13
begin
    Reply(133);
    giq_option(4, NAME, 134, Jain14, NEUTRAL_REACTION);
    giq_option(4, NAME, 135, Jain15, BAD_REACTION);
end

procedure Jain14
begin
    Reply(136);
    giq_option(4, NAME, 137, Jain20, GOOD_REACTION);
    giq_option(4, NAME, 138, Jain09, BAD_REACTION);
    giq_option(4, NAME, 139, Jain15, BAD_REACTION);
end

procedure Jain15
begin
    call DownReact();
    gsay_message(NAME, 140, NEUTRAL_REACTION);
end

procedure Jain16
begin
end

procedure Jain17
begin
    Reply(141);
    giq_option(4, NAME, 142, Jain18, BAD_REACTION);
    giq_option(4, NAME, 143, Jain19, NEUTRAL_REACTION);
end

procedure Jain18
begin
    call DownReact();
    gsay_message(NAME, 144, BAD_REACTION);
end

procedure Jain19
begin
    Reply(145);
    giq_option(4, NAME, 146, Jain13, NEUTRAL_REACTION);
    giq_option(4, NAME, 147, JainEnd, NEUTRAL_REACTION);
end

procedure Jain20
begin
    call UpReact();
    Reply(148);
    giq_option(4, NAME, 149, Jain21, NEUTRAL_REACTION);
    giq_option(4, NAME, 150, Jain22, NEUTRAL_REACTION);
end

procedure Jain21
begin
    Reply(151);
    giq_option(4, NAME, 152, Jain38, NEUTRAL_REACTION);
    giq_option(4, NAME, 153, JainEndCombat, BAD_REACTION);
    giq_option(4, NAME, 154, Jain37, NEUTRAL_REACTION);
    giq_option(4, NAME, 155, JainEnd, NEUTRAL_REACTION);
end

procedure Jain22
begin
    Reply(156);
    giq_option(4, NAME, 157, Jain37, NEUTRAL_REACTION);
    giq_option(4, NAME, 158, Jain15, BAD_REACTION);
    giq_option(4, NAME, 159, JainEnd, NEUTRAL_REACTION);
end

procedure Jain23
begin
end

procedure Jain24
begin
end

procedure Jain25
begin
end

procedure Jain26
begin
    call BigDownReact();
    Reply(161);
    giq_option(4, NAME, 161, Jain19, NEUTRAL_REACTION);
    giq_option(4, NAME, 162, JainEndCombat, NEUTRAL_REACTION);
end

procedure Jain27
begin
    Reply(163);
    giq_option(4, NAME, 164, Jain36, NEUTRAL_REACTION);
    giq_option(4, NAME, 165, Jain28, BAD_REACTION);
    giq_option(4, NAME, 166, JainEnd, NEUTRAL_REACTION);
    giq_option(-3, NAME, 167, Jain39, NEUTRAL_REACTION);
    giq_option(-3, NAME, 168, Jain34, NEUTRAL_REACTION);
end

procedure Jain28
begin
    call BigDownReact();
    set_map_var(0, 1);
    gsay_message(NAME, 169, NEUTRAL_REACTION);
end

procedure Jain29
begin
    gsay_message(NAME, 170, NEUTRAL_REACTION);
end

procedure Jain30
begin
    Reply(171);
    giq_option(4, NAME, 172, Jain31, NEUTRAL_REACTION);
    giq_option(4, NAME, 173, Jain32, NEUTRAL_REACTION);
    giq_option(-3, NAME, 174, Jain39, NEUTRAL_REACTION);
    giq_option(-3, NAME, 175, JainEnd, NEUTRAL_REACTION);
end

procedure Jain31
begin
    gsay_message(NAME, 176, BAD_REACTION);
    call JainEndCombat();
end

procedure Jain32
begin
    Reply(177);
    giq_option(4, NAME, 178, Jain33, NEUTRAL_REACTION);
    giq_option(4, NAME, 179, JainEnd, NEUTRAL_REACTION);
end

procedure Jain33
begin
    gsay_message(NAME, 180, NEUTRAL_REACTION);
end

procedure Jain34
begin
    set_map_var(0, 1);
    gsay_message(NAME, 181, BAD_REACTION);
end

procedure Jain35
begin
    set_map_var(0, 1);
    gsay_message(NAME, 182, BAD_REACTION);
end

procedure Jain36
begin
    Reply(183);
    giq_option(4, NAME, 184, Jain14, NEUTRAL_REACTION);
    giq_option(4, NAME, 185, JainEnd, NEUTRAL_REACTION);
end

procedure Jain37
begin
    call UpReact();
    gsay_message(NAME, 186, GOOD_REACTION);
end

procedure Jain38
begin
    gsay_message(NAME, 187, NEUTRAL_REACTION);
end

procedure Jain39
begin
    gsay_message(NAME, 188, NEUTRAL_REACTION);
end

procedure JainEnd
begin
end

procedure JainEndCombat
begin
    call BottomReact();
    set_map_var(0, 1);
    call combat();
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * dude_charisma) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence)));
        if (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality)) then begin
            if (global_var(GVAR_PLAYER_REPUATION) > 0) then begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
        end
        if (global_var(GVAR_CHILDKILLER_REPUATION) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(SCRIPT_MODREACT, random(100, 105));
end
