procedure start;
procedure critter_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure Repair_Attempt;

variable hostile;
variable initialized;

import variable valid_target;


procedure start
begin
    if (not(initialized)) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 34);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_ROBOTS);
        initialized := 1;
    end
    if (global_var(GVAR_DESTROY_VATS_1) == 2) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 85);
    end
    if (script_action == critter_proc) then begin
        call critter_p_proc();
    end
    else begin
        if (script_action == description_proc) then begin
            call description_p_proc();
        end
        else begin
            if (script_action == use_skill_on_proc) then begin
                call use_skill_on_p_proc();
            end
        end
    end
end

procedure critter_p_proc
begin
    if (hostile) then begin
        hostile := 0;
        attack(dude_obj);
    end
    if (global_var(GVAR_DESTROY_VATS_3) == 0) then begin
        if ((critter_state(self_obj) bwand 64) == 0) then begin
            critter_injure(self_obj, 64);
        end
    end
    if (global_var(GVAR_DESTROY_VATS_2) != 0) then begin
        if ((critter_state(self_obj) bwand 4) == 0) then begin
            critter_injure(self_obj, 4);
        end
    end
    if (global_var(GVAR_DESTROY_VATS_2) == 2) then begin
        if ((critter_state(self_obj) bwand 8) == 0) then begin
            critter_injure(self_obj, 8);
        end
    end
    if (global_var(GVAR_VATS_ALERT) == 1) then begin
        if (global_var(GVAR_DESTROY_VATS_1) == 0) then begin
            if (obj_can_see_obj(self_obj, dude_obj)) then begin
                hostile := 1;
            end
        end
        else begin
            if (global_var(GVAR_DESTROY_VATS_1) == 1) then begin
                if (obj_can_see_obj(self_obj, valid_target)) then begin
                    attack(valid_target);
                end
            end
            else begin
                if (global_var(GVAR_DESTROY_VATS_1) == 2) then begin
                    if (obj_can_see_obj(self_obj, valid_target)) then begin
                        attack(valid_target);
                    end
                end
                else begin
                    if (global_var(GVAR_DESTROY_VATS_1) == 3) then begin
                        if (obj_can_see_obj(self_obj, dude_obj)) then begin
                            hostile := 1;
                        end
                        else begin
                            if (obj_can_see_obj(self_obj, valid_target)) then begin
                                attack(valid_target);
                            end
                        end
                    end
                end
            end
        end
        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(1, 3)), 0);
    end
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(0)) then begin
        display_mstr(100);
    end
    else begin
        display_mstr(101);
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 13) then begin
        if (local_var(0) == 0) then begin
            call Repair_Attempt();
        end
    end
    else begin
        if (action_being_used == 10) then begin
            script_overrides;
        end
    end
end

procedure Repair_Attempt
begin
    variable LVar0 := 0;
    game_time_advance(game_ticks(1200));
    LVar0 := roll_vs_skill(dude_obj, 13, 0);
    if (not(local_var(1)) and is_success(LVar0)) then begin
        display_mstr(102);
        set_local_var(0, 1);
    end
    else begin
        display_mstr(103);
        set_local_var(1, 1);
    end
end
