procedure start;
procedure use_p_proc;
procedure use_skill_on_p_proc;
procedure look_at_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;


procedure start
begin
    if (script_action == look_at_proc) then begin
        call look_at_p_proc();
    end
    else begin
        if (script_action == use_proc) then begin
            call use_p_proc();
        end
        else begin
            if (script_action == use_skill_on_proc) then begin
                call use_skill_on_p_proc();
            end
            else begin
                if (script_action == use_obj_on_proc) then begin
                    call use_obj_on_p_proc();
                end
                else begin
                    if (script_action == damage_proc) then begin
                        call damage_p_proc();
                    end
                end
            end
        end
    end
end

procedure use_p_proc
begin
    script_overrides;
    if (source_obj == dude_obj) then begin
        display_msg(message_str(SCRIPT_MBOUT2IN, 104));
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 9) then begin
        script_overrides;
        display_msg(message_str(SCRIPT_MBOUT2IN, 104));
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(SCRIPT_MBOUT2IN, 100));
end

procedure use_obj_on_p_proc
begin
    variable LVar0 := 0;
    LVar0 := obj_being_used_with;
    if (obj_pid(LVar0) == 84) then begin
        script_overrides;
        display_msg(message_str(SCRIPT_MBOUT2IN, 104));
    end
end

procedure damage_p_proc
begin
    script_overrides;
    display_msg(message_str(SCRIPT_MBOUT2IN, 106));
end
