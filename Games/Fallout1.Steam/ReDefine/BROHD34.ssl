variable HEREBEFORE;
variable Player_Elevation;

export variable term1_ptr;
export variable term2_ptr;
export variable term3_ptr;
export variable term4_ptr;
export variable term5_ptr;
export variable term6_ptr;
export variable term7_ptr;
export variable term8_ptr;
export variable Vree_ptr;
export variable table_ptr;

procedure start;
procedure add_party;
procedure update_party;
procedure remove_party;

variable party_elevation;
variable dude_start_hex;

export variable Ian_ptr;
export variable Dog_ptr;
export variable Tycho_ptr;
export variable Katja_ptr;
export variable Tandi_ptr;


procedure start
begin
    if (script_action == map_enter_proc) then begin
        if ((game_time / (10 * 60 * 60 * 24)) >= global_var(GVAR_BROTHERHOOD_INVADED_DATE)) then begin
            set_global_var(GVAR_BROTHERHOOD_INVADED, 1);
        end
        Player_Elevation := dude_elevation;
        if (global_var(GVAR_LOAD_MAP_INDEX) == 4) then begin
            override_map_start(138, 108, 0, 5);
        end
        else begin
            if (global_var(GVAR_LOAD_MAP_INDEX) == 5) then begin
                override_map_start(140, 107, 1, 5);
            end
            else begin
                override_map_start(138, 108, 0, 5);
            end
        end
        call add_party();
    end
    else begin
        if (script_action == map_update_proc) then begin
            if (dude_elevation == 0) then begin
                set_global_var(GVAR_MARK_BROTHER_4, 1);
            end
            else begin
                set_global_var(GVAR_MARK_BROTHER_5, 1);
            end
            call update_party();
        end
        else begin
            if (script_action == map_exit_proc) then begin
                call remove_party();
            end
        end
    end
end

procedure add_party
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    party_elevation := dude_elevation;
    if (global_var(GVAR_TANDI_STATUS) == 5) then begin
        if (Tandi_ptr == 0) then begin
        end
        critter_add_trait(Tandi_ptr, TRAIT_OBJECT, OBJECT_TEAM_NUM, 0);
    end
end

procedure update_party
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    if (dude_elevation != party_elevation) then begin
        party_elevation := dude_elevation;
        if (global_var(GVAR_IAN_STATUS) == 2) then begin
            if (Ian_ptr == 0) then begin
            end
            else begin
                move_to(Ian_ptr, tile_num_in_direction(dude_tile, 1, 2), dude_elevation);
            end
        end
        if (global_var(GVAR_DOG_EMPATHY)) then begin
            if (Dog_ptr == 0) then begin
            end
            else begin
                move_to(Dog_ptr, tile_num_in_direction(dude_tile, 2, 1), dude_elevation);
            end
        end
        if (global_var(GVAR_HERNANDEZ_STATUS) == 2) then begin
            if (Tycho_ptr == 0) then begin
            end
            else begin
                move_to(Tycho_ptr, tile_num_in_direction(dude_tile, 3, 2), dude_elevation);
            end
        end
        if (global_var(GVAR_KATJA_STATUS) == 2) then begin
            if (Katja_ptr == 0) then begin
            end
            else begin
                move_to(Katja_ptr, tile_num_in_direction(dude_tile, 4, 2), dude_elevation);
            end
        end
        if (global_var(GVAR_TANDI_STATUS) == 5) then begin
            if (Tandi_ptr == 0) then begin
            end
            else begin
                move_to(Tandi_ptr, tile_num_in_direction(dude_tile, 4, 4), dude_elevation);
            end
        end
    end
end

procedure remove_party
begin
    if (global_var(GVAR_IAN_STATUS) == 2) then begin
        set_global_var(GVAR_IAN_STATUS, 2);
    end
    if (global_var(GVAR_DOG_EMPATHY)) then begin
        set_global_var(GVAR_DOG_EMPATHY, 1);
    end
    if (global_var(GVAR_HERNANDEZ_STATUS) == 2) then begin
        set_global_var(GVAR_HERNANDEZ_STATUS, 2);
    end
    if (global_var(GVAR_KATJA_STATUS) == 2) then begin
        set_global_var(GVAR_KATJA_STATUS, 2);
    end
    if (global_var(GVAR_TANDI_STATUS) == 5) then begin
    end
end
