procedure start;
procedure combat_p_proc;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure flee_dude;

variable hostile;
variable initialized;
variable round_counter;
variable scared;

import variable random_seed_1;


procedure start
begin
    if (not(initialized)) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 44);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_BROTHERHOOD_PALADIN);
        hostile := global_var(GVAR_SAVE_TANDI_5);
        initialized := 1;
    end
    else begin
        if (script_action == combat_proc) then begin
            call combat_p_proc();
        end
        else begin
            if (script_action == critter_proc) then begin
                call critter_p_proc();
            end
            else begin
                if (script_action == destroy_proc) then begin
                    call destroy_p_proc();
                end
                else begin
                    if (script_action == pickup_proc) then begin
                        call pickup_p_proc();
                    end
                    else begin
                        if (script_action == talk_proc) then begin
                            call talk_p_proc();
                        end
                    end
                end
            end
        end
    end
end

procedure combat_p_proc
begin
    if (fixed_param == 4) then begin
        round_counter := round_counter + 1;
        if (get_critter_stat(self_obj, STAT_current_hp) < 10) then begin
            scared := 1;
        end
    end
end

procedure critter_p_proc
begin
    if (scared) then begin
        if (tile_distance_objs(self_obj, dude_obj) < 8) then begin
            call flee_dude();
        end
    end
    else begin
        if (hostile) then begin
            hostile := 0;
            attack(dude_obj);
        end
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        random_seed_1 := 1;
        if (source_obj == dude_obj) then begin
            if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
                set_global_var(GVAR_BERSERKER_REPUTATION, 1);
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
            end
            if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 1);
                set_global_var(GVAR_BERSERKER_REPUTATION, 0);
            end
            set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
            if ((global_var(GVAR_GOOD_MONSTER) % 2) == 0) then begin
                set_global_var(GVAR_PLAYER_REPUATION, global_var(GVAR_PLAYER_REPUATION) - 1);
            end
        end
        set_global_var(GVAR_ENEMY_BROTHERHOOD, 1);
    end
end

procedure pickup_p_proc
begin
    if (not(scared)) then begin
        hostile := 1;
        set_global_var(GVAR_SAVE_TANDI_5, 1);
    end
end

procedure talk_p_proc
begin
    if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
        set_global_var(GVAR_BERSERKER_REPUTATION, 1);
        set_global_var(GVAR_CHAMPION_REPUTATION, 0);
    end
    if (scared) then begin
        float_msg(self_obj, mstr(101), FLOAT_MSG_RED);
    end
    else begin
        if ((global_var(GVAR_ENEMY_BROTHERHOOD) == 1) or (random_seed_1 == 1)) then begin
            float_msg(self_obj, mstr(100), FLOAT_MSG_RED);
            set_global_var(GVAR_SAVE_TANDI_5, 1);
            hostile := 1;
        end
        else begin
            if (global_var(GVAR_BROTHERHOOD_SEED) == 2) then begin
                float_msg(self_obj, mstr(102), FLOAT_MSG_BLUE);
            end
            else begin
                if ((global_var(GVAR_PLAYER_REPUATION) < -20) or (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) or (global_var(GVAR_CHILDKILLER_REPUATION) > 2)) then begin
                    float_msg(self_obj, mstr(104), FLOAT_MSG_RED);
                end
                else begin
                    float_msg(self_obj, mstr(103), FLOAT_MSG_GREEN);
                end
            end
        end
    end
end

procedure flee_dude
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    while (LVar1 < 5) do begin
        if (tile_distance(dude_tile, tile_num_in_direction(tile_num(self_obj), LVar1, 3)) > LVar2) then begin
            LVar0 := tile_num_in_direction(tile_num(self_obj), LVar1, 3);
            LVar2 := tile_distance(dude_tile, LVar0);
        end
        LVar1 := LVar1 + 1;
    end
    animate_move_obj_to_tile(self_obj, LVar0, 1);
end
