procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure Maxson01;
procedure Maxson02;
procedure Maxson02a;
procedure Maxson03;
procedure Maxson04;
procedure Maxson04a;
procedure Maxson05;
procedure Maxson06;
procedure Maxson07;
procedure Maxson08;
procedure Maxson08a;
procedure Maxson09;
procedure Maxson09a;
procedure Maxson10;
procedure Maxson11;
procedure Maxson12;
procedure Maxson13;
procedure Maxson14;
procedure Maxson15;
procedure Maxson16;
procedure Maxson17;
procedure Maxson18;
procedure Maxson19;
procedure Maxson20;
procedure Maxson21;
procedure Maxson22;
procedure Maxson23;
procedure Maxson24;
procedure Maxson25;
procedure Maxson26;
procedure Maxson27;
procedure Maxson28;
procedure Maxson29;
procedure Maxson30;
procedure Maxson31;
procedure Maxson32;
procedure Maxson33;
procedure Maxson34;
procedure Maxson35;
procedure MaxsonEnd;
procedure Remove_Player;

variable hostile;
variable Only_Once := 1;
variable Denounce_Player;
variable Asked_For_1000;
variable temp;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure start
begin
    if (Only_Once) then begin
        Only_Once := 0;
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 44);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_BOS_ELDERS);
    end
    if (script_action == look_at_proc) then begin
        call look_at_p_proc();
    end
    else begin
        if (script_action == pickup_proc) then begin
            call pickup_p_proc();
        end
        else begin
            if (script_action == talk_proc) then begin
                call talk_p_proc();
            end
            else begin
                if (script_action == critter_proc) then begin
                    call critter_p_proc();
                end
                else begin
                    if (script_action == destroy_proc) then begin
                        call destroy_p_proc();
                    end
                end
            end
        end
    end
end

procedure combat
begin
    hostile := 1;
end

procedure critter_p_proc
begin
    if (global_var(GVAR_ENEMY_BROTHERHOOD)) then begin
        hostile := 1;
    end
    if (tile_distance_objs(self_obj, dude_obj) > 12) then begin
        hostile := 0;
    end
    if (hostile) then begin
        set_global_var(GVAR_ENEMY_BROTHERHOOD, 1);
        hostile := 0;
        attack(dude_obj);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        hostile := 1;
    end
end

procedure talk_p_proc
begin
    call get_reaction();
    start_gdialog(52, self_obj, 4, 12, 5);
    gsay_start;
    if ((global_var(GVAR_BROTHERHOOD_INVASION) == 1) or (global_var(GVAR_BROTHERHOOD_INVASION) == 2)) then begin
        call Maxson34();
    end
    else begin
        if (global_var(GVAR_VATS_BLOWN) == 1) then begin
            call Maxson22();
        end
        else begin
            if (local_var(5) == 1) then begin
                call Maxson22();
            end
            else begin
                if (global_var(GVAR_THE_VATS) == 2) then begin
                    call Maxson20();
                end
                else begin
                    if (local_var(4) == 0) then begin
                        set_local_var(4, 1);
                        call Maxson01();
                    end
                    else begin
                        if (local_var(1) == 1) then begin
                            call Maxson21();
                        end
                        else begin
                            call Maxson19();
                        end
                    end
                end
            end
        end
    end
    gsay_end;
    end_dialogue;
    if (local_var(8) == 1) then begin
        set_local_var(8, 2);
        temp := 1500;
        display_msg(mstr(351) + temp + mstr(352));
        give_exp_points(temp);
    end
    if (Denounce_Player == 1) then begin
        call Remove_Player();
    end
end

procedure destroy_p_proc
begin
    set_global_var(GVAR_ENEMY_BROTHERHOOD, 1);
    rm_timer_event(self_obj);
    if (source_obj == dude_obj) then begin
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if ((global_var(GVAR_GOOD_MONSTER) % 2) == 0) then begin
            set_global_var(GVAR_PLAYER_REPUATION, global_var(GVAR_PLAYER_REPUATION) - 1);
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure Maxson01
begin
    Reply(106);
    giq_option(-3, NAME, 333, Maxson32, NEUTRAL_REACTION);
    if (global_var(GVAR_MISSING_CARAVAN) == 2) then begin
        giq_option(4, NAME, 300, Maxson14, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_MISSING_CARAVAN) == 1) then begin
        giq_option(4, NAME, 301, Maxson06, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 349, Maxson27, NEUTRAL_REACTION);
    giq_option(4, NAME, 350, Maxson18, NEUTRAL_REACTION);
end

procedure Maxson02
begin
    Reply(162);
    giq_option(4, NAME, 302, Maxson04, NEUTRAL_REACTION);
    giq_option(4, NAME, 303, Maxson09, NEUTRAL_REACTION);
    giq_option(4, NAME, 304, Maxson02a, BAD_REACTION);
    giq_option(4, NAME, 305, Maxson08, NEUTRAL_REACTION);
end

procedure Maxson02a
begin
    if (is_success(roll_vs_skill(dude_obj, 15, 0))) then begin
        Asked_For_1000 := 1;
        call Maxson09();
    end
    else begin
        call Maxson12();
    end
end

procedure Maxson03
begin
end

procedure Maxson04
begin
    Reply(133);
    giq_option(4, NAME, 306, Maxson04a, NEUTRAL_REACTION);
    giq_option(4, NAME, 307, Maxson27, NEUTRAL_REACTION);
    giq_option(4, NAME, 308, MaxsonEnd, NEUTRAL_REACTION);
end

procedure Maxson04a
begin
    set_map_var(20, 1);
    call Maxson05();
end

procedure Maxson05
begin
    Reply(276);
    giq_option(4, NAME, 309, MaxsonEnd, NEUTRAL_REACTION);
end

procedure Maxson06
begin
    Reply(122);
    giq_option(4, NAME, 310, Maxson07, NEUTRAL_REACTION);
    giq_option(4, NAME, 311, Maxson02, NEUTRAL_REACTION);
end

procedure Maxson07
begin
    if (dude_gender == 0) then begin
        Reply(355);
    end
    else begin
        Reply(356);
    end
    giq_option(4, NAME, 312, Maxson14, NEUTRAL_REACTION);
    giq_option(4, NAME, 313, Maxson13, NEUTRAL_REACTION);
end

procedure Maxson08
begin
    Reply(184);
    giq_option(4, NAME, 314, Maxson18, NEUTRAL_REACTION);
    giq_option(4, NAME, 315, Maxson04a, NEUTRAL_REACTION);
    giq_option(4, NAME, 316, Maxson08a, NEUTRAL_REACTION);
end

procedure Maxson08a
begin
    if (is_success(roll_vs_skill(dude_obj, 15, -20))) then begin
        call Maxson04();
    end
    else begin
        call Maxson10();
    end
end

procedure Maxson09
begin
    Reply(223);
    giq_option(4, NAME, 317, Maxson09a, BAD_REACTION);
    giq_option(4, NAME, 318, Maxson18, NEUTRAL_REACTION);
    giq_option(4, NAME, 319, MaxsonEnd, NEUTRAL_REACTION);
end

procedure Maxson09a
begin
    if (is_success(roll_vs_skill(dude_obj, 15, -10))) then begin
        call Maxson10();
    end
    else begin
        call Maxson11();
    end
end

procedure Maxson10
begin
    if (Asked_For_1000) then begin
        item_caps_adjust(dude_obj, 1000);
    end
    else begin
        item_caps_adjust(dude_obj, 500);
    end
    call DownReact();
    Reply(226);
    giq_option(4, NAME, 320, MaxsonEnd, BAD_REACTION);
end

procedure Maxson11
begin
    gsay_message(NAME, 229, BAD_REACTION);
    Denounce_Player := 1;
end

procedure Maxson12
begin
    gsay_message(NAME, 229, BAD_REACTION);
    Denounce_Player := 1;
end

procedure Maxson13
begin
    gsay_message(NAME, 231, BAD_REACTION);
    Denounce_Player := 1;
end

procedure Maxson14
begin
    Reply(146);
    giq_option(4, NAME, 321, Maxson02, NEUTRAL_REACTION);
end

procedure Maxson15
begin
    Reply(141);
    giq_option(4, NAME, 322, Maxson02, NEUTRAL_REACTION);
    giq_option(4, NAME, 323, Maxson16, NEUTRAL_REACTION);
end

procedure Maxson16
begin
    Reply(223);
    giq_option(4, NAME, 324, Maxson17, NEUTRAL_REACTION);
    giq_option(4, NAME, 325, Maxson18, NEUTRAL_REACTION);
    giq_option(4, NAME, 326, Maxson17, NEUTRAL_REACTION);
end

procedure Maxson17
begin
    Reply(168);
    giq_option(4, NAME, 327, MaxsonEnd, BAD_REACTION);
end

procedure Maxson18
begin
    gsay_message(NAME, 222, NEUTRAL_REACTION);
end

procedure Maxson19
begin
    Reply(201);
    giq_option(-3, NAME, 333, Maxson32, NEUTRAL_REACTION);
    if (global_var(GVAR_MISSING_CARAVAN) == 2) then begin
        giq_option(4, NAME, 329, Maxson14, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_MISSING_CARAVAN) == 1) then begin
        giq_option(4, NAME, 330, Maxson06, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 332, Maxson27, NEUTRAL_REACTION);
    giq_option(4, NAME, 331, Maxson18, NEUTRAL_REACTION);
end

procedure Maxson20
begin
    Reply(193);
    giq_option(-3, NAME, 333, Maxson32, NEUTRAL_REACTION);
    giq_option(4, NAME, 334, Maxson22, NEUTRAL_REACTION);
    giq_option(4, NAME, 335, Maxson27, NEUTRAL_REACTION);
    giq_option(4, NAME, 336, Maxson18, NEUTRAL_REACTION);
end

procedure Maxson21
begin
    Reply(201);
    giq_option(-3, NAME, 333, Maxson32, NEUTRAL_REACTION);
    giq_option(4, NAME, 334, Maxson22, NEUTRAL_REACTION);
    giq_option(4, NAME, 335, Maxson27, NEUTRAL_REACTION);
    giq_option(4, NAME, 336, Maxson18, NEUTRAL_REACTION);
end

procedure Maxson22
begin
    temp := local_var(7);
    Reply(205);
    if ((temp == 0) and (global_var(GVAR_THE_VATS) != 2)) then begin
        giq_option(4, NAME, 337, Maxson18, NEUTRAL_REACTION);
    end
    else begin
        if ((temp == 0) and (global_var(GVAR_THE_VATS) == 2) and (global_var(GVAR_MASTERS_LAIR) == 2)) then begin
            giq_option(4, NAME, 339, Maxson23, NEUTRAL_REACTION);
        end
        else begin
            if ((temp == 0) and (global_var(GVAR_THE_VATS) == 2) and (global_var(GVAR_MASTERS_LAIR) != 2)) then begin
                giq_option(4, NAME, 338, Maxson23, NEUTRAL_REACTION);
            end
        end
    end
    if (global_var(GVAR_VATS_BLOWN) == 1) then begin
        giq_option(4, NAME, 400, Maxson35, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 335, Maxson27, NEUTRAL_REACTION);
    giq_option(4, NAME, 336, Maxson18, NEUTRAL_REACTION);
end

procedure Maxson23
begin
    set_local_var(7, 1);
    set_local_var(8, 1);
    Reply(213);
    giq_option(4, NAME, 340, Maxson24, NEUTRAL_REACTION);
end

procedure Maxson24
begin
    set_local_var(5, 1);
    Reply(219);
    giq_option(4, NAME, 341, Maxson25, NEUTRAL_REACTION);
    giq_option(4, NAME, 342, Maxson33, NEUTRAL_REACTION);
end

procedure Maxson25
begin
    set_map_var(19, 1);
    gsay_message(NAME, 221, NEUTRAL_REACTION);
end

procedure Maxson26
begin
    Reply(210);
    giq_option(4, NAME, 343, Maxson23, NEUTRAL_REACTION);
end

procedure Maxson27
begin
    Reply(random(138, 140));
    if (local_var(6) == 0) then begin
        giq_option(4, NAME, 344, Maxson28, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 345, Maxson29, NEUTRAL_REACTION);
    giq_option(4, NAME, 346, Maxson30, NEUTRAL_REACTION);
    giq_option(4, NAME, 347, Maxson31, NEUTRAL_REACTION);
    giq_option(4, NAME, 348, Maxson18, NEUTRAL_REACTION);
end

procedure Maxson28
begin
    variable LVar0 := 0;
    set_local_var(6, 1);
    LVar0 := create_object(216, 0, 0);
    add_obj_to_inven(dude_obj, LVar0);
    Reply(186);
    giq_option(4, NAME, 349, Maxson27, NEUTRAL_REACTION);
    giq_option(4, NAME, 350, Maxson18, NEUTRAL_REACTION);
end

procedure Maxson29
begin
    Reply(172);
    giq_option(4, NAME, 349, Maxson27, NEUTRAL_REACTION);
    giq_option(4, NAME, 350, Maxson18, NEUTRAL_REACTION);
end

procedure Maxson30
begin
    Reply(244);
    giq_option(4, NAME, 349, Maxson27, NEUTRAL_REACTION);
    giq_option(4, NAME, 350, Maxson18, NEUTRAL_REACTION);
end

procedure Maxson31
begin
    Reply(262);
    giq_option(4, NAME, 349, Maxson27, NEUTRAL_REACTION);
    giq_option(4, NAME, 350, Maxson18, NEUTRAL_REACTION);
end

procedure Maxson32
begin
    Reply(275);
    giq_option(4, NAME, 349, Maxson27, NEUTRAL_REACTION);
    giq_option(4, NAME, 350, Maxson18, NEUTRAL_REACTION);
end

procedure Maxson33
begin
    if (dude_gender == 0) then begin
        Reply(357);
    end
    else begin
        Reply(358);
    end
    giq_option(4, NAME, 349, Maxson27, NEUTRAL_REACTION);
    giq_option(4, NAME, 350, Maxson18, NEUTRAL_REACTION);
end

procedure Maxson34
begin
    if (dude_gender == 0) then begin
        Reply(359);
    end
    else begin
        Reply(360);
    end
    giq_option(4, NAME, 349, Maxson27, NEUTRAL_REACTION);
    giq_option(4, NAME, 350, Maxson18, NEUTRAL_REACTION);
end

procedure Maxson35
begin
    Reply(133);
    giq_option(4, NAME, 335, Maxson27, NEUTRAL_REACTION);
    giq_option(4, NAME, 336, Maxson18, NEUTRAL_REACTION);
end

procedure MaxsonEnd
begin
end

procedure Remove_Player
begin
    set_global_var(GVAR_BECOME_AN_INITIATE, 5);
    set_global_var(GVAR_MARK_BROTHER_2, 0);
    set_global_var(GVAR_MARK_BROTHER_3, 0);
    set_global_var(GVAR_MARK_BROTHER_4, 0);
    set_global_var(GVAR_MARK_BROTHER_5, 0);
    load_map(13, 1);
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * dude_charisma) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence)));
        if (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality)) then begin
            if (global_var(GVAR_PLAYER_REPUATION) > 0) then begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
        end
        if (global_var(GVAR_CHILDKILLER_REPUATION) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(SCRIPT_MODREACT, random(100, 105));
end
