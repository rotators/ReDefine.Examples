/*******************************************************
*      Some unreferenced imported varables found.      *
*      Because of it it is impossible to specify       *
*      the real names of global variables.             *
*******************************************************/

variable GVar0;
variable GVar1;
variable GVar2;
variable GVar3;
variable GVar4;

procedure start;
procedure critter_p_proc;
procedure look_at_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure ChocTech00;
procedure ChocTech01;
procedure ChocTech02;
procedure ChocTech02a;
procedure ChocTech03;
procedure ChocTech04;
procedure ChocTech05;
procedure ChocTech06;
procedure ChocTech06a;
procedure ChocTech07;
procedure ChocTech08;
procedure ChocTech09;
procedure ChocTech10;
procedure ChocTech11;
procedure combat;
procedure ChocTechend;

import variable Team9_Count;

/* ?import? variable removal_ptr; */
/* ?import? variable Hostile; */
/* ?import? variable said_stuff; */
/* ?import? variable explode; */
/* ?import? variable initialized; */

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

/* ?import? variable exit_line; */


procedure start
begin
    if (not(GVar3)) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 34);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_CHILDREN_TRUE);
        GVar3 := 1;
    end
    if (script_action == critter_proc) then begin
        call critter_p_proc();
    end
    else begin
        if (script_action == look_at_proc) then begin
            call look_at_p_proc();
        end
        else begin
            if (script_action == talk_proc) then begin
                call talk_p_proc();
            end
            else begin
                if (script_action == destroy_proc) then begin
                    call destroy_p_proc();
                end
            end
        end
    end
end

procedure critter_p_proc
begin
    if (GVar0) then begin
        GVar0 := 0;
        attack(dude_obj);
    end
    else begin
        if (GVar2) then begin
            critter_dmg(self_obj, random(200, 250), DMG_explosion);
        end
        else begin
            if (obj_can_see_obj(self_obj, dude_obj)) then begin
                if ((obj_item_subtype(critter_inven_obj(dude_obj, 1)) == 3) or (obj_item_subtype(critter_inven_obj(dude_obj, 2)) == 3)) then begin
                    if (not(GVar1)) then begin
                        GVar1 := 1;
                        if (Team9_Count > 0) then begin
                            call ChocTech00();
                        end
                        else begin
                            call ChocTech01();
                        end
                    end
                end
            end
            else begin
                GVar1 := 0;
            end
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure talk_p_proc
begin
    if (global_var(GVAR_MASTER_DEAD) == 1) then begin
        start_gdialog(358, self_obj, 4, -1, -1);
        gsay_start;
        call ChocTech10();
        gsay_end;
        end_dialogue;
    end
    else begin
        if (global_var(GVAR_LIEUTENANTS_DEAD) == 1) then begin
            call ChocTech09();
        end
        else begin
            if (Team9_Count > 0) then begin
                start_gdialog(358, self_obj, 4, -1, -1);
                gsay_start;
                call ChocTech02();
                gsay_end;
                end_dialogue;
            end
            else begin
                call ChocTech01();
            end
        end
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        set_global_var(GVAR_BAD_MONSTER, global_var(GVAR_BAD_MONSTER) + 1);
        if ((global_var(GVAR_BAD_MONSTER) % 6) == 0) then begin
            set_global_var(GVAR_PLAYER_REPUATION, global_var(GVAR_PLAYER_REPUATION) + 1);
        end
    end
    set_global_var(GVAR_VATS_ALERT, 1);
end

procedure ChocTech00
begin
    float_msg(self_obj, mstr(random(101, 104)), FLOAT_MSG_NORMAL);
end

procedure ChocTech01
begin
    float_msg(self_obj, mstr(random(105, 107)), FLOAT_MSG_NORMAL);
end

procedure ChocTech02
begin
    Reply(108);
    giq_option(-3, NAME, 109, ChocTech03, 0);
    giq_option(4, NAME, 110, ChocTech04, 0);
    giq_option(4, NAME, 111, combat, -10);
    giq_option(6, NAME, 112, ChocTech02a, 0);
end

procedure ChocTech02a
begin
    if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
        call ChocTech06();
    end
    else begin
        call ChocTech05();
    end
end

procedure ChocTech03
begin
    gsay_message(NAME, 113, 0);
end

procedure ChocTech04
begin
    gsay_message(NAME, 114, 0);
end

procedure ChocTech05
begin
    gsay_message(NAME, 115, 0);
    call combat();
end

procedure ChocTech06
begin
    Reply(116);
    giq_option(5, NAME, 117, combat, -10);
    giq_option(6, NAME, 118, ChocTech06a, 0);
end

procedure ChocTech06a
begin
    if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
        call ChocTech07();
    end
    else begin
        call ChocTech05();
    end
end

procedure ChocTech07
begin
    Reply(119);
    giq_option(6, NAME, 120, ChocTechend, 0);
    giq_option(6, NAME, 121, ChocTech08, 0);
    giq_option(6, NAME, 122, ChocTech05, 0);
end

procedure ChocTech08
begin
    Reply(123);
    giq_option(6, NAME, 124, ChocTech05, 0);
end

procedure ChocTech09
begin
    float_msg(self_obj, mstr(125), FLOAT_MSG_NORMAL);
    GVar2 := 1;
end

procedure ChocTech10
begin
    Reply(126);
    giq_option(-3, NAME, 127, ChocTech11, 0);
    giq_option(4, NAME, 128, ChocTech11, 0);
    giq_option(4, NAME, 129, combat, -10);
end

procedure ChocTech11
begin
    gsay_message(NAME, 130, 0);
    GVar2 := 1;
end

procedure combat
begin
    GVar0 := 1;
end

procedure ChocTechend
begin
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * dude_charisma) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence)));
        if (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality)) then begin
            if (global_var(GVAR_PLAYER_REPUATION) > 0) then begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
        end
        if (global_var(GVAR_CHILDKILLER_REPUATION) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    GVar4 := message_str(SCRIPT_MODREACT, random(100, 105));
end
