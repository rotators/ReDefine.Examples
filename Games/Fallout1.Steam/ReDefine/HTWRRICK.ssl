procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure damage_p_proc;
procedure Rick01;
procedure Rick02;
procedure Rick03;
procedure Rick04;
procedure Rick05;
procedure Rick06;
procedure Rick07;
procedure Rick08;
procedure Rick09;
procedure Rick10;
procedure RickEnd;
procedure RickCombat;

variable hostile;
variable Only_Once := 1;
variable nightWarned;
variable visible := 1;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure start
begin
    if (Only_Once) then begin
        Only_Once := 0;
        if (global_var(GVAR_KILL_MERCHANT) == 5) then begin
            set_obj_visibility(self_obj, 1);
            visible := 0;
        end
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 42);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_GUARD_SADISTIC);
    end
    if (script_action == look_at_proc) then begin
        call look_at_p_proc();
    end
    else begin
        if (script_action == pickup_proc) then begin
            call pickup_p_proc();
        end
        else begin
            if (script_action == talk_proc) then begin
                call talk_p_proc();
            end
            else begin
                if (script_action == critter_proc) then begin
                    call critter_p_proc();
                end
                else begin
                    if (script_action == destroy_proc) then begin
                        call destroy_p_proc();
                    end
                    else begin
                        if (script_action == damage_proc) then begin
                            call damage_p_proc();
                        end
                    end
                end
            end
        end
    end
end

procedure combat
begin
    hostile := 1;
end

procedure critter_p_proc
begin
    if (visible == 0) then begin
        script_overrides;
    end
    else begin
        if (hostile) then begin
            hostile := 0;
            attack(dude_obj);
        end
        if (map_var(5) == 1) then begin
            if ((obj_can_hear_obj(self_obj, dude_obj) == 1) or (obj_can_see_obj(self_obj, dude_obj) == 1)) then begin
                call combat();
            end
        end
        else begin
            if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
                if ((tile_distance_objs(self_obj, dude_obj) <= 7) and (nightWarned == 0)) then begin
                    nightWarned := 1;
                    dialogue_system_enter;
                end
                if (tile_num(self_obj) != 19713) then begin
                    animate_move_obj_to_tile(self_obj, 19713, 0);
                end
            end
            else begin
                if (tile_num(self_obj) != 17892) then begin
                    animate_move_obj_to_tile(self_obj, 17892, 0);
                end
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        hostile := 1;
    end
end

procedure talk_p_proc
begin
    call get_reaction();
    if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
        start_gdialog(871, self_obj, 4, -1, -1);
        gsay_start;
        call Rick09();
        gsay_end;
        end_dialogue;
    end
    else begin
        start_gdialog(871, self_obj, 4, -1, -1);
        gsay_start;
        call Rick01();
        gsay_end;
        end_dialogue;
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if ((global_var(GVAR_GOOD_MONSTER) % 2) == 0) then begin
            set_global_var(GVAR_PLAYER_REPUATION, global_var(GVAR_PLAYER_REPUATION) - 1);
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure damage_p_proc
begin
    set_map_var(5, 1);
end

procedure Rick01
begin
    Reply(101);
    giq_option(4, NAME, 103, Rick03, NEUTRAL_REACTION);
    giq_option(4, NAME, 104, Rick04, NEUTRAL_REACTION);
    if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
        giq_option(4, NAME, 105, Rick08, BAD_REACTION);
    end
    giq_option(-3, NAME, 102, Rick02, NEUTRAL_REACTION);
end

procedure Rick02
begin
    Reply(106);
    giq_option(-3, NAME, 107, Rick10, NEUTRAL_REACTION);
    giq_option(-3, NAME, 108, RickEnd, NEUTRAL_REACTION);
end

procedure Rick03
begin
    Reply(109);
    giq_option(4, NAME, 110, Rick05, NEUTRAL_REACTION);
    giq_option(4, NAME, 111, Rick06, NEUTRAL_REACTION);
    giq_option(4, NAME, 112, RickEnd, NEUTRAL_REACTION);
end

procedure Rick04
begin
    Reply(113);
    giq_option(4, NAME, 114, RickCombat, BAD_REACTION);
    giq_option(4, NAME, 115, Rick08, NEUTRAL_REACTION);
end

procedure Rick05
begin
    Reply(116);
    giq_option(4, NAME, 117, Rick06, NEUTRAL_REACTION);
    giq_option(4, NAME, 118, Rick07, NEUTRAL_REACTION);
    giq_option(4, NAME, 119, RickEnd, NEUTRAL_REACTION);
end

procedure Rick06
begin
    Reply(120);
    giq_option(4, NAME, 121, RickCombat, BAD_REACTION);
    giq_option(4, NAME, 122, Rick05, NEUTRAL_REACTION);
    giq_option(4, NAME, 123, RickEnd, NEUTRAL_REACTION);
end

procedure Rick07
begin
    gsay_message(NAME, 124, BAD_REACTION);
end

procedure Rick08
begin
    Reply(125);
    giq_option(4, NAME, 126, RickEnd, NEUTRAL_REACTION);
    giq_option(4, NAME, 127, RickCombat, BAD_REACTION);
end

procedure Rick09
begin
    Reply(128);
    giq_option(4, NAME, 131, RickCombat, BAD_REACTION);
    giq_option(4, NAME, 132, RickEnd, NEUTRAL_REACTION);
    giq_option(-3, NAME, 129, RickEnd, NEUTRAL_REACTION);
    giq_option(-3, NAME, 130, RickCombat, BAD_REACTION);
end

procedure Rick10
begin
    gsay_message(NAME, 133, BAD_REACTION);
end

procedure RickEnd
begin
end

procedure RickCombat
begin
    call combat();
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * dude_charisma) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence)));
        if (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality)) then begin
            if (global_var(GVAR_PLAYER_REPUATION) > 0) then begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
        end
        if (global_var(GVAR_CHILDKILLER_REPUATION) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(SCRIPT_MODREACT, random(100, 105));
end
