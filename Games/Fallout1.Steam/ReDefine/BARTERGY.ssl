/*******************************************************
*      Some unreferenced imported varables found.      *
*      Because of it it is impossible to specify       *
*      the real names of global variables.             *
*******************************************************/

variable GVar0;
variable GVar1 := 1;
variable GVar2;
variable GVar3;
variable GVar4;

procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure timed_event_p_proc;
procedure BarterGuy00;
procedure BarterGuy01;
procedure BarterGuy02;
procedure BarterGuy03;
procedure BarterGuy04;
procedure BarterGuy05;
procedure BarterGuy06;
procedure BarterGuy07;
procedure BarterGuy08;
procedure BarterGuy09;
procedure BarterGuy10;
procedure BarterGuy11;
procedure BarterGuy12;
procedure BarterGuy13;
procedure BarterGuy14;
procedure BarterGuyEnd;

/* ?import? variable hostile; */
/* ?import? variable Only_Once; */
/* ?import? variable Caught_Stealing; */
/* ?import? variable Here_To_Shop; */
/* ?import? variable Shop_Ptr; */

import variable Shopkepper_Ptr;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

/* ?import? variable exit_line; */


procedure start
begin
    if (GVar1) then begin
        GVar1 := 0;
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 20);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_CHILDREN_TRUE);
        Shopkepper_Ptr := self_obj;
    end
    if (script_action == look_at_proc) then begin
        call look_at_p_proc();
    end
    else begin
        if (script_action == timed_event_proc) then begin
            call timed_event_p_proc();
        end
        else begin
            if (script_action == pickup_proc) then begin
                call pickup_p_proc();
            end
            else begin
                if (script_action == talk_proc) then begin
                    call talk_p_proc();
                end
                else begin
                    if (script_action == critter_proc) then begin
                        call critter_p_proc();
                    end
                    else begin
                        if (script_action == destroy_proc) then begin
                            call destroy_p_proc();
                        end
                    end
                end
            end
        end
    end
end

procedure combat
begin
    GVar0 := 1;
end

procedure critter_p_proc
begin
    if (GVar0) then begin
        GVar0 := 0;
        attack(dude_obj);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        GVar0 := 1;
    end
end

procedure talk_p_proc
begin
    call get_reaction();
    start_gdialog(843, self_obj, 4, -1, -1);
    gsay_start;
    if (GVar2) then begin
        call BarterGuy00();
    end
    else begin
        if ((obj_item_subtype(critter_inven_obj(dude_obj, 1)) == 3) or (obj_item_subtype(critter_inven_obj(dude_obj, 2)) == 3) or (global_var(GVAR_CATHEDRAL_ENEMY) == 1)) then begin
            call BarterGuy02();
        end
        else begin
            if (obj_pid(critter_inven_obj(dude_obj, 0)) == 113) then begin
                call BarterGuy07();
            end
            else begin
                call BarterGuy10();
            end
        end
    end
    gsay_end;
    end_dialogue;
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if ((global_var(GVAR_GOOD_MONSTER) % 7) == 0) then begin
            set_global_var(GVAR_PLAYER_REPUATION, global_var(GVAR_PLAYER_REPUATION) - 1);
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(SCRIPT_CATHSHOP, 100));
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        GVar3 := 1;
        dialogue_system_enter;
    end
    else begin
        if (fixed_param == 2) then begin
            GVar2 := 1;
            dialogue_system_enter;
        end
    end
end

procedure BarterGuy00
begin
end

procedure BarterGuy01
begin
end

procedure BarterGuy02
begin
end

procedure BarterGuy03
begin
end

procedure BarterGuy04
begin
end

procedure BarterGuy05
begin
end

procedure BarterGuy06
begin
end

procedure BarterGuy07
begin
end

procedure BarterGuy08
begin
end

procedure BarterGuy09
begin
end

procedure BarterGuy10
begin
end

procedure BarterGuy11
begin
end

procedure BarterGuy12
begin
end

procedure BarterGuy13
begin
end

procedure BarterGuy14
begin
end

procedure BarterGuyEnd
begin
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * dude_charisma) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence)));
        if (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality)) then begin
            if (global_var(GVAR_PLAYER_REPUATION) > 0) then begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
        end
        if (global_var(GVAR_CHILDKILLER_REPUATION) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) > 34) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) > 34) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    GVar4 := message_str(SCRIPT_MODREACT, random(100, 105));
end
