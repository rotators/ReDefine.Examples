procedure start;

variable rndx;
variable init_teams;


procedure start
begin
    if (not(init_teams)) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 9);
        init_teams := 1;
    end
    if (script_action == combat_proc) then begin
        if (fixed_param == 2) then begin
            rndx := random(1, 6) - 5;
            if (rndx < 0) then begin
                rndx := 0;
            end
            if (rndx > 0) then begin
                radiation_inc(target_obj, rndx);
            end
        end
    end
    else begin
        if (script_action == critter_proc) then begin
            if (obj_can_see_obj(self_obj, dude_obj) != 0) then begin
                if (has_trait(TRAIT_PERK, dude_obj, PERK_animal_friend) == 0) then begin
                    attack(dude_obj);
                end
            end
        end
        else begin
            if (script_action == destroy_proc) then begin
                if (source_obj == dude_obj) then begin
                    if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
                        set_global_var(GVAR_BERSERKER_REPUTATION, 1);
                        set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                    end
                    if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
                        set_global_var(GVAR_CHAMPION_REPUTATION, 1);
                        set_global_var(GVAR_BERSERKER_REPUTATION, 0);
                    end
                    set_global_var(GVAR_BAD_MONSTER, global_var(GVAR_BAD_MONSTER) + 1);
                    if ((global_var(GVAR_BAD_MONSTER) % 6) == 0) then begin
                        set_global_var(GVAR_PLAYER_REPUATION, global_var(GVAR_PLAYER_REPUATION) + 1);
                    end
                end
            end
        end
    end
end
