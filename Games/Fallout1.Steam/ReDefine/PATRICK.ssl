procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure flee_dude;
procedure Patrick01;
procedure Patrick02;
procedure Patrick03;
procedure Patrick04;
procedure Patrick05;
procedure Patrick06;
procedure Patrick06a;
procedure Patrick07;
procedure Patrick08;
procedure Patrick09;
procedure Patrick10;
procedure Patrick11;
procedure Patrick12;
procedure Patrick13;
procedure Patrick14;
procedure Patrick15;
procedure Patrick16;
procedure Patrick17;
procedure PatrickCombat;
procedure PatrickEnd;

variable hostile;
variable initialized;
variable known;
variable scared;


procedure start
begin
    if (not(initialized)) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 87);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_CAREFUL);
        initialized := 1;
    end
    else begin
        if (script_action == critter_proc) then begin
            call critter_p_proc();
        end
        else begin
            if (script_action == destroy_proc) then begin
                call destroy_p_proc();
            end
            else begin
                if (script_action == look_at_proc) then begin
                    call look_at_p_proc();
                end
                else begin
                    if (script_action == pickup_proc) then begin
                        call pickup_p_proc();
                    end
                    else begin
                        if (script_action == talk_proc) then begin
                            call talk_p_proc();
                        end
                    end
                end
            end
        end
    end
end

procedure critter_p_proc
begin
    if (scared) then begin
        if (tile_distance_objs(self_obj, dude_obj) < 8) then begin
            call flee_dude();
        end
    end
    else begin
        if (hostile) then begin
            hostile := 0;
            scared := 1;
            attack(dude_obj);
        end
    end
end

procedure destroy_p_proc
begin
    set_global_var(GVAR_WATER_THIEF_10, 1);
    if (source_obj == dude_obj) then begin
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if ((global_var(GVAR_GOOD_MONSTER) % 2) == 0) then begin
            set_global_var(GVAR_PLAYER_REPUATION, global_var(GVAR_PLAYER_REPUATION) - 1);
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    known := global_var(GVAR_SAVE_TANDI_1);
    if (known) then begin
        display_mstr(101);
    end
    else begin
        display_mstr(100);
    end
end

procedure pickup_p_proc
begin
    hostile := 1;
end

procedure talk_p_proc
begin
    known := global_var(GVAR_SAVE_TANDI_1);
    if (scared) then begin
        float_msg(self_obj, message_str(SCRIPT_ENEMY, random(100, 105)), FLOAT_MSG_RED);
    end
    else begin
        start_gdialog(667, self_obj, 4, -1, -1);
        gsay_start;
        if (known) then begin
            call Patrick17();
        end
        else begin
            call Patrick01();
        end
        gsay_end;
        end_dialogue;
    end
end

procedure flee_dude
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    while (LVar1 < 5) do begin
        if (tile_distance(dude_tile, tile_num_in_direction(tile_num(self_obj), LVar1, 3)) > LVar2) then begin
            LVar0 := tile_num_in_direction(tile_num(self_obj), LVar1, 3);
            LVar2 := tile_distance(dude_tile, LVar0);
        end
        LVar1 := LVar1 + 1;
    end
    animate_move_obj_to_tile(self_obj, LVar0, 1);
end

procedure Patrick01
begin
    known := 1;
    set_global_var(GVAR_SAVE_TANDI_1, known);
    Reply(102);
    giq_option(4, NAME, 103, Patrick02, NEUTRAL_REACTION);
    giq_option(4, NAME, 104, Patrick03, NEUTRAL_REACTION);
    if ((global_var(GVAR_FIND_WATER_CHIP) == 0) and (obj_is_carrying_obj_pid(dude_obj, 55) == 0)) then begin
        giq_option(4, NAME, 105, Patrick04, NEUTRAL_REACTION);
    end
    if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
        giq_option(4, NAME, 106, PatrickCombat, BAD_REACTION);
    end
    giq_option(-3, NAME, 107, PatrickEnd, NEUTRAL_REACTION);
end

procedure Patrick02
begin
    Reply(108);
    giq_option(4, NAME, 109, Patrick05, NEUTRAL_REACTION);
    giq_option(4, NAME, 110, Patrick06, NEUTRAL_REACTION);
    giq_option(4, NAME, 111, Patrick05, NEUTRAL_REACTION);
    giq_option(4, NAME, 112, PatrickEnd, NEUTRAL_REACTION);
end

procedure Patrick03
begin
    Reply(113);
    giq_option(4, NAME, 114, PatrickEnd, NEUTRAL_REACTION);
    giq_option(4, NAME, 115, Patrick05, NEUTRAL_REACTION);
end

procedure Patrick04
begin
    Reply(116);
    if (dude_iq > 6) then begin
        giq_option(7, NAME, 117, Patrick07, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 118, Patrick07, NEUTRAL_REACTION);
    end
end

procedure Patrick05
begin
    Reply(119);
    giq_option(4, NAME, 120, Patrick08, NEUTRAL_REACTION);
    giq_option(4, NAME, 121, Patrick09, NEUTRAL_REACTION);
    giq_option(4, NAME, 110, Patrick06, NEUTRAL_REACTION);
    giq_option(4, NAME, 122, PatrickEnd, NEUTRAL_REACTION);
end

procedure Patrick06
begin
    Reply(123);
    if (global_var(GVAR_SHADY_SANDS) < 1) then begin
        set_global_var(GVAR_SHADY_SANDS, 1);
    end
    if (global_var(GVAR_JUNKTOWN) < 1) then begin
        set_global_var(GVAR_JUNKTOWN, 1);
    end
    if (global_var(GVAR_THE_HUB) < 1) then begin
        set_global_var(GVAR_JUNKTOWN, 1);
    end
    if (global_var(GVAR_NECROPOLIS) < 1) then begin
        set_global_var(GVAR_NECROPOLIS, 1);
    end
    call Patrick06a();
end

procedure Patrick06a
begin
    giq_option(4, NAME, 124, Patrick10, NEUTRAL_REACTION);
    giq_option(4, NAME, 125, Patrick11, NEUTRAL_REACTION);
    giq_option(4, NAME, 126, Patrick12, NEUTRAL_REACTION);
    giq_option(4, NAME, 127, Patrick13, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_MODREACT, 100, PatrickEnd, NEUTRAL_REACTION);
end

procedure Patrick07
begin
    Reply(128);
    giq_option(4, SCRIPT_MODREACT, 100, PatrickEnd, NEUTRAL_REACTION);
    giq_option(4, NAME, 115, Patrick05, NEUTRAL_REACTION);
end

procedure Patrick08
begin
    Reply(129);
    if ((global_var(GVAR_FIND_WATER_CHIP) == 0) and (obj_is_carrying_obj_pid(dude_obj, 55) == 0)) then begin
        giq_option(4, NAME, 130, Patrick07, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 110, Patrick05, NEUTRAL_REACTION);
    giq_option(4, NAME, 112, PatrickEnd, NEUTRAL_REACTION);
end

procedure Patrick09
begin
    Reply(131);
    if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
        giq_option(7, NAME, 132, Patrick15, GOOD_REACTION);
    end
    giq_option(4, NAME, 133, Patrick05, NEUTRAL_REACTION);
    giq_option(4, NAME, 122, PatrickEnd, NEUTRAL_REACTION);
end

procedure Patrick10
begin
    if (global_var(GVAR_NECROPOLIS_INVADED) == 1) then begin
        Reply(141);
    end
    else begin
        if (global_var(GVAR_TANDI_STATUS) == 27) then begin
            Reply(135);
        end
        else begin
            Reply(134);
        end
    end
    call Patrick06a();
end

procedure Patrick11
begin
    if (global_var(GVAR_NECROPOLIS_INVADED) == 1) then begin
        Reply(141);
    end
    else begin
        if (global_var(GVAR_KILLIAN_DEAD)) then begin
            if (global_var(GVAR_GIZMO_DEAD)) then begin
                Reply(138);
            end
            else begin
                Reply(137);
            end
        end
        else begin
            Reply(136);
        end
    end
    call Patrick06a();
end

procedure Patrick12
begin
    if (global_var(GVAR_NECROPOLIS_INVADED) == 1) then begin
        Reply(141);
    end
    else begin
        Reply(139);
    end
    call Patrick06a();
end

procedure Patrick13
begin
    if (global_var(GVAR_NECROPOLIS_INVADED) == 1) then begin
        Reply(141);
    end
    else begin
        Reply(140);
    end
    if (dude_iq > 5) then begin
        giq_option(6, NAME, 142, Patrick14, NEUTRAL_REACTION);
    end
    else begin
        call Patrick06a();
    end
end

procedure Patrick14
begin
    Reply(143);
    call Patrick06a();
end

procedure Patrick15
begin
    Reply(144);
    giq_option(4, NAME, 145, Patrick16, GOOD_REACTION);
    giq_option(4, NAME, 146, PatrickEnd, NEUTRAL_REACTION);
end

procedure Patrick16
begin
    gfade_out(600);
    set_critter_stat(dude_obj, STAT_ch, 1);
    gfade_in(600);
    gsay_message(NAME, 147, GOOD_REACTION);
end

procedure Patrick17
begin
    Reply(148);
    giq_option(4, NAME, 149, Patrick06, NEUTRAL_REACTION);
    giq_option(4, NAME, 150, PatrickEnd, NEUTRAL_REACTION);
    giq_option(-3, NAME, 107, PatrickEnd, NEUTRAL_REACTION);
end

procedure PatrickCombat
begin
    hostile := 1;
end

procedure PatrickEnd
begin
end
