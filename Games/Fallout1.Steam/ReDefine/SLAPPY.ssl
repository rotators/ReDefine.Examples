procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure Slappy01;
procedure Slappy02;
procedure Slappy03;
procedure Slappy04;
procedure Slappy05;
procedure Slappy06;
procedure Slappy07;
procedure Slappy08;
procedure Slappy09;
procedure Slappy10;
procedure Slappy11;
procedure SlappyEnd;
procedure SlappyClaw;

variable hostile;
variable Only_Once := 1;
variable lastBabble;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure start
begin
    if (Only_Once) then begin
        Only_Once := 0;
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 41);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_HUB_MUTANTS);
    end
    if (script_action == look_at_proc) then begin
        call look_at_p_proc();
    end
    else begin
        if (script_action == pickup_proc) then begin
            call pickup_p_proc();
        end
        else begin
            if (script_action == talk_proc) then begin
                call talk_p_proc();
            end
            else begin
                if (script_action == critter_proc) then begin
                    call critter_p_proc();
                end
                else begin
                    if (script_action == destroy_proc) then begin
                        call destroy_p_proc();
                    end
                end
            end
        end
    end
end

procedure combat
begin
    hostile := 1;
end

procedure critter_p_proc
begin
    if (hostile) then begin
        hostile := 0;
        attack(dude_obj);
    end
    if (tile_distance_objs(self_obj, dude_obj) <= 20) then begin
        if (((game_time / 10) - lastBabble) >= 10) then begin
            lastBabble := game_time / 10;
            float_msg(self_obj, mstr(random(101, 107)), FLOAT_MSG_RED);
        end
    end
    if (tile_num(self_obj) == 25131) then begin
        reg_anim_func(1, 1);
        reg_anim_obj_move_to_tile(self_obj, 25331, -1);
        reg_anim_func(3, 0);
    end
    else begin
        if (tile_num(self_obj) == 25331) then begin
            reg_anim_func(1, 1);
            reg_anim_obj_move_to_tile(self_obj, 25132, -1);
            reg_anim_func(3, 0);
        end
        else begin
            if (tile_num(self_obj) == 25132) then begin
                reg_anim_func(1, 1);
                reg_anim_obj_move_to_tile(self_obj, 24932, -1);
                reg_anim_func(3, 0);
            end
            else begin
                if (tile_num(self_obj) == 24932) then begin
                    reg_anim_func(1, 1);
                    reg_anim_obj_move_to_tile(self_obj, 25131, -1);
                    reg_anim_func(3, 0);
                end
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        hostile := 1;
    end
end

procedure talk_p_proc
begin
    call get_reaction();
    if (global_var(GVAR_HUB_FILLER_29) == 5) then begin
        call Slappy10();
    end
    else begin
        start_gdialog(842, self_obj, 4, -1, -1);
        gsay_start;
        call Slappy01();
        gsay_end;
        end_dialogue;
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if ((global_var(GVAR_GOOD_MONSTER) % 2) == 0) then begin
            set_global_var(GVAR_PLAYER_REPUATION, global_var(GVAR_PLAYER_REPUATION) - 1);
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure Slappy01
begin
    Reply(108);
    if (global_var(GVAR_HUB_FILLER_29) == 3) then begin
        giq_option(4, NAME, 109, Slappy03, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_HUB_FILLER_29) == 2) then begin
        giq_option(4, NAME, 110, Slappy11, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 111, Slappy04, NEUTRAL_REACTION);
    giq_option(4, NAME, 112, Slappy05, NEUTRAL_REACTION);
    giq_option(-3, NAME, 113, Slappy02, NEUTRAL_REACTION);
end

procedure Slappy02
begin
    Reply(114);
    giq_option(-3, NAME, 115, SlappyEnd, NEUTRAL_REACTION);
end

procedure Slappy03
begin
    Reply(116);
    giq_option(4, NAME, 117, Slappy06, NEUTRAL_REACTION);
    giq_option(4, NAME, 118, Slappy05, NEUTRAL_REACTION);
    giq_option(4, NAME, 119, Slappy09, NEUTRAL_REACTION);
end

procedure Slappy04
begin
    Reply(120);
    giq_option(4, NAME, 121, Slappy08, NEUTRAL_REACTION);
    giq_option(4, NAME, 122, SlappyEnd, NEUTRAL_REACTION);
end

procedure Slappy05
begin
    Reply(123);
    giq_option(4, NAME, 124, SlappyEnd, NEUTRAL_REACTION);
end

procedure Slappy06
begin
    Reply(125);
    giq_option(4, NAME, 126, Slappy07, NEUTRAL_REACTION);
    giq_option(4, NAME, 127, SlappyEnd, NEUTRAL_REACTION);
end

procedure Slappy07
begin
    Reply(128);
    giq_option(4, NAME, 129, SlappyClaw, NEUTRAL_REACTION);
    giq_option(4, NAME, 130, SlappyEnd, NEUTRAL_REACTION);
end

procedure Slappy08
begin
    Reply(131);
    giq_option(4, NAME, 132, SlappyEnd, NEUTRAL_REACTION);
end

procedure Slappy09
begin
    gsay_message(NAME, 133, NEUTRAL_REACTION);
end

procedure Slappy10
begin
    float_msg(self_obj, mstr(134), FLOAT_MSG_RED);
end

procedure Slappy11
begin
    Reply(135);
    giq_option(4, NAME, 136, SlappyEnd, NEUTRAL_REACTION);
end

procedure SlappyEnd
begin
end

procedure SlappyClaw
begin
    if (local_var(4) == 0) then begin
        set_local_var(4, 1);
        give_exp_points(800);
        display_msg(message_str(SCRIPT_GENCHAT, 103) + 800 + message_str(SCRIPT_GENCHAT, 104));
    end
    load_map(37, 0);
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * dude_charisma) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence)));
        if (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality)) then begin
            if (global_var(GVAR_PLAYER_REPUATION) > 0) then begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
        end
        if (global_var(GVAR_CHILDKILLER_REPUATION) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(SCRIPT_MODREACT, random(100, 105));
end
