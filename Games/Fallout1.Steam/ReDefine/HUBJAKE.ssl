procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure damage_p_proc;
procedure Jake01;
procedure Jake02;
procedure Jake03;
procedure Jake04;
procedure Jake05;
procedure Jake06;
procedure Jake07;
procedure Jake08;
procedure Jake09;
procedure Jake10;
procedure Jake11;
procedure Jake12;
procedure Jake13;
procedure Jake14;
procedure Jake15;
procedure Jake16;
procedure JakeEnd;
procedure Barter;
procedure Get_Stuff;
procedure Put_Stuff;

variable hostile;
variable Only_Once := 1;

import variable Jake_Desk_Ptr;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure start
begin
    variable LVar0 := 0;
    gdialog_set_barter_mod(-15);
    if (Only_Once) then begin
        Only_Once := 0;
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 48);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_MERCHANT);
    end
    if (script_action == look_at_proc) then begin
        call look_at_p_proc();
    end
    else begin
        if (script_action == pickup_proc) then begin
            call pickup_p_proc();
        end
        else begin
            if (script_action == talk_proc) then begin
                call talk_p_proc();
            end
            else begin
                if (script_action == critter_proc) then begin
                    call critter_p_proc();
                end
                else begin
                    if (script_action == destroy_proc) then begin
                        call destroy_p_proc();
                    end
                end
            end
        end
    end
end

procedure combat
begin
    hostile := 1;
    set_local_var(5, 1);
end

procedure critter_p_proc
begin
    if (hostile) then begin
        hostile := 0;
        attack(dude_obj);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        hostile := 1;
    end
end

procedure talk_p_proc
begin
    variable LVar0 := 0;
    call Get_Stuff();
    call get_reaction();
    if ((((game_time / (10 * 60 * 60 * 24)) - local_var(6)) >= 1) or (local_var(6) == 0)) then begin
        set_local_var(6, game_time / (10 * 60 * 60 * 24));
        set_local_var(7, 2000 + random(0, 1000));
        LVar0 := item_caps_adjust(self_obj, local_var(7));
    end
    else begin
        LVar0 := item_caps_adjust(self_obj, local_var(7));
    end
    if (local_var(5) == 1) then begin
        call combat();
    end
    else begin
        if (global_var(GVAR_ENEMY_HUB) == 1) then begin
            start_gdialog(589, self_obj, 4, -1, -1);
            gsay_start;
            call Jake10();
            gsay_end;
            end_dialogue;
        end
        else begin
            if (local_var(4) == 0) then begin
                set_local_var(4, 1);
                start_gdialog(589, self_obj, 4, -1, -1);
                gsay_start;
                call Jake01();
                gsay_end;
                end_dialogue;
            end
            else begin
                if (local_var(1) == 1) then begin
                    start_gdialog(589, self_obj, 4, -1, -1);
                    gsay_start;
                    call Jake10();
                    gsay_end;
                    end_dialogue;
                end
                else begin
                    start_gdialog(589, self_obj, 4, -1, -1);
                    gsay_start;
                    call Jake09();
                    gsay_end;
                    end_dialogue;
                end
            end
        end
    end
    LVar0 := item_caps_adjust(self_obj, -1 * item_caps_total(self_obj));
    call Put_Stuff();
end

procedure destroy_p_proc
begin
    move_obj_inven_to_obj(Jake_Desk_Ptr, self_obj);
    if (source_obj == dude_obj) then begin
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if ((global_var(GVAR_GOOD_MONSTER) % 2) == 0) then begin
            set_global_var(GVAR_PLAYER_REPUATION, global_var(GVAR_PLAYER_REPUATION) - 1);
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure damage_p_proc
begin
    variable LVar0 := 0;
    LVar0 := obj_pid(source_obj);
    if (party_member_obj(LVar0) != 0) then begin
        set_global_var(GVAR_ENEMY_HUB, 1);
    end
end

procedure Jake01
begin
    Reply(101);
    giq_option(4, NAME, 102, Barter, NEUTRAL_REACTION);
    giq_option(4, NAME, 103, Jake02, NEUTRAL_REACTION);
    if (global_var(GVAR_FIND_WATER_CHIP) != 2) then begin
        giq_option(4, NAME, 104, Jake03, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 105, Jake04, NEUTRAL_REACTION);
    giq_option(4, NAME, 106, Jake13, NEUTRAL_REACTION);
    giq_option(-3, NAME, 107, Barter, NEUTRAL_REACTION);
    giq_option(-3, NAME, 108, Jake13, NEUTRAL_REACTION);
end

procedure Jake02
begin
    Reply(109);
    giq_option(4, NAME, 110, Barter, NEUTRAL_REACTION);
    giq_option(4, NAME, 111, Jake05, NEUTRAL_REACTION);
    giq_option(4, NAME, 112, Jake06, NEUTRAL_REACTION);
    giq_option(4, NAME, 113, Jake13, NEUTRAL_REACTION);
end

procedure Jake03
begin
    Reply(114);
    giq_option(4, NAME, 115, Barter, NEUTRAL_REACTION);
    giq_option(4, NAME, 116, Jake02, NEUTRAL_REACTION);
    giq_option(4, NAME, 117, Jake04, NEUTRAL_REACTION);
end

procedure Jake04
begin
    gsay_message(NAME, 118, NEUTRAL_REACTION);
    Reply(162);
    giq_option(4, NAME, 119, Barter, NEUTRAL_REACTION);
    giq_option(4, NAME, 120, Jake02, NEUTRAL_REACTION);
    if (global_var(GVAR_FIND_WATER_CHIP) != 2) then begin
        giq_option(4, NAME, 121, Jake03, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 122, Jake13, NEUTRAL_REACTION);
end

procedure Jake05
begin
    Reply(123);
    giq_option(4, NAME, 124, Barter, NEUTRAL_REACTION);
    giq_option(4, NAME, 125, Jake06, NEUTRAL_REACTION);
    giq_option(4, NAME, 126, Jake13, NEUTRAL_REACTION);
end

procedure Jake06
begin
    Reply(127);
    giq_option(4, NAME, 128, Barter, NEUTRAL_REACTION);
    giq_option(4, NAME, 129, Jake07, NEUTRAL_REACTION);
    giq_option(4, NAME, 130, Jake08, NEUTRAL_REACTION);
    giq_option(4, NAME, 131, Jake14, BAD_REACTION);
end

procedure Jake07
begin
    Reply(132);
    giq_option(4, NAME, 133, Barter, NEUTRAL_REACTION);
    giq_option(4, NAME, 134, Jake08, NEUTRAL_REACTION);
    giq_option(4, NAME, 135, Jake12, NEUTRAL_REACTION);
    giq_option(4, NAME, 136, Jake04, NEUTRAL_REACTION);
    giq_option(4, NAME, 137, Jake13, NEUTRAL_REACTION);
end

procedure Jake08
begin
    Reply(138);
    giq_option(4, NAME, 139, Barter, NEUTRAL_REACTION);
    giq_option(4, NAME, 140, Jake07, NEUTRAL_REACTION);
    giq_option(4, NAME, 141, Jake14, BAD_REACTION);
    giq_option(4, NAME, 142, Jake13, NEUTRAL_REACTION);
end

procedure Jake09
begin
    if (dude_gender == 0) then begin
        Reply(163);
    end
    else begin
        Reply(164);
    end
    giq_option(-3, NAME, 144, Barter, NEUTRAL_REACTION);
    giq_option(-3, NAME, 145, Jake13, NEUTRAL_REACTION);
    giq_option(4, NAME, 146, Barter, NEUTRAL_REACTION);
    giq_option(4, NAME, 165, Jake16, NEUTRAL_REACTION);
    giq_option(4, NAME, 147, Jake13, NEUTRAL_REACTION);
end

procedure Jake10
begin
    Reply(148);
    giq_option(-3, NAME, 149, Barter, NEUTRAL_REACTION);
    giq_option(-3, NAME, 150, Jake13, NEUTRAL_REACTION);
    giq_option(4, NAME, 151, Barter, NEUTRAL_REACTION);
    giq_option(4, NAME, 165, Jake16, NEUTRAL_REACTION);
    giq_option(4, NAME, 152, Jake15, NEUTRAL_REACTION);
    giq_option(4, NAME, 153, Jake13, NEUTRAL_REACTION);
end

procedure Jake11
begin
    float_msg(self_obj, mstr(154), FLOAT_MSG_RED);
    call combat();
end

procedure Jake12
begin
    set_global_var(GVAR_MASTER_FILLER_9, 1);
    Reply(155);
    giq_option(4, NAME, 156, Jake08, NEUTRAL_REACTION);
    giq_option(4, NAME, 157, Jake13, NEUTRAL_REACTION);
end

procedure Jake13
begin
end

procedure Jake14
begin
    call BottomReact();
end

procedure Jake15
begin
    call BottomReact();
    call combat();
end

procedure Jake16
begin
    if (global_var(GVAR_BROTHERHOOD_OF_STEEL) == 0) then begin
        set_global_var(GVAR_BROTHERHOOD_OF_STEEL, 1);
    end
    if (global_var(GVAR_ANGELS_BONEYARD) == 0) then begin
        set_global_var(GVAR_ANGELS_BONEYARD, 1);
    end
    gsay_message(NAME, 166, NEUTRAL_REACTION);
end

procedure JakeEnd
begin
end

procedure Barter
begin
    gsay_message(NAME, 158, NEUTRAL_REACTION);
    gdialog_mod_barter(-15);
    Reply(159);
    giq_option(4, NAME, 160, JakeEnd, NEUTRAL_REACTION);
    giq_option(-3, NAME, 161, JakeEnd, NEUTRAL_REACTION);
end

procedure Get_Stuff
begin
    move_obj_inven_to_obj(Jake_Desk_Ptr, self_obj);
end

procedure Put_Stuff
begin
    move_obj_inven_to_obj(self_obj, Jake_Desk_Ptr);
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * dude_charisma) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence)));
        if (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality)) then begin
            if (global_var(GVAR_PLAYER_REPUATION) > 0) then begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
        end
        if (global_var(GVAR_CHILDKILLER_REPUATION) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(SCRIPT_MODREACT, random(100, 105));
end
