procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure map_update_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure Fire00;
procedure Fire01;
procedure Fire02;
procedure Fire03;
procedure Fire04;
procedure Fire05;
procedure Fire06;
procedure Fire07;
procedure Fire08;
procedure Fire09;
procedure Fire10;
procedure Fire11;
procedure Fire12;
procedure Fire13;
procedure Fire14;
procedure Fire15;
procedure Fire16;
procedure Fire17;
procedure Fire18;
procedure Fire19;
procedure Fire20;
procedure Fire21;
procedure FireCombat;
procedure FireEnd;
procedure follow_player;
procedure show_true_name;
procedure show_false_name;

variable hostile;
variable initialized;
variable prev_tile := 7000;
variable dest_tile := 7000;
variable name;

procedure timed_event_p_proc;


procedure start
begin
    if (script_action == critter_proc) then begin
        call critter_p_proc();
    end
    else begin
        if (script_action == destroy_proc) then begin
            call destroy_p_proc();
        end
        else begin
            if (script_action == look_at_proc) then begin
                call look_at_p_proc();
            end
            else begin
                if (script_action == map_update_proc) then begin
                    call map_update_p_proc();
                end
                else begin
                    if (script_action == pickup_proc) then begin
                        call pickup_p_proc();
                    end
                    else begin
                        if (script_action == talk_proc) then begin
                            call talk_p_proc();
                        end
                    end
                end
            end
        end
    end
end

procedure critter_p_proc
begin
    if (obj_can_see_obj(self_obj, dude_obj) and (global_var(GVAR_BLADES_LEFT) < 41)) then begin
        hostile := 1;
    end
    if (hostile) then begin
        hostile := 0;
        attack(dude_obj);
    end
end

procedure destroy_p_proc
begin
    set_global_var(GVAR_BLADES_LEFT, global_var(GVAR_BLADES_LEFT) - 1);
    set_global_var(GVAR_BLADES_HELP, 0);
    if (source_obj == dude_obj) then begin
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if ((global_var(GVAR_GOOD_MONSTER) % 2) == 0) then begin
            set_global_var(GVAR_PLAYER_REPUATION, global_var(GVAR_PLAYER_REPUATION) - 1);
        end
    end
end

procedure look_at_p_proc
begin
    if ((global_var(GVAR_BECOME_BLADE) == 2) or (dude_luck > 6)) then begin
        call show_true_name();
    end
    else begin
        if (dude_luck < 4) then begin
            call show_false_name();
        end
        else begin
            if (dude_iq < 5) then begin
                call show_false_name();
            end
            else begin
                if (random(0, 1)) then begin
                    call show_false_name();
                end
                else begin
                    call show_true_name();
                end
            end
        end
    end
end

procedure map_update_p_proc
begin
    if (not(initialized)) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_BLADES);
        if (cur_map_index == 44) then begin
            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 47);
        end
        else begin
            if ((cur_map_index == 17) or (cur_map_index == 18)) then begin
                party_add(self_obj);
                if (global_var(GVAR_BLADES_HELP) == 1) then begin
                    set_obj_visibility(self_obj, 0);
                    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 0);
                    add_timer_event(self_obj, game_ticks(1), 1);
                end
                else begin
                    set_obj_visibility(self_obj, 1);
                end
            end
            else begin
                if ((cur_map_index != 17) and (cur_map_index != 18)) then begin
                    party_remove(self_obj);
                end
            end
        end
        initialized := 1;
    end
    if ((elevation(self_obj) != dude_elevation) and (global_var(GVAR_BLADES_HELP) == 1)) then begin
        move_to(self_obj, tile_num_in_direction(dude_tile, random(4, 5), 1), dude_elevation);
    end
end

procedure pickup_p_proc
begin
    hostile := 1;
end

procedure talk_p_proc
begin
    start_gdialog(280, self_obj, 4, -1, -1);
    gsay_start;
    set_local_var(4, 1);
    if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
        call Fire18();
    end
    else begin
        if (global_var(GVAR_BECOME_BLADE) == 2) then begin
            call Fire21();
        end
        else begin
            if (global_var(GVAR_BECOME_BLADE) == 1) then begin
                if (global_var(GVAR_BLADES_HELP) == 1) then begin
                    call Fire19();
                end
                else begin
                    call Fire20();
                end
            end
            else begin
                call Fire00();
            end
        end
    end
    gsay_end;
    end_dialogue;
end

procedure Fire00
begin
    Reply(111);
    giq_option(-3, NAME, 112, Fire01, NEUTRAL_REACTION);
    giq_option(4, NAME, 113, Fire07, NEUTRAL_REACTION);
    giq_option(6, NAME, 114, Fire11, NEUTRAL_REACTION);
    giq_option(5, NAME, 115, FireCombat, NEUTRAL_REACTION);
    giq_option(4, NAME, 116, FireEnd, NEUTRAL_REACTION);
    giq_option(6, NAME, 117, Fire17, NEUTRAL_REACTION);
end

procedure Fire01
begin
    Reply(118);
    giq_option(-3, NAME, 119, Fire02, NEUTRAL_REACTION);
    giq_option(-3, NAME, 120, Fire05, NEUTRAL_REACTION);
    giq_option(-3, NAME, 121, Fire06, NEUTRAL_REACTION);
end

procedure Fire02
begin
    Reply(122);
    giq_option(-3, NAME, 123, Fire03, NEUTRAL_REACTION);
    giq_option(-3, NAME, 124, Fire04, NEUTRAL_REACTION);
end

procedure Fire03
begin
    gsay_message(NAME, 125, NEUTRAL_REACTION);
end

procedure Fire04
begin
    gsay_message(NAME, 126, NEUTRAL_REACTION);
    call FireCombat();
end

procedure Fire05
begin
    gsay_message(NAME, 127, NEUTRAL_REACTION);
    call FireCombat();
end

procedure Fire06
begin
    gsay_message(NAME, 128, NEUTRAL_REACTION);
end

procedure Fire07
begin
    Reply(129);
    giq_option(4, NAME, 130, FireEnd, NEUTRAL_REACTION);
    giq_option(4, NAME, 131, Fire08, NEUTRAL_REACTION);
    giq_option(5, NAME, 132, Fire09, NEUTRAL_REACTION);
    giq_option(7, NAME, 133, Fire10, NEUTRAL_REACTION);
end

procedure Fire08
begin
    gsay_message(NAME, 134, NEUTRAL_REACTION);
    call FireCombat();
end

procedure Fire09
begin
    Reply(135);
    giq_option(5, NAME, 136, FireEnd, NEUTRAL_REACTION);
    giq_option(5, NAME, 137, Fire08, NEUTRAL_REACTION);
end

procedure Fire10
begin
    gsay_message(NAME, 138, NEUTRAL_REACTION);
end

procedure Fire11
begin
    Reply(139);
    giq_option(6, NAME, 140, Fire12, NEUTRAL_REACTION);
    giq_option(6, NAME, 141, Fire15, NEUTRAL_REACTION);
    giq_option(6, NAME, 142, Fire16, NEUTRAL_REACTION);
end

procedure Fire12
begin
    Reply(143);
    giq_option(6, NAME, 144, Fire13, NEUTRAL_REACTION);
    giq_option(6, NAME, 145, Fire14, NEUTRAL_REACTION);
end

procedure Fire13
begin
    gsay_message(NAME, 146, NEUTRAL_REACTION);
end

procedure Fire14
begin
    gsay_message(NAME, 147, NEUTRAL_REACTION);
    call FireCombat();
end

procedure Fire15
begin
    gsay_message(NAME, 148, NEUTRAL_REACTION);
end

procedure Fire16
begin
    gsay_message(NAME, 149, NEUTRAL_REACTION);
    call FireCombat();
end

procedure Fire17
begin
    gsay_message(NAME, 150, NEUTRAL_REACTION);
    call FireCombat();
end

procedure Fire18
begin
    gsay_message(NAME, 151, NEUTRAL_REACTION);
    add_timer_event(self_obj, game_ticks(10), 2);
end

procedure Fire19
begin
    gsay_message(NAME, 152, NEUTRAL_REACTION);
end

procedure Fire20
begin
    gsay_message(NAME, 153, NEUTRAL_REACTION);
end

procedure Fire21
begin
    gsay_message(NAME, 154, NEUTRAL_REACTION);
end

procedure FireCombat
begin
    hostile := 1;
end

procedure FireEnd
begin
end

procedure follow_player
begin
    variable LVar0 := 0;
    prev_tile := dest_tile;
    LVar0 := (obj_get_rot(dude_obj) + random(4, 5)) % 6;
    dest_tile := tile_num_in_direction(dude_tile, LVar0, random(2, 3));
    if (tile_distance(prev_tile, dude_tile) > tile_distance(dest_tile, dude_tile)) then begin
        if (tile_distance_objs(self_obj, dude_obj) > 8) then begin
            animate_move_obj_to_tile(self_obj, dest_tile, 1 bwor 16);
        end
        else begin
            animate_move_obj_to_tile(self_obj, dest_tile, 0 bwor 16);
        end
    end
    else begin
        if (tile_distance_objs(self_obj, dude_obj) > 8) then begin
            animate_move_obj_to_tile(self_obj, dest_tile, 1);
        end
        else begin
            animate_move_obj_to_tile(self_obj, dest_tile, 0);
        end
    end
    if (tile_distance_objs(self_obj, dude_obj) > 3) then begin
        add_timer_event(self_obj, game_ticks(1), 1);
    end
    else begin
        add_timer_event(self_obj, game_ticks(random(2, 5)), 1);
    end
end

procedure show_true_name
begin
    script_overrides;
    if (local_var(4)) then begin
        display_mstr(100);
    end
    else begin
        display_mstr(103);
    end
end

procedure show_false_name
begin
    script_overrides;
    display_mstr(random(104, 110));
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        call follow_player();
    end
    else begin
        if (obj_can_see_obj(self_obj, dude_obj)) then begin
            hostile := 1;
        end
    end
end
