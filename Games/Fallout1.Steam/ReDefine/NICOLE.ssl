procedure Start;
procedure look_at_p_proc;
procedure description_p_proc;
procedure talk_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure Nicole00;
procedure Nicole01;
procedure Nicole02;
procedure Nicole04;
procedure Nicole05;
procedure Nicole06;
procedure Nicole07;
procedure Nicole08;
procedure Nicole08a;
procedure Nicole09;
procedure Nicole10;
procedure Nicole11;
procedure Nicole12;
procedure Nicole13;
procedure Nicole14;
procedure Nicole15;
procedure Nicole16;
procedure Nicole17;
procedure Nicole18;
procedure Nicole19;
procedure Nicole20;
procedure Nicole21;
procedure Nicole21a;
procedure Nicole25;
procedure Nicole26;
procedure Nicole27;
procedure Nicole28;
procedure Nicole29;
procedure Nicole30;
procedure Nicole31;
procedure Nicole32;
procedure Nicole33;
procedure Nicole34;
procedure Nicole35;
procedure Nicole36;
procedure Nicole37;
procedure Nicole39;
procedure Nicole41;
procedure Nicole50;
procedure Nicole51;
procedure Nicole52;
procedure Nicole53;
procedure Nicole54;
procedure Nicole55;
procedure Nicole78;
procedure NicoleMore;
procedure NicoleShowOut;
procedure NicoleEnd;

variable Initialize := 1;
variable DisplayMessage := 100;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure Start
begin
    if (Initialize) then begin
        if (obj_is_carrying_obj_pid(self_obj, 41) == 0) then begin
            item_caps_adjust(self_obj, random(50, 150));
        end
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 46);
        Initialize := 0;
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure talk_p_proc
begin
    if (global_var(GVAR_ENEMY_FOLLOWERS) == 1) then begin
        float_msg(self_obj, message_str(SCRIPT_ENEMY, random(100, 105)), FLOAT_MSG_RED);
    end
    else begin
        if ((local_var(4) == 1) and (dude_iq < 4)) then begin
            float_msg(self_obj, mstr(286), FLOAT_MSG_NORMAL);
        end
        else begin
            if (local_var(2) == 0) then begin
                set_local_var(2, 1);
                set_local_var(1, 3);
                call LevelToReact();
            end
            start_gdialog(54, self_obj, 4, 19, 12);
            gsay_start;
            if (local_var(4) == 0) then begin
                call Nicole01();
            end
            else begin
                DisplayMessage := 132;
                call Nicole00();
            end
            gsay_end;
            end_dialogue;
            if (local_var(5) == 1) then begin
                gfade_in(600);
                set_local_var(5, 0);
            end
        end
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_ENEMY_FOLLOWERS, 1);
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_ENEMY_FOLLOWERS, 1);
        if (source_obj == dude_obj) then begin
            if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
                set_global_var(GVAR_BERSERKER_REPUTATION, 1);
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
            end
            if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 1);
                set_global_var(GVAR_BERSERKER_REPUTATION, 0);
            end
            set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
            if ((global_var(GVAR_GOOD_MONSTER) % 2) == 0) then begin
                set_global_var(GVAR_PLAYER_REPUATION, global_var(GVAR_PLAYER_REPUATION) - 1);
            end
        end
    end
end

procedure critter_p_proc
begin
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if (global_var(GVAR_ENEMY_FOLLOWERS) == 1) then begin
            attack(dude_obj);
        end
    end
end

procedure pickup_p_proc
begin
    set_global_var(GVAR_ENEMY_FOLLOWERS, 1);
end

procedure Nicole00
begin
    Reply(DisplayMessage);
    giq_option(1, NAME, 101, Nicole29, NEUTRAL_REACTION);
    giq_option(1, NAME, 102, Nicole02, NEUTRAL_REACTION);
    if (global_var(GVAR_MASTER_BLOWN) == 0) then begin
        giq_option(4, NAME, 319, Nicole50, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 131, Nicole14, NEUTRAL_REACTION);
end

procedure Nicole01
begin
    Reply(105);
    giq_option(4, NAME, 106, Nicole02, NEUTRAL_REACTION);
    giq_option(4, NAME, 107, Nicole11, BAD_REACTION);
    giq_option(4, NAME, 108, Nicole09, NEUTRAL_REACTION);
    giq_option(4, NAME, 109, Nicole15, NEUTRAL_REACTION);
    giq_option(-3, NAME, 110, Nicole78, NEUTRAL_REACTION);
    set_local_var(4, 1);
end

procedure Nicole02
begin
    Reply(111);
    giq_option(1, NAME, 112, Nicole04, NEUTRAL_REACTION);
end

procedure Nicole04
begin
    Reply(113);
    giq_option(1, NAME, 114, Nicole05, NEUTRAL_REACTION);
    giq_option(1, NAME, 115, Nicole11, BAD_REACTION);
end

procedure Nicole05
begin
    Reply(116);
    giq_option(1, NAME, 117, Nicole06, NEUTRAL_REACTION);
end

procedure Nicole06
begin
    Reply(118);
    giq_option(1, NAME, 119, Nicole07, NEUTRAL_REACTION);
    giq_option(1, NAME, 123, Nicole08, NEUTRAL_REACTION);
    if (local_var(1) >= 2) then begin
        giq_option(1, NAME, 121, Nicole08a, NEUTRAL_REACTION);
    end
    else begin
        giq_option(1, NAME, 121, Nicole11, BAD_REACTION);
    end
end

procedure Nicole07
begin
    Reply(122);
    giq_option(1, NAME, 123, Nicole08, NEUTRAL_REACTION);
    giq_option(1, NAME, 124, Nicole28, NEUTRAL_REACTION);
    giq_option(1, NAME, 125, Nicole19, GOOD_REACTION);
    if (local_var(1) >= 2) then begin
        giq_option(1, NAME, 126, Nicole08a, NEUTRAL_REACTION);
    end
    else begin
        giq_option(1, NAME, 126, Nicole11, BAD_REACTION);
    end
end

procedure Nicole08
begin
    gsay_message(NAME, 127, NEUTRAL_REACTION);
    DisplayMessage := 129;
    call NicoleMore();
end

procedure Nicole08a
begin
    gsay_message(NAME, 128, NEUTRAL_REACTION);
    DisplayMessage := 129;
    call NicoleMore();
end

procedure Nicole09
begin
    DisplayMessage := 132;
    call Nicole00();
end

procedure Nicole10
begin
    gsay_message(NAME, 133, NEUTRAL_REACTION);
    call NicoleShowOut();
end

procedure Nicole11
begin
    call DownReactLevel();
    Reply(134);
    giq_option(1, NAME, 135, Nicole12, NEUTRAL_REACTION);
    giq_option(1, NAME, 136, Nicole13, NEUTRAL_REACTION);
end

procedure Nicole12
begin
    call BottomReact();
    gsay_message(NAME, 137, NEUTRAL_REACTION);
    call NicoleShowOut();
end

procedure Nicole13
begin
    DisplayMessage := 138;
    call NicoleMore();
end

procedure Nicole14
begin
    gsay_message(NAME, 141, NEUTRAL_REACTION);
end

procedure Nicole15
begin
    Reply(142);
    giq_option(1, NAME, 143, Nicole16, NEUTRAL_REACTION);
end

procedure Nicole16
begin
    Reply(144);
    giq_option(1, NAME, 145, Nicole17, NEUTRAL_REACTION);
    giq_option(1, NAME, 146, Nicole25, NEUTRAL_REACTION);
end

procedure Nicole17
begin
    Reply(147);
    giq_option(1, NAME, 148, Nicole07, NEUTRAL_REACTION);
    giq_option(1, NAME, 149, Nicole18, NEUTRAL_REACTION);
end

procedure Nicole18
begin
    Reply(151);
    giq_option(1, NAME, 152, Nicole19, GOOD_REACTION);
    giq_option(1, NAME, 153, Nicole20, NEUTRAL_REACTION);
end

procedure Nicole19
begin
    DisplayMessage := 154;
    call NicoleMore();
end

procedure Nicole20
begin
    Reply(157);
    giq_option(1, NAME, 158, Nicole21, NEUTRAL_REACTION);
    giq_option(1, NAME, 159, Nicole21a, BAD_REACTION);
    if (local_var(1) >= 2) then begin
        giq_option(1, NAME, 160, Nicole09, NEUTRAL_REACTION);
    end
    else begin
        giq_option(1, NAME, 160, Nicole10, BAD_REACTION);
    end
    giq_option(1, NAME, 164, Nicole14, NEUTRAL_REACTION);
end

procedure Nicole21
begin
    Reply(161);
    if (local_var(1) >= 2) then begin
        giq_option(1, NAME, 163, Nicole09, NEUTRAL_REACTION);
    end
    else begin
        giq_option(1, NAME, 163, Nicole10, BAD_REACTION);
    end
    giq_option(1, NAME, 164, Nicole14, NEUTRAL_REACTION);
end

procedure Nicole21a
begin
    Reply(162);
    if (local_var(1) >= 2) then begin
        giq_option(1, NAME, 163, Nicole09, NEUTRAL_REACTION);
    end
    else begin
        giq_option(1, NAME, 163, Nicole10, BAD_REACTION);
    end
    giq_option(1, NAME, 164, Nicole14, NEUTRAL_REACTION);
end

procedure Nicole25
begin
    Reply(175);
    giq_option(1, NAME, 176, Nicole26, NEUTRAL_REACTION);
    giq_option(1, NAME, 177, Nicole11, NEUTRAL_REACTION);
    giq_option(1, NAME, 178, Nicole27, NEUTRAL_REACTION);
end

procedure Nicole26
begin
    DisplayMessage := 179;
    call NicoleMore();
end

procedure Nicole27
begin
    DisplayMessage := 182;
    call NicoleMore();
end

procedure Nicole28
begin
    Reply(185);
    giq_option(1, NAME, 186, Nicole19, GOOD_REACTION);
    if (local_var(1) >= 2) then begin
        giq_option(1, NAME, 187, Nicole09, NEUTRAL_REACTION);
    end
    else begin
        giq_option(1, NAME, 187, Nicole10, BAD_REACTION);
    end
    giq_option(1, NAME, 188, Nicole14, NEUTRAL_REACTION);
end

procedure Nicole29
begin
    Reply(189);
    giq_option(1, NAME, 190, Nicole30, NEUTRAL_REACTION);
    giq_option(1, NAME, 191, Nicole31, NEUTRAL_REACTION);
    giq_option(1, NAME, 192, Nicole04, NEUTRAL_REACTION);
end

procedure Nicole30
begin
    Reply(193);
    giq_option(1, NAME, 194, Nicole31, NEUTRAL_REACTION);
    giq_option(1, NAME, 195, Nicole36, NEUTRAL_REACTION);
end

procedure Nicole31
begin
    Reply(196);
    giq_option(1, NAME, 197, Nicole39, NEUTRAL_REACTION);
    giq_option(1, NAME, 198, Nicole11, NEUTRAL_REACTION);
    giq_option(1, NAME, 199, Nicole32, NEUTRAL_REACTION);
    giq_option(1, NAME, 195, Nicole36, NEUTRAL_REACTION);
end

procedure Nicole32
begin
    Reply(201);
    giq_option(1, NAME, 202, Nicole33, NEUTRAL_REACTION);
    giq_option(1, NAME, 195, Nicole36, NEUTRAL_REACTION);
end

procedure Nicole33
begin
    Reply(204);
    giq_option(1, NAME, 205, Nicole11, NEUTRAL_REACTION);
    giq_option(1, NAME, 206, Nicole34, NEUTRAL_REACTION);
    giq_option(1, NAME, 207, Nicole36, NEUTRAL_REACTION);
end

procedure Nicole34
begin
    Reply(208);
    giq_option(1, NAME, 209, Nicole36, NEUTRAL_REACTION);
    giq_option(1, NAME, 210, Nicole35, NEUTRAL_REACTION);
    if (local_var(1) >= 2) then begin
        giq_option(1, NAME, 211, Nicole09, NEUTRAL_REACTION);
    end
    else begin
        giq_option(1, NAME, 211, Nicole10, BAD_REACTION);
    end
    giq_option(1, NAME, 212, Nicole14, NEUTRAL_REACTION);
end

procedure Nicole35
begin
    gsay_message(NAME, 213, NEUTRAL_REACTION);
    call DownReactLevel();
end

procedure Nicole36
begin
    Reply(214);
    giq_option(1, NAME, 215, Nicole37, NEUTRAL_REACTION);
    giq_option(1, NAME, 216, Nicole41, NEUTRAL_REACTION);
end

procedure Nicole37
begin
    Reply(217);
    giq_option(1, NAME, 218, Nicole39, NEUTRAL_REACTION);
    giq_option(1, NAME, 219, Nicole41, NEUTRAL_REACTION);
end

procedure Nicole39
begin
    DisplayMessage := 220;
    call TopReact();
    call NicoleMore();
end

procedure Nicole41
begin
    Reply(223);
    giq_option(1, NAME, 224, Nicole00, NEUTRAL_REACTION);
    giq_option(1, NAME, 225, NicoleEnd, NEUTRAL_REACTION);
end

procedure Nicole50
begin
    DisplayMessage := 132;
    Reply(307);
    giq_option(1, NAME, 320, Nicole51, NEUTRAL_REACTION);
    giq_option(1, NAME, 321, Nicole00, NEUTRAL_REACTION);
end

procedure Nicole51
begin
    Reply(DisplayMessage);
    giq_option(1, NAME, 322, Nicole52, NEUTRAL_REACTION);
    giq_option(1, NAME, 323, Nicole53, NEUTRAL_REACTION);
    giq_option(1, NAME, 324, Nicole54, NEUTRAL_REACTION);
    giq_option(1, NAME, 321, Nicole00, NEUTRAL_REACTION);
    giq_option(1, NAME, 326, Nicole14, NEUTRAL_REACTION);
end

procedure Nicole52
begin
    DisplayMessage := 299;
    call Nicole51();
end

procedure Nicole53
begin
    DisplayMessage := 185;
    call Nicole51();
end

procedure Nicole54
begin
    Reply(251);
    giq_option(1, NAME, 325, Nicole55, NEUTRAL_REACTION);
    set_global_var(GVAR_FOLLOWER_MACHO_HELP, 1);
end

procedure Nicole55
begin
    set_global_var(GVAR_SHADOW_PASSWORD, 1);
    gsay_message(NAME, 254, NEUTRAL_REACTION);
end

procedure Nicole78
begin
    gsay_message(NAME, 291, NEUTRAL_REACTION);
end

procedure NicoleMore
begin
    Reply(DisplayMessage);
    if (local_var(1) >= 2) then begin
        giq_option(1, NAME, 155, Nicole09, NEUTRAL_REACTION);
    end
    else begin
        giq_option(1, NAME, 155, Nicole10, BAD_REACTION);
    end
    giq_option(1, NAME, 131, Nicole14, NEUTRAL_REACTION);
end

procedure NicoleShowOut
begin
    gfade_out(600);
    move_to(dude_obj, 23883, 0);
    set_local_var(5, 1);
end

procedure NicoleEnd
begin
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * dude_charisma) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence)));
        if (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality)) then begin
            if (global_var(GVAR_PLAYER_REPUATION) > 0) then begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
        end
        if (global_var(GVAR_CHILDKILLER_REPUATION) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(SCRIPT_MODREACT, random(100, 105));
end
