procedure start;
procedure do_dialogue;
procedure goto01;
procedure goto02;
procedure goto03;
procedure goto04;
procedure goto05;
procedure goto06;
procedure goto07;
procedure goto08;
procedure goto09;
procedure goto10;
procedure goto11;
procedure goto12;
procedure goto13;
procedure goto14;
procedure goto15;
procedure goto16;
procedure goto17;
procedure goto18;
procedure goto19;
procedure goto20;
procedure goto21;
procedure goto22;
procedure goto23;
procedure goto24;
procedure goto24a;
procedure goto25;
procedure goto26;
procedure goto27;
procedure goto75;
procedure gotoend;
procedure gotopart;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure smalltalk;
procedure pre_dialogue;

variable known;
variable only_once := 1;
variable hostile;
variable radx;
variable ccount;
variable loot;
variable stuff;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure start
begin
    if (only_once) then begin
        only_once := 0;
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 44);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_BROTHERHOOD_KNIGHT);
    end
    if (script_action == look_at_proc) then begin
        call look_at_p_proc();
    end
    else begin
        if (script_action == pickup_proc) then begin
            call pickup_p_proc();
        end
        else begin
            if (script_action == talk_proc) then begin
                call talk_p_proc();
            end
            else begin
                if (script_action == critter_proc) then begin
                    call critter_p_proc();
                end
                else begin
                    if (script_action == destroy_proc) then begin
                        call destroy_p_proc();
                    end
                end
            end
        end
    end
end

procedure do_dialogue
begin
    display_msg("in do_dialogue");
    call get_reaction();
    start_gdialog(845, self_obj, 4, -1, -1);
    gsay_start;
    if (local_var(4) == 0) then begin
        set_local_var(4, 1);
        call goto01();
    end
    else begin
        if (global_var(GVAR_CALM_REBELS_7) == 2) then begin
            call goto26();
        end
        else begin
            if (global_var(GVAR_CALM_REBELS_7) == 3) then begin
                call goto26();
            end
            else begin
                if (obj_carrying_pid_obj(dude_obj, 229)) then begin
                    call goto23();
                end
                else begin
                    if (global_var(GVAR_CALM_REBELS_7)) then begin
                        call goto17();
                    end
                    else begin
                        call goto27();
                    end
                end
            end
        end
    end
    gsay_end;
    end_dialogue;
end

procedure goto01
begin
    Reply(102);
    giq_option(-3, NAME, 103, goto02, NEUTRAL_REACTION);
    giq_option(4, NAME, 103, goto02, NEUTRAL_REACTION);
    giq_option(4, NAME, 104, goto13, NEUTRAL_REACTION);
end

procedure goto02
begin
    Reply(105);
    giq_option(4, NAME, 106, goto04, NEUTRAL_REACTION);
    giq_option(4, NAME, 107, goto03, NEUTRAL_REACTION);
    giq_option(4, NAME, 108, goto14, NEUTRAL_REACTION);
    giq_option(-3, NAME, 103, gotoend, NEUTRAL_REACTION);
end

procedure goto03
begin
    Reply(109);
    giq_option(4, NAME, 110, goto04, NEUTRAL_REACTION);
    giq_option(4, NAME, 111, goto06, NEUTRAL_REACTION);
    giq_option(4, NAME, 112, goto09, BAD_REACTION);
end

procedure goto04
begin
    Reply(113);
    if (global_var(GVAR_NECROP_WATER_CHIP_TAKEN) != 1) then begin
        giq_option(4, NAME, 114, goto12, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 115, goto05, NEUTRAL_REACTION);
    giq_option(4, NAME, 116, gotoend, NEUTRAL_REACTION);
end

procedure goto05
begin
    Reply(117);
    giq_option(4, NAME, 118, goto06, NEUTRAL_REACTION);
    if (global_var(GVAR_NECROP_WATER_CHIP_TAKEN) != 1) then begin
        giq_option(4, NAME, 114, goto12, NEUTRAL_REACTION);
    end
end

procedure goto06
begin
    Reply(119);
    giq_option(4, NAME, 120, goto07, NEUTRAL_REACTION);
    giq_option(4, NAME, 121, gotoend, NEUTRAL_REACTION);
end

procedure goto07
begin
    Reply(122);
    giq_option(4, NAME, 123, goto08, NEUTRAL_REACTION);
    giq_option(4, NAME, 124, goto10, NEUTRAL_REACTION);
end

procedure goto08
begin
    Reply(125);
    giq_option(4, NAME, 124, goto10, NEUTRAL_REACTION);
    giq_option(4, NAME, 126, goto09, BAD_REACTION);
end

procedure goto09
begin
    call BottomReact();
    gsay_message(NAME, 127, BAD_REACTION);
end

procedure goto10
begin
    Reply(128);
    giq_option(4, NAME, 129, goto11, NEUTRAL_REACTION);
    giq_option(4, NAME, 130, gotopart, NEUTRAL_REACTION);
end

procedure goto11
begin
    Reply(131);
    giq_option(4, NAME, 132, gotopart, NEUTRAL_REACTION);
end

procedure goto12
begin
    Reply(133);
    giq_option(4, NAME, 134, gotoend, NEUTRAL_REACTION);
    giq_option(4, NAME, 135, goto09, BAD_REACTION);
    giq_option(4, NAME, 136, goto06, NEUTRAL_REACTION);
end

procedure goto13
begin
    Reply(137);
    giq_option(4, NAME, 138, goto02, NEUTRAL_REACTION);
    giq_option(4, NAME, 139, goto04, BAD_REACTION);
    giq_option(4, NAME, 140, gotoend, NEUTRAL_REACTION);
end

procedure goto14
begin
    Reply(141);
    giq_option(4, NAME, 142, goto15, NEUTRAL_REACTION);
end

procedure goto15
begin
    Reply(143);
    giq_option(4, NAME, mstr(144) + proto_data(obj_pid(dude_obj), 1) + mstr(145), goto13, NEUTRAL_REACTION);
    giq_option(4, NAME, 146, goto16, NEUTRAL_REACTION);
end

procedure goto16
begin
    Reply(147);
    giq_option(4, NAME, 148, goto06, NEUTRAL_REACTION);
end

procedure goto17
begin
    Reply(149);
    giq_option(4, NAME, 150, goto18, NEUTRAL_REACTION);
    giq_option(4, NAME, 151, gotoend, NEUTRAL_REACTION);
    giq_option(4, NAME, 152, gotoend, NEUTRAL_REACTION);
    giq_option(-3, NAME, 103, gotoend, NEUTRAL_REACTION);
end

procedure goto18
begin
    Reply(153);
    giq_option(4, NAME, 154, goto09, BAD_REACTION);
    giq_option(4, NAME, 155, goto19, NEUTRAL_REACTION);
    giq_option(4, NAME, 156, goto11, NEUTRAL_REACTION);
    giq_option(4, NAME, 157, gotoend, NEUTRAL_REACTION);
end

procedure goto19
begin
    Reply(158);
    giq_option(4, NAME, 159, gotoend, NEUTRAL_REACTION);
    giq_option(4, NAME, 160, goto11, NEUTRAL_REACTION);
end

procedure goto20
begin
end

procedure goto21
begin
    float_msg(self_obj, mstr(161), FLOAT_MSG_RED);
end

procedure goto22
begin
    float_msg(self_obj, mstr(162), FLOAT_MSG_RED);
end

procedure goto23
begin
    loot := 0;
    Reply(163);
    loot := obj_carrying_pid_obj(dude_obj, 229);
    if (loot) then begin
        giq_option(4, NAME, 164, goto24, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 165, goto25, NEUTRAL_REACTION);
    giq_option(-3, NAME, 103, gotoend, NEUTRAL_REACTION);
end

procedure goto24
begin
    rm_obj_from_inven(dude_obj, loot);
    Reply(166);
    giq_option(4, NAME, 300, goto24a, NEUTRAL_REACTION);
end

procedure goto24a
begin
    gfade_out(600);
    gfade_in(600);
    stuff := create_object(76, 0, 0);
    add_obj_to_inven(dude_obj, stuff);
    set_global_var(GVAR_CALM_REBELS_7, 2);
    gsay_message(NAME, 167, NEUTRAL_REACTION);
end

procedure goto25
begin
    gsay_message(NAME, 168, NEUTRAL_REACTION);
end

procedure goto26
begin
    Reply(169);
    giq_option(4, NAME, 170, gotoend, NEUTRAL_REACTION);
    giq_option(-3, NAME, 103, gotoend, NEUTRAL_REACTION);
end

procedure goto27
begin
    Reply(171);
    giq_option(4, NAME, 106, goto04, NEUTRAL_REACTION);
    giq_option(4, NAME, 104, goto13, NEUTRAL_REACTION);
    giq_option(-3, NAME, 103, gotoend, NEUTRAL_REACTION);
end

procedure goto75
begin
end

procedure gotoend
begin
end

procedure gotopart
begin
    set_global_var(GVAR_CALM_REBELS_7, 1);
end

procedure combat
begin
    hostile := 1;
end

procedure critter_p_proc
begin
    if (global_var(GVAR_ENEMY_BROTHERHOOD)) then begin
        hostile := 1;
    end
    if (tile_distance_objs(self_obj, dude_obj) > 12) then begin
        hostile := 0;
    end
    if (hostile) then begin
        set_global_var(GVAR_ENEMY_BROTHERHOOD, 1);
        hostile := 0;
        attack(dude_obj);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        hostile := 1;
    end
end

procedure talk_p_proc
begin
    debug_msg("global_var(PART_RUN) == " + global_var(GVAR_CALM_REBELS_7));
    if (global_var(GVAR_CALM_REBELS_7) == 4) then begin
        call smalltalk();
    end
    else begin
        if ((local_var(4) == 1) and (local_var(1) < 2)) then begin
            call goto22();
        end
        else begin
            call get_reaction();
            start_gdialog(845, self_obj, 4, -1, -1);
            gsay_start;
            if (local_var(4) == 0) then begin
                set_local_var(4, 1);
                call goto01();
            end
            else begin
                if (global_var(GVAR_CALM_REBELS_7) == 2) then begin
                    call goto26();
                end
                else begin
                    if (global_var(GVAR_CALM_REBELS_7) == 3) then begin
                        call goto26();
                    end
                    else begin
                        if (obj_carrying_pid_obj(dude_obj, 229)) then begin
                            call goto23();
                        end
                        else begin
                            if (global_var(GVAR_CALM_REBELS_7)) then begin
                                call goto17();
                            end
                            else begin
                                call goto27();
                            end
                        end
                    end
                end
            end
            gsay_end;
            end_dialogue;
        end
    end
end

procedure destroy_p_proc
begin
    set_global_var(GVAR_ENEMY_BROTHERHOOD, 1);
    if (source_obj == dude_obj) then begin
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if ((global_var(GVAR_GOOD_MONSTER) % 2) == 0) then begin
            set_global_var(GVAR_PLAYER_REPUATION, global_var(GVAR_PLAYER_REPUATION) - 1);
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (known) then begin
        display_mstr(100);
    end
    else begin
        display_mstr(101);
    end
end

procedure smalltalk
begin
    ccount := ccount + 1;
    if (ccount < 6) then begin
        float_msg(self_obj, message_str(SCRIPT_RD1SCRB1, 200 + random(0, 2)), FLOAT_MSG_RED);
    end
    else begin
        if (ccount < 9) then begin
            float_msg(self_obj, message_str(SCRIPT_RD1SCRB1, 203 + random(0, 4)), FLOAT_MSG_RED);
        end
        else begin
            if (ccount < 12) then begin
                float_msg(self_obj, message_str(SCRIPT_RD1SCRB1, 209 + random(0, 3)), FLOAT_MSG_RED);
            end
            else begin
                display_msg(message_str(SCRIPT_RD1SCRB1, 213));
            end
        end
    end
end

procedure pre_dialogue
begin
    display_msg("in pre_dialogue");
    if (global_var(GVAR_CALM_REBELS_7) == 4) then begin
        call smalltalk();
    end
    else begin
        if ((local_var(4) == 1) and (local_var(1) < 2)) then begin
            call goto22();
        end
        else begin
            call do_dialogue();
        end
    end
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * dude_charisma) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence)));
        if (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality)) then begin
            if (global_var(GVAR_PLAYER_REPUATION) > 0) then begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
        end
        if (global_var(GVAR_CHILDKILLER_REPUATION) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(SCRIPT_MODREACT, random(100, 105));
end
