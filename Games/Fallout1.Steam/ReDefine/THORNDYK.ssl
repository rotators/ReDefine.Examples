procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure flee_dude;
procedure damage_p_proc;
procedure Thorn00;
procedure Thorn01;
procedure Thorn02;
procedure Thorn02a;
procedure Thorn03;
procedure Thorn03a;
procedure Thorn03b;
procedure Thorn04;
procedure Thorn05;
procedure Thorn06;
procedure Thorn07;
procedure Thorn08;
procedure Thorn09;
procedure Thorn10;
procedure Thorn11;
procedure Thorn12;
procedure Thorn13;
procedure Thorn14;
procedure Thorn15;
procedure Thorn16;
procedure Thorn17;
procedure Thorn17a;
procedure Thorn18;
procedure Thorn18a;
procedure Thorn19;
procedure Thorn20;
procedure Thorn21;
procedure Thorn22;
procedure Thorn22a;
procedure Thorn22b;
procedure Thorn23;
procedure Thorn24;
procedure Thorn25;
procedure Thorn26;
procedure Thorn27;
procedure Thorn28;
procedure Thorn29;

variable hostile;
variable Only_Once := 1;
variable PlayerYellsOuch;
variable DoctorPostTreatmentResponse;
variable HealPlayer;

import variable Thorndyke_Ptr;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure start
begin
    if (Only_Once) then begin
        Only_Once := 0;
        Thorndyke_Ptr := self_obj;
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 72);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_COC_HUB_BRAINWASHED);
    end
    if (script_action == look_at_proc) then begin
        call look_at_p_proc();
    end
    else begin
        if (script_action == pickup_proc) then begin
            call pickup_p_proc();
        end
        else begin
            if (script_action == talk_proc) then begin
                call talk_p_proc();
            end
            else begin
                if (script_action == critter_proc) then begin
                    call critter_p_proc();
                end
                else begin
                    if (script_action == destroy_proc) then begin
                        call destroy_p_proc();
                    end
                end
            end
        end
    end
end

procedure combat
begin
    hostile := 1;
end

procedure critter_p_proc
begin
    if (hostile) then begin
        hostile := 0;
        attack(dude_obj);
    end
    if ((map_var(6) == 1) and (obj_can_see_obj(self_obj, dude_obj) == 1)) then begin
        call combat();
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        hostile := 1;
    end
end

procedure talk_p_proc
begin
    variable LVar0 := 0;
    call get_reaction();
    if (global_var(GVAR_CATHEDRAL_ENEMY) == 1) then begin
        call Thorn00();
    end
    else begin
        if (local_var(5) == 1) then begin
            call Thorn28();
        end
        else begin
            if (map_var(0) == 1) then begin
                call Thorn29();
            end
            else begin
                if ((global_var(GVAR_CHILDKILLER_REPUATION) == 1) or (global_var(GVAR_BERSERKER_REPUTATION) == 1)) then begin
                    call Thorn01();
                end
                else begin
                    start_gdialog(603, self_obj, 4, -1, -1);
                    gsay_start;
                    call Thorn02();
                    gsay_end;
                    end_dialogue;
                end
            end
        end
    end
    if (HealPlayer == 1) then begin
        HealPlayer := 0;
        set_local_var(6, game_time / (10 * 60 * 60));
        if (PlayerYellsOuch == 1) then begin
            PlayerYellsOuch := 0;
            float_msg(dude_obj, 168, FLOAT_MSG_WHITE);
        end
        float_msg(self_obj, mstr(DoctorPostTreatmentResponse), FLOAT_MSG_RED);
        LVar0 := random(5, 15) + 10;
        critter_heal(dude_obj, LVar0);
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if ((global_var(GVAR_GOOD_MONSTER) % 2) == 0) then begin
            set_global_var(GVAR_PLAYER_REPUATION, global_var(GVAR_PLAYER_REPUATION) - 1);
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure flee_dude
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    while (LVar1 < 5) do begin
        if (tile_distance(dude_tile, tile_num_in_direction(tile_num(self_obj), LVar1, 3)) > LVar2) then begin
            LVar0 := tile_num_in_direction(tile_num(self_obj), LVar1, 3);
            LVar2 := tile_distance(dude_tile, LVar0);
        end
        LVar1 := LVar1 + 1;
    end
    animate_move_obj_to_tile(self_obj, LVar0, 0);
end

procedure damage_p_proc
begin
    variable LVar0 := 0;
    LVar0 := obj_pid(source_obj);
    if (party_member_obj(LVar0) != 0) then begin
        set_map_var(6, 1);
    end
end

procedure Thorn00
begin
    float_msg(self_obj, mstr(101), FLOAT_MSG_RED);
    call flee_dude();
end

procedure Thorn01
begin
    float_msg(self_obj, mstr(102), FLOAT_MSG_RED);
    call flee_dude();
end

procedure Thorn02
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    LVar0 := get_critter_stat(dude_obj, STAT_current_hp);
    LVar1 := get_critter_stat(dude_obj, STAT_max_hp);
    if (LVar0 == LVar1) then begin
        if (dude_gender == 0) then begin
            Reply(103);
        end
        else begin
            Reply(104);
        end
        giq_option(7, NAME, 105, Thorn02a, GOOD_REACTION);
        giq_option(7, NAME, 106, Thorn05, NEUTRAL_REACTION);
        giq_option(4, NAME, 107, Thorn06, NEUTRAL_REACTION);
        giq_option(4, NAME, 108, Thorn07, NEUTRAL_REACTION);
        giq_option(4, NAME, 109, Thorn08, BAD_REACTION);
        giq_option(-3, NAME, 110, Thorn09, BAD_REACTION);
    end
    else begin
        if ((LVar0 < LVar1) and (((game_time / (10 * 60 * 60)) - local_var(6)) < 24)) then begin
            if (dude_gender == 0) then begin
                Reply(111);
            end
            else begin
                Reply(112);
            end
            giq_option(7, NAME, 113, Thorn02a, NEUTRAL_REACTION);
            giq_option(7, NAME, 114, Thorn05, NEUTRAL_REACTION);
            giq_option(4, NAME, 115, Thorn27, BAD_REACTION);
            giq_option(4, NAME, 116, Thorn07, GOOD_REACTION);
            giq_option(4, NAME, 117, Thorn08, BAD_REACTION);
            giq_option(-3, NAME, 118, Thorn09, NEUTRAL_REACTION);
        end
        else begin
            if ((LVar0 > (LVar1 / 2)) and (((game_time / (10 * 60 * 60)) - local_var(6)) > 24)) then begin
                if (dude_gender == 0) then begin
                    Reply(119);
                end
                else begin
                    Reply(120);
                end
                giq_option(7, NAME, 121, Thorn10, NEUTRAL_REACTION);
                giq_option(7, NAME, 122, Thorn10, NEUTRAL_REACTION);
                giq_option(4, NAME, 123, Thorn11, NEUTRAL_REACTION);
                giq_option(4, NAME, 124, Thorn12, NEUTRAL_REACTION);
                giq_option(4, NAME, 125, Thorn13, NEUTRAL_REACTION);
                giq_option(4, NAME, 126, Thorn14, NEUTRAL_REACTION);
                giq_option(-3, NAME, 127, Thorn15, NEUTRAL_REACTION);
                giq_option(-3, NAME, 128, Thorn16, NEUTRAL_REACTION);
            end
            else begin
                if ((LVar0 < (LVar1 / 2)) and (((game_time / (10 * 60 * 60)) - local_var(6)) > 24)) then begin
                    if (dude_gender == 0) then begin
                        Reply(129);
                    end
                    else begin
                        Reply(130);
                    end
                    giq_option(7, NAME, 131, Thorn10, NEUTRAL_REACTION);
                    giq_option(7, NAME, 132, Thorn10, NEUTRAL_REACTION);
                    giq_option(4, NAME, 133, Thorn11, NEUTRAL_REACTION);
                    giq_option(4, NAME, 124, Thorn12, NEUTRAL_REACTION);
                    giq_option(4, NAME, 134, Thorn13, NEUTRAL_REACTION);
                    giq_option(4, NAME, 135, Thorn14, NEUTRAL_REACTION);
                    giq_option(-3, NAME, 136, Thorn15, NEUTRAL_REACTION);
                    giq_option(-3, NAME, 137, Thorn16, NEUTRAL_REACTION);
                end
            end
        end
    end
end

procedure Thorn02a
begin
    if (is_success(roll_vs_skill(dude_obj, 14, 0)) == 1) then begin
        call Thorn03();
    end
    else begin
        call Thorn04();
    end
end

procedure Thorn03
begin
    Reply(138);
    giq_option(7, NAME, 139, Thorn03a, NEUTRAL_REACTION);
    giq_option(7, NAME, 140, Thorn03b, NEUTRAL_REACTION);
    giq_option(7, NAME, 141, Thorn05, NEUTRAL_REACTION);
    giq_option(4, NAME, 142, Thorn07, NEUTRAL_REACTION);
    giq_option(4, NAME, 143, Thorn19, NEUTRAL_REACTION);
end

procedure Thorn03a
begin
    if (is_success(roll_vs_skill(dude_obj, 14, 0)) == 1) then begin
        call Thorn17();
    end
    else begin
        call Thorn04();
    end
end

procedure Thorn03b
begin
    if (is_success(roll_vs_skill(dude_obj, 14, 0)) == 1) then begin
        call Thorn18();
    end
    else begin
        call Thorn04();
    end
end

procedure Thorn04
begin
    if (dude_gender == 0) then begin
        gsay_message(NAME, 144, NEUTRAL_REACTION);
    end
    else begin
        gsay_message(NAME, 145, NEUTRAL_REACTION);
    end
end

procedure Thorn05
begin
    if (dude_gender == 0) then begin
        gsay_message(NAME, 146, NEUTRAL_REACTION);
    end
    else begin
        gsay_message(NAME, 147, NEUTRAL_REACTION);
    end
end

procedure Thorn06
begin
    gsay_message(NAME, 148, NEUTRAL_REACTION);
end

procedure Thorn07
begin
    gsay_message(NAME, 149, NEUTRAL_REACTION);
end

procedure Thorn08
begin
    gsay_message(NAME, 150, BAD_REACTION);
end

procedure Thorn09
begin
    gsay_message(NAME, 151, NEUTRAL_REACTION);
end

procedure Thorn10
begin
    Reply(152);
    giq_option(7, NAME, 153, Thorn20, BAD_REACTION);
    giq_option(7, NAME, 154, Thorn20, NEUTRAL_REACTION);
    giq_option(4, NAME, 155, Thorn11, NEUTRAL_REACTION);
    giq_option(4, NAME, 156, Thorn12, GOOD_REACTION);
    giq_option(4, NAME, 157, Thorn13, NEUTRAL_REACTION);
    giq_option(4, NAME, 158, Thorn14, NEUTRAL_REACTION);
end

procedure Thorn11
begin
    Reply(159);
    giq_option(4, NAME, 160, Thorn12, NEUTRAL_REACTION);
    giq_option(4, NAME, 157, Thorn13, NEUTRAL_REACTION);
    giq_option(4, NAME, 162, Thorn24, BAD_REACTION);
    giq_option(4, NAME, 163, Thorn14, NEUTRAL_REACTION);
end

procedure Thorn12
begin
    DoctorPostTreatmentResponse := 164;
    PlayerYellsOuch := 0;
    HealPlayer := 1;
    gsay_message(NAME, 161, NEUTRAL_REACTION);
end

procedure Thorn13
begin
    gsay_message(NAME, 165, NEUTRAL_REACTION);
end

procedure Thorn14
begin
    gsay_message(NAME, 166, NEUTRAL_REACTION);
end

procedure Thorn15
begin
    DoctorPostTreatmentResponse := 169;
    PlayerYellsOuch := 1;
    HealPlayer := 1;
    gsay_message(NAME, 167, NEUTRAL_REACTION);
end

procedure Thorn16
begin
    gsay_message(NAME, 170, NEUTRAL_REACTION);
end

procedure Thorn17
begin
    Reply(171);
    giq_option(7, NAME, 172, Thorn17a, NEUTRAL_REACTION);
    giq_option(4, NAME, 173, Thorn27, NEUTRAL_REACTION);
    giq_option(4, NAME, 174, Thorn27, NEUTRAL_REACTION);
    giq_option(4, NAME, 175, Thorn14, NEUTRAL_REACTION);
end

procedure Thorn17a
begin
    if (is_success(roll_vs_skill(dude_obj, 14, 0)) == 1) then begin
        call Thorn21();
    end
    else begin
        call Thorn04();
    end
end

procedure Thorn18
begin
    Reply(176);
    giq_option(7, NAME, 177, Thorn18a, NEUTRAL_REACTION);
    giq_option(4, NAME, 178, Thorn24, BAD_REACTION);
    giq_option(4, NAME, 179, Thorn27, NEUTRAL_REACTION);
    giq_option(4, NAME, 180, Thorn24, BAD_REACTION);
    giq_option(4, NAME, 181, Thorn14, NEUTRAL_REACTION);
end

procedure Thorn18a
begin
    if (is_success(roll_vs_skill(dude_obj, 14, 0)) == 1) then begin
        call Thorn22();
    end
    else begin
        call Thorn04();
    end
end

procedure Thorn19
begin
    gsay_message(NAME, 182, NEUTRAL_REACTION);
end

procedure Thorn20
begin
    Reply(183);
    giq_option(7, NAME, 184, Thorn23, BAD_REACTION);
    giq_option(4, NAME, 185, Thorn24, BAD_REACTION);
    giq_option(4, NAME, 186, Thorn12, GOOD_REACTION);
    giq_option(4, NAME, 187, Thorn13, NEUTRAL_REACTION);
    giq_option(4, NAME, 188, Thorn14, NEUTRAL_REACTION);
end

procedure Thorn21
begin
    Reply(189);
    giq_option(7, NAME, 190, Thorn25, NEUTRAL_REACTION);
    giq_option(4, NAME, 191, Thorn27, NEUTRAL_REACTION);
    giq_option(4, NAME, 192, Thorn27, NEUTRAL_REACTION);
    giq_option(4, NAME, 193, Thorn24, BAD_REACTION);
end

procedure Thorn22
begin
    Reply(194);
    giq_option(7, NAME, 195, Thorn22a, NEUTRAL_REACTION);
    giq_option(4, NAME, 196, Thorn22b, NEUTRAL_REACTION);
    giq_option(4, NAME, 197, Thorn27, NEUTRAL_REACTION);
    giq_option(4, NAME, 198, Thorn27, NEUTRAL_REACTION);
    giq_option(4, NAME, 199, Thorn24, BAD_REACTION);
end

procedure Thorn22a
begin
    if (is_success(roll_vs_skill(dude_obj, 14, 0)) == 1) then begin
        call Thorn25();
    end
    else begin
        call Thorn04();
    end
end

procedure Thorn22b
begin
    if (is_success(roll_vs_skill(dude_obj, 14, 0)) == 1) then begin
        call Thorn26();
    end
    else begin
        call Thorn04();
    end
end

procedure Thorn23
begin
    set_local_var(5, 1);
    gsay_message(NAME, 200, BAD_REACTION);
end

procedure Thorn24
begin
    set_local_var(5, 1);
    gsay_message(NAME, 201, BAD_REACTION);
end

procedure Thorn25
begin
    if (dude_gender == 0) then begin
        gsay_message(NAME, 202, NEUTRAL_REACTION);
    end
    else begin
        gsay_message(NAME, 203, NEUTRAL_REACTION);
    end
end

procedure Thorn26
begin
    Reply(204);
    giq_option(7, NAME, 205, Thorn27, NEUTRAL_REACTION);
    giq_option(4, NAME, 206, Thorn07, NEUTRAL_REACTION);
    giq_option(4, NAME, 207, Thorn24, BAD_REACTION);
    giq_option(4, NAME, 208, Thorn24, BAD_REACTION);
    giq_option(4, NAME, 209, Thorn27, BAD_REACTION);
end

procedure Thorn27
begin
    gsay_message(NAME, 210, NEUTRAL_REACTION);
end

procedure Thorn28
begin
    if (dude_gender == 0) then begin
        float_msg(self_obj, mstr(211), FLOAT_MSG_RED);
    end
    else begin
        float_msg(self_obj, mstr(212), FLOAT_MSG_RED);
    end
end

procedure Thorn29
begin
    float_msg(self_obj, mstr(213), FLOAT_MSG_RED);
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * dude_charisma) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence)));
        if (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality)) then begin
            if (global_var(GVAR_PLAYER_REPUATION) > 0) then begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
        end
        if (global_var(GVAR_CHILDKILLER_REPUATION) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(SCRIPT_MODREACT, random(100, 105));
end
