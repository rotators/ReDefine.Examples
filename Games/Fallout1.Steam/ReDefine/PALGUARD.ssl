procedure start;
procedure do_dialogue;
procedure PalGuard01;
procedure PalGuard02;

variable line;
variable Only_Once;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure start
begin
    if (Only_Once == 0) then begin
        Only_Once := 1;
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 44);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_BROTHERHOOD_PALADIN);
    end
    if (script_action == talk_proc) then begin
        call do_dialogue();
    end
    else begin
        if (script_action == destroy_proc) then begin
            if (source_obj == dude_obj) then begin
                if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
                    set_global_var(GVAR_BERSERKER_REPUTATION, 1);
                    set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                end
                if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
                    set_global_var(GVAR_CHAMPION_REPUTATION, 1);
                    set_global_var(GVAR_BERSERKER_REPUTATION, 0);
                end
                set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
                if ((global_var(GVAR_GOOD_MONSTER) % 2) == 0) then begin
                    set_global_var(GVAR_PLAYER_REPUATION, global_var(GVAR_PLAYER_REPUATION) - 1);
                end
            end
        end
        else begin
            if ((script_action == look_at_proc) or (script_action == description_proc)) then begin
                script_overrides;
                display_mstr(100);
            end
            else begin
                if (script_action == timed_event_proc) then begin
                    attack(dude_obj);
                end
            end
        end
    end
end

procedure do_dialogue
begin
    call get_reaction();
    if (local_var(1) < 2) then begin
        call PalGuard01();
    end
    else begin
        call PalGuard02();
    end
end

procedure PalGuard01
begin
    if (not(line)) then begin
        line := random(1, 9);
    end
    else begin
        line := line + 1;
    end
    if (line > 9) then begin
        line := 1;
    end
    if (line == 1) then begin
        float_msg(self_obj, mstr(101), FLOAT_MSG_RED);
    end
    else begin
        if (line == 2) then begin
            float_msg(self_obj, mstr(102), FLOAT_MSG_RED);
        end
        else begin
            if (line == 3) then begin
                float_msg(self_obj, mstr(103), FLOAT_MSG_RED);
            end
            else begin
                if (line == 4) then begin
                    float_msg(self_obj, mstr(104), FLOAT_MSG_RED);
                end
                else begin
                    if (line == 5) then begin
                        float_msg(self_obj, mstr(105), FLOAT_MSG_RED);
                    end
                    else begin
                        if (line == 6) then begin
                            if (dude_gender == 1) then begin
                                float_msg(self_obj, mstr(106), FLOAT_MSG_RED);
                            end
                            else begin
                                line := line + 1;
                            end
                        end
                        else begin
                            if (line == 7) then begin
                                if (global_var(GVAR_BECOME_AN_INITIATE) == 2) then begin
                                    float_msg(self_obj, mstr(107), FLOAT_MSG_RED);
                                end
                                else begin
                                    line := line + 1;
                                end
                            end
                            else begin
                                if (line == 8) then begin
                                    if (global_var(GVAR_BECOME_AN_INITIATE) < 2) then begin
                                        float_msg(self_obj, mstr(108), FLOAT_MSG_RED);
                                    end
                                    else begin
                                        line := line + 1;
                                    end
                                end
                                else begin
                                    if (line == 9) then begin
                                        if (global_var(GVAR_BECOME_AN_INITIATE) < 2) then begin
                                            float_msg(self_obj, mstr(109), FLOAT_MSG_RED);
                                        end
                                        else begin
                                            line := 1;
                                            float_msg(self_obj, mstr(110), FLOAT_MSG_RED);
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure PalGuard02
begin
    if (not(line)) then begin
        line := random(1, 10);
    end
    else begin
        line := line + 1;
    end
    if (line > 10) then begin
        line := 1;
    end
    if (line == 1) then begin
        float_msg(self_obj, mstr(111), FLOAT_MSG_RED);
    end
    else begin
        if (line == 2) then begin
            float_msg(self_obj, mstr(112), FLOAT_MSG_RED);
        end
        else begin
            if (line == 3) then begin
                float_msg(self_obj, mstr(113), FLOAT_MSG_RED);
            end
            else begin
                if (line == 4) then begin
                    float_msg(self_obj, mstr(114), FLOAT_MSG_RED);
                end
                else begin
                    if (line == 5) then begin
                        float_msg(self_obj, mstr(115), FLOAT_MSG_RED);
                    end
                    else begin
                        if (line == 7) then begin
                            if (global_var(GVAR_BECOME_AN_INITIATE) == 2) then begin
                                float_msg(self_obj, mstr(116), FLOAT_MSG_RED);
                            end
                            else begin
                                float_msg(self_obj, mstr(117), FLOAT_MSG_RED);
                            end
                        end
                        else begin
                            if (line == 7) then begin
                                if (global_var(GVAR_BECOME_AN_INITIATE) == 2) then begin
                                    float_msg(self_obj, mstr(118), FLOAT_MSG_RED);
                                end
                                else begin
                                    float_msg(self_obj, mstr(119), FLOAT_MSG_RED);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * dude_charisma) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence)));
        if (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality)) then begin
            if (global_var(GVAR_PLAYER_REPUATION) > 0) then begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
        end
        if (global_var(GVAR_CHILDKILLER_REPUATION) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(SCRIPT_MODREACT, random(100, 105));
end
