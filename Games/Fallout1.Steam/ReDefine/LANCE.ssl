procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure Lance00;
procedure Lance00a;
procedure Lance01;
procedure Lance02;
procedure Lance03;
procedure Lance04;
procedure Lance04a;
procedure Lance05;
procedure Lance06;
procedure Lance07;
procedure Lance08;
procedure Lance09;
procedure Lance10;
procedure Lance11;
procedure Lance12;
procedure Lance13;
procedure Lance14;
procedure Lance15;
procedure Lance16;
procedure Lance17;
procedure Lance18;
procedure Lance19;
procedure Lance19a;
procedure Lance20;
procedure Lance21;
procedure Lance22;
procedure Lance23;
procedure Lance24;
procedure Lance25;
procedure Lance26;
procedure Lance27;
procedure Lance28;
procedure Lance29;
procedure Lance30;
procedure Lance31;
procedure Lance31a;
procedure Lance32;
procedure Lance33;
procedure Lance34;
procedure Lance35;
procedure Lance36;
procedure Lance37;
procedure Lance38;
procedure Lance39;
procedure Lance40;
procedure Lance41;
procedure Lance42;
procedure Lance43;
procedure Lance44;
procedure Lance45;
procedure Lance46;
procedure Lance47;
procedure Lance48;
procedure Lance49;
procedure Lance50;
procedure Lance51;
procedure Lance52;
procedure LanceCombat;
procedure LanceEnd;
procedure LanceLoot;

variable hostile;
variable initialized;
variable known;
variable go_to_Shady;
variable go_to_Raiders;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure start
begin
    if (not(initialized)) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 2);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_GUARD);
        hostile := global_var(GVAR_SAVE_TANDI_5);
        initialized := 1;
    end
    else begin
        if (script_action == critter_proc) then begin
            call critter_p_proc();
        end
        else begin
            if (script_action == destroy_proc) then begin
                call destroy_p_proc();
            end
            else begin
                if (script_action == pickup_proc) then begin
                    call pickup_p_proc();
                end
                else begin
                    if (script_action == talk_proc) then begin
                        call talk_p_proc();
                    end
                end
            end
        end
    end
end

procedure critter_p_proc
begin
    if (hostile) then begin
        hostile := 0;
        attack(dude_obj);
    end
    else begin
        if (known and (tile_num(self_obj) < 20000)) then begin
            animate_move_obj_to_tile(self_obj, tile_num_in_direction(self_obj, 0, 3), 0);
        end
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if ((global_var(GVAR_GOOD_MONSTER) % 2) == 0) then begin
            set_global_var(GVAR_PLAYER_REPUATION, global_var(GVAR_PLAYER_REPUATION) - 1);
        end
    end
    set_global_var(GVAR_SAVE_TANDI_3, 1);
end

procedure pickup_p_proc
begin
    hostile := 1;
    set_global_var(GVAR_SAVE_TANDI_5, 1);
end

procedure talk_p_proc
begin
    call get_reaction();
    if (global_var(GVAR_SHADY_SANDS_INVADED)) then begin
        if (known) then begin
            call Lance52();
        end
        else begin
            start_gdialog(699, self_obj, 4, -1, -1);
            gsay_start;
            call Lance49();
            gsay_end;
            end_dialogue;
        end
    end
    else begin
        if (known) then begin
            if (local_var(1) == 1) then begin
                call Lance02();
            end
            else begin
                start_gdialog(699, self_obj, 4, -1, -1);
                gsay_start;
                call Lance03();
                gsay_end;
                end_dialogue;
            end
        end
        else begin
            if (global_var(GVAR_ENEMY_SHADY_SANDS) or (global_var(GVAR_PLAYER_REPUATION) < -30) or (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) or (global_var(GVAR_CHILDKILLER_REPUATION) > 2)) then begin
                if ((global_var(GVAR_RESCUE_TANDI) == 2) and (global_var(GVAR_RADSCORPION_SEED) == 2)) then begin
                    start_gdialog(699, self_obj, 4, -1, -1);
                    gsay_start;
                    call Lance00();
                    gsay_end;
                    end_dialogue;
                end
                else begin
                    call Lance01();
                end
            end
            else begin
                if (global_var(GVAR_SHADY_SANDS) < 2) then begin
                    if (local_var(1) >= 2) then begin
                        start_gdialog(699, self_obj, 4, -1, -1);
                        gsay_start;
                        call Lance04();
                        gsay_end;
                        end_dialogue;
                    end
                    else begin
                        call Lance05();
                    end
                end
                else begin
                    start_gdialog(699, self_obj, 4, -1, -1);
                    gsay_start;
                    if (local_var(1) >= 2) then begin
                        call Lance07();
                    end
                    else begin
                        call Lance06();
                    end
                    gsay_end;
                    end_dialogue;
                end
            end
        end
    end
    if (go_to_Shady) then begin
        gfade_out(600);
        game_time_advance(game_ticks(86400));
        load_map(26, 0);
    end
    if (go_to_Raiders) then begin
        gfade_out(600);
        game_time_advance(game_ticks(86400));
        load_map(24, 0);
    end
end

procedure Lance00
begin
    call BottomReact();
    known := 1;
    Reply(102);
    giq_option(4, NAME, 103, Lance00a, BAD_REACTION);
    giq_option(4, NAME, 104, Lance10, NEUTRAL_REACTION);
    giq_option(4, NAME, 105, Lance11, NEUTRAL_REACTION);
    giq_option(4, NAME, 106, Lance12, NEUTRAL_REACTION);
    giq_option(-3, NAME, 107, Lance13, NEUTRAL_REACTION);
end

procedure Lance00a
begin
    if ((dude_strength > 7) or obj_is_carrying_obj_pid(dude_obj, 15) or obj_is_carrying_obj_pid(dude_obj, 118) or obj_is_carrying_obj_pid(dude_obj, 13) or obj_is_carrying_obj_pid(dude_obj, 12)) then begin
        call Lance08();
    end
    else begin
        call Lance09();
    end
end

procedure Lance01
begin
    call BottomReact();
    float_msg(self_obj, mstr(108), FLOAT_MSG_NORMAL);
    hostile := 1;
    set_global_var(GVAR_SAVE_TANDI_5, 1);
end

procedure Lance02
begin
    float_msg(self_obj, mstr(109), FLOAT_MSG_NORMAL);
end

procedure Lance03
begin
    Reply(110);
    if ((global_var(GVAR_FIND_WATER_CHIP) == 1) and (obj_is_carrying_obj_pid(dude_obj, 55) == 0)) then begin
        giq_option(4, NAME, 111, Lance14, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_TANDI_STATUS) == 1) and (global_var(GVAR_RESCUE_TANDI) == 1)) then begin
        giq_option(4, NAME, 112, Lance15, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_RESCUE_TANDI) == 2) then begin
        giq_option(4, NAME, 113, Lance16, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 114, Lance17, NEUTRAL_REACTION);
    giq_option(-3, NAME, 115, Lance18, NEUTRAL_REACTION);
end

procedure Lance04
begin
    known := 1;
    Reply(116);
    if ((global_var(GVAR_FIND_WATER_CHIP) == 1) and (obj_is_carrying_obj_pid(dude_obj, 55) == 0)) then begin
        giq_option(4, NAME, 111, Lance14, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 118, Lance04a, NEUTRAL_REACTION);
    giq_option(4, NAME, 119, Lance22, NEUTRAL_REACTION);
    giq_option(4, NAME, 120, Lance23, NEUTRAL_REACTION);
    giq_option(-3, NAME, 121, Lance24, NEUTRAL_REACTION);
end

procedure Lance04a
begin
    if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
        call Lance19();
    end
    else begin
        call Lance20();
    end
end

procedure Lance05
begin
    float_msg(self_obj, mstr(122), FLOAT_MSG_NORMAL);
end

procedure Lance06
begin
    Reply(mstr(123) + proto_data(obj_pid(dude_obj), 1) + mstr(124));
    giq_option(4, NAME, 125, Lance25, NEUTRAL_REACTION);
    giq_option(4, NAME, 113, Lance16, NEUTRAL_REACTION);
    giq_option(4, NAME, 127, Lance26, NEUTRAL_REACTION);
    giq_option(4, NAME, 128, Lance28, NEUTRAL_REACTION);
    giq_option(4, NAME, 121, Lance18, BAD_REACTION);
end

procedure Lance07
begin
    known := 1;
    Reply(mstr(123) + proto_data(obj_pid(dude_obj), 1) + mstr(130));
    giq_option(4, NAME, 131, Lance29, NEUTRAL_REACTION);
    giq_option(4, NAME, 113, Lance16, NEUTRAL_REACTION);
    if ((global_var(GVAR_FIND_WATER_CHIP) == 1) and (obj_is_carrying_obj_pid(dude_obj, 55) == 0)) then begin
        giq_option(4, NAME, 111, Lance14, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 132, Lance00a, BAD_REACTION);
    giq_option(4, NAME, 133, Lance30, NEUTRAL_REACTION);
    giq_option(-3, NAME, 121, Lance18, NEUTRAL_REACTION);
end

procedure Lance08
begin
    Reply(134);
    giq_option(0, SCRIPT_MODREACT, 106, LanceLoot, BAD_REACTION);
end

procedure Lance09
begin
    gsay_message(NAME, 135, BAD_REACTION);
    hostile := 1;
    set_global_var(GVAR_SAVE_TANDI_5, 1);
end

procedure Lance10
begin
    Reply(126);
    giq_option(4, NAME, 136, Lance00a, BAD_REACTION);
    giq_option(4, NAME, 137, Lance31, NEUTRAL_REACTION);
    giq_option(4, NAME, 105, Lance11, NEUTRAL_REACTION);
    giq_option(4, NAME, 106, Lance12, NEUTRAL_REACTION);
    giq_option(4, NAME, 138, LanceCombat, BAD_REACTION);
end

procedure Lance11
begin
    call BottomReact();
    gsay_message(NAME, 139, BAD_REACTION);
end

procedure Lance12
begin
    gsay_message(NAME, 140, BAD_REACTION);
end

procedure Lance13
begin
    gsay_message(NAME, 141, NEUTRAL_REACTION);
end

procedure Lance14
begin
    Reply(142);
    giq_option(4, NAME, 143, Lance14, NEUTRAL_REACTION);
    if ((global_var(GVAR_RESCUE_TANDI) == 1) and (global_var(GVAR_TANDI_STATUS) == 1)) then begin
        giq_option(4, NAME, 112, Lance15, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_RESCUE_TANDI) == 2) then begin
        giq_option(4, NAME, 113, Lance16, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 114, Lance17, NEUTRAL_REACTION);
    if (global_var(GVAR_RADSCORPION_SEED) == 2) then begin
        giq_option(4, NAME, 144, Lance32, NEUTRAL_REACTION);
    end
end

procedure Lance15
begin
    Reply(145);
    giq_option(4, NAME, 146, Lance33, NEUTRAL_REACTION);
    giq_option(4, NAME, 147, Lance34, NEUTRAL_REACTION);
    giq_option(4, NAME, 148, Lance35, NEUTRAL_REACTION);
    giq_option(4, NAME, 149, Lance36, NEUTRAL_REACTION);
end

procedure Lance16
begin
    Reply(150);
    giq_option(4, NAME, 151, Lance37, NEUTRAL_REACTION);
    giq_option(4, NAME, 152, Lance38, NEUTRAL_REACTION);
    giq_option(4, NAME, 144, Lance32, NEUTRAL_REACTION);
    giq_option(4, NAME, 153, Lance39, NEUTRAL_REACTION);
end

procedure Lance17
begin
    Reply(154);
    if ((global_var(GVAR_FIND_WATER_CHIP) == 1) and (obj_is_carrying_obj_pid(dude_obj, 55) == 0)) then begin
        giq_option(4, NAME, 111, Lance14, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_RESCUE_TANDI) == 1) and (global_var(GVAR_TANDI_STATUS) == 1)) then begin
        giq_option(4, NAME, 112, Lance15, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_RESCUE_TANDI) == 2) then begin
        giq_option(4, NAME, 113, Lance16, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 155, Lance17, NEUTRAL_REACTION);
    giq_option(4, NAME, 156, Lance36, NEUTRAL_REACTION);
end

procedure Lance18
begin
    gsay_message(NAME, 157, BAD_REACTION);
end

procedure Lance19
begin
    Reply(158);
    giq_option(4, NAME, 159, Lance19a, NEUTRAL_REACTION);
    giq_option(4, NAME, 160, Lance42, NEUTRAL_REACTION);
    if ((global_var(GVAR_FIND_WATER_CHIP) == 1) and (obj_is_carrying_obj_pid(dude_obj, 55) == 0)) then begin
        giq_option(4, NAME, 161, Lance43, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 162, Lance48, NEUTRAL_REACTION);
end

procedure Lance19a
begin
    if (dude_charisma > 6) then begin
        call Lance40();
    end
    else begin
        call Lance41();
    end
end

procedure Lance20
begin
    call BottomReact();
    gsay_message(NAME, 163, BAD_REACTION);
end

procedure Lance21
begin
    call BottomReact();
    gsay_message(NAME, 164, BAD_REACTION);
end

procedure Lance22
begin
    if (global_var(GVAR_JUNKTOWN) < 1) then begin
        set_global_var(GVAR_JUNKTOWN, 1);
    end
    gsay_message(NAME, 165, NEUTRAL_REACTION);
end

procedure Lance23
begin
    call BottomReact();
    gsay_message(NAME, 166, BAD_REACTION);
end

procedure Lance24
begin
    gsay_message(NAME, 167, BAD_REACTION);
end

procedure Lance25
begin
    Reply(168);
    giq_option(4, NAME, 169, Lance44, NEUTRAL_REACTION);
    giq_option(4, NAME, 170, LanceCombat, BAD_REACTION);
    giq_option(4, NAME, 171, Lance28, NEUTRAL_REACTION);
    giq_option(4, NAME, 172, Lance31, NEUTRAL_REACTION);
end

procedure Lance26
begin
    Reply(173);
    giq_option(4, NAME, 169, Lance44, NEUTRAL_REACTION);
    giq_option(4, NAME, 170, Lance45, BAD_REACTION);
    giq_option(4, NAME, 171, Lance28, NEUTRAL_REACTION);
    giq_option(4, NAME, 172, Lance31, NEUTRAL_REACTION);
end

procedure Lance27
begin
    call BottomReact();
    Reply(174);
    giq_option(0, SCRIPT_MODREACT, 106, LanceLoot, BAD_REACTION);
end

procedure Lance28
begin
    gsay_message(NAME, 175, NEUTRAL_REACTION);
end

procedure Lance29
begin
    Reply(176);
    giq_option(4, NAME, 177, Lance46, NEUTRAL_REACTION);
    giq_option(4, NAME, 178, Lance47, NEUTRAL_REACTION);
end

procedure Lance30
begin
    Reply(179);
    giq_option(0, SCRIPT_MODREACT, 106, Lance29, NEUTRAL_REACTION);
end

procedure Lance31
begin
    Reply(180);
    giq_option(0, SCRIPT_MODREACT, 106, Lance31a, BAD_REACTION);
end

procedure Lance31a
begin
    gsay_message(NAME, 181, NEUTRAL_REACTION);
end

procedure Lance32
begin
    Reply(182);
    if ((global_var(GVAR_FIND_WATER_CHIP) == 1) and (obj_is_carrying_obj_pid(dude_obj, 55) == 0)) then begin
        giq_option(4, NAME, 161, Lance43, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_RESCUE_TANDI) == 1) and (global_var(GVAR_TANDI_STATUS) == 1)) then begin
        giq_option(4, NAME, 112, Lance15, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_RESCUE_TANDI) == 2) then begin
        giq_option(4, NAME, 113, Lance16, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 114, Lance17, NEUTRAL_REACTION);
    giq_option(4, NAME, 183, Lance36, NEUTRAL_REACTION);
end

procedure Lance33
begin
    gsay_message(NAME, 184, NEUTRAL_REACTION);
    go_to_Shady := 1;
end

procedure Lance34
begin
    gsay_message(NAME, 185, NEUTRAL_REACTION);
    go_to_Raiders := 1;
end

procedure Lance35
begin
    gsay_message(NAME, 186, NEUTRAL_REACTION);
end

procedure Lance36
begin
    gsay_message(NAME, 187, NEUTRAL_REACTION);
end

procedure Lance37
begin
    Reply(188);
    giq_option(0, SCRIPT_MODREACT, 106, LanceLoot, NEUTRAL_REACTION);
end

procedure Lance38
begin
    gsay_message(NAME, 189, NEUTRAL_REACTION);
end

procedure Lance39
begin
    gsay_message(NAME, 190, GOOD_REACTION);
end

procedure Lance40
begin
    gsay_message(NAME, 191, NEUTRAL_REACTION);
    go_to_Shady := 1;
end

procedure Lance41
begin
    gsay_message(NAME, 192, NEUTRAL_REACTION);
end

procedure Lance42
begin
    gsay_message(NAME, 193, NEUTRAL_REACTION);
end

procedure Lance43
begin
    Reply(194);
    giq_option(0, SCRIPT_MODREACT, 106, Lance36, NEUTRAL_REACTION);
end

procedure Lance44
begin
    gsay_message(NAME, 195, NEUTRAL_REACTION);
end

procedure Lance45
begin
    call BottomReact();
    gsay_message(NAME, 196, BAD_REACTION);
end

procedure Lance46
begin
    gsay_message(NAME, 197, NEUTRAL_REACTION);
    go_to_Shady := 1;
end

procedure Lance47
begin
    gsay_message(NAME, 198, NEUTRAL_REACTION);
end

procedure Lance48
begin
    gsay_message(NAME, 199, NEUTRAL_REACTION);
end

procedure Lance49
begin
    known := 1;
    Reply(200);
    giq_option(4, NAME, 201, Lance50, NEUTRAL_REACTION);
    giq_option(4, NAME, 202, Lance51, NEUTRAL_REACTION);
    giq_option(4, NAME, 203, Lance50, NEUTRAL_REACTION);
    giq_option(4, NAME, 204, Lance51, NEUTRAL_REACTION);
    giq_option(-3, NAME, 205, Lance51, NEUTRAL_REACTION);
end

procedure Lance50
begin
    gsay_message(NAME, 206, NEUTRAL_REACTION);
end

procedure Lance51
begin
    gsay_message(NAME, 207, NEUTRAL_REACTION);
end

procedure Lance52
begin
    float_msg(self_obj, mstr(208), FLOAT_MSG_NORMAL);
end

procedure LanceCombat
begin
    hostile := 1;
    set_global_var(GVAR_SAVE_TANDI_5, 1);
end

procedure LanceEnd
begin
end

procedure LanceLoot
begin
    gdialog_barter;
    giq_option(4, SCRIPT_MODREACT, 103, LanceEnd, NEUTRAL_REACTION);
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * dude_charisma) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence)));
        if (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality)) then begin
            if (global_var(GVAR_PLAYER_REPUATION) > 0) then begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
        end
        if (global_var(GVAR_CHILDKILLER_REPUATION) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(SCRIPT_MODREACT, random(100, 105));
end
