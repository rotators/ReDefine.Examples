procedure start;
procedure do_dialogue;
procedure genericend;
procedure genericcbt;
procedure Critter_Action;
procedure timetomove;

variable Hostile;
variable init;
variable maxleash := 9;
variable noevent;
variable loopcount;
variable rndx;
variable rndy;
variable rndz;
variable dist;
variable new_tile;
variable SET;
variable MUTANTS;


procedure start
begin
    if (not(init)) then begin
        if (local_var(1) == 0) then begin
            set_local_var(1, tile_num(self_obj));
            set_local_var(0, 1);
            if (cur_map_index == 9) then begin
                set_local_var(3, 1);
            end
        end
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 87);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_GHOUL_MINDLESS);
        critter_injure(self_obj, 4);
        init := 1;
    end
    else begin
        if (script_action == timed_event_proc) then begin
            call timetomove();
        end
        else begin
            if (script_action == talk_proc) then begin
                call do_dialogue();
            end
            else begin
                if (script_action == pickup_proc) then begin
                    Hostile := 1;
                end
                else begin
                    if (script_action == combat_proc) then begin
                        if (local_var(3)) then begin
                            if (fixed_param == 2) then begin
                                rndx := random(1, 6) - 5;
                                if (rndx < 0) then begin
                                    rndx := 0;
                                end
                                if (rndx > 0) then begin
                                    radiation_inc(target_obj, rndx);
                                end
                            end
                        end
                    end
                    else begin
                        if (script_action == critter_proc) then begin
                            call Critter_Action();
                        end
                        else begin
                            if (script_action == destroy_proc) then begin
                                if (source_obj == dude_obj) then begin
                                    if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
                                        set_global_var(GVAR_BERSERKER_REPUTATION, 1);
                                        set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                                    end
                                    if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
                                        set_global_var(GVAR_CHAMPION_REPUTATION, 1);
                                        set_global_var(GVAR_BERSERKER_REPUTATION, 0);
                                    end
                                    set_global_var(GVAR_BAD_MONSTER, global_var(GVAR_BAD_MONSTER) + 1);
                                    if ((global_var(GVAR_BAD_MONSTER) % 6) == 0) then begin
                                        set_global_var(GVAR_PLAYER_REPUATION, global_var(GVAR_PLAYER_REPUATION) + 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure do_dialogue
begin
    float_msg(self_obj, mstr(105 + random(0, 3)), FLOAT_MSG_LIGHT_RED);
end

procedure genericend
begin
end

procedure genericcbt
begin
end

procedure Critter_Action
begin
    if (obj_can_see_obj(self_obj, dude_obj) and (tile_distance_objs(self_obj, dude_obj) < 3)) then begin
        Hostile := 1;
    end
    if (Hostile > 0) then begin
        Hostile := 0;
        attack(dude_obj);
    end
    else begin
        if (local_var(0)) then begin
            loopcount := loopcount + 1;
            if (loopcount > 40) then begin
                loopcount := 0;
                if (noevent == 0) then begin
                    noevent := 1;
                    add_timer_event(self_obj, game_ticks(random(10, 15)), 0);
                end
            end
        end
    end
end

procedure timetomove
begin
    if (obj_on_screen(self_obj)) then begin
        noevent := 0;
        set_local_var(2, tile_num(self_obj));
        new_tile := tile_num_in_direction(local_var(2), random(0, 5), random(1, 5));
        if (tile_distance(local_var(1), new_tile) < maxleash) then begin
            if (random(0, 1) > 0) then begin
                float_msg(self_obj, mstr(105 + random(0, 3)), FLOAT_MSG_LIGHT_RED);
            end
            animate_move_obj_to_tile(self_obj, new_tile, 0);
        end
    end
    else begin
        call Critter_Action();
    end
end
