procedure start;
procedure combat_p_proc;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;
procedure Flip00;
procedure Flip01;
procedure Flip02;
procedure Flip03;
procedure Flip03a;
procedure Flip04;
procedure Flip05;
procedure FlipCombat;
procedure transit;
procedure FlipLeave;

variable known;
variable hostile;
variable initialized;
variable round_counter;
variable cell_tile := 23937;
variable home_tile := 14338;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure start
begin
    if (not(initialized)) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 43);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_GUARD);
        initialized := 1;
    end
    else begin
        if (script_action == combat_proc) then begin
            call combat_p_proc();
        end
        else begin
            if (script_action == critter_proc) then begin
                call critter_p_proc();
            end
            else begin
                if (script_action == destroy_proc) then begin
                    call destroy_p_proc();
                end
                else begin
                    if (script_action == look_at_proc) then begin
                        call look_at_p_proc();
                    end
                    else begin
                        if (script_action == pickup_proc) then begin
                            call pickup_p_proc();
                        end
                        else begin
                            if (script_action == talk_proc) then begin
                                call talk_p_proc();
                            end
                            else begin
                                if (script_action == timed_event_proc) then begin
                                    call timed_event_p_proc();
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure combat_p_proc
begin
    if (fixed_param == 4) then begin
        round_counter := round_counter + 1;
    end
    if (round_counter > 2) then begin
        if (global_var(GVAR_VATS_ALERT) == 0) then begin
            set_global_var(GVAR_VATS_ALERT, 1);
            set_map_var(7, 1);
        end
    end
end

procedure critter_p_proc
begin
    if (hostile) then begin
        hostile := 0;
        attack(dude_obj);
    end
    else begin
        if (obj_can_see_obj(self_obj, dude_obj) and (tile_distance_objs(self_obj, dude_obj) < 12)) then begin
            if (global_var(GVAR_LIEUTENANTS_DEAD)) then begin
                call Flip00();
            end
            else begin
                if ((obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) != 113) and (local_var(4) == 0)) then begin
                    dialogue_system_enter;
                end
            end
        end
        if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
            animate_move_obj_to_tile(self_obj, cell_tile, 0);
        end
        else begin
            animate_move_obj_to_tile(self_obj, home_tile, 0);
        end
    end
end

procedure destroy_p_proc
begin
    set_map_var(8, 3);
    if (source_obj == dude_obj) then begin
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        set_global_var(GVAR_BAD_MONSTER, global_var(GVAR_BAD_MONSTER) + 1);
        if ((global_var(GVAR_BAD_MONSTER) % 6) == 0) then begin
            set_global_var(GVAR_PLAYER_REPUATION, global_var(GVAR_PLAYER_REPUATION) + 1);
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4)) then begin
        display_mstr(100);
    end
    else begin
        display_mstr(101);
    end
end

procedure pickup_p_proc
begin
    hostile := 1;
end

procedure talk_p_proc
begin
    call get_reaction();
    start_gdialog(367, self_obj, 4, -1, -1);
    gsay_start;
    if (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 113) then begin
        call Flip01();
    end
    else begin
        if (local_var(4) == 1) then begin
            call Flip05();
        end
        else begin
            call Flip02();
        end
    end
    gsay_end;
    end_dialogue;
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if (obj_can_see_obj(self_obj, dude_obj)) then begin
            hostile := 1;
        end
    end
    else begin
        if (fixed_param == 2) then begin
            call Flip00();
        end
    end
end

procedure Flip00
begin
    float_msg(self_obj, mstr(102), FLOAT_MSG_NORMAL);
    call FlipCombat();
end

procedure Flip01
begin
    add_timer_event(self_obj, game_ticks(30), 1);
    gsay_message(NAME, 103, NEUTRAL_REACTION);
end

procedure Flip02
begin
    set_local_var(4, 1);
    Reply(104);
    giq_option(4, NAME, 105, FlipCombat, NEUTRAL_REACTION);
    giq_option(4, NAME, 106, transit, NEUTRAL_REACTION);
    giq_option(-3, NAME, 107, FlipCombat, NEUTRAL_REACTION);
end

procedure Flip03
begin
    Reply(108);
    giq_option(4, NAME, 109, transit, NEUTRAL_REACTION);
    giq_option(4, NAME, 110, Flip03a, NEUTRAL_REACTION);
end

procedure Flip03a
begin
    if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
        call FlipLeave();
    end
    else begin
        call Flip04();
    end
end

procedure Flip04
begin
    gsay_message(NAME, 111, NEUTRAL_REACTION);
    call FlipCombat();
end

procedure Flip05
begin
    gsay_message(NAME, 112, NEUTRAL_REACTION);
    call FlipCombat();
end

procedure FlipCombat
begin
    hostile := 1;
end

procedure transit
begin
    set_global_var(GVAR_ENTERING_VATS_HOW, 2);
    load_map(32, 5);
end

procedure FlipLeave
begin
    if (tile_num(self_obj) == home_tile) then begin
        animate_move_obj_to_tile(self_obj, tile_num_in_direction(home_tile, 0, 5), 0);
    end
    else begin
        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), 5, 5), 0);
    end
    add_timer_event(self_obj, game_ticks(5), 2);
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * dude_charisma) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence)));
        if (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality)) then begin
            if (global_var(GVAR_PLAYER_REPUATION) > 0) then begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(GVAR_PLAYER_REPUATION));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(GVAR_PLAYER_REPUATION));
            end
        end
        if (global_var(GVAR_CHILDKILLER_REPUATION) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(SCRIPT_MODREACT, random(100, 105));
end
