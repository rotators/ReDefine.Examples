procedure start;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure talk_p_proc;
procedure peter0;
procedure peter1;
procedure peter2;
procedure peter3;
procedure peter4;
procedure peter4a;
procedure peter5;
procedure peter6;
procedure peter7;
procedure peter8;
procedure peter9;
procedure peter10;
procedure peterend;

variable initialized;


procedure start
begin
    if (not(initialized)) then begin
        critter_add_trait(self_obj, 1, 6, 46);
        critter_add_trait(self_obj, 1, 5, 33);
        initialized := 1;
        if (global_var(129) == 2) then begin
            if (random(0, 1)) then begin
                kill_critter(self_obj, 59);
            end
            else begin
                kill_critter(self_obj, 57);
            end
        end
    end
    else begin
        if (script_action == 18) then begin
            call destroy_p_proc();
        end
    end
    if (script_action == 21) then begin
        call look_at_p_proc();
    end
    else begin
        if (script_action == 11) then begin
            call talk_p_proc();
        end
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
            set_global_var(156, 1);
            set_global_var(157, 0);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
            set_global_var(157, 1);
            set_global_var(156, 0);
        end
        set_global_var(159, global_var(159) + 1);
        if ((global_var(159) % 2) == 0) then begin
            set_global_var(155, global_var(155) - 1);
        end
    end
end

procedure look_at_p_proc
begin
    if (local_var(0)) then begin
        script_overrides;
        display_msg(message_str(267, 100));
    end
end

procedure talk_p_proc
begin
    set_local_var(0, 1);
    script_overrides;
    if (global_var(133) == 1) then begin
        call peter9();
    end
    else begin
        if (global_var(133) == 2) then begin
            call peter10();
        end
        else begin
            if ((game_time_hour >= 700) and (game_time_hour < 1800)) then begin
                start_gdialog(267, self_obj, 4, -1, -1);
                gsay_start;
                call peter0();
                gsay_end;
                end_dialogue;
            end
            else begin
                call peter8();
            end
        end
    end
end

procedure peter0
begin
    gsay_reply(267, 101);
    giq_option(-3, 267, 102, peter1, 50);
    giq_option(4, 267, 103, peterend, 50);
    giq_option(4, 267, 104, peter2, 50);
    giq_option(4, 267, 105, peter7, 50);
end

procedure peter1
begin
    gsay_message(267, 106, 50);
end

procedure peter2
begin
    gsay_reply(267, 107);
    giq_option(4, 267, 108, peter3, 50);
    giq_option(4, 267, 109, peter4, 50);
    giq_option(4, 267, 110, peter6, 50);
end

procedure peter3
begin
    gsay_message(267, 111, 50);
end

procedure peter4
begin
    gsay_reply(267, 112);
    giq_option(4, 267, 113, peter4a, 50);
    giq_option(4, 267, 114, peter5, 50);
end

procedure peter4a
begin
    set_global_var(133, 1);
end

procedure peter5
begin
    gsay_message(267, 115, 50);
end

procedure peter6
begin
    gsay_reply(267, 116);
    giq_option(4, 267, 117, peter4a, 50);
    giq_option(4, 267, 118, peter5, 50);
end

procedure peter7
begin
    gsay_message(267, 119, 50);
end

procedure peter8
begin
    float_msg(self_obj, message_str(267, 120), 0);
end

procedure peter9
begin
    float_msg(self_obj, message_str(267, 121), 0);
end

procedure peter10
begin
    variable LVar0 := 0;
    float_msg(self_obj, message_str(267, 122), 0);
    if (local_var(1) == 0) then begin
        set_local_var(1, 1);
        LVar0 := create_object_sid(40, 0, 0, -1);
        add_obj_to_inven(dude_obj, LVar0);
        LVar0 := create_object_sid(40, 0, 0, -1);
        add_obj_to_inven(dude_obj, LVar0);
        LVar0 := create_object_sid(40, 0, 0, -1);
        add_obj_to_inven(dude_obj, LVar0);
    end
end

procedure peterend
begin
end

