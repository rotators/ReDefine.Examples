procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure check_status;
procedure vincday;
procedure vincnight;
procedure vincent00;
procedure vincent01;
procedure vincent01n;
procedure vincent02;
procedure vincent02n;
procedure vincent03;
procedure vincent04;
procedure vincent05;

variable hostile;
variable Only_Once := 1;
variable DISGUISED;
variable ARMED;
variable again;
variable home_tile;
variable sleep_tile;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure start
begin
    if (Only_Once) then begin
        Only_Once := 0;
        critter_add_trait(self_obj, 1, 6, 34);
        critter_add_trait(self_obj, 1, 5, 47);
        home_tile := tile_num(self_obj);
        sleep_tile := 22284;
    end
    if (script_action == 14) then begin
        if (global_var(245) == 0) then begin
            set_global_var(245, 1);
        end
    end
    else begin
        if (script_action == 21) then begin
            call look_at_p_proc();
        end
        else begin
            if (script_action == 4) then begin
                call pickup_p_proc();
            end
            else begin
                if (script_action == 11) then begin
                    call check_status();
                    call talk_p_proc();
                end
                else begin
                    if (script_action == 22) then begin
                        call vincent03();
                    end
                    else begin
                        if (script_action == 12) then begin
                            call critter_p_proc();
                        end
                        else begin
                            if (script_action == 18) then begin
                                call destroy_p_proc();
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure combat
begin
    hostile := 1;
end

procedure critter_p_proc
begin
    if (hostile) then begin
        hostile := 0;
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
    else begin
        if (obj_can_see_obj(self_obj, dude_obj)) then begin
            call check_status();
            if ((ARMED == 1) or (DISGUISED == 0)) then begin
                call vincent02();
            end
            else begin
                if (local_var(5) == 0) then begin
                    call talk_p_proc();
                end
            end
        end
        else begin
            if ((game_time_hour >= 700) and (game_time_hour < 1800)) then begin
                if (local_var(6)) then begin
                    set_local_var(6, 0);
                    animate_move_obj_to_tile(self_obj, home_tile, 0);
                end
                else begin
                    if (tile_num(self_obj) != home_tile) then begin
                        animate_move_obj_to_tile(self_obj, home_tile, 0);
                    end
                end
            end
            else begin
                if (local_var(6)) then begin
                    if (tile_num(self_obj) != sleep_tile) then begin
                        animate_move_obj_to_tile(self_obj, sleep_tile, 0);
                    end
                end
                else begin
                    set_local_var(6, 1);
                    animate_move_obj_to_tile(self_obj, sleep_tile, 0);
                end
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        hostile := 1;
    end
end

procedure talk_p_proc
begin
    call check_status();
    set_local_var(5, 1);
    if ((ARMED == 1) or (DISGUISED == 0)) then begin
        call vincent02();
    end
    else begin
        if (tile_num(self_obj) == sleep_tile) then begin
            call vincday();
        end
        else begin
            call vincnight();
        end
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
            set_global_var(156, 1);
            set_global_var(157, 0);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
            set_global_var(157, 1);
            set_global_var(156, 0);
        end
        set_global_var(160, global_var(160) + 1);
        if ((global_var(160) % 6) == 0) then begin
            set_global_var(155, global_var(155) + 1);
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if ((game_time_hour >= 700) and (game_time_hour < 1800)) then begin
        display_msg(message_str(679, 400));
    end
    else begin
        display_msg(message_str(679, 200));
    end
end

procedure check_status
begin
    DISGUISED := 0;
    ARMED := 0;
    if ((obj_item_subtype(critter_inven_obj(dude_obj, 1)) == 3) or (obj_item_subtype(critter_inven_obj(dude_obj, 2)) == 3)) then begin
        ARMED := 1;
    end
    if (obj_pid(critter_inven_obj(dude_obj, 0)) == 113) then begin
        if (metarule(16, 0) > 1) then begin
            DISGUISED := 0;
        end
        else begin
            DISGUISED := 1;
        end
    end
end

procedure vincday
begin
    again := local_var(4);
    if (again == 0) then begin
        call vincent00();
    end
    else begin
        if (again == 1) then begin
            call vincent01();
        end
        else begin
            if (again > 1) then begin
                call vincent03();
            end
        end
    end
    if (again < 2) then begin
        again := again + 1;
    end
    set_local_var(4, again);
end

procedure vincnight
begin
    again := local_var(4);
    if (again == 0) then begin
        call vincent01n();
    end
    else begin
        if (again > 0) then begin
            call vincent02n();
        end
    end
    if (again < 2) then begin
        again := again + 1;
    end
    set_local_var(4, again);
end

procedure vincent00
begin
    float_msg(self_obj, message_str(679, 402), 2);
    add_timer_event(self_obj, game_ticks(30), 1);
end

procedure vincent01
begin
    float_msg(self_obj, message_str(679, 403), 2);
    add_timer_event(self_obj, game_ticks(15), 1);
end

procedure vincent01n
begin
    float_msg(self_obj, message_str(679, 203), 2);
end

procedure vincent02
begin
    float_msg(self_obj, message_str(679, 202), 2);
    call combat();
end

procedure vincent02n
begin
    float_msg(self_obj, message_str(679, 204), 2);
end

procedure vincent03
begin
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        float_msg(self_obj, message_str(679, 404), 2);
        call combat();
    end
end

procedure vincent04
begin
    float_msg(self_obj, message_str(679, 203), 2);
end

procedure vincent05
begin
    float_msg(self_obj, message_str(679, 204), 2);
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, 3)) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
        if (has_trait(0, dude_obj, 39)) then begin
            if (global_var(155) > 0) then begin
                set_local_var(0, local_var(0) + global_var(155));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(155));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(155));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(155));
            end
        end
        if (global_var(158) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(634, random(100, 105));
end

