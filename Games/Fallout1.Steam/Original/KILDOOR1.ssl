/*******************************************************
*      Some unreferenced imported varables found.      *
*      Because of it it is impossible to specify       *
*      the real names of global variables.             *
*******************************************************/

variable GVar0;

procedure start;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure use_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;

/* ?import? variable test; */
/* ?import? variable removal_ptr; */


procedure start
begin
    if (script_action == 14) then begin
        call damage_p_proc();
    end
    else begin
        if (script_action == 15) then begin
            call map_enter_p_proc();
        end
        else begin
            if (script_action == 23) then begin
                call map_update_p_proc();
            end
            else begin
                if (script_action == 6) then begin
                    call use_p_proc();
                end
                else begin
                    if (script_action == 7) then begin
                        call use_obj_on_p_proc();
                    end
                    else begin
                        if (script_action == 8) then begin
                            call use_skill_on_p_proc();
                        end
                    end
                end
            end
        end
    end
end

procedure damage_p_proc
begin
    destroy_object(self_obj);
end

procedure map_enter_p_proc
begin
    if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
        obj_close(self_obj);
        obj_lock(self_obj);
    end
    else begin
        obj_unlock(self_obj);
    end
    obj_close(self_obj);
    set_local_var(0, 0);
end

procedure map_update_p_proc
begin
    if ((game_time_hour >= 1900) or (game_time_hour < 600) and (local_var(0) == 0)) then begin
        obj_close(self_obj);
        obj_lock(self_obj);
    end
    else begin
        obj_unlock(self_obj);
    end
end

procedure use_p_proc
begin
    if (obj_is_locked(self_obj)) then begin
        script_overrides;
        display_msg(message_str(873, 100));
    end
    else begin
        if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
            set_map_var(8, 1);
        end
    end
end

procedure use_obj_on_p_proc
begin
    if (obj_pid(obj_being_used_with) == 84) then begin
        script_overrides;
        set_map_var(8, 1);
        if (not(obj_is_locked(self_obj))) then begin
            display_msg(message_str(873, 104));
        end
        else begin
            GVar0 := roll_vs_skill(source_obj, 9, 0);
            if (is_success(GVar0)) then begin
                display_msg(message_str(873, 101));
                obj_unlock(self_obj);
                set_local_var(0, 1);
            end
            else begin
                if (is_critical(GVar0)) then begin
                    display_msg(message_str(873, 103));
                    jam_lock(self_obj);
                end
                else begin
                    display_msg(message_str(873, 102));
                end
            end
        end
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 9) then begin
        script_overrides;
        set_map_var(8, 1);
        if (not(obj_is_locked(self_obj))) then begin
            display_msg(message_str(873, 104));
        end
        else begin
            GVar0 := roll_vs_skill(source_obj, 9, -20);
            if (is_success(GVar0)) then begin
                display_msg(message_str(873, 101));
                obj_unlock(self_obj);
                set_local_var(0, 1);
            end
            else begin
                if (is_critical(GVar0)) then begin
                    display_msg(message_str(873, 103));
                    jam_lock(self_obj);
                end
                else begin
                    display_msg(message_str(873, 102));
                end
            end
        end
    end
end

