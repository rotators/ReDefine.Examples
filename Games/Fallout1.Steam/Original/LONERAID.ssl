procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure LoneRaid00;
procedure LoneRaid01;
procedure LoneRaid02;
procedure LoneRaid03;
procedure LoneRaid03a;
procedure LoneRaid04;
procedure LoneRaid04a;
procedure LoneRaid05;
procedure LoneRaid06;
procedure LoneRaid07;
procedure LoneRaid08;
procedure LoneRaid09;
procedure LoneRaid10;
procedure LoneRaid11;
procedure LoneRaid12;
procedure LoneRaid13;
procedure LoneRaid14;
procedure LoneRaid15;
procedure LoneRaid16;
procedure LoneRaid17;
procedure LoneRaid18;
procedure LoneRaid19;
procedure LoneRaid20;
procedure LoneRaid21;
procedure LoneRaid22;
procedure LoneRaidCombat;
procedure LoneRaidEnd;
procedure LoneRaidLoot;
procedure flee_dude;

variable hostile;
variable initialized;
variable known;
variable broken;


procedure start
begin
    if (not(initialized)) then begin
        critter_add_trait(self_obj, 1, 6, 6);
        critter_add_trait(self_obj, 1, 5, 20);
        initialized := 1;
    end
    else begin
        if (script_action == 12) then begin
            call critter_p_proc();
        end
        else begin
            if (script_action == 18) then begin
                call destroy_p_proc();
            end
            else begin
                if (script_action == 4) then begin
                    call pickup_p_proc();
                end
                else begin
                    if (script_action == 11) then begin
                        call talk_p_proc();
                    end
                end
            end
        end
    end
end

procedure critter_p_proc
begin
    if (hostile) then begin
        hostile := 0;
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
    else begin
        if ((tile_distance_objs(self_obj, dude_obj) > 8) and (tile_distance_objs(self_obj, dude_obj) < 24)) then begin
            call flee_dude();
        end
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
            set_global_var(156, 1);
            set_global_var(157, 0);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
            set_global_var(157, 1);
            set_global_var(156, 0);
        end
        set_global_var(160, global_var(160) + 1);
        if ((global_var(160) % 6) == 0) then begin
            set_global_var(155, global_var(155) + 1);
        end
    end
end

procedure pickup_p_proc
begin
    hostile := 1;
end

procedure talk_p_proc
begin
    if (broken) then begin
        call LoneRaid01();
    end
    else begin
        if ((obj_item_subtype(critter_inven_obj(dude_obj, 1)) == 3) or (obj_item_subtype(critter_inven_obj(dude_obj, 2)) == 3)) then begin
            call LoneRaid00();
        end
        else begin
            if (known) then begin
                call LoneRaid02();
            end
            else begin
                start_gdialog(700, self_obj, 4, -1, -1);
                gsay_start;
                known := 1;
                if (global_var(12)) then begin
                    call LoneRaid06();
                end
                else begin
                    if ((global_var(26) == 2) or global_var(254)) then begin
                        call LoneRaid05();
                    end
                    else begin
                        if (global_var(611)) then begin
                            call LoneRaid04();
                        end
                        else begin
                            call LoneRaid03();
                        end
                    end
                end
                gsay_end;
                end_dialogue;
            end
        end
    end
end

procedure LoneRaid00
begin
    float_msg(self_obj, message_str(700, 100), 0);
end

procedure LoneRaid01
begin
    float_msg(self_obj, message_str(700, 101), 0);
end

procedure LoneRaid02
begin
    float_msg(self_obj, message_str(700, 102), 0);
end

procedure LoneRaid03
begin
    gsay_reply(700, 103);
    giq_option(7, 700, 104, LoneRaid07, 50);
    giq_option(4, 700, 105, LoneRaid03a, 51);
    giq_option(4, 700, 106, LoneRaid09, 50);
    giq_option(4, 700, 107, LoneRaid10, 51);
    giq_option(-3, 700, 108, LoneRaid11, 51);
    giq_option(-3, 700, 109, LoneRaid12, 50);
end

procedure LoneRaid03a
begin
    if ((get_critter_stat(dude_obj, 0) + get_critter_stat(dude_obj, 2)) > 13) then begin
        call LoneRaid08();
    end
    else begin
        call LoneRaidCombat();
    end
end

procedure LoneRaid04
begin
    gsay_reply(700, 110 + (get_critter_stat(dude_obj, 34) == 1));
    giq_option(7, 700, 112, LoneRaid13, 49);
    giq_option(4, 700, 113, LoneRaid04a, 50);
    giq_option(4, 700, 114, LoneRaid16, 50);
    giq_option(4, 700, 115, LoneRaid17, 50);
    giq_option(-3, 700, 109, LoneRaid12, 50);
end

procedure LoneRaid04a
begin
    if (get_critter_stat(dude_obj, 6) < 5) then begin
        call LoneRaid14();
    end
    else begin
        call LoneRaid15();
    end
end

procedure LoneRaid05
begin
    gsay_reply(700, 116);
    if ((global_var(103) == 1) and (global_var(26) == 1)) then begin
        giq_option(7, 700, 117, LoneRaid18, 50);
    end
    giq_option(4, 700, 118, LoneRaid03a, 51);
    giq_option(4, 700, 119, LoneRaid09, 50);
    giq_option(4, 700, 120, LoneRaid10, 51);
    giq_option(-3, 700, 108, LoneRaid11, 51);
    giq_option(-3, 700, 109, LoneRaid12, 50);
end

procedure LoneRaid06
begin
    gsay_reply(700, 121);
    giq_option(7, 700, 122, LoneRaid18, 50);
    giq_option(4, 700, 123, LoneRaid19, 51);
    giq_option(4, 700, 124, LoneRaid20, 50);
    giq_option(4, 700, 125, LoneRaid21, 50);
    giq_option(-3, 700, 109, LoneRaid12, 50);
end

procedure LoneRaid07
begin
    gsay_reply(700, 126);
    giq_option(4, 700, 127, LoneRaid03a, 50);
    giq_option(4, 700, 128, LoneRaid09, 50);
    giq_option(4, 700, 129, LoneRaid22, 51);
end

procedure LoneRaid08
begin
    broken := 1;
    gsay_reply(700, 130);
    giq_option(0, 634, 106, LoneRaidLoot, 50);
end

procedure LoneRaid09
begin
    gsay_message(700, 131, 50);
end

procedure LoneRaid10
begin
    gsay_message(700, 132, 51);
end

procedure LoneRaid11
begin
    gsay_message(700, 133, 51);
end

procedure LoneRaid12
begin
    gsay_message(700, 135, 50);
end

procedure LoneRaid13
begin
    gsay_message(700, 135 + (get_critter_stat(dude_obj, 34) == 1), 49);
end

procedure LoneRaid14
begin
    gsay_message(700, 137, 51);
    hostile := 1;
end

procedure LoneRaid15
begin
    gsay_message(700, 138 + (get_critter_stat(dude_obj, 34) == 1), 50);
end

procedure LoneRaid16
begin
    gsay_message(700, 140, 50);
end

procedure LoneRaid17
begin
    gsay_message(700, 141 + (get_critter_stat(dude_obj, 34) == 1), 49);
end

procedure LoneRaid18
begin
    gsay_message(700, 143, 50);
end

procedure LoneRaid19
begin
    gsay_message(700, 144, 51);
    hostile := 1;
end

procedure LoneRaid20
begin
    gsay_message(700, 145, 50);
end

procedure LoneRaid21
begin
    gsay_message(700, 146, 49);
end

procedure LoneRaid22
begin
    gsay_message(700, 147, 51);
    hostile := 1;
end

procedure LoneRaidCombat
begin
    hostile := 1;
end

procedure LoneRaidEnd
begin
end

procedure LoneRaidLoot
begin
    gdialog_mod_barter(0);
    giq_option(0, 634, 103, LoneRaidEnd, 51);
end

procedure flee_dude
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    while (LVar1 < 5) do begin
        if (tile_distance(tile_num(dude_obj), tile_num_in_direction(tile_num(self_obj), LVar1, 3)) > LVar2) then begin
            LVar0 := tile_num_in_direction(tile_num(self_obj), LVar1, 3);
            LVar2 := tile_distance(tile_num(dude_obj), LVar0);
        end
        LVar1 := LVar1 + 1;
    end
    animate_move_obj_to_tile(self_obj, LVar0, 0);
end

