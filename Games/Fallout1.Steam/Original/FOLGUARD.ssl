procedure start;
procedure critter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure talk_p_proc;
procedure guard0;
procedure guard1;
procedure guard2;
procedure guard3;
procedure guard4;
procedure guard5;
procedure guard6;
procedure guard7;
procedure guard8;
procedure guard9;
procedure guard10;
procedure guard11;
procedure guard12;
procedure guard13;
procedure guard14;
procedure guard15;
procedure guard16;
procedure guard16a;
procedure guard17;
procedure guard18;
procedure guard19;
procedure guard20;
procedure guard21;
procedure guard22;
procedure guard23;
procedure combat;
procedure guardend;

variable hostile;
variable initialized;

import variable removal_ptr;


procedure start
begin
    if (not(initialized)) then begin
        critter_add_trait(self_obj, 1, 6, 46);
        if (local_var(0) == 0) then begin
            if (get_critter_stat(self_obj, 34) == 1) then begin
                set_local_var(0, random(100, 104));
            end
            else begin
                set_local_var(0, random(105, 109));
            end
        end
        if (global_var(129) == 2) then begin
            if (random(0, 1)) then begin
                kill_critter(self_obj, 59);
            end
            else begin
                kill_critter(self_obj, 57);
            end
        end
        initialized := 1;
    end
    else begin
        if (script_action == 12) then begin
            call critter_p_proc();
        end
        else begin
            if (script_action == 14) then begin
                call damage_p_proc();
            end
            else begin
                if (script_action == 18) then begin
                    call destroy_p_proc();
                end
                else begin
                    if (script_action == 21) then begin
                        call look_at_p_proc();
                    end
                    else begin
                        if (script_action == 11) then begin
                            call talk_p_proc();
                        end
                    end
                end
            end
        end
    end
end

procedure critter_p_proc
begin
    if (map_var(1) == 1) then begin
        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(dude_obj), random(0, 6), random(3, 7)), 0);
    end
    else begin
        if ((map_var(1) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
            hostile := 1;
        end
    end
    if (global_var(129) == 2) then begin
        removal_ptr := self_obj;
    end
    if (hostile) then begin
        hostile := 0;
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
    else begin
        if (tile_distance_objs(self_obj, dude_obj) < 8) then begin
            if (local_var(1) or global_var(256)) then begin
                hostile := 1;
            end
        end
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(1, 1);
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(256, 1);
    end
    if (source_obj == dude_obj) then begin
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
            set_global_var(156, 1);
            set_global_var(157, 0);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
            set_global_var(157, 1);
            set_global_var(156, 0);
        end
        set_global_var(159, global_var(159) + 1);
        if ((global_var(159) % 2) == 0) then begin
            set_global_var(155, global_var(155) - 1);
        end
    end
end

procedure look_at_p_proc
begin
    display_msg(message_str(264, local_var(0)));
end

procedure talk_p_proc
begin
    script_overrides;
    if (local_var(1) or global_var(256)) then begin
        float_msg(self_obj, message_str(669, random(100, 105)), 0);
    end
    else begin
        start_gdialog(264, self_obj, 4, -1, -1);
        gsay_start;
        if (global_var(133) == 1) then begin
            call guard16();
        end
        else begin
            if (global_var(133) == 2) then begin
                call guard22();
            end
            else begin
                call guard0();
            end
        end
        gsay_end;
        end_dialogue;
    end
end

procedure guard0
begin
    gsay_reply(264, 110);
    giq_option(-3, 264, 111, guard1, 50);
    giq_option(4, 264, message_str(264, 112) + proto_data(obj_pid(dude_obj), 1) + message_str(264, 113), guard4, 50);
    giq_option(4, 264, message_str(264, 114) + proto_data(obj_pid(dude_obj), 1) + message_str(264, 115), combat, 50);
    giq_option(6, 264, 116, guard11, 50);
end

procedure guard1
begin
    gsay_reply(264, 117);
    giq_option(-3, 264, message_str(264, 118) + proto_data(obj_pid(dude_obj), 1) + message_str(264, 119), combat, 50);
    giq_option(-3, 264, message_str(264, 120) + proto_data(obj_pid(dude_obj), 1) + message_str(264, 121), guard2, 50);
    giq_option(-3, 264, message_str(264, 122), guard3, 50);
    giq_option(-3, 264, message_str(264, 123) + proto_data(obj_pid(dude_obj), 1) + message_str(264, 124), guard3, 50);
end

procedure guard2
begin
    gsay_message(264, 125, 50);
end

procedure guard3
begin
    gsay_message(264, 126, 50);
end

procedure guard4
begin
    gsay_reply(264, 127);
    giq_option(4, 264, 128, guard5, 50);
    giq_option(4, 264, 129, combat, 50);
    giq_option(4, 264, 130, guard6, 50);
    giq_option(4, 264, 131, guard10, 50);
end

procedure guard5
begin
    gsay_message(264, 132, 50);
end

procedure guard6
begin
    gsay_reply(264, 133);
    giq_option(4, 264, 134, guard5, 50);
    giq_option(4, 264, 135, guard7, 50);
    giq_option(4, 264, 136, guard9, 50);
    giq_option(4, 264, 137, guard8, 50);
end

procedure guard7
begin
    gsay_reply(264, 138);
    giq_option(4, 264, 139, guard5, 50);
    giq_option(4, 264, 140, guard8, 50);
end

procedure guard8
begin
    gsay_message(264, 141, 50);
end

procedure guard9
begin
    gsay_reply(264, 142);
    giq_option(4, 264, 143, guardend, 50);
end

procedure guard10
begin
    gsay_reply(264, 144);
    giq_option(4, 264, 145, guard5, 50);
    giq_option(4, 264, 146, guard8, 50);
    giq_option(4, 264, 147, guard6, 50);
end

procedure guard11
begin
    gsay_reply(264, 148);
    giq_option(6, 264, 149, guardend, 50);
    giq_option(6, 264, 150, guard12, 50);
    giq_option(6, 264, 151, guard15, 50);
end

procedure guard12
begin
    gsay_reply(264, 152);
    giq_option(6, 264, 153, guardend, 50);
    giq_option(6, 264, 154, guard13, 50);
    giq_option(6, 264, 155, guard14, 50);
end

procedure guard13
begin
    gsay_reply(264, 156);
    giq_option(6, 264, 157, guardend, 50);
    giq_option(6, 264, 158, combat, 50);
end

procedure guard14
begin
    gsay_message(264, 159, 50);
end

procedure guard15
begin
    gsay_reply(264, 160);
    giq_option(6, 264, 161, guardend, 50);
end

procedure guard16
begin
    gsay_reply(264, 162);
    giq_option(4, 264, 163, guard17, 50);
    giq_option(4, 264, 164, guard19, 50);
    giq_option(6, 264, 165, guard16a, 50);
end

procedure guard16a
begin
    if (is_success(roll_vs_skill(dude_obj, 14, -10))) then begin
        call guard20();
    end
    else begin
        call guard21();
    end
end

procedure guard17
begin
    gsay_reply(264, 166);
    giq_option(4, 264, 167, guard18, 50);
    giq_option(4, 264, 168, guardend, 50);
    giq_option(4, 264, 169, combat, 50);
end

procedure guard18
begin
    gsay_reply(264, 170);
    giq_option(4, 264, 171, guardend, 50);
end

procedure guard19
begin
    gsay_message(264, 172, 50);
    call combat();
end

procedure guard20
begin
    gsay_message(264, 173, 50);
end

procedure guard21
begin
    gsay_message(264, 174, 50);
    call combat();
end

procedure guard22
begin
    gsay_reply(264, 175);
    giq_option(4, 264, 176, guardend, 50);
    if (global_var(132) == 0) then begin
        giq_option(4, 264, 177, guard23, 50);
    end
end

procedure guard23
begin
    variable LVar0 := 0;
    LVar0 := 4 * 3600;
    set_global_var(132, 1);
    gsay_reply(264, 178);
    game_time_advance(game_ticks(LVar0));
    gfade_out(400);
    gfade_in(400);
    giq_option(4, 264, 179, guardend, 50);
end

procedure combat
begin
    hostile := 1;
end

procedure guardend
begin
end

