procedure start;
procedure critter_p_proc;
procedure map_enter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure sleeping;

variable night_person;
variable wake_time;
variable sleep_time;
variable home_tile;
variable sleep_tile;
variable hostile;


procedure start
begin
    if (script_action == 12) then begin
        call critter_p_proc();
    end
    else begin
        if (script_action == 15) then begin
            call map_enter_p_proc();
        end
        else begin
            if (script_action == 4) then begin
                call pickup_p_proc();
            end
            else begin
                if (script_action == 11) then begin
                    call talk_p_proc();
                end
            end
        end
    end
end

procedure critter_p_proc
begin
    if (hostile) then begin
        hostile := 0;
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
    call sleeping();
    if ((game_time_hour > (wake_time + 20)) or (game_time_hour < sleep_time)) then begin
        if (tile_num(self_obj) != home_tile) then begin
            animate_move_obj_to_tile(self_obj, home_tile, 0);
        end
    end
    if (global_var(247) == 1) then begin
        if (obj_can_see_obj(self_obj, dude_obj)) then begin
            attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
        end
    end
end

procedure map_enter_p_proc
begin
    if (global_var(15) == 1) then begin
        destroy_object(self_obj);
    end
    night_person := 1;
    wake_time := random(1610, 1640);
    sleep_time := random(310, 340);
    sleep_tile := 7000;
    home_tile := 20675;
    critter_add_trait(self_obj, 1, 6, 26);
    critter_add_trait(self_obj, 1, 5, 5);
    if (map_var(2) == 1) then begin
        destroy_object(self_obj);
    end
end

procedure pickup_p_proc
begin
    hostile := 1;
end

procedure talk_p_proc
begin
    float_msg(self_obj, message_str(473, random(100, 106)), 0);
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(247, 1);
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(247, 1);
        if (source_obj == dude_obj) then begin
            if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
                set_global_var(156, 1);
                set_global_var(157, 0);
            end
            if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
                set_global_var(157, 1);
                set_global_var(156, 0);
            end
            set_global_var(159, global_var(159) + 1);
            if ((global_var(159) % 2) == 0) then begin
                set_global_var(155, global_var(155) - 1);
            end
        end
    end
end

procedure sleeping
begin
    if (local_var(0) == 1) then begin
        if (not(night_person) and (game_time_hour >= wake_time) and (game_time_hour < sleep_time) or (night_person and ((game_time_hour >= wake_time) or (game_time_hour < sleep_time)))) then begin
            if (((game_time_hour - wake_time) < 10) and ((game_time_hour - wake_time) > 0)) then begin
                if (tile_num(self_obj) != home_tile) then begin
                    animate_move_obj_to_tile(self_obj, home_tile, 0);
                end
                else begin
                    set_local_var(0, 0);
                end
            end
            else begin
                move_to(self_obj, home_tile, elevation(self_obj));
                if (tile_num(self_obj) == home_tile) then begin
                    set_local_var(0, 0);
                end
            end
        end
    end
    else begin
        if (night_person and (game_time_hour >= sleep_time) and (game_time_hour < wake_time) or (not(night_person) and ((game_time_hour >= sleep_time) or (game_time_hour < wake_time)))) then begin
            if (((game_time_hour - sleep_time) < 10) and ((game_time_hour - sleep_time) > 0)) then begin
                if (tile_num(self_obj) != sleep_tile) then begin
                    animate_move_obj_to_tile(self_obj, self_obj, 0);
                end
                else begin
                    set_local_var(0, 1);
                end
            end
            else begin
                if (tile_num(self_obj) != sleep_tile) then begin
                    move_to(self_obj, sleep_tile, elevation(self_obj));
                end
                else begin
                    set_local_var(0, 1);
                end
            end
        end
    end
end

