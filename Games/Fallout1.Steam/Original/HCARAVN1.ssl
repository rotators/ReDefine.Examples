procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure timed_event_p_proc;
procedure damage_p_proc;
procedure Caravan01;
procedure Caravan02;
procedure SendToWork;
procedure SendToSleep;
procedure WakeUpCall;

variable hostile;
variable Only_Once := 1;
variable SetDayNight;
variable Sleeping;
variable LastMove;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure start
begin
    if (Only_Once) then begin
        Only_Once := 0;
        critter_add_trait(self_obj, 1, 6, 64);
        critter_add_trait(self_obj, 1, 5, 50);
    end
    if (script_action == 21) then begin
        call look_at_p_proc();
    end
    else begin
        if (script_action == 4) then begin
            call pickup_p_proc();
        end
        else begin
            if (script_action == 11) then begin
                call talk_p_proc();
            end
            else begin
                if (script_action == 12) then begin
                    call critter_p_proc();
                end
                else begin
                    if (script_action == 18) then begin
                        call destroy_p_proc();
                    end
                    else begin
                        if (script_action == 22) then begin
                            call timed_event_p_proc();
                        end
                    end
                end
            end
        end
    end
end

procedure combat
begin
    hostile := 1;
end

procedure critter_p_proc
begin
    if (hostile) then begin
        hostile := 0;
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        hostile := 1;
    end
end

procedure talk_p_proc
begin
    if ((game_time_hour >= 600) and (game_time_hour < 700) or ((game_time_hour >= 700) and (game_time_hour < 1800))) then begin
        call get_reaction();
        if (map_var(2) == 1) then begin
            call Caravan02();
        end
        else begin
            call Caravan01();
        end
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
            set_global_var(156, 1);
            set_global_var(157, 0);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
            set_global_var(157, 1);
            set_global_var(156, 0);
        end
        set_global_var(159, global_var(159) + 1);
        if ((global_var(159) % 2) == 0) then begin
            set_global_var(155, global_var(155) - 1);
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(609, 100));
end

procedure timed_event_p_proc
begin
    if ((game_time_hour >= 600) and (game_time_hour < 700) or ((game_time_hour >= 700) and (game_time_hour < 1800))) then begin
        call SendToWork();
    end
end

procedure damage_p_proc
begin
    variable LVar0 := 0;
    LVar0 := obj_pid(source_obj);
    if (party_member_obj(LVar0) != 0) then begin
        set_global_var(248, 1);
    end
end

procedure Caravan01
begin
    float_msg(self_obj, message_str(609, random(101, 111)), 2);
end

procedure Caravan02
begin
    float_msg(self_obj, message_str(609, random(112, 122)), 2);
end

procedure SendToWork
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    LVar0 := 0;
    LVar1 := random(10, 30);
    while (LVar0 == 0) do begin
        LVar0 := random(1, 12);
        if (LVar0 == 1) then begin
            LVar0 := 10518;
        end
        else begin
            if (LVar0 == 2) then begin
                LVar0 := 11117;
            end
            else begin
                if (LVar0 == 3) then begin
                    LVar0 := 11115;
                end
                else begin
                    if (LVar0 == 4) then begin
                        LVar0 := 10913;
                    end
                    else begin
                        if (LVar0 == 5) then begin
                            LVar0 := 10711;
                        end
                        else begin
                            if (LVar0 == 6) then begin
                                LVar0 := 10313;
                            end
                            else begin
                                if (LVar0 == 7) then begin
                                    LVar0 := 10115;
                                end
                                else begin
                                    if (LVar0 == 8) then begin
                                        LVar0 := 9913;
                                    end
                                    else begin
                                        if (LVar0 == 9) then begin
                                            LVar0 := 10111;
                                        end
                                        else begin
                                            if (LVar0 == 10) then begin
                                                LVar0 := 9918;
                                            end
                                            else begin
                                                if (LVar0 == 11) then begin
                                                    LVar0 := 11317;
                                                end
                                                else begin
                                                    if (LVar0 == 12) then begin
                                                        LVar0 := 11111;
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (LVar0 == LastMove) then begin
            LVar0 := 0;
        end
    end
    LastMove := LVar0;
    reg_anim_func(2, self_obj);
    reg_anim_func(1, 1);
    reg_anim_obj_move_to_tile(self_obj, LVar0, -1);
    reg_anim_func(3, 0);
    add_timer_event(self_obj, game_ticks(LVar1), 1);
end

procedure SendToSleep
begin
    if (Sleeping == 0) then begin
        Sleeping := 1;
        if ((SetDayNight == 1) and (random(0, 100) >= 80)) then begin
            float_msg(self_obj, message_str(609, 123), 2);
        end
        SetDayNight := 0;
    end
end

procedure WakeUpCall
begin
    if (SetDayNight == 0) then begin
        Sleeping := 0;
        SetDayNight := 1;
        set_obj_visibility(self_obj, 0);
        add_timer_event(self_obj, game_ticks(1), 1);
    end
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, 3)) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
        if (has_trait(0, dude_obj, 39)) then begin
            if (global_var(155) > 0) then begin
                set_local_var(0, local_var(0) + global_var(155));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(155));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(155));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(155));
            end
        end
        if (global_var(158) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(634, random(100, 105));
end

