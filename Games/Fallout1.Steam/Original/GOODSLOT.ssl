procedure start;
procedure look_at_p_proc;
procedure map_enter_p_proc;
procedure use_p_proc;

variable rndx;
variable bonus;
variable test;
variable money;


procedure start
begin
    if (script_action == 21) then begin
        call look_at_p_proc();
    end
    else begin
        if (script_action == 15) then begin
            call map_enter_p_proc();
        end
        else begin
            if (script_action == 6) then begin
                call use_p_proc();
            end
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(355, 100));
end

procedure map_enter_p_proc
begin
    if (global_var(38) == 1) then begin
        destroy_object(self_obj);
    end
end

procedure use_p_proc
begin
    script_overrides;
    if (item_caps_total(dude_obj) < 20) then begin
        display_msg(message_str(355, 108));
    end
    else begin
        display_msg(message_str(355, 101));
        item_caps_adjust(dude_obj, -20);
        bonus := random(1, 50) - random(20, 50);
        test := roll_vs_skill(dude_obj, 16, bonus);
        if (is_success(test)) then begin
            if (is_critical(test)) then begin
                rndx := random(30, 40);
                float_msg(self_obj, message_str(355, 102), 0);
                display_msg(message_str(355, 103) + rndx + message_str(355, 104));
            end
            else begin
                float_msg(self_obj, message_str(355, 105), 0);
                display_msg(message_str(355, 106));
                rndx := 30;
            end
            item_caps_adjust(dude_obj, rndx);
        end
        else begin
            display_msg(message_str(355, 107));
        end
    end
end

