/*******************************************************
*      Some unreferenced imported varables found.      *
*      Because of it it is impossible to specify       *
*      the real names of global variables.             *
*******************************************************/

variable GVar0;
variable GVar1 := 1;
variable GVar2;

procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure Cheater00a;
procedure Cheater00;
procedure Cheater01;
procedure Cheater02;
procedure Cheater03;
procedure Cheater04;
procedure Cheater05;
procedure Cheater06;
procedure Cheater06a;
procedure Cheater06b;
procedure Cheater06c;
procedure Cheater06d;
procedure Cheater06e;
procedure Cheater07;
procedure Cheater08;
procedure CheaterEnd;

/* ?import? variable hostile; */
/* ?import? variable Only_Once; */
/* ?import? variable Sid_Ptr; */

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

/* ?import? variable exit_line; */


procedure start
begin
    if (GVar1) then begin
        GVar1 := 0;
        critter_add_trait(self_obj, 1, 6, 84);
        critter_add_trait(self_obj, 1, 5, 0);
    end
    if (script_action == 21) then begin
        call look_at_p_proc();
    end
    else begin
        if (script_action == 4) then begin
            call pickup_p_proc();
        end
        else begin
            if (script_action == 11) then begin
                call talk_p_proc();
            end
            else begin
                if (script_action == 12) then begin
                    call critter_p_proc();
                end
                else begin
                    if (script_action == 18) then begin
                        call destroy_p_proc();
                    end
                end
            end
        end
    end
end

procedure combat
begin
    GVar0 := 1;
end

procedure critter_p_proc
begin
    if (GVar0) then begin
        GVar0 := 0;
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        GVar0 := 1;
    end
end

procedure talk_p_proc
begin
    call get_reaction();
    start_gdialog(621, self_obj, 4, -1, -1);
    gsay_start;
    call Cheater00a();
    gsay_end;
    end_dialogue;
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(159, global_var(159) + 1);
        if ((global_var(159) % 7) == 0) then begin
            set_global_var(155, global_var(155) - 1);
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg("You see a cheating person.");
end

procedure Cheater00a
begin
    gsay_reply(621, "How may I Cheat you today?");
    giq_option(1, 621, "Experience Points.", Cheater00, 50);
    giq_option(1, 621, "Damage.", Cheater06, 50);
    giq_option(1, 621, "Poison", Cheater07, 50);
    giq_option(1, 621, "Radiation", Cheater08, 50);
    giq_option(1, 621, "Nothing.", CheaterEnd, 50);
end

procedure Cheater00
begin
    gsay_reply(621, "How much Exp Points do you want?");
    giq_option(1, 621, "500", Cheater01, 50);
    giq_option(1, 621, "1000", Cheater02, 50);
    giq_option(1, 621, "5000", Cheater03, 50);
    giq_option(1, 621, "10000", Cheater04, 50);
    giq_option(1, 621, "20000", Cheater05, 50);
    giq_option(1, 621, "Nevermind", CheaterEnd, 50);
end

procedure Cheater01
begin
    give_exp_points(500);
    gsay_message(621, "Ok, you have them.", 50);
    call Cheater00();
end

procedure Cheater02
begin
    give_exp_points(1000);
    gsay_message(621, "Ok, you have them.", 50);
    call Cheater00();
end

procedure Cheater03
begin
    give_exp_points(5000);
    gsay_message(621, "Ok, you have them.", 50);
    call Cheater00();
end

procedure Cheater04
begin
    give_exp_points(10000);
    gsay_message(621, "Ok, you have them.", 50);
    call Cheater00();
end

procedure Cheater05
begin
    give_exp_points(20000);
    gsay_message(621, "Ok, you have them.", 50);
    call Cheater00();
end

procedure Cheater06
begin
    gsay_reply(621, "How might I abuse you today?");
    giq_option(1, 621, "Cripple Left Leg", Cheater06a, 50);
    giq_option(1, 621, "Cripple Right Leg", Cheater06b, 50);
    giq_option(1, 621, "Cripple Left Arm", Cheater06c, 50);
    giq_option(1, 621, "Cripple Right Arm", Cheater06d, 50);
    giq_option(1, 621, "Blind Me ", Cheater06e, 50);
    giq_option(1, 621, "Don't hurt me.", Cheater00a, 50);
end

procedure Cheater06a
begin
    critter_injure(dude_obj, 4);
    gsay_message(621, "[Grinning Visciously] I was happy to Help you", 50);
    call Cheater00a();
end

procedure Cheater06b
begin
    critter_injure(dude_obj, 8);
    gsay_message(621, "[Grinning Visciously] I was happy to Help you", 50);
    call Cheater00a();
end

procedure Cheater06c
begin
    critter_injure(dude_obj, 4);
    gsay_message(621, "[Grinning Visciously] I was happy to Help you", 50);
    call Cheater00a();
end

procedure Cheater06d
begin
    critter_injure(dude_obj, 16);
    gsay_message(621, "[Grinning Visciously] I was happy to Help you", 50);
    call Cheater00a();
end

procedure Cheater06e
begin
    critter_injure(dude_obj, 32);
    gsay_message(621, "[Grinning Visciously] I was happy to Help you", 50);
    call Cheater00a();
end

procedure Cheater07
begin
    poison(dude_obj, 10);
    gsay_message(621, "[Hands you a Burrito Supreme] Enjoy your Grade D Beef.", 50);
    call Cheater00a();
end

procedure Cheater08
begin
    radiation_inc(dude_obj, 50);
    gsay_message(621, "Now you glow like a 50 watt light bulb.", 50);
    call Cheater00a();
end

procedure CheaterEnd
begin
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, 3)) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
        if (has_trait(0, dude_obj, 39)) then begin
            if (global_var(155) > 0) then begin
                set_local_var(0, local_var(0) + global_var(155));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(155));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(155));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(155));
            end
        end
        if (global_var(158) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(160) + global_var(159)) > 34) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(160) + global_var(159)) > 34) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    GVar2 := message_str(634, random(100, 105));
end

