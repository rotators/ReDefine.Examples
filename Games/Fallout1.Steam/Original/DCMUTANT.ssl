procedure start;
procedure combat;
procedure critter_p_proc;
procedure combat_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure Mutant00;
procedure Mutant01;
procedure Mutant02;
procedure Mutant03;

variable hostile;
variable Only_Once := 1;
variable lastBabble;
variable kill_me;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure start
begin
    if (Only_Once) then begin
        Only_Once := 0;
        anim(self_obj, 48, 0);
        critter_add_trait(self_obj, 1, 6, 34);
        critter_add_trait(self_obj, 1, 5, 47);
    end
    if (script_action == 21) then begin
        call look_at_p_proc();
    end
    else begin
        if (script_action == 4) then begin
            call pickup_p_proc();
        end
        else begin
            if (script_action == 11) then begin
                call talk_p_proc();
            end
            else begin
                if (script_action == 12) then begin
                    call critter_p_proc();
                end
                else begin
                    if (script_action == 18) then begin
                        call destroy_p_proc();
                    end
                    else begin
                        if (script_action == 8) then begin
                            call use_skill_on_p_proc();
                        end
                        else begin
                            if (script_action == 7) then begin
                                call use_obj_on_p_proc();
                            end
                            else begin
                                if (script_action == 13) then begin
                                    call combat_p_proc();
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure combat
begin
    hostile := 1;
end

procedure critter_p_proc
begin
    if (hostile) then begin
        hostile := 0;
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
    if ((local_var(5) == 0) and (((game_time / 10) - lastBabble) >= 10) and (tile_distance_objs(self_obj, dude_obj) <= 15)) then begin
        lastBabble := game_time / 10;
        float_msg(self_obj, message_str(848, random(111, 113)), 2);
    end
end

procedure combat_p_proc
begin
    script_overrides;
end

procedure pickup_p_proc
begin
end

procedure talk_p_proc
begin
    call get_reaction();
    if (local_var(5) == 1) then begin
        display_msg(message_str(848, 103));
    end
    else begin
        start_gdialog(848, self_obj, 4, -1, -1);
        gsay_start;
        call Mutant00();
        gsay_end;
        end_dialogue;
    end
    if (kill_me == 1) then begin
        kill_me := 0;
        kill_critter(self_obj, 48);
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
            set_global_var(156, 1);
            set_global_var(157, 0);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
            set_global_var(157, 1);
            set_global_var(156, 0);
        end
        set_global_var(160, global_var(160) + 1);
        if ((global_var(160) % 6) == 0) then begin
            set_global_var(155, global_var(155) + 1);
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(5) == 0) then begin
        display_msg(message_str(848, 100));
    end
    else begin
        display_msg(message_str(848, 102));
    end
end

procedure use_skill_on_p_proc
begin
    script_overrides;
    dialogue_system_enter;
end

procedure use_obj_on_p_proc
begin
    script_overrides;
    dialogue_system_enter;
end

procedure Mutant00
begin
    gsay_reply(848, 104);
    giq_option(4, 848, 105, Mutant01, 50);
end

procedure Mutant01
begin
    variable LVar0 := 0;
    set_global_var(106, 2);
    gsay_reply(848, 106);
    LVar0 := obj_carrying_pid_obj(self_obj, 196);
    if (LVar0 != 0) then begin
        rm_obj_from_inven(self_obj, LVar0);
        add_obj_to_inven(dude_obj, LVar0);
    end
    giq_option(4, 848, 107, Mutant02, 50);
end

procedure Mutant02
begin
    gsay_reply(848, 108);
    giq_option(4, 848, 109, Mutant03, 50);
end

procedure Mutant03
begin
    set_local_var(5, 1);
    kill_me := 1;
    gsay_message(848, 110, 50);
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, 3)) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
        if (has_trait(0, dude_obj, 39)) then begin
            if (global_var(155) > 0) then begin
                set_local_var(0, local_var(0) + global_var(155));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(155));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(155));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(155));
            end
        end
        if (global_var(158) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(634, random(100, 105));
end

