procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure damage_p_proc;
procedure MasterMerch00;
procedure MasterMerch01;
procedure MasterMerch02;
procedure MasterMerch03;
procedure MasterMerch04;
procedure MasterMerch05;
procedure MasterMerch06;
procedure MasterMerch07;
procedure MasterMerch08;
procedure MasterMerch09;
procedure MasterMerch10;
procedure MasterMerch11;
procedure MasterMerch12;
procedure MasterMerch13;
procedure MasterMerch14;
procedure MasterMerch15;
procedure MasterMerch16;
procedure MasterMerch17;
procedure MasterMerch18;
procedure MasterMerch19;
procedure MasterMerch20;
procedure MasterMerchEnd;

variable hostile;
variable Only_Once := 1;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure start
begin
    if (Only_Once) then begin
        Only_Once := 0;
        critter_add_trait(self_obj, 1, 6, 35);
        critter_add_trait(self_obj, 1, 5, 50);
    end
    if (script_action == 21) then begin
        call look_at_p_proc();
    end
    else begin
        if (script_action == 4) then begin
            call pickup_p_proc();
        end
        else begin
            if (script_action == 11) then begin
                call talk_p_proc();
            end
            else begin
                if (script_action == 12) then begin
                    call critter_p_proc();
                end
                else begin
                    if (script_action == 18) then begin
                        call destroy_p_proc();
                    end
                    else begin
                        if (script_action == 14) then begin
                            call damage_p_proc();
                        end
                    end
                end
            end
        end
    end
end

procedure combat
begin
    hostile := 1;
end

procedure critter_p_proc
begin
    if (hostile) then begin
        hostile := 0;
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
end

procedure pickup_p_proc
begin
    call MasterMerch00();
    if (source_obj == dude_obj) then begin
        hostile := 1;
    end
end

procedure talk_p_proc
begin
    call get_reaction();
    if (map_var(2) == 0) then begin
        float_msg(self_obj, message_str(598, 156), 2);
    end
    else begin
        if (local_var(4) == 0) then begin
            set_local_var(4, 1);
            start_gdialog(598, self_obj, 4, -1, -1);
            gsay_start;
            call MasterMerch01();
            gsay_end;
            end_dialogue;
        end
        else begin
            if ((local_var(5) > 0) and (global_var(101) != 1)) then begin
                start_gdialog(598, self_obj, 4, -1, -1);
                gsay_start;
                call MasterMerch19();
                gsay_end;
                end_dialogue;
            end
            else begin
                start_gdialog(598, self_obj, 4, -1, -1);
                gsay_start;
                call MasterMerch10();
                gsay_end;
                end_dialogue;
            end
        end
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
            set_global_var(156, 1);
            set_global_var(157, 0);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
            set_global_var(157, 1);
            set_global_var(156, 0);
        end
        set_global_var(159, global_var(159) + 1);
        if ((global_var(159) % 2) == 0) then begin
            set_global_var(155, global_var(155) - 1);
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(598, 100));
end

procedure damage_p_proc
begin
    variable LVar0 := 0;
    LVar0 := obj_pid(source_obj);
    if (party_member_obj(LVar0) != 0) then begin
        set_global_var(248, 1);
    end
end

procedure MasterMerch00
begin
    float_msg(self_obj, message_str(598, 101), 2);
    call combat();
end

procedure MasterMerch01
begin
    gsay_reply(598, 102);
    giq_option(4, 598, 103, MasterMerch02, 50);
    if ((global_var(101) != 2) or ((global_var(30) == 1) and (global_var(31) == 0))) then begin
        giq_option(4, 598, 104, MasterMerch04, 50);
    end
    giq_option(4, 598, 105, MasterMerchEnd, 50);
    giq_option(-3, 598, 106, MasterMerch03, 50);
end

procedure MasterMerch02
begin
    set_map_var(1, 1);
    gsay_reply(598, 107);
    giq_option(4, 598, 108, MasterMerchEnd, 50);
    if ((global_var(101) != 2) or ((global_var(30) == 1) and (global_var(31) == 0))) then begin
        giq_option(4, 598, 109, MasterMerch04, 50);
    end
    giq_option(-3, 598, 110, MasterMerch03, 50);
end

procedure MasterMerch03
begin
    gsay_message(598, 111, 50);
end

procedure MasterMerch04
begin
    if (global_var(72) == 0) then begin
        set_global_var(72, 1);
    end
    gsay_reply(598, 112);
    giq_option(4, 598, 113, MasterMerch13, 50);
    giq_option(4, 598, 114, MasterMerch05, 50);
    giq_option(4, 598, 115, MasterMerch06, 50);
    giq_option(4, 598, 116, MasterMerch07, 50);
end

procedure MasterMerch05
begin
    set_local_var(6, 1);
    gsay_reply(598, 117);
    giq_option(4, 598, 118, MasterMerch14, 50);
    giq_option(4, 598, 119, MasterMerch08, 50);
    giq_option(4, 598, 120, MasterMerch07, 50);
end

procedure MasterMerch06
begin
    gsay_message(598, 121, 50);
end

procedure MasterMerch07
begin
    gsay_message(598, 122, 50);
end

procedure MasterMerch08
begin
    gsay_reply(598, 123);
    giq_option(4, 598, 124, MasterMerch14, 50);
    giq_option(4, 598, 125, MasterMerch09, 50);
end

procedure MasterMerch09
begin
    gsay_message(598, 126, 50);
end

procedure MasterMerch10
begin
    gsay_reply(598, 127);
    if ((global_var(101) != 2) and (global_var(101) != 1) and (local_var(6) == 0)) then begin
        giq_option(4, 598, 128, MasterMerch04, 50);
    end
    else begin
        if ((global_var(101) != 2) and (global_var(101) != 1) and (local_var(6) == 1)) then begin
            giq_option(4, 598, 129, MasterMerch12, 50);
        end
    end
    giq_option(4, 598, 130, MasterMerch11, 50);
    giq_option(4, 598, 131, MasterMerchEnd, 50);
    giq_option(-3, 598, 106, MasterMerch03, 50);
end

procedure MasterMerch11
begin
    set_map_var(1, 1);
    gsay_message(598, 132, 50);
end

procedure MasterMerch12
begin
    gsay_reply(598, 133);
    giq_option(4, 598, 134, MasterMerch13, 50);
    giq_option(4, 598, 135, MasterMerch14, 50);
    giq_option(4, 598, 136, MasterMerchEnd, 50);
end

procedure MasterMerch13
begin
    gsay_reply(598, 137);
    giq_option(4, 598, 138, MasterMerch14, 50);
    giq_option(4, 598, 139, MasterMerch07, 50);
end

procedure MasterMerch14
begin
    gsay_reply(598, 140);
    call MasterMerch15();
end

procedure MasterMerch15
begin
    if (local_var(5) == 0) then begin
        set_local_var(5, 2000);
    end
    giq_option(4, 598, 141, MasterMerch16, 50);
    if (local_var(7) == 0) then begin
        giq_option(4, 598, 142, MasterMerch17, 50);
    end
    if (local_var(7) == 0) then begin
        giq_option(4, 598, 143, MasterMerch18, 50);
    end
    giq_option(4, 598, 144, MasterMerchEnd, 50);
end

procedure MasterMerch16
begin
    if (item_caps_total(dude_obj) < local_var(5)) then begin
        gsay_message(598, message_str(598, 145) + local_var(5) + message_str(598, 146), 50);
        call MasterMerchEnd();
    end
    else begin
        gsay_reply(598, 147);
        giq_option(4, 598, 148, MasterMerchEnd, 50);
        giq_option(4, 598, 149, MasterMerch20, 50);
    end
end

procedure MasterMerch17
begin
    set_local_var(7, 1);
    if (is_success(roll_vs_skill(dude_obj, 15, -15))) then begin
        set_local_var(5, 1000);
        gsay_message(598, 150, 50);
        call MasterMerch16();
    end
    else begin
        gsay_reply(598, 151);
        call MasterMerch15();
    end
end

procedure MasterMerch18
begin
    set_local_var(7, 1);
    if (is_success(roll_vs_skill(dude_obj, 15, -30))) then begin
        set_local_var(5, 500);
        gsay_message(598, 152, 50);
        call MasterMerch16();
    end
    else begin
        gsay_reply(598, 153);
        call MasterMerch15();
    end
end

procedure MasterMerch19
begin
    gsay_reply(598, message_str(598, 157) + local_var(5) + message_str(598, 158));
    call MasterMerch15();
end

procedure MasterMerch20
begin
    variable LVar0 := 0;
    LVar0 := item_caps_adjust(dude_obj, -1 * local_var(5));
    set_global_var(101, 1);
    set_global_var(10, global_var(10) + 100);
    if (global_var(154) >= 100) then begin
        set_global_var(154, global_var(154) - 90);
    end
    give_exp_points(1000);
    display_msg(message_str(766, 103) + 1000 + message_str(766, 104));
    gsay_message(598, 155, 50);
end

procedure MasterMerchEnd
begin
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, 3)) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
        if (has_trait(0, dude_obj, 39)) then begin
            if (global_var(155) > 0) then begin
                set_local_var(0, local_var(0) + global_var(155));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(155));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(155));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(155));
            end
        end
        if (global_var(158) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(634, random(100, 105));
end

