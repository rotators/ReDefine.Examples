procedure start;
procedure critter_p_proc;
procedure description_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;
procedure Agatha00;
procedure Agatha01;
procedure Agatha02;
procedure Agatha03;
procedure Agatha04;
procedure Agatha05;
procedure Agatha06;
procedure Agatha07;
procedure Agatha08;
procedure Agatha09;
procedure Agatha10;
procedure Agatha11;
procedure Agatha12;
procedure Agatha13;
procedure Agatha14;
procedure Agatha15;
procedure Agatha16;
procedure Agatha17;
procedure Agatha18;
procedure Agatha19;
procedure Agatha20;
procedure AgathaEnd;

variable initialized;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure start
begin
    if (not(initialized)) then begin
        critter_add_trait(self_obj, 1, 6, 2);
        initialized := 1;
    end
    else begin
        if (script_action == 12) then begin
            call critter_p_proc();
        end
        else begin
            if (script_action == 3) then begin
                call description_p_proc();
            end
            else begin
                if (script_action == 18) then begin
                    call destroy_p_proc();
                end
                else begin
                    if (script_action == 21) then begin
                        call look_at_p_proc();
                    end
                    else begin
                        if (script_action == 11) then begin
                            call talk_p_proc();
                        end
                        else begin
                            if (script_action == 22) then begin
                                call timed_event_p_proc();
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure critter_p_proc
begin
end

procedure description_p_proc
begin
    if (is_success(do_check(dude_obj, 1, has_trait(0, dude_obj, 0)))) then begin
        script_overrides;
        display_msg(message_str(663, 102));
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
            set_global_var(156, 1);
            set_global_var(157, 0);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
            set_global_var(157, 1);
            set_global_var(156, 0);
        end
        set_global_var(159, global_var(159) + 1);
        if ((global_var(159) % 2) == 0) then begin
            set_global_var(155, global_var(155) - 1);
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4)) then begin
        display_msg(message_str(663, 101));
    end
    else begin
        display_msg(message_str(663, 100));
    end
end

procedure talk_p_proc
begin
    start_gdialog(663, self_obj, 4, -1, -1);
    gsay_start;
    if (local_var(4)) then begin
        if (local_var(5)) then begin
            call Agatha14();
        end
        else begin
            if (local_var(1) > 1) then begin
                call Agatha16();
            end
            else begin
                call AgathaEnd();
            end
        end
    end
    else begin
        call Agatha08();
    end
    gsay_end;
    end_dialogue;
end

procedure timed_event_p_proc
begin
end

procedure Agatha00
begin
    float_msg(self_obj, message_str(663, 103), 0);
end

procedure Agatha01
begin
    gsay_reply(663, 104);
    giq_option(-3, 663, 105, Agatha02, 49);
    giq_option(4, 663, 106, AgathaEnd, 50);
    giq_option(5, 663, 107, Agatha03, 50);
    giq_option(4, 663, 108, Agatha04, 50);
end

procedure Agatha02
begin
    gsay_message(663, 109, 49);
end

procedure Agatha03
begin
    gsay_reply(663, 110);
    giq_option(5, 663, 111, AgathaEnd, 49);
    giq_option(6, 663, 112, Agatha04, 50);
    giq_option(5, 663, 113, AgathaEnd, 50);
end

procedure Agatha04
begin
    gsay_reply(663, 114);
    giq_option(5, 663, 115, AgathaEnd, 49);
end

procedure Agatha05
begin
    gsay_message(663, 116, 50);
end

procedure Agatha06
begin
    call UpReact();
    gsay_message(663, 117, 49);
end

procedure Agatha07
begin
    gsay_message(663, 118, 50);
end

procedure Agatha08
begin
    gsay_reply(663, 119);
    giq_option(-3, 663, 120, Agatha09, 50);
    giq_option(4, 663, 121, Agatha10, 50);
    if (get_critter_stat(dude_obj, 34) == 1) then begin
        giq_option(5, 663, 122, Agatha13, 50);
    end
    else begin
        giq_option(7, 663, 123, Agatha13, 50);
    end
    giq_option(4, 663, 124, Agatha09, 51);
end

procedure Agatha09
begin
    gsay_message(663, 125, 50);
end

procedure Agatha10
begin
    gsay_reply(663, 126);
    giq_option(4, 663, 127, Agatha11, 50);
    giq_option(4, 663, 128, AgathaEnd, 50);
    giq_option(6, 663, 129, Agatha12, 49);
end

procedure Agatha11
begin
    gsay_message(663, 130, 50);
end

procedure Agatha12
begin
    call UpReact();
    gsay_message(663, 131, 50);
end

procedure Agatha13
begin
    gsay_message(663, 132, 50);
end

procedure Agatha14
begin
    gsay_reply(663, 133);
    giq_option(-3, 663, 134, AgathaEnd, 50);
    giq_option(4, 663, 135, AgathaEnd, 50);
    giq_option(6, 663, 136, Agatha15, 50);
end

procedure Agatha15
begin
    gsay_message(663, 137, 50);
end

procedure Agatha16
begin
    gsay_reply(663, 138);
    giq_option(-3, 663, 139, Agatha17, 50);
    giq_option(4, 663, 140, Agatha20, 50);
    giq_option(6, 663, 141, Agatha18, 50);
    giq_option(4, 663, 142, AgathaEnd, 50);
end

procedure Agatha17
begin
    gsay_message(663, 143, 50);
end

procedure Agatha18
begin
    gsay_reply(663, 144);
    giq_option(5, 663, 145, Agatha20, 50);
    giq_option(5, 663, 146, Agatha19, 51);
end

procedure Agatha19
begin
    call DownReactLevel();
    call DownReactLevel();
    gsay_message(663, 147, 51);
end

procedure Agatha20
begin
end

procedure AgathaEnd
begin
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, 3)) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
        if (has_trait(0, dude_obj, 39)) then begin
            if (global_var(155) > 0) then begin
                set_local_var(0, local_var(0) + global_var(155));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(155));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(155));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(155));
            end
        end
        if (global_var(158) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(634, random(100, 105));
end

