/*******************************************************
*      Some unreferenced imported varables found.      *
*      Because of it it is impossible to specify       *
*      the real names of global variables.             *
*******************************************************/

variable GVar0;
variable GVar1 := 1;
variable GVar2;
variable GVar3;

procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure Richie00;
procedure Richie01;
procedure Richie01a;
procedure Richie01b;
procedure Richie02;
procedure Richie03;
procedure Richie04;
procedure Richie05;
procedure Richie06;
procedure Richie07;
procedure Richie08;
procedure Richie09;
procedure Richie10;
procedure Richie11;
procedure Richie12;
procedure Richie13;
procedure RichieLeave;
procedure RichieEnd;

/* ?import? variable hostile; */
/* ?import? variable Only_Once; */
/* ?import? variable Go_Away; */
/* ?import? variable Vault_Ptr; */

import variable Richie_Ptr;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

/* ?import? variable exit_line; */


procedure start
begin
    if (GVar1) then begin
        GVar1 := 0;
        Richie_Ptr := self_obj;
        critter_add_trait(self_obj, 1, 6, 73);
        critter_add_trait(self_obj, 1, 5, 1);
    end
    if (script_action == 21) then begin
        call look_at_p_proc();
    end
    else begin
        if (script_action == 4) then begin
            call pickup_p_proc();
        end
        else begin
            if (script_action == 11) then begin
                call talk_p_proc();
            end
            else begin
                if (script_action == 12) then begin
                    call critter_p_proc();
                end
                else begin
                    if (script_action == 18) then begin
                        call destroy_p_proc();
                    end
                end
            end
        end
    end
end

procedure combat
begin
    GVar0 := 1;
end

procedure critter_p_proc
begin
    if (GVar0) then begin
        GVar0 := 0;
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        GVar0 := 1;
    end
end

procedure talk_p_proc
begin
    call get_reaction();
    if ((map_var(23) == 1) or (map_var(15) > 0) or (map_var(18) == 2)) then begin
        call Richie00();
    end
    else begin
        if (map_var(20) == 0) then begin
            set_map_var(20, 1);
            start_gdialog(599, self_obj, 4, -1, -1);
            gsay_start;
            call Richie01();
            gsay_end;
            end_dialogue;
        end
        else begin
            call Richie02();
        end
    end
    if (GVar2) then begin
        animate_move_obj_to_tile(self_obj, 27450, 0);
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
            set_global_var(156, 1);
            set_global_var(157, 0);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
            set_global_var(157, 1);
            set_global_var(156, 0);
        end
        set_global_var(159, global_var(159) + 1);
        if ((global_var(159) % 2) == 0) then begin
            set_global_var(155, global_var(155) - 1);
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(599, 100));
end

procedure Richie00
begin
    float_msg(self_obj, message_str(599, 101), 2);
    call combat();
end

procedure Richie01
begin
    gsay_reply(599, 102);
    giq_option(7, 599, 103, Richie01a, 50);
    giq_option(7, 599, 104, Richie01b, 50);
    giq_option(4, 599, 105, Richie06, 51);
    giq_option(4, 599, 106, Richie07, 51);
    giq_option(4, 599, 107, Richie08, 50);
    giq_option(4, 599, 108, Richie09, 51);
    giq_option(-3, 599, 109, Richie09, 50);
end

procedure Richie01a
begin
    if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
        call Richie03();
    end
    else begin
        call Richie04();
    end
end

procedure Richie01b
begin
    if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
        call Richie05();
    end
    else begin
        call Richie04();
    end
end

procedure Richie02
begin
    float_msg(self_obj, message_str(599, 110), 2);
end

procedure Richie03
begin
    gsay_message(599, 111, 49);
    GVar2 := 1;
end

procedure Richie04
begin
    gsay_message(599, 112, 51);
end

procedure Richie05
begin
    gsay_message(599, 113, 49);
    GVar2 := 1;
end

procedure Richie06
begin
    gsay_message(599, 114, 51);
end

procedure Richie07
begin
    gsay_message(599, 115, 51);
    call combat();
end

procedure Richie08
begin
    gsay_message(599, 116, 50);
end

procedure Richie09
begin
    gsay_reply(599, 117);
    giq_option(-3, 599, 118, Richie10, 51);
    giq_option(-3, 599, 119, Richie11, 49);
    giq_option(-3, 599, 120, Richie12, 50);
end

procedure Richie10
begin
    gsay_message(599, 121, 50);
end

procedure Richie11
begin
    gsay_message(599, 123, 49);
end

procedure Richie12
begin
    gsay_reply(599, 123);
    giq_option(-3, 599, 124, Richie10, 51);
    giq_option(-3, 599, 125, Richie11, 49);
    giq_option(-3, 599, 126, Richie13, 50);
end

procedure Richie13
begin
    gsay_message(599, 127, 50);
end

procedure RichieLeave
begin
end

procedure RichieEnd
begin
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, 3)) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
        if (has_trait(0, dude_obj, 39)) then begin
            if (global_var(155) > 0) then begin
                set_local_var(0, local_var(0) + global_var(155));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(155));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(155));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(155));
            end
        end
        if (global_var(158) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    GVar3 := message_str(634, random(100, 105));
end

