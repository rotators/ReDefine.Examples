procedure start;
procedure do_dialogue;
procedure alya00;
procedure alya01;
procedure alya02;
procedure alya03;
procedure alya04;
procedure alya05;
procedure alya06;
procedure alya07;
procedure alya08;
procedure alya09;
procedure alya10;
procedure alyaend;
procedure talk_p_proc;
procedure combat;
procedure Critter_Action;
procedure damage_p_proc;

variable HOSTILE;
variable initialized;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure start
begin
    if (not(initialized)) then begin
        critter_add_trait(self_obj, 1, 6, 6);
        critter_add_trait(self_obj, 1, 5, 21);
        initialized := 1;
    end
    if (script_action == 11) then begin
        call talk_p_proc();
    end
    else begin
        if (script_action == 22) then begin
            if (tile_distance_objs(self_obj, dude_obj) < 8) then begin
                call combat();
            end
        end
        else begin
            if (script_action == 4) then begin
                HOSTILE := 1;
            end
            else begin
                if (script_action == 12) then begin
                    call Critter_Action();
                    if (HOSTILE) then begin
                        HOSTILE := 0;
                        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
                    end
                end
                else begin
                    if (script_action == 21) then begin
                        script_overrides;
                        display_msg(message_str(143, 100));
                    end
                    else begin
                        if (script_action == 14) then begin
                            call damage_p_proc();
                        end
                        else begin
                            if (script_action == 18) then begin
                                if (source_obj == dude_obj) then begin
                                    if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
                                        set_global_var(156, 1);
                                        set_global_var(157, 0);
                                    end
                                    if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
                                        set_global_var(157, 1);
                                        set_global_var(156, 0);
                                    end
                                    set_global_var(160, global_var(160) + 1);
                                    if ((global_var(160) % 6) == 0) then begin
                                        set_global_var(155, global_var(155) + 1);
                                    end
                                end
                                set_global_var(254, 1);
                                set_global_var(611, 0);
                                set_global_var(115, global_var(115) - 1);
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure do_dialogue
begin
    set_local_var(3, 1);
    call get_reaction();
    start_gdialog(143, self_obj, 4, -1, -1);
    gsay_start;
    if (local_var(4) == 5) then begin
        call alya10();
    end
    else begin
        set_local_var(4, local_var(4) + 1);
        call alya00();
    end
    gsay_end;
    end_dialogue;
end

procedure alya00
begin
    gsay_reply(143, 101);
    if ((global_var(103) == 1) and (global_var(218) == 1)) then begin
        giq_option(4, 143, 102, alya01, 50);
    end
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        giq_option(4, 143, 103, alya02, 50);
    end
    giq_option(4, 143, 104, alya03, 50);
    giq_option(4, 143, 105, alyaend, 50);
    giq_option(-3, 143, 106, alya05, 50);
end

procedure alya01
begin
    gsay_message(143, 107, 50);
end

procedure alya02
begin
    gsay_message(143, 108, 50);
    call combat();
end

procedure alya03
begin
    gsay_reply(143, 109);
    giq_option(4, 143, 110, alya04, 50);
    giq_option(4, 143, 111, alya09, 50);
    giq_option(4, 143, 112, alyaend, 50);
end

procedure alya04
begin
    gsay_reply(143, 113);
    giq_option(4, 143, 114, alya06, 50);
    giq_option(4, 143, 115, alya08, 50);
    giq_option(4, 143, 116, alyaend, 50);
end

procedure alya05
begin
    gsay_message(143, 117, 50);
end

procedure alya06
begin
    gsay_reply(143, 118);
    giq_option(4, 143, 119, alya07, 50);
    giq_option(4, 143, 120, combat, 50);
    giq_option(4, 143, 121, alyaend, 50);
end

procedure alya07
begin
    gsay_message(143, 122, 50);
    call combat();
end

procedure alya08
begin
    gsay_message(143, 123, 50);
    add_timer_event(self_obj, game_ticks(15), 1);
end

procedure alya09
begin
    gsay_message(143, 124, 50);
end

procedure alya10
begin
    gsay_message(143, 125, 50);
end

procedure alyaend
begin
end

procedure talk_p_proc
begin
    if (global_var(116) == 1) then begin
        float_msg(self_obj, message_str(136, random(102, 106)), 8);
    end
    else begin
        call do_dialogue();
    end
end

procedure combat
begin
    if (global_var(116) == 1) then begin
        critter_add_trait(self_obj, 1, 6, 87);
    end
    HOSTILE := 1;
end

procedure Critter_Action
begin
    variable LVar0 := 0;
    if (global_var(26) == 2) then begin
        set_global_var(254, 1);
    end
    else begin
        if (global_var(116)) then begin
            set_global_var(254, 0);
            if (tile_distance_objs(self_obj, dude_obj) < 3) then begin
                LVar0 := tile_num_in_direction(tile_num(self_obj), random(0, 5), 3);
                if (tile_distance(tile_num(self_obj), LVar0) > 2) then begin
                    if (random(0, 9) == 0) then begin
                        float_msg(self_obj, message_str(136, random(102, 106)), 8);
                    end
                    animate_move_obj_to_tile(self_obj, LVar0, 0);
                end
            end
        end
        else begin
            if (global_var(213)) then begin
                set_global_var(254, 1);
            end
            if (obj_can_see_obj(self_obj, dude_obj)) then begin
                if (global_var(214)) then begin
                    set_global_var(254, 1);
                end
            end
            if (map_var(2) == 1) then begin
                set_global_var(254, 1);
            end
        end
    end
    if (global_var(254) and obj_can_see_obj(self_obj, dude_obj)) then begin
        HOSTILE := 1;
    end
    if (tile_distance_objs(self_obj, dude_obj) > 12) then begin
        HOSTILE := 0;
    end
end

procedure damage_p_proc
begin
    if (global_var(116) == 0) then begin
        set_global_var(254, 1);
    end
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, 3)) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
        if (has_trait(0, dude_obj, 39)) then begin
            if (global_var(155) > 0) then begin
                set_local_var(0, local_var(0) + global_var(155));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(155));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(155));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(155));
            end
        end
        if (global_var(158) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(634, random(100, 105));
end

