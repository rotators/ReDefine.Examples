procedure start;
procedure critter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure Medic00;
procedure Medic01;
procedure Medic02;
procedure Medic03;
procedure Medic04;
procedure Medic04a;
procedure Medic05;
procedure Medic06;
procedure Medic07;
procedure Medic08;
procedure Medic08a;
procedure Medic09;
procedure Medic10;
procedure Medic11;
procedure Medic12;
procedure Medic13;
procedure Medic14;
procedure Medic15;
procedure Medic16;
procedure Medic17;
procedure Medic18;
procedure Medic19;
procedure Medic20;
procedure Medic21;
procedure Medic22;
procedure Medic23;
procedure Medic24;
procedure flee_dude;
procedure pushdrugs;
procedure medicend;

variable damage;
variable intensity;
variable removal;
variable rndx;
variable rads;
variable initialized;
variable player_hits;
variable player_max_hits;
variable home_tile := 13881;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure start
begin
    if (not(initialized)) then begin
        critter_add_trait(self_obj, 1, 6, 1);
        initialized := 1;
    end
    else begin
        if (script_action == 12) then begin
            call critter_p_proc();
        end
        else begin
            if (script_action == 14) then begin
                call damage_p_proc();
            end
            else begin
                if (script_action == 18) then begin
                    call destroy_p_proc();
                end
                else begin
                    if (script_action == 21) then begin
                        call look_at_p_proc();
                    end
                    else begin
                        if (script_action == 4) then begin
                            call pickup_p_proc();
                        end
                        else begin
                            if (script_action == 11) then begin
                                call talk_p_proc();
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure critter_p_proc
begin
    if (local_var(5)) then begin
        if (tile_distance_objs(self_obj, dude_obj) < 8) then begin
            call flee_dude();
        end
        else begin
            if (tile_distance(tile_num(dude_obj), home_tile) > 4) then begin
                animate_move_obj_to_tile(self_obj, home_tile, 0);
            end
        end
    end
    else begin
        if (tile_num(self_obj) != home_tile) then begin
            animate_move_obj_to_tile(self_obj, home_tile, 0);
        end
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(4, 1);
        set_local_var(5, 1);
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
            set_global_var(156, 1);
            set_global_var(157, 0);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
            set_global_var(157, 1);
            set_global_var(156, 0);
        end
        set_global_var(159, global_var(159) + 1);
        if ((global_var(159) % 2) == 0) then begin
            set_global_var(155, global_var(155) - 1);
        end
    end
    if (source_obj == dude_obj) then begin
        set_global_var(261, 1);
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(184, 136));
end

procedure pickup_p_proc
begin
    float_msg(self_obj, message_str(184, 160), 0);
    set_local_var(5, 1);
end

procedure talk_p_proc
begin
    if (not(local_var(4))) then begin
        call get_reaction();
        start_gdialog(184, self_obj, 4, -1, -1);
        gsay_start;
        player_hits := get_critter_stat(dude_obj, 35);
        player_max_hits := get_critter_stat(dude_obj, 7);
        if ((local_var(5) == 1) or (global_var(261) == 1)) then begin
            call Medic00();
        end
        else begin
            damage := player_max_hits - player_hits;
            if (damage > 7) then begin
                call Medic03();
            end
            else begin
                if (global_var(101) == 2) then begin
                    call Medic24();
                end
                else begin
                    call Medic04();
                end
            end
        end
        gsay_end;
        end_dialogue;
    end
    else begin
        display_msg(message_str(184, 159));
    end
end

procedure Medic00
begin
    gsay_reply(184, 100);
    giq_option(4, 184, 101, Medic01, -10);
    giq_option(-3, 184, 102, Medic02, -10);
end

procedure Medic01
begin
    set_local_var(4, 1);
    gsay_message(184, 103, -10);
end

procedure Medic02
begin
    set_local_var(4, 1);
    gsay_message(184, 104, -10);
end

procedure Medic03
begin
    gsay_message(184, 105, 0);
    call Medic16();
end

procedure Medic04
begin
    gsay_reply(184, message_str(184, 106) + proto_data(obj_pid(dude_obj), 1) + message_str(184, 107));
    giq_option(4, 184, 108, Medic06, 0);
    giq_option(4, 184, 109, Medic04a, 0);
    giq_option(-3, 184, 110, Medic05, 0);
end

procedure Medic04a
begin
    if (damage > 3) then begin
        call Medic14();
    end
    else begin
        call Medic13();
    end
end

procedure Medic05
begin
    gsay_message(184, 111, 0);
    call pushdrugs();
end

procedure Medic06
begin
    gsay_message(184, 112, 0);
end

procedure Medic07
begin
    gsay_reply(184, 113);
    giq_option(4, 184, 114, Medic04a, 0);
    giq_option(4, 184, 115, Medic08, 0);
    giq_option(4, 184, 116, Medic11, 0);
    giq_option(-3, 184, 117, Medic12, 0);
    giq_option(-3, 184, 118, Medic15, 0);
end

procedure Medic08
begin
    gsay_reply(184, 119);
    giq_option(4, 184, 120, medicend, 0);
    giq_option(6, 184, 121, Medic08a, 0);
end

procedure Medic08a
begin
    if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
        call Medic10();
    end
    else begin
        call Medic09();
    end
end

procedure Medic09
begin
    gsay_message(184, 122, 0);
end

procedure Medic10
begin
    gsay_reply(184, 123);
    giq_option(4, 184, 124, pushdrugs, 0);
end

procedure Medic11
begin
    gsay_message(184, 125, 0);
end

procedure Medic12
begin
    gsay_reply(184, 126);
    call Medic04a();
end

procedure Medic13
begin
    gsay_message(184, 127, 0);
end

procedure Medic14
begin
    gsay_message(184, 128, 0);
    call Medic16();
end

procedure Medic15
begin
    gsay_message(184, 129, 0);
end

procedure Medic16
begin
    gsay_reply(184, 130);
    call Medic17();
end

procedure Medic17
begin
    gfade_out(600);
    game_time_advance(game_ticks(damage * 10));
    critter_heal(dude_obj, damage);
    gfade_in(600);
    gsay_message(184, 131, 0);
    if (get_critter_stat(dude_obj, 37) > 30) then begin
        call Medic18();
    end
end

procedure Medic18
begin
    removal := 70 + random(1, 6) + random(1, 6) + random(1, 6);
    rads := get_critter_stat(dude_obj, 37);
    rndx := rads * 20;
    if (rads > 400) then begin
        intensity := message_str(184, 132);
    end
    else begin
        if (rads > 200) then begin
            intensity := message_str(184, 133);
        end
        else begin
            if (rads > 100) then begin
                intensity := message_str(184, 134);
            end
            else begin
                if (rads > 30) then begin
                    intensity := message_str(184, 135);
                end
            end
        end
    end
    gsay_reply(184, intensity);
    giq_option(4, 184, 138, Medic19, 0);
    giq_option(4, 184, 139, Medic22, 0);
    giq_option(4, 184, 140, Medic20, 0);
    giq_option(6, 184, 141, Medic21, 0);
    giq_option(-3, 184, 142, Medic19, 0);
    giq_option(-3, 184, 143, Medic22, 0);
end

procedure Medic19
begin
    gsay_message(184, 144, 0);
end

procedure Medic20
begin
    gsay_reply(184, message_str(184, 145) + rndx + message_str(184, 146));
    giq_option(4, 184, 147, Medic19, 0);
    giq_option(4, 184, 148, Medic22, 0);
end

procedure Medic21
begin
    gsay_reply(184, message_str(184, 149) + rndx + message_str(184, 150) + removal + message_str(184, 151));
    giq_option(4, 184, 152, Medic19, 0);
    giq_option(4, 184, 153, Medic22, 0);
end

procedure Medic22
begin
    gsay_message(184, random(154, 155), 0);
    call Medic23();
    radiation_inc(dude_obj, -removal);
end

procedure Medic23
begin
    gfade_out(600);
    game_time_advance(game_ticks(rndx));
    gfade_in(600);
    gsay_message(184, 156, 0);
end

procedure Medic24
begin
    gsay_reply(184, 157);
    giq_option(4, 184, 109, Medic04a, 50);
    giq_option(4, 634, 103, medicend, 50);
    giq_option(-3, 184, 110, Medic05, 50);
end

procedure flee_dude
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    while (LVar1 < 5) do begin
        if (tile_distance(tile_num(dude_obj), tile_num_in_direction(tile_num(self_obj), LVar1, 3)) > LVar2) then begin
            LVar0 := tile_num_in_direction(tile_num(self_obj), LVar1, 3);
            LVar2 := tile_distance(tile_num(dude_obj), LVar0);
        end
        LVar1 := LVar1 + 1;
    end
    animate_move_obj_to_tile(self_obj, LVar0, 1);
end

procedure pushdrugs
begin
    variable LVar0 := 0;
    LVar0 := create_object_sid(40, 0, 0, -1);
    add_obj_to_inven(dude_obj, LVar0);
end

procedure medicend
begin
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, 3)) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
        if (has_trait(0, dude_obj, 39)) then begin
            if (global_var(155) > 0) then begin
                set_local_var(0, local_var(0) + global_var(155));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(155));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(155));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(155));
            end
        end
        if (global_var(158) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(634, random(100, 105));
end

