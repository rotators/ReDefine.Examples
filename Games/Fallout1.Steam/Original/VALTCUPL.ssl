procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure ValtCupl00;
procedure ValtCupl00a;
procedure ValtCupl01;
procedure ValtCupl02;
procedure ValtCupl03;
procedure ValtCupl04;
procedure ValtCupl05;
procedure ValtCupl06;
procedure ValtCupl07;
procedure ValtCuplEnd;

variable rndx;
variable initialized;
variable hostile;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure start
begin
    if (not(initialized)) then begin
        critter_add_trait(self_obj, 1, 6, 1);
        initialized := 1;
    end
    else begin
        if (script_action == 12) then begin
            call critter_p_proc();
        end
        else begin
            if (script_action == 18) then begin
                call destroy_p_proc();
            end
            else begin
                if (script_action == 21) then begin
                    call look_at_p_proc();
                end
                else begin
                    if (script_action == 4) then begin
                        call pickup_p_proc();
                    end
                    else begin
                        if (script_action == 11) then begin
                            call talk_p_proc();
                        end
                    end
                end
            end
        end
    end
end

procedure critter_p_proc
begin
    if (hostile) then begin
        hostile := 0;
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
            set_global_var(156, 1);
            set_global_var(157, 0);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
            set_global_var(157, 1);
            set_global_var(156, 0);
        end
        set_global_var(159, global_var(159) + 1);
        if ((global_var(159) % 2) == 0) then begin
            set_global_var(155, global_var(155) - 1);
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(209, 100));
end

procedure pickup_p_proc
begin
    hostile := 1;
end

procedure talk_p_proc
begin
    call get_reaction();
    start_gdialog(-1, 209, self_obj, -1, -1);
    gsay_start;
    if (local_var(4)) then begin
        if (local_var(1) < 2) then begin
            call ValtCupl07();
        end
        else begin
            call ValtCupl06();
        end
    end
    else begin
        call ValtCupl00();
    end
    gsay_end;
    end_dialogue;
end

procedure ValtCupl00
begin
    set_local_var(4, 1);
    gsay_reply(209, 101);
    giq_option(4, 209, 102, ValtCupl02, 50);
    giq_option(4, 209, 103, ValtCupl03, 50);
    giq_option(5, 209, 104, ValtCupl00a, 50);
    giq_option(-3, 209, 105, ValtCupl01, 50);
end

procedure ValtCupl00a
begin
    if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
        call ValtCupl04();
    end
    else begin
        call ValtCupl01();
    end
end

procedure ValtCupl01
begin
    call BigDownReact();
    gsay_message(209, 106, 51);
end

procedure ValtCupl02
begin
    gsay_reply(209, 107);
    giq_option(4, 209, 108, ValtCupl01, 50);
    giq_option(4, 209, 109, ValtCupl03, 50);
end

procedure ValtCupl03
begin
    call BigUpReact();
    gsay_message(209, 110, 49);
end

procedure ValtCupl04
begin
    gsay_reply(209, 111);
    giq_option(5, 209, 112, ValtCupl03, 50);
    giq_option(5, 209, 113, ValtCupl05, 50);
end

procedure ValtCupl05
begin
    gsay_message(209, 114, 50);
end

procedure ValtCupl06
begin
    gsay_message(209, 115, 50);
end

procedure ValtCupl07
begin
    gsay_message(209, 116, 50);
end

procedure ValtCuplEnd
begin
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, 3)) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
        if (has_trait(0, dude_obj, 39)) then begin
            if (global_var(155) > 0) then begin
                set_local_var(0, local_var(0) + global_var(155));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(155));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(155));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(155));
            end
        end
        if (global_var(158) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(634, random(100, 105));
end

