procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure map_update_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure Fire00;
procedure Fire01;
procedure Fire02;
procedure Fire03;
procedure Fire04;
procedure Fire05;
procedure Fire06;
procedure Fire07;
procedure Fire08;
procedure Fire09;
procedure Fire10;
procedure Fire11;
procedure Fire12;
procedure Fire13;
procedure Fire14;
procedure Fire15;
procedure Fire16;
procedure Fire17;
procedure Fire18;
procedure Fire19;
procedure Fire20;
procedure Fire21;
procedure FireCombat;
procedure FireEnd;
procedure follow_player;
procedure show_true_name;
procedure show_false_name;

variable hostile;
variable initialized;
variable prev_tile := 7000;
variable dest_tile := 7000;
variable name;

procedure timed_event_p_proc;


procedure start
begin
    if (script_action == 12) then begin
        call critter_p_proc();
    end
    else begin
        if (script_action == 18) then begin
            call destroy_p_proc();
        end
        else begin
            if (script_action == 21) then begin
                call look_at_p_proc();
            end
            else begin
                if (script_action == 23) then begin
                    call map_update_p_proc();
                end
                else begin
                    if (script_action == 4) then begin
                        call pickup_p_proc();
                    end
                    else begin
                        if (script_action == 11) then begin
                            call talk_p_proc();
                        end
                    end
                end
            end
        end
    end
end

procedure critter_p_proc
begin
    if (hostile) then begin
        hostile := 0;
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
end

procedure destroy_p_proc
begin
    set_global_var(136, global_var(136) - 1);
    set_global_var(131, 0);
    if (source_obj == dude_obj) then begin
        set_global_var(159, global_var(159) + 1);
        if ((global_var(159) % 7) == 0) then begin
            set_global_var(155, global_var(155) - 1);
        end
    end
end

procedure look_at_p_proc
begin
    if ((global_var(135) == 2) or (get_critter_stat(dude_obj, 6) > 6)) then begin
        call show_true_name();
    end
    else begin
        if (get_critter_stat(dude_obj, 6) < 4) then begin
            call show_false_name();
        end
        else begin
            if (get_critter_stat(dude_obj, 4) < 5) then begin
                call show_false_name();
            end
            else begin
                if (random(0, 1)) then begin
                    call show_false_name();
                end
                else begin
                    call show_true_name();
                end
            end
        end
    end
end

procedure map_update_p_proc
begin
    if (not(initialized)) then begin
        critter_add_trait(self_obj, 1, 5, 27);
        if (cur_map_index == 44) then begin
            critter_add_trait(self_obj, 1, 6, 47);
        end
        else begin
            if ((cur_map_index == 17) or (cur_map_index == 18)) then begin
                if (global_var(131) == 1) then begin
                    set_obj_visibility(self_obj, 0);
                    critter_add_trait(self_obj, 1, 6, 0);
                    add_timer_event(self_obj, game_ticks(1), 1);
                end
                else begin
                    set_obj_visibility(self_obj, 1);
                end
            end
        end
        initialized := 1;
    end
    if ((elevation(self_obj) != elevation(dude_obj)) and (global_var(131) == 1)) then begin
        move_to(self_obj, tile_num_in_direction(tile_num(dude_obj), random(4, 5), 1), elevation(dude_obj));
    end
end

procedure pickup_p_proc
begin
    hostile := 1;
end

procedure talk_p_proc
begin
    start_gdialog(280, self_obj, 4, -1, -1);
    gsay_start;
    set_local_var(4, 1);
    if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
        call Fire18();
    end
    else begin
        if (global_var(135) == 2) then begin
            call Fire21();
        end
        else begin
            if (global_var(135) == 1) then begin
                if (global_var(131) == 1) then begin
                    call Fire19();
                end
                else begin
                    call Fire20();
                end
            end
            else begin
                call Fire00();
            end
        end
    end
    gsay_end;
    end_dialogue;
end

procedure Fire00
begin
    gsay_reply(280, 111);
    giq_option(-3, 280, 112, Fire01, 50);
    giq_option(4, 280, 113, Fire07, 50);
    giq_option(6, 280, 114, Fire11, 50);
    giq_option(5, 280, 115, FireCombat, 50);
    giq_option(4, 280, 116, FireEnd, 50);
    giq_option(6, 280, 117, Fire17, 50);
end

procedure Fire01
begin
    gsay_reply(280, 118);
    giq_option(-3, 280, 119, Fire02, 50);
    giq_option(-3, 280, 120, Fire05, 50);
    giq_option(-3, 280, 121, Fire06, 50);
end

procedure Fire02
begin
    gsay_reply(280, 122);
    giq_option(-3, 280, 123, Fire03, 50);
    giq_option(-3, 280, 124, Fire04, 50);
end

procedure Fire03
begin
    gsay_message(280, 125, 50);
end

procedure Fire04
begin
    gsay_message(280, 126, 50);
    call FireCombat();
end

procedure Fire05
begin
    gsay_message(280, 127, 50);
    call FireCombat();
end

procedure Fire06
begin
    gsay_message(280, 128, 50);
end

procedure Fire07
begin
    gsay_reply(280, 129);
    giq_option(4, 280, 130, FireEnd, 50);
    giq_option(4, 280, 131, Fire08, 50);
    giq_option(5, 280, 132, Fire09, 50);
    giq_option(7, 280, 133, Fire10, 50);
end

procedure Fire08
begin
    gsay_message(280, 134, 50);
    call FireCombat();
end

procedure Fire09
begin
    gsay_reply(280, 135);
    giq_option(5, 280, 136, FireEnd, 50);
    giq_option(5, 280, 137, Fire08, 50);
end

procedure Fire10
begin
    gsay_message(280, 138, 50);
end

procedure Fire11
begin
    gsay_reply(280, 139);
    giq_option(6, 280, 140, Fire12, 50);
    giq_option(6, 280, 141, Fire15, 50);
    giq_option(6, 280, 142, Fire16, 50);
end

procedure Fire12
begin
    gsay_reply(280, 143);
    giq_option(6, 280, 144, Fire13, 50);
    giq_option(6, 280, 145, Fire14, 50);
end

procedure Fire13
begin
    gsay_message(280, 146, 50);
end

procedure Fire14
begin
    gsay_message(280, 147, 50);
    call FireCombat();
end

procedure Fire15
begin
    gsay_message(280, 148, 50);
end

procedure Fire16
begin
    gsay_message(280, 149, 50);
    call FireCombat();
end

procedure Fire17
begin
    gsay_message(280, 150, 50);
    call FireCombat();
end

procedure Fire18
begin
    gsay_message(280, 151, 50);
    add_timer_event(self_obj, game_ticks(10), 2);
end

procedure Fire19
begin
    gsay_message(280, 152, 50);
end

procedure Fire20
begin
    gsay_message(280, 153, 50);
end

procedure Fire21
begin
    gsay_message(280, 154, 50);
end

procedure FireCombat
begin
    hostile := 1;
end

procedure FireEnd
begin
end

procedure follow_player
begin
    variable LVar0 := 0;
    prev_tile := dest_tile;
    LVar0 := (has_trait(1, dude_obj, 10) + random(4, 5)) % 6;
    dest_tile := tile_num_in_direction(tile_num(dude_obj), LVar0, random(2, 3));
    if (tile_distance(prev_tile, tile_num(dude_obj)) > tile_distance(dest_tile, tile_num(dude_obj))) then begin
        if (tile_distance_objs(self_obj, dude_obj) > 8) then begin
            animate_move_obj_to_tile(self_obj, dest_tile, 1 bwor 16);
        end
        else begin
            animate_move_obj_to_tile(self_obj, dest_tile, 0 bwor 16);
        end
    end
    else begin
        if (tile_distance_objs(self_obj, dude_obj) > 8) then begin
            animate_move_obj_to_tile(self_obj, dest_tile, 1);
        end
        else begin
            animate_move_obj_to_tile(self_obj, dest_tile, 0);
        end
    end
    if (tile_distance_objs(self_obj, dude_obj) > 3) then begin
        add_timer_event(self_obj, game_ticks(1), 1);
    end
    else begin
        add_timer_event(self_obj, game_ticks(random(2, 5)), 1);
    end
end

procedure show_true_name
begin
    script_overrides;
    if (local_var(4)) then begin
        display_msg(message_str(280, 100));
    end
    else begin
        display_msg(message_str(280, 103));
    end
end

procedure show_false_name
begin
    script_overrides;
    display_msg(message_str(280, random(104, 110)));
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        call follow_player();
    end
    else begin
        if (obj_can_see_obj(self_obj, dude_obj)) then begin
            hostile := 1;
        end
    end
end

