procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure damage_p_proc;
procedure combat_p_proc;
procedure Daren01;
procedure Daren02;
procedure Daren03;
procedure Daren04;
procedure Daren05;
procedure Daren05a;
procedure Daren06;
procedure Daren07;
procedure DarenCombat;
procedure DarenEndLeon;

variable hostile;
variable Only_Once := 1;
variable visible := 1;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure start
begin
    if (Only_Once) then begin
        Only_Once := 0;
        if (global_var(111) == 5) then begin
            set_obj_visibility(self_obj, 1);
            visible := 0;
        end
        critter_add_trait(self_obj, 1, 6, 42);
        critter_add_trait(self_obj, 1, 5, 5);
    end
    if (script_action == 21) then begin
        call look_at_p_proc();
    end
    else begin
        if (script_action == 4) then begin
            call pickup_p_proc();
        end
        else begin
            if (script_action == 11) then begin
                call talk_p_proc();
            end
            else begin
                if (script_action == 12) then begin
                    call critter_p_proc();
                end
                else begin
                    if (script_action == 18) then begin
                        call destroy_p_proc();
                    end
                    else begin
                        if (script_action == 14) then begin
                            call damage_p_proc();
                        end
                        else begin
                            if (script_action == 13) then begin
                                call combat_p_proc();
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure combat
begin
    hostile := 1;
end

procedure critter_p_proc
begin
    if (visible == 0) then begin
        script_overrides;
    end
    else begin
        if (hostile) then begin
            hostile := 0;
            attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
        end
        if (map_var(5) == 1) then begin
            if ((obj_can_hear_obj(self_obj, dude_obj) == 1) or (obj_can_see_obj(self_obj, dude_obj) == 1)) then begin
                call combat();
            end
        end
        else begin
            if ((game_time_hour >= 600) and (game_time_hour < 700) or ((game_time_hour >= 700) and (game_time_hour < 1800))) then begin
                if (tile_num(self_obj) != 25125) then begin
                    animate_move_obj_to_tile(self_obj, 25125, 0);
                end
                else begin
                    if ((tile_num(dude_obj) == 24522) and (map_var(1) == 0)) then begin
                        dialogue_system_enter;
                    end
                end
            end
            else begin
                if (tile_num(self_obj) != 24708) then begin
                    animate_move_obj_to_tile(self_obj, 24708, 0);
                end
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        hostile := 1;
    end
end

procedure talk_p_proc
begin
    call get_reaction();
    if ((game_time_hour >= 1900) or (game_time_hour < 600)) then begin
        float_msg(self_obj, message_str(582, 127), 2);
        call combat();
    end
    else begin
        if (global_var(248) == 1) then begin
            float_msg(self_obj, message_str(582, 127), 2);
            call combat();
        end
        else begin
            if (local_var(4) == 0) then begin
                set_local_var(4, 1);
                start_gdialog(582, self_obj, 4, -1, -1);
                gsay_start;
                call Daren01();
                gsay_end;
                end_dialogue;
            end
            else begin
                float_msg(self_obj, message_str(582, 127), 2);
                call combat();
            end
        end
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
            set_global_var(156, 1);
            set_global_var(157, 0);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
            set_global_var(157, 1);
            set_global_var(156, 0);
        end
        set_global_var(159, global_var(159) + 1);
        if ((global_var(159) % 2) == 0) then begin
            set_global_var(155, global_var(155) - 1);
        end
    end
    set_map_var(0, map_var(0) + 1);
    if (map_var(0) > 1) then begin
        set_global_var(111, 2);
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(582, 100));
end

procedure damage_p_proc
begin
    set_map_var(5, 1);
    set_global_var(111, 5);
end

procedure combat_p_proc
begin
    critter_set_flee_state(self_obj, 1);
end

procedure Daren01
begin
    gsay_reply(582, 101);
    giq_option(4, 582, 102, Daren02, 50);
    if (global_var(111) == 1) then begin
        giq_option(4, 582, 103, Daren03, 50);
    end
    giq_option(4, 582, message_str(582, 104) + proto_data(obj_pid(dude_obj), 1) + message_str(582, 105), Daren04, 50);
    giq_option(4, 582, 106, Daren07, 50);
    giq_option(4, 582, 107, Daren06, 50);
    giq_option(-3, 582, 108, Daren06, 50);
end

procedure Daren02
begin
    gsay_reply(582, 109);
    if (global_var(111) == 1) then begin
        giq_option(4, 582, 110, DarenCombat, 51);
    end
    giq_option(4, 582, 111, Daren05, 50);
    giq_option(4, 582, 112, Daren06, 50);
    giq_option(4, 582, 113, Daren06, 50);
end

procedure Daren03
begin
    gsay_reply(582, 114);
    giq_option(4, 582, 115, Daren06, 50);
    giq_option(4, 582, 116, Daren07, 50);
    giq_option(4, 582, 117, DarenCombat, 51);
    giq_option(4, 582, 118, Daren06, 50);
end

procedure Daren04
begin
    gsay_message(582, message_str(582, 119) + proto_data(obj_pid(dude_obj), 1) + message_str(582, 120), 51);
    call DarenEndLeon();
end

procedure Daren05
begin
    gsay_reply(582, 121);
    giq_option(4, 582, 122, Daren07, 50);
    if (item_caps_total(dude_obj) >= 100) then begin
        giq_option(4, 582, 123, Daren05a, 50);
    end
    giq_option(4, 582, 124, Daren06, 50);
end

procedure Daren05a
begin
    variable LVar0 := 0;
    LVar0 := item_caps_adjust(dude_obj, -100);
    gsay_message(582, 125, 51);
    call DarenEndLeon();
end

procedure Daren06
begin
    gsay_message(582, 126, 51);
    call DarenEndLeon();
end

procedure Daren07
begin
    gsay_message(582, 127, 51);
    call DarenCombat();
end

procedure DarenCombat
begin
    call combat();
end

procedure DarenEndLeon
begin
    set_map_var(1, 1);
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, 3)) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
        if (has_trait(0, dude_obj, 39)) then begin
            if (global_var(155) > 0) then begin
                set_local_var(0, local_var(0) + global_var(155));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(155));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(155));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(155));
            end
        end
        if (global_var(158) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(634, random(100, 105));
end

