procedure Start;
procedure look_at_p_proc;
procedure description_p_proc;
procedure talk_p_proc;
procedure critter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure pickup_p_proc;
procedure DialogWeapon;
procedure DialogFirstTime;
procedure DialogSubsequent;
procedure DialogExit;
procedure DialogMain1;
procedure DialogMain2;
procedure DialogMain3;
procedure DialogMain4;
procedure DialogMain5;
procedure DialogMain6;

import variable RegGuard1;
import variable RegGuard2;

variable Initialize := 1;
variable Hostile;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure Start
begin
    variable LVar0 := 0;
    if (Initialize) then begin
        if (obj_is_carrying_obj_pid(self_obj, 41) == 0) then begin
            item_caps_adjust(self_obj, random(2, 20));
        end
        critter_add_trait(self_obj, 1, 6, 89);
        critter_add_trait(self_obj, 1, 5, 29);
        if (local_var(6) == 0) then begin
            set_map_var(1, map_var(1) + 1);
            set_local_var(6, 1);
        end
        if (global_var(613) == 9103) then begin
            LVar0 := global_var(268);
            if (LVar0 == 0) then begin
                RegGuard1 := self_obj;
            end
            else begin
                if (LVar0 == 1) then begin
                    RegGuard2 := self_obj;
                end
            end
            LVar0 := LVar0 + 1;
            set_global_var(268, LVar0);
        end
        else begin
            RegGuard1 := 0;
            RegGuard2 := 0;
        end
        Initialize := 0;
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(252, 100));
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(252, 100));
end

procedure talk_p_proc
begin
    if ((global_var(251) == 1) or (global_var(616) == 1) or (global_var(613) == 9103)) then begin
        float_msg(self_obj, message_str(669, random(100, 105)), 2);
    end
    else begin
        call get_reaction();
        start_gdialog(252, self_obj, -1, -1, -1);
        gsay_start;
        if ((obj_item_subtype(critter_inven_obj(dude_obj, 1)) == 3) or (obj_item_subtype(critter_inven_obj(dude_obj, 2)) == 3)) then begin
            call DialogWeapon();
        end
        else begin
            if (local_var(4) == 0) then begin
                set_local_var(4, 1);
                call DialogFirstTime();
            end
            else begin
                call DialogSubsequent();
            end
        end
        gsay_end;
        end_dialogue;
    end
end

procedure critter_p_proc
begin
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((global_var(613) == 9103) and (local_var(5) == 0)) then begin
            attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
            set_global_var(616, 1);
        end
        else begin
            if ((global_var(251) == 1) or (global_var(616) == 1)) then begin
                attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
            end
            else begin
                if (global_var(613) != 9103) then begin
                    if (map_var(0) == 0) then begin
                        set_map_var(0, 1);
                        dialogue_system_enter;
                    end
                end
            end
        end
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(616, 1);
    end
end

procedure destroy_p_proc
begin
    set_map_var(1, map_var(1) - 1);
    if (source_obj == dude_obj) then begin
        set_global_var(616, 1);
        if (source_obj == dude_obj) then begin
            if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
                set_global_var(156, 1);
                set_global_var(157, 0);
            end
            if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
                set_global_var(157, 1);
                set_global_var(156, 0);
            end
            set_global_var(160, global_var(160) + 1);
            if ((global_var(160) % 6) == 0) then begin
                set_global_var(155, global_var(155) + 1);
            end
        end
    end
    if (map_var(1) == 0) then begin
        terminate_combat;
    end
end

procedure pickup_p_proc
begin
    set_global_var(616, 1);
end

procedure DialogWeapon
begin
    gsay_message(252, 131, 50);
end

procedure DialogFirstTime
begin
    gsay_reply(252, 103);
    giq_option(-3, 252, 106, DialogMain1, 50);
    giq_option(4, 252, 104, DialogMain1, 50);
    giq_option(4, 252, 105, DialogMain2, 50);
end

procedure DialogSubsequent
begin
    gsay_reply(252, 111);
    giq_option(-3, 252, 106, DialogMain1, 50);
    giq_option(4, 252, 104, DialogMain1, 50);
    giq_option(4, 252, 105, DialogMain2, 50);
    giq_option(4, 252, 114, DialogExit, 50);
end

procedure DialogExit
begin
end

procedure DialogMain1
begin
    if (global_var(128) == 0) then begin
        gsay_message(252, 107, 50);
    end
    else begin
        gsay_message(252, 110, 50);
    end
end

procedure DialogMain2
begin
    if (local_var(1) < 2) then begin
        gsay_message(252, 116, 50);
    end
    else begin
        gsay_reply(252, 117);
        giq_option(-3, 252, 106, DialogExit, 50);
        giq_option(4, 252, 118, DialogMain3, 50);
        giq_option(4, 252, 119, DialogMain4, 50);
        giq_option(5, 252, 120, DialogMain5, 50);
        giq_option(6, 252, 121, DialogMain6, 50);
        giq_option(4, 252, 114, DialogExit, 50);
    end
end

procedure DialogMain3
begin
    gsay_message(252, 123, 50);
    call DialogMain2();
end

procedure DialogMain4
begin
    gsay_message(252, 124, 50);
    call DialogMain2();
end

procedure DialogMain5
begin
    if (global_var(128) == 0) then begin
        gsay_message(252, 125, 50);
    end
    else begin
        if (global_var(128) == 1) then begin
            gsay_message(252, 126, 50);
        end
        else begin
            gsay_message(252, 127, 50);
        end
    end
end

procedure DialogMain6
begin
    gsay_message(252, 128, 50);
    gsay_message(252, 129, 50);
    call DialogMain2();
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, 3)) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
        if (has_trait(0, dude_obj, 39)) then begin
            if (global_var(155) > 0) then begin
                set_local_var(0, local_var(0) + global_var(155));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(155));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(155));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(155));
            end
        end
        if (global_var(158) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(634, random(100, 105));
end

