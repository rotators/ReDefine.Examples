procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure zamin;
procedure goto00;
procedure goto01;
procedure goto02;
procedure goto03;

import variable patient;
import variable lets_go;

variable my_tile;
variable lesson_ptr;
variable hostile;
variable Only_Once := 1;
variable DISGUISED;
variable ARMED;
variable PICK;


procedure start
begin
    if (Only_Once) then begin
        Only_Once := 0;
        critter_add_trait(self_obj, 1, 6, 34);
        critter_add_trait(self_obj, 1, 5, 48);
    end
    if (script_action == 21) then begin
        call look_at_p_proc();
    end
    else begin
        if (script_action == 4) then begin
            call pickup_p_proc();
        end
        else begin
            if (script_action == 11) then begin
                call talk_p_proc();
            end
            else begin
                if (script_action == 22) then begin
                    if (hostile < 1) then begin
                        lesson_ptr := lesson_ptr + 1;
                        set_local_var(1, lesson_ptr);
                        call goto00();
                    end
                end
                else begin
                    if (script_action == 12) then begin
                        call critter_p_proc();
                    end
                    else begin
                        if (script_action == 18) then begin
                            call destroy_p_proc();
                        end
                    end
                end
            end
        end
    end
end

procedure combat
begin
    hostile := 1;
end

procedure critter_p_proc
begin
    if (hostile) then begin
        hostile := 0;
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
    my_tile := tile_num(self_obj);
    if (my_tile == 12098) then begin
        move_to(self_obj, 7000, 0);
    end
    else begin
        if (tile_distance(my_tile, tile_num(dude_obj)) < 12) then begin
            if (local_var(2) != 1) then begin
                set_local_var(2, 1);
                lesson_ptr := 0;
                add_timer_event(self_obj, game_ticks(1), 0);
            end
        end
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        call zamin();
        if ((ARMED == 1) or (DISGUISED == 0)) then begin
            call combat();
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        hostile := 1;
    end
end

procedure talk_p_proc
begin
    call zamin();
    if ((ARMED == 1) or (DISGUISED == 0)) then begin
        call combat();
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
            set_global_var(156, 1);
            set_global_var(157, 0);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
            set_global_var(157, 1);
            set_global_var(156, 0);
        end
        set_global_var(160, global_var(160) + 1);
        if ((global_var(160) % 6) == 0) then begin
            set_global_var(155, global_var(155) + 1);
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
end

procedure zamin
begin
    DISGUISED := 0;
    ARMED := 0;
    if ((obj_item_subtype(critter_inven_obj(dude_obj, 1)) == 3) or (obj_item_subtype(critter_inven_obj(dude_obj, 2)) == 3)) then begin
        ARMED := 1;
    end
    if (obj_pid(critter_inven_obj(dude_obj, 0)) == 113) then begin
        if (metarule(16, 0) > 1) then begin
            DISGUISED := 0;
        end
        else begin
            DISGUISED := 1;
        end
    end
end

procedure goto00
begin
    PICK := lesson_ptr;
    if (PICK == 1) then begin
        float_msg(self_obj, message_str(694, 101), 2);
    end
    else begin
        if (PICK == 2) then begin
            float_msg(patient, message_str(694, 102), 8);
        end
        else begin
            if (PICK == 3) then begin
                float_msg(self_obj, message_str(694, 103), 2);
            end
            else begin
                if (PICK == 4) then begin
                    call goto01();
                end
                else begin
                    if (PICK == 5) then begin
                        call goto02();
                    end
                    else begin
                        if (PICK == 6) then begin
                            float_msg(patient, message_str(694, 108), 8);
                        end
                        else begin
                            if (PICK == 7) then begin
                                float_msg(self_obj, message_str(694, 109), 2);
                            end
                            else begin
                                if (PICK == 8) then begin
                                    float_msg(patient, message_str(694, 110), 8);
                                end
                                else begin
                                    if (PICK == 9) then begin
                                        call goto03();
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    add_timer_event(self_obj, game_ticks(3), 1);
end

procedure goto01
begin
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        float_msg(patient, message_str(694, 104), 8);
    end
    else begin
        float_msg(patient, message_str(694, 105), 8);
    end
end

procedure goto02
begin
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        float_msg(self_obj, message_str(694, 106), 2);
    end
    else begin
        float_msg(self_obj, message_str(694, 107), 2);
    end
end

procedure goto03
begin
    lets_go := 1;
    animate_move_obj_to_tile(self_obj, 12098, 0);
end

