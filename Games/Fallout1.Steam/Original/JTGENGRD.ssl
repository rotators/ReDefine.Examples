/*******************************************************
*      Some unreferenced imported varables found.      *
*      Because of it it is impossible to specify       *
*      the real names of global variables.             *
*******************************************************/

variable GVar0 := 7000;
variable GVar1;
variable GVar2;
variable GVar3;
variable GVar4;
variable GVar5;
variable GVar6;

procedure start;
procedure critter_p_proc;
procedure description_p_proc;
procedure destroy_p_proc;
procedure map_enter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;
procedure damage_p_proc;
procedure JTGenGrd00;
procedure JTGenGrd00a;
procedure JTGenGrd00b;
procedure JTGenGrd01;
procedure JTGenGrd01a;
procedure JTGenGrd02;
procedure JTGenGrd02a;
procedure JTGenGrd03;
procedure JTGenGrd04;
procedure JTGenGrd05;
procedure JTGenGrd06;
procedure JTGenGrd06a;
procedure JTGenGrd07;
procedure JTGenGrd08;
procedure JTGenGrd08a;
procedure JTGenGrd09;
procedure JTGenGrd16;
procedure JTGenGrd18;
procedure JTGenGrd19;
procedure JTGenGrd20;
procedure JTGenGrdEnd;

/* ?import? variable dest_tile; */
/* ?import? variable hostile; */
/* ?import? variable initialized; */
/* ?import? variable sneaking; */
/* ?import? variable warned_about_picking; */
/* ?import? variable waypoint; */

import variable weapon_checked;

/* ?import? variable removal_ptr; */

import variable sneak_checked;
import variable times_caught_sneaking;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

/* ?import? variable exit_line; */


procedure start
begin
    if (script_action == 12) then begin
        call critter_p_proc();
    end
    else begin
        if (script_action == 3) then begin
            call description_p_proc();
        end
        else begin
            if (script_action == 18) then begin
                call destroy_p_proc();
            end
            else begin
                if (script_action == 15) then begin
                    call map_enter_p_proc();
                end
                else begin
                    if (script_action == 4) then begin
                        call pickup_p_proc();
                    end
                    else begin
                        if (script_action == 11) then begin
                            call talk_p_proc();
                        end
                        else begin
                            if (script_action == 22) then begin
                                call timed_event_p_proc();
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure critter_p_proc
begin
    if (GVar1) then begin
        GVar1 := 0;
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
    else begin
        if ((cur_map_index == 12) or (cur_map_index == 10)) then begin
            if (tile_num(self_obj) != local_var(5)) then begin
                animate_move_obj_to_tile(self_obj, local_var(5), 0);
            end
            if (obj_can_see_obj(self_obj, dude_obj) and (tile_distance_objs(self_obj, dude_obj) < 12)) then begin
                if (global_var(247) == 1) then begin
                    float_msg(self_obj, message_str(37, 138), 2);
                    GVar1 := 1;
                end
                else begin
                    if ((obj_item_subtype(critter_inven_obj(dude_obj, 1)) == 3) or (obj_item_subtype(critter_inven_obj(dude_obj, 2)) == 3) and (local_var(4) == 0) and (map_var(2) == 0) and (global_var(36) == 0) and (global_var(104) == 0) and (cur_map_index == 12)) then begin
                        if (not(weapon_checked)) then begin
                            weapon_checked := 1;
                            add_timer_event(self_obj, game_ticks(10), 1);
                            dialogue_system_enter;
                        end
                    end
                    else begin
                        if (using_skill(dude_obj, 8) and not(sneak_checked)) then begin
                            GVar3 := 1;
                            sneak_checked := 1;
                            add_timer_event(self_obj, game_ticks(5), 2);
                            dialogue_system_enter;
                        end
                        else begin
                            if (cur_map_index == 12) then begin
                                if ((map_var(8) == 1) and (tile_distance_objs(self_obj, dude_obj) < 8)) then begin
                                    set_map_var(8, 0);
                                    float_msg(self_obj, message_str(37, 136), 2);
                                    if (GVar4) then begin
                                        GVar1 := 1;
                                    end
                                    else begin
                                        GVar4 := 1;
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        else begin
            if (cur_map_index == 11) then begin
                if (map_var(2) == 2) then begin
                    if (GVar5 != 0) then begin
                        if (tile_distance(tile_num(self_obj), GVar0) > 3) then begin
                            animate_move_obj_to_tile(self_obj, GVar0, 0);
                        end
                        else begin
                            if (GVar5 == 1) then begin
                                GVar0 := 20284;
                                GVar5 := 2;
                            end
                            else begin
                                if (GVar5 == 2) then begin
                                    GVar0 := 23465;
                                end
                                if ((tile_distance(tile_num(self_obj), GVar0) > 3) and (GVar5 != 0)) then begin
                                    animate_move_obj_to_tile(self_obj, GVar0, 0);
                                end
                                else begin
                                    if (GVar5 == 2) then begin
                                        GVar0 := 26855;
                                        GVar5 := 3;
                                    end
                                    else begin
                                        if (GVar5 == 3) then begin
                                            destroy_object(self_obj);
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    if (global_var(247) == 1) then begin
        if (obj_can_see_obj(self_obj, dude_obj)) then begin
            attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
        end
    end
end

procedure description_p_proc
begin
    display_msg(message_str(37, 100));
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(247, 1);
        if (source_obj == dude_obj) then begin
            if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
                set_global_var(156, 1);
                set_global_var(157, 0);
            end
            if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
                set_global_var(157, 1);
                set_global_var(156, 0);
            end
            set_global_var(159, global_var(159) + 1);
            if ((global_var(159) % 2) == 0) then begin
                set_global_var(155, global_var(155) - 1);
            end
        end
        critter_add_trait(self_obj, 1, 6, 11);
    end
    if (cur_map_index == 11) then begin
        if (map_var(2) == 1) then begin
            set_map_var(1, map_var(1) - 1);
        end
    end
end

procedure map_enter_p_proc
begin
    if (cur_map_index == 12) then begin
        critter_add_trait(self_obj, 1, 6, 12);
    end
    else begin
        if (cur_map_index == 10) then begin
            critter_add_trait(self_obj, 1, 6, 11);
        end
        else begin
            if (cur_map_index == 11) then begin
                critter_add_trait(self_obj, 1, 6, 0);
                GVar0 := 23666;
                GVar5 := 1;
                if (map_var(2) == 0) then begin
                    destroy_object(self_obj);
                end
            end
        end
    end
    if (local_var(5) == 0) then begin
        set_local_var(5, tile_num(self_obj));
    end
end

procedure pickup_p_proc
begin
    float_msg(self_obj, message_str(37, random(136, 138)), 2);
    GVar1 := 1;
end

procedure talk_p_proc
begin
    call get_reaction();
    if (GVar3 and (times_caught_sneaking >= 3)) then begin
        call JTGenGrd18();
    end
    else begin
        if (not(local_var(4)) and ((obj_item_subtype(critter_inven_obj(dude_obj, 1)) == 3) or (obj_item_subtype(critter_inven_obj(dude_obj, 2)) == 3)) or (GVar3 and (times_caught_sneaking < 3))) then begin
            start_gdialog(37, self_obj, 4, -1, -1);
            gsay_start;
            if ((obj_item_subtype(critter_inven_obj(dude_obj, 1)) == 3) or (obj_item_subtype(critter_inven_obj(dude_obj, 2)) == 3)) then begin
                call JTGenGrd00();
            end
            else begin
                if (GVar3) then begin
                    call JTGenGrd06();
                end
            end
            gsay_end;
            end_dialogue;
        end
        else begin
            if (global_var(158) > 2) then begin
                call JTGenGrd19();
            end
            else begin
                if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1)) or (local_var(1) == 1)) then begin
                    call JTGenGrd09();
                end
                else begin
                    if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1)) or (local_var(1) == 3)) then begin
                        call JTGenGrd16();
                    end
                    else begin
                        call JTGenGrd20();
                    end
                end
            end
        end
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if (weapon_checked) then begin
            if ((obj_item_subtype(critter_inven_obj(dude_obj, 1)) == 3) or (obj_item_subtype(critter_inven_obj(dude_obj, 2)) == 3)) then begin
                float_msg(self_obj, message_str(37, 134), 0);
                add_timer_event(self_obj, game_ticks(5), 3);
            end
            else begin
                weapon_checked := 0;
            end
        end
    end
    else begin
        if (fixed_param == 2) then begin
            sneak_checked := 0;
        end
        else begin
            if (fixed_param == 3) then begin
                GVar1 := 1;
            end
            else begin
                if (fixed_param == 4) then begin
                    float_msg(self_obj, message_str(37, 139), 0);
                end
            end
        end
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(247, 1);
        critter_add_trait(self_obj, 1, 6, 11);
    end
end

procedure JTGenGrd00
begin
    call DownReact();
    gsay_reply(37, 110);
    giq_option(4, 37, 111, JTGenGrd01, 50);
    giq_option(4, 37, 112, JTGenGrd00a, 51);
    giq_option(4, 634, 105, JTGenGrdEnd, 50);
    giq_option(6, 37, 113, JTGenGrd00b, 49);
    giq_option(-3, 37, 114, JTGenGrd05, 50);
end

procedure JTGenGrd00a
begin
    call DownReact();
    call JTGenGrd02();
end

procedure JTGenGrd00b
begin
    call UpReact();
    call JTGenGrd04();
end

procedure JTGenGrd01
begin
    gsay_reply(37, 115);
    giq_option(4, 37, 116, JTGenGrd02, 50);
    giq_option(4, 37, 117, JTGenGrd01a, 50);
end

procedure JTGenGrd01a
begin
    if (is_success(roll_vs_skill(dude_obj, 14, -20))) then begin
        call JTGenGrd03();
    end
    else begin
        call JTGenGrd02();
    end
end

procedure JTGenGrd02
begin
    gsay_reply(37, 118);
    giq_option(4, 37, 119, JTGenGrdEnd, 50);
    giq_option(4, 37, 120, JTGenGrd02a, 51);
end

procedure JTGenGrd02a
begin
    GVar1 := 1;
end

procedure JTGenGrd03
begin
    set_local_var(4, 1);
    gsay_message(37, 121, 50);
end

procedure JTGenGrd04
begin
    gsay_message(37, 122, 50);
end

procedure JTGenGrd05
begin
    gsay_message(37, 123, 50);
end

procedure JTGenGrd06
begin
    times_caught_sneaking := times_caught_sneaking + 1;
    add_timer_event(self_obj, game_ticks(5), 2);
    gsay_reply(37, 124);
    giq_option(4, 37, 125, JTGenGrd07, 50);
    giq_option(5, 37, 126, JTGenGrd06a, 50);
    giq_option(-3, 37, 127, JTGenGrd07, 50);
end

procedure JTGenGrd06a
begin
    variable LVar0 := 0;
    LVar0 := -5 * times_caught_sneaking;
    if (is_success(roll_vs_skill(dude_obj, 14, LVar0))) then begin
        call JTGenGrd08();
    end
    else begin
        call JTGenGrd07();
    end
end

procedure JTGenGrd07
begin
    gsay_message(37, 128, 50);
end

procedure JTGenGrd08
begin
    gsay_reply(37, 130);
    giq_option(5, 37, 131, JTGenGrdEnd, 50);
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        giq_option(5, 37, 132, JTGenGrd08a, 50);
    end
    else begin
        giq_option(5, 37, 133, JTGenGrd08a, 50);
    end
end

procedure JTGenGrd08a
begin
    if (random(0, 1)) then begin
        call DownReact();
    end
    else begin
        call UpReact();
    end
end

procedure JTGenGrd09
begin
    float_msg(self_obj, message_str(37, random(101, 103)), 51);
end

procedure JTGenGrd16
begin
    float_msg(self_obj, message_str(37, random(104, 106)), 49);
end

procedure JTGenGrd18
begin
    float_msg(self_obj, message_str(37, 135), 2);
    add_timer_event(self_obj, game_ticks(5), 3);
end

procedure JTGenGrd19
begin
    display_msg(message_str(37, 129));
    GVar1 := 1;
end

procedure JTGenGrd20
begin
    float_msg(self_obj, message_str(37, random(107, 109)), 0);
end

procedure JTGenGrdEnd
begin
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, 3)) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
        if (has_trait(0, dude_obj, 39)) then begin
            if (global_var(155) > 0) then begin
                set_local_var(0, local_var(0) + global_var(155));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(155));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(155));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(155));
            end
        end
        if (global_var(158) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    GVar6 := message_str(634, random(100, 105));
end

