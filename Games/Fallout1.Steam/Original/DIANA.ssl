procedure start;
procedure do_dialogue;
procedure Diana00;
procedure Diana01;
procedure Diana02;
procedure Diana03;
procedure Diana04;
procedure Diana05;
procedure Diana10;
procedure Diana11;
procedure Diana12;
procedure Dianaend;
procedure combat;
procedure talk_p_proc;
procedure Critter_Action;
procedure damage_p_proc;

variable hostile;
variable only_once := 1;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure start
begin
    if (only_once) then begin
        only_once := 0;
        critter_add_trait(self_obj, 1, 6, 6);
        critter_add_trait(self_obj, 1, 5, 21);
    end
    if (script_action == 11) then begin
        call talk_p_proc();
    end
    else begin
        if (script_action == 21) then begin
            script_overrides;
            display_msg(message_str(142, 100));
        end
        else begin
            if (script_action == 4) then begin
                hostile := 1;
            end
            else begin
                if (script_action == 12) then begin
                    call Critter_Action();
                    if (hostile) then begin
                        hostile := 0;
                        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
                    end
                end
                else begin
                    if (script_action == 14) then begin
                        call damage_p_proc();
                    end
                    else begin
                        if (script_action == 18) then begin
                            if (source_obj == dude_obj) then begin
                                if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
                                    set_global_var(156, 1);
                                    set_global_var(157, 0);
                                end
                                if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
                                    set_global_var(157, 1);
                                    set_global_var(156, 0);
                                end
                                set_global_var(160, global_var(160) + 1);
                                if ((global_var(160) % 6) == 0) then begin
                                    set_global_var(155, global_var(155) + 1);
                                end
                            end
                            set_global_var(254, 1);
                            set_global_var(611, 0);
                            set_global_var(115, global_var(115) - 1);
                        end
                    end
                end
            end
        end
    end
end

procedure do_dialogue
begin
    set_local_var(3, 1);
    call get_reaction();
    start_gdialog(142, self_obj, 4, -1, -1);
    gsay_start;
    if (local_var(4)) then begin
        call Diana10();
    end
    else begin
        if (global_var(611) == 1) then begin
            call Diana11();
        end
        else begin
            set_local_var(4, 1);
            call Diana00();
        end
    end
    gsay_end;
    end_dialogue;
end

procedure Diana00
begin
    gsay_reply(142, 101);
    if ((global_var(103) == 1) and (global_var(218) == 1)) then begin
        giq_option(4, 142, 102, Diana01, 50);
    end
    giq_option(4, 142, 103, Dianaend, 50);
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        giq_option(4, 142, 104, Diana02, 50);
    end
    giq_option(4, 142, 105, Diana04, 50);
    if (local_var(5) == 0) then begin
        giq_option(7, 142, 106, Diana05, 50);
    end
    giq_option(-3, 142, 107, Diana10, 50);
end

procedure Diana01
begin
    gsay_reply(142, 108);
    giq_option(4, 142, 109, Dianaend, 50);
    giq_option(4, 142, 110, Diana03, 50);
end

procedure Diana02
begin
    gsay_message(142, 111, 50);
end

procedure Diana03
begin
    gsay_message(142, 112, 50);
end

procedure Diana04
begin
    gsay_reply(142, 113);
    giq_option(4, 142, 114, Diana03, 50);
    if (local_var(5) == 0) then begin
        giq_option(7, 142, 115, Diana05, 50);
    end
end

procedure Diana05
begin
    gsay_reply(142, 116);
    set_local_var(5, 1);
    giq_option(4, 142, 117, Diana01, 50);
    giq_option(4, 142, 118, Diana03, 50);
end

procedure Diana10
begin
    gsay_message(142, 119, 50);
end

procedure Diana11
begin
    gsay_reply(142, 120);
    giq_option(4, 142, 104, Diana10, 50);
    giq_option(4, 142, 118, Diana12, 50);
    giq_option(-3, 142, 107, Diana10, 50);
end

procedure Diana12
begin
    gsay_message(142, 121, 50);
end

procedure Dianaend
begin
end

procedure combat
begin
    if (global_var(116) == 1) then begin
        critter_add_trait(self_obj, 1, 6, 87);
    end
    hostile := 1;
end

procedure talk_p_proc
begin
    if (global_var(116) == 1) then begin
        float_msg(self_obj, message_str(136, random(102, 106)), 8);
    end
    else begin
        call do_dialogue();
    end
end

procedure Critter_Action
begin
    variable LVar0 := 0;
    if (global_var(26) == 2) then begin
        set_global_var(254, 1);
    end
    else begin
        if (global_var(116)) then begin
            set_global_var(254, 0);
            if (tile_distance_objs(self_obj, dude_obj) < 3) then begin
                LVar0 := tile_num_in_direction(tile_num(self_obj), random(0, 5), 3);
                if (tile_distance(tile_num(self_obj), LVar0) > 2) then begin
                    if (random(0, 9) == 0) then begin
                        float_msg(self_obj, message_str(136, random(102, 106)), 8);
                    end
                    animate_move_obj_to_tile(self_obj, LVar0, 0);
                end
            end
        end
        else begin
            if (global_var(213)) then begin
                set_global_var(254, 1);
            end
            if (obj_can_see_obj(self_obj, dude_obj)) then begin
                if (global_var(214)) then begin
                    set_global_var(254, 1);
                end
            end
            if (map_var(2) == 1) then begin
                set_global_var(254, 1);
            end
        end
    end
    if (global_var(254) and obj_can_see_obj(self_obj, dude_obj)) then begin
        hostile := 1;
    end
    if (tile_distance_objs(self_obj, dude_obj) > 12) then begin
        hostile := 0;
    end
end

procedure damage_p_proc
begin
    if (global_var(116) == 0) then begin
        set_global_var(254, 1);
    end
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, 3)) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
        if (has_trait(0, dude_obj, 39)) then begin
            if (global_var(155) > 0) then begin
                set_local_var(0, local_var(0) + global_var(155));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(155));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(155));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(155));
            end
        end
        if (global_var(158) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(634, random(100, 105));
end

