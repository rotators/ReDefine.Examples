procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure damage_p_proc;
procedure look_at_p_proc;
procedure Butch00a;
procedure Butch00;
procedure Butch01;
procedure Butch02;
procedure Butch03;
procedure Butch04;
procedure Butch05;
procedure Butch06;
procedure Butch08;
procedure Butch09;
procedure Butch10;
procedure Butch11;
procedure Butch12;
procedure Butch12a;
procedure Butch13;
procedure Butch13a;
procedure Butch14;
procedure Butch15;
procedure Butch16;
procedure Butch17;
procedure Butch18;
procedure Butch19;
procedure Butch19a;
procedure Butch20;
procedure Butch21;
procedure Butch22;
procedure Butch23;
procedure Butch23a;
procedure Butch24;
procedure Butch25;
procedure Butch26;
procedure Butch27;
procedure Butch27a;
procedure Butch28;
procedure Butch29;
procedure Butch30;
procedure Butch30a;
procedure Butch31;
procedure Butch32;
procedure Butch33;
procedure Butch34;
procedure Butch35;
procedure Butch35a;
procedure Butch36;
procedure Butch37;
procedure Butch38;
procedure Butch39;
procedure Butch40;
procedure Butch41;
procedure Butch42;
procedure Butch43;
procedure Butch44;
procedure Butch45;
procedure Butch46;
procedure Butch47;
procedure Butch49;
procedure Butch50;
procedure Butch51;
procedure Butch51a;
procedure Butch52;
procedure Butch53;
procedure Butch53a;
procedure Butch54;
procedure Butch54a;
procedure Butch55;
procedure Butch56;
procedure Butch57;
procedure Butch58;
procedure Butch59;
procedure Butch60;
procedure Butch61;
procedure Butch62;
procedure Butch63;
procedure Butch64;
procedure Butch65;
procedure Butch66;
procedure Butch67;
procedure Butch68;
procedure Butch69;
procedure Butch70;
procedure Butch71;
procedure Butch72;
procedure Butch73;
procedure ButchX2;
procedure ButchX3;
procedure ButchEnd;
procedure ButchEndAccept;
procedure ButchEndTransport;

variable hostile;
variable Only_Once := 1;
variable TossOut;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure start
begin
    if (Only_Once) then begin
        Only_Once := 0;
        critter_add_trait(self_obj, 1, 6, 36);
        critter_add_trait(self_obj, 1, 5, 50);
    end
    if (script_action == 21) then begin
        call look_at_p_proc();
    end
    else begin
        if (script_action == 4) then begin
            call pickup_p_proc();
        end
        else begin
            if (script_action == 11) then begin
                call talk_p_proc();
            end
            else begin
                if (script_action == 12) then begin
                    call critter_p_proc();
                end
                else begin
                    if (script_action == 18) then begin
                        call destroy_p_proc();
                    end
                end
            end
        end
    end
end

procedure combat
begin
    hostile := 1;
end

procedure critter_p_proc
begin
    if (hostile) then begin
        hostile := 0;
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        hostile := 1;
    end
end

procedure talk_p_proc
begin
    call get_reaction();
    if (map_var(40) == 1) then begin
        float_msg(self_obj, message_str(39, 328), 2);
    end
    else begin
        if (map_var(41) == 2) then begin
            float_msg(self_obj, message_str(39, 325), 2);
        end
        else begin
            if (get_critter_stat(dude_obj, 4) < 4) then begin
                float_msg(dude_obj, message_str(39, 330), 3);
                float_msg(self_obj, message_str(39, 331), 2);
            end
            else begin
                if ((local_var(4) == 0) and (map_var(34) == 1)) then begin
                    set_local_var(4, 1);
                    start_gdialog(39, self_obj, 4, 8, 3);
                    gsay_start;
                    call Butch01();
                    gsay_end;
                    end_dialogue;
                end
                else begin
                    if ((local_var(4) == 0) and (map_var(34) == 0)) then begin
                        float_msg(self_obj, message_str(39, 324), 2);
                    end
                    else begin
                        if (map_var(41) == 3) then begin
                            start_gdialog(39, self_obj, 4, 8, 3);
                            gsay_start;
                            call Butch73();
                            gsay_end;
                            end_dialogue;
                        end
                        else begin
                            if ((local_var(5) == 1) or (map_var(41) == 4)) then begin
                                start_gdialog(39, self_obj, 4, 8, 3);
                                gsay_start;
                                call Butch60();
                                gsay_end;
                                end_dialogue;
                            end
                            else begin
                                if (map_var(56) == 1) then begin
                                    start_gdialog(39, self_obj, 4, 8, 3);
                                    gsay_start;
                                    call Butch59();
                                    gsay_end;
                                    end_dialogue;
                                end
                                else begin
                                    if (global_var(226) == 5) then begin
                                        start_gdialog(39, self_obj, 4, 8, 3);
                                        gsay_start;
                                        call Butch37();
                                        gsay_end;
                                        end_dialogue;
                                    end
                                    else begin
                                        start_gdialog(39, self_obj, 4, 8, 3);
                                        gsay_start;
                                        call Butch01();
                                        gsay_end;
                                        end_dialogue;
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    if (TossOut == 1) then begin
        TossOut := 0;
        call ButchEndTransport();
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
            set_global_var(156, 1);
            set_global_var(157, 0);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
            set_global_var(157, 1);
            set_global_var(156, 0);
        end
        set_global_var(159, global_var(159) + 1);
        if ((global_var(159) % 2) == 0) then begin
            set_global_var(155, global_var(155) - 1);
        end
    end
end

procedure damage_p_proc
begin
    variable LVar0 := 0;
    LVar0 := obj_pid(source_obj);
    if (party_member_obj(LVar0) != 0) then begin
        set_global_var(248, 1);
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(39, 100));
end

procedure Butch00a
begin
    if (local_var(1) >= 2) then begin
        call Butch34();
    end
    else begin
        call Butch36();
    end
end

procedure Butch00
begin
    giq_option(4, 39, 101, Butch23, 50);
    giq_option(4, 39, 102, Butch10, 50);
    giq_option(4, 39, 103, Butch00a, 50);
    giq_option(4, 39, 104, Butch27, 50);
    giq_option(4, 39, 105, ButchEnd, 50);
end

procedure Butch01
begin
    gsay_reply(39, 106);
    giq_option(4, 39, 107, Butch02, 50);
    giq_option(4, 39, 108, ButchEnd, 50);
end

procedure Butch02
begin
    gsay_reply(39, 109);
    giq_option(4, 39, 110, Butch03, 50);
    giq_option(4, 39, 111, Butch08, 50);
    giq_option(4, 39, 112, Butch08, 50);
end

procedure Butch03
begin
    call UpReactLevel();
    gsay_reply(39, 113);
    giq_option(4, 39, 114, Butch04, 50);
    giq_option(4, 39, 115, ButchEndAccept, 50);
end

procedure Butch04
begin
    gsay_reply(39, 116);
    giq_option(4, 39, 117, Butch05, 50);
    giq_option(4, 39, 118, Butch08, 50);
    giq_option(4, 39, 119, ButchEndAccept, 50);
end

procedure Butch05
begin
    gsay_reply(39, 120);
    giq_option(4, 39, 121, Butch06, 50);
    giq_option(4, 39, 122, ButchEndAccept, 50);
end

procedure Butch06
begin
    gsay_reply(39, message_str(39, 123) + message_str(39, 124));
    giq_option(4, 39, 125, Butch08, 50);
    giq_option(4, 39, 127, Butch05, 50);
    giq_option(4, 39, 128, Butch21, 51);
    giq_option(4, 39, 129, Butch11, 50);
end

procedure Butch08
begin
    gsay_reply(39, 133);
    giq_option(4, 39, 134, Butch09, 50);
    giq_option(4, 39, 135, Butch19, 51);
end

procedure Butch09
begin
    gsay_reply(39, 136);
    giq_option(4, 39, 137, Butch12, 50);
    giq_option(4, 39, 138, Butch16, 50);
    giq_option(4, 39, 139, Butch18, 50);
end

procedure Butch10
begin
    gsay_reply(39, 140);
    giq_option(4, 39, 141, Butch12, 50);
end

procedure Butch11
begin
    gsay_message(39, 142, 50);
end

procedure Butch12
begin
    gsay_reply(39, 143);
    giq_option(4, 39, 144, Butch12a, 50);
    giq_option(4, 39, 145, ButchEndAccept, 50);
end

procedure Butch12a
begin
    call Butch13();
end

procedure Butch13
begin
    set_map_var(8, 1);
    set_global_var(226, 1);
    gsay_reply(39, 146);
    giq_option(4, 39, 147, Butch14, 51);
    giq_option(4, 39, 148, Butch17, 50);
    giq_option(4, 39, 149, Butch13a, 50);
end

procedure Butch13a
begin
    set_map_var(33, 1);
    gsay_reply(39, 150);
    giq_option(4, 39, 151, Butch15, 51);
    giq_option(4, 39, 152, Butch16, 50);
    giq_option(4, 39, 153, Butch17, 50);
end

procedure Butch14
begin
    call DownReactLevel();
    set_map_var(33, 1);
    gsay_reply(39, 154);
    giq_option(4, 39, 155, Butch15, 51);
    giq_option(4, 39, 156, Butch16, 50);
    giq_option(4, 39, 157, Butch17, 50);
end

procedure Butch15
begin
    set_map_var(40, 1);
    set_map_var(35, 1);
    set_map_var(10, 0);
    TossOut := 1;
    gsay_message(39, 158, 50);
end

procedure Butch16
begin
    set_map_var(41, 1);
    set_global_var(106, 1);
    set_map_var(10, 1);
    gsay_message(39, 159, 50);
    call ButchX3();
end

procedure Butch17
begin
    gsay_reply(39, 160);
    call Butch00();
end

procedure Butch18
begin
    set_map_var(41, 2);
    set_global_var(106, 0);
    gsay_message(39, 161, 50);
end

procedure Butch19
begin
    gsay_reply(39, 162);
    giq_option(4, 39, 163, Butch15, 51);
    giq_option(4, 39, 164, Butch19a, 50);
end

procedure Butch19a
begin
    if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
        call Butch09();
    end
    else begin
        call Butch20();
    end
end

procedure Butch20
begin
    call DownReactLevel();
    gsay_reply(39, 165);
    giq_option(4, 39, 166, Butch16, 50);
    giq_option(4, 39, 167, Butch18, 50);
end

procedure Butch21
begin
    call DownReactLevel();
    gsay_reply(39, 168);
    giq_option(4, 39, 169, Butch15, 51);
    giq_option(4, 39, 170, Butch08, 50);
end

procedure Butch22
begin
    gsay_message(39, 171, 50);
end

procedure Butch23
begin
    gsay_reply(39, 172);
    giq_option(4, 39, 173, Butch23a, 50);
    giq_option(4, 39, 174, Butch23a, 50);
    giq_option(4, 39, 175, Butch17, 50);
end

procedure Butch23a
begin
    variable LVar0 := 0;
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        LVar0 := 0;
    end
    else begin
        LVar0 := 20;
    end
    if (is_success(roll_vs_skill(dude_obj, 14, LVar0))) then begin
        call Butch24();
    end
    else begin
        call Butch26();
    end
end

procedure Butch24
begin
    gsay_reply(39, 176);
    giq_option(4, 39, 177, Butch25, 50);
    call Butch00();
end

procedure Butch25
begin
    gsay_message(39, 179, 50);
    call Butch00();
end

procedure Butch26
begin
    gsay_reply(39, 180);
    giq_option(4, 39, 181, Butch24, 50);
    call Butch00();
end

procedure Butch27
begin
    gsay_reply(39, 183);
    giq_option(4, 39, 184, Butch28, 50);
    giq_option(4, 39, 185, Butch27a, 50);
end

procedure Butch27a
begin
    if (local_var(1) >= 2) then begin
        call Butch29();
    end
    else begin
        call Butch30();
    end
end

procedure Butch28
begin
    gsay_reply(39, 186);
    call Butch00();
end

procedure Butch29
begin
    gsay_reply(39, 187);
    giq_option(4, 39, 188, Butch32, 50);
    call Butch00();
end

procedure Butch30
begin
    gsay_reply(39, 190);
    giq_option(4, 39, 191, Butch30a, 51);
    call Butch00();
end

procedure Butch30a
begin
    if (local_var(1) >= 2) then begin
        call DownReactLevel();
        call Butch31();
    end
    else begin
        call Butch15();
    end
end

procedure Butch31
begin
    gsay_reply(39, 193);
    giq_option(4, 39, 194, Butch15, 51);
    giq_option(4, 39, 195, Butch17, 50);
end

procedure Butch32
begin
    gsay_reply(39, 196);
    call Butch00();
end

procedure Butch33
begin
    gsay_reply(39, 199);
    call Butch00();
end

procedure Butch34
begin
    if (global_var(71) == 0) then begin
        set_global_var(71, 1);
    end
    if (global_var(74) == 0) then begin
        set_global_var(74, 1);
    end
    if (global_var(75) == 0) then begin
        set_global_var(75, 1);
    end
    gsay_reply(39, 201);
    giq_option(4, 39, 202, Butch35, 50);
    call Butch00();
end

procedure Butch35
begin
    if (global_var(72) == 0) then begin
        set_global_var(72, 1);
    end
    gsay_reply(39, 204);
    giq_option(4, 39, 205, Butch35a, 50);
end

procedure Butch35a
begin
    gsay_reply(39, 206);
    call Butch00();
end

procedure Butch36
begin
    gsay_reply(39, 208);
    giq_option(4, 39, 209, Butch30a, 51);
    call Butch00();
end

procedure Butch37
begin
    gsay_reply(39, 211);
    if ((global_var(78) == 2) or (obj_is_carrying_obj_pid(dude_obj, 196) >= 1)) then begin
        giq_option(4, 39, 212, Butch38, 50);
    end
    else begin
        if (global_var(226) == 5) then begin
            giq_option(4, 39, 213, Butch53, 50);
        end
    end
    giq_option(4, 39, 214, ButchEnd, 50);
end

procedure Butch38
begin
    gsay_reply(39, 215);
    giq_option(4, 39, 216, Butch39, 50);
    giq_option(4, 39, 217, Butch51, 50);
end

procedure Butch39
begin
    set_map_var(42, 2);
    gsay_reply(39, 218);
    giq_option(4, 39, 219, Butch40, 50);
    giq_option(4, 39, 220, Butch46, 50);
end

procedure Butch40
begin
    gsay_reply(39, 221);
    giq_option(4, 39, 222, Butch41, 50);
    giq_option(4, 39, 223, Butch46, 50);
end

procedure Butch41
begin
    gsay_reply(39, 224);
    giq_option(4, 39, 225, Butch42, 50);
    if (global_var(78) == 2) then begin
        giq_option(4, 39, 226, Butch34, 50);
    end
end

procedure Butch42
begin
    set_map_var(41, 3);
    set_global_var(106, 2);
    gsay_message(39, 227, 50);
    call ButchX2();
end

procedure Butch43
begin
    gsay_reply(39, 228);
    giq_option(4, 39, 229, Butch44, 50);
    giq_option(4, 39, 230, Butch45, 50);
end

procedure Butch44
begin
    set_map_var(41, 3);
    set_global_var(106, 2);
    gsay_message(39, 231, 50);
    call ButchX2();
end

procedure Butch45
begin
    set_map_var(41, 3);
    set_global_var(106, 2);
    gsay_message(39, 232, 50);
    call ButchX2();
end

procedure Butch46
begin
    gsay_reply(39, 233);
    giq_option(4, 39, 234, Butch42, 50);
    giq_option(4, 39, 235, Butch47, 50);
end

procedure Butch47
begin
    set_map_var(41, 3);
    set_global_var(106, 2);
    gsay_message(39, 236, 50);
    call ButchX2();
end

procedure Butch49
begin
    gsay_message(39, 241, 50);
    call ButchX3();
end

procedure Butch50
begin
    gsay_reply(39, 242);
    giq_option(4, 39, 243, Butch39, 50);
    giq_option(4, 39, 244, Butch49, 50);
end

procedure Butch51
begin
    gsay_reply(39, 245);
    giq_option(4, 39, 246, Butch51a, 50);
    giq_option(4, 39, 247, Butch50, 50);
end

procedure Butch51a
begin
    if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
        call Butch52();
    end
    else begin
        call Butch49();
    end
end

procedure Butch52
begin
    set_map_var(41, 3);
    set_global_var(106, 2);
    set_map_var(42, 1);
    gsay_message(39, 248, 50);
    call ButchX2();
end

procedure Butch53
begin
    gsay_reply(39, 249);
    giq_option(4, 39, 250, Butch54, 50);
    giq_option(4, 39, 251, Butch53a, 50);
end

procedure Butch53a
begin
    if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
        call Butch54a();
    end
    else begin
        call Butch58();
    end
end

procedure Butch54
begin
    gsay_reply(39, 252);
    giq_option(4, 39, 253, Butch54a, 50);
end

procedure Butch54a
begin
    gsay_reply(39, 254);
    giq_option(4, 39, 255, Butch55, 50);
    giq_option(4, 39, 256, Butch56, 50);
end

procedure Butch55
begin
    gsay_message(39, 257, 50);
    call ButchX3();
end

procedure Butch56
begin
    gsay_reply(39, 258);
    giq_option(4, 39, 259, Butch55, 50);
    giq_option(4, 39, 260, Butch57, 50);
end

procedure Butch57
begin
    gsay_message(39, 261, 50);
    call ButchX3();
end

procedure Butch58
begin
    gsay_message(39, 262, 50);
    call ButchX3();
end

procedure Butch59
begin
    gsay_reply(39, 263);
    if ((global_var(78) == 2) or (obj_is_carrying_obj_pid(dude_obj, 196) >= 1)) then begin
        giq_option(4, 39, 264, Butch40, 50);
    end
    else begin
        if (global_var(226) == 5) then begin
            giq_option(4, 39, 265, Butch54a, 50);
        end
    end
    giq_option(4, 39, 327, Butch67, 50);
    giq_option(4, 39, 329, Butch49, 50);
end

procedure Butch60
begin
    gsay_message(39, 266, 50);
    call ButchX2();
end

procedure Butch61
begin
end

procedure Butch62
begin
end

procedure Butch63
begin
end

procedure Butch64
begin
end

procedure Butch65
begin
end

procedure Butch66
begin
end

procedure Butch67
begin
    gsay_message(39, 274, 50);
    call ButchEnd();
end

procedure Butch68
begin
    gsay_message(39, 276, 50);
    call ButchEnd();
end

procedure Butch69
begin
end

procedure Butch70
begin
end

procedure Butch71
begin
end

procedure Butch72
begin
end

procedure Butch73
begin
    gsay_reply(39, 160);
    giq_option(4, 39, 326, Butch68, 50);
end

procedure ButchX2
begin
    set_local_var(5, 1);
    set_map_var(56, 0);
end

procedure ButchX3
begin
    set_local_var(5, 0);
    set_map_var(56, 1);
end

procedure ButchEnd
begin
end

procedure ButchEndAccept
begin
    set_map_var(41, 1);
    set_global_var(106, 1);
    set_map_var(10, 1);
end

procedure ButchEndTransport
begin
    gfade_out(1000);
    move_to(dude_obj, 18664, 0);
    gfade_in(1000);
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, 3)) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
        if (has_trait(0, dude_obj, 39)) then begin
            if (global_var(155) > 0) then begin
                set_local_var(0, local_var(0) + global_var(155));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(155));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(155));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(155));
            end
        end
        if (global_var(158) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(634, random(100, 105));
end

