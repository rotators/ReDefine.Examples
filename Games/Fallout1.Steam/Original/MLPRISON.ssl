procedure start;
procedure combat;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure goto01;
procedure goto02;
procedure goto03;
procedure goto04;
procedure goto05;
procedure goto06;
procedure goto07;
procedure goto08;
procedure goto09;
procedure goto10;
procedure goto11;
procedure explode;
procedure escape;
procedure dialog_end;

variable hostile;
variable Only_Once := 1;
variable target_hex;
variable said;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure start
begin
    if (Only_Once) then begin
        Only_Once := 0;
        critter_add_trait(self_obj, 1, 6, 2);
        critter_add_trait(self_obj, 1, 5, 6);
    end
    if (script_action == 21) then begin
        call look_at_p_proc();
    end
    else begin
        if (script_action == 4) then begin
            call pickup_p_proc();
        end
        else begin
            if (script_action == 11) then begin
                call talk_p_proc();
            end
            else begin
                if (script_action == 12) then begin
                    call critter_p_proc();
                end
                else begin
                    if (script_action == 18) then begin
                        call destroy_p_proc();
                    end
                end
            end
        end
    end
end

procedure combat
begin
    hostile := 1;
end

procedure critter_p_proc
begin
    if (tile_num(self_obj) < 25000) then begin
        call explode();
    end
    else begin
        if ((map_var(2) == 1) or (map_var(7) == 1)) then begin
            call escape();
        end
        else begin
            if (hostile == 1) then begin
                attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        hostile := 1;
    end
end

procedure talk_p_proc
begin
    call get_reaction();
    start_gdialog(682, self_obj, 4, -1, -1);
    gsay_start;
    if (obj_pid(critter_inven_obj(dude_obj, 0)) == 113) then begin
        if (local_var(5) == 1) then begin
            call goto05();
        end
        else begin
            call goto01();
        end
        set_local_var(5, 1);
    end
    else begin
        if (local_var(4) == 1) then begin
            call goto09();
        end
        else begin
            call goto07();
        end
        set_local_var(4, 1);
    end
    gsay_end;
    end_dialogue;
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
            set_global_var(156, 1);
            set_global_var(157, 0);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
            set_global_var(157, 1);
            set_global_var(156, 0);
        end
        set_global_var(159, global_var(159) + 1);
        if ((global_var(159) % 2) == 0) then begin
            set_global_var(155, global_var(155) - 1);
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
end

procedure goto01
begin
    gsay_reply(682, 108);
    giq_option(-3, 682, 109, goto02, 51);
    giq_option(4, 682, 110, goto03, 51);
    giq_option(4, 682, 111, goto04, 51);
end

procedure goto02
begin
    gsay_message(682, 112, 51);
    call dialog_end();
end

procedure goto03
begin
    gsay_message(682, 113, 51);
    call dialog_end();
end

procedure goto04
begin
    gsay_message(682, 128, 51);
    call dialog_end();
end

procedure goto05
begin
    gsay_reply(682, 114);
    giq_option(-3, 682, 115, goto02, 51);
    giq_option(4, 682, 116, goto06, 51);
    giq_option(4, 682, 117, dialog_end, 51);
end

procedure goto06
begin
    gsay_message(682, 118, 51);
    call dialog_end();
end

procedure goto07
begin
    gsay_reply(682, 119);
    giq_option(-3, 682, 115, goto02, 51);
    giq_option(4, 682, 120, goto08, 51);
end

procedure goto08
begin
    gsay_message(682, 122, 51);
    call dialog_end();
end

procedure goto09
begin
    gsay_reply(682, 123);
    giq_option(-3, 682, 115, goto02, 51);
    giq_option(4, 682, 124, goto11, 51);
    giq_option(4, 682, 125, dialog_end, 51);
end

procedure goto10
begin
    gsay_message(682, 126, 51);
    call dialog_end();
end

procedure goto11
begin
    gsay_message(682, 127, 51);
    call dialog_end();
end

procedure explode
begin
    critter_dmg(self_obj, 128, 6);
end

procedure escape
begin
    if (said == 0) then begin
        said := 1;
        float_msg(self_obj, message_str(682, 107), 2);
    end
    target_hex := 22912;
    animate_move_obj_to_tile(self_obj, target_hex, 1);
end

procedure dialog_end
begin
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * get_critter_stat(dude_obj, 3)) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(0, dude_obj, 10)));
        if (has_trait(0, dude_obj, 39)) then begin
            if (global_var(155) > 0) then begin
                set_local_var(0, local_var(0) + global_var(155));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(155));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(155));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(155));
            end
        end
        if (global_var(158) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(634, random(100, 105));
end

