procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure map_enter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;
procedure damage_p_proc;
procedure GizGuard00;
procedure GizGuard01;
procedure GizGuard02;
procedure GizGuard03;
procedure GizGuard04;
procedure GizGuard05;
procedure GizGuard06;
procedure GizGuard07;
procedure GizGuard08;
procedure GizGuardEnd;

variable hostile;
variable initialized;
variable sneak_checked;

import variable removal_ptr;
import variable weapon_checked;


procedure start
begin
    if (script_action == 12) then begin
        call critter_p_proc();
    end
    else begin
        if (script_action == 18) then begin
            call destroy_p_proc();
        end
        else begin
            if (script_action == 15) then begin
                call map_enter_p_proc();
            end
            else begin
                if (script_action == 4) then begin
                    call pickup_p_proc();
                end
                else begin
                    if (script_action == 11) then begin
                        call talk_p_proc();
                    end
                    else begin
                        if (script_action == 22) then begin
                            call timed_event_p_proc();
                        end
                    end
                end
            end
        end
    end
end

procedure critter_p_proc
begin
    if (hostile) then begin
        if (obj_can_see_obj(self_obj, dude_obj)) then begin
            hostile := 0;
            attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
        end
    end
    else begin
        if (obj_can_see_obj(self_obj, dude_obj)) then begin
            if (tile_distance_objs(self_obj, dude_obj) < 12) then begin
                if ((obj_item_subtype(critter_inven_obj(dude_obj, 1)) == 3) or (obj_item_subtype(critter_inven_obj(dude_obj, 2)) == 3) and not(weapon_checked)) then begin
                    dialogue_system_enter;
                end
                else begin
                    if (using_skill(dude_obj, 8) and not(sneak_checked)) then begin
                        dialogue_system_enter;
                    end
                end
            end
        end
    end
    if (global_var(347) == 1) then begin
        if (obj_can_see_obj(self_obj, dude_obj)) then begin
            attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
        end
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(347, 1);
        if (source_obj == dude_obj) then begin
            if (((global_var(160) + global_var(159)) >= 25) and ((global_var(159) > (2 * global_var(160))) or (global_var(156) == 1))) then begin
                set_global_var(156, 1);
                set_global_var(157, 0);
            end
            if (((global_var(160) + global_var(159)) >= 25) and ((global_var(160) > (3 * global_var(159))) or (global_var(157) == 1))) then begin
                set_global_var(157, 1);
                set_global_var(156, 0);
            end
            set_global_var(160, global_var(160) + 1);
            if ((global_var(160) % 6) == 0) then begin
                set_global_var(155, global_var(155) + 1);
            end
        end
    end
end

procedure map_enter_p_proc
begin
    if (not(obj_is_carrying_obj_pid(self_obj, 41))) then begin
        item_caps_adjust(self_obj, random(0, 10));
    end
    if (global_var(32) == 4) then begin
        critter_add_trait(self_obj, 1, 6, 87);
    end
    else begin
        critter_add_trait(self_obj, 1, 6, 13);
    end
    if ((global_var(38) == 1) or (global_var(104) == 2)) then begin
        set_obj_visibility(self_obj, 1);
        move_to(self_obj, 7000, 0);
        removal_ptr := self_obj;
    end
end

procedure pickup_p_proc
begin
    hostile := 1;
end

procedure talk_p_proc
begin
    if ((obj_item_subtype(critter_inven_obj(dude_obj, 1)) == 3) or (obj_item_subtype(critter_inven_obj(dude_obj, 2)) == 3)) then begin
        call GizGuard00();
    end
    else begin
        if (using_skill(dude_obj, 8)) then begin
            call GizGuard01();
        end
        else begin
            if (not(local_var(0))) then begin
                start_gdialog(639, self_obj, 4, -1, -1);
                gsay_start;
                call GizGuard02();
                gsay_end;
                end_dialogue;
            end
            else begin
                call GizGuard07();
            end
        end
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if ((obj_item_subtype(critter_inven_obj(dude_obj, 1)) == 3) or (obj_item_subtype(critter_inven_obj(dude_obj, 2)) == 3)) then begin
            float_msg(self_obj, message_str(639, random(100, 103)), 2);
            hostile := 1;
        end
        else begin
            weapon_checked := 0;
        end
    end
    else begin
        if (fixed_param == 2) then begin
            if (using_skill(dude_obj, 8)) then begin
                hostile := 1;
            end
            else begin
                sneak_checked := 0;
            end
        end
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(347, 1);
    end
end

procedure GizGuard00
begin
    float_msg(self_obj, message_str(639, random(132, 133)), 2);
    weapon_checked := 1;
    add_timer_event(self_obj, game_ticks(5), 1);
end

procedure GizGuard01
begin
    float_msg(self_obj, message_str(639, random(104, 106)), 2);
    sneak_checked := 1;
    add_timer_event(self_obj, game_ticks(5), 2);
end

procedure GizGuard02
begin
    set_local_var(0, 1);
    gsay_reply(639, 107);
    giq_option(4, 639, 108, GizGuard03, 50);
    giq_option(4, 639, 109, GizGuard04, 50);
    giq_option(4, 639, 110, GizGuardEnd, 50);
    giq_option(-3, 639, 111, GizGuard08, 51);
end

procedure GizGuard03
begin
    if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
        gsay_reply(639, 112);
        giq_option(4, 639, 114, GizGuard05, 50);
        giq_option(4, 639, 115, GizGuard06, 50);
    end
    else begin
        gsay_message(639, 113, 51);
    end
end

procedure GizGuard04
begin
    gsay_message(639, random(116, 119), 50);
end

procedure GizGuard05
begin
    gsay_message(639, 120, 50);
end

procedure GizGuard06
begin
    gsay_message(639, random(121, 124), 50);
end

procedure GizGuard07
begin
    float_msg(self_obj, message_str(639, random(125, 130)), 0);
end

procedure GizGuard08
begin
    gsay_message(639, 131, 50);
end

procedure GizGuardEnd
begin
end

