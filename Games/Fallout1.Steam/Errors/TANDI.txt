Fallout script decompiler, version 8.4.6 (sfall edition)
Copyright (C) Anchorite (TeamX), 2005-2009
anchorite2001@yandex.ru
Continued by Nirran, phobos2077, mr.Stalin (2014-2020)
Crossplatformed by alexeevdv (2015)
int2ssl is using Fallout 1 code.
Loading file Games/Fallout1.Steam/scripts/TANDI.int...
  Read startup code
  Read procedures table
  Read namespace
  Read stringspace
  Read tail of startup code
    Check "Jump to 'start' procedure" / "Jump to end of statup code"
    Check "# of argument to 'start' procedure"
    Extract "Export var" section
    Extract "Set exported var values" section
    Extract "Export procedures" section
    Extract "Global variables" section
  Read procedure's bodies
    Procedure: 0
    Procedure: 1
    Procedure: 2
    Procedure: 3
    Procedure: 4
    Procedure: 5
    Procedure: 6
    Procedure: 7
    Procedure: 8
    Procedure: 9
    Procedure: 10
    Procedure: 11
    Procedure: 12
    Procedure: 13
    Procedure: 14
    Procedure: 15
    Procedure: 16
    Procedure: 17
    Procedure: 18
    Procedure: 19
    Procedure: 20
    Procedure: 21
    Procedure: 22
    Procedure: 23
    Procedure: 24
    Procedure: 25
    Procedure: 26
    Procedure: 27
    Procedure: 28
    Procedure: 29
    Procedure: 30
    Procedure: 31
    Procedure: 32
    Procedure: 33
    Procedure: 34
    Procedure: 35
    Procedure: 36
    Procedure: 37
    Procedure: 38
    Procedure: 39
    Procedure: 40
    Procedure: 41
    Procedure: 42
    Procedure: 43
    Procedure: 44
    Procedure: 45
    Procedure: 46
    Procedure: 47
    Procedure: 48
    Procedure: 49
    Procedure: 50
    Procedure: 51
    Procedure: 52
    Procedure: 53
    Procedure: 54
    Procedure: 55
    Procedure: 56
    Procedure: 57
    Procedure: 58
    Procedure: 59
    Procedure: 60
    Procedure: 61
    Procedure: 62
    Procedure: 63
    Procedure: 64
    Procedure: 65
    Procedure: 66
    Procedure: 67
    Procedure: 68
    Procedure: 69
    Procedure: 70
    Procedure: 71
    Procedure: 72
    Procedure: 73
    Procedure: 74
    Procedure: 75
    Procedure: 76
    Procedure: 77
    Procedure: 78
    Procedure: 79
    Procedure: 80
    Procedure: 81
    Procedure: 82
    Procedure: 83
    Procedure: 84
    Procedure: 85
    Procedure: 86
    Procedure: 87
    Procedure: 88
File Games/Fallout1.Steam/scripts/TANDI.int loaded successfuly

Decompiling...
  Init definitions
  Processing code
    Intial reducing
    Building execution tree
        Procedure: 0
        Procedure: 1
        Procedure: 2
        Procedure: 3
        Procedure: 4
        Procedure: 5
        Procedure: 6
        Procedure: 7
        Procedure: 8
        Procedure: 9
        Procedure: 10
        Procedure: 11
        Procedure: 12
        Procedure: 13
        Procedure: 14
        Procedure: 15
        Procedure: 16
        Procedure: 17
        Procedure: 18
        Procedure: 19
        Procedure: 20
        Procedure: 21
        Procedure: 22
        Procedure: 23
        Procedure: 24
        Procedure: 25
        Procedure: 26
        Procedure: 27
        Procedure: 28
        Procedure: 29
        Procedure: 30
        Procedure: 31
        Procedure: 32
        Procedure: 33
        Procedure: 34
        Procedure: 35
        Procedure: 36
        Procedure: 37
        Procedure: 38
        Procedure: 39
        Procedure: 40
        Procedure: 41
        Procedure: 42
        Procedure: 43
        Procedure: 44
        Procedure: 45
        Procedure: 46
        Procedure: 47
        Procedure: 48
        Procedure: 49
        Procedure: 50
        Procedure: 51
        Procedure: 52
        Procedure: 53
        Procedure: 54
        Procedure: 55
        Procedure: 56
        Procedure: 57
        Procedure: 58
        Procedure: 59
        Procedure: 60
        Procedure: 61
        Procedure: 62
        Procedure: 63
        Procedure: 64
        Procedure: 65
        Procedure: 66
        Procedure: 67
        Procedure: 68
        Procedure: 69
        Procedure: 70
        Procedure: 71
        Procedure: 72
        Procedure: 73
        Procedure: 74
        Procedure: 75
        Procedure: 76
        Procedure: 77
        Procedure: 78
        Procedure: 79
        Procedure: 80
        Procedure: 81
        Procedure: 82
        Procedure: 83
        Procedure: 84
        Procedure: 85
        Procedure: 86
        Procedure: 87
        Procedure: 88
    Extracting and reducing conditions
    Setting borders of blocks
        Procedure: 0
        Procedure: 1
Error: Conditional expression left in stack

============== Procedures table ==================

======== Procedure 0 ========
Name offset:       0x00000006
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000D8A
Number of args:    0x00000000  // 0

======== Procedure 1 ========
Name offset:       0x00000018
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000D8A
Number of args:    0x00000000  // 0

======== Procedure 2 ========
Name offset:       0x00000020
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001196
Number of args:    0x00000000  // 0

======== Procedure 3 ========
Name offset:       0x0000002E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001474
Number of args:    0x00000000  // 0

======== Procedure 4 ========
Name offset:       0x00000038
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000152E
Number of args:    0x00000000  // 0

======== Procedure 5 ========
Name offset:       0x00000044
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000015D0
Number of args:    0x00000000  // 0

======== Procedure 6 ========
Name offset:       0x0000004E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000016A6
Number of args:    0x00000000  // 0

======== Procedure 7 ========
Name offset:       0x0000005A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000016F0
Number of args:    0x00000000  // 0

======== Procedure 8 ========
Name offset:       0x00000064
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001798
Number of args:    0x00000000  // 0

======== Procedure 9 ========
Name offset:       0x0000006E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000017D8
Number of args:    0x00000000  // 0

======== Procedure 10 ========
Name offset:       0x00000078
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001860
Number of args:    0x00000000  // 0

======== Procedure 11 ========
Name offset:       0x00000082
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000018C8
Number of args:    0x00000000  // 0

======== Procedure 12 ========
Name offset:       0x0000008C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000190E
Number of args:    0x00000000  // 0

======== Procedure 13 ========
Name offset:       0x00000096
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001966
Number of args:    0x00000000  // 0

======== Procedure 14 ========
Name offset:       0x000000A0
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000019CE
Number of args:    0x00000000  // 0

======== Procedure 15 ========
Name offset:       0x000000AA
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001A56
Number of args:    0x00000000  // 0

======== Procedure 16 ========
Name offset:       0x000000B4
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001AF2
Number of args:    0x00000000  // 0

======== Procedure 17 ========
Name offset:       0x000000BE
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001B32
Number of args:    0x00000000  // 0

======== Procedure 18 ========
Name offset:       0x000000C8
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001B72
Number of args:    0x00000000  // 0

======== Procedure 19 ========
Name offset:       0x000000D2
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001BB2
Number of args:    0x00000000  // 0

======== Procedure 20 ========
Name offset:       0x000000DC
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001BF2
Number of args:    0x00000000  // 0

======== Procedure 21 ========
Name offset:       0x000000E6
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001CA0
Number of args:    0x00000000  // 0

======== Procedure 22 ========
Name offset:       0x000000F0
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001D28
Number of args:    0x00000000  // 0

======== Procedure 23 ========
Name offset:       0x000000FA
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001DA4
Number of args:    0x00000000  // 0

======== Procedure 24 ========
Name offset:       0x00000104
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001E32
Number of args:    0x00000000  // 0

======== Procedure 25 ========
Name offset:       0x0000010E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001E72
Number of args:    0x00000000  // 0

======== Procedure 26 ========
Name offset:       0x00000118
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001EDA
Number of args:    0x00000000  // 0

======== Procedure 27 ========
Name offset:       0x00000122
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001F20
Number of args:    0x00000000  // 0

======== Procedure 28 ========
Name offset:       0x0000012C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001FCA
Number of args:    0x00000000  // 0

======== Procedure 29 ========
Name offset:       0x00000138
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002014
Number of args:    0x00000000  // 0

======== Procedure 30 ========
Name offset:       0x00000142
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000020C4
Number of args:    0x00000000  // 0

======== Procedure 31 ========
Name offset:       0x0000014C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000212E
Number of args:    0x00000000  // 0

======== Procedure 32 ========
Name offset:       0x00000158
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002176
Number of args:    0x00000000  // 0

======== Procedure 33 ========
Name offset:       0x00000164
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000021DE
Number of args:    0x00000000  // 0

======== Procedure 34 ========
Name offset:       0x0000016E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002246
Number of args:    0x00000000  // 0

======== Procedure 35 ========
Name offset:       0x00000178
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000228C
Number of args:    0x00000000  // 0

======== Procedure 36 ========
Name offset:       0x00000182
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000022D2
Number of args:    0x00000000  // 0

======== Procedure 37 ========
Name offset:       0x0000018C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000233A
Number of args:    0x00000000  // 0

======== Procedure 38 ========
Name offset:       0x00000196
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000023C4
Number of args:    0x00000000  // 0

======== Procedure 39 ========
Name offset:       0x000001A2
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000240A
Number of args:    0x00000000  // 0

======== Procedure 40 ========
Name offset:       0x000001AE
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002450
Number of args:    0x00000000  // 0

======== Procedure 41 ========
Name offset:       0x000001B8
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000247E
Number of args:    0x00000000  // 0

======== Procedure 42 ========
Name offset:       0x000001C2
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000024AC
Number of args:    0x00000000  // 0

======== Procedure 43 ========
Name offset:       0x000001CC
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000024DA
Number of args:    0x00000000  // 0

======== Procedure 44 ========
Name offset:       0x000001D6
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002508
Number of args:    0x00000000  // 0

======== Procedure 45 ========
Name offset:       0x000001E0
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002536
Number of args:    0x00000000  // 0

======== Procedure 46 ========
Name offset:       0x000001EA
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002564
Number of args:    0x00000000  // 0

======== Procedure 47 ========
Name offset:       0x000001F4
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002592
Number of args:    0x00000000  // 0

======== Procedure 48 ========
Name offset:       0x000001FE
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000025C0
Number of args:    0x00000000  // 0

======== Procedure 49 ========
Name offset:       0x00000208
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000025EE
Number of args:    0x00000000  // 0

======== Procedure 50 ========
Name offset:       0x00000212
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002642
Number of args:    0x00000000  // 0

======== Procedure 51 ========
Name offset:       0x0000021C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002696
Number of args:    0x00000000  // 0

======== Procedure 52 ========
Name offset:       0x00000226
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000026C4
Number of args:    0x00000000  // 0

======== Procedure 53 ========
Name offset:       0x00000230
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000026F2
Number of args:    0x00000000  // 0

======== Procedure 54 ========
Name offset:       0x0000023A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002720
Number of args:    0x00000000  // 0

======== Procedure 55 ========
Name offset:       0x00000244
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000274E
Number of args:    0x00000000  // 0

======== Procedure 56 ========
Name offset:       0x0000024E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002780
Number of args:    0x00000000  // 0

======== Procedure 57 ========
Name offset:       0x00000258
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000027CA
Number of args:    0x00000000  // 0

======== Procedure 58 ========
Name offset:       0x00000262
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000027F8
Number of args:    0x00000000  // 0

======== Procedure 59 ========
Name offset:       0x0000026C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002826
Number of args:    0x00000000  // 0

======== Procedure 60 ========
Name offset:       0x00000276
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002854
Number of args:    0x00000000  // 0

======== Procedure 61 ========
Name offset:       0x00000280
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002882
Number of args:    0x00000000  // 0

======== Procedure 62 ========
Name offset:       0x0000028A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000028B0
Number of args:    0x00000000  // 0

======== Procedure 63 ========
Name offset:       0x00000294
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000028DE
Number of args:    0x00000000  // 0

======== Procedure 64 ========
Name offset:       0x0000029E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000028F8
Number of args:    0x00000000  // 0

======== Procedure 65 ========
Name offset:       0x000002A8
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002912
Number of args:    0x00000000  // 0

======== Procedure 66 ========
Name offset:       0x000002B2
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000292C
Number of args:    0x00000000  // 0

======== Procedure 67 ========
Name offset:       0x000002BC
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002946
Number of args:    0x00000000  // 0

======== Procedure 68 ========
Name offset:       0x000002C6
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002976
Number of args:    0x00000000  // 0

======== Procedure 69 ========
Name offset:       0x000002D0
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000029A6
Number of args:    0x00000000  // 0

======== Procedure 70 ========
Name offset:       0x000002DA
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000029E4
Number of args:    0x00000000  // 0

======== Procedure 71 ========
Name offset:       0x000002E6
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000029FE
Number of args:    0x00000000  // 0

======== Procedure 72 ========
Name offset:       0x000002F6
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002C90
Number of args:    0x00000000  // 0

======== Procedure 73 ========
Name offset:       0x00000306
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002D4E
Number of args:    0x00000000  // 0

======== Procedure 74 ========
Name offset:       0x0000031A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002DF6
Number of args:    0x00000000  // 0

======== Procedure 75 ========
Name offset:       0x0000032E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002E10
Number of args:    0x00000000  // 0

======== Procedure 76 ========
Name offset:       0x00000342
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002E2A
Number of args:    0x00000000  // 0

======== Procedure 77 ========
Name offset:       0x000003E0
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00003236
Number of args:    0x00000000  // 0

======== Procedure 78 ========
Name offset:       0x000003F0
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000034C8
Number of args:    0x00000000  // 0

======== Procedure 79 ========
Name offset:       0x00000400
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000354C
Number of args:    0x00000000  // 0

======== Procedure 80 ========
Name offset:       0x00000410
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000035E8
Number of args:    0x00000000  // 0

======== Procedure 81 ========
Name offset:       0x0000041A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00003632
Number of args:    0x00000000  // 0

======== Procedure 82 ========
Name offset:       0x00000426
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000367C
Number of args:    0x00000000  // 0

======== Procedure 83 ========
Name offset:       0x00000434
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000036B2
Number of args:    0x00000000  // 0

======== Procedure 84 ========
Name offset:       0x00000440
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000036E8
Number of args:    0x00000000  // 0

======== Procedure 85 ========
Name offset:       0x0000044E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00003732
Number of args:    0x00000000  // 0

======== Procedure 86 ========
Name offset:       0x0000045E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000377C
Number of args:    0x00000000  // 0

======== Procedure 87 ========
Name offset:       0x0000046E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000037EC
Number of args:    0x00000000  // 0

======== Procedure 88 ========
Name offset:       0x00000480
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000385C
Number of args:    0x00000000  // 0



============== Namespace ==================
0x00000006: ".............."
0x00000018: "start"
0x00000020: "do_dialogue"
0x0000002E: "tandi00"
0x00000038: "tandi00_1"
0x00000044: "tandi01"
0x0000004E: "tandi01a"
0x0000005A: "tandi02"
0x00000064: "tandi03"
0x0000006E: "tandi04"
0x00000078: "tandi05"
0x00000082: "tandi06"
0x0000008C: "tandi12"
0x00000096: "tandi13"
0x000000A0: "tandi14"
0x000000AA: "tandi15"
0x000000B4: "tandi16"
0x000000BE: "tandi20"
0x000000C8: "tandi21"
0x000000D2: "tandi22"
0x000000DC: "tandi23"
0x000000E6: "tandi24"
0x000000F0: "tandi27"
0x000000FA: "tandi28"
0x00000104: "tandi29"
0x0000010E: "tandi30"
0x00000118: "tandi35"
0x00000122: "tandi36"
0x0000012C: "tandi36a"
0x00000138: "tandi37"
0x00000142: "tandi38"
0x0000014C: "tandi38a"
0x00000158: "tandi38b"
0x00000164: "tandi39"
0x0000016E: "tandi40"
0x00000178: "tandi41"
0x00000182: "tandi42"
0x0000018C: "tandi43"
0x00000196: "tandi43a"
0x000001A2: "tandi43b"
0x000001AE: "tandi44"
0x000001B8: "tandi45"
0x000001C2: "tandi46"
0x000001CC: "tandi47"
0x000001D6: "tandi48"
0x000001E0: "tandi49"
0x000001EA: "tandi50"
0x000001F4: "tandi51"
0x000001FE: "tandi52"
0x00000208: "tandi53"
0x00000212: "tandi54"
0x0000021C: "tandi55"
0x00000226: "tandi62"
0x00000230: "tandi63"
0x0000023A: "tandi64"
0x00000244: "tandi65"
0x0000024E: "tandi66"
0x00000258: "tandi67"
0x00000262: "tandi68"
0x0000026C: "tandi69"
0x00000276: "tandi70"
0x00000280: "tandi71"
0x0000028A: "tandi72"
0x00000294: "tandix"
0x0000029E: "tandixx"
0x000002A8: "tandix1"
0x000002B2: "tandix2"
0x000002BC: "tandix3"
0x000002C6: "tandix4"
0x000002D0: "tandix5"
0x000002DA: "tandiend"
0x000002E6: "TandiSchedule"
0x000002F6: "follow_player"
0x00000306: "Random_Following"
0x0000031A: "map_update_p_proc"
0x0000032E: "map_enter_p_proc"
0x00000342: "critter_p_proc"
0x00000354: "DESTROYED"
0x00000360: "KIDNAP"
0x0000036A: "ILLEGAL"
0x00000374: "ILLEGBEFORE"
0x00000382: "TRESPASS"
0x0000038E: "BYE"
0x00000394: "rndx"
0x0000039C: "rndy"
0x000003A4: "rndz"
0x000003AC: "MALE"
0x000003B4: "Counter"
0x000003BE: "Only_Once"
0x000003CA: "hostile"
0x000003D4: "Tandi_Ptr"
0x000003E0: "get_reaction"
0x000003F0: "ReactToLevel"
0x00000400: "LevelToReact"
0x00000410: "UpReact"
0x0000041A: "DownReact"
0x00000426: "BottomReact"
0x00000434: "TopReact"
0x00000440: "BigUpReact"
0x0000044E: "BigDownReact"
0x0000045E: "UpReactLevel"
0x0000046E: "DownReactLevel"
0x00000480: "Goodbyes"
0x0000048C: "exit_line"
==================
104 item(s)



============== Stringspace ==================
Empty


============== Global variables values ==================
0: O_INTOP(0x00000000)   // 0 (0)
1: O_INTOP(0x00000000)   // 0 (0)
2: O_INTOP(0x00000000)   // 0 (0)
3: O_INTOP(0x00000000)   // 0 (0)
4: O_INTOP(0x00000000)   // 0 (0)
5: O_INTOP(0x00000000)   // 0 (0)
6: O_INTOP(0x00000000)   // 0 (0)
7: O_INTOP(0x00000000)   // 0 (0)
8: O_INTOP(0x00000000)   // 0 (0)
9: O_INTOP(0x00000000)   // 0 (0)
10: O_INTOP(0x00000000)   // 0 (0)
11: O_INTOP(0x00000001)   // 1 (1)
12: O_INTOP(0x00000000)   // 0 (0)
13: O_INTOP(0x00000000)   // 0 (0)


============== Exported variables ==================
Not found


============== Procedures ==================

0: .............. (0x00000d8a)
===============================

1: start (0x00000d8a)
===============================
0x00000D8A: 0x802B            - O_PUSH_BASE
0x00000D8C: 0xC001 0x00000e3c - O_INTOP(0x00000e3c)   // 3644 (3644)
0x00000D92: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00000D98: 0x8012            - O_FETCH_GLOBAL
0x00000D9A: 0x802F            - O_IF
0x00000D9C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000DA2: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00000DA8: 0x8013            - O_STORE_GLOBAL
0x00000DAA: 0xC001 0x00000dd4 - O_INTOP(0x00000dd4)   // 3540 (3540)
0x00000DB0: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x00000DB6: 0x80C5            - O_GLOBAL_VAR
0x00000DB8: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000DBE: 0x8033            - O_EQUAL
0x00000DC0: 0x802F            - O_IF
0x00000DC2: 0x80BC            - O_SELF_OBJ
0x00000DC4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000DCA: 0x80F2            - O_GAME_TICKS
0x00000DCC: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000DD2: 0x80F0            - O_ADD_TIMER_EVENT
0x00000DD4: 0xC001 0x00000e10 - O_INTOP(0x00000e10)   // 3600 (3600)
0x00000DDA: 0x8101            - O_CUR_MAP_INDEX
0x00000DDC: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x00000DE2: 0x8033            - O_EQUAL
0x00000DE4: 0x8101            - O_CUR_MAP_INDEX
0x00000DE6: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00000DEC: 0x8033            - O_EQUAL
0x00000DEE: 0x803F            - O_OR
0x00000DF0: 0x802F            - O_IF
0x00000DF2: 0x80BC            - O_SELF_OBJ
0x00000DF4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000DFA: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000E00: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000E06: 0x8102            - O_CRITTER_ADD_TRAIT
0x00000E08: 0xC001 0x00000e26 - O_INTOP(0x00000e26)   // 3622 (3622)
0x00000E0E: 0x8004            - O_JMP
0x00000E10: 0x80BC            - O_SELF_OBJ
0x00000E12: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000E18: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000E1E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E24: 0x8102            - O_CRITTER_ADD_TRAIT
0x00000E26: 0x80BC            - O_SELF_OBJ
0x00000E28: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000E2E: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000E34: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000E3A: 0x8102            - O_CRITTER_ADD_TRAIT
0x00000E3C: 0xC001 0x00000e6e - O_INTOP(0x00000e6e)   // 3694 (3694)
0x00000E42: 0x80C7            - O_SCRIPT_ACTION
0x00000E44: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x00000E4A: 0x8033            - O_EQUAL
0x00000E4C: 0x802F            - O_IF
0x00000E4E: 0xC001 0x00000e64 - O_INTOP(0x00000e64)   // 3684 (3684)
0x00000E54: 0x800D            - O_D_TO_A
0x00000E56: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E5C: 0xC001 0x0000004b - O_INTOP(0x0000004b)   // 75 (75)
0x00000E62: 0x8005            - O_CALL
0x00000E64: 0x801A            - O_POP
0x00000E66: 0xC001 0x0000117e - O_INTOP(0x0000117e)   // 4478 (4478)
0x00000E6C: 0x8004            - O_JMP
0x00000E6E: 0xC001 0x00000ea0 - O_INTOP(0x00000ea0)   // 3744 (3744)
0x00000E74: 0x80C7            - O_SCRIPT_ACTION
0x00000E76: 0xC001 0x00000017 - O_INTOP(0x00000017)   // 23 (23)
0x00000E7C: 0x8033            - O_EQUAL
0x00000E7E: 0x802F            - O_IF
0x00000E80: 0xC001 0x00000e96 - O_INTOP(0x00000e96)   // 3734 (3734)
0x00000E86: 0x800D            - O_D_TO_A
0x00000E88: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E8E: 0xC001 0x0000004a - O_INTOP(0x0000004a)   // 74 (74)
0x00000E94: 0x8005            - O_CALL
0x00000E96: 0x801A            - O_POP
0x00000E98: 0xC001 0x0000117e - O_INTOP(0x0000117e)   // 4478 (4478)
0x00000E9E: 0x8004            - O_JMP
0x00000EA0: 0xC001 0x00000ed2 - O_INTOP(0x00000ed2)   // 3794 (3794)
0x00000EA6: 0x80C7            - O_SCRIPT_ACTION
0x00000EA8: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00000EAE: 0x8033            - O_EQUAL
0x00000EB0: 0x802F            - O_IF
0x00000EB2: 0xC001 0x00000ec8 - O_INTOP(0x00000ec8)   // 3784 (3784)
0x00000EB8: 0x800D            - O_D_TO_A
0x00000EBA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000EC0: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000EC6: 0x8005            - O_CALL
0x00000EC8: 0x801A            - O_POP
0x00000ECA: 0xC001 0x0000117e - O_INTOP(0x0000117e)   // 4478 (4478)
0x00000ED0: 0x8004            - O_JMP
0x00000ED2: 0xC001 0x00000f0a - O_INTOP(0x00000f0a)   // 3850 (3850)
0x00000ED8: 0x80C7            - O_SCRIPT_ACTION
0x00000EDA: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x00000EE0: 0x8033            - O_EQUAL
0x00000EE2: 0x80C7            - O_SCRIPT_ACTION
0x00000EE4: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000EEA: 0x8033            - O_EQUAL
0x00000EEC: 0x803F            - O_OR
0x00000EEE: 0x802F            - O_IF
0x00000EF0: 0x80B9            - O_SCRIPT_OVERRIDES
0x00000EF2: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00000EF8: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x00000EFE: 0x8105            - O_MESSAGE_STR
0x00000F00: 0x80B8            - O_DISPLAY_MSG
0x00000F02: 0xC001 0x0000117e - O_INTOP(0x0000117e)   // 4478 (4478)
0x00000F08: 0x8004            - O_JMP
0x00000F0A: 0xC001 0x00000f80 - O_INTOP(0x00000f80)   // 3968 (3968)
0x00000F10: 0x80C7            - O_SCRIPT_ACTION
0x00000F12: 0xC001 0x00000016 - O_INTOP(0x00000016)   // 22 (22)
0x00000F18: 0x8033            - O_EQUAL
0x00000F1A: 0x802F            - O_IF
0x00000F1C: 0xC001 0x00000f4e - O_INTOP(0x00000f4e)   // 3918 (3918)
0x00000F22: 0x80F7            - O_FIXED_PARAM
0x00000F24: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000F2A: 0x8033            - O_EQUAL
0x00000F2C: 0x802F            - O_IF
0x00000F2E: 0xC001 0x00000f44 - O_INTOP(0x00000f44)   // 3908 (3908)
0x00000F34: 0x800D            - O_D_TO_A
0x00000F36: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F3C: 0xC001 0x00000048 - O_INTOP(0x00000048)   // 72 (72)
0x00000F42: 0x8005            - O_CALL
0x00000F44: 0x801A            - O_POP
0x00000F46: 0xC001 0x00000f78 - O_INTOP(0x00000f78)   // 3960 (3960)
0x00000F4C: 0x8004            - O_JMP
0x00000F4E: 0xC001 0x00000f78 - O_INTOP(0x00000f78)   // 3960 (3960)
0x00000F54: 0x80F7            - O_FIXED_PARAM
0x00000F56: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000F5C: 0x8033            - O_EQUAL
0x00000F5E: 0x802F            - O_IF
0x00000F60: 0xC001 0x00000f76 - O_INTOP(0x00000f76)   // 3958 (3958)
0x00000F66: 0x800D            - O_D_TO_A
0x00000F68: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F6E: 0xC001 0x00000049 - O_INTOP(0x00000049)   // 73 (73)
0x00000F74: 0x8005            - O_CALL
0x00000F76: 0x801A            - O_POP
0x00000F78: 0xC001 0x0000117e - O_INTOP(0x0000117e)   // 4478 (4478)
0x00000F7E: 0x8004            - O_JMP
0x00000F80: 0xC001 0x00000fb2 - O_INTOP(0x00000fb2)   // 4018 (4018)
0x00000F86: 0x80C7            - O_SCRIPT_ACTION
0x00000F88: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00000F8E: 0x8033            - O_EQUAL
0x00000F90: 0x802F            - O_IF
0x00000F92: 0xC001 0x00000fa8 - O_INTOP(0x00000fa8)   // 4008 (4008)
0x00000F98: 0x800D            - O_D_TO_A
0x00000F9A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000FA0: 0xC001 0x0000004c - O_INTOP(0x0000004c)   // 76 (76)
0x00000FA6: 0x8005            - O_CALL
0x00000FA8: 0x801A            - O_POP
0x00000FAA: 0xC001 0x0000117e - O_INTOP(0x0000117e)   // 4478 (4478)
0x00000FB0: 0x8004            - O_JMP
0x00000FB2: 0xC001 0x00001110 - O_INTOP(0x00001110)   // 4368 (4368)
0x00000FB8: 0x80C7            - O_SCRIPT_ACTION
0x00000FBA: 0xC001 0x00000012 - O_INTOP(0x00000012)   // 18 (18)
0x00000FC0: 0x8033            - O_EQUAL
0x00000FC2: 0x802F            - O_IF
0x00000FC4: 0xC001 0x000010fa - O_INTOP(0x000010fa)   // 4346 (4346)
0x00000FCA: 0x80BD            - O_SOURCE_OBJ
0x00000FCC: 0x80BF            - O_DUDE_OBJ
0x00000FCE: 0x8033            - O_EQUAL
0x00000FD0: 0x802F            - O_IF
0x00000FD2: 0xC001 0x0000103e - O_INTOP(0x0000103e)   // 4158 (4158)
0x00000FD8: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00000FDE: 0x80C5            - O_GLOBAL_VAR
0x00000FE0: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000FE6: 0x80C5            - O_GLOBAL_VAR
0x00000FE8: 0x8039            - O_ADD
0x00000FEA: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00000FF0: 0x8036            - O_GREATER_EQUAL
0x00000FF2: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000FF8: 0x80C5            - O_GLOBAL_VAR
0x00000FFA: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001000: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00001006: 0x80C5            - O_GLOBAL_VAR
0x00001008: 0x803B            - O_MUL
0x0000100A: 0x8038            - O_GREATER
0x0000100C: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x00001012: 0x80C5            - O_GLOBAL_VAR
0x00001014: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000101A: 0x8033            - O_EQUAL
0x0000101C: 0x803F            - O_OR
0x0000101E: 0x803E            - O_AND
0x00001020: 0x802F            - O_IF
0x00001022: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x00001028: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000102E: 0x80C6            - O_SET_GLOBAL_VAR
0x00001030: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x00001036: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000103C: 0x80C6            - O_SET_GLOBAL_VAR
0x0000103E: 0xC001 0x000010aa - O_INTOP(0x000010aa)   // 4266 (4266)
0x00001044: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x0000104A: 0x80C5            - O_GLOBAL_VAR
0x0000104C: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00001052: 0x80C5            - O_GLOBAL_VAR
0x00001054: 0x8039            - O_ADD
0x00001056: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x0000105C: 0x8036            - O_GREATER_EQUAL
0x0000105E: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00001064: 0x80C5            - O_GLOBAL_VAR
0x00001066: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x0000106C: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00001072: 0x80C5            - O_GLOBAL_VAR
0x00001074: 0x803B            - O_MUL
0x00001076: 0x8038            - O_GREATER
0x00001078: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x0000107E: 0x80C5            - O_GLOBAL_VAR
0x00001080: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001086: 0x8033            - O_EQUAL
0x00001088: 0x803F            - O_OR
0x0000108A: 0x803E            - O_AND
0x0000108C: 0x802F            - O_IF
0x0000108E: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x00001094: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000109A: 0x80C6            - O_SET_GLOBAL_VAR
0x0000109C: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x000010A2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000010A8: 0x80C6            - O_SET_GLOBAL_VAR
0x000010AA: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x000010B0: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x000010B6: 0x80C5            - O_GLOBAL_VAR
0x000010B8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000010BE: 0x8039            - O_ADD
0x000010C0: 0x80C6            - O_SET_GLOBAL_VAR
0x000010C2: 0xC001 0x000010fa - O_INTOP(0x000010fa)   // 4346 (4346)
0x000010C8: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x000010CE: 0x80C5            - O_GLOBAL_VAR
0x000010D0: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000010D6: 0x803D            - O_MOD
0x000010D8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000010DE: 0x8033            - O_EQUAL
0x000010E0: 0x802F            - O_IF
0x000010E2: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x000010E8: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x000010EE: 0x80C5            - O_GLOBAL_VAR
0x000010F0: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000010F6: 0x803A            - O_SUB
0x000010F8: 0x80C6            - O_SET_GLOBAL_VAR
0x000010FA: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x00001100: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001106: 0x80C6            - O_SET_GLOBAL_VAR
0x00001108: 0xC001 0x0000117e - O_INTOP(0x0000117e)   // 4478 (4478)
0x0000110E: 0x8004            - O_JMP
0x00001110: 0xC001 0x0000115e - O_INTOP(0x0000115e)   // 4446 (4446)
0x00001116: 0x80C7            - O_SCRIPT_ACTION
0x00001118: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x0000111E: 0x8033            - O_EQUAL
0x00001120: 0x802F            - O_IF
0x00001122: 0xC001 0x00001156 - O_INTOP(0x00001156)   // 4438 (4438)
0x00001128: 0x80BD            - O_SOURCE_OBJ
0x0000112A: 0x80BF            - O_DUDE_OBJ
0x0000112C: 0x8033            - O_EQUAL
0x0000112E: 0x8101            - O_CUR_MAP_INDEX
0x00001130: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x00001136: 0x8033            - O_EQUAL
0x00001138: 0x8101            - O_CUR_MAP_INDEX
0x0000113A: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00001140: 0x8033            - O_EQUAL
0x00001142: 0x803F            - O_OR
0x00001144: 0x803E            - O_AND
0x00001146: 0x802F            - O_IF
0x00001148: 0xC001 0x000000f6 - O_INTOP(0x000000f6)   // 246 (246)
0x0000114E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001154: 0x80C6            - O_SET_GLOBAL_VAR
0x00001156: 0xC001 0x0000117e - O_INTOP(0x0000117e)   // 4478 (4478)
0x0000115C: 0x8004            - O_JMP
0x0000115E: 0xC001 0x0000117e - O_INTOP(0x0000117e)   // 4478 (4478)
0x00001164: 0x80C7            - O_SCRIPT_ACTION
0x00001166: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000116C: 0x8033            - O_EQUAL
0x0000116E: 0x802F            - O_IF
0x00001170: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001176: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x0000117C: 0x8013            - O_STORE_GLOBAL
0x0000117E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001184: 0x800D            - O_D_TO_A
0x00001186: 0x8019            - O_SWAPA
0x00001188: 0x802A            - O_POP_TO_BASE
0x0000118A: 0x8029            - O_POP_BASE
0x0000118C: 0x800C            - O_A_TO_D
0x0000118E: 0x801C            - O_POP_RETURN
0x00001190: 0x802A            - O_POP_TO_BASE
0x00001192: 0x8029            - O_POP_BASE
0x00001194: 0x801C            - O_POP_RETURN

2: do_dialogue (0x00001196)
===============================
0x00001196: 0x802B            - O_PUSH_BASE
0x00001198: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000119E: 0xC001 0x000011e8 - O_INTOP(0x000011e8)   // 4584 (4584)
0x000011A4: 0x8101            - O_CUR_MAP_INDEX
0x000011A6: 0xC001 0x00000018 - O_INTOP(0x00000018)   // 24 (24)
0x000011AC: 0x8034            - O_NOT_EQUAL
0x000011AE: 0x8101            - O_CUR_MAP_INDEX
0x000011B0: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x000011B6: 0x8034            - O_NOT_EQUAL
0x000011B8: 0x803E            - O_AND
0x000011BA: 0x8101            - O_CUR_MAP_INDEX
0x000011BC: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x000011C2: 0x8034            - O_NOT_EQUAL
0x000011C4: 0x803E            - O_AND
0x000011C6: 0x802F            - O_IF
0x000011C8: 0x80BC            - O_SELF_OBJ
0x000011CA: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x000011D0: 0xC001 0x0000012c - O_INTOP(0x0000012c)   // 300 (300)
0x000011D6: 0xC001 0x00000131 - O_INTOP(0x00000131)   // 305 (305)
0x000011DC: 0x80B4            - O_RANDOM
0x000011DE: 0x8105            - O_MESSAGE_STR
0x000011E0: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x000011E6: 0x810A            - O_FLOAT_MSG
0x000011E8: 0xC001 0x0000145c - O_INTOP(0x0000145c)   // 5212 (5212)
0x000011EE: 0x8101            - O_CUR_MAP_INDEX
0x000011F0: 0xC001 0x00000018 - O_INTOP(0x00000018)   // 24 (24)
0x000011F6: 0x8033            - O_EQUAL
0x000011F8: 0x8101            - O_CUR_MAP_INDEX
0x000011FA: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x00001200: 0x8033            - O_EQUAL
0x00001202: 0x803F            - O_OR
0x00001204: 0x8101            - O_CUR_MAP_INDEX
0x00001206: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x0000120C: 0x8033            - O_EQUAL
0x0000120E: 0x803F            - O_OR
0x00001210: 0x802F            - O_IF
0x00001212: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x00001218: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000121E: 0x8031            - O_STORE
0x00001220: 0xC001 0x00001240 - O_INTOP(0x00001240)   // 4672 (4672)
0x00001226: 0x8101            - O_CUR_MAP_INDEX
0x00001228: 0xC001 0x00000018 - O_INTOP(0x00000018)   // 24 (24)
0x0000122E: 0x8033            - O_EQUAL
0x00001230: 0x802F            - O_IF
0x00001232: 0xC001 0x0000000d - O_INTOP(0x0000000d)   // 13 (13)
0x00001238: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000123E: 0x8031            - O_STORE
0x00001240: 0xC001 0x00001278 - O_INTOP(0x00001278)   // 4728 (4728)
0x00001246: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x0000124C: 0x80C5            - O_GLOBAL_VAR
0x0000124E: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001254: 0x8033            - O_EQUAL
0x00001256: 0x802F            - O_IF
0x00001258: 0x80BC            - O_SELF_OBJ
0x0000125A: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001260: 0xC001 0x000000d0 - O_INTOP(0x000000d0)   // 208 (208)
0x00001266: 0x8105            - O_MESSAGE_STR
0x00001268: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x0000126E: 0x810A            - O_FLOAT_MSG
0x00001270: 0xC001 0x0000145c - O_INTOP(0x0000145c)   // 5212 (5212)
0x00001276: 0x8004            - O_JMP
0x00001278: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x0000127E: 0x80BC            - O_SELF_OBJ
0x00001280: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001286: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x0000128C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001292: 0x8032            - O_FETCH
0x00001294: 0x80DE            - O_START_GDIALOG
0x00001296: 0xC001 0x000012ac - O_INTOP(0x000012ac)   // 4780 (4780)
0x0000129C: 0x800D            - O_D_TO_A
0x0000129E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000012A4: 0xC001 0x0000004d - O_INTOP(0x0000004d)   // 77 (77)
0x000012AA: 0x8005            - O_CALL
0x000012AC: 0x801A            - O_POP
0x000012AE: 0x811C            - O_GSAY_START
0x000012B0: 0xC001 0x000013ea - O_INTOP(0x000013ea)   // 5098 (5098)
0x000012B6: 0xC001 0x000000d9 - O_INTOP(0x000000d9)   // 217 (217)
0x000012BC: 0x80C5            - O_GLOBAL_VAR
0x000012BE: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000012C4: 0x8033            - O_EQUAL
0x000012C6: 0x802F            - O_IF
0x000012C8: 0xC001 0x0000133a - O_INTOP(0x0000133a)   // 4922 (4922)
0x000012CE: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x000012D4: 0x80C5            - O_GLOBAL_VAR
0x000012D6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000012DC: 0x8033            - O_EQUAL
0x000012DE: 0x802F            - O_IF
0x000012E0: 0xC001 0x0000131a - O_INTOP(0x0000131a)   // 4890 (4890)
0x000012E6: 0x80BF            - O_DUDE_OBJ
0x000012E8: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000012EE: 0x80CA            - O_GET_CRITTER_STAT
0x000012F0: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000012F6: 0x8037            - O_LESS
0x000012F8: 0x802F            - O_IF
0x000012FA: 0xC001 0x00001310 - O_INTOP(0x00001310)   // 4880 (4880)
0x00001300: 0x800D            - O_D_TO_A
0x00001302: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001308: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x0000130E: 0x8005            - O_CALL
0x00001310: 0x801A            - O_POP
0x00001312: 0xC001 0x00001332 - O_INTOP(0x00001332)   // 4914 (4914)
0x00001318: 0x8004            - O_JMP
0x0000131A: 0xC001 0x00001330 - O_INTOP(0x00001330)   // 4912 (4912)
0x00001320: 0x800D            - O_D_TO_A
0x00001322: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001328: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x0000132E: 0x8005            - O_CALL
0x00001330: 0x801A            - O_POP
0x00001332: 0xC001 0x000013e2 - O_INTOP(0x000013e2)   // 5090 (5090)
0x00001338: 0x8004            - O_JMP
0x0000133A: 0xC001 0x00001380 - O_INTOP(0x00001380)   // 4992 (4992)
0x00001340: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x00001346: 0x80C5            - O_GLOBAL_VAR
0x00001348: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000134E: 0x8033            - O_EQUAL
0x00001350: 0x802F            - O_IF
0x00001352: 0xC001 0x000000da - O_INTOP(0x000000da)   // 218 (218)
0x00001358: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000135E: 0x80C6            - O_SET_GLOBAL_VAR
0x00001360: 0xC001 0x00001376 - O_INTOP(0x00001376)   // 4982 (4982)
0x00001366: 0x800D            - O_D_TO_A
0x00001368: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000136E: 0xC001 0x00000025 - O_INTOP(0x00000025)   // 37 (37)
0x00001374: 0x8005            - O_CALL
0x00001376: 0x801A            - O_POP
0x00001378: 0xC001 0x000013e2 - O_INTOP(0x000013e2)   // 5090 (5090)
0x0000137E: 0x8004            - O_JMP
0x00001380: 0xC001 0x000013e2 - O_INTOP(0x000013e2)   // 5090 (5090)
0x00001386: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x0000138C: 0x80C5            - O_GLOBAL_VAR
0x0000138E: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001394: 0x8033            - O_EQUAL
0x00001396: 0x802F            - O_IF
0x00001398: 0xC001 0x000013ca - O_INTOP(0x000013ca)   // 5066 (5066)
0x0000139E: 0x8101            - O_CUR_MAP_INDEX
0x000013A0: 0xC001 0x00000018 - O_INTOP(0x00000018)   // 24 (24)
0x000013A6: 0x8033            - O_EQUAL
0x000013A8: 0x802F            - O_IF
0x000013AA: 0xC001 0x000013c0 - O_INTOP(0x000013c0)   // 5056 (5056)
0x000013B0: 0x800D            - O_D_TO_A
0x000013B2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000013B8: 0xC001 0x00000027 - O_INTOP(0x00000027)   // 39 (39)
0x000013BE: 0x8005            - O_CALL
0x000013C0: 0x801A            - O_POP
0x000013C2: 0xC001 0x000013e2 - O_INTOP(0x000013e2)   // 5090 (5090)
0x000013C8: 0x8004            - O_JMP
0x000013CA: 0xC001 0x000013e0 - O_INTOP(0x000013e0)   // 5088 (5088)
0x000013D0: 0x800D            - O_D_TO_A
0x000013D2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000013D8: 0xC001 0x0000001b - O_INTOP(0x0000001b)   // 27 (27)
0x000013DE: 0x8005            - O_CALL
0x000013E0: 0x801A            - O_POP
0x000013E2: 0xC001 0x00001458 - O_INTOP(0x00001458)   // 5208 (5208)
0x000013E8: 0x8004            - O_JMP
0x000013EA: 0xC001 0x000000d9 - O_INTOP(0x000000d9)   // 217 (217)
0x000013F0: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000013F6: 0x80C6            - O_SET_GLOBAL_VAR
0x000013F8: 0xC001 0x00001428 - O_INTOP(0x00001428)   // 5160 (5160)
0x000013FE: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x00001404: 0x80C5            - O_GLOBAL_VAR
0x00001406: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000140C: 0x8033            - O_EQUAL
0x0000140E: 0x802F            - O_IF
0x00001410: 0xC001 0x00001426 - O_INTOP(0x00001426)   // 5158 (5158)
0x00001416: 0x800D            - O_D_TO_A
0x00001418: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000141E: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001424: 0x8005            - O_CALL
0x00001426: 0x801A            - O_POP
0x00001428: 0xC001 0x00001458 - O_INTOP(0x00001458)   // 5208 (5208)
0x0000142E: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x00001434: 0x80C5            - O_GLOBAL_VAR
0x00001436: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000143C: 0x8033            - O_EQUAL
0x0000143E: 0x802F            - O_IF
0x00001440: 0xC001 0x00001456 - O_INTOP(0x00001456)   // 5206 (5206)
0x00001446: 0x800D            - O_D_TO_A
0x00001448: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000144E: 0xC001 0x0000001d - O_INTOP(0x0000001d)   // 29 (29)
0x00001454: 0x8005            - O_CALL
0x00001456: 0x801A            - O_POP
0x00001458: 0x811D            - O_GSAY_END
0x0000145A: 0x80DF            - O_END_DIALOGUE
0x0000145C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001462: 0x800D            - O_D_TO_A
0x00001464: 0x8019            - O_SWAPA
0x00001466: 0x802A            - O_POP_TO_BASE
0x00001468: 0x8029            - O_POP_BASE
0x0000146A: 0x800C            - O_A_TO_D
0x0000146C: 0x801C            - O_POP_RETURN
0x0000146E: 0x802A            - O_POP_TO_BASE
0x00001470: 0x8029            - O_POP_BASE
0x00001472: 0x801C            - O_POP_RETURN

3: tandi00 (0x00001474)
===============================
0x00001474: 0x802B            - O_PUSH_BASE
0x00001476: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x0000147C: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001482: 0xC001 0x00000065 - O_INTOP(0x00000065)   // 101 (101)
0x00001488: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x0000148E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001494: 0x8121            - O_GIQ_OPTION
0x00001496: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000149C: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x000014A2: 0xC001 0x00000066 - O_INTOP(0x00000066)   // 102 (102)
0x000014A8: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000014AE: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000014B4: 0x8121            - O_GIQ_OPTION
0x000014B6: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000014BC: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x000014C2: 0xC001 0x00000067 - O_INTOP(0x00000067)   // 103 (103)
0x000014C8: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x000014CE: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000014D4: 0x8121            - O_GIQ_OPTION
0x000014D6: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000014DC: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x000014E2: 0xC001 0x00000068 - O_INTOP(0x00000068)   // 104 (104)
0x000014E8: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x000014EE: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000014F4: 0x8121            - O_GIQ_OPTION
0x000014F6: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000014FC: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001502: 0xC001 0x00000069 - O_INTOP(0x00000069)   // 105 (105)
0x00001508: 0xC001 0x00000017 - O_INTOP(0x00000017)   // 23 (23)
0x0000150E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001514: 0x8121            - O_GIQ_OPTION
0x00001516: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000151C: 0x800D            - O_D_TO_A
0x0000151E: 0x8019            - O_SWAPA
0x00001520: 0x802A            - O_POP_TO_BASE
0x00001522: 0x8029            - O_POP_BASE
0x00001524: 0x800C            - O_A_TO_D
0x00001526: 0x801C            - O_POP_RETURN
0x00001528: 0x802A            - O_POP_TO_BASE
0x0000152A: 0x8029            - O_POP_BASE
0x0000152C: 0x801C            - O_POP_RETURN

4: tandi00_1 (0x0000152e)
===============================
0x0000152E: 0x802B            - O_PUSH_BASE
0x00001530: 0xC001 0x00001568 - O_INTOP(0x00001568)   // 5480 (5480)
0x00001536: 0xC001 0x0000002b - O_INTOP(0x0000002b)   // 43 (43)
0x0000153C: 0x80C5            - O_GLOBAL_VAR
0x0000153E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001544: 0x8033            - O_EQUAL
0x00001546: 0x802F            - O_IF
0x00001548: 0xC001 0x0000155e - O_INTOP(0x0000155e)   // 5470 (5470)
0x0000154E: 0x800D            - O_D_TO_A
0x00001550: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001556: 0xC001 0x00000011 - O_INTOP(0x00000011)   // 17 (17)
0x0000155C: 0x8005            - O_CALL
0x0000155E: 0x801A            - O_POP
0x00001560: 0xC001 0x000015b8 - O_INTOP(0x000015b8)   // 5560 (5560)
0x00001566: 0x8004            - O_JMP
0x00001568: 0xC001 0x000015a0 - O_INTOP(0x000015a0)   // 5536 (5536)
0x0000156E: 0xC001 0x0000002b - O_INTOP(0x0000002b)   // 43 (43)
0x00001574: 0x80C5            - O_GLOBAL_VAR
0x00001576: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x0000157C: 0x8033            - O_EQUAL
0x0000157E: 0x802F            - O_IF
0x00001580: 0xC001 0x00001596 - O_INTOP(0x00001596)   // 5526 (5526)
0x00001586: 0x800D            - O_D_TO_A
0x00001588: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000158E: 0xC001 0x00000012 - O_INTOP(0x00000012)   // 18 (18)
0x00001594: 0x8005            - O_CALL
0x00001596: 0x801A            - O_POP
0x00001598: 0xC001 0x000015b8 - O_INTOP(0x000015b8)   // 5560 (5560)
0x0000159E: 0x8004            - O_JMP
0x000015A0: 0xC001 0x000015b6 - O_INTOP(0x000015b6)   // 5558 (5558)
0x000015A6: 0x800D            - O_D_TO_A
0x000015A8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000015AE: 0xC001 0x00000013 - O_INTOP(0x00000013)   // 19 (19)
0x000015B4: 0x8005            - O_CALL
0x000015B6: 0x801A            - O_POP
0x000015B8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000015BE: 0x800D            - O_D_TO_A
0x000015C0: 0x8019            - O_SWAPA
0x000015C2: 0x802A            - O_POP_TO_BASE
0x000015C4: 0x8029            - O_POP_BASE
0x000015C6: 0x800C            - O_A_TO_D
0x000015C8: 0x801C            - O_POP_RETURN
0x000015CA: 0x802A            - O_POP_TO_BASE
0x000015CC: 0x8029            - O_POP_BASE
0x000015CE: 0x801C            - O_POP_RETURN

5: tandi01 (0x000015d0)
===============================
0x000015D0: 0x802B            - O_PUSH_BASE
0x000015D2: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x000015D8: 0xC001 0x0000006a - O_INTOP(0x0000006a)   // 106 (106)
0x000015DE: 0x811E            - O_GSAY_REPLY
0x000015E0: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000015E6: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x000015EC: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x000015F2: 0xC001 0x0000006b - O_INTOP(0x0000006b)   // 107 (107)
0x000015F8: 0x8105            - O_MESSAGE_STR
0x000015FA: 0x80BF            - O_DUDE_OBJ
0x000015FC: 0x8100            - O_OBJ_PID
0x000015FE: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001604: 0x8104            - O_PROTO_DATA
0x00001606: 0x8039            - O_ADD
0x00001608: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x0000160E: 0xC001 0x0000006c - O_INTOP(0x0000006c)   // 108 (108)
0x00001614: 0x8105            - O_MESSAGE_STR
0x00001616: 0x8039            - O_ADD
0x00001618: 0xC001 0x00000007 - O_INTOP(0x00000007)   // 7 (7)
0x0000161E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001624: 0x8121            - O_GIQ_OPTION
0x00001626: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000162C: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001632: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001638: 0xC001 0x0000006d - O_INTOP(0x0000006d)   // 109 (109)
0x0000163E: 0x8105            - O_MESSAGE_STR
0x00001640: 0x80BF            - O_DUDE_OBJ
0x00001642: 0x8100            - O_OBJ_PID
0x00001644: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000164A: 0x8104            - O_PROTO_DATA
0x0000164C: 0x8039            - O_ADD
0x0000164E: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001654: 0xC001 0x0000006e - O_INTOP(0x0000006e)   // 110 (110)
0x0000165A: 0x8105            - O_MESSAGE_STR
0x0000165C: 0x8039            - O_ADD
0x0000165E: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00001664: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x0000166A: 0x8121            - O_GIQ_OPTION
0x0000166C: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001672: 0x8046            - O_NEGATE
0x00001674: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x0000167A: 0xC001 0x0000006f - O_INTOP(0x0000006f)   // 111 (111)
0x00001680: 0xC001 0x00000018 - O_INTOP(0x00000018)   // 24 (24)
0x00001686: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000168C: 0x8121            - O_GIQ_OPTION
0x0000168E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001694: 0x800D            - O_D_TO_A
0x00001696: 0x8019            - O_SWAPA
0x00001698: 0x802A            - O_POP_TO_BASE
0x0000169A: 0x8029            - O_POP_BASE
0x0000169C: 0x800C            - O_A_TO_D
0x0000169E: 0x801C            - O_POP_RETURN
0x000016A0: 0x802A            - O_POP_TO_BASE
0x000016A2: 0x8029            - O_POP_BASE
0x000016A4: 0x801C            - O_POP_RETURN

6: tandi01a (0x000016a6)
===============================
0x000016A6: 0x802B            - O_PUSH_BASE
0x000016A8: 0xC001 0x000016be - O_INTOP(0x000016be)   // 5822 (5822)
0x000016AE: 0x800D            - O_D_TO_A
0x000016B0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000016B6: 0xC001 0x00000051 - O_INTOP(0x00000051)   // 81 (81)
0x000016BC: 0x8005            - O_CALL
0x000016BE: 0x801A            - O_POP
0x000016C0: 0xC001 0x000016d6 - O_INTOP(0x000016d6)   // 5846 (5846)
0x000016C6: 0x800D            - O_D_TO_A
0x000016C8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000016CE: 0xC001 0x00000007 - O_INTOP(0x00000007)   // 7 (7)
0x000016D4: 0x8005            - O_CALL
0x000016D6: 0x801A            - O_POP
0x000016D8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000016DE: 0x800D            - O_D_TO_A
0x000016E0: 0x8019            - O_SWAPA
0x000016E2: 0x802A            - O_POP_TO_BASE
0x000016E4: 0x8029            - O_POP_BASE
0x000016E6: 0x800C            - O_A_TO_D
0x000016E8: 0x801C            - O_POP_RETURN
0x000016EA: 0x802A            - O_POP_TO_BASE
0x000016EC: 0x8029            - O_POP_BASE
0x000016EE: 0x801C            - O_POP_RETURN

7: tandi02 (0x000016f0)
===============================
0x000016F0: 0x802B            - O_PUSH_BASE
0x000016F2: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x000016F8: 0xC001 0x00000070 - O_INTOP(0x00000070)   // 112 (112)
0x000016FE: 0x811E            - O_GSAY_REPLY
0x00001700: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001706: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x0000170C: 0xC001 0x00000071 - O_INTOP(0x00000071)   // 113 (113)
0x00001712: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x00001718: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000171E: 0x8121            - O_GIQ_OPTION
0x00001720: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001726: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x0000172C: 0xC001 0x00000072 - O_INTOP(0x00000072)   // 114 (114)
0x00001732: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x00001738: 0xC001 0x00000031 - O_INTOP(0x00000031)   // 49 (49)
0x0000173E: 0x8121            - O_GIQ_OPTION
0x00001740: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001746: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x0000174C: 0xC001 0x00000073 - O_INTOP(0x00000073)   // 115 (115)
0x00001752: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x00001758: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000175E: 0x8121            - O_GIQ_OPTION
0x00001760: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001766: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x0000176C: 0xC001 0x00000074 - O_INTOP(0x00000074)   // 116 (116)
0x00001772: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x00001778: 0xC001 0x00000031 - O_INTOP(0x00000031)   // 49 (49)
0x0000177E: 0x8121            - O_GIQ_OPTION
0x00001780: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001786: 0x800D            - O_D_TO_A
0x00001788: 0x8019            - O_SWAPA
0x0000178A: 0x802A            - O_POP_TO_BASE
0x0000178C: 0x8029            - O_POP_BASE
0x0000178E: 0x800C            - O_A_TO_D
0x00001790: 0x801C            - O_POP_RETURN
0x00001792: 0x802A            - O_POP_TO_BASE
0x00001794: 0x8029            - O_POP_BASE
0x00001796: 0x801C            - O_POP_RETURN

8: tandi03 (0x00001798)
===============================
0x00001798: 0x802B            - O_PUSH_BASE
0x0000179A: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x000017A0: 0xC001 0x00000075 - O_INTOP(0x00000075)   // 117 (117)
0x000017A6: 0x811E            - O_GSAY_REPLY
0x000017A8: 0xC001 0x000017be - O_INTOP(0x000017be)   // 6078 (6078)
0x000017AE: 0x800D            - O_D_TO_A
0x000017B0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000017B6: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000017BC: 0x8005            - O_CALL
0x000017BE: 0x801A            - O_POP
0x000017C0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000017C6: 0x800D            - O_D_TO_A
0x000017C8: 0x8019            - O_SWAPA
0x000017CA: 0x802A            - O_POP_TO_BASE
0x000017CC: 0x8029            - O_POP_BASE
0x000017CE: 0x800C            - O_A_TO_D
0x000017D0: 0x801C            - O_POP_RETURN
0x000017D2: 0x802A            - O_POP_TO_BASE
0x000017D4: 0x8029            - O_POP_BASE
0x000017D6: 0x801C            - O_POP_RETURN

9: tandi04 (0x000017d8)
===============================
0x000017D8: 0x802B            - O_PUSH_BASE
0x000017DA: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x000017E0: 0xC001 0x00000076 - O_INTOP(0x00000076)   // 118 (118)
0x000017E6: 0x811E            - O_GSAY_REPLY
0x000017E8: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000017EE: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x000017F4: 0xC001 0x00000077 - O_INTOP(0x00000077)   // 119 (119)
0x000017FA: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00001800: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001806: 0x8121            - O_GIQ_OPTION
0x00001808: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x0000180E: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001814: 0xC001 0x00000078 - O_INTOP(0x00000078)   // 120 (120)
0x0000181A: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00001820: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x00001826: 0x8121            - O_GIQ_OPTION
0x00001828: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000182E: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001834: 0xC001 0x00000079 - O_INTOP(0x00000079)   // 121 (121)
0x0000183A: 0xC001 0x0000000d - O_INTOP(0x0000000d)   // 13 (13)
0x00001840: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001846: 0x8121            - O_GIQ_OPTION
0x00001848: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000184E: 0x800D            - O_D_TO_A
0x00001850: 0x8019            - O_SWAPA
0x00001852: 0x802A            - O_POP_TO_BASE
0x00001854: 0x8029            - O_POP_BASE
0x00001856: 0x800C            - O_A_TO_D
0x00001858: 0x801C            - O_POP_RETURN
0x0000185A: 0x802A            - O_POP_TO_BASE
0x0000185C: 0x8029            - O_POP_BASE
0x0000185E: 0x801C            - O_POP_RETURN

10: tandi05 (0x00001860)
===============================
0x00001860: 0x802B            - O_PUSH_BASE
0x00001862: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001868: 0xC001 0x0000007a - O_INTOP(0x0000007a)   // 122 (122)
0x0000186E: 0x811E            - O_GSAY_REPLY
0x00001870: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001876: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x0000187C: 0xC001 0x0000007b - O_INTOP(0x0000007b)   // 123 (123)
0x00001882: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x00001888: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000188E: 0x8121            - O_GIQ_OPTION
0x00001890: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001896: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x0000189C: 0xC001 0x0000007c - O_INTOP(0x0000007c)   // 124 (124)
0x000018A2: 0xC001 0x00000017 - O_INTOP(0x00000017)   // 23 (23)
0x000018A8: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000018AE: 0x8121            - O_GIQ_OPTION
0x000018B0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000018B6: 0x800D            - O_D_TO_A
0x000018B8: 0x8019            - O_SWAPA
0x000018BA: 0x802A            - O_POP_TO_BASE
0x000018BC: 0x8029            - O_POP_BASE
0x000018BE: 0x800C            - O_A_TO_D
0x000018C0: 0x801C            - O_POP_RETURN
0x000018C2: 0x802A            - O_POP_TO_BASE
0x000018C4: 0x8029            - O_POP_BASE
0x000018C6: 0x801C            - O_POP_RETURN

11: tandi06 (0x000018c8)
===============================
0x000018C8: 0x802B            - O_PUSH_BASE
0x000018CA: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x000018D0: 0xC001 0x0000007d - O_INTOP(0x0000007d)   // 125 (125)
0x000018D6: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000018DC: 0x8120            - O_GSAY_MESSAGE
0x000018DE: 0xC001 0x000018f4 - O_INTOP(0x000018f4)   // 6388 (6388)
0x000018E4: 0x800D            - O_D_TO_A
0x000018E6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000018EC: 0xC001 0x00000042 - O_INTOP(0x00000042)   // 66 (66)
0x000018F2: 0x8005            - O_CALL
0x000018F4: 0x801A            - O_POP
0x000018F6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000018FC: 0x800D            - O_D_TO_A
0x000018FE: 0x8019            - O_SWAPA
0x00001900: 0x802A            - O_POP_TO_BASE
0x00001902: 0x8029            - O_POP_BASE
0x00001904: 0x800C            - O_A_TO_D
0x00001906: 0x801C            - O_POP_RETURN
0x00001908: 0x802A            - O_POP_TO_BASE
0x0000190A: 0x8029            - O_POP_BASE
0x0000190C: 0x801C            - O_POP_RETURN

12: tandi12 (0x0000190e)
===============================
0x0000190E: 0x802B            - O_PUSH_BASE
0x00001910: 0xC001 0x00001926 - O_INTOP(0x00001926)   // 6438 (6438)
0x00001916: 0x800D            - O_D_TO_A
0x00001918: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000191E: 0xC001 0x00000051 - O_INTOP(0x00000051)   // 81 (81)
0x00001924: 0x8005            - O_CALL
0x00001926: 0x801A            - O_POP
0x00001928: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x0000192E: 0xC001 0x0000007e - O_INTOP(0x0000007e)   // 126 (126)
0x00001934: 0x811E            - O_GSAY_REPLY
0x00001936: 0xC001 0x0000194c - O_INTOP(0x0000194c)   // 6476 (6476)
0x0000193C: 0x800D            - O_D_TO_A
0x0000193E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001944: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x0000194A: 0x8005            - O_CALL
0x0000194C: 0x801A            - O_POP
0x0000194E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001954: 0x800D            - O_D_TO_A
0x00001956: 0x8019            - O_SWAPA
0x00001958: 0x802A            - O_POP_TO_BASE
0x0000195A: 0x8029            - O_POP_BASE
0x0000195C: 0x800C            - O_A_TO_D
0x0000195E: 0x801C            - O_POP_RETURN
0x00001960: 0x802A            - O_POP_TO_BASE
0x00001962: 0x8029            - O_POP_BASE
0x00001964: 0x801C            - O_POP_RETURN

13: tandi13 (0x00001966)
===============================
0x00001966: 0x802B            - O_PUSH_BASE
0x00001968: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x0000196E: 0xC001 0x0000007f - O_INTOP(0x0000007f)   // 127 (127)
0x00001974: 0x811E            - O_GSAY_REPLY
0x00001976: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x0000197C: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001982: 0xC001 0x00000080 - O_INTOP(0x00000080)   // 128 (128)
0x00001988: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x0000198E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001994: 0x8121            - O_GIQ_OPTION
0x00001996: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000199C: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x000019A2: 0xC001 0x00000081 - O_INTOP(0x00000081)   // 129 (129)
0x000019A8: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x000019AE: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000019B4: 0x8121            - O_GIQ_OPTION
0x000019B6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000019BC: 0x800D            - O_D_TO_A
0x000019BE: 0x8019            - O_SWAPA
0x000019C0: 0x802A            - O_POP_TO_BASE
0x000019C2: 0x8029            - O_POP_BASE
0x000019C4: 0x800C            - O_A_TO_D
0x000019C6: 0x801C            - O_POP_RETURN
0x000019C8: 0x802A            - O_POP_TO_BASE
0x000019CA: 0x8029            - O_POP_BASE
0x000019CC: 0x801C            - O_POP_RETURN

14: tandi14 (0x000019ce)
===============================
0x000019CE: 0x802B            - O_PUSH_BASE
0x000019D0: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x000019D6: 0xC001 0x00000082 - O_INTOP(0x00000082)   // 130 (130)
0x000019DC: 0x811E            - O_GSAY_REPLY
0x000019DE: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000019E4: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x000019EA: 0xC001 0x00000083 - O_INTOP(0x00000083)   // 131 (131)
0x000019F0: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x000019F6: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000019FC: 0x8121            - O_GIQ_OPTION
0x000019FE: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001A04: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001A0A: 0xC001 0x00000084 - O_INTOP(0x00000084)   // 132 (132)
0x00001A10: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00001A16: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x00001A1C: 0x8121            - O_GIQ_OPTION
0x00001A1E: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001A24: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001A2A: 0xC001 0x00000085 - O_INTOP(0x00000085)   // 133 (133)
0x00001A30: 0xC001 0x0000000d - O_INTOP(0x0000000d)   // 13 (13)
0x00001A36: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001A3C: 0x8121            - O_GIQ_OPTION
0x00001A3E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001A44: 0x800D            - O_D_TO_A
0x00001A46: 0x8019            - O_SWAPA
0x00001A48: 0x802A            - O_POP_TO_BASE
0x00001A4A: 0x8029            - O_POP_BASE
0x00001A4C: 0x800C            - O_A_TO_D
0x00001A4E: 0x801C            - O_POP_RETURN
0x00001A50: 0x802A            - O_POP_TO_BASE
0x00001A52: 0x8029            - O_POP_BASE
0x00001A54: 0x801C            - O_POP_RETURN

15: tandi15 (0x00001a56)
===============================
0x00001A56: 0x802B            - O_PUSH_BASE
0x00001A58: 0xC001 0x00001aac - O_INTOP(0x00001aac)   // 6828 (6828)
0x00001A5E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001A64: 0x80C1            - O_LOCAL_VAR
0x00001A66: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001A6C: 0x8038            - O_GREATER
0x00001A6E: 0x802F            - O_IF
0x00001A70: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001A76: 0xC001 0x00000086 - O_INTOP(0x00000086)   // 134 (134)
0x00001A7C: 0x811E            - O_GSAY_REPLY
0x00001A7E: 0xC001 0x00001aa4 - O_INTOP(0x00001aa4)   // 6820 (6820)
0x00001A84: 0xC001 0x00000047 - O_INTOP(0x00000047)   // 71 (71)
0x00001A8A: 0x80C5            - O_GLOBAL_VAR
0x00001A8C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001A92: 0x8033            - O_EQUAL
0x00001A94: 0x802F            - O_IF
0x00001A96: 0xC001 0x00000047 - O_INTOP(0x00000047)   // 71 (71)
0x00001A9C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001AA2: 0x80C6            - O_SET_GLOBAL_VAR
0x00001AA4: 0xC001 0x00001aba - O_INTOP(0x00001aba)   // 6842 (6842)
0x00001AAA: 0x8004            - O_JMP
0x00001AAC: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001AB2: 0xC001 0x00000087 - O_INTOP(0x00000087)   // 135 (135)
0x00001AB8: 0x811E            - O_GSAY_REPLY
0x00001ABA: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001AC0: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001AC6: 0xC001 0x00000088 - O_INTOP(0x00000088)   // 136 (136)
0x00001ACC: 0xC001 0x00000010 - O_INTOP(0x00000010)   // 16 (16)
0x00001AD2: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001AD8: 0x8121            - O_GIQ_OPTION
0x00001ADA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001AE0: 0x800D            - O_D_TO_A
0x00001AE2: 0x8019            - O_SWAPA
0x00001AE4: 0x802A            - O_POP_TO_BASE
0x00001AE6: 0x8029            - O_POP_BASE
0x00001AE8: 0x800C            - O_A_TO_D
0x00001AEA: 0x801C            - O_POP_RETURN
0x00001AEC: 0x802A            - O_POP_TO_BASE
0x00001AEE: 0x8029            - O_POP_BASE
0x00001AF0: 0x801C            - O_POP_RETURN

16: tandi16 (0x00001af2)
===============================
0x00001AF2: 0x802B            - O_PUSH_BASE
0x00001AF4: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001AFA: 0xC001 0x00000089 - O_INTOP(0x00000089)   // 137 (137)
0x00001B00: 0x811E            - O_GSAY_REPLY
0x00001B02: 0xC001 0x00001b18 - O_INTOP(0x00001b18)   // 6936 (6936)
0x00001B08: 0x800D            - O_D_TO_A
0x00001B0A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001B10: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001B16: 0x8005            - O_CALL
0x00001B18: 0x801A            - O_POP
0x00001B1A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001B20: 0x800D            - O_D_TO_A
0x00001B22: 0x8019            - O_SWAPA
0x00001B24: 0x802A            - O_POP_TO_BASE
0x00001B26: 0x8029            - O_POP_BASE
0x00001B28: 0x800C            - O_A_TO_D
0x00001B2A: 0x801C            - O_POP_RETURN
0x00001B2C: 0x802A            - O_POP_TO_BASE
0x00001B2E: 0x8029            - O_POP_BASE
0x00001B30: 0x801C            - O_POP_RETURN

17: tandi20 (0x00001b32)
===============================
0x00001B32: 0x802B            - O_PUSH_BASE
0x00001B34: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001B3A: 0xC001 0x0000008a - O_INTOP(0x0000008a)   // 138 (138)
0x00001B40: 0x811E            - O_GSAY_REPLY
0x00001B42: 0xC001 0x00001b58 - O_INTOP(0x00001b58)   // 7000 (7000)
0x00001B48: 0x800D            - O_D_TO_A
0x00001B4A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001B50: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001B56: 0x8005            - O_CALL
0x00001B58: 0x801A            - O_POP
0x00001B5A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001B60: 0x800D            - O_D_TO_A
0x00001B62: 0x8019            - O_SWAPA
0x00001B64: 0x802A            - O_POP_TO_BASE
0x00001B66: 0x8029            - O_POP_BASE
0x00001B68: 0x800C            - O_A_TO_D
0x00001B6A: 0x801C            - O_POP_RETURN
0x00001B6C: 0x802A            - O_POP_TO_BASE
0x00001B6E: 0x8029            - O_POP_BASE
0x00001B70: 0x801C            - O_POP_RETURN

18: tandi21 (0x00001b72)
===============================
0x00001B72: 0x802B            - O_PUSH_BASE
0x00001B74: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001B7A: 0xC001 0x0000008b - O_INTOP(0x0000008b)   // 139 (139)
0x00001B80: 0x811E            - O_GSAY_REPLY
0x00001B82: 0xC001 0x00001b98 - O_INTOP(0x00001b98)   // 7064 (7064)
0x00001B88: 0x800D            - O_D_TO_A
0x00001B8A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001B90: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001B96: 0x8005            - O_CALL
0x00001B98: 0x801A            - O_POP
0x00001B9A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001BA0: 0x800D            - O_D_TO_A
0x00001BA2: 0x8019            - O_SWAPA
0x00001BA4: 0x802A            - O_POP_TO_BASE
0x00001BA6: 0x8029            - O_POP_BASE
0x00001BA8: 0x800C            - O_A_TO_D
0x00001BAA: 0x801C            - O_POP_RETURN
0x00001BAC: 0x802A            - O_POP_TO_BASE
0x00001BAE: 0x8029            - O_POP_BASE
0x00001BB0: 0x801C            - O_POP_RETURN

19: tandi22 (0x00001bb2)
===============================
0x00001BB2: 0x802B            - O_PUSH_BASE
0x00001BB4: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001BBA: 0xC001 0x0000008c - O_INTOP(0x0000008c)   // 140 (140)
0x00001BC0: 0x811E            - O_GSAY_REPLY
0x00001BC2: 0xC001 0x00001bd8 - O_INTOP(0x00001bd8)   // 7128 (7128)
0x00001BC8: 0x800D            - O_D_TO_A
0x00001BCA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001BD0: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001BD6: 0x8005            - O_CALL
0x00001BD8: 0x801A            - O_POP
0x00001BDA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001BE0: 0x800D            - O_D_TO_A
0x00001BE2: 0x8019            - O_SWAPA
0x00001BE4: 0x802A            - O_POP_TO_BASE
0x00001BE6: 0x8029            - O_POP_BASE
0x00001BE8: 0x800C            - O_A_TO_D
0x00001BEA: 0x801C            - O_POP_RETURN
0x00001BEC: 0x802A            - O_POP_TO_BASE
0x00001BEE: 0x8029            - O_POP_BASE
0x00001BF0: 0x801C            - O_POP_RETURN

20: tandi23 (0x00001bf2)
===============================
0x00001BF2: 0x802B            - O_PUSH_BASE
0x00001BF4: 0xC001 0x00001c22 - O_INTOP(0x00001c22)   // 7202 (7202)
0x00001BFA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001C00: 0x80C1            - O_LOCAL_VAR
0x00001C02: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001C08: 0x8038            - O_GREATER
0x00001C0A: 0x802F            - O_IF
0x00001C0C: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001C12: 0xC001 0x0000008d - O_INTOP(0x0000008d)   // 141 (141)
0x00001C18: 0x811E            - O_GSAY_REPLY
0x00001C1A: 0xC001 0x00001c30 - O_INTOP(0x00001c30)   // 7216 (7216)
0x00001C20: 0x8004            - O_JMP
0x00001C22: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001C28: 0xC001 0x0000008e - O_INTOP(0x0000008e)   // 142 (142)
0x00001C2E: 0x811E            - O_GSAY_REPLY
0x00001C30: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001C36: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001C3C: 0xC001 0x0000008f - O_INTOP(0x0000008f)   // 143 (143)
0x00001C42: 0xC001 0x00000010 - O_INTOP(0x00000010)   // 16 (16)
0x00001C48: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001C4E: 0x8121            - O_GIQ_OPTION
0x00001C50: 0xC001 0x00001c88 - O_INTOP(0x00001c88)   // 7304 (7304)
0x00001C56: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001C5C: 0x80C1            - O_LOCAL_VAR
0x00001C5E: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001C64: 0x8038            - O_GREATER
0x00001C66: 0x802F            - O_IF
0x00001C68: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001C6E: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001C74: 0xC001 0x00000090 - O_INTOP(0x00000090)   // 144 (144)
0x00001C7A: 0xC001 0x00000030 - O_INTOP(0x00000030)   // 48 (48)
0x00001C80: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001C86: 0x8121            - O_GIQ_OPTION
0x00001C88: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001C8E: 0x800D            - O_D_TO_A
0x00001C90: 0x8019            - O_SWAPA
0x00001C92: 0x802A            - O_POP_TO_BASE
0x00001C94: 0x8029            - O_POP_BASE
0x00001C96: 0x800C            - O_A_TO_D
0x00001C98: 0x801C            - O_POP_RETURN
0x00001C9A: 0x802A            - O_POP_TO_BASE
0x00001C9C: 0x8029            - O_POP_BASE
0x00001C9E: 0x801C            - O_POP_RETURN

21: tandi24 (0x00001ca0)
===============================
0x00001CA0: 0x802B            - O_PUSH_BASE
0x00001CA2: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001CA8: 0xC001 0x00000091 - O_INTOP(0x00000091)   // 145 (145)
0x00001CAE: 0x811E            - O_GSAY_REPLY
0x00001CB0: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001CB6: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001CBC: 0xC001 0x00000092 - O_INTOP(0x00000092)   // 146 (146)
0x00001CC2: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00001CC8: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001CCE: 0x8121            - O_GIQ_OPTION
0x00001CD0: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001CD6: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001CDC: 0xC001 0x00000093 - O_INTOP(0x00000093)   // 147 (147)
0x00001CE2: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00001CE8: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x00001CEE: 0x8121            - O_GIQ_OPTION
0x00001CF0: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001CF6: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001CFC: 0xC001 0x00000094 - O_INTOP(0x00000094)   // 148 (148)
0x00001D02: 0xC001 0x0000000d - O_INTOP(0x0000000d)   // 13 (13)
0x00001D08: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001D0E: 0x8121            - O_GIQ_OPTION
0x00001D10: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001D16: 0x800D            - O_D_TO_A
0x00001D18: 0x8019            - O_SWAPA
0x00001D1A: 0x802A            - O_POP_TO_BASE
0x00001D1C: 0x8029            - O_POP_BASE
0x00001D1E: 0x800C            - O_A_TO_D
0x00001D20: 0x801C            - O_POP_RETURN
0x00001D22: 0x802A            - O_POP_TO_BASE
0x00001D24: 0x8029            - O_POP_BASE
0x00001D26: 0x801C            - O_POP_RETURN

22: tandi27 (0x00001d28)
===============================
0x00001D28: 0x802B            - O_PUSH_BASE
0x00001D2A: 0xC001 0x00001d60 - O_INTOP(0x00001d60)   // 7520 (7520)
0x00001D30: 0x80BF            - O_DUDE_OBJ
0x00001D32: 0xC001 0x00000022 - O_INTOP(0x00000022)   // 34 (34)
0x00001D38: 0x80CA            - O_GET_CRITTER_STAT
0x00001D3A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001D40: 0x8033            - O_EQUAL
0x00001D42: 0x802F            - O_IF
0x00001D44: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001D4A: 0xC001 0x00000095 - O_INTOP(0x00000095)   // 149 (149)
0x00001D50: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x00001D56: 0x8120            - O_GSAY_MESSAGE
0x00001D58: 0xC001 0x00001d74 - O_INTOP(0x00001d74)   // 7540 (7540)
0x00001D5E: 0x8004            - O_JMP
0x00001D60: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001D66: 0xC001 0x00000096 - O_INTOP(0x00000096)   // 150 (150)
0x00001D6C: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x00001D72: 0x8120            - O_GSAY_MESSAGE
0x00001D74: 0xC001 0x00001d8a - O_INTOP(0x00001d8a)   // 7562 (7562)
0x00001D7A: 0x800D            - O_D_TO_A
0x00001D7C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001D82: 0xC001 0x00000042 - O_INTOP(0x00000042)   // 66 (66)
0x00001D88: 0x8005            - O_CALL
0x00001D8A: 0x801A            - O_POP
0x00001D8C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001D92: 0x800D            - O_D_TO_A
0x00001D94: 0x8019            - O_SWAPA
0x00001D96: 0x802A            - O_POP_TO_BASE
0x00001D98: 0x8029            - O_POP_BASE
0x00001D9A: 0x800C            - O_A_TO_D
0x00001D9C: 0x801C            - O_POP_RETURN
0x00001D9E: 0x802A            - O_POP_TO_BASE
0x00001DA0: 0x8029            - O_POP_BASE
0x00001DA2: 0x801C            - O_POP_RETURN

23: tandi28 (0x00001da4)
===============================
0x00001DA4: 0x802B            - O_PUSH_BASE
0x00001DA6: 0xC001 0x00001e02 - O_INTOP(0x00001e02)   // 7682 (7682)
0x00001DAC: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001DB2: 0x8012            - O_FETCH_GLOBAL
0x00001DB4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001DBA: 0x8037            - O_LESS
0x00001DBC: 0x802F            - O_IF
0x00001DBE: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001DC4: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001DCA: 0x8013            - O_STORE_GLOBAL
0x00001DCC: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001DD2: 0xC001 0x00000097 - O_INTOP(0x00000097)   // 151 (151)
0x00001DD8: 0x811E            - O_GSAY_REPLY
0x00001DDA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001DE0: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001DE6: 0xC001 0x00000098 - O_INTOP(0x00000098)   // 152 (152)
0x00001DEC: 0xC001 0x0000003f - O_INTOP(0x0000003f)   // 63 (63)
0x00001DF2: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001DF8: 0x8121            - O_GIQ_OPTION
0x00001DFA: 0xC001 0x00001e1a - O_INTOP(0x00001e1a)   // 7706 (7706)
0x00001E00: 0x8004            - O_JMP
0x00001E02: 0xC001 0x00001e18 - O_INTOP(0x00001e18)   // 7704 (7704)
0x00001E08: 0x800D            - O_D_TO_A
0x00001E0A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001E10: 0xC001 0x0000003f - O_INTOP(0x0000003f)   // 63 (63)
0x00001E16: 0x8005            - O_CALL
0x00001E18: 0x801A            - O_POP
0x00001E1A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001E20: 0x800D            - O_D_TO_A
0x00001E22: 0x8019            - O_SWAPA
0x00001E24: 0x802A            - O_POP_TO_BASE
0x00001E26: 0x8029            - O_POP_BASE
0x00001E28: 0x800C            - O_A_TO_D
0x00001E2A: 0x801C            - O_POP_RETURN
0x00001E2C: 0x802A            - O_POP_TO_BASE
0x00001E2E: 0x8029            - O_POP_BASE
0x00001E30: 0x801C            - O_POP_RETURN

24: tandi29 (0x00001e32)
===============================
0x00001E32: 0x802B            - O_PUSH_BASE
0x00001E34: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001E3A: 0xC001 0x00000099 - O_INTOP(0x00000099)   // 153 (153)
0x00001E40: 0x811E            - O_GSAY_REPLY
0x00001E42: 0xC001 0x00001e58 - O_INTOP(0x00001e58)   // 7768 (7768)
0x00001E48: 0x800D            - O_D_TO_A
0x00001E4A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001E50: 0xC001 0x00000042 - O_INTOP(0x00000042)   // 66 (66)
0x00001E56: 0x8005            - O_CALL
0x00001E58: 0x801A            - O_POP
0x00001E5A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001E60: 0x800D            - O_D_TO_A
0x00001E62: 0x8019            - O_SWAPA
0x00001E64: 0x802A            - O_POP_TO_BASE
0x00001E66: 0x8029            - O_POP_BASE
0x00001E68: 0x800C            - O_A_TO_D
0x00001E6A: 0x801C            - O_POP_RETURN
0x00001E6C: 0x802A            - O_POP_TO_BASE
0x00001E6E: 0x8029            - O_POP_BASE
0x00001E70: 0x801C            - O_POP_RETURN

25: tandi30 (0x00001e72)
===============================
0x00001E72: 0x802B            - O_PUSH_BASE
0x00001E74: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001E7A: 0xC001 0x0000009a - O_INTOP(0x0000009a)   // 154 (154)
0x00001E80: 0x811E            - O_GSAY_REPLY
0x00001E82: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001E88: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001E8E: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00001E94: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x00001E9A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001EA0: 0x8121            - O_GIQ_OPTION
0x00001EA2: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001EA8: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001EAE: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x00001EB4: 0xC001 0x00000017 - O_INTOP(0x00000017)   // 23 (23)
0x00001EBA: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001EC0: 0x8121            - O_GIQ_OPTION
0x00001EC2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001EC8: 0x800D            - O_D_TO_A
0x00001ECA: 0x8019            - O_SWAPA
0x00001ECC: 0x802A            - O_POP_TO_BASE
0x00001ECE: 0x8029            - O_POP_BASE
0x00001ED0: 0x800C            - O_A_TO_D
0x00001ED2: 0x801C            - O_POP_RETURN
0x00001ED4: 0x802A            - O_POP_TO_BASE
0x00001ED6: 0x8029            - O_POP_BASE
0x00001ED8: 0x801C            - O_POP_RETURN

26: tandi35 (0x00001eda)
===============================
0x00001EDA: 0x802B            - O_PUSH_BASE
0x00001EDC: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001EE2: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x00001EE8: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001EEE: 0x8120            - O_GSAY_MESSAGE
0x00001EF0: 0xC001 0x00001f06 - O_INTOP(0x00001f06)   // 7942 (7942)
0x00001EF6: 0x800D            - O_D_TO_A
0x00001EF8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001EFE: 0xC001 0x0000003f - O_INTOP(0x0000003f)   // 63 (63)
0x00001F04: 0x8005            - O_CALL
0x00001F06: 0x801A            - O_POP
0x00001F08: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001F0E: 0x800D            - O_D_TO_A
0x00001F10: 0x8019            - O_SWAPA
0x00001F12: 0x802A            - O_POP_TO_BASE
0x00001F14: 0x8029            - O_POP_BASE
0x00001F16: 0x800C            - O_A_TO_D
0x00001F18: 0x801C            - O_POP_RETURN
0x00001F1A: 0x802A            - O_POP_TO_BASE
0x00001F1C: 0x8029            - O_POP_BASE
0x00001F1E: 0x801C            - O_POP_RETURN

27: tandi36 (0x00001f20)
===============================
0x00001F20: 0x802B            - O_PUSH_BASE
0x00001F22: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001F28: 0xC001 0x0000009e - O_INTOP(0x0000009e)   // 158 (158)
0x00001F2E: 0x811E            - O_GSAY_REPLY
0x00001F30: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001F36: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001F3C: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00001F42: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x00001F48: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001F4E: 0x8121            - O_GIQ_OPTION
0x00001F50: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00001F56: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001F5C: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00001F62: 0xC001 0x0000001c - O_INTOP(0x0000001c)   // 28 (28)
0x00001F68: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x00001F6E: 0x8121            - O_GIQ_OPTION
0x00001F70: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001F76: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001F7C: 0xC001 0x000000a1 - O_INTOP(0x000000a1)   // 161 (161)
0x00001F82: 0xC001 0x00000017 - O_INTOP(0x00000017)   // 23 (23)
0x00001F88: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001F8E: 0x8121            - O_GIQ_OPTION
0x00001F90: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001F96: 0x8046            - O_NEGATE
0x00001F98: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00001F9E: 0xC001 0x000000a2 - O_INTOP(0x000000a2)   // 162 (162)
0x00001FA4: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x00001FAA: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001FB0: 0x8121            - O_GIQ_OPTION
0x00001FB2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001FB8: 0x800D            - O_D_TO_A
0x00001FBA: 0x8019            - O_SWAPA
0x00001FBC: 0x802A            - O_POP_TO_BASE
0x00001FBE: 0x8029            - O_POP_BASE
0x00001FC0: 0x800C            - O_A_TO_D
0x00001FC2: 0x801C            - O_POP_RETURN
0x00001FC4: 0x802A            - O_POP_TO_BASE
0x00001FC6: 0x8029            - O_POP_BASE
0x00001FC8: 0x801C            - O_POP_RETURN

28: tandi36a (0x00001fca)
===============================
0x00001FCA: 0x802B            - O_PUSH_BASE
0x00001FCC: 0xC001 0x00001fe2 - O_INTOP(0x00001fe2)   // 8162 (8162)
0x00001FD2: 0x800D            - O_D_TO_A
0x00001FD4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001FDA: 0xC001 0x00000052 - O_INTOP(0x00000052)   // 82 (82)
0x00001FE0: 0x8005            - O_CALL
0x00001FE2: 0x801A            - O_POP
0x00001FE4: 0xC001 0x00001ffa - O_INTOP(0x00001ffa)   // 8186 (8186)
0x00001FEA: 0x800D            - O_D_TO_A
0x00001FEC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001FF2: 0xC001 0x00000016 - O_INTOP(0x00000016)   // 22 (22)
0x00001FF8: 0x8005            - O_CALL
0x00001FFA: 0x801A            - O_POP
0x00001FFC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002002: 0x800D            - O_D_TO_A
0x00002004: 0x8019            - O_SWAPA
0x00002006: 0x802A            - O_POP_TO_BASE
0x00002008: 0x8029            - O_POP_BASE
0x0000200A: 0x800C            - O_A_TO_D
0x0000200C: 0x801C            - O_POP_RETURN
0x0000200E: 0x802A            - O_POP_TO_BASE
0x00002010: 0x8029            - O_POP_BASE
0x00002012: 0x801C            - O_POP_RETURN

29: tandi37 (0x00002014)
===============================
0x00002014: 0x802B            - O_PUSH_BASE
0x00002016: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x0000201C: 0xC001 0x000000a3 - O_INTOP(0x000000a3)   // 163 (163)
0x00002022: 0x811E            - O_GSAY_REPLY
0x00002024: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000202A: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00002030: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00002036: 0xC001 0x000000a4 - O_INTOP(0x000000a4)   // 164 (164)
0x0000203C: 0x8105            - O_MESSAGE_STR
0x0000203E: 0x80BF            - O_DUDE_OBJ
0x00002040: 0x8100            - O_OBJ_PID
0x00002042: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002048: 0x8104            - O_PROTO_DATA
0x0000204A: 0x8039            - O_ADD
0x0000204C: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00002052: 0xC001 0x000000a5 - O_INTOP(0x000000a5)   // 165 (165)
0x00002058: 0x8105            - O_MESSAGE_STR
0x0000205A: 0x8039            - O_ADD
0x0000205C: 0xC001 0x0000001e - O_INTOP(0x0000001e)   // 30 (30)
0x00002062: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002068: 0x8121            - O_GIQ_OPTION
0x0000206A: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00002070: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00002076: 0xC001 0x000000a6 - O_INTOP(0x000000a6)   // 166 (166)
0x0000207C: 0xC001 0x00000024 - O_INTOP(0x00000024)   // 36 (36)
0x00002082: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002088: 0x8121            - O_GIQ_OPTION
0x0000208A: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00002090: 0x8046            - O_NEGATE
0x00002092: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00002098: 0xC001 0x000000a7 - O_INTOP(0x000000a7)   // 167 (167)
0x0000209E: 0xC001 0x00000026 - O_INTOP(0x00000026)   // 38 (38)
0x000020A4: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000020AA: 0x8121            - O_GIQ_OPTION
0x000020AC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000020B2: 0x800D            - O_D_TO_A
0x000020B4: 0x8019            - O_SWAPA
0x000020B6: 0x802A            - O_POP_TO_BASE
0x000020B8: 0x8029            - O_POP_BASE
0x000020BA: 0x800C            - O_A_TO_D
0x000020BC: 0x801C            - O_POP_RETURN
0x000020BE: 0x802A            - O_POP_TO_BASE
0x000020C0: 0x8029            - O_POP_BASE
0x000020C2: 0x801C            - O_POP_RETURN

30: tandi38 (0x000020c4)
===============================
0x000020C4: 0x802B            - O_PUSH_BASE
0x000020C6: 0xC001 0x000020fe - O_INTOP(0x000020fe)   // 8446 (8446)
0x000020CC: 0xC001 0x00000072 - O_INTOP(0x00000072)   // 114 (114)
0x000020D2: 0x80C5            - O_GLOBAL_VAR
0x000020D4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000020DA: 0x8033            - O_EQUAL
0x000020DC: 0x802F            - O_IF
0x000020DE: 0xC001 0x000020f4 - O_INTOP(0x000020f4)   // 8436 (8436)
0x000020E4: 0x800D            - O_D_TO_A
0x000020E6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000020EC: 0xC001 0x0000001f - O_INTOP(0x0000001f)   // 31 (31)
0x000020F2: 0x8005            - O_CALL
0x000020F4: 0x801A            - O_POP
0x000020F6: 0xC001 0x00002116 - O_INTOP(0x00002116)   // 8470 (8470)
0x000020FC: 0x8004            - O_JMP
0x000020FE: 0xC001 0x00002114 - O_INTOP(0x00002114)   // 8468 (8468)
0x00002104: 0x800D            - O_D_TO_A
0x00002106: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000210C: 0xC001 0x00000020 - O_INTOP(0x00000020)   // 32 (32)
0x00002112: 0x8005            - O_CALL
0x00002114: 0x801A            - O_POP
0x00002116: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000211C: 0x800D            - O_D_TO_A
0x0000211E: 0x8019            - O_SWAPA
0x00002120: 0x802A            - O_POP_TO_BASE
0x00002122: 0x8029            - O_POP_BASE
0x00002124: 0x800C            - O_A_TO_D
0x00002126: 0x801C            - O_POP_RETURN
0x00002128: 0x802A            - O_POP_TO_BASE
0x0000212A: 0x8029            - O_POP_BASE
0x0000212C: 0x801C            - O_POP_RETURN

31: tandi38a (0x0000212e)
===============================
0x0000212E: 0x802B            - O_PUSH_BASE
0x00002130: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00002136: 0xC001 0x000000a8 - O_INTOP(0x000000a8)   // 168 (168)
0x0000213C: 0x811E            - O_GSAY_REPLY
0x0000213E: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002144: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x0000214A: 0xC001 0x000000a9 - O_INTOP(0x000000a9)   // 169 (169)
0x00002150: 0xC001 0x00000046 - O_INTOP(0x00000046)   // 70 (70)
0x00002156: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000215C: 0x8121            - O_GIQ_OPTION
0x0000215E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002164: 0x800D            - O_D_TO_A
0x00002166: 0x8019            - O_SWAPA
0x00002168: 0x802A            - O_POP_TO_BASE
0x0000216A: 0x8029            - O_POP_BASE
0x0000216C: 0x800C            - O_A_TO_D
0x0000216E: 0x801C            - O_POP_RETURN
0x00002170: 0x802A            - O_POP_TO_BASE
0x00002172: 0x8029            - O_POP_BASE
0x00002174: 0x801C            - O_POP_RETURN

32: tandi38b (0x00002176)
===============================
0x00002176: 0x802B            - O_PUSH_BASE
0x00002178: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x0000217E: 0xC001 0x000000a8 - O_INTOP(0x000000a8)   // 168 (168)
0x00002184: 0x811E            - O_GSAY_REPLY
0x00002186: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000218C: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00002192: 0xC001 0x000000a9 - O_INTOP(0x000000a9)   // 169 (169)
0x00002198: 0xC001 0x00000021 - O_INTOP(0x00000021)   // 33 (33)
0x0000219E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000021A4: 0x8121            - O_GIQ_OPTION
0x000021A6: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000021AC: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x000021B2: 0xC001 0x000000aa - O_INTOP(0x000000aa)   // 170 (170)
0x000021B8: 0xC001 0x00000024 - O_INTOP(0x00000024)   // 36 (36)
0x000021BE: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000021C4: 0x8121            - O_GIQ_OPTION
0x000021C6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000021CC: 0x800D            - O_D_TO_A
0x000021CE: 0x8019            - O_SWAPA
0x000021D0: 0x802A            - O_POP_TO_BASE
0x000021D2: 0x8029            - O_POP_BASE
0x000021D4: 0x800C            - O_A_TO_D
0x000021D6: 0x801C            - O_POP_RETURN
0x000021D8: 0x802A            - O_POP_TO_BASE
0x000021DA: 0x8029            - O_POP_BASE
0x000021DC: 0x801C            - O_POP_RETURN

33: tandi39 (0x000021de)
===============================
0x000021DE: 0x802B            - O_PUSH_BASE
0x000021E0: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x000021E6: 0xC001 0x000000ab - O_INTOP(0x000000ab)   // 171 (171)
0x000021EC: 0x811E            - O_GSAY_REPLY
0x000021EE: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000021F4: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x000021FA: 0xC001 0x000000ac - O_INTOP(0x000000ac)   // 172 (172)
0x00002200: 0xC001 0x00000022 - O_INTOP(0x00000022)   // 34 (34)
0x00002206: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000220C: 0x8121            - O_GIQ_OPTION
0x0000220E: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00002214: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x0000221A: 0xC001 0x000000ad - O_INTOP(0x000000ad)   // 173 (173)
0x00002220: 0xC001 0x00000023 - O_INTOP(0x00000023)   // 35 (35)
0x00002226: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000222C: 0x8121            - O_GIQ_OPTION
0x0000222E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002234: 0x800D            - O_D_TO_A
0x00002236: 0x8019            - O_SWAPA
0x00002238: 0x802A            - O_POP_TO_BASE
0x0000223A: 0x8029            - O_POP_BASE
0x0000223C: 0x800C            - O_A_TO_D
0x0000223E: 0x801C            - O_POP_RETURN
0x00002240: 0x802A            - O_POP_TO_BASE
0x00002242: 0x8029            - O_POP_BASE
0x00002244: 0x801C            - O_POP_RETURN

34: tandi40 (0x00002246)
===============================
0x00002246: 0x802B            - O_PUSH_BASE
0x00002248: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x0000224E: 0xC001 0x000000ae - O_INTOP(0x000000ae)   // 174 (174)
0x00002254: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000225A: 0x8120            - O_GSAY_MESSAGE
0x0000225C: 0xC001 0x00002272 - O_INTOP(0x00002272)   // 8818 (8818)
0x00002262: 0x800D            - O_D_TO_A
0x00002264: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000226A: 0xC001 0x00000043 - O_INTOP(0x00000043)   // 67 (67)
0x00002270: 0x8005            - O_CALL
0x00002272: 0x801A            - O_POP
0x00002274: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000227A: 0x800D            - O_D_TO_A
0x0000227C: 0x8019            - O_SWAPA
0x0000227E: 0x802A            - O_POP_TO_BASE
0x00002280: 0x8029            - O_POP_BASE
0x00002282: 0x800C            - O_A_TO_D
0x00002284: 0x801C            - O_POP_RETURN
0x00002286: 0x802A            - O_POP_TO_BASE
0x00002288: 0x8029            - O_POP_BASE
0x0000228A: 0x801C            - O_POP_RETURN

35: tandi41 (0x0000228c)
===============================
0x0000228C: 0x802B            - O_PUSH_BASE
0x0000228E: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00002294: 0xC001 0x000000af - O_INTOP(0x000000af)   // 175 (175)
0x0000229A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000022A0: 0x8120            - O_GSAY_MESSAGE
0x000022A2: 0xC001 0x000022b8 - O_INTOP(0x000022b8)   // 8888 (8888)
0x000022A8: 0x800D            - O_D_TO_A
0x000022AA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000022B0: 0xC001 0x00000044 - O_INTOP(0x00000044)   // 68 (68)
0x000022B6: 0x8005            - O_CALL
0x000022B8: 0x801A            - O_POP
0x000022BA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000022C0: 0x800D            - O_D_TO_A
0x000022C2: 0x8019            - O_SWAPA
0x000022C4: 0x802A            - O_POP_TO_BASE
0x000022C6: 0x8029            - O_POP_BASE
0x000022C8: 0x800C            - O_A_TO_D
0x000022CA: 0x801C            - O_POP_RETURN
0x000022CC: 0x802A            - O_POP_TO_BASE
0x000022CE: 0x8029            - O_POP_BASE
0x000022D0: 0x801C            - O_POP_RETURN

36: tandi42 (0x000022d2)
===============================
0x000022D2: 0x802B            - O_PUSH_BASE
0x000022D4: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x000022DA: 0xC001 0x000000b0 - O_INTOP(0x000000b0)   // 176 (176)
0x000022E0: 0x811E            - O_GSAY_REPLY
0x000022E2: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000022E8: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x000022EE: 0xC001 0x000000b1 - O_INTOP(0x000000b1)   // 177 (177)
0x000022F4: 0xC001 0x00000022 - O_INTOP(0x00000022)   // 34 (34)
0x000022FA: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002300: 0x8121            - O_GIQ_OPTION
0x00002302: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00002308: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x0000230E: 0xC001 0x000000b2 - O_INTOP(0x000000b2)   // 178 (178)
0x00002314: 0xC001 0x00000023 - O_INTOP(0x00000023)   // 35 (35)
0x0000231A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002320: 0x8121            - O_GIQ_OPTION
0x00002322: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002328: 0x800D            - O_D_TO_A
0x0000232A: 0x8019            - O_SWAPA
0x0000232C: 0x802A            - O_POP_TO_BASE
0x0000232E: 0x8029            - O_POP_BASE
0x00002330: 0x800C            - O_A_TO_D
0x00002332: 0x801C            - O_POP_RETURN
0x00002334: 0x802A            - O_POP_TO_BASE
0x00002336: 0x8029            - O_POP_BASE
0x00002338: 0x801C            - O_POP_RETURN

37: tandi43 (0x0000233a)
===============================
0x0000233A: 0x802B            - O_PUSH_BASE
0x0000233C: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00002342: 0xC001 0x000000b3 - O_INTOP(0x000000b3)   // 179 (179)
0x00002348: 0x811E            - O_GSAY_REPLY
0x0000234A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002350: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00002356: 0xC001 0x000000b4 - O_INTOP(0x000000b4)   // 180 (180)
0x0000235C: 0xC001 0x00000021 - O_INTOP(0x00000021)   // 33 (33)
0x00002362: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002368: 0x8121            - O_GIQ_OPTION
0x0000236A: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00002370: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00002376: 0xC001 0x000000b5 - O_INTOP(0x000000b5)   // 181 (181)
0x0000237C: 0xC001 0x00000024 - O_INTOP(0x00000024)   // 36 (36)
0x00002382: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002388: 0x8121            - O_GIQ_OPTION
0x0000238A: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00002390: 0x8046            - O_NEGATE
0x00002392: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00002398: 0xC001 0x000000b6 - O_INTOP(0x000000b6)   // 182 (182)
0x0000239E: 0xC001 0x00000026 - O_INTOP(0x00000026)   // 38 (38)
0x000023A4: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000023AA: 0x8121            - O_GIQ_OPTION
0x000023AC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000023B2: 0x800D            - O_D_TO_A
0x000023B4: 0x8019            - O_SWAPA
0x000023B6: 0x802A            - O_POP_TO_BASE
0x000023B8: 0x8029            - O_POP_BASE
0x000023BA: 0x800C            - O_A_TO_D
0x000023BC: 0x801C            - O_POP_RETURN
0x000023BE: 0x802A            - O_POP_TO_BASE
0x000023C0: 0x8029            - O_POP_BASE
0x000023C2: 0x801C            - O_POP_RETURN

38: tandi43a (0x000023c4)
===============================
0x000023C4: 0x802B            - O_PUSH_BASE
0x000023C6: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x000023CC: 0xC001 0x000000b7 - O_INTOP(0x000000b7)   // 183 (183)
0x000023D2: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000023D8: 0x8120            - O_GSAY_MESSAGE
0x000023DA: 0xC001 0x000023f0 - O_INTOP(0x000023f0)   // 9200 (9200)
0x000023E0: 0x800D            - O_D_TO_A
0x000023E2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000023E8: 0xC001 0x0000003f - O_INTOP(0x0000003f)   // 63 (63)
0x000023EE: 0x8005            - O_CALL
0x000023F0: 0x801A            - O_POP
0x000023F2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000023F8: 0x800D            - O_D_TO_A
0x000023FA: 0x8019            - O_SWAPA
0x000023FC: 0x802A            - O_POP_TO_BASE
0x000023FE: 0x8029            - O_POP_BASE
0x00002400: 0x800C            - O_A_TO_D
0x00002402: 0x801C            - O_POP_RETURN
0x00002404: 0x802A            - O_POP_TO_BASE
0x00002406: 0x8029            - O_POP_BASE
0x00002408: 0x801C            - O_POP_RETURN

39: tandi43b (0x0000240a)
===============================
0x0000240A: 0x802B            - O_PUSH_BASE
0x0000240C: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00002412: 0xC001 0x000000b8 - O_INTOP(0x000000b8)   // 184 (184)
0x00002418: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000241E: 0x8120            - O_GSAY_MESSAGE
0x00002420: 0xC001 0x00002436 - O_INTOP(0x00002436)   // 9270 (9270)
0x00002426: 0x800D            - O_D_TO_A
0x00002428: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000242E: 0xC001 0x0000003f - O_INTOP(0x0000003f)   // 63 (63)
0x00002434: 0x8005            - O_CALL
0x00002436: 0x801A            - O_POP
0x00002438: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000243E: 0x800D            - O_D_TO_A
0x00002440: 0x8019            - O_SWAPA
0x00002442: 0x802A            - O_POP_TO_BASE
0x00002444: 0x8029            - O_POP_BASE
0x00002446: 0x800C            - O_A_TO_D
0x00002448: 0x801C            - O_POP_RETURN
0x0000244A: 0x802A            - O_POP_TO_BASE
0x0000244C: 0x8029            - O_POP_BASE
0x0000244E: 0x801C            - O_POP_RETURN

40: tandi44 (0x00002450)
===============================
0x00002450: 0x802B            - O_PUSH_BASE
0x00002452: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00002458: 0xC001 0x000000b9 - O_INTOP(0x000000b9)   // 185 (185)
0x0000245E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002464: 0x8120            - O_GSAY_MESSAGE
0x00002466: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000246C: 0x800D            - O_D_TO_A
0x0000246E: 0x8019            - O_SWAPA
0x00002470: 0x802A            - O_POP_TO_BASE
0x00002472: 0x8029            - O_POP_BASE
0x00002474: 0x800C            - O_A_TO_D
0x00002476: 0x801C            - O_POP_RETURN
0x00002478: 0x802A            - O_POP_TO_BASE
0x0000247A: 0x8029            - O_POP_BASE
0x0000247C: 0x801C            - O_POP_RETURN

41: tandi45 (0x0000247e)
===============================
0x0000247E: 0x802B            - O_PUSH_BASE
0x00002480: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00002486: 0xC001 0x000000ba - O_INTOP(0x000000ba)   // 186 (186)
0x0000248C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002492: 0x8120            - O_GSAY_MESSAGE
0x00002494: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000249A: 0x800D            - O_D_TO_A
0x0000249C: 0x8019            - O_SWAPA
0x0000249E: 0x802A            - O_POP_TO_BASE
0x000024A0: 0x8029            - O_POP_BASE
0x000024A2: 0x800C            - O_A_TO_D
0x000024A4: 0x801C            - O_POP_RETURN
0x000024A6: 0x802A            - O_POP_TO_BASE
0x000024A8: 0x8029            - O_POP_BASE
0x000024AA: 0x801C            - O_POP_RETURN

42: tandi46 (0x000024ac)
===============================
0x000024AC: 0x802B            - O_PUSH_BASE
0x000024AE: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x000024B4: 0xC001 0x000000bb - O_INTOP(0x000000bb)   // 187 (187)
0x000024BA: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000024C0: 0x8120            - O_GSAY_MESSAGE
0x000024C2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000024C8: 0x800D            - O_D_TO_A
0x000024CA: 0x8019            - O_SWAPA
0x000024CC: 0x802A            - O_POP_TO_BASE
0x000024CE: 0x8029            - O_POP_BASE
0x000024D0: 0x800C            - O_A_TO_D
0x000024D2: 0x801C            - O_POP_RETURN
0x000024D4: 0x802A            - O_POP_TO_BASE
0x000024D6: 0x8029            - O_POP_BASE
0x000024D8: 0x801C            - O_POP_RETURN

43: tandi47 (0x000024da)
===============================
0x000024DA: 0x802B            - O_PUSH_BASE
0x000024DC: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x000024E2: 0xC001 0x000000bc - O_INTOP(0x000000bc)   // 188 (188)
0x000024E8: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000024EE: 0x8120            - O_GSAY_MESSAGE
0x000024F0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000024F6: 0x800D            - O_D_TO_A
0x000024F8: 0x8019            - O_SWAPA
0x000024FA: 0x802A            - O_POP_TO_BASE
0x000024FC: 0x8029            - O_POP_BASE
0x000024FE: 0x800C            - O_A_TO_D
0x00002500: 0x801C            - O_POP_RETURN
0x00002502: 0x802A            - O_POP_TO_BASE
0x00002504: 0x8029            - O_POP_BASE
0x00002506: 0x801C            - O_POP_RETURN

44: tandi48 (0x00002508)
===============================
0x00002508: 0x802B            - O_PUSH_BASE
0x0000250A: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00002510: 0xC001 0x000000bd - O_INTOP(0x000000bd)   // 189 (189)
0x00002516: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000251C: 0x8120            - O_GSAY_MESSAGE
0x0000251E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002524: 0x800D            - O_D_TO_A
0x00002526: 0x8019            - O_SWAPA
0x00002528: 0x802A            - O_POP_TO_BASE
0x0000252A: 0x8029            - O_POP_BASE
0x0000252C: 0x800C            - O_A_TO_D
0x0000252E: 0x801C            - O_POP_RETURN
0x00002530: 0x802A            - O_POP_TO_BASE
0x00002532: 0x8029            - O_POP_BASE
0x00002534: 0x801C            - O_POP_RETURN

45: tandi49 (0x00002536)
===============================
0x00002536: 0x802B            - O_PUSH_BASE
0x00002538: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x0000253E: 0xC001 0x000000be - O_INTOP(0x000000be)   // 190 (190)
0x00002544: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000254A: 0x8120            - O_GSAY_MESSAGE
0x0000254C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002552: 0x800D            - O_D_TO_A
0x00002554: 0x8019            - O_SWAPA
0x00002556: 0x802A            - O_POP_TO_BASE
0x00002558: 0x8029            - O_POP_BASE
0x0000255A: 0x800C            - O_A_TO_D
0x0000255C: 0x801C            - O_POP_RETURN
0x0000255E: 0x802A            - O_POP_TO_BASE
0x00002560: 0x8029            - O_POP_BASE
0x00002562: 0x801C            - O_POP_RETURN

46: tandi50 (0x00002564)
===============================
0x00002564: 0x802B            - O_PUSH_BASE
0x00002566: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x0000256C: 0xC001 0x000000bf - O_INTOP(0x000000bf)   // 191 (191)
0x00002572: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002578: 0x8120            - O_GSAY_MESSAGE
0x0000257A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002580: 0x800D            - O_D_TO_A
0x00002582: 0x8019            - O_SWAPA
0x00002584: 0x802A            - O_POP_TO_BASE
0x00002586: 0x8029            - O_POP_BASE
0x00002588: 0x800C            - O_A_TO_D
0x0000258A: 0x801C            - O_POP_RETURN
0x0000258C: 0x802A            - O_POP_TO_BASE
0x0000258E: 0x8029            - O_POP_BASE
0x00002590: 0x801C            - O_POP_RETURN

47: tandi51 (0x00002592)
===============================
0x00002592: 0x802B            - O_PUSH_BASE
0x00002594: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x0000259A: 0xC001 0x000000c0 - O_INTOP(0x000000c0)   // 192 (192)
0x000025A0: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000025A6: 0x8120            - O_GSAY_MESSAGE
0x000025A8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000025AE: 0x800D            - O_D_TO_A
0x000025B0: 0x8019            - O_SWAPA
0x000025B2: 0x802A            - O_POP_TO_BASE
0x000025B4: 0x8029            - O_POP_BASE
0x000025B6: 0x800C            - O_A_TO_D
0x000025B8: 0x801C            - O_POP_RETURN
0x000025BA: 0x802A            - O_POP_TO_BASE
0x000025BC: 0x8029            - O_POP_BASE
0x000025BE: 0x801C            - O_POP_RETURN

48: tandi52 (0x000025c0)
===============================
0x000025C0: 0x802B            - O_PUSH_BASE
0x000025C2: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x000025C8: 0xC001 0x000000c1 - O_INTOP(0x000000c1)   // 193 (193)
0x000025CE: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000025D4: 0x8120            - O_GSAY_MESSAGE
0x000025D6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000025DC: 0x800D            - O_D_TO_A
0x000025DE: 0x8019            - O_SWAPA
0x000025E0: 0x802A            - O_POP_TO_BASE
0x000025E2: 0x8029            - O_POP_BASE
0x000025E4: 0x800C            - O_A_TO_D
0x000025E6: 0x801C            - O_POP_RETURN
0x000025E8: 0x802A            - O_POP_TO_BASE
0x000025EA: 0x8029            - O_POP_BASE
0x000025EC: 0x801C            - O_POP_RETURN

49: tandi53 (0x000025ee)
===============================
0x000025EE: 0x802B            - O_PUSH_BASE
0x000025F0: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x000025F6: 0xC001 0x000000c2 - O_INTOP(0x000000c2)   // 194 (194)
0x000025FC: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002602: 0x8120            - O_GSAY_MESSAGE
0x00002604: 0xC001 0x0000262a - O_INTOP(0x0000262a)   // 9770 (9770)
0x0000260A: 0xC001 0x00000047 - O_INTOP(0x00000047)   // 71 (71)
0x00002610: 0x80C5            - O_GLOBAL_VAR
0x00002612: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002618: 0x8033            - O_EQUAL
0x0000261A: 0x802F            - O_IF
0x0000261C: 0xC001 0x00000047 - O_INTOP(0x00000047)   // 71 (71)
0x00002622: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002628: 0x80C6            - O_SET_GLOBAL_VAR
0x0000262A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002630: 0x800D            - O_D_TO_A
0x00002632: 0x8019            - O_SWAPA
0x00002634: 0x802A            - O_POP_TO_BASE
0x00002636: 0x8029            - O_POP_BASE
0x00002638: 0x800C            - O_A_TO_D
0x0000263A: 0x801C            - O_POP_RETURN
0x0000263C: 0x802A            - O_POP_TO_BASE
0x0000263E: 0x8029            - O_POP_BASE
0x00002640: 0x801C            - O_POP_RETURN

50: tandi54 (0x00002642)
===============================
0x00002642: 0x802B            - O_PUSH_BASE
0x00002644: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x0000264A: 0xC001 0x000000c3 - O_INTOP(0x000000c3)   // 195 (195)
0x00002650: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002656: 0x8120            - O_GSAY_MESSAGE
0x00002658: 0xC001 0x0000267e - O_INTOP(0x0000267e)   // 9854 (9854)
0x0000265E: 0xC001 0x00000049 - O_INTOP(0x00000049)   // 73 (73)
0x00002664: 0x80C5            - O_GLOBAL_VAR
0x00002666: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000266C: 0x8033            - O_EQUAL
0x0000266E: 0x802F            - O_IF
0x00002670: 0xC001 0x00000049 - O_INTOP(0x00000049)   // 73 (73)
0x00002676: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000267C: 0x80C6            - O_SET_GLOBAL_VAR
0x0000267E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002684: 0x800D            - O_D_TO_A
0x00002686: 0x8019            - O_SWAPA
0x00002688: 0x802A            - O_POP_TO_BASE
0x0000268A: 0x8029            - O_POP_BASE
0x0000268C: 0x800C            - O_A_TO_D
0x0000268E: 0x801C            - O_POP_RETURN
0x00002690: 0x802A            - O_POP_TO_BASE
0x00002692: 0x8029            - O_POP_BASE
0x00002694: 0x801C            - O_POP_RETURN

51: tandi55 (0x00002696)
===============================
0x00002696: 0x802B            - O_PUSH_BASE
0x00002698: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x0000269E: 0xC001 0x000000c4 - O_INTOP(0x000000c4)   // 196 (196)
0x000026A4: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000026AA: 0x8120            - O_GSAY_MESSAGE
0x000026AC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000026B2: 0x800D            - O_D_TO_A
0x000026B4: 0x8019            - O_SWAPA
0x000026B6: 0x802A            - O_POP_TO_BASE
0x000026B8: 0x8029            - O_POP_BASE
0x000026BA: 0x800C            - O_A_TO_D
0x000026BC: 0x801C            - O_POP_RETURN
0x000026BE: 0x802A            - O_POP_TO_BASE
0x000026C0: 0x8029            - O_POP_BASE
0x000026C2: 0x801C            - O_POP_RETURN

52: tandi62 (0x000026c4)
===============================
0x000026C4: 0x802B            - O_PUSH_BASE
0x000026C6: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x000026CC: 0xC001 0x000000c5 - O_INTOP(0x000000c5)   // 197 (197)
0x000026D2: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000026D8: 0x8120            - O_GSAY_MESSAGE
0x000026DA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000026E0: 0x800D            - O_D_TO_A
0x000026E2: 0x8019            - O_SWAPA
0x000026E4: 0x802A            - O_POP_TO_BASE
0x000026E6: 0x8029            - O_POP_BASE
0x000026E8: 0x800C            - O_A_TO_D
0x000026EA: 0x801C            - O_POP_RETURN
0x000026EC: 0x802A            - O_POP_TO_BASE
0x000026EE: 0x8029            - O_POP_BASE
0x000026F0: 0x801C            - O_POP_RETURN

53: tandi63 (0x000026f2)
===============================
0x000026F2: 0x802B            - O_PUSH_BASE
0x000026F4: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x000026FA: 0xC001 0x000000c6 - O_INTOP(0x000000c6)   // 198 (198)
0x00002700: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002706: 0x8120            - O_GSAY_MESSAGE
0x00002708: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000270E: 0x800D            - O_D_TO_A
0x00002710: 0x8019            - O_SWAPA
0x00002712: 0x802A            - O_POP_TO_BASE
0x00002714: 0x8029            - O_POP_BASE
0x00002716: 0x800C            - O_A_TO_D
0x00002718: 0x801C            - O_POP_RETURN
0x0000271A: 0x802A            - O_POP_TO_BASE
0x0000271C: 0x8029            - O_POP_BASE
0x0000271E: 0x801C            - O_POP_RETURN

54: tandi64 (0x00002720)
===============================
0x00002720: 0x802B            - O_PUSH_BASE
0x00002722: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00002728: 0xC001 0x000000c7 - O_INTOP(0x000000c7)   // 199 (199)
0x0000272E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002734: 0x8120            - O_GSAY_MESSAGE
0x00002736: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000273C: 0x800D            - O_D_TO_A
0x0000273E: 0x8019            - O_SWAPA
0x00002740: 0x802A            - O_POP_TO_BASE
0x00002742: 0x8029            - O_POP_BASE
0x00002744: 0x800C            - O_A_TO_D
0x00002746: 0x801C            - O_POP_RETURN
0x00002748: 0x802A            - O_POP_TO_BASE
0x0000274A: 0x8029            - O_POP_BASE
0x0000274C: 0x801C            - O_POP_RETURN

55: tandi65 (0x0000274e)
===============================
0x0000274E: 0x802B            - O_PUSH_BASE
0x00002750: 0x80BC            - O_SELF_OBJ
0x00002752: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00002758: 0xC001 0x000000c8 - O_INTOP(0x000000c8)   // 200 (200)
0x0000275E: 0x8105            - O_MESSAGE_STR
0x00002760: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00002766: 0x810A            - O_FLOAT_MSG
0x00002768: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000276E: 0x800D            - O_D_TO_A
0x00002770: 0x8019            - O_SWAPA
0x00002772: 0x802A            - O_POP_TO_BASE
0x00002774: 0x8029            - O_POP_BASE
0x00002776: 0x800C            - O_A_TO_D
0x00002778: 0x801C            - O_POP_RETURN
0x0000277A: 0x802A            - O_POP_TO_BASE
0x0000277C: 0x8029            - O_POP_BASE
0x0000277E: 0x801C            - O_POP_RETURN

56: tandi66 (0x00002780)
===============================
0x00002780: 0x802B            - O_PUSH_BASE
0x00002782: 0x80BC            - O_SELF_OBJ
0x00002784: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x0000278A: 0xC001 0x000000c9 - O_INTOP(0x000000c9)   // 201 (201)
0x00002790: 0x8105            - O_MESSAGE_STR
0x00002792: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00002798: 0x810A            - O_FLOAT_MSG
0x0000279A: 0xC001 0x000027b0 - O_INTOP(0x000027b0)   // 10160 (10160)
0x000027A0: 0x800D            - O_D_TO_A
0x000027A2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000027A8: 0xC001 0x00000045 - O_INTOP(0x00000045)   // 69 (69)
0x000027AE: 0x8005            - O_CALL
0x000027B0: 0x801A            - O_POP
0x000027B2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000027B8: 0x800D            - O_D_TO_A
0x000027BA: 0x8019            - O_SWAPA
0x000027BC: 0x802A            - O_POP_TO_BASE
0x000027BE: 0x8029            - O_POP_BASE
0x000027C0: 0x800C            - O_A_TO_D
0x000027C2: 0x801C            - O_POP_RETURN
0x000027C4: 0x802A            - O_POP_TO_BASE
0x000027C6: 0x8029            - O_POP_BASE
0x000027C8: 0x801C            - O_POP_RETURN

57: tandi67 (0x000027ca)
===============================
0x000027CA: 0x802B            - O_PUSH_BASE
0x000027CC: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x000027D2: 0xC001 0x000000ca - O_INTOP(0x000000ca)   // 202 (202)
0x000027D8: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x000027DE: 0x8120            - O_GSAY_MESSAGE
0x000027E0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000027E6: 0x800D            - O_D_TO_A
0x000027E8: 0x8019            - O_SWAPA
0x000027EA: 0x802A            - O_POP_TO_BASE
0x000027EC: 0x8029            - O_POP_BASE
0x000027EE: 0x800C            - O_A_TO_D
0x000027F0: 0x801C            - O_POP_RETURN
0x000027F2: 0x802A            - O_POP_TO_BASE
0x000027F4: 0x8029            - O_POP_BASE
0x000027F6: 0x801C            - O_POP_RETURN

58: tandi68 (0x000027f8)
===============================
0x000027F8: 0x802B            - O_PUSH_BASE
0x000027FA: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00002800: 0xC001 0x000000cb - O_INTOP(0x000000cb)   // 203 (203)
0x00002806: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x0000280C: 0x8120            - O_GSAY_MESSAGE
0x0000280E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002814: 0x800D            - O_D_TO_A
0x00002816: 0x8019            - O_SWAPA
0x00002818: 0x802A            - O_POP_TO_BASE
0x0000281A: 0x8029            - O_POP_BASE
0x0000281C: 0x800C            - O_A_TO_D
0x0000281E: 0x801C            - O_POP_RETURN
0x00002820: 0x802A            - O_POP_TO_BASE
0x00002822: 0x8029            - O_POP_BASE
0x00002824: 0x801C            - O_POP_RETURN

59: tandi69 (0x00002826)
===============================
0x00002826: 0x802B            - O_PUSH_BASE
0x00002828: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x0000282E: 0xC001 0x000000cc - O_INTOP(0x000000cc)   // 204 (204)
0x00002834: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000283A: 0x8120            - O_GSAY_MESSAGE
0x0000283C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002842: 0x800D            - O_D_TO_A
0x00002844: 0x8019            - O_SWAPA
0x00002846: 0x802A            - O_POP_TO_BASE
0x00002848: 0x8029            - O_POP_BASE
0x0000284A: 0x800C            - O_A_TO_D
0x0000284C: 0x801C            - O_POP_RETURN
0x0000284E: 0x802A            - O_POP_TO_BASE
0x00002850: 0x8029            - O_POP_BASE
0x00002852: 0x801C            - O_POP_RETURN

60: tandi70 (0x00002854)
===============================
0x00002854: 0x802B            - O_PUSH_BASE
0x00002856: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x0000285C: 0xC001 0x000000cd - O_INTOP(0x000000cd)   // 205 (205)
0x00002862: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002868: 0x8120            - O_GSAY_MESSAGE
0x0000286A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002870: 0x800D            - O_D_TO_A
0x00002872: 0x8019            - O_SWAPA
0x00002874: 0x802A            - O_POP_TO_BASE
0x00002876: 0x8029            - O_POP_BASE
0x00002878: 0x800C            - O_A_TO_D
0x0000287A: 0x801C            - O_POP_RETURN
0x0000287C: 0x802A            - O_POP_TO_BASE
0x0000287E: 0x8029            - O_POP_BASE
0x00002880: 0x801C            - O_POP_RETURN

61: tandi71 (0x00002882)
===============================
0x00002882: 0x802B            - O_PUSH_BASE
0x00002884: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x0000288A: 0xC001 0x000000ce - O_INTOP(0x000000ce)   // 206 (206)
0x00002890: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002896: 0x8120            - O_GSAY_MESSAGE
0x00002898: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000289E: 0x800D            - O_D_TO_A
0x000028A0: 0x8019            - O_SWAPA
0x000028A2: 0x802A            - O_POP_TO_BASE
0x000028A4: 0x8029            - O_POP_BASE
0x000028A6: 0x800C            - O_A_TO_D
0x000028A8: 0x801C            - O_POP_RETURN
0x000028AA: 0x802A            - O_POP_TO_BASE
0x000028AC: 0x8029            - O_POP_BASE
0x000028AE: 0x801C            - O_POP_RETURN

62: tandi72 (0x000028b0)
===============================
0x000028B0: 0x802B            - O_PUSH_BASE
0x000028B2: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x000028B8: 0xC001 0x000000cf - O_INTOP(0x000000cf)   // 207 (207)
0x000028BE: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000028C4: 0x8120            - O_GSAY_MESSAGE
0x000028C6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000028CC: 0x800D            - O_D_TO_A
0x000028CE: 0x8019            - O_SWAPA
0x000028D0: 0x802A            - O_POP_TO_BASE
0x000028D2: 0x8029            - O_POP_BASE
0x000028D4: 0x800C            - O_A_TO_D
0x000028D6: 0x801C            - O_POP_RETURN
0x000028D8: 0x802A            - O_POP_TO_BASE
0x000028DA: 0x8029            - O_POP_BASE
0x000028DC: 0x801C            - O_POP_RETURN

63: tandix (0x000028de)
===============================
0x000028DE: 0x802B            - O_PUSH_BASE
0x000028E0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000028E6: 0x800D            - O_D_TO_A
0x000028E8: 0x8019            - O_SWAPA
0x000028EA: 0x802A            - O_POP_TO_BASE
0x000028EC: 0x8029            - O_POP_BASE
0x000028EE: 0x800C            - O_A_TO_D
0x000028F0: 0x801C            - O_POP_RETURN
0x000028F2: 0x802A            - O_POP_TO_BASE
0x000028F4: 0x8029            - O_POP_BASE
0x000028F6: 0x801C            - O_POP_RETURN

64: tandixx (0x000028f8)
===============================
0x000028F8: 0x802B            - O_PUSH_BASE
0x000028FA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002900: 0x800D            - O_D_TO_A
0x00002902: 0x8019            - O_SWAPA
0x00002904: 0x802A            - O_POP_TO_BASE
0x00002906: 0x8029            - O_POP_BASE
0x00002908: 0x800C            - O_A_TO_D
0x0000290A: 0x801C            - O_POP_RETURN
0x0000290C: 0x802A            - O_POP_TO_BASE
0x0000290E: 0x8029            - O_POP_BASE
0x00002910: 0x801C            - O_POP_RETURN

65: tandix1 (0x00002912)
===============================
0x00002912: 0x802B            - O_PUSH_BASE
0x00002914: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000291A: 0x800D            - O_D_TO_A
0x0000291C: 0x8019            - O_SWAPA
0x0000291E: 0x802A            - O_POP_TO_BASE
0x00002920: 0x8029            - O_POP_BASE
0x00002922: 0x800C            - O_A_TO_D
0x00002924: 0x801C            - O_POP_RETURN
0x00002926: 0x802A            - O_POP_TO_BASE
0x00002928: 0x8029            - O_POP_BASE
0x0000292A: 0x801C            - O_POP_RETURN

66: tandix2 (0x0000292c)
===============================
0x0000292C: 0x802B            - O_PUSH_BASE
0x0000292E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002934: 0x800D            - O_D_TO_A
0x00002936: 0x8019            - O_SWAPA
0x00002938: 0x802A            - O_POP_TO_BASE
0x0000293A: 0x8029            - O_POP_BASE
0x0000293C: 0x800C            - O_A_TO_D
0x0000293E: 0x801C            - O_POP_RETURN
0x00002940: 0x802A            - O_POP_TO_BASE
0x00002942: 0x8029            - O_POP_BASE
0x00002944: 0x801C            - O_POP_RETURN

67: tandix3 (0x00002946)
===============================
0x00002946: 0x802B            - O_PUSH_BASE
0x00002948: 0x80BC            - O_SELF_OBJ
0x0000294A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002950: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00002956: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000295C: 0x8102            - O_CRITTER_ADD_TRAIT
0x0000295E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002964: 0x800D            - O_D_TO_A
0x00002966: 0x8019            - O_SWAPA
0x00002968: 0x802A            - O_POP_TO_BASE
0x0000296A: 0x8029            - O_POP_BASE
0x0000296C: 0x800C            - O_A_TO_D
0x0000296E: 0x801C            - O_POP_RETURN
0x00002970: 0x802A            - O_POP_TO_BASE
0x00002972: 0x8029            - O_POP_BASE
0x00002974: 0x801C            - O_POP_RETURN

68: tandix4 (0x00002976)
===============================
0x00002976: 0x802B            - O_PUSH_BASE
0x00002978: 0x80BC            - O_SELF_OBJ
0x0000297A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002980: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00002986: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000298C: 0x8102            - O_CRITTER_ADD_TRAIT
0x0000298E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002994: 0x800D            - O_D_TO_A
0x00002996: 0x8019            - O_SWAPA
0x00002998: 0x802A            - O_POP_TO_BASE
0x0000299A: 0x8029            - O_POP_BASE
0x0000299C: 0x800C            - O_A_TO_D
0x0000299E: 0x801C            - O_POP_RETURN
0x000029A0: 0x802A            - O_POP_TO_BASE
0x000029A2: 0x8029            - O_POP_BASE
0x000029A4: 0x801C            - O_POP_RETURN

69: tandix5 (0x000029a6)
===============================
0x000029A6: 0x802B            - O_PUSH_BASE
0x000029A8: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000029AE: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000029B4: 0x80C2            - O_SET_LOCAL_VAR
0x000029B6: 0x80BC            - O_SELF_OBJ
0x000029B8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000029BE: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x000029C4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000029CA: 0x8102            - O_CRITTER_ADD_TRAIT
0x000029CC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000029D2: 0x800D            - O_D_TO_A
0x000029D4: 0x8019            - O_SWAPA
0x000029D6: 0x802A            - O_POP_TO_BASE
0x000029D8: 0x8029            - O_POP_BASE
0x000029DA: 0x800C            - O_A_TO_D
0x000029DC: 0x801C            - O_POP_RETURN
0x000029DE: 0x802A            - O_POP_TO_BASE
0x000029E0: 0x8029            - O_POP_BASE
0x000029E2: 0x801C            - O_POP_RETURN

70: tandiend (0x000029e4)
===============================
0x000029E4: 0x802B            - O_PUSH_BASE
0x000029E6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000029EC: 0x800D            - O_D_TO_A
0x000029EE: 0x8019            - O_SWAPA
0x000029F0: 0x802A            - O_POP_TO_BASE
0x000029F2: 0x8029            - O_POP_BASE
0x000029F4: 0x800C            - O_A_TO_D
0x000029F6: 0x801C            - O_POP_RETURN
0x000029F8: 0x802A            - O_POP_TO_BASE
0x000029FA: 0x8029            - O_POP_BASE
0x000029FC: 0x801C            - O_POP_RETURN

71: TandiSchedule (0x000029fe)
===============================
0x000029FE: 0x802B            - O_PUSH_BASE
0x00002A00: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002A06: 0x80F6            - O_GAME_TIME_HOUR
0x00002A08: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002A0E: 0x8031            - O_STORE
0x00002A10: 0xC001 0x00002a40 - O_INTOP(0x00002a40)   // 10816 (10816)
0x00002A16: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002A1C: 0x8032            - O_FETCH
0x00002A1E: 0xC001 0x00000258 - O_INTOP(0x00000258)   // 600 (600)
0x00002A24: 0x8033            - O_EQUAL
0x00002A26: 0x802F            - O_IF
0x00002A28: 0x80BC            - O_SELF_OBJ
0x00002A2A: 0xC001 0x00004915 - O_INTOP(0x00004915)   // 18709 (18709)
0x00002A30: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002A36: 0x80CE            - O_ANIMATE_MOVE_OBJ_TO_TILE
0x00002A38: 0xC001 0x00002c78 - O_INTOP(0x00002c78)   // 11384 (11384)
0x00002A3E: 0x8004            - O_JMP
0x00002A40: 0xC001 0x00002a70 - O_INTOP(0x00002a70)   // 10864 (10864)
0x00002A46: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002A4C: 0x8032            - O_FETCH
0x00002A4E: 0xC001 0x00000262 - O_INTOP(0x00000262)   // 610 (610)
0x00002A54: 0x8033            - O_EQUAL
0x00002A56: 0x802F            - O_IF
0x00002A58: 0x80BC            - O_SELF_OBJ
0x00002A5A: 0xC001 0x00005ac0 - O_INTOP(0x00005ac0)   // 23232 (23232)
0x00002A60: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002A66: 0x80CE            - O_ANIMATE_MOVE_OBJ_TO_TILE
0x00002A68: 0xC001 0x00002c78 - O_INTOP(0x00002c78)   // 11384 (11384)
0x00002A6E: 0x8004            - O_JMP
0x00002A70: 0xC001 0x00002aa0 - O_INTOP(0x00002aa0)   // 10912 (10912)
0x00002A76: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002A7C: 0x8032            - O_FETCH
0x00002A7E: 0xC001 0x00000267 - O_INTOP(0x00000267)   // 615 (615)
0x00002A84: 0x8033            - O_EQUAL
0x00002A86: 0x802F            - O_IF
0x00002A88: 0x80BC            - O_SELF_OBJ
0x00002A8A: 0xC001 0x0000483c - O_INTOP(0x0000483c)   // 18492 (18492)
0x00002A90: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002A96: 0x80CE            - O_ANIMATE_MOVE_OBJ_TO_TILE
0x00002A98: 0xC001 0x00002c78 - O_INTOP(0x00002c78)   // 11384 (11384)
0x00002A9E: 0x8004            - O_JMP
0x00002AA0: 0xC001 0x00002ad0 - O_INTOP(0x00002ad0)   // 10960 (10960)
0x00002AA6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002AAC: 0x8032            - O_FETCH
0x00002AAE: 0xC001 0x00000285 - O_INTOP(0x00000285)   // 645 (645)
0x00002AB4: 0x8033            - O_EQUAL
0x00002AB6: 0x802F            - O_IF
0x00002AB8: 0x80BC            - O_SELF_OBJ
0x00002ABA: 0xC001 0x000034fd - O_INTOP(0x000034fd)   // 13565 (13565)
0x00002AC0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002AC6: 0x80CE            - O_ANIMATE_MOVE_OBJ_TO_TILE
0x00002AC8: 0xC001 0x00002c78 - O_INTOP(0x00002c78)   // 11384 (11384)
0x00002ACE: 0x8004            - O_JMP
0x00002AD0: 0xC001 0x00002b00 - O_INTOP(0x00002b00)   // 11008 (11008)
0x00002AD6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002ADC: 0x8032            - O_FETCH
0x00002ADE: 0xC001 0x0000028a - O_INTOP(0x0000028a)   // 650 (650)
0x00002AE4: 0x8033            - O_EQUAL
0x00002AE6: 0x802F            - O_IF
0x00002AE8: 0x80BC            - O_SELF_OBJ
0x00002AEA: 0xC001 0x00003d43 - O_INTOP(0x00003d43)   // 15683 (15683)
0x00002AF0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002AF6: 0x80CE            - O_ANIMATE_MOVE_OBJ_TO_TILE
0x00002AF8: 0xC001 0x00002c78 - O_INTOP(0x00002c78)   // 11384 (11384)
0x00002AFE: 0x8004            - O_JMP
0x00002B00: 0xC001 0x00002b30 - O_INTOP(0x00002b30)   // 11056 (11056)
0x00002B06: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002B0C: 0x8032            - O_FETCH
0x00002B0E: 0xC001 0x000003e8 - O_INTOP(0x000003e8)   // 1000 (1000)
0x00002B14: 0x8033            - O_EQUAL
0x00002B16: 0x802F            - O_IF
0x00002B18: 0x80BC            - O_SELF_OBJ
0x00002B1A: 0xC001 0x00004915 - O_INTOP(0x00004915)   // 18709 (18709)
0x00002B20: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002B26: 0x80CE            - O_ANIMATE_MOVE_OBJ_TO_TILE
0x00002B28: 0xC001 0x00002c78 - O_INTOP(0x00002c78)   // 11384 (11384)
0x00002B2E: 0x8004            - O_JMP
0x00002B30: 0xC001 0x00002b60 - O_INTOP(0x00002b60)   // 11104 (11104)
0x00002B36: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002B3C: 0x8032            - O_FETCH
0x00002B3E: 0xC001 0x000004b0 - O_INTOP(0x000004b0)   // 1200 (1200)
0x00002B44: 0x8033            - O_EQUAL
0x00002B46: 0x802F            - O_IF
0x00002B48: 0x80BC            - O_SELF_OBJ
0x00002B4A: 0xC001 0x00006066 - O_INTOP(0x00006066)   // 24678 (24678)
0x00002B50: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002B56: 0x80CE            - O_ANIMATE_MOVE_OBJ_TO_TILE
0x00002B58: 0xC001 0x00002c78 - O_INTOP(0x00002c78)   // 11384 (11384)
0x00002B5E: 0x8004            - O_JMP
0x00002B60: 0xC001 0x00002b90 - O_INTOP(0x00002b90)   // 11152 (11152)
0x00002B66: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002B6C: 0x8032            - O_FETCH
0x00002B6E: 0xC001 0x00000514 - O_INTOP(0x00000514)   // 1300 (1300)
0x00002B74: 0x8033            - O_EQUAL
0x00002B76: 0x802F            - O_IF
0x00002B78: 0x80BC            - O_SELF_OBJ
0x00002B7A: 0xC001 0x00005ac0 - O_INTOP(0x00005ac0)   // 23232 (23232)
0x00002B80: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002B86: 0x80CE            - O_ANIMATE_MOVE_OBJ_TO_TILE
0x00002B88: 0xC001 0x00002c78 - O_INTOP(0x00002c78)   // 11384 (11384)
0x00002B8E: 0x8004            - O_JMP
0x00002B90: 0xC001 0x00002bc0 - O_INTOP(0x00002bc0)   // 11200 (11200)
0x00002B96: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002B9C: 0x8032            - O_FETCH
0x00002B9E: 0xC001 0x00000519 - O_INTOP(0x00000519)   // 1305 (1305)
0x00002BA4: 0x8033            - O_EQUAL
0x00002BA6: 0x802F            - O_IF
0x00002BA8: 0x80BC            - O_SELF_OBJ
0x00002BAA: 0xC001 0x00005c95 - O_INTOP(0x00005c95)   // 23701 (23701)
0x00002BB0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002BB6: 0x80CE            - O_ANIMATE_MOVE_OBJ_TO_TILE
0x00002BB8: 0xC001 0x00002c78 - O_INTOP(0x00002c78)   // 11384 (11384)
0x00002BBE: 0x8004            - O_JMP
0x00002BC0: 0xC001 0x00002bf0 - O_INTOP(0x00002bf0)   // 11248 (11248)
0x00002BC6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002BCC: 0x8032            - O_FETCH
0x00002BCE: 0xC001 0x00000640 - O_INTOP(0x00000640)   // 1600 (1600)
0x00002BD4: 0x8033            - O_EQUAL
0x00002BD6: 0x802F            - O_IF
0x00002BD8: 0x80BC            - O_SELF_OBJ
0x00002BDA: 0xC001 0x0000437f - O_INTOP(0x0000437f)   // 17279 (17279)
0x00002BE0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002BE6: 0x80CE            - O_ANIMATE_MOVE_OBJ_TO_TILE
0x00002BE8: 0xC001 0x00002c78 - O_INTOP(0x00002c78)   // 11384 (11384)
0x00002BEE: 0x8004            - O_JMP
0x00002BF0: 0xC001 0x00002c20 - O_INTOP(0x00002c20)   // 11296 (11296)
0x00002BF6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002BFC: 0x8032            - O_FETCH
0x00002BFE: 0xC001 0x0000076c - O_INTOP(0x0000076c)   // 1900 (1900)
0x00002C04: 0x8033            - O_EQUAL
0x00002C06: 0x802F            - O_IF
0x00002C08: 0x80BC            - O_SELF_OBJ
0x00002C0A: 0xC001 0x000034fd - O_INTOP(0x000034fd)   // 13565 (13565)
0x00002C10: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002C16: 0x80CE            - O_ANIMATE_MOVE_OBJ_TO_TILE
0x00002C18: 0xC001 0x00002c78 - O_INTOP(0x00002c78)   // 11384 (11384)
0x00002C1E: 0x8004            - O_JMP
0x00002C20: 0xC001 0x00002c50 - O_INTOP(0x00002c50)   // 11344 (11344)
0x00002C26: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002C2C: 0x8032            - O_FETCH
0x00002C2E: 0xC001 0x00000771 - O_INTOP(0x00000771)   // 1905 (1905)
0x00002C34: 0x8033            - O_EQUAL
0x00002C36: 0x802F            - O_IF
0x00002C38: 0x80BC            - O_SELF_OBJ
0x00002C3A: 0xC001 0x00004915 - O_INTOP(0x00004915)   // 18709 (18709)
0x00002C40: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002C46: 0x80CE            - O_ANIMATE_MOVE_OBJ_TO_TILE
0x00002C48: 0xC001 0x00002c78 - O_INTOP(0x00002c78)   // 11384 (11384)
0x00002C4E: 0x8004            - O_JMP
0x00002C50: 0xC001 0x00002c78 - O_INTOP(0x00002c78)   // 11384 (11384)
0x00002C56: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002C5C: 0x8032            - O_FETCH
0x00002C5E: 0xC001 0x00000834 - O_INTOP(0x00000834)   // 2100 (2100)
0x00002C64: 0x8033            - O_EQUAL
0x00002C66: 0x802F            - O_IF
0x00002C68: 0x80BC            - O_SELF_OBJ
0x00002C6A: 0xC001 0x00006066 - O_INTOP(0x00006066)   // 24678 (24678)
0x00002C70: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002C76: 0x80CE            - O_ANIMATE_MOVE_OBJ_TO_TILE
0x00002C78: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002C7E: 0x800D            - O_D_TO_A
0x00002C80: 0x8019            - O_SWAPA
0x00002C82: 0x802A            - O_POP_TO_BASE
0x00002C84: 0x8029            - O_POP_BASE
0x00002C86: 0x800C            - O_A_TO_D
0x00002C88: 0x801C            - O_POP_RETURN
0x00002C8A: 0x802A            - O_POP_TO_BASE
0x00002C8C: 0x8029            - O_POP_BASE
0x00002C8E: 0x801C            - O_POP_RETURN

72: follow_player (0x00002c90)
===============================
0x00002C90: 0x802B            - O_PUSH_BASE
0x00002C92: 0xC001 0x00002cb8 - O_INTOP(0x00002cb8)   // 11448 (11448)
0x00002C98: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x00002C9E: 0x80C5            - O_GLOBAL_VAR
0x00002CA0: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00002CA6: 0x8034            - O_NOT_EQUAL
0x00002CA8: 0x802F            - O_IF
0x00002CAA: 0xC001 0x000000d5 - O_INTOP(0x000000d5)   // 213 (213)
0x00002CB0: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002CB6: 0x80C6            - O_SET_GLOBAL_VAR
0x00002CB8: 0xC001 0x00002cf2 - O_INTOP(0x00002cf2)   // 11506 (11506)
0x00002CBE: 0x80BC            - O_SELF_OBJ
0x00002CC0: 0x80BF            - O_DUDE_OBJ
0x00002CC2: 0x80D3            - O_TILE_DISTANCE_OBJS
0x00002CC4: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x00002CCA: 0x8038            - O_GREATER
0x00002CCC: 0x802F            - O_IF
0x00002CCE: 0x80BC            - O_SELF_OBJ
0x00002CD0: 0x80BF            - O_DUDE_OBJ
0x00002CD2: 0x80D4            - O_TILE_NUM
0x00002CD4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002CDA: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00002CE0: 0x80D5            - O_TILE_NUM_IN_DIRECTION
0x00002CE2: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002CE8: 0x80CE            - O_ANIMATE_MOVE_OBJ_TO_TILE
0x00002CEA: 0xC001 0x00002d24 - O_INTOP(0x00002d24)   // 11556 (11556)
0x00002CF0: 0x8004            - O_JMP
0x00002CF2: 0xC001 0x00002d24 - O_INTOP(0x00002d24)   // 11556 (11556)
0x00002CF8: 0x80BC            - O_SELF_OBJ
0x00002CFA: 0x80BF            - O_DUDE_OBJ
0x00002CFC: 0x80D3            - O_TILE_DISTANCE_OBJS
0x00002CFE: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00002D04: 0x8038            - O_GREATER
0x00002D06: 0x802F            - O_IF
0x00002D08: 0x80BC            - O_SELF_OBJ
0x00002D0A: 0x80BF            - O_DUDE_OBJ
0x00002D0C: 0x80D4            - O_TILE_NUM
0x00002D0E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002D14: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00002D1A: 0x80D5            - O_TILE_NUM_IN_DIRECTION
0x00002D1C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002D22: 0x80CE            - O_ANIMATE_MOVE_OBJ_TO_TILE
0x00002D24: 0x80BC            - O_SELF_OBJ
0x00002D26: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00002D2C: 0x80F2            - O_GAME_TICKS
0x00002D2E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002D34: 0x80F0            - O_ADD_TIMER_EVENT
0x00002D36: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002D3C: 0x800D            - O_D_TO_A
0x00002D3E: 0x8019            - O_SWAPA
0x00002D40: 0x802A            - O_POP_TO_BASE
0x00002D42: 0x8029            - O_POP_BASE
0x00002D44: 0x800C            - O_A_TO_D
0x00002D46: 0x801C            - O_POP_RETURN
0x00002D48: 0x802A            - O_POP_TO_BASE
0x00002D4A: 0x8029            - O_POP_BASE
0x00002D4C: 0x801C            - O_POP_RETURN

73: Random_Following (0x00002d4e)
===============================
0x00002D4E: 0x802B            - O_PUSH_BASE
0x00002D50: 0xC001 0x00002d92 - O_INTOP(0x00002d92)   // 11666 (11666)
0x00002D56: 0x80BC            - O_SELF_OBJ
0x00002D58: 0x80BF            - O_DUDE_OBJ
0x00002D5A: 0x80D3            - O_TILE_DISTANCE_OBJS
0x00002D5C: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x00002D62: 0x8038            - O_GREATER
0x00002D64: 0x802F            - O_IF
0x00002D66: 0x80BC            - O_SELF_OBJ
0x00002D68: 0x80BF            - O_DUDE_OBJ
0x00002D6A: 0x80D4            - O_TILE_NUM
0x00002D6C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002D72: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00002D78: 0x80D5            - O_TILE_NUM_IN_DIRECTION
0x00002D7A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002D80: 0xC001 0x00000010 - O_INTOP(0x00000010)   // 16 (16)
0x00002D86: 0x8041            - O_BWOR
0x00002D88: 0x80CE            - O_ANIMATE_MOVE_OBJ_TO_TILE
0x00002D8A: 0xC001 0x00002dcc - O_INTOP(0x00002dcc)   // 11724 (11724)
0x00002D90: 0x8004            - O_JMP
0x00002D92: 0xC001 0x00002dcc - O_INTOP(0x00002dcc)   // 11724 (11724)
0x00002D98: 0x80BC            - O_SELF_OBJ
0x00002D9A: 0x80BF            - O_DUDE_OBJ
0x00002D9C: 0x80D3            - O_TILE_DISTANCE_OBJS
0x00002D9E: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00002DA4: 0x8038            - O_GREATER
0x00002DA6: 0x802F            - O_IF
0x00002DA8: 0x80BC            - O_SELF_OBJ
0x00002DAA: 0x80BF            - O_DUDE_OBJ
0x00002DAC: 0x80D4            - O_TILE_NUM
0x00002DAE: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002DB4: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00002DBA: 0x80D5            - O_TILE_NUM_IN_DIRECTION
0x00002DBC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002DC2: 0xC001 0x00000010 - O_INTOP(0x00000010)   // 16 (16)
0x00002DC8: 0x8041            - O_BWOR
0x00002DCA: 0x80CE            - O_ANIMATE_MOVE_OBJ_TO_TILE
0x00002DCC: 0x80BC            - O_SELF_OBJ
0x00002DCE: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00002DD4: 0x80F2            - O_GAME_TICKS
0x00002DD6: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00002DDC: 0x80F0            - O_ADD_TIMER_EVENT
0x00002DDE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002DE4: 0x800D            - O_D_TO_A
0x00002DE6: 0x8019            - O_SWAPA
0x00002DE8: 0x802A            - O_POP_TO_BASE
0x00002DEA: 0x8029            - O_POP_BASE
0x00002DEC: 0x800C            - O_A_TO_D
0x00002DEE: 0x801C            - O_POP_RETURN
0x00002DF0: 0x802A            - O_POP_TO_BASE
0x00002DF2: 0x8029            - O_POP_BASE
0x00002DF4: 0x801C            - O_POP_RETURN

74: map_update_p_proc (0x00002df6)
===============================
0x00002DF6: 0x802B            - O_PUSH_BASE
0x00002DF8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002DFE: 0x800D            - O_D_TO_A
0x00002E00: 0x8019            - O_SWAPA
0x00002E02: 0x802A            - O_POP_TO_BASE
0x00002E04: 0x8029            - O_POP_BASE
0x00002E06: 0x800C            - O_A_TO_D
0x00002E08: 0x801C            - O_POP_RETURN
0x00002E0A: 0x802A            - O_POP_TO_BASE
0x00002E0C: 0x8029            - O_POP_BASE
0x00002E0E: 0x801C            - O_POP_RETURN

75: map_enter_p_proc (0x00002e10)
===============================
0x00002E10: 0x802B            - O_PUSH_BASE
0x00002E12: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002E18: 0x800D            - O_D_TO_A
0x00002E1A: 0x8019            - O_SWAPA
0x00002E1C: 0x802A            - O_POP_TO_BASE
0x00002E1E: 0x8029            - O_POP_BASE
0x00002E20: 0x800C            - O_A_TO_D
0x00002E22: 0x801C            - O_POP_RETURN
0x00002E24: 0x802A            - O_POP_TO_BASE
0x00002E26: 0x8029            - O_POP_BASE
0x00002E28: 0x801C            - O_POP_RETURN

76: critter_p_proc (0x00002e2a)
===============================
0x00002E2A: 0x802B            - O_PUSH_BASE
0x00002E2C: 0xC001 0x00002eb2 - O_INTOP(0x00002eb2)   // 11954 (11954)
0x00002E32: 0x8101            - O_CUR_MAP_INDEX
0x00002E34: 0xC001 0x00000018 - O_INTOP(0x00000018)   // 24 (24)
0x00002E3A: 0x8033            - O_EQUAL
0x00002E3C: 0x802F            - O_IF
0x00002E3E: 0xC001 0x00002eb2 - O_INTOP(0x00002eb2)   // 11954 (11954)
0x00002E44: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00002E4A: 0x80C3            - O_MAP_VAR
0x00002E4C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002E52: 0x8034            - O_NOT_EQUAL
0x00002E54: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00002E5A: 0x80C1            - O_LOCAL_VAR
0x00002E5C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002E62: 0x8033            - O_EQUAL
0x00002E64: 0x803E            - O_AND
0x00002E66: 0x802F            - O_IF
0x00002E68: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x00002E6E: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00002E74: 0x80C6            - O_SET_GLOBAL_VAR
0x00002E76: 0x80BC            - O_SELF_OBJ
0x00002E78: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002E7E: 0x80F2            - O_GAME_TICKS
0x00002E80: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002E86: 0x80F0            - O_ADD_TIMER_EVENT
0x00002E88: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00002E8E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002E94: 0x80C2            - O_SET_LOCAL_VAR
0x00002E96: 0xC001 0x00002eb2 - O_INTOP(0x00002eb2)   // 11954 (11954)
0x00002E9C: 0xC001 0x0100003f - O_INTOP(0x0100003f)   // 16777279 (16777279)
0x00002EA2: 0x814B            - O_PARTY_MEMBER_OBJ
0x00002EA4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002EAA: 0x8033            - O_EQUAL
0x00002EAC: 0x802F            - O_IF
0x00002EAE: 0x80BC            - O_SELF_OBJ
0x00002EB0: 0x8124            - O_PARTY_ADD
0x00002EB2: 0xC001 0x00002f06 - O_INTOP(0x00002f06)   // 12038 (12038)
0x00002EB8: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x00002EBE: 0x80C5            - O_GLOBAL_VAR
0x00002EC0: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00002EC6: 0x8033            - O_EQUAL
0x00002EC8: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00002ECE: 0x80C1            - O_LOCAL_VAR
0x00002ED0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002ED6: 0x8033            - O_EQUAL
0x00002ED8: 0x803E            - O_AND
0x00002EDA: 0x802F            - O_IF
0x00002EDC: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00002EE2: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002EE8: 0x80C2            - O_SET_LOCAL_VAR
0x00002EEA: 0xC001 0x00002f06 - O_INTOP(0x00002f06)   // 12038 (12038)
0x00002EF0: 0xC001 0x0100003f - O_INTOP(0x0100003f)   // 16777279 (16777279)
0x00002EF6: 0x814B            - O_PARTY_MEMBER_OBJ
0x00002EF8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002EFE: 0x8033            - O_EQUAL
0x00002F00: 0x802F            - O_IF
0x00002F02: 0x80BC            - O_SELF_OBJ
0x00002F04: 0x8124            - O_PARTY_ADD
0x00002F06: 0xC001 0x00002f9a - O_INTOP(0x00002f9a)   // 12186 (12186)
0x00002F0C: 0xC001 0x0100003f - O_INTOP(0x0100003f)   // 16777279 (16777279)
0x00002F12: 0x814B            - O_PARTY_MEMBER_OBJ
0x00002F14: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002F1A: 0x8034            - O_NOT_EQUAL
0x00002F1C: 0x802F            - O_IF
0x00002F1E: 0xC001 0x00002f60 - O_INTOP(0x00002f60)   // 12128 (12128)
0x00002F24: 0x80BC            - O_SELF_OBJ
0x00002F26: 0x80BF            - O_DUDE_OBJ
0x00002F28: 0x80D3            - O_TILE_DISTANCE_OBJS
0x00002F2A: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x00002F30: 0x8038            - O_GREATER
0x00002F32: 0x802F            - O_IF
0x00002F34: 0x80BC            - O_SELF_OBJ
0x00002F36: 0x80BF            - O_DUDE_OBJ
0x00002F38: 0x80D4            - O_TILE_NUM
0x00002F3A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002F40: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00002F46: 0x80B4            - O_RANDOM
0x00002F48: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002F4E: 0x80D5            - O_TILE_NUM_IN_DIRECTION
0x00002F50: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002F56: 0x80CE            - O_ANIMATE_MOVE_OBJ_TO_TILE
0x00002F58: 0xC001 0x00002f9a - O_INTOP(0x00002f9a)   // 12186 (12186)
0x00002F5E: 0x8004            - O_JMP
0x00002F60: 0xC001 0x00002f9a - O_INTOP(0x00002f9a)   // 12186 (12186)
0x00002F66: 0x80BC            - O_SELF_OBJ
0x00002F68: 0x80BF            - O_DUDE_OBJ
0x00002F6A: 0x80D3            - O_TILE_DISTANCE_OBJS
0x00002F6C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002F72: 0x8038            - O_GREATER
0x00002F74: 0x802F            - O_IF
0x00002F76: 0x80BC            - O_SELF_OBJ
0x00002F78: 0x80BF            - O_DUDE_OBJ
0x00002F7A: 0x80D4            - O_TILE_NUM
0x00002F7C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002F82: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00002F88: 0x80B4            - O_RANDOM
0x00002F8A: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00002F90: 0x80D5            - O_TILE_NUM_IN_DIRECTION
0x00002F92: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002F98: 0x80CE            - O_ANIMATE_MOVE_OBJ_TO_TILE
0x00002F9A: 0xC001 0x00003064 - O_INTOP(0x00003064)   // 12388 (12388)
0x00002FA0: 0x8101            - O_CUR_MAP_INDEX
0x00002FA2: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x00002FA8: 0x8033            - O_EQUAL
0x00002FAA: 0x8101            - O_CUR_MAP_INDEX
0x00002FAC: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00002FB2: 0x8033            - O_EQUAL
0x00002FB4: 0x803F            - O_OR
0x00002FB6: 0x802F            - O_IF
0x00002FB8: 0xC001 0x00003006 - O_INTOP(0x00003006)   // 12294 (12294)
0x00002FBE: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x00002FC4: 0x80C5            - O_GLOBAL_VAR
0x00002FC6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002FCC: 0x8033            - O_EQUAL
0x00002FCE: 0xC001 0x00000108 - O_INTOP(0x00000108)   // 264 (264)
0x00002FD4: 0x80C5            - O_GLOBAL_VAR
0x00002FD6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002FDC: 0x8033            - O_EQUAL
0x00002FDE: 0x803E            - O_AND
0x00002FE0: 0x802F            - O_IF
0x00002FE2: 0x80BC            - O_SELF_OBJ
0x00002FE4: 0x8124            - O_PARTY_ADD
0x00002FE6: 0x80BC            - O_SELF_OBJ
0x00002FE8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002FEE: 0x80E3            - O_SET_OBJ_VISIBILITY
0x00002FF0: 0xC001 0x00000108 - O_INTOP(0x00000108)   // 264 (264)
0x00002FF6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002FFC: 0x80C6            - O_SET_GLOBAL_VAR
0x00002FFE: 0xC001 0x0000305c - O_INTOP(0x0000305c)   // 12380 (12380)
0x00003004: 0x8004            - O_JMP
0x00003006: 0xC001 0x0000305c - O_INTOP(0x0000305c)   // 12380 (12380)
0x0000300C: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x00003012: 0x80C5            - O_GLOBAL_VAR
0x00003014: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000301A: 0x8038            - O_GREATER
0x0000301C: 0xC001 0x00000108 - O_INTOP(0x00000108)   // 264 (264)
0x00003022: 0x80C5            - O_GLOBAL_VAR
0x00003024: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x0000302A: 0x8033            - O_EQUAL
0x0000302C: 0x803E            - O_AND
0x0000302E: 0x802F            - O_IF
0x00003030: 0x80BC            - O_SELF_OBJ
0x00003032: 0x8125            - O_PARTY_REMOVE
0x00003034: 0x80BC            - O_SELF_OBJ
0x00003036: 0xC001 0x00004146 - O_INTOP(0x00004146)   // 16710 (16710)
0x0000303C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003042: 0x80CE            - O_ANIMATE_MOVE_OBJ_TO_TILE
0x00003044: 0x80BC            - O_SELF_OBJ
0x00003046: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000304C: 0x80E3            - O_SET_OBJ_VISIBILITY
0x0000304E: 0xC001 0x00000108 - O_INTOP(0x00000108)   // 264 (264)
0x00003054: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000305A: 0x80C6            - O_SET_GLOBAL_VAR
0x0000305C: 0xC001 0x00003112 - O_INTOP(0x00003112)   // 12562 (12562)
0x00003062: 0x8004            - O_JMP
0x00003064: 0xC001 0x00003112 - O_INTOP(0x00003112)   // 12562 (12562)
0x0000306A: 0x8101            - O_CUR_MAP_INDEX
0x0000306C: 0xC001 0x00000018 - O_INTOP(0x00000018)   // 24 (24)
0x00003072: 0x8033            - O_EQUAL
0x00003074: 0x802F            - O_IF
0x00003076: 0xC001 0x000030d6 - O_INTOP(0x000030d6)   // 12502 (12502)
0x0000307C: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x00003082: 0x80C5            - O_GLOBAL_VAR
0x00003084: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000308A: 0x8033            - O_EQUAL
0x0000308C: 0xC001 0x00000108 - O_INTOP(0x00000108)   // 264 (264)
0x00003092: 0x80C5            - O_GLOBAL_VAR
0x00003094: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000309A: 0x8033            - O_EQUAL
0x0000309C: 0x803E            - O_AND
0x0000309E: 0x802F            - O_IF
0x000030A0: 0x80BC            - O_SELF_OBJ
0x000030A2: 0x8125            - O_PARTY_REMOVE
0x000030A4: 0x80BC            - O_SELF_OBJ
0x000030A6: 0xC001 0x000045f1 - O_INTOP(0x000045f1)   // 17905 (17905)
0x000030AC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000030B2: 0x80FF            - O_CRITTER_ATTEMPT_PLACEMENT
0x000030B4: 0x801A            - O_POP
0x000030B6: 0x80BC            - O_SELF_OBJ
0x000030B8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000030BE: 0x80E3            - O_SET_OBJ_VISIBILITY
0x000030C0: 0xC001 0x00000108 - O_INTOP(0x00000108)   // 264 (264)
0x000030C6: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000030CC: 0x80C6            - O_SET_GLOBAL_VAR
0x000030CE: 0xC001 0x00003112 - O_INTOP(0x00003112)   // 12562 (12562)
0x000030D4: 0x8004            - O_JMP
0x000030D6: 0xC001 0x00003112 - O_INTOP(0x00003112)   // 12562 (12562)
0x000030DC: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x000030E2: 0x80C5            - O_GLOBAL_VAR
0x000030E4: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000030EA: 0x8033            - O_EQUAL
0x000030EC: 0xC001 0x00000108 - O_INTOP(0x00000108)   // 264 (264)
0x000030F2: 0x80C5            - O_GLOBAL_VAR
0x000030F4: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000030FA: 0x8033            - O_EQUAL
0x000030FC: 0x803E            - O_AND
0x000030FE: 0x802F            - O_IF
0x00003100: 0x80BC            - O_SELF_OBJ
0x00003102: 0x8124            - O_PARTY_ADD
0x00003104: 0xC001 0x00000108 - O_INTOP(0x00000108)   // 264 (264)
0x0000310A: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00003110: 0x80C6            - O_SET_GLOBAL_VAR
0x00003112: 0xC001 0x0000321e - O_INTOP(0x0000321e)   // 12830 (12830)
0x00003118: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x0000311E: 0x80C5            - O_GLOBAL_VAR
0x00003120: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00003126: 0x8034            - O_NOT_EQUAL
0x00003128: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x0000312E: 0x80C5            - O_GLOBAL_VAR
0x00003130: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00003136: 0x8034            - O_NOT_EQUAL
0x00003138: 0x803E            - O_AND
0x0000313A: 0x802F            - O_IF
0x0000313C: 0xC001 0x00003170 - O_INTOP(0x00003170)   // 12656 (12656)
0x00003142: 0x80BC            - O_SELF_OBJ
0x00003144: 0x80BF            - O_DUDE_OBJ
0x00003146: 0x80DC            - O_OBJ_CAN_SEE_OBJ
0x00003148: 0x802F            - O_IF
0x0000314A: 0xC001 0x00003170 - O_INTOP(0x00003170)   // 12656 (12656)
0x00003150: 0xC001 0x000000f6 - O_INTOP(0x000000f6)   // 246 (246)
0x00003156: 0x80C5            - O_GLOBAL_VAR
0x00003158: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000315E: 0x8033            - O_EQUAL
0x00003160: 0x802F            - O_IF
0x00003162: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00003168: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x0000316E: 0x8013            - O_STORE_GLOBAL
0x00003170: 0xC001 0x000031bc - O_INTOP(0x000031bc)   // 12732 (12732)
0x00003176: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x0000317C: 0x8012            - O_FETCH_GLOBAL
0x0000317E: 0x802F            - O_IF
0x00003180: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003186: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x0000318C: 0x8013            - O_STORE_GLOBAL
0x0000318E: 0x80BF            - O_DUDE_OBJ
0x00003190: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003196: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000319C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000031A2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000031A8: 0xC001 0x00007530 - O_INTOP(0x00007530)   // 30000 (30000)
0x000031AE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000031B4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000031BA: 0x80D0            - O_ATTACK_COMPLEX
0x000031BC: 0xC001 0x000031d2 - O_INTOP(0x000031d2)   // 12754 (12754)
0x000031C2: 0x800D            - O_D_TO_A
0x000031C4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000031CA: 0xC001 0x00000047 - O_INTOP(0x00000047)   // 71 (71)
0x000031D0: 0x8005            - O_CALL
0x000031D2: 0x801A            - O_POP
0x000031D4: 0xC001 0x0000321e - O_INTOP(0x0000321e)   // 12830 (12830)
0x000031DA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000031E0: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x000031E6: 0x80B4            - O_RANDOM
0x000031E8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000031EE: 0x8033            - O_EQUAL
0x000031F0: 0x802F            - O_IF
0x000031F2: 0x80BC            - O_SELF_OBJ
0x000031F4: 0x80BC            - O_SELF_OBJ
0x000031F6: 0x80D4            - O_TILE_NUM
0x000031F8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000031FE: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00003204: 0x80B4            - O_RANDOM
0x00003206: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x0000320C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00003212: 0x80B4            - O_RANDOM
0x00003214: 0x80D5            - O_TILE_NUM_IN_DIRECTION
0x00003216: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000321C: 0x80CE            - O_ANIMATE_MOVE_OBJ_TO_TILE
0x0000321E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003224: 0x800D            - O_D_TO_A
0x00003226: 0x8019            - O_SWAPA
0x00003228: 0x802A            - O_POP_TO_BASE
0x0000322A: 0x8029            - O_POP_BASE
0x0000322C: 0x800C            - O_A_TO_D
0x0000322E: 0x801C            - O_POP_RETURN
0x00003230: 0x802A            - O_POP_TO_BASE
0x00003232: 0x8029            - O_POP_BASE
0x00003234: 0x801C            - O_POP_RETURN

77: get_reaction (0x00003236)
===============================
0x00003236: 0x802B            - O_PUSH_BASE
0x00003238: 0xC001 0x000034b0 - O_INTOP(0x000034b0)   // 13488 (13488)
0x0000323E: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00003244: 0x80C1            - O_LOCAL_VAR
0x00003246: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000324C: 0x8033            - O_EQUAL
0x0000324E: 0x802F            - O_IF
0x00003250: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003256: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000325C: 0x80C2            - O_SET_LOCAL_VAR
0x0000325E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00003264: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x0000326A: 0x80C2            - O_SET_LOCAL_VAR
0x0000326C: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00003272: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00003278: 0x80C2            - O_SET_LOCAL_VAR
0x0000327A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003280: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003286: 0x80C1            - O_LOCAL_VAR
0x00003288: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x0000328E: 0x80BF            - O_DUDE_OBJ
0x00003290: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00003296: 0x80CA            - O_GET_CRITTER_STAT
0x00003298: 0x803B            - O_MUL
0x0000329A: 0x8039            - O_ADD
0x0000329C: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x000032A2: 0x803A            - O_SUB
0x000032A4: 0x80C2            - O_SET_LOCAL_VAR
0x000032A6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000032AC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000032B2: 0x80C1            - O_LOCAL_VAR
0x000032B4: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x000032BA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000032C0: 0x80BF            - O_DUDE_OBJ
0x000032C2: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x000032C8: 0x80F3            - O_HAS_TRAIT
0x000032CA: 0x803B            - O_MUL
0x000032CC: 0x8039            - O_ADD
0x000032CE: 0x80C2            - O_SET_LOCAL_VAR
0x000032D0: 0xC001 0x00003344 - O_INTOP(0x00003344)   // 13124 (13124)
0x000032D6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000032DC: 0x80BF            - O_DUDE_OBJ
0x000032DE: 0xC001 0x00000027 - O_INTOP(0x00000027)   // 39 (39)
0x000032E4: 0x80F3            - O_HAS_TRAIT
0x000032E6: 0x802F            - O_IF
0x000032E8: 0xC001 0x00003322 - O_INTOP(0x00003322)   // 13090 (13090)
0x000032EE: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x000032F4: 0x80C5            - O_GLOBAL_VAR
0x000032F6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000032FC: 0x8038            - O_GREATER
0x000032FE: 0x802F            - O_IF
0x00003300: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003306: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000330C: 0x80C1            - O_LOCAL_VAR
0x0000330E: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00003314: 0x80C5            - O_GLOBAL_VAR
0x00003316: 0x8039            - O_ADD
0x00003318: 0x80C2            - O_SET_LOCAL_VAR
0x0000331A: 0xC001 0x0000333c - O_INTOP(0x0000333c)   // 13116 (13116)
0x00003320: 0x8004            - O_JMP
0x00003322: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003328: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000332E: 0x80C1            - O_LOCAL_VAR
0x00003330: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00003336: 0x80C5            - O_GLOBAL_VAR
0x00003338: 0x803A            - O_SUB
0x0000333A: 0x80C2            - O_SET_LOCAL_VAR
0x0000333C: 0xC001 0x00003398 - O_INTOP(0x00003398)   // 13208 (13208)
0x00003342: 0x8004            - O_JMP
0x00003344: 0xC001 0x0000337e - O_INTOP(0x0000337e)   // 13182 (13182)
0x0000334A: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00003350: 0x80C1            - O_LOCAL_VAR
0x00003352: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00003358: 0x8033            - O_EQUAL
0x0000335A: 0x802F            - O_IF
0x0000335C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003362: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003368: 0x80C1            - O_LOCAL_VAR
0x0000336A: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00003370: 0x80C5            - O_GLOBAL_VAR
0x00003372: 0x803A            - O_SUB
0x00003374: 0x80C2            - O_SET_LOCAL_VAR
0x00003376: 0xC001 0x00003398 - O_INTOP(0x00003398)   // 13208 (13208)
0x0000337C: 0x8004            - O_JMP
0x0000337E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003384: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000338A: 0x80C1            - O_LOCAL_VAR
0x0000338C: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00003392: 0x80C5            - O_GLOBAL_VAR
0x00003394: 0x8039            - O_ADD
0x00003396: 0x80C2            - O_SET_LOCAL_VAR
0x00003398: 0xC001 0x000033c8 - O_INTOP(0x000033c8)   // 13256 (13256)
0x0000339E: 0xC001 0x0000009e - O_INTOP(0x0000009e)   // 158 (158)
0x000033A4: 0x80C5            - O_GLOBAL_VAR
0x000033A6: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000033AC: 0x8038            - O_GREATER
0x000033AE: 0x802F            - O_IF
0x000033B0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000033B6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000033BC: 0x80C1            - O_LOCAL_VAR
0x000033BE: 0xC001 0x0000001e - O_INTOP(0x0000001e)   // 30 (30)
0x000033C4: 0x803A            - O_SUB
0x000033C6: 0x80C2            - O_SET_LOCAL_VAR
0x000033C8: 0xC001 0x00003430 - O_INTOP(0x00003430)   // 13360 (13360)
0x000033CE: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x000033D4: 0x80C5            - O_GLOBAL_VAR
0x000033D6: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x000033DC: 0x80C5            - O_GLOBAL_VAR
0x000033DE: 0x8039            - O_ADD
0x000033E0: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x000033E6: 0x8036            - O_GREATER_EQUAL
0x000033E8: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x000033EE: 0x80C5            - O_GLOBAL_VAR
0x000033F0: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000033F6: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x000033FC: 0x80C5            - O_GLOBAL_VAR
0x000033FE: 0x803B            - O_MUL
0x00003400: 0x8038            - O_GREATER
0x00003402: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x00003408: 0x80C5            - O_GLOBAL_VAR
0x0000340A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00003410: 0x8033            - O_EQUAL
0x00003412: 0x803F            - O_OR
0x00003414: 0x803E            - O_AND
0x00003416: 0x802F            - O_IF
0x00003418: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000341E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003424: 0x80C1            - O_LOCAL_VAR
0x00003426: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x0000342C: 0x8039            - O_ADD
0x0000342E: 0x80C2            - O_SET_LOCAL_VAR
0x00003430: 0xC001 0x00003498 - O_INTOP(0x00003498)   // 13464 (13464)
0x00003436: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x0000343C: 0x80C5            - O_GLOBAL_VAR
0x0000343E: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00003444: 0x80C5            - O_GLOBAL_VAR
0x00003446: 0x8039            - O_ADD
0x00003448: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x0000344E: 0x8036            - O_GREATER_EQUAL
0x00003450: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00003456: 0x80C5            - O_GLOBAL_VAR
0x00003458: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x0000345E: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00003464: 0x80C5            - O_GLOBAL_VAR
0x00003466: 0x803B            - O_MUL
0x00003468: 0x8038            - O_GREATER
0x0000346A: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x00003470: 0x80C5            - O_GLOBAL_VAR
0x00003472: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00003478: 0x8033            - O_EQUAL
0x0000347A: 0x803F            - O_OR
0x0000347C: 0x803E            - O_AND
0x0000347E: 0x802F            - O_IF
0x00003480: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003486: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000348C: 0x80C1            - O_LOCAL_VAR
0x0000348E: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x00003494: 0x803A            - O_SUB
0x00003496: 0x80C2            - O_SET_LOCAL_VAR
0x00003498: 0xC001 0x000034ae - O_INTOP(0x000034ae)   // 13486 (13486)
0x0000349E: 0x800D            - O_D_TO_A
0x000034A0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000034A6: 0xC001 0x0000004e - O_INTOP(0x0000004e)   // 78 (78)
0x000034AC: 0x8005            - O_CALL
0x000034AE: 0x801A            - O_POP
0x000034B0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000034B6: 0x800D            - O_D_TO_A
0x000034B8: 0x8019            - O_SWAPA
0x000034BA: 0x802A            - O_POP_TO_BASE
0x000034BC: 0x8029            - O_POP_BASE
0x000034BE: 0x800C            - O_A_TO_D
0x000034C0: 0x801C            - O_POP_RETURN
0x000034C2: 0x802A            - O_POP_TO_BASE
0x000034C4: 0x8029            - O_POP_BASE
0x000034C6: 0x801C            - O_POP_RETURN

78: ReactToLevel (0x000034c8)
===============================
0x000034C8: 0x802B            - O_PUSH_BASE
0x000034CA: 0xC001 0x000034f8 - O_INTOP(0x000034f8)   // 13560 (13560)
0x000034D0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000034D6: 0x80C1            - O_LOCAL_VAR
0x000034D8: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x000034DE: 0x8035            - O_LESS_EQUAL
0x000034E0: 0x802F            - O_IF
0x000034E2: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000034E8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000034EE: 0x80C2            - O_SET_LOCAL_VAR
0x000034F0: 0xC001 0x00003534 - O_INTOP(0x00003534)   // 13620 (13620)
0x000034F6: 0x8004            - O_JMP
0x000034F8: 0xC001 0x00003526 - O_INTOP(0x00003526)   // 13606 (13606)
0x000034FE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003504: 0x80C1            - O_LOCAL_VAR
0x00003506: 0xC001 0x0000004b - O_INTOP(0x0000004b)   // 75 (75)
0x0000350C: 0x8035            - O_LESS_EQUAL
0x0000350E: 0x802F            - O_IF
0x00003510: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00003516: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x0000351C: 0x80C2            - O_SET_LOCAL_VAR
0x0000351E: 0xC001 0x00003534 - O_INTOP(0x00003534)   // 13620 (13620)
0x00003524: 0x8004            - O_JMP
0x00003526: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000352C: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00003532: 0x80C2            - O_SET_LOCAL_VAR
0x00003534: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000353A: 0x800D            - O_D_TO_A
0x0000353C: 0x8019            - O_SWAPA
0x0000353E: 0x802A            - O_POP_TO_BASE
0x00003540: 0x8029            - O_POP_BASE
0x00003542: 0x800C            - O_A_TO_D
0x00003544: 0x801C            - O_POP_RETURN
0x00003546: 0x802A            - O_POP_TO_BASE
0x00003548: 0x8029            - O_POP_BASE
0x0000354A: 0x801C            - O_POP_RETURN

79: LevelToReact (0x0000354c)
===============================
0x0000354C: 0x802B            - O_PUSH_BASE
0x0000354E: 0xC001 0x00003584 - O_INTOP(0x00003584)   // 13700 (13700)
0x00003554: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000355A: 0x80C1            - O_LOCAL_VAR
0x0000355C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00003562: 0x8033            - O_EQUAL
0x00003564: 0x802F            - O_IF
0x00003566: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000356C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00003572: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00003578: 0x80B4            - O_RANDOM
0x0000357A: 0x80C2            - O_SET_LOCAL_VAR
0x0000357C: 0xC001 0x000035d0 - O_INTOP(0x000035d0)   // 13776 (13776)
0x00003582: 0x8004            - O_JMP
0x00003584: 0xC001 0x000035ba - O_INTOP(0x000035ba)   // 13754 (13754)
0x0000358A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00003590: 0x80C1            - O_LOCAL_VAR
0x00003592: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00003598: 0x8033            - O_EQUAL
0x0000359A: 0x802F            - O_IF
0x0000359C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000035A2: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x000035A8: 0xC001 0x0000004b - O_INTOP(0x0000004b)   // 75 (75)
0x000035AE: 0x80B4            - O_RANDOM
0x000035B0: 0x80C2            - O_SET_LOCAL_VAR
0x000035B2: 0xC001 0x000035d0 - O_INTOP(0x000035d0)   // 13776 (13776)
0x000035B8: 0x8004            - O_JMP
0x000035BA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000035C0: 0xC001 0x0000004c - O_INTOP(0x0000004c)   // 76 (76)
0x000035C6: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x000035CC: 0x80B4            - O_RANDOM
0x000035CE: 0x80C2            - O_SET_LOCAL_VAR
0x000035D0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000035D6: 0x800D            - O_D_TO_A
0x000035D8: 0x8019            - O_SWAPA
0x000035DA: 0x802A            - O_POP_TO_BASE
0x000035DC: 0x8029            - O_POP_BASE
0x000035DE: 0x800C            - O_A_TO_D
0x000035E0: 0x801C            - O_POP_RETURN
0x000035E2: 0x802A            - O_POP_TO_BASE
0x000035E4: 0x8029            - O_POP_BASE
0x000035E6: 0x801C            - O_POP_RETURN

80: UpReact (0x000035e8)
===============================
0x000035E8: 0x802B            - O_PUSH_BASE
0x000035EA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000035F0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000035F6: 0x80C1            - O_LOCAL_VAR
0x000035F8: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x000035FE: 0x8039            - O_ADD
0x00003600: 0x80C2            - O_SET_LOCAL_VAR
0x00003602: 0xC001 0x00003618 - O_INTOP(0x00003618)   // 13848 (13848)
0x00003608: 0x800D            - O_D_TO_A
0x0000360A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003610: 0xC001 0x0000004e - O_INTOP(0x0000004e)   // 78 (78)
0x00003616: 0x8005            - O_CALL
0x00003618: 0x801A            - O_POP
0x0000361A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003620: 0x800D            - O_D_TO_A
0x00003622: 0x8019            - O_SWAPA
0x00003624: 0x802A            - O_POP_TO_BASE
0x00003626: 0x8029            - O_POP_BASE
0x00003628: 0x800C            - O_A_TO_D
0x0000362A: 0x801C            - O_POP_RETURN
0x0000362C: 0x802A            - O_POP_TO_BASE
0x0000362E: 0x8029            - O_POP_BASE
0x00003630: 0x801C            - O_POP_RETURN

81: DownReact (0x00003632)
===============================
0x00003632: 0x802B            - O_PUSH_BASE
0x00003634: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000363A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003640: 0x80C1            - O_LOCAL_VAR
0x00003642: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00003648: 0x803A            - O_SUB
0x0000364A: 0x80C2            - O_SET_LOCAL_VAR
0x0000364C: 0xC001 0x00003662 - O_INTOP(0x00003662)   // 13922 (13922)
0x00003652: 0x800D            - O_D_TO_A
0x00003654: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000365A: 0xC001 0x0000004e - O_INTOP(0x0000004e)   // 78 (78)
0x00003660: 0x8005            - O_CALL
0x00003662: 0x801A            - O_POP
0x00003664: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000366A: 0x800D            - O_D_TO_A
0x0000366C: 0x8019            - O_SWAPA
0x0000366E: 0x802A            - O_POP_TO_BASE
0x00003670: 0x8029            - O_POP_BASE
0x00003672: 0x800C            - O_A_TO_D
0x00003674: 0x801C            - O_POP_RETURN
0x00003676: 0x802A            - O_POP_TO_BASE
0x00003678: 0x8029            - O_POP_BASE
0x0000367A: 0x801C            - O_POP_RETURN

82: BottomReact (0x0000367c)
===============================
0x0000367C: 0x802B            - O_PUSH_BASE
0x0000367E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00003684: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000368A: 0x80C2            - O_SET_LOCAL_VAR
0x0000368C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003692: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00003698: 0x80C2            - O_SET_LOCAL_VAR
0x0000369A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000036A0: 0x800D            - O_D_TO_A
0x000036A2: 0x8019            - O_SWAPA
0x000036A4: 0x802A            - O_POP_TO_BASE
0x000036A6: 0x8029            - O_POP_BASE
0x000036A8: 0x800C            - O_A_TO_D
0x000036AA: 0x801C            - O_POP_RETURN
0x000036AC: 0x802A            - O_POP_TO_BASE
0x000036AE: 0x8029            - O_POP_BASE
0x000036B0: 0x801C            - O_POP_RETURN

83: TopReact (0x000036b2)
===============================
0x000036B2: 0x802B            - O_PUSH_BASE
0x000036B4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000036BA: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x000036C0: 0x80C2            - O_SET_LOCAL_VAR
0x000036C2: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000036C8: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000036CE: 0x80C2            - O_SET_LOCAL_VAR
0x000036D0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000036D6: 0x800D            - O_D_TO_A
0x000036D8: 0x8019            - O_SWAPA
0x000036DA: 0x802A            - O_POP_TO_BASE
0x000036DC: 0x8029            - O_POP_BASE
0x000036DE: 0x800C            - O_A_TO_D
0x000036E0: 0x801C            - O_POP_RETURN
0x000036E2: 0x802A            - O_POP_TO_BASE
0x000036E4: 0x8029            - O_POP_BASE
0x000036E6: 0x801C            - O_POP_RETURN

84: BigUpReact (0x000036e8)
===============================
0x000036E8: 0x802B            - O_PUSH_BASE
0x000036EA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000036F0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000036F6: 0x80C1            - O_LOCAL_VAR
0x000036F8: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x000036FE: 0x8039            - O_ADD
0x00003700: 0x80C2            - O_SET_LOCAL_VAR
0x00003702: 0xC001 0x00003718 - O_INTOP(0x00003718)   // 14104 (14104)
0x00003708: 0x800D            - O_D_TO_A
0x0000370A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003710: 0xC001 0x0000004e - O_INTOP(0x0000004e)   // 78 (78)
0x00003716: 0x8005            - O_CALL
0x00003718: 0x801A            - O_POP
0x0000371A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003720: 0x800D            - O_D_TO_A
0x00003722: 0x8019            - O_SWAPA
0x00003724: 0x802A            - O_POP_TO_BASE
0x00003726: 0x8029            - O_POP_BASE
0x00003728: 0x800C            - O_A_TO_D
0x0000372A: 0x801C            - O_POP_RETURN
0x0000372C: 0x802A            - O_POP_TO_BASE
0x0000372E: 0x8029            - O_POP_BASE
0x00003730: 0x801C            - O_POP_RETURN

85: BigDownReact (0x00003732)
===============================
0x00003732: 0x802B            - O_PUSH_BASE
0x00003734: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000373A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003740: 0x80C1            - O_LOCAL_VAR
0x00003742: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00003748: 0x803A            - O_SUB
0x0000374A: 0x80C2            - O_SET_LOCAL_VAR
0x0000374C: 0xC001 0x00003762 - O_INTOP(0x00003762)   // 14178 (14178)
0x00003752: 0x800D            - O_D_TO_A
0x00003754: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000375A: 0xC001 0x0000004e - O_INTOP(0x0000004e)   // 78 (78)
0x00003760: 0x8005            - O_CALL
0x00003762: 0x801A            - O_POP
0x00003764: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000376A: 0x800D            - O_D_TO_A
0x0000376C: 0x8019            - O_SWAPA
0x0000376E: 0x802A            - O_POP_TO_BASE
0x00003770: 0x8029            - O_POP_BASE
0x00003772: 0x800C            - O_A_TO_D
0x00003774: 0x801C            - O_POP_RETURN
0x00003776: 0x802A            - O_POP_TO_BASE
0x00003778: 0x8029            - O_POP_BASE
0x0000377A: 0x801C            - O_POP_RETURN

86: UpReactLevel (0x0000377c)
===============================
0x0000377C: 0x802B            - O_PUSH_BASE
0x0000377E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00003784: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000378A: 0x80C1            - O_LOCAL_VAR
0x0000378C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00003792: 0x8039            - O_ADD
0x00003794: 0x80C2            - O_SET_LOCAL_VAR
0x00003796: 0xC001 0x000037bc - O_INTOP(0x000037bc)   // 14268 (14268)
0x0000379C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000037A2: 0x80C1            - O_LOCAL_VAR
0x000037A4: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000037AA: 0x8038            - O_GREATER
0x000037AC: 0x802F            - O_IF
0x000037AE: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000037B4: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000037BA: 0x80C2            - O_SET_LOCAL_VAR
0x000037BC: 0xC001 0x000037d2 - O_INTOP(0x000037d2)   // 14290 (14290)
0x000037C2: 0x800D            - O_D_TO_A
0x000037C4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000037CA: 0xC001 0x0000004f - O_INTOP(0x0000004f)   // 79 (79)
0x000037D0: 0x8005            - O_CALL
0x000037D2: 0x801A            - O_POP
0x000037D4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000037DA: 0x800D            - O_D_TO_A
0x000037DC: 0x8019            - O_SWAPA
0x000037DE: 0x802A            - O_POP_TO_BASE
0x000037E0: 0x8029            - O_POP_BASE
0x000037E2: 0x800C            - O_A_TO_D
0x000037E4: 0x801C            - O_POP_RETURN
0x000037E6: 0x802A            - O_POP_TO_BASE
0x000037E8: 0x8029            - O_POP_BASE
0x000037EA: 0x801C            - O_POP_RETURN

87: DownReactLevel (0x000037ec)
===============================
0x000037EC: 0x802B            - O_PUSH_BASE
0x000037EE: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000037F4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000037FA: 0x80C1            - O_LOCAL_VAR
0x000037FC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00003802: 0x803A            - O_SUB
0x00003804: 0x80C2            - O_SET_LOCAL_VAR
0x00003806: 0xC001 0x0000382c - O_INTOP(0x0000382c)   // 14380 (14380)
0x0000380C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00003812: 0x80C1            - O_LOCAL_VAR
0x00003814: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000381A: 0x8037            - O_LESS
0x0000381C: 0x802F            - O_IF
0x0000381E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00003824: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000382A: 0x80C2            - O_SET_LOCAL_VAR
0x0000382C: 0xC001 0x00003842 - O_INTOP(0x00003842)   // 14402 (14402)
0x00003832: 0x800D            - O_D_TO_A
0x00003834: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000383A: 0xC001 0x0000004f - O_INTOP(0x0000004f)   // 79 (79)
0x00003840: 0x8005            - O_CALL
0x00003842: 0x801A            - O_POP
0x00003844: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000384A: 0x800D            - O_D_TO_A
0x0000384C: 0x8019            - O_SWAPA
0x0000384E: 0x802A            - O_POP_TO_BASE
0x00003850: 0x8029            - O_POP_BASE
0x00003852: 0x800C            - O_A_TO_D
0x00003854: 0x801C            - O_POP_RETURN
0x00003856: 0x802A            - O_POP_TO_BASE
0x00003858: 0x8029            - O_POP_BASE
0x0000385A: 0x801C            - O_POP_RETURN

88: Goodbyes (0x0000385c)
===============================
0x0000385C: 0x802B            - O_PUSH_BASE
0x0000385E: 0xC001 0x0000027a - O_INTOP(0x0000027a)   // 634 (634)
0x00003864: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x0000386A: 0xC001 0x00000069 - O_INTOP(0x00000069)   // 105 (105)
0x00003870: 0x80B4            - O_RANDOM
0x00003872: 0x8105            - O_MESSAGE_STR
0x00003874: 0xC001 0x0000000d - O_INTOP(0x0000000d)   // 13 (13)
0x0000387A: 0x8013            - O_STORE_GLOBAL
0x0000387C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003882: 0x800D            - O_D_TO_A
0x00003884: 0x8019            - O_SWAPA
0x00003886: 0x802A            - O_POP_TO_BASE
0x00003888: 0x8029            - O_POP_BASE
0x0000388A: 0x800C            - O_A_TO_D
0x0000388C: 0x801C            - O_POP_RETURN
0x0000388E: 0x802A            - O_POP_TO_BASE
0x00003890: 0x8029            - O_POP_BASE
0x00003892: 0x801C            - O_POP_RETURN

