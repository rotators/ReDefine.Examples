Fallout script decompiler, version 8.4.6 (sfall edition)
Copyright (C) Anchorite (TeamX), 2005-2009
anchorite2001@yandex.ru
Continued by Nirran, phobos2077, Mr.Stalin (2014-2020)
Crossplatformed by alexeevdv (2015)
int2ssl is using Fallout 1 code.
Loading file Games/Fallout1.Steam/scripts/LARS.int...
  Read startup code
  Read procedures table
  Read namespace
  Read stringspace
  Read tail of startup code
    Check "Jump to 'start' procedure" / "Jump to end of statup code"
    Check "# of argument to 'start' procedure"
    Extract "Export var" section
    Extract "Set exported var values" section
    Extract "Export procedures" section
    Extract "Global variables" section
  Read procedure's bodies
    Procedure: 0
    Procedure: 1
    Procedure: 2
    Procedure: 3
    Procedure: 4
    Procedure: 5
    Procedure: 6
    Procedure: 7
    Procedure: 8
    Procedure: 9
    Procedure: 10
    Procedure: 11
    Procedure: 12
    Procedure: 13
    Procedure: 14
    Procedure: 15
    Procedure: 16
    Procedure: 17
    Procedure: 18
    Procedure: 19
    Procedure: 20
    Procedure: 21
    Procedure: 22
    Procedure: 23
    Procedure: 24
    Procedure: 25
    Procedure: 26
    Procedure: 27
    Procedure: 28
    Procedure: 29
    Procedure: 30
    Procedure: 31
    Procedure: 32
    Procedure: 33
    Procedure: 34
    Procedure: 35
    Procedure: 36
    Procedure: 37
    Procedure: 38
    Procedure: 39
    Procedure: 40
    Procedure: 41
    Procedure: 42
    Procedure: 43
    Procedure: 44
    Procedure: 45
    Procedure: 46
    Procedure: 47
    Procedure: 48
    Procedure: 49
    Procedure: 50
    Procedure: 51
    Procedure: 52
    Procedure: 53
File Games/Fallout1.Steam/scripts/LARS.int loaded successfuly

Decompiling...
  Init definitions
  Processing code
    Intial reducing
    Building execution tree
        Procedure: 0
        Procedure: 1
        Procedure: 2
        Procedure: 3
        Procedure: 4
        Procedure: 5
        Procedure: 6
        Procedure: 7
        Procedure: 8
        Procedure: 9
        Procedure: 10
        Procedure: 11
        Procedure: 12
        Procedure: 13
        Procedure: 14
        Procedure: 15
        Procedure: 16
        Procedure: 17
        Procedure: 18
        Procedure: 19
        Procedure: 20
        Procedure: 21
        Procedure: 22
        Procedure: 23
        Procedure: 24
        Procedure: 25
        Procedure: 26
        Procedure: 27
        Procedure: 28
        Procedure: 29
        Procedure: 30
        Procedure: 31
        Procedure: 32
        Procedure: 33
        Procedure: 34
        Procedure: 35
        Procedure: 36
        Procedure: 37
        Procedure: 38
        Procedure: 39
        Procedure: 40
        Procedure: 41
        Procedure: 42
        Procedure: 43
        Procedure: 44
        Procedure: 45
        Procedure: 46
        Procedure: 47
        Procedure: 48
        Procedure: 49
        Procedure: 50
        Procedure: 51
        Procedure: 52
        Procedure: 53
    Extracting and reducing conditions
    Setting borders of blocks
        Procedure: 0
        Procedure: 1
        Procedure: 2
        Procedure: 3
        Procedure: 4
        Procedure: 5
        Procedure: 6
        Procedure: 7
        Procedure: 8
Error: Conditional expression left in stack

============== Procedures table ==================

======== Procedure 0 ========
Name offset:       0x00000006
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000008BC
Number of args:    0x00000000  // 0

======== Procedure 1 ========
Name offset:       0x00000018
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000008BC
Number of args:    0x00000000  // 0

======== Procedure 2 ========
Name offset:       0x00000020
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000A2C
Number of args:    0x00000000  // 0

======== Procedure 3 ========
Name offset:       0x00000030
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000AD8
Number of args:    0x00000000  // 0

======== Procedure 4 ========
Name offset:       0x00000042
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000BE4
Number of args:    0x00000000  // 0

======== Procedure 5 ========
Name offset:       0x00000058
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000C4A
Number of args:    0x00000000  // 0

======== Procedure 6 ========
Name offset:       0x00000068
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000C80
Number of args:    0x00000000  // 0

======== Procedure 7 ========
Name offset:       0x0000007A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000E10
Number of args:    0x00000000  // 0

======== Procedure 8 ========
Name offset:       0x0000008C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000E64
Number of args:    0x00000000  // 0

======== Procedure 9 ========
Name offset:       0x000000A0
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000EEC
Number of args:    0x00000000  // 0

======== Procedure 10 ========
Name offset:       0x000000B0
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000F2C
Number of args:    0x00000000  // 0

======== Procedure 11 ========
Name offset:       0x000000BE
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000012A6
Number of args:    0x00000000  // 0

======== Procedure 12 ========
Name offset:       0x000000C8
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001414
Number of args:    0x00000000  // 0

======== Procedure 13 ========
Name offset:       0x000000D2
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001450
Number of args:    0x00000000  // 0

======== Procedure 14 ========
Name offset:       0x000000DC
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000014D2
Number of args:    0x00000000  // 0

======== Procedure 15 ========
Name offset:       0x000000E6
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001554
Number of args:    0x00000000  // 0

======== Procedure 16 ========
Name offset:       0x000000F0
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000159A
Number of args:    0x00000000  // 0

======== Procedure 17 ========
Name offset:       0x000000FA
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001622
Number of args:    0x00000000  // 0

======== Procedure 18 ========
Name offset:       0x00000104
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001650
Number of args:    0x00000000  // 0

======== Procedure 19 ========
Name offset:       0x0000010E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000016B8
Number of args:    0x00000000  // 0

======== Procedure 20 ========
Name offset:       0x00000118
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000016F4
Number of args:    0x00000000  // 0

======== Procedure 21 ========
Name offset:       0x00000122
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001722
Number of args:    0x00000000  // 0

======== Procedure 22 ========
Name offset:       0x0000012C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000180C
Number of args:    0x00000000  // 0

======== Procedure 23 ========
Name offset:       0x00000136
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000018EA
Number of args:    0x00000000  // 0

======== Procedure 24 ========
Name offset:       0x00000140
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001A56
Number of args:    0x00000000  // 0

======== Procedure 25 ========
Name offset:       0x0000014A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001ADC
Number of args:    0x00000000  // 0

======== Procedure 26 ========
Name offset:       0x00000154
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001B54
Number of args:    0x00000000  // 0

======== Procedure 27 ========
Name offset:       0x0000015E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001BCC
Number of args:    0x00000000  // 0

======== Procedure 28 ========
Name offset:       0x00000168
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001C08
Number of args:    0x00000000  // 0

======== Procedure 29 ========
Name offset:       0x00000172
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001C4E
Number of args:    0x00000000  // 0

======== Procedure 30 ========
Name offset:       0x0000017C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001CBE
Number of args:    0x00000000  // 0

======== Procedure 31 ========
Name offset:       0x00000186
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001CEC
Number of args:    0x00000000  // 0

======== Procedure 32 ========
Name offset:       0x00000190
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001D1A
Number of args:    0x00000000  // 0

======== Procedure 33 ========
Name offset:       0x0000019A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001DC6
Number of args:    0x00000000  // 0

======== Procedure 34 ========
Name offset:       0x000001A4
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001E02
Number of args:    0x00000000  // 0

======== Procedure 35 ========
Name offset:       0x000001AE
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001E3E
Number of args:    0x00000000  // 0

======== Procedure 36 ========
Name offset:       0x000001B8
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001EC2
Number of args:    0x00000000  // 0

======== Procedure 37 ========
Name offset:       0x000001C2
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001EF8
Number of args:    0x00000000  // 0

======== Procedure 38 ========
Name offset:       0x000001CC
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001F26
Number of args:    0x00000000  // 0

======== Procedure 39 ========
Name offset:       0x000001D6
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001F6A
Number of args:    0x00000000  // 0

======== Procedure 40 ========
Name offset:       0x000001E0
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001F84
Number of args:    0x00000000  // 0

======== Procedure 41 ========
Name offset:       0x00000268
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001FAC
Number of args:    0x00000000  // 0

======== Procedure 42 ========
Name offset:       0x00000278
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000223E
Number of args:    0x00000000  // 0

======== Procedure 43 ========
Name offset:       0x00000288
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000022C2
Number of args:    0x00000000  // 0

======== Procedure 44 ========
Name offset:       0x00000298
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000235E
Number of args:    0x00000000  // 0

======== Procedure 45 ========
Name offset:       0x000002A2
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000023A8
Number of args:    0x00000000  // 0

======== Procedure 46 ========
Name offset:       0x000002AE
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000023F2
Number of args:    0x00000000  // 0

======== Procedure 47 ========
Name offset:       0x000002BC
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002428
Number of args:    0x00000000  // 0

======== Procedure 48 ========
Name offset:       0x000002C8
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000245E
Number of args:    0x00000000  // 0

======== Procedure 49 ========
Name offset:       0x000002D6
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000024A8
Number of args:    0x00000000  // 0

======== Procedure 50 ========
Name offset:       0x000002E6
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000024F2
Number of args:    0x00000000  // 0

======== Procedure 51 ========
Name offset:       0x000002F6
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002562
Number of args:    0x00000000  // 0

======== Procedure 52 ========
Name offset:       0x00000308
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000025D2
Number of args:    0x00000000  // 0

======== Procedure 53 ========
Name offset:       0x00000320
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000260A
Number of args:    0x00000000  // 0



============== Namespace ==================
0x00000006: ".............."
0x00000018: "start"
0x00000020: "combat_p_proc"
0x00000030: "critter_p_proc"
0x00000042: "description_p_proc"
0x00000058: "damage_p_proc"
0x00000068: "destroy_p_proc"
0x0000007A: "look_at_p_proc"
0x0000008C: "map_enter_p_proc"
0x000000A0: "pickup_p_proc"
0x000000B0: "talk_p_proc"
0x000000BE: "Lars00"
0x000000C8: "Lars01"
0x000000D2: "Lars02"
0x000000DC: "Lars03"
0x000000E6: "Lars04"
0x000000F0: "Lars05"
0x000000FA: "Lars06"
0x00000104: "Lars07"
0x0000010E: "Lars08"
0x00000118: "Lars09"
0x00000122: "Lars10"
0x0000012C: "Lars11"
0x00000136: "Lars12"
0x00000140: "Lars13"
0x0000014A: "Lars14"
0x00000154: "Lars15"
0x0000015E: "Lars16"
0x00000168: "Lars17"
0x00000172: "Lars18"
0x0000017C: "Lars19"
0x00000186: "Lars20"
0x00000190: "Lars21"
0x0000019A: "Lars22"
0x000001A4: "Lars23"
0x000001AE: "Lars24"
0x000001B8: "Lars25"
0x000001C2: "Lars26"
0x000001CC: "Lars27"
0x000001D6: "LarsEnd"
0x000001E0: "LarsKillNeal"
0x000001F0: "hostile"
0x000001FA: "initialized"
0x00000208: "round_counter"
0x00000218: "Lars_bust_Skulz"
0x0000022A: "Lars_kill_Neal"
0x0000023C: "nail_Gizmo"
0x0000024A: "wait_for_Lars"
0x0000025A: "removal_ptr"
0x00000268: "get_reaction"
0x00000278: "ReactToLevel"
0x00000288: "LevelToReact"
0x00000298: "UpReact"
0x000002A2: "DownReact"
0x000002AE: "BottomReact"
0x000002BC: "TopReact"
0x000002C8: "BigUpReact"
0x000002D6: "BigDownReact"
0x000002E6: "UpReactLevel"
0x000002F6: "DownReactLevel"
0x00000308: "Goodbyes"
0x00000314: "exit_line"
0x00000320: "timed_event_p_proc"
==================
63 item(s)



============== Stringspace ==================
Empty


============== Global variables values ==================
0: O_INTOP(0x00000000)   // 0 (0)
1: O_INTOP(0x00000000)   // 0 (0)
2: O_INTOP(0x00000000)   // 0 (0)
3: O_INTOP(0x00000000)   // 0 (0)
4: O_INTOP(0x00000000)   // 0 (0)
5: O_INTOP(0x00000000)   // 0 (0)
6: O_INTOP(0x00000000)   // 0 (0)
7: O_INTOP(0x00000000)   // 0 (0)


============== Exported variables ==================
Not found


============== Procedures ==================

0: .............. (0x000008bc)
===============================

1: start (0x000008bc)
===============================
0x000008BC: 0x802B            - O_PUSH_BASE
0x000008BE: 0xC001 0x000008f0 - O_INTOP(0x000008f0)   // 2288 (2288)
0x000008C4: 0x80C7            - O_SCRIPT_ACTION
0x000008C6: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x000008CC: 0x8033            - O_EQUAL
0x000008CE: 0x802F            - O_IF
0x000008D0: 0xC001 0x000008e6 - O_INTOP(0x000008e6)   // 2278 (2278)
0x000008D6: 0x800D            - O_D_TO_A
0x000008D8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000008DE: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000008E4: 0x8005            - O_CALL
0x000008E6: 0x801A            - O_POP
0x000008E8: 0xC001 0x00000a14 - O_INTOP(0x00000a14)   // 2580 (2580)
0x000008EE: 0x8004            - O_JMP
0x000008F0: 0xC001 0x00000922 - O_INTOP(0x00000922)   // 2338 (2338)
0x000008F6: 0x80C7            - O_SCRIPT_ACTION
0x000008F8: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000008FE: 0x8033            - O_EQUAL
0x00000900: 0x802F            - O_IF
0x00000902: 0xC001 0x00000918 - O_INTOP(0x00000918)   // 2328 (2328)
0x00000908: 0x800D            - O_D_TO_A
0x0000090A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000910: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000916: 0x8005            - O_CALL
0x00000918: 0x801A            - O_POP
0x0000091A: 0xC001 0x00000a14 - O_INTOP(0x00000a14)   // 2580 (2580)
0x00000920: 0x8004            - O_JMP
0x00000922: 0xC001 0x00000954 - O_INTOP(0x00000954)   // 2388 (2388)
0x00000928: 0x80C7            - O_SCRIPT_ACTION
0x0000092A: 0xC001 0x00000012 - O_INTOP(0x00000012)   // 18 (18)
0x00000930: 0x8033            - O_EQUAL
0x00000932: 0x802F            - O_IF
0x00000934: 0xC001 0x0000094a - O_INTOP(0x0000094a)   // 2378 (2378)
0x0000093A: 0x800D            - O_D_TO_A
0x0000093C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000942: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000948: 0x8005            - O_CALL
0x0000094A: 0x801A            - O_POP
0x0000094C: 0xC001 0x00000a14 - O_INTOP(0x00000a14)   // 2580 (2580)
0x00000952: 0x8004            - O_JMP
0x00000954: 0xC001 0x00000986 - O_INTOP(0x00000986)   // 2438 (2438)
0x0000095A: 0x80C7            - O_SCRIPT_ACTION
0x0000095C: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x00000962: 0x8033            - O_EQUAL
0x00000964: 0x802F            - O_IF
0x00000966: 0xC001 0x0000097c - O_INTOP(0x0000097c)   // 2428 (2428)
0x0000096C: 0x800D            - O_D_TO_A
0x0000096E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000974: 0xC001 0x00000007 - O_INTOP(0x00000007)   // 7 (7)
0x0000097A: 0x8005            - O_CALL
0x0000097C: 0x801A            - O_POP
0x0000097E: 0xC001 0x00000a14 - O_INTOP(0x00000a14)   // 2580 (2580)
0x00000984: 0x8004            - O_JMP
0x00000986: 0xC001 0x000009b8 - O_INTOP(0x000009b8)   // 2488 (2488)
0x0000098C: 0x80C7            - O_SCRIPT_ACTION
0x0000098E: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x00000994: 0x8033            - O_EQUAL
0x00000996: 0x802F            - O_IF
0x00000998: 0xC001 0x000009ae - O_INTOP(0x000009ae)   // 2478 (2478)
0x0000099E: 0x800D            - O_D_TO_A
0x000009A0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000009A6: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x000009AC: 0x8005            - O_CALL
0x000009AE: 0x801A            - O_POP
0x000009B0: 0xC001 0x00000a14 - O_INTOP(0x00000a14)   // 2580 (2580)
0x000009B6: 0x8004            - O_JMP
0x000009B8: 0xC001 0x000009ea - O_INTOP(0x000009ea)   // 2538 (2538)
0x000009BE: 0x80C7            - O_SCRIPT_ACTION
0x000009C0: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000009C6: 0x8033            - O_EQUAL
0x000009C8: 0x802F            - O_IF
0x000009CA: 0xC001 0x000009e0 - O_INTOP(0x000009e0)   // 2528 (2528)
0x000009D0: 0x800D            - O_D_TO_A
0x000009D2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000009D8: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x000009DE: 0x8005            - O_CALL
0x000009E0: 0x801A            - O_POP
0x000009E2: 0xC001 0x00000a14 - O_INTOP(0x00000a14)   // 2580 (2580)
0x000009E8: 0x8004            - O_JMP
0x000009EA: 0xC001 0x00000a14 - O_INTOP(0x00000a14)   // 2580 (2580)
0x000009F0: 0x80C7            - O_SCRIPT_ACTION
0x000009F2: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000009F8: 0x8033            - O_EQUAL
0x000009FA: 0x802F            - O_IF
0x000009FC: 0xC001 0x00000a12 - O_INTOP(0x00000a12)   // 2578 (2578)
0x00000A02: 0x800D            - O_D_TO_A
0x00000A04: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A0A: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00000A10: 0x8005            - O_CALL
0x00000A12: 0x801A            - O_POP
0x00000A14: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A1A: 0x800D            - O_D_TO_A
0x00000A1C: 0x8019            - O_SWAPA
0x00000A1E: 0x802A            - O_POP_TO_BASE
0x00000A20: 0x8029            - O_POP_BASE
0x00000A22: 0x800C            - O_A_TO_D
0x00000A24: 0x801C            - O_POP_RETURN
0x00000A26: 0x802A            - O_POP_TO_BASE
0x00000A28: 0x8029            - O_POP_BASE
0x00000A2A: 0x801C            - O_POP_RETURN

2: combat_p_proc (0x00000a2c)
===============================
0x00000A2C: 0x802B            - O_PUSH_BASE
0x00000A2E: 0xC001 0x00000ac0 - O_INTOP(0x00000ac0)   // 2752 (2752)
0x00000A34: 0x8101            - O_CUR_MAP_INDEX
0x00000A36: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00000A3C: 0x8034            - O_NOT_EQUAL
0x00000A3E: 0x802F            - O_IF
0x00000A40: 0xC001 0x00000a6a - O_INTOP(0x00000a6a)   // 2666 (2666)
0x00000A46: 0x80F7            - O_FIXED_PARAM
0x00000A48: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000A4E: 0x8033            - O_EQUAL
0x00000A50: 0x802F            - O_IF
0x00000A52: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000A58: 0x8012            - O_FETCH_GLOBAL
0x00000A5A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000A60: 0x8039            - O_ADD
0x00000A62: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000A68: 0x8013            - O_STORE_GLOBAL
0x00000A6A: 0xC001 0x00000ac0 - O_INTOP(0x00000ac0)   // 2752 (2752)
0x00000A70: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000A76: 0x8012            - O_FETCH_GLOBAL
0x00000A78: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000A7E: 0x8038            - O_GREATER
0x00000A80: 0x802F            - O_IF
0x00000A82: 0xC001 0x00000ac0 - O_INTOP(0x00000ac0)   // 2752 (2752)
0x00000A88: 0xC001 0x000000f7 - O_INTOP(0x000000f7)   // 247 (247)
0x00000A8E: 0x80C5            - O_GLOBAL_VAR
0x00000A90: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A96: 0x8033            - O_EQUAL
0x00000A98: 0x802F            - O_IF
0x00000A9A: 0xC001 0x000000f7 - O_INTOP(0x000000f7)   // 247 (247)
0x00000AA0: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000AA6: 0x80C6            - O_SET_GLOBAL_VAR
0x00000AA8: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00000AAE: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00000AB4: 0x80C5            - O_GLOBAL_VAR
0x00000AB6: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000ABC: 0x803A            - O_SUB
0x00000ABE: 0x80C6            - O_SET_GLOBAL_VAR
0x00000AC0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000AC6: 0x800D            - O_D_TO_A
0x00000AC8: 0x8019            - O_SWAPA
0x00000ACA: 0x802A            - O_POP_TO_BASE
0x00000ACC: 0x8029            - O_POP_BASE
0x00000ACE: 0x800C            - O_A_TO_D
0x00000AD0: 0x801C            - O_POP_RETURN
0x00000AD2: 0x802A            - O_POP_TO_BASE
0x00000AD4: 0x8029            - O_POP_BASE
0x00000AD6: 0x801C            - O_POP_RETURN

3: critter_p_proc (0x00000ad8)
===============================
0x00000AD8: 0x802B            - O_PUSH_BASE
0x00000ADA: 0xC001 0x00000b2e - O_INTOP(0x00000b2e)   // 2862 (2862)
0x00000AE0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000AE6: 0x8012            - O_FETCH_GLOBAL
0x00000AE8: 0x802F            - O_IF
0x00000AEA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000AF0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000AF6: 0x8013            - O_STORE_GLOBAL
0x00000AF8: 0x80BF            - O_DUDE_OBJ
0x00000AFA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000B00: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000B06: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000B0C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000B12: 0xC001 0x00007530 - O_INTOP(0x00007530)   // 30000 (30000)
0x00000B18: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000B1E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000B24: 0x80D0            - O_ATTACK_COMPLEX
0x00000B26: 0xC001 0x00000b78 - O_INTOP(0x00000b78)   // 2936 (2936)
0x00000B2C: 0x8004            - O_JMP
0x00000B2E: 0xC001 0x00000b78 - O_INTOP(0x00000b78)   // 2936 (2936)
0x00000B34: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000B3A: 0x80C3            - O_MAP_VAR
0x00000B3C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000B42: 0x8033            - O_EQUAL
0x00000B44: 0x802F            - O_IF
0x00000B46: 0x80BF            - O_DUDE_OBJ
0x00000B48: 0xC001 0x000001f4 - O_INTOP(0x000001f4)   // 500 (500)
0x00000B4E: 0x8139            - O_ITEM_CAPS_ADJUST
0x00000B50: 0x801A            - O_POP
0x00000B52: 0x80BC            - O_SELF_OBJ
0x00000B54: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00000B5A: 0xC001 0x000000a2 - O_INTOP(0x000000a2)   // 162 (162)
0x00000B60: 0x8105            - O_MESSAGE_STR
0x00000B62: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000B68: 0x810A            - O_FLOAT_MSG
0x00000B6A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000B70: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000B76: 0x80C4            - O_SET_MAP_VAR
0x00000B78: 0xC001 0x00000bcc - O_INTOP(0x00000bcc)   // 3020 (3020)
0x00000B7E: 0xC001 0x000000f7 - O_INTOP(0x000000f7)   // 247 (247)
0x00000B84: 0x80C5            - O_GLOBAL_VAR
0x00000B86: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000B8C: 0x8033            - O_EQUAL
0x00000B8E: 0x802F            - O_IF
0x00000B90: 0xC001 0x00000bcc - O_INTOP(0x00000bcc)   // 3020 (3020)
0x00000B96: 0x80BC            - O_SELF_OBJ
0x00000B98: 0x80BF            - O_DUDE_OBJ
0x00000B9A: 0x80DC            - O_OBJ_CAN_SEE_OBJ
0x00000B9C: 0x802F            - O_IF
0x00000B9E: 0x80BF            - O_DUDE_OBJ
0x00000BA0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000BA6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000BAC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000BB2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000BB8: 0xC001 0x00007530 - O_INTOP(0x00007530)   // 30000 (30000)
0x00000BBE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000BC4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000BCA: 0x80D0            - O_ATTACK_COMPLEX
0x00000BCC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000BD2: 0x800D            - O_D_TO_A
0x00000BD4: 0x8019            - O_SWAPA
0x00000BD6: 0x802A            - O_POP_TO_BASE
0x00000BD8: 0x8029            - O_POP_BASE
0x00000BDA: 0x800C            - O_A_TO_D
0x00000BDC: 0x801C            - O_POP_RETURN
0x00000BDE: 0x802A            - O_POP_TO_BASE
0x00000BE0: 0x8029            - O_POP_BASE
0x00000BE2: 0x801C            - O_POP_RETURN

4: description_p_proc (0x00000be4)
===============================
0x00000BE4: 0x802B            - O_PUSH_BASE
0x00000BE6: 0xC001 0x00000c22 - O_INTOP(0x00000c22)   // 3106 (3106)
0x00000BEC: 0x80BF            - O_DUDE_OBJ
0x00000BEE: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000BF4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000BFA: 0x80BF            - O_DUDE_OBJ
0x00000BFC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000C02: 0x80F3            - O_HAS_TRAIT
0x00000C04: 0x80AE            - O_DO_CHECK
0x00000C06: 0x80AF            - O_IS_SUCCESS
0x00000C08: 0x802F            - O_IF
0x00000C0A: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00000C10: 0xC001 0x00000067 - O_INTOP(0x00000067)   // 103 (103)
0x00000C16: 0x8105            - O_MESSAGE_STR
0x00000C18: 0x80B8            - O_DISPLAY_MSG
0x00000C1A: 0xC001 0x00000c32 - O_INTOP(0x00000c32)   // 3122 (3122)
0x00000C20: 0x8004            - O_JMP
0x00000C22: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00000C28: 0xC001 0x00000066 - O_INTOP(0x00000066)   // 102 (102)
0x00000C2E: 0x8105            - O_MESSAGE_STR
0x00000C30: 0x80B8            - O_DISPLAY_MSG
0x00000C32: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000C38: 0x800D            - O_D_TO_A
0x00000C3A: 0x8019            - O_SWAPA
0x00000C3C: 0x802A            - O_POP_TO_BASE
0x00000C3E: 0x8029            - O_POP_BASE
0x00000C40: 0x800C            - O_A_TO_D
0x00000C42: 0x801C            - O_POP_RETURN
0x00000C44: 0x802A            - O_POP_TO_BASE
0x00000C46: 0x8029            - O_POP_BASE
0x00000C48: 0x801C            - O_POP_RETURN

5: damage_p_proc (0x00000c4a)
===============================
0x00000C4A: 0x802B            - O_PUSH_BASE
0x00000C4C: 0xC001 0x00000c68 - O_INTOP(0x00000c68)   // 3176 (3176)
0x00000C52: 0x80BD            - O_SOURCE_OBJ
0x00000C54: 0x80BF            - O_DUDE_OBJ
0x00000C56: 0x8033            - O_EQUAL
0x00000C58: 0x802F            - O_IF
0x00000C5A: 0xC001 0x000000f7 - O_INTOP(0x000000f7)   // 247 (247)
0x00000C60: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000C66: 0x80C6            - O_SET_GLOBAL_VAR
0x00000C68: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000C6E: 0x800D            - O_D_TO_A
0x00000C70: 0x8019            - O_SWAPA
0x00000C72: 0x802A            - O_POP_TO_BASE
0x00000C74: 0x8029            - O_POP_BASE
0x00000C76: 0x800C            - O_A_TO_D
0x00000C78: 0x801C            - O_POP_RETURN
0x00000C7A: 0x802A            - O_POP_TO_BASE
0x00000C7C: 0x8029            - O_POP_BASE
0x00000C7E: 0x801C            - O_POP_RETURN

6: destroy_p_proc (0x00000c80)
===============================
0x00000C80: 0x802B            - O_PUSH_BASE
0x00000C82: 0xC001 0x00000dd4 - O_INTOP(0x00000dd4)   // 3540 (3540)
0x00000C88: 0x80BD            - O_SOURCE_OBJ
0x00000C8A: 0x80BF            - O_DUDE_OBJ
0x00000C8C: 0x8033            - O_EQUAL
0x00000C8E: 0x802F            - O_IF
0x00000C90: 0xC001 0x000000f7 - O_INTOP(0x000000f7)   // 247 (247)
0x00000C96: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000C9C: 0x80C6            - O_SET_GLOBAL_VAR
0x00000C9E: 0xC001 0x00000dd4 - O_INTOP(0x00000dd4)   // 3540 (3540)
0x00000CA4: 0x80BD            - O_SOURCE_OBJ
0x00000CA6: 0x80BF            - O_DUDE_OBJ
0x00000CA8: 0x8033            - O_EQUAL
0x00000CAA: 0x802F            - O_IF
0x00000CAC: 0xC001 0x00000d18 - O_INTOP(0x00000d18)   // 3352 (3352)
0x00000CB2: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00000CB8: 0x80C5            - O_GLOBAL_VAR
0x00000CBA: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000CC0: 0x80C5            - O_GLOBAL_VAR
0x00000CC2: 0x8039            - O_ADD
0x00000CC4: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00000CCA: 0x8036            - O_GREATER_EQUAL
0x00000CCC: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000CD2: 0x80C5            - O_GLOBAL_VAR
0x00000CD4: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000CDA: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00000CE0: 0x80C5            - O_GLOBAL_VAR
0x00000CE2: 0x803B            - O_MUL
0x00000CE4: 0x8038            - O_GREATER
0x00000CE6: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x00000CEC: 0x80C5            - O_GLOBAL_VAR
0x00000CEE: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000CF4: 0x8033            - O_EQUAL
0x00000CF6: 0x803F            - O_OR
0x00000CF8: 0x803E            - O_AND
0x00000CFA: 0x802F            - O_IF
0x00000CFC: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x00000D02: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000D08: 0x80C6            - O_SET_GLOBAL_VAR
0x00000D0A: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x00000D10: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D16: 0x80C6            - O_SET_GLOBAL_VAR
0x00000D18: 0xC001 0x00000d84 - O_INTOP(0x00000d84)   // 3460 (3460)
0x00000D1E: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00000D24: 0x80C5            - O_GLOBAL_VAR
0x00000D26: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000D2C: 0x80C5            - O_GLOBAL_VAR
0x00000D2E: 0x8039            - O_ADD
0x00000D30: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00000D36: 0x8036            - O_GREATER_EQUAL
0x00000D38: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00000D3E: 0x80C5            - O_GLOBAL_VAR
0x00000D40: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000D46: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000D4C: 0x80C5            - O_GLOBAL_VAR
0x00000D4E: 0x803B            - O_MUL
0x00000D50: 0x8038            - O_GREATER
0x00000D52: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x00000D58: 0x80C5            - O_GLOBAL_VAR
0x00000D5A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000D60: 0x8033            - O_EQUAL
0x00000D62: 0x803F            - O_OR
0x00000D64: 0x803E            - O_AND
0x00000D66: 0x802F            - O_IF
0x00000D68: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x00000D6E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000D74: 0x80C6            - O_SET_GLOBAL_VAR
0x00000D76: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x00000D7C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D82: 0x80C6            - O_SET_GLOBAL_VAR
0x00000D84: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000D8A: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000D90: 0x80C5            - O_GLOBAL_VAR
0x00000D92: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000D98: 0x8039            - O_ADD
0x00000D9A: 0x80C6            - O_SET_GLOBAL_VAR
0x00000D9C: 0xC001 0x00000dd4 - O_INTOP(0x00000dd4)   // 3540 (3540)
0x00000DA2: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000DA8: 0x80C5            - O_GLOBAL_VAR
0x00000DAA: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000DB0: 0x803D            - O_MOD
0x00000DB2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000DB8: 0x8033            - O_EQUAL
0x00000DBA: 0x802F            - O_IF
0x00000DBC: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00000DC2: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00000DC8: 0x80C5            - O_GLOBAL_VAR
0x00000DCA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000DD0: 0x803A            - O_SUB
0x00000DD2: 0x80C6            - O_SET_GLOBAL_VAR
0x00000DD4: 0xC001 0x00000df8 - O_INTOP(0x00000df8)   // 3576 (3576)
0x00000DDA: 0x8101            - O_CUR_MAP_INDEX
0x00000DDC: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00000DE2: 0x8033            - O_EQUAL
0x00000DE4: 0x802F            - O_IF
0x00000DE6: 0x80B9            - O_SCRIPT_OVERRIDES
0x00000DE8: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00000DEE: 0xC001 0x000000a8 - O_INTOP(0x000000a8)   // 168 (168)
0x00000DF4: 0x8105            - O_MESSAGE_STR
0x00000DF6: 0x80B8            - O_DISPLAY_MSG
0x00000DF8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000DFE: 0x800D            - O_D_TO_A
0x00000E00: 0x8019            - O_SWAPA
0x00000E02: 0x802A            - O_POP_TO_BASE
0x00000E04: 0x8029            - O_POP_BASE
0x00000E06: 0x800C            - O_A_TO_D
0x00000E08: 0x801C            - O_POP_RETURN
0x00000E0A: 0x802A            - O_POP_TO_BASE
0x00000E0C: 0x8029            - O_POP_BASE
0x00000E0E: 0x801C            - O_POP_RETURN

7: look_at_p_proc (0x00000e10)
===============================
0x00000E10: 0x802B            - O_PUSH_BASE
0x00000E12: 0x80B9            - O_SCRIPT_OVERRIDES
0x00000E14: 0xC001 0x00000e3c - O_INTOP(0x00000e3c)   // 3644 (3644)
0x00000E1A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000E20: 0x80C1            - O_LOCAL_VAR
0x00000E22: 0x802F            - O_IF
0x00000E24: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00000E2A: 0xC001 0x00000065 - O_INTOP(0x00000065)   // 101 (101)
0x00000E30: 0x8105            - O_MESSAGE_STR
0x00000E32: 0x80B8            - O_DISPLAY_MSG
0x00000E34: 0xC001 0x00000e4c - O_INTOP(0x00000e4c)   // 3660 (3660)
0x00000E3A: 0x8004            - O_JMP
0x00000E3C: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00000E42: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x00000E48: 0x8105            - O_MESSAGE_STR
0x00000E4A: 0x80B8            - O_DISPLAY_MSG
0x00000E4C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E52: 0x800D            - O_D_TO_A
0x00000E54: 0x8019            - O_SWAPA
0x00000E56: 0x802A            - O_POP_TO_BASE
0x00000E58: 0x8029            - O_POP_BASE
0x00000E5A: 0x800C            - O_A_TO_D
0x00000E5C: 0x801C            - O_POP_RETURN
0x00000E5E: 0x802A            - O_POP_TO_BASE
0x00000E60: 0x8029            - O_POP_BASE
0x00000E62: 0x801C            - O_POP_RETURN

8: map_enter_p_proc (0x00000e64)
===============================
0x00000E64: 0x802B            - O_PUSH_BASE
0x00000E66: 0xC001 0x00000e96 - O_INTOP(0x00000e96)   // 3734 (3734)
0x00000E6C: 0x8101            - O_CUR_MAP_INDEX
0x00000E6E: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00000E74: 0x8033            - O_EQUAL
0x00000E76: 0x802F            - O_IF
0x00000E78: 0x80BC            - O_SELF_OBJ
0x00000E7A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000E80: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000E86: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E8C: 0x8102            - O_CRITTER_ADD_TRAIT
0x00000E8E: 0xC001 0x00000eac - O_INTOP(0x00000eac)   // 3756 (3756)
0x00000E94: 0x8004            - O_JMP
0x00000E96: 0x80BC            - O_SELF_OBJ
0x00000E98: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000E9E: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000EA4: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00000EAA: 0x8102            - O_CRITTER_ADD_TRAIT
0x00000EAC: 0xC001 0x00000ed4 - O_INTOP(0x00000ed4)   // 3796 (3796)
0x00000EB2: 0xC001 0x00000026 - O_INTOP(0x00000026)   // 38 (38)
0x00000EB8: 0x80C5            - O_GLOBAL_VAR
0x00000EBA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000EC0: 0x8033            - O_EQUAL
0x00000EC2: 0x8101            - O_CUR_MAP_INDEX
0x00000EC4: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00000ECA: 0x8033            - O_EQUAL
0x00000ECC: 0x803E            - O_AND
0x00000ECE: 0x802F            - O_IF
0x00000ED0: 0x80BC            - O_SELF_OBJ
0x00000ED2: 0x80F4            - O_DESTROY_OBJECT
0x00000ED4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000EDA: 0x800D            - O_D_TO_A
0x00000EDC: 0x8019            - O_SWAPA
0x00000EDE: 0x802A            - O_POP_TO_BASE
0x00000EE0: 0x8029            - O_POP_BASE
0x00000EE2: 0x800C            - O_A_TO_D
0x00000EE4: 0x801C            - O_POP_RETURN
0x00000EE6: 0x802A            - O_POP_TO_BASE
0x00000EE8: 0x8029            - O_POP_BASE
0x00000EEA: 0x801C            - O_POP_RETURN

9: pickup_p_proc (0x00000eec)
===============================
0x00000EEC: 0x802B            - O_PUSH_BASE
0x00000EEE: 0x80BC            - O_SELF_OBJ
0x00000EF0: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00000EF6: 0xC001 0x00000068 - O_INTOP(0x00000068)   // 104 (104)
0x00000EFC: 0x8105            - O_MESSAGE_STR
0x00000EFE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F04: 0x810A            - O_FLOAT_MSG
0x00000F06: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000F0C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F12: 0x8013            - O_STORE_GLOBAL
0x00000F14: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F1A: 0x800D            - O_D_TO_A
0x00000F1C: 0x8019            - O_SWAPA
0x00000F1E: 0x802A            - O_POP_TO_BASE
0x00000F20: 0x8029            - O_POP_BASE
0x00000F22: 0x800C            - O_A_TO_D
0x00000F24: 0x801C            - O_POP_RETURN
0x00000F26: 0x802A            - O_POP_TO_BASE
0x00000F28: 0x8029            - O_POP_BASE
0x00000F2A: 0x801C            - O_POP_RETURN

10: talk_p_proc (0x00000f2c)
===============================
0x00000F2C: 0x802B            - O_PUSH_BASE
0x00000F2E: 0xC001 0x00000f44 - O_INTOP(0x00000f44)   // 3908 (3908)
0x00000F34: 0x800D            - O_D_TO_A
0x00000F36: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F3C: 0xC001 0x00000029 - O_INTOP(0x00000029)   // 41 (41)
0x00000F42: 0x8005            - O_CALL
0x00000F44: 0x801A            - O_POP
0x00000F46: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00000F4C: 0x80BC            - O_SELF_OBJ
0x00000F4E: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000F54: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000F5A: 0x8046            - O_NEGATE
0x00000F5C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000F62: 0x8046            - O_NEGATE
0x00000F64: 0x80DE            - O_START_GDIALOG
0x00000F66: 0x811C            - O_GSAY_START
0x00000F68: 0xC001 0x00000fa0 - O_INTOP(0x00000fa0)   // 4000 (4000)
0x00000F6E: 0xC001 0x0000009e - O_INTOP(0x0000009e)   // 158 (158)
0x00000F74: 0x80C5            - O_GLOBAL_VAR
0x00000F76: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000F7C: 0x8038            - O_GREATER
0x00000F7E: 0x802F            - O_IF
0x00000F80: 0xC001 0x00000f96 - O_INTOP(0x00000f96)   // 3990 (3990)
0x00000F86: 0x800D            - O_D_TO_A
0x00000F88: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F8E: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00000F94: 0x8005            - O_CALL
0x00000F96: 0x801A            - O_POP
0x00000F98: 0xC001 0x000010f0 - O_INTOP(0x000010f0)   // 4336 (4336)
0x00000F9E: 0x8004            - O_JMP
0x00000FA0: 0xC001 0x00000fd8 - O_INTOP(0x00000fd8)   // 4056 (4056)
0x00000FA6: 0xC001 0x000000f7 - O_INTOP(0x000000f7)   // 247 (247)
0x00000FAC: 0x80C5            - O_GLOBAL_VAR
0x00000FAE: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000FB4: 0x8033            - O_EQUAL
0x00000FB6: 0x802F            - O_IF
0x00000FB8: 0xC001 0x00000fce - O_INTOP(0x00000fce)   // 4046 (4046)
0x00000FBE: 0x800D            - O_D_TO_A
0x00000FC0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000FC6: 0xC001 0x00000026 - O_INTOP(0x00000026)   // 38 (38)
0x00000FCC: 0x8005            - O_CALL
0x00000FCE: 0x801A            - O_POP
0x00000FD0: 0xC001 0x000010f0 - O_INTOP(0x000010f0)   // 4336 (4336)
0x00000FD6: 0x8004            - O_JMP
0x00000FD8: 0xC001 0x00001022 - O_INTOP(0x00001022)   // 4130 (4130)
0x00000FDE: 0xC001 0x00000026 - O_INTOP(0x00000026)   // 38 (38)
0x00000FE4: 0x80C5            - O_GLOBAL_VAR
0x00000FE6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000FEC: 0x8033            - O_EQUAL
0x00000FEE: 0xC001 0x00000068 - O_INTOP(0x00000068)   // 104 (104)
0x00000FF4: 0x80C5            - O_GLOBAL_VAR
0x00000FF6: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000FFC: 0x8034            - O_NOT_EQUAL
0x00000FFE: 0x803E            - O_AND
0x00001000: 0x802F            - O_IF
0x00001002: 0xC001 0x00001018 - O_INTOP(0x00001018)   // 4120 (4120)
0x00001008: 0x800D            - O_D_TO_A
0x0000100A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001010: 0xC001 0x00000025 - O_INTOP(0x00000025)   // 37 (37)
0x00001016: 0x8005            - O_CALL
0x00001018: 0x801A            - O_POP
0x0000101A: 0xC001 0x000010f0 - O_INTOP(0x000010f0)   // 4336 (4336)
0x00001020: 0x8004            - O_JMP
0x00001022: 0xC001 0x00001068 - O_INTOP(0x00001068)   // 4200 (4200)
0x00001028: 0xC001 0x00000068 - O_INTOP(0x00000068)   // 104 (104)
0x0000102E: 0x80C5            - O_GLOBAL_VAR
0x00001030: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001036: 0x8033            - O_EQUAL
0x00001038: 0x802F            - O_IF
0x0000103A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001040: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001046: 0x80C2            - O_SET_LOCAL_VAR
0x00001048: 0xC001 0x0000105e - O_INTOP(0x0000105e)   // 4190 (4190)
0x0000104E: 0x800D            - O_D_TO_A
0x00001050: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001056: 0xC001 0x00000020 - O_INTOP(0x00000020)   // 32 (32)
0x0000105C: 0x8005            - O_CALL
0x0000105E: 0x801A            - O_POP
0x00001060: 0xC001 0x000010f0 - O_INTOP(0x000010f0)   // 4336 (4336)
0x00001066: 0x8004            - O_JMP
0x00001068: 0xC001 0x000010a0 - O_INTOP(0x000010a0)   // 4256 (4256)
0x0000106E: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001074: 0x80C1            - O_LOCAL_VAR
0x00001076: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000107C: 0x8033            - O_EQUAL
0x0000107E: 0x802F            - O_IF
0x00001080: 0xC001 0x00001096 - O_INTOP(0x00001096)   // 4246 (4246)
0x00001086: 0x800D            - O_D_TO_A
0x00001088: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000108E: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00001094: 0x8005            - O_CALL
0x00001096: 0x801A            - O_POP
0x00001098: 0xC001 0x000010f0 - O_INTOP(0x000010f0)   // 4336 (4336)
0x0000109E: 0x8004            - O_JMP
0x000010A0: 0xC001 0x000010d8 - O_INTOP(0x000010d8)   // 4312 (4312)
0x000010A6: 0xC001 0x0000022b - O_INTOP(0x0000022b)   // 555 (555)
0x000010AC: 0x80C5            - O_GLOBAL_VAR
0x000010AE: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000010B4: 0x8033            - O_EQUAL
0x000010B6: 0x802F            - O_IF
0x000010B8: 0xC001 0x000010ce - O_INTOP(0x000010ce)   // 4302 (4302)
0x000010BE: 0x800D            - O_D_TO_A
0x000010C0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000010C6: 0xC001 0x0000001e - O_INTOP(0x0000001e)   // 30 (30)
0x000010CC: 0x8005            - O_CALL
0x000010CE: 0x801A            - O_POP
0x000010D0: 0xC001 0x000010f0 - O_INTOP(0x000010f0)   // 4336 (4336)
0x000010D6: 0x8004            - O_JMP
0x000010D8: 0xC001 0x000010ee - O_INTOP(0x000010ee)   // 4334 (4334)
0x000010DE: 0x800D            - O_D_TO_A
0x000010E0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000010E6: 0xC001 0x00000017 - O_INTOP(0x00000017)   // 23 (23)
0x000010EC: 0x8005            - O_CALL
0x000010EE: 0x801A            - O_POP
0x000010F0: 0x811D            - O_GSAY_END
0x000010F2: 0x80DF            - O_END_DIALOGUE
0x000010F4: 0xC001 0x00001128 - O_INTOP(0x00001128)   // 4392 (4392)
0x000010FA: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001100: 0x8012            - O_FETCH_GLOBAL
0x00001102: 0x802F            - O_IF
0x00001104: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000110A: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001110: 0x8013            - O_STORE_GLOBAL
0x00001112: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00001118: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000111E: 0x80E4            - O_LOAD_MAP
0x00001120: 0xC001 0x0000128e - O_INTOP(0x0000128e)   // 4750 (4750)
0x00001126: 0x8004            - O_JMP
0x00001128: 0xC001 0x000011b2 - O_INTOP(0x000011b2)   // 4530 (4530)
0x0000112E: 0xC001 0x0000022b - O_INTOP(0x0000022b)   // 555 (555)
0x00001134: 0x80C5            - O_GLOBAL_VAR
0x00001136: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x0000113C: 0x8033            - O_EQUAL
0x0000113E: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001144: 0x80C1            - O_LOCAL_VAR
0x00001146: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000114C: 0x8033            - O_EQUAL
0x0000114E: 0x803E            - O_AND
0x00001150: 0x802F            - O_IF
0x00001152: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001158: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000115E: 0x80C2            - O_SET_LOCAL_VAR
0x00001160: 0xC001 0x00000258 - O_INTOP(0x00000258)   // 600 (600)
0x00001166: 0x8136            - O_GFADE_OUT
0x00001168: 0xC001 0x000001f4 - O_INTOP(0x000001f4)   // 500 (500)
0x0000116E: 0x80A1            - O_GIVE_EXP_POINTS
0x00001170: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00001176: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x0000117C: 0x80C5            - O_GLOBAL_VAR
0x0000117E: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001184: 0x8039            - O_ADD
0x00001186: 0x80C6            - O_SET_GLOBAL_VAR
0x00001188: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x0000118E: 0xC001 0x000000ae - O_INTOP(0x000000ae)   // 174 (174)
0x00001194: 0x8105            - O_MESSAGE_STR
0x00001196: 0x80B8            - O_DISPLAY_MSG
0x00001198: 0xC001 0x00001c20 - O_INTOP(0x00001c20)   // 7200 (7200)
0x0000119E: 0x80F2            - O_GAME_TICKS
0x000011A0: 0x80FC            - O_GAME_TIME_ADVANCE
0x000011A2: 0xC001 0x00000258 - O_INTOP(0x00000258)   // 600 (600)
0x000011A8: 0x8137            - O_GFADE_IN
0x000011AA: 0xC001 0x0000128e - O_INTOP(0x0000128e)   // 4750 (4750)
0x000011B0: 0x8004            - O_JMP
0x000011B2: 0xC001 0x00001200 - O_INTOP(0x00001200)   // 4608 (4608)
0x000011B8: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x000011BE: 0x8012            - O_FETCH_GLOBAL
0x000011C0: 0x802F            - O_IF
0x000011C2: 0xC001 0x00000258 - O_INTOP(0x00000258)   // 600 (600)
0x000011C8: 0x8136            - O_GFADE_OUT
0x000011CA: 0xC001 0x00000bb8 - O_INTOP(0x00000bb8)   // 3000 (3000)
0x000011D0: 0x80F2            - O_GAME_TICKS
0x000011D2: 0x80FC            - O_GAME_TIME_ADVANCE
0x000011D4: 0xC001 0x00000068 - O_INTOP(0x00000068)   // 104 (104)
0x000011DA: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000011E0: 0x80C6            - O_SET_GLOBAL_VAR
0x000011E2: 0xC001 0x00000258 - O_INTOP(0x00000258)   // 600 (600)
0x000011E8: 0x8137            - O_GFADE_IN
0x000011EA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000011F0: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x000011F6: 0x8013            - O_STORE_GLOBAL
0x000011F8: 0xC001 0x0000128e - O_INTOP(0x0000128e)   // 4750 (4750)
0x000011FE: 0x8004            - O_JMP
0x00001200: 0xC001 0x00001234 - O_INTOP(0x00001234)   // 4660 (4660)
0x00001206: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000120C: 0x8012            - O_FETCH_GLOBAL
0x0000120E: 0x802F            - O_IF
0x00001210: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001216: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000121C: 0x8013            - O_STORE_GLOBAL
0x0000121E: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00001224: 0xC001 0x00000007 - O_INTOP(0x00000007)   // 7 (7)
0x0000122A: 0x80E4            - O_LOAD_MAP
0x0000122C: 0xC001 0x0000128e - O_INTOP(0x0000128e)   // 4750 (4750)
0x00001232: 0x8004            - O_JMP
0x00001234: 0xC001 0x0000128e - O_INTOP(0x0000128e)   // 4750 (4750)
0x0000123A: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001240: 0x8012            - O_FETCH_GLOBAL
0x00001242: 0x802F            - O_IF
0x00001244: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000124A: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001250: 0x8013            - O_STORE_GLOBAL
0x00001252: 0xC001 0x00000258 - O_INTOP(0x00000258)   // 600 (600)
0x00001258: 0x8136            - O_GFADE_OUT
0x0000125A: 0xC001 0x0000022b - O_INTOP(0x0000022b)   // 555 (555)
0x00001260: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001266: 0x80C6            - O_SET_GLOBAL_VAR
0x00001268: 0xC001 0x0000011b - O_INTOP(0x0000011b)   // 283 (283)
0x0000126E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001274: 0x80C6            - O_SET_GLOBAL_VAR
0x00001276: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x0000127C: 0xC001 0x000000a7 - O_INTOP(0x000000a7)   // 167 (167)
0x00001282: 0x8105            - O_MESSAGE_STR
0x00001284: 0x80B8            - O_DISPLAY_MSG
0x00001286: 0xC001 0x00000258 - O_INTOP(0x00000258)   // 600 (600)
0x0000128C: 0x8137            - O_GFADE_IN
0x0000128E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001294: 0x800D            - O_D_TO_A
0x00001296: 0x8019            - O_SWAPA
0x00001298: 0x802A            - O_POP_TO_BASE
0x0000129A: 0x8029            - O_POP_BASE
0x0000129C: 0x800C            - O_A_TO_D
0x0000129E: 0x801C            - O_POP_RETURN
0x000012A0: 0x802A            - O_POP_TO_BASE
0x000012A2: 0x8029            - O_POP_BASE
0x000012A4: 0x801C            - O_POP_RETURN

11: Lars00 (0x000012a6)
===============================
0x000012A6: 0x802B            - O_PUSH_BASE
0x000012A8: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x000012AE: 0xC001 0x00000069 - O_INTOP(0x00000069)   // 105 (105)
0x000012B4: 0x811E            - O_GSAY_REPLY
0x000012B6: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000012BC: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x000012C2: 0xC001 0x0000006a - O_INTOP(0x0000006a)   // 106 (106)
0x000012C8: 0xC001 0x0000000d - O_INTOP(0x0000000d)   // 13 (13)
0x000012CE: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000012D4: 0x8121            - O_GIQ_OPTION
0x000012D6: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000012DC: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x000012E2: 0xC001 0x0000006b - O_INTOP(0x0000006b)   // 107 (107)
0x000012E8: 0xC001 0x00000010 - O_INTOP(0x00000010)   // 16 (16)
0x000012EE: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000012F4: 0x8121            - O_GIQ_OPTION
0x000012F6: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000012FC: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001302: 0xC001 0x0000006c - O_INTOP(0x0000006c)   // 108 (108)
0x00001308: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x0000130E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001314: 0x8121            - O_GIQ_OPTION
0x00001316: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x0000131C: 0x8046            - O_NEGATE
0x0000131E: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001324: 0xC001 0x0000006d - O_INTOP(0x0000006d)   // 109 (109)
0x0000132A: 0xC001 0x0000001f - O_INTOP(0x0000001f)   // 31 (31)
0x00001330: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001336: 0x8121            - O_GIQ_OPTION
0x00001338: 0xC001 0x00001370 - O_INTOP(0x00001370)   // 4976 (4976)
0x0000133E: 0xC001 0x0000022b - O_INTOP(0x0000022b)   // 555 (555)
0x00001344: 0x80C5            - O_GLOBAL_VAR
0x00001346: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000134C: 0x8033            - O_EQUAL
0x0000134E: 0x802F            - O_IF
0x00001350: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00001356: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x0000135C: 0xC001 0x0000006e - O_INTOP(0x0000006e)   // 110 (110)
0x00001362: 0xC001 0x00000018 - O_INTOP(0x00000018)   // 24 (24)
0x00001368: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000136E: 0x8121            - O_GIQ_OPTION
0x00001370: 0xC001 0x000013a8 - O_INTOP(0x000013a8)   // 5032 (5032)
0x00001376: 0xC001 0x00000068 - O_INTOP(0x00000068)   // 104 (104)
0x0000137C: 0x80C5            - O_GLOBAL_VAR
0x0000137E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001384: 0x8033            - O_EQUAL
0x00001386: 0x802F            - O_IF
0x00001388: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000138E: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001394: 0xC001 0x000000a1 - O_INTOP(0x000000a1)   // 161 (161)
0x0000139A: 0xC001 0x00000021 - O_INTOP(0x00000021)   // 33 (33)
0x000013A0: 0xC001 0x00000031 - O_INTOP(0x00000031)   // 49 (49)
0x000013A6: 0x8121            - O_GIQ_OPTION
0x000013A8: 0xC001 0x000013fc - O_INTOP(0x000013fc)   // 5116 (5116)
0x000013AE: 0xC001 0x0000011b - O_INTOP(0x0000011b)   // 283 (283)
0x000013B4: 0x80C5            - O_GLOBAL_VAR
0x000013B6: 0x80EA            - O_GAME_TIME
0x000013B8: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x000013BE: 0xC001 0x0000003c - O_INTOP(0x0000003c)   // 60 (60)
0x000013C4: 0x803B            - O_MUL
0x000013C6: 0xC001 0x0000003c - O_INTOP(0x0000003c)   // 60 (60)
0x000013CC: 0x803B            - O_MUL
0x000013CE: 0xC001 0x00000018 - O_INTOP(0x00000018)   // 24 (24)
0x000013D4: 0x803B            - O_MUL
0x000013D6: 0x803C            - O_DIV
0x000013D8: 0x8038            - O_GREATER
0x000013DA: 0x802F            - O_IF
0x000013DC: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000013E2: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x000013E8: 0xC001 0x000000a6 - O_INTOP(0x000000a6)   // 166 (166)
0x000013EE: 0xC001 0x00000023 - O_INTOP(0x00000023)   // 35 (35)
0x000013F4: 0xC001 0x00000031 - O_INTOP(0x00000031)   // 49 (49)
0x000013FA: 0x8121            - O_GIQ_OPTION
0x000013FC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001402: 0x800D            - O_D_TO_A
0x00001404: 0x8019            - O_SWAPA
0x00001406: 0x802A            - O_POP_TO_BASE
0x00001408: 0x8029            - O_POP_BASE
0x0000140A: 0x800C            - O_A_TO_D
0x0000140C: 0x801C            - O_POP_RETURN
0x0000140E: 0x802A            - O_POP_TO_BASE
0x00001410: 0x8029            - O_POP_BASE
0x00001412: 0x801C            - O_POP_RETURN

12: Lars01 (0x00001414)
===============================
0x00001414: 0x802B            - O_PUSH_BASE
0x00001416: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x0000141C: 0xC001 0x0000006f - O_INTOP(0x0000006f)   // 111 (111)
0x00001422: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x00001428: 0x8120            - O_GSAY_MESSAGE
0x0000142A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001430: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001436: 0x8013            - O_STORE_GLOBAL
0x00001438: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000143E: 0x800D            - O_D_TO_A
0x00001440: 0x8019            - O_SWAPA
0x00001442: 0x802A            - O_POP_TO_BASE
0x00001444: 0x8029            - O_POP_BASE
0x00001446: 0x800C            - O_A_TO_D
0x00001448: 0x801C            - O_POP_RETURN
0x0000144A: 0x802A            - O_POP_TO_BASE
0x0000144C: 0x8029            - O_POP_BASE
0x0000144E: 0x801C            - O_POP_RETURN

13: Lars02 (0x00001450)
===============================
0x00001450: 0x802B            - O_PUSH_BASE
0x00001452: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001458: 0xC001 0x00000070 - O_INTOP(0x00000070)   // 112 (112)
0x0000145E: 0x811E            - O_GSAY_REPLY
0x00001460: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001466: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x0000146C: 0xC001 0x00000071 - O_INTOP(0x00000071)   // 113 (113)
0x00001472: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x00001478: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000147E: 0x8121            - O_GIQ_OPTION
0x00001480: 0xC001 0x00001496 - O_INTOP(0x00001496)   // 5270 (5270)
0x00001486: 0x800D            - O_D_TO_A
0x00001488: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000148E: 0xC001 0x00000034 - O_INTOP(0x00000034)   // 52 (52)
0x00001494: 0x8005            - O_CALL
0x00001496: 0x801A            - O_POP
0x00001498: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000149E: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x000014A4: 0xC001 0x00000007 - O_INTOP(0x00000007)   // 7 (7)
0x000014AA: 0x8012            - O_FETCH_GLOBAL
0x000014AC: 0xC001 0x00000027 - O_INTOP(0x00000027)   // 39 (39)
0x000014B2: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000014B8: 0x8121            - O_GIQ_OPTION
0x000014BA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000014C0: 0x800D            - O_D_TO_A
0x000014C2: 0x8019            - O_SWAPA
0x000014C4: 0x802A            - O_POP_TO_BASE
0x000014C6: 0x8029            - O_POP_BASE
0x000014C8: 0x800C            - O_A_TO_D
0x000014CA: 0x801C            - O_POP_RETURN
0x000014CC: 0x802A            - O_POP_TO_BASE
0x000014CE: 0x8029            - O_POP_BASE
0x000014D0: 0x801C            - O_POP_RETURN

14: Lars03 (0x000014d2)
===============================
0x000014D2: 0x802B            - O_PUSH_BASE
0x000014D4: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x000014DA: 0xC001 0x00000072 - O_INTOP(0x00000072)   // 114 (114)
0x000014E0: 0x811E            - O_GSAY_REPLY
0x000014E2: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000014E8: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x000014EE: 0xC001 0x00000073 - O_INTOP(0x00000073)   // 115 (115)
0x000014F4: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x000014FA: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001500: 0x8121            - O_GIQ_OPTION
0x00001502: 0xC001 0x00001518 - O_INTOP(0x00001518)   // 5400 (5400)
0x00001508: 0x800D            - O_D_TO_A
0x0000150A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001510: 0xC001 0x00000034 - O_INTOP(0x00000034)   // 52 (52)
0x00001516: 0x8005            - O_CALL
0x00001518: 0x801A            - O_POP
0x0000151A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001520: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001526: 0xC001 0x00000007 - O_INTOP(0x00000007)   // 7 (7)
0x0000152C: 0x8012            - O_FETCH_GLOBAL
0x0000152E: 0xC001 0x00000027 - O_INTOP(0x00000027)   // 39 (39)
0x00001534: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000153A: 0x8121            - O_GIQ_OPTION
0x0000153C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001542: 0x800D            - O_D_TO_A
0x00001544: 0x8019            - O_SWAPA
0x00001546: 0x802A            - O_POP_TO_BASE
0x00001548: 0x8029            - O_POP_BASE
0x0000154A: 0x800C            - O_A_TO_D
0x0000154C: 0x801C            - O_POP_RETURN
0x0000154E: 0x802A            - O_POP_TO_BASE
0x00001550: 0x8029            - O_POP_BASE
0x00001552: 0x801C            - O_POP_RETURN

15: Lars04 (0x00001554)
===============================
0x00001554: 0x802B            - O_PUSH_BASE
0x00001556: 0xC001 0x0000156c - O_INTOP(0x0000156c)   // 5484 (5484)
0x0000155C: 0x800D            - O_D_TO_A
0x0000155E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001564: 0xC001 0x0000002d - O_INTOP(0x0000002d)   // 45 (45)
0x0000156A: 0x8005            - O_CALL
0x0000156C: 0x801A            - O_POP
0x0000156E: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001574: 0xC001 0x00000074 - O_INTOP(0x00000074)   // 116 (116)
0x0000157A: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x00001580: 0x8120            - O_GSAY_MESSAGE
0x00001582: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001588: 0x800D            - O_D_TO_A
0x0000158A: 0x8019            - O_SWAPA
0x0000158C: 0x802A            - O_POP_TO_BASE
0x0000158E: 0x8029            - O_POP_BASE
0x00001590: 0x800C            - O_A_TO_D
0x00001592: 0x801C            - O_POP_RETURN
0x00001594: 0x802A            - O_POP_TO_BASE
0x00001596: 0x8029            - O_POP_BASE
0x00001598: 0x801C            - O_POP_RETURN

16: Lars05 (0x0000159a)
===============================
0x0000159A: 0x802B            - O_PUSH_BASE
0x0000159C: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x000015A2: 0xC001 0x00000075 - O_INTOP(0x00000075)   // 117 (117)
0x000015A8: 0x811E            - O_GSAY_REPLY
0x000015AA: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000015B0: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x000015B6: 0xC001 0x00000076 - O_INTOP(0x00000076)   // 118 (118)
0x000015BC: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x000015C2: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000015C8: 0x8121            - O_GIQ_OPTION
0x000015CA: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000015D0: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x000015D6: 0xC001 0x00000077 - O_INTOP(0x00000077)   // 119 (119)
0x000015DC: 0xC001 0x00000011 - O_INTOP(0x00000011)   // 17 (17)
0x000015E2: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000015E8: 0x8121            - O_GIQ_OPTION
0x000015EA: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x000015F0: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x000015F6: 0xC001 0x00000078 - O_INTOP(0x00000078)   // 120 (120)
0x000015FC: 0xC001 0x00000012 - O_INTOP(0x00000012)   // 18 (18)
0x00001602: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001608: 0x8121            - O_GIQ_OPTION
0x0000160A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001610: 0x800D            - O_D_TO_A
0x00001612: 0x8019            - O_SWAPA
0x00001614: 0x802A            - O_POP_TO_BASE
0x00001616: 0x8029            - O_POP_BASE
0x00001618: 0x800C            - O_A_TO_D
0x0000161A: 0x801C            - O_POP_RETURN
0x0000161C: 0x802A            - O_POP_TO_BASE
0x0000161E: 0x8029            - O_POP_BASE
0x00001620: 0x801C            - O_POP_RETURN

17: Lars06 (0x00001622)
===============================
0x00001622: 0x802B            - O_PUSH_BASE
0x00001624: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x0000162A: 0xC001 0x00000079 - O_INTOP(0x00000079)   // 121 (121)
0x00001630: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001636: 0x8120            - O_GSAY_MESSAGE
0x00001638: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000163E: 0x800D            - O_D_TO_A
0x00001640: 0x8019            - O_SWAPA
0x00001642: 0x802A            - O_POP_TO_BASE
0x00001644: 0x8029            - O_POP_BASE
0x00001646: 0x800C            - O_A_TO_D
0x00001648: 0x801C            - O_POP_RETURN
0x0000164A: 0x802A            - O_POP_TO_BASE
0x0000164C: 0x8029            - O_POP_BASE
0x0000164E: 0x801C            - O_POP_RETURN

18: Lars07 (0x00001650)
===============================
0x00001650: 0x802B            - O_PUSH_BASE
0x00001652: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001658: 0xC001 0x0000007a - O_INTOP(0x0000007a)   // 122 (122)
0x0000165E: 0x811E            - O_GSAY_REPLY
0x00001660: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001666: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x0000166C: 0xC001 0x0000007b - O_INTOP(0x0000007b)   // 123 (123)
0x00001672: 0xC001 0x00000013 - O_INTOP(0x00000013)   // 19 (19)
0x00001678: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000167E: 0x8121            - O_GIQ_OPTION
0x00001680: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001686: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x0000168C: 0xC001 0x0000007c - O_INTOP(0x0000007c)   // 124 (124)
0x00001692: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x00001698: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000169E: 0x8121            - O_GIQ_OPTION
0x000016A0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000016A6: 0x800D            - O_D_TO_A
0x000016A8: 0x8019            - O_SWAPA
0x000016AA: 0x802A            - O_POP_TO_BASE
0x000016AC: 0x8029            - O_POP_BASE
0x000016AE: 0x800C            - O_A_TO_D
0x000016B0: 0x801C            - O_POP_RETURN
0x000016B2: 0x802A            - O_POP_TO_BASE
0x000016B4: 0x8029            - O_POP_BASE
0x000016B6: 0x801C            - O_POP_RETURN

19: Lars08 (0x000016b8)
===============================
0x000016B8: 0x802B            - O_PUSH_BASE
0x000016BA: 0xC001 0x0000022b - O_INTOP(0x0000022b)   // 555 (555)
0x000016C0: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000016C6: 0x80C6            - O_SET_GLOBAL_VAR
0x000016C8: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x000016CE: 0xC001 0x0000007d - O_INTOP(0x0000007d)   // 125 (125)
0x000016D4: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000016DA: 0x8120            - O_GSAY_MESSAGE
0x000016DC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000016E2: 0x800D            - O_D_TO_A
0x000016E4: 0x8019            - O_SWAPA
0x000016E6: 0x802A            - O_POP_TO_BASE
0x000016E8: 0x8029            - O_POP_BASE
0x000016EA: 0x800C            - O_A_TO_D
0x000016EC: 0x801C            - O_POP_RETURN
0x000016EE: 0x802A            - O_POP_TO_BASE
0x000016F0: 0x8029            - O_POP_BASE
0x000016F2: 0x801C            - O_POP_RETURN

20: Lars09 (0x000016f4)
===============================
0x000016F4: 0x802B            - O_PUSH_BASE
0x000016F6: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x000016FC: 0xC001 0x0000007e - O_INTOP(0x0000007e)   // 126 (126)
0x00001702: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001708: 0x8120            - O_GSAY_MESSAGE
0x0000170A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001710: 0x800D            - O_D_TO_A
0x00001712: 0x8019            - O_SWAPA
0x00001714: 0x802A            - O_POP_TO_BASE
0x00001716: 0x8029            - O_POP_BASE
0x00001718: 0x800C            - O_A_TO_D
0x0000171A: 0x801C            - O_POP_RETURN
0x0000171C: 0x802A            - O_POP_TO_BASE
0x0000171E: 0x8029            - O_POP_BASE
0x00001720: 0x801C            - O_POP_RETURN

21: Lars10 (0x00001722)
===============================
0x00001722: 0x802B            - O_PUSH_BASE
0x00001724: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000172A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001730: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001736: 0x80C2            - O_SET_LOCAL_VAR
0x00001738: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x0000173E: 0xC001 0x00000080 - O_INTOP(0x00000080)   // 128 (128)
0x00001744: 0x8105            - O_MESSAGE_STR
0x00001746: 0x80BF            - O_DUDE_OBJ
0x00001748: 0x8100            - O_OBJ_PID
0x0000174A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001750: 0x8104            - O_PROTO_DATA
0x00001752: 0x8039            - O_ADD
0x00001754: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x0000175A: 0xC001 0x00000081 - O_INTOP(0x00000081)   // 129 (129)
0x00001760: 0x8105            - O_MESSAGE_STR
0x00001762: 0x8039            - O_ADD
0x00001764: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000176A: 0x8031            - O_STORE
0x0000176C: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001772: 0xC001 0x0000007f - O_INTOP(0x0000007f)   // 127 (127)
0x00001778: 0x811E            - O_GSAY_REPLY
0x0000177A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001780: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001786: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000178C: 0x8032            - O_FETCH
0x0000178E: 0xC001 0x00000016 - O_INTOP(0x00000016)   // 22 (22)
0x00001794: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000179A: 0x8121            - O_GIQ_OPTION
0x0000179C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000017A2: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x000017A8: 0xC001 0x00000082 - O_INTOP(0x00000082)   // 130 (130)
0x000017AE: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x000017B4: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000017BA: 0x8121            - O_GIQ_OPTION
0x000017BC: 0xC001 0x000017f4 - O_INTOP(0x000017f4)   // 6132 (6132)
0x000017C2: 0xC001 0x00000068 - O_INTOP(0x00000068)   // 104 (104)
0x000017C8: 0x80C5            - O_GLOBAL_VAR
0x000017CA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000017D0: 0x8033            - O_EQUAL
0x000017D2: 0x802F            - O_IF
0x000017D4: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000017DA: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x000017E0: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x000017E6: 0xC001 0x00000021 - O_INTOP(0x00000021)   // 33 (33)
0x000017EC: 0xC001 0x00000031 - O_INTOP(0x00000031)   // 49 (49)
0x000017F2: 0x8121            - O_GIQ_OPTION
0x000017F4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000017FA: 0x800D            - O_D_TO_A
0x000017FC: 0x8019            - O_SWAPA
0x000017FE: 0x802A            - O_POP_TO_BASE
0x00001800: 0x8029            - O_POP_BASE
0x00001802: 0x800C            - O_A_TO_D
0x00001804: 0x801C            - O_POP_RETURN
0x00001806: 0x802A            - O_POP_TO_BASE
0x00001808: 0x8029            - O_POP_BASE
0x0000180A: 0x801C            - O_POP_RETURN

22: Lars11 (0x0000180c)
===============================
0x0000180C: 0x802B            - O_PUSH_BASE
0x0000180E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001814: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x0000181A: 0xC001 0x00000083 - O_INTOP(0x00000083)   // 131 (131)
0x00001820: 0x8105            - O_MESSAGE_STR
0x00001822: 0x80BF            - O_DUDE_OBJ
0x00001824: 0x8100            - O_OBJ_PID
0x00001826: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000182C: 0x8104            - O_PROTO_DATA
0x0000182E: 0x8039            - O_ADD
0x00001830: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001836: 0xC001 0x00000084 - O_INTOP(0x00000084)   // 132 (132)
0x0000183C: 0x8105            - O_MESSAGE_STR
0x0000183E: 0x8039            - O_ADD
0x00001840: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001846: 0x8031            - O_STORE
0x00001848: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x0000184E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001854: 0x8032            - O_FETCH
0x00001856: 0x811E            - O_GSAY_REPLY
0x00001858: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000185E: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001864: 0xC001 0x00000085 - O_INTOP(0x00000085)   // 133 (133)
0x0000186A: 0xC001 0x00000010 - O_INTOP(0x00000010)   // 16 (16)
0x00001870: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001876: 0x8121            - O_GIQ_OPTION
0x00001878: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000187E: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001884: 0xC001 0x00000086 - O_INTOP(0x00000086)   // 134 (134)
0x0000188A: 0xC001 0x0000000d - O_INTOP(0x0000000d)   // 13 (13)
0x00001890: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001896: 0x8121            - O_GIQ_OPTION
0x00001898: 0xC001 0x000018ae - O_INTOP(0x000018ae)   // 6318 (6318)
0x0000189E: 0x800D            - O_D_TO_A
0x000018A0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000018A6: 0xC001 0x00000034 - O_INTOP(0x00000034)   // 52 (52)
0x000018AC: 0x8005            - O_CALL
0x000018AE: 0x801A            - O_POP
0x000018B0: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000018B6: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x000018BC: 0xC001 0x00000007 - O_INTOP(0x00000007)   // 7 (7)
0x000018C2: 0x8012            - O_FETCH_GLOBAL
0x000018C4: 0xC001 0x00000027 - O_INTOP(0x00000027)   // 39 (39)
0x000018CA: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000018D0: 0x8121            - O_GIQ_OPTION
0x000018D2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000018D8: 0x800D            - O_D_TO_A
0x000018DA: 0x8019            - O_SWAPA
0x000018DC: 0x802A            - O_POP_TO_BASE
0x000018DE: 0x8029            - O_POP_BASE
0x000018E0: 0x800C            - O_A_TO_D
0x000018E2: 0x801C            - O_POP_RETURN
0x000018E4: 0x802A            - O_POP_TO_BASE
0x000018E6: 0x8029            - O_POP_BASE
0x000018E8: 0x801C            - O_POP_RETURN

23: Lars12 (0x000018ea)
===============================
0x000018EA: 0x802B            - O_PUSH_BASE
0x000018EC: 0xC001 0x0000191a - O_INTOP(0x0000191a)   // 6426 (6426)
0x000018F2: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000018F8: 0x80C1            - O_LOCAL_VAR
0x000018FA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001900: 0x8038            - O_GREATER
0x00001902: 0x802F            - O_IF
0x00001904: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x0000190A: 0xC001 0x00000087 - O_INTOP(0x00000087)   // 135 (135)
0x00001910: 0x811E            - O_GSAY_REPLY
0x00001912: 0xC001 0x00001956 - O_INTOP(0x00001956)   // 6486 (6486)
0x00001918: 0x8004            - O_JMP
0x0000191A: 0xC001 0x00001948 - O_INTOP(0x00001948)   // 6472 (6472)
0x00001920: 0xC001 0x00000068 - O_INTOP(0x00000068)   // 104 (104)
0x00001926: 0x80C5            - O_GLOBAL_VAR
0x00001928: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x0000192E: 0x8033            - O_EQUAL
0x00001930: 0x802F            - O_IF
0x00001932: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001938: 0xC001 0x000000ab - O_INTOP(0x000000ab)   // 171 (171)
0x0000193E: 0x811E            - O_GSAY_REPLY
0x00001940: 0xC001 0x00001956 - O_INTOP(0x00001956)   // 6486 (6486)
0x00001946: 0x8004            - O_JMP
0x00001948: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x0000194E: 0xC001 0x00000088 - O_INTOP(0x00000088)   // 136 (136)
0x00001954: 0x811E            - O_GSAY_REPLY
0x00001956: 0xC001 0x00001988 - O_INTOP(0x00001988)   // 6536 (6536)
0x0000195C: 0xC001 0x0000022b - O_INTOP(0x0000022b)   // 555 (555)
0x00001962: 0x80C5            - O_GLOBAL_VAR
0x00001964: 0x8045            - O_NOT
0x00001966: 0x802F            - O_IF
0x00001968: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000196E: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001974: 0xC001 0x00000089 - O_INTOP(0x00000089)   // 137 (137)
0x0000197A: 0xC001 0x0000001d - O_INTOP(0x0000001d)   // 29 (29)
0x00001980: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001986: 0x8121            - O_GIQ_OPTION
0x00001988: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000198E: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001994: 0xC001 0x0000008a - O_INTOP(0x0000008a)   // 138 (138)
0x0000199A: 0xC001 0x00000027 - O_INTOP(0x00000027)   // 39 (39)
0x000019A0: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000019A6: 0x8121            - O_GIQ_OPTION
0x000019A8: 0xC001 0x000019ea - O_INTOP(0x000019ea)   // 6634 (6634)
0x000019AE: 0xC001 0x00000101 - O_INTOP(0x00000101)   // 257 (257)
0x000019B4: 0x80C5            - O_GLOBAL_VAR
0x000019B6: 0xC001 0x0000022b - O_INTOP(0x0000022b)   // 555 (555)
0x000019BC: 0x80C5            - O_GLOBAL_VAR
0x000019BE: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000019C4: 0x8033            - O_EQUAL
0x000019C6: 0x803E            - O_AND
0x000019C8: 0x802F            - O_IF
0x000019CA: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000019D0: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x000019D6: 0xC001 0x0000008b - O_INTOP(0x0000008b)   // 139 (139)
0x000019DC: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x000019E2: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000019E8: 0x8121            - O_GIQ_OPTION
0x000019EA: 0xC001 0x00001a3e - O_INTOP(0x00001a3e)   // 6718 (6718)
0x000019F0: 0xC001 0x0000011b - O_INTOP(0x0000011b)   // 283 (283)
0x000019F6: 0x80C5            - O_GLOBAL_VAR
0x000019F8: 0x80EA            - O_GAME_TIME
0x000019FA: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00001A00: 0xC001 0x0000003c - O_INTOP(0x0000003c)   // 60 (60)
0x00001A06: 0x803B            - O_MUL
0x00001A08: 0xC001 0x0000003c - O_INTOP(0x0000003c)   // 60 (60)
0x00001A0E: 0x803B            - O_MUL
0x00001A10: 0xC001 0x00000018 - O_INTOP(0x00000018)   // 24 (24)
0x00001A16: 0x803B            - O_MUL
0x00001A18: 0x803C            - O_DIV
0x00001A1A: 0x8038            - O_GREATER
0x00001A1C: 0x802F            - O_IF
0x00001A1E: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001A24: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001A2A: 0xC001 0x000000a6 - O_INTOP(0x000000a6)   // 166 (166)
0x00001A30: 0xC001 0x00000023 - O_INTOP(0x00000023)   // 35 (35)
0x00001A36: 0xC001 0x00000031 - O_INTOP(0x00000031)   // 49 (49)
0x00001A3C: 0x8121            - O_GIQ_OPTION
0x00001A3E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001A44: 0x800D            - O_D_TO_A
0x00001A46: 0x8019            - O_SWAPA
0x00001A48: 0x802A            - O_POP_TO_BASE
0x00001A4A: 0x8029            - O_POP_BASE
0x00001A4C: 0x800C            - O_A_TO_D
0x00001A4E: 0x801C            - O_POP_RETURN
0x00001A50: 0x802A            - O_POP_TO_BASE
0x00001A52: 0x8029            - O_POP_BASE
0x00001A54: 0x801C            - O_POP_RETURN

24: Lars13 (0x00001a56)
===============================
0x00001A56: 0x802B            - O_PUSH_BASE
0x00001A58: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001A5E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001A64: 0x80C2            - O_SET_LOCAL_VAR
0x00001A66: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001A6C: 0xC001 0x0000008c - O_INTOP(0x0000008c)   // 140 (140)
0x00001A72: 0x811E            - O_GSAY_REPLY
0x00001A74: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001A7A: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001A80: 0xC001 0x0000008d - O_INTOP(0x0000008d)   // 141 (141)
0x00001A86: 0xC001 0x0000001c - O_INTOP(0x0000001c)   // 28 (28)
0x00001A8C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001A92: 0x8121            - O_GIQ_OPTION
0x00001A94: 0xC001 0x00001ac4 - O_INTOP(0x00001ac4)   // 6852 (6852)
0x00001A9A: 0xC001 0x00000101 - O_INTOP(0x00000101)   // 257 (257)
0x00001AA0: 0x80C5            - O_GLOBAL_VAR
0x00001AA2: 0x802F            - O_IF
0x00001AA4: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001AAA: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001AB0: 0xC001 0x0000008e - O_INTOP(0x0000008e)   // 142 (142)
0x00001AB6: 0xC001 0x0000001b - O_INTOP(0x0000001b)   // 27 (27)
0x00001ABC: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001AC2: 0x8121            - O_GIQ_OPTION
0x00001AC4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001ACA: 0x800D            - O_D_TO_A
0x00001ACC: 0x8019            - O_SWAPA
0x00001ACE: 0x802A            - O_POP_TO_BASE
0x00001AD0: 0x8029            - O_POP_BASE
0x00001AD2: 0x800C            - O_A_TO_D
0x00001AD4: 0x801C            - O_POP_RETURN
0x00001AD6: 0x802A            - O_POP_TO_BASE
0x00001AD8: 0x8029            - O_POP_BASE
0x00001ADA: 0x801C            - O_POP_RETURN

25: Lars14 (0x00001adc)
===============================
0x00001ADC: 0x802B            - O_PUSH_BASE
0x00001ADE: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001AE4: 0xC001 0x0000008f - O_INTOP(0x0000008f)   // 143 (143)
0x00001AEA: 0x811E            - O_GSAY_REPLY
0x00001AEC: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001AF2: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001AF8: 0xC001 0x00000090 - O_INTOP(0x00000090)   // 144 (144)
0x00001AFE: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x00001B04: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001B0A: 0x8121            - O_GIQ_OPTION
0x00001B0C: 0xC001 0x00001b3c - O_INTOP(0x00001b3c)   // 6972 (6972)
0x00001B12: 0xC001 0x00000101 - O_INTOP(0x00000101)   // 257 (257)
0x00001B18: 0x80C5            - O_GLOBAL_VAR
0x00001B1A: 0x802F            - O_IF
0x00001B1C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001B22: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001B28: 0xC001 0x00000091 - O_INTOP(0x00000091)   // 145 (145)
0x00001B2E: 0xC001 0x0000001b - O_INTOP(0x0000001b)   // 27 (27)
0x00001B34: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001B3A: 0x8121            - O_GIQ_OPTION
0x00001B3C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001B42: 0x800D            - O_D_TO_A
0x00001B44: 0x8019            - O_SWAPA
0x00001B46: 0x802A            - O_POP_TO_BASE
0x00001B48: 0x8029            - O_POP_BASE
0x00001B4A: 0x800C            - O_A_TO_D
0x00001B4C: 0x801C            - O_POP_RETURN
0x00001B4E: 0x802A            - O_POP_TO_BASE
0x00001B50: 0x8029            - O_POP_BASE
0x00001B52: 0x801C            - O_POP_RETURN

26: Lars15 (0x00001b54)
===============================
0x00001B54: 0x802B            - O_PUSH_BASE
0x00001B56: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001B5C: 0xC001 0x00000092 - O_INTOP(0x00000092)   // 146 (146)
0x00001B62: 0x811E            - O_GSAY_REPLY
0x00001B64: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001B6A: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001B70: 0xC001 0x00000093 - O_INTOP(0x00000093)   // 147 (147)
0x00001B76: 0xC001 0x00000027 - O_INTOP(0x00000027)   // 39 (39)
0x00001B7C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001B82: 0x8121            - O_GIQ_OPTION
0x00001B84: 0xC001 0x00001bb4 - O_INTOP(0x00001bb4)   // 7092 (7092)
0x00001B8A: 0xC001 0x00000101 - O_INTOP(0x00000101)   // 257 (257)
0x00001B90: 0x80C5            - O_GLOBAL_VAR
0x00001B92: 0x802F            - O_IF
0x00001B94: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001B9A: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001BA0: 0xC001 0x00000094 - O_INTOP(0x00000094)   // 148 (148)
0x00001BA6: 0xC001 0x0000001b - O_INTOP(0x0000001b)   // 27 (27)
0x00001BAC: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001BB2: 0x8121            - O_GIQ_OPTION
0x00001BB4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001BBA: 0x800D            - O_D_TO_A
0x00001BBC: 0x8019            - O_SWAPA
0x00001BBE: 0x802A            - O_POP_TO_BASE
0x00001BC0: 0x8029            - O_POP_BASE
0x00001BC2: 0x800C            - O_A_TO_D
0x00001BC4: 0x801C            - O_POP_RETURN
0x00001BC6: 0x802A            - O_POP_TO_BASE
0x00001BC8: 0x8029            - O_POP_BASE
0x00001BCA: 0x801C            - O_POP_RETURN

27: Lars16 (0x00001bcc)
===============================
0x00001BCC: 0x802B            - O_PUSH_BASE
0x00001BCE: 0xC001 0x0000022b - O_INTOP(0x0000022b)   // 555 (555)
0x00001BD4: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001BDA: 0x80C6            - O_SET_GLOBAL_VAR
0x00001BDC: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001BE2: 0xC001 0x00000095 - O_INTOP(0x00000095)   // 149 (149)
0x00001BE8: 0xC001 0x00000031 - O_INTOP(0x00000031)   // 49 (49)
0x00001BEE: 0x8120            - O_GSAY_MESSAGE
0x00001BF0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001BF6: 0x800D            - O_D_TO_A
0x00001BF8: 0x8019            - O_SWAPA
0x00001BFA: 0x802A            - O_POP_TO_BASE
0x00001BFC: 0x8029            - O_POP_BASE
0x00001BFE: 0x800C            - O_A_TO_D
0x00001C00: 0x801C            - O_POP_RETURN
0x00001C02: 0x802A            - O_POP_TO_BASE
0x00001C04: 0x8029            - O_POP_BASE
0x00001C06: 0x801C            - O_POP_RETURN

28: Lars17 (0x00001c08)
===============================
0x00001C08: 0x802B            - O_PUSH_BASE
0x00001C0A: 0xC001 0x00001c20 - O_INTOP(0x00001c20)   // 7200 (7200)
0x00001C10: 0x800D            - O_D_TO_A
0x00001C12: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001C18: 0xC001 0x0000002d - O_INTOP(0x0000002d)   // 45 (45)
0x00001C1E: 0x8005            - O_CALL
0x00001C20: 0x801A            - O_POP
0x00001C22: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001C28: 0xC001 0x00000096 - O_INTOP(0x00000096)   // 150 (150)
0x00001C2E: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x00001C34: 0x8120            - O_GSAY_MESSAGE
0x00001C36: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001C3C: 0x800D            - O_D_TO_A
0x00001C3E: 0x8019            - O_SWAPA
0x00001C40: 0x802A            - O_POP_TO_BASE
0x00001C42: 0x8029            - O_POP_BASE
0x00001C44: 0x800C            - O_A_TO_D
0x00001C46: 0x801C            - O_POP_RETURN
0x00001C48: 0x802A            - O_POP_TO_BASE
0x00001C4A: 0x8029            - O_POP_BASE
0x00001C4C: 0x801C            - O_POP_RETURN

29: Lars18 (0x00001c4e)
===============================
0x00001C4E: 0x802B            - O_PUSH_BASE
0x00001C50: 0xC001 0x0000022b - O_INTOP(0x0000022b)   // 555 (555)
0x00001C56: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001C5C: 0x80C6            - O_SET_GLOBAL_VAR
0x00001C5E: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001C64: 0xC001 0x00000097 - O_INTOP(0x00000097)   // 151 (151)
0x00001C6A: 0x811E            - O_GSAY_REPLY
0x00001C6C: 0xC001 0x00001c82 - O_INTOP(0x00001c82)   // 7298 (7298)
0x00001C72: 0x800D            - O_D_TO_A
0x00001C74: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001C7A: 0xC001 0x00000034 - O_INTOP(0x00000034)   // 52 (52)
0x00001C80: 0x8005            - O_CALL
0x00001C82: 0x801A            - O_POP
0x00001C84: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001C8A: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001C90: 0xC001 0x00000007 - O_INTOP(0x00000007)   // 7 (7)
0x00001C96: 0x8012            - O_FETCH_GLOBAL
0x00001C98: 0xC001 0x00000027 - O_INTOP(0x00000027)   // 39 (39)
0x00001C9E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001CA4: 0x8121            - O_GIQ_OPTION
0x00001CA6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001CAC: 0x800D            - O_D_TO_A
0x00001CAE: 0x8019            - O_SWAPA
0x00001CB0: 0x802A            - O_POP_TO_BASE
0x00001CB2: 0x8029            - O_POP_BASE
0x00001CB4: 0x800C            - O_A_TO_D
0x00001CB6: 0x801C            - O_POP_RETURN
0x00001CB8: 0x802A            - O_POP_TO_BASE
0x00001CBA: 0x8029            - O_POP_BASE
0x00001CBC: 0x801C            - O_POP_RETURN

30: Lars19 (0x00001cbe)
===============================
0x00001CBE: 0x802B            - O_PUSH_BASE
0x00001CC0: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001CC6: 0xC001 0x00000098 - O_INTOP(0x00000098)   // 152 (152)
0x00001CCC: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001CD2: 0x8120            - O_GSAY_MESSAGE
0x00001CD4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001CDA: 0x800D            - O_D_TO_A
0x00001CDC: 0x8019            - O_SWAPA
0x00001CDE: 0x802A            - O_POP_TO_BASE
0x00001CE0: 0x8029            - O_POP_BASE
0x00001CE2: 0x800C            - O_A_TO_D
0x00001CE4: 0x801C            - O_POP_RETURN
0x00001CE6: 0x802A            - O_POP_TO_BASE
0x00001CE8: 0x8029            - O_POP_BASE
0x00001CEA: 0x801C            - O_POP_RETURN

31: Lars20 (0x00001cec)
===============================
0x00001CEC: 0x802B            - O_PUSH_BASE
0x00001CEE: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001CF4: 0xC001 0x00000099 - O_INTOP(0x00000099)   // 153 (153)
0x00001CFA: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001D00: 0x8120            - O_GSAY_MESSAGE
0x00001D02: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001D08: 0x800D            - O_D_TO_A
0x00001D0A: 0x8019            - O_SWAPA
0x00001D0C: 0x802A            - O_POP_TO_BASE
0x00001D0E: 0x8029            - O_POP_BASE
0x00001D10: 0x800C            - O_A_TO_D
0x00001D12: 0x801C            - O_POP_RETURN
0x00001D14: 0x802A            - O_POP_TO_BASE
0x00001D16: 0x8029            - O_POP_BASE
0x00001D18: 0x801C            - O_POP_RETURN

32: Lars21 (0x00001d1a)
===============================
0x00001D1A: 0x802B            - O_PUSH_BASE
0x00001D1C: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001D22: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00001D28: 0x811E            - O_GSAY_REPLY
0x00001D2A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001D30: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001D36: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x00001D3C: 0xC001 0x00000021 - O_INTOP(0x00000021)   // 33 (33)
0x00001D42: 0xC001 0x00000031 - O_INTOP(0x00000031)   // 49 (49)
0x00001D48: 0x8121            - O_GIQ_OPTION
0x00001D4A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001D50: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001D56: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x00001D5C: 0xC001 0x00000022 - O_INTOP(0x00000022)   // 34 (34)
0x00001D62: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001D68: 0x8121            - O_GIQ_OPTION
0x00001D6A: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001D70: 0x8046            - O_NEGATE
0x00001D72: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001D78: 0xC001 0x000000ac - O_INTOP(0x000000ac)   // 172 (172)
0x00001D7E: 0xC001 0x00000021 - O_INTOP(0x00000021)   // 33 (33)
0x00001D84: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001D8A: 0x8121            - O_GIQ_OPTION
0x00001D8C: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001D92: 0x8046            - O_NEGATE
0x00001D94: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001D9A: 0xC001 0x000000ad - O_INTOP(0x000000ad)   // 173 (173)
0x00001DA0: 0xC001 0x00000022 - O_INTOP(0x00000022)   // 34 (34)
0x00001DA6: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001DAC: 0x8121            - O_GIQ_OPTION
0x00001DAE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001DB4: 0x800D            - O_D_TO_A
0x00001DB6: 0x8019            - O_SWAPA
0x00001DB8: 0x802A            - O_POP_TO_BASE
0x00001DBA: 0x8029            - O_POP_BASE
0x00001DBC: 0x800C            - O_A_TO_D
0x00001DBE: 0x801C            - O_POP_RETURN
0x00001DC0: 0x802A            - O_POP_TO_BASE
0x00001DC2: 0x8029            - O_POP_BASE
0x00001DC4: 0x801C            - O_POP_RETURN

33: Lars22 (0x00001dc6)
===============================
0x00001DC6: 0x802B            - O_PUSH_BASE
0x00001DC8: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001DCE: 0xC001 0x0000009e - O_INTOP(0x0000009e)   // 158 (158)
0x00001DD4: 0xC001 0x00000031 - O_INTOP(0x00000031)   // 49 (49)
0x00001DDA: 0x8120            - O_GSAY_MESSAGE
0x00001DDC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001DE2: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001DE8: 0x8013            - O_STORE_GLOBAL
0x00001DEA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001DF0: 0x800D            - O_D_TO_A
0x00001DF2: 0x8019            - O_SWAPA
0x00001DF4: 0x802A            - O_POP_TO_BASE
0x00001DF6: 0x8029            - O_POP_BASE
0x00001DF8: 0x800C            - O_A_TO_D
0x00001DFA: 0x801C            - O_POP_RETURN
0x00001DFC: 0x802A            - O_POP_TO_BASE
0x00001DFE: 0x8029            - O_POP_BASE
0x00001E00: 0x801C            - O_POP_RETURN

34: Lars23 (0x00001e02)
===============================
0x00001E02: 0x802B            - O_PUSH_BASE
0x00001E04: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001E0A: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00001E10: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001E16: 0x8120            - O_GSAY_MESSAGE
0x00001E18: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001E1E: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00001E24: 0x8013            - O_STORE_GLOBAL
0x00001E26: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001E2C: 0x800D            - O_D_TO_A
0x00001E2E: 0x8019            - O_SWAPA
0x00001E30: 0x802A            - O_POP_TO_BASE
0x00001E32: 0x8029            - O_POP_BASE
0x00001E34: 0x800C            - O_A_TO_D
0x00001E36: 0x801C            - O_POP_RETURN
0x00001E38: 0x802A            - O_POP_TO_BASE
0x00001E3A: 0x8029            - O_POP_BASE
0x00001E3C: 0x801C            - O_POP_RETURN

35: Lars24 (0x00001e3e)
===============================
0x00001E3E: 0x802B            - O_PUSH_BASE
0x00001E40: 0xC001 0x0000011f - O_INTOP(0x0000011f)   // 287 (287)
0x00001E46: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001E4C: 0x80C6            - O_SET_GLOBAL_VAR
0x00001E4E: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001E54: 0xC001 0x000000a3 - O_INTOP(0x000000a3)   // 163 (163)
0x00001E5A: 0x811E            - O_GSAY_REPLY
0x00001E5C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001E62: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001E68: 0xC001 0x000000a4 - O_INTOP(0x000000a4)   // 164 (164)
0x00001E6E: 0xC001 0x00000024 - O_INTOP(0x00000024)   // 36 (36)
0x00001E74: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001E7A: 0x8121            - O_GIQ_OPTION
0x00001E7C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001E82: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001E88: 0xC001 0x000000a5 - O_INTOP(0x000000a5)   // 165 (165)
0x00001E8E: 0xC001 0x00000028 - O_INTOP(0x00000028)   // 40 (40)
0x00001E94: 0xC001 0x00000031 - O_INTOP(0x00000031)   // 49 (49)
0x00001E9A: 0x8121            - O_GIQ_OPTION
0x00001E9C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001EA2: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001EA8: 0x80C2            - O_SET_LOCAL_VAR
0x00001EAA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001EB0: 0x800D            - O_D_TO_A
0x00001EB2: 0x8019            - O_SWAPA
0x00001EB4: 0x802A            - O_POP_TO_BASE
0x00001EB6: 0x8029            - O_POP_BASE
0x00001EB8: 0x800C            - O_A_TO_D
0x00001EBA: 0x801C            - O_POP_RETURN
0x00001EBC: 0x802A            - O_POP_TO_BASE
0x00001EBE: 0x8029            - O_POP_BASE
0x00001EC0: 0x801C            - O_POP_RETURN

36: Lars25 (0x00001ec2)
===============================
0x00001EC2: 0x802B            - O_PUSH_BASE
0x00001EC4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001ECA: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001ED0: 0x8013            - O_STORE_GLOBAL
0x00001ED2: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001ED8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001EDE: 0x80C2            - O_SET_LOCAL_VAR
0x00001EE0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001EE6: 0x800D            - O_D_TO_A
0x00001EE8: 0x8019            - O_SWAPA
0x00001EEA: 0x802A            - O_POP_TO_BASE
0x00001EEC: 0x8029            - O_POP_BASE
0x00001EEE: 0x800C            - O_A_TO_D
0x00001EF0: 0x801C            - O_POP_RETURN
0x00001EF2: 0x802A            - O_POP_TO_BASE
0x00001EF4: 0x8029            - O_POP_BASE
0x00001EF6: 0x801C            - O_POP_RETURN

37: Lars26 (0x00001ef8)
===============================
0x00001EF8: 0x802B            - O_PUSH_BASE
0x00001EFA: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001F00: 0xC001 0x000000a9 - O_INTOP(0x000000a9)   // 169 (169)
0x00001F06: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x00001F0C: 0x8120            - O_GSAY_MESSAGE
0x00001F0E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001F14: 0x800D            - O_D_TO_A
0x00001F16: 0x8019            - O_SWAPA
0x00001F18: 0x802A            - O_POP_TO_BASE
0x00001F1A: 0x8029            - O_POP_BASE
0x00001F1C: 0x800C            - O_A_TO_D
0x00001F1E: 0x801C            - O_POP_RETURN
0x00001F20: 0x802A            - O_POP_TO_BASE
0x00001F22: 0x8029            - O_POP_BASE
0x00001F24: 0x801C            - O_POP_RETURN

38: Lars27 (0x00001f26)
===============================
0x00001F26: 0x802B            - O_PUSH_BASE
0x00001F28: 0xC001 0x00000206 - O_INTOP(0x00000206)   // 518 (518)
0x00001F2E: 0xC001 0x000000aa - O_INTOP(0x000000aa)   // 170 (170)
0x00001F34: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x00001F3A: 0x8120            - O_GSAY_MESSAGE
0x00001F3C: 0x80BC            - O_SELF_OBJ
0x00001F3E: 0x80F1            - O_RM_TIMER_EVENT
0x00001F40: 0x80BC            - O_SELF_OBJ
0x00001F42: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x00001F48: 0x80F2            - O_GAME_TICKS
0x00001F4A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001F50: 0x80F0            - O_ADD_TIMER_EVENT
0x00001F52: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001F58: 0x800D            - O_D_TO_A
0x00001F5A: 0x8019            - O_SWAPA
0x00001F5C: 0x802A            - O_POP_TO_BASE
0x00001F5E: 0x8029            - O_POP_BASE
0x00001F60: 0x800C            - O_A_TO_D
0x00001F62: 0x801C            - O_POP_RETURN
0x00001F64: 0x802A            - O_POP_TO_BASE
0x00001F66: 0x8029            - O_POP_BASE
0x00001F68: 0x801C            - O_POP_RETURN

39: LarsEnd (0x00001f6a)
===============================
0x00001F6A: 0x802B            - O_PUSH_BASE
0x00001F6C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001F72: 0x800D            - O_D_TO_A
0x00001F74: 0x8019            - O_SWAPA
0x00001F76: 0x802A            - O_POP_TO_BASE
0x00001F78: 0x8029            - O_POP_BASE
0x00001F7A: 0x800C            - O_A_TO_D
0x00001F7C: 0x801C            - O_POP_RETURN
0x00001F7E: 0x802A            - O_POP_TO_BASE
0x00001F80: 0x8029            - O_POP_BASE
0x00001F82: 0x801C            - O_POP_RETURN

40: LarsKillNeal (0x00001f84)
===============================
0x00001F84: 0x802B            - O_PUSH_BASE
0x00001F86: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001F8C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001F92: 0x8013            - O_STORE_GLOBAL
0x00001F94: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001F9A: 0x800D            - O_D_TO_A
0x00001F9C: 0x8019            - O_SWAPA
0x00001F9E: 0x802A            - O_POP_TO_BASE
0x00001FA0: 0x8029            - O_POP_BASE
0x00001FA2: 0x800C            - O_A_TO_D
0x00001FA4: 0x801C            - O_POP_RETURN
0x00001FA6: 0x802A            - O_POP_TO_BASE
0x00001FA8: 0x8029            - O_POP_BASE
0x00001FAA: 0x801C            - O_POP_RETURN

41: get_reaction (0x00001fac)
===============================
0x00001FAC: 0x802B            - O_PUSH_BASE
0x00001FAE: 0xC001 0x00002226 - O_INTOP(0x00002226)   // 8742 (8742)
0x00001FB4: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001FBA: 0x80C1            - O_LOCAL_VAR
0x00001FBC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001FC2: 0x8033            - O_EQUAL
0x00001FC4: 0x802F            - O_IF
0x00001FC6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001FCC: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001FD2: 0x80C2            - O_SET_LOCAL_VAR
0x00001FD4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001FDA: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001FE0: 0x80C2            - O_SET_LOCAL_VAR
0x00001FE2: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001FE8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001FEE: 0x80C2            - O_SET_LOCAL_VAR
0x00001FF0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001FF6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001FFC: 0x80C1            - O_LOCAL_VAR
0x00001FFE: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00002004: 0x80BF            - O_DUDE_OBJ
0x00002006: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x0000200C: 0x80CA            - O_GET_CRITTER_STAT
0x0000200E: 0x803B            - O_MUL
0x00002010: 0x8039            - O_ADD
0x00002012: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00002018: 0x803A            - O_SUB
0x0000201A: 0x80C2            - O_SET_LOCAL_VAR
0x0000201C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002022: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002028: 0x80C1            - O_LOCAL_VAR
0x0000202A: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00002030: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002036: 0x80BF            - O_DUDE_OBJ
0x00002038: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x0000203E: 0x80F3            - O_HAS_TRAIT
0x00002040: 0x803B            - O_MUL
0x00002042: 0x8039            - O_ADD
0x00002044: 0x80C2            - O_SET_LOCAL_VAR
0x00002046: 0xC001 0x000020ba - O_INTOP(0x000020ba)   // 8378 (8378)
0x0000204C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002052: 0x80BF            - O_DUDE_OBJ
0x00002054: 0xC001 0x00000027 - O_INTOP(0x00000027)   // 39 (39)
0x0000205A: 0x80F3            - O_HAS_TRAIT
0x0000205C: 0x802F            - O_IF
0x0000205E: 0xC001 0x00002098 - O_INTOP(0x00002098)   // 8344 (8344)
0x00002064: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x0000206A: 0x80C5            - O_GLOBAL_VAR
0x0000206C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002072: 0x8038            - O_GREATER
0x00002074: 0x802F            - O_IF
0x00002076: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000207C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002082: 0x80C1            - O_LOCAL_VAR
0x00002084: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x0000208A: 0x80C5            - O_GLOBAL_VAR
0x0000208C: 0x8039            - O_ADD
0x0000208E: 0x80C2            - O_SET_LOCAL_VAR
0x00002090: 0xC001 0x000020b2 - O_INTOP(0x000020b2)   // 8370 (8370)
0x00002096: 0x8004            - O_JMP
0x00002098: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000209E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000020A4: 0x80C1            - O_LOCAL_VAR
0x000020A6: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x000020AC: 0x80C5            - O_GLOBAL_VAR
0x000020AE: 0x803A            - O_SUB
0x000020B0: 0x80C2            - O_SET_LOCAL_VAR
0x000020B2: 0xC001 0x0000210e - O_INTOP(0x0000210e)   // 8462 (8462)
0x000020B8: 0x8004            - O_JMP
0x000020BA: 0xC001 0x000020f4 - O_INTOP(0x000020f4)   // 8436 (8436)
0x000020C0: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000020C6: 0x80C1            - O_LOCAL_VAR
0x000020C8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000020CE: 0x8033            - O_EQUAL
0x000020D0: 0x802F            - O_IF
0x000020D2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000020D8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000020DE: 0x80C1            - O_LOCAL_VAR
0x000020E0: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x000020E6: 0x80C5            - O_GLOBAL_VAR
0x000020E8: 0x803A            - O_SUB
0x000020EA: 0x80C2            - O_SET_LOCAL_VAR
0x000020EC: 0xC001 0x0000210e - O_INTOP(0x0000210e)   // 8462 (8462)
0x000020F2: 0x8004            - O_JMP
0x000020F4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000020FA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002100: 0x80C1            - O_LOCAL_VAR
0x00002102: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00002108: 0x80C5            - O_GLOBAL_VAR
0x0000210A: 0x8039            - O_ADD
0x0000210C: 0x80C2            - O_SET_LOCAL_VAR
0x0000210E: 0xC001 0x0000213e - O_INTOP(0x0000213e)   // 8510 (8510)
0x00002114: 0xC001 0x0000009e - O_INTOP(0x0000009e)   // 158 (158)
0x0000211A: 0x80C5            - O_GLOBAL_VAR
0x0000211C: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00002122: 0x8038            - O_GREATER
0x00002124: 0x802F            - O_IF
0x00002126: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000212C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002132: 0x80C1            - O_LOCAL_VAR
0x00002134: 0xC001 0x0000001e - O_INTOP(0x0000001e)   // 30 (30)
0x0000213A: 0x803A            - O_SUB
0x0000213C: 0x80C2            - O_SET_LOCAL_VAR
0x0000213E: 0xC001 0x000021a6 - O_INTOP(0x000021a6)   // 8614 (8614)
0x00002144: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x0000214A: 0x80C5            - O_GLOBAL_VAR
0x0000214C: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00002152: 0x80C5            - O_GLOBAL_VAR
0x00002154: 0x8039            - O_ADD
0x00002156: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x0000215C: 0x8036            - O_GREATER_EQUAL
0x0000215E: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00002164: 0x80C5            - O_GLOBAL_VAR
0x00002166: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x0000216C: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00002172: 0x80C5            - O_GLOBAL_VAR
0x00002174: 0x803B            - O_MUL
0x00002176: 0x8038            - O_GREATER
0x00002178: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x0000217E: 0x80C5            - O_GLOBAL_VAR
0x00002180: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002186: 0x8033            - O_EQUAL
0x00002188: 0x803F            - O_OR
0x0000218A: 0x803E            - O_AND
0x0000218C: 0x802F            - O_IF
0x0000218E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002194: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000219A: 0x80C1            - O_LOCAL_VAR
0x0000219C: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x000021A2: 0x8039            - O_ADD
0x000021A4: 0x80C2            - O_SET_LOCAL_VAR
0x000021A6: 0xC001 0x0000220e - O_INTOP(0x0000220e)   // 8718 (8718)
0x000021AC: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x000021B2: 0x80C5            - O_GLOBAL_VAR
0x000021B4: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x000021BA: 0x80C5            - O_GLOBAL_VAR
0x000021BC: 0x8039            - O_ADD
0x000021BE: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x000021C4: 0x8036            - O_GREATER_EQUAL
0x000021C6: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x000021CC: 0x80C5            - O_GLOBAL_VAR
0x000021CE: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000021D4: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x000021DA: 0x80C5            - O_GLOBAL_VAR
0x000021DC: 0x803B            - O_MUL
0x000021DE: 0x8038            - O_GREATER
0x000021E0: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x000021E6: 0x80C5            - O_GLOBAL_VAR
0x000021E8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000021EE: 0x8033            - O_EQUAL
0x000021F0: 0x803F            - O_OR
0x000021F2: 0x803E            - O_AND
0x000021F4: 0x802F            - O_IF
0x000021F6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000021FC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002202: 0x80C1            - O_LOCAL_VAR
0x00002204: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x0000220A: 0x803A            - O_SUB
0x0000220C: 0x80C2            - O_SET_LOCAL_VAR
0x0000220E: 0xC001 0x00002224 - O_INTOP(0x00002224)   // 8740 (8740)
0x00002214: 0x800D            - O_D_TO_A
0x00002216: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000221C: 0xC001 0x0000002a - O_INTOP(0x0000002a)   // 42 (42)
0x00002222: 0x8005            - O_CALL
0x00002224: 0x801A            - O_POP
0x00002226: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000222C: 0x800D            - O_D_TO_A
0x0000222E: 0x8019            - O_SWAPA
0x00002230: 0x802A            - O_POP_TO_BASE
0x00002232: 0x8029            - O_POP_BASE
0x00002234: 0x800C            - O_A_TO_D
0x00002236: 0x801C            - O_POP_RETURN
0x00002238: 0x802A            - O_POP_TO_BASE
0x0000223A: 0x8029            - O_POP_BASE
0x0000223C: 0x801C            - O_POP_RETURN

42: ReactToLevel (0x0000223e)
===============================
0x0000223E: 0x802B            - O_PUSH_BASE
0x00002240: 0xC001 0x0000226e - O_INTOP(0x0000226e)   // 8814 (8814)
0x00002246: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000224C: 0x80C1            - O_LOCAL_VAR
0x0000224E: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00002254: 0x8035            - O_LESS_EQUAL
0x00002256: 0x802F            - O_IF
0x00002258: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000225E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002264: 0x80C2            - O_SET_LOCAL_VAR
0x00002266: 0xC001 0x000022aa - O_INTOP(0x000022aa)   // 8874 (8874)
0x0000226C: 0x8004            - O_JMP
0x0000226E: 0xC001 0x0000229c - O_INTOP(0x0000229c)   // 8860 (8860)
0x00002274: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000227A: 0x80C1            - O_LOCAL_VAR
0x0000227C: 0xC001 0x0000004b - O_INTOP(0x0000004b)   // 75 (75)
0x00002282: 0x8035            - O_LESS_EQUAL
0x00002284: 0x802F            - O_IF
0x00002286: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000228C: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00002292: 0x80C2            - O_SET_LOCAL_VAR
0x00002294: 0xC001 0x000022aa - O_INTOP(0x000022aa)   // 8874 (8874)
0x0000229A: 0x8004            - O_JMP
0x0000229C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000022A2: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000022A8: 0x80C2            - O_SET_LOCAL_VAR
0x000022AA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000022B0: 0x800D            - O_D_TO_A
0x000022B2: 0x8019            - O_SWAPA
0x000022B4: 0x802A            - O_POP_TO_BASE
0x000022B6: 0x8029            - O_POP_BASE
0x000022B8: 0x800C            - O_A_TO_D
0x000022BA: 0x801C            - O_POP_RETURN
0x000022BC: 0x802A            - O_POP_TO_BASE
0x000022BE: 0x8029            - O_POP_BASE
0x000022C0: 0x801C            - O_POP_RETURN

43: LevelToReact (0x000022c2)
===============================
0x000022C2: 0x802B            - O_PUSH_BASE
0x000022C4: 0xC001 0x000022fa - O_INTOP(0x000022fa)   // 8954 (8954)
0x000022CA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000022D0: 0x80C1            - O_LOCAL_VAR
0x000022D2: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000022D8: 0x8033            - O_EQUAL
0x000022DA: 0x802F            - O_IF
0x000022DC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000022E2: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000022E8: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x000022EE: 0x80B4            - O_RANDOM
0x000022F0: 0x80C2            - O_SET_LOCAL_VAR
0x000022F2: 0xC001 0x00002346 - O_INTOP(0x00002346)   // 9030 (9030)
0x000022F8: 0x8004            - O_JMP
0x000022FA: 0xC001 0x00002330 - O_INTOP(0x00002330)   // 9008 (9008)
0x00002300: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002306: 0x80C1            - O_LOCAL_VAR
0x00002308: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x0000230E: 0x8033            - O_EQUAL
0x00002310: 0x802F            - O_IF
0x00002312: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002318: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x0000231E: 0xC001 0x0000004b - O_INTOP(0x0000004b)   // 75 (75)
0x00002324: 0x80B4            - O_RANDOM
0x00002326: 0x80C2            - O_SET_LOCAL_VAR
0x00002328: 0xC001 0x00002346 - O_INTOP(0x00002346)   // 9030 (9030)
0x0000232E: 0x8004            - O_JMP
0x00002330: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002336: 0xC001 0x0000004c - O_INTOP(0x0000004c)   // 76 (76)
0x0000233C: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x00002342: 0x80B4            - O_RANDOM
0x00002344: 0x80C2            - O_SET_LOCAL_VAR
0x00002346: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000234C: 0x800D            - O_D_TO_A
0x0000234E: 0x8019            - O_SWAPA
0x00002350: 0x802A            - O_POP_TO_BASE
0x00002352: 0x8029            - O_POP_BASE
0x00002354: 0x800C            - O_A_TO_D
0x00002356: 0x801C            - O_POP_RETURN
0x00002358: 0x802A            - O_POP_TO_BASE
0x0000235A: 0x8029            - O_POP_BASE
0x0000235C: 0x801C            - O_POP_RETURN

44: UpReact (0x0000235e)
===============================
0x0000235E: 0x802B            - O_PUSH_BASE
0x00002360: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002366: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000236C: 0x80C1            - O_LOCAL_VAR
0x0000236E: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00002374: 0x8039            - O_ADD
0x00002376: 0x80C2            - O_SET_LOCAL_VAR
0x00002378: 0xC001 0x0000238e - O_INTOP(0x0000238e)   // 9102 (9102)
0x0000237E: 0x800D            - O_D_TO_A
0x00002380: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002386: 0xC001 0x0000002a - O_INTOP(0x0000002a)   // 42 (42)
0x0000238C: 0x8005            - O_CALL
0x0000238E: 0x801A            - O_POP
0x00002390: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002396: 0x800D            - O_D_TO_A
0x00002398: 0x8019            - O_SWAPA
0x0000239A: 0x802A            - O_POP_TO_BASE
0x0000239C: 0x8029            - O_POP_BASE
0x0000239E: 0x800C            - O_A_TO_D
0x000023A0: 0x801C            - O_POP_RETURN
0x000023A2: 0x802A            - O_POP_TO_BASE
0x000023A4: 0x8029            - O_POP_BASE
0x000023A6: 0x801C            - O_POP_RETURN

45: DownReact (0x000023a8)
===============================
0x000023A8: 0x802B            - O_PUSH_BASE
0x000023AA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000023B0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000023B6: 0x80C1            - O_LOCAL_VAR
0x000023B8: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x000023BE: 0x803A            - O_SUB
0x000023C0: 0x80C2            - O_SET_LOCAL_VAR
0x000023C2: 0xC001 0x000023d8 - O_INTOP(0x000023d8)   // 9176 (9176)
0x000023C8: 0x800D            - O_D_TO_A
0x000023CA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000023D0: 0xC001 0x0000002a - O_INTOP(0x0000002a)   // 42 (42)
0x000023D6: 0x8005            - O_CALL
0x000023D8: 0x801A            - O_POP
0x000023DA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000023E0: 0x800D            - O_D_TO_A
0x000023E2: 0x8019            - O_SWAPA
0x000023E4: 0x802A            - O_POP_TO_BASE
0x000023E6: 0x8029            - O_POP_BASE
0x000023E8: 0x800C            - O_A_TO_D
0x000023EA: 0x801C            - O_POP_RETURN
0x000023EC: 0x802A            - O_POP_TO_BASE
0x000023EE: 0x8029            - O_POP_BASE
0x000023F0: 0x801C            - O_POP_RETURN

46: BottomReact (0x000023f2)
===============================
0x000023F2: 0x802B            - O_PUSH_BASE
0x000023F4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000023FA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002400: 0x80C2            - O_SET_LOCAL_VAR
0x00002402: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002408: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000240E: 0x80C2            - O_SET_LOCAL_VAR
0x00002410: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002416: 0x800D            - O_D_TO_A
0x00002418: 0x8019            - O_SWAPA
0x0000241A: 0x802A            - O_POP_TO_BASE
0x0000241C: 0x8029            - O_POP_BASE
0x0000241E: 0x800C            - O_A_TO_D
0x00002420: 0x801C            - O_POP_RETURN
0x00002422: 0x802A            - O_POP_TO_BASE
0x00002424: 0x8029            - O_POP_BASE
0x00002426: 0x801C            - O_POP_RETURN

47: TopReact (0x00002428)
===============================
0x00002428: 0x802B            - O_PUSH_BASE
0x0000242A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002430: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x00002436: 0x80C2            - O_SET_LOCAL_VAR
0x00002438: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000243E: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00002444: 0x80C2            - O_SET_LOCAL_VAR
0x00002446: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000244C: 0x800D            - O_D_TO_A
0x0000244E: 0x8019            - O_SWAPA
0x00002450: 0x802A            - O_POP_TO_BASE
0x00002452: 0x8029            - O_POP_BASE
0x00002454: 0x800C            - O_A_TO_D
0x00002456: 0x801C            - O_POP_RETURN
0x00002458: 0x802A            - O_POP_TO_BASE
0x0000245A: 0x8029            - O_POP_BASE
0x0000245C: 0x801C            - O_POP_RETURN

48: BigUpReact (0x0000245e)
===============================
0x0000245E: 0x802B            - O_PUSH_BASE
0x00002460: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002466: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000246C: 0x80C1            - O_LOCAL_VAR
0x0000246E: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00002474: 0x8039            - O_ADD
0x00002476: 0x80C2            - O_SET_LOCAL_VAR
0x00002478: 0xC001 0x0000248e - O_INTOP(0x0000248e)   // 9358 (9358)
0x0000247E: 0x800D            - O_D_TO_A
0x00002480: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002486: 0xC001 0x0000002a - O_INTOP(0x0000002a)   // 42 (42)
0x0000248C: 0x8005            - O_CALL
0x0000248E: 0x801A            - O_POP
0x00002490: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002496: 0x800D            - O_D_TO_A
0x00002498: 0x8019            - O_SWAPA
0x0000249A: 0x802A            - O_POP_TO_BASE
0x0000249C: 0x8029            - O_POP_BASE
0x0000249E: 0x800C            - O_A_TO_D
0x000024A0: 0x801C            - O_POP_RETURN
0x000024A2: 0x802A            - O_POP_TO_BASE
0x000024A4: 0x8029            - O_POP_BASE
0x000024A6: 0x801C            - O_POP_RETURN

49: BigDownReact (0x000024a8)
===============================
0x000024A8: 0x802B            - O_PUSH_BASE
0x000024AA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000024B0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000024B6: 0x80C1            - O_LOCAL_VAR
0x000024B8: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x000024BE: 0x803A            - O_SUB
0x000024C0: 0x80C2            - O_SET_LOCAL_VAR
0x000024C2: 0xC001 0x000024d8 - O_INTOP(0x000024d8)   // 9432 (9432)
0x000024C8: 0x800D            - O_D_TO_A
0x000024CA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000024D0: 0xC001 0x0000002a - O_INTOP(0x0000002a)   // 42 (42)
0x000024D6: 0x8005            - O_CALL
0x000024D8: 0x801A            - O_POP
0x000024DA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000024E0: 0x800D            - O_D_TO_A
0x000024E2: 0x8019            - O_SWAPA
0x000024E4: 0x802A            - O_POP_TO_BASE
0x000024E6: 0x8029            - O_POP_BASE
0x000024E8: 0x800C            - O_A_TO_D
0x000024EA: 0x801C            - O_POP_RETURN
0x000024EC: 0x802A            - O_POP_TO_BASE
0x000024EE: 0x8029            - O_POP_BASE
0x000024F0: 0x801C            - O_POP_RETURN

50: UpReactLevel (0x000024f2)
===============================
0x000024F2: 0x802B            - O_PUSH_BASE
0x000024F4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000024FA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002500: 0x80C1            - O_LOCAL_VAR
0x00002502: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002508: 0x8039            - O_ADD
0x0000250A: 0x80C2            - O_SET_LOCAL_VAR
0x0000250C: 0xC001 0x00002532 - O_INTOP(0x00002532)   // 9522 (9522)
0x00002512: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002518: 0x80C1            - O_LOCAL_VAR
0x0000251A: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00002520: 0x8038            - O_GREATER
0x00002522: 0x802F            - O_IF
0x00002524: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000252A: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00002530: 0x80C2            - O_SET_LOCAL_VAR
0x00002532: 0xC001 0x00002548 - O_INTOP(0x00002548)   // 9544 (9544)
0x00002538: 0x800D            - O_D_TO_A
0x0000253A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002540: 0xC001 0x0000002b - O_INTOP(0x0000002b)   // 43 (43)
0x00002546: 0x8005            - O_CALL
0x00002548: 0x801A            - O_POP
0x0000254A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002550: 0x800D            - O_D_TO_A
0x00002552: 0x8019            - O_SWAPA
0x00002554: 0x802A            - O_POP_TO_BASE
0x00002556: 0x8029            - O_POP_BASE
0x00002558: 0x800C            - O_A_TO_D
0x0000255A: 0x801C            - O_POP_RETURN
0x0000255C: 0x802A            - O_POP_TO_BASE
0x0000255E: 0x8029            - O_POP_BASE
0x00002560: 0x801C            - O_POP_RETURN

51: DownReactLevel (0x00002562)
===============================
0x00002562: 0x802B            - O_PUSH_BASE
0x00002564: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000256A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002570: 0x80C1            - O_LOCAL_VAR
0x00002572: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002578: 0x803A            - O_SUB
0x0000257A: 0x80C2            - O_SET_LOCAL_VAR
0x0000257C: 0xC001 0x000025a2 - O_INTOP(0x000025a2)   // 9634 (9634)
0x00002582: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002588: 0x80C1            - O_LOCAL_VAR
0x0000258A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002590: 0x8037            - O_LESS
0x00002592: 0x802F            - O_IF
0x00002594: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000259A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000025A0: 0x80C2            - O_SET_LOCAL_VAR
0x000025A2: 0xC001 0x000025b8 - O_INTOP(0x000025b8)   // 9656 (9656)
0x000025A8: 0x800D            - O_D_TO_A
0x000025AA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000025B0: 0xC001 0x0000002b - O_INTOP(0x0000002b)   // 43 (43)
0x000025B6: 0x8005            - O_CALL
0x000025B8: 0x801A            - O_POP
0x000025BA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000025C0: 0x800D            - O_D_TO_A
0x000025C2: 0x8019            - O_SWAPA
0x000025C4: 0x802A            - O_POP_TO_BASE
0x000025C6: 0x8029            - O_POP_BASE
0x000025C8: 0x800C            - O_A_TO_D
0x000025CA: 0x801C            - O_POP_RETURN
0x000025CC: 0x802A            - O_POP_TO_BASE
0x000025CE: 0x8029            - O_POP_BASE
0x000025D0: 0x801C            - O_POP_RETURN

52: Goodbyes (0x000025d2)
===============================
0x000025D2: 0x802B            - O_PUSH_BASE
0x000025D4: 0xC001 0x0000027a - O_INTOP(0x0000027a)   // 634 (634)
0x000025DA: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x000025E0: 0xC001 0x00000069 - O_INTOP(0x00000069)   // 105 (105)
0x000025E6: 0x80B4            - O_RANDOM
0x000025E8: 0x8105            - O_MESSAGE_STR
0x000025EA: 0xC001 0x00000007 - O_INTOP(0x00000007)   // 7 (7)
0x000025F0: 0x8013            - O_STORE_GLOBAL
0x000025F2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000025F8: 0x800D            - O_D_TO_A
0x000025FA: 0x8019            - O_SWAPA
0x000025FC: 0x802A            - O_POP_TO_BASE
0x000025FE: 0x8029            - O_POP_BASE
0x00002600: 0x800C            - O_A_TO_D
0x00002602: 0x801C            - O_POP_RETURN
0x00002604: 0x802A            - O_POP_TO_BASE
0x00002606: 0x8029            - O_POP_BASE
0x00002608: 0x801C            - O_POP_RETURN

53: timed_event_p_proc (0x0000260a)
===============================
0x0000260A: 0x802B            - O_PUSH_BASE
0x0000260C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002612: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002618: 0x8013            - O_STORE_GLOBAL
0x0000261A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002620: 0x800D            - O_D_TO_A
0x00002622: 0x8019            - O_SWAPA
0x00002624: 0x802A            - O_POP_TO_BASE
0x00002626: 0x8029            - O_POP_BASE
0x00002628: 0x800C            - O_A_TO_D
0x0000262A: 0x801C            - O_POP_RETURN
0x0000262C: 0x802A            - O_POP_TO_BASE
0x0000262E: 0x8029            - O_POP_BASE
0x00002630: 0x801C            - O_POP_RETURN

