Fallout script decompiler, version 8.4.6 (sfall edition)
Copyright (C) Anchorite (TeamX), 2005-2009
anchorite2001@yandex.ru
Continued by Nirran, phobos2077, Mr.Stalin (2014-2020)
Crossplatformed by alexeevdv (2015)
int2ssl is using Fallout 1 code.
Loading file Games/Fallout1.Steam/scripts/JUNKDOG.int...
  Read startup code
  Read procedures table
  Read namespace
  Read stringspace
  Read tail of startup code
    Check "Jump to 'start' procedure" / "Jump to end of statup code"
    Check "# of argument to 'start' procedure"
    Extract "Export var" section
    Extract "Set exported var values" section
    Extract "Export procedures" section
    Extract "Global variables" section
  Read procedure's bodies
    Procedure: 0
    Procedure: 1
    Procedure: 2
    Procedure: 3
    Procedure: 4
    Procedure: 5
    Procedure: 6
    Procedure: 7
    Procedure: 8
    Procedure: 9
    Procedure: 10
File Games/Fallout1.Steam/scripts/JUNKDOG.int loaded successfuly

Decompiling...
  Init definitions
  Processing code
    Intial reducing
    Building execution tree
        Procedure: 0
        Procedure: 1
        Procedure: 2
        Procedure: 3
        Procedure: 4
        Procedure: 5
        Procedure: 6
        Procedure: 7
        Procedure: 8
        Procedure: 9
        Procedure: 10
    Extracting and reducing conditions
    Setting borders of blocks
        Procedure: 0
        Procedure: 1
        Procedure: 2
        Procedure: 3
        Procedure: 4
        Procedure: 5
Error: Conditional expression left in stack

============== Procedures table ==================

======== Procedure 0 ========
Name offset:       0x00000006
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000248
Number of args:    0x00000000  // 0

======== Procedure 1 ========
Name offset:       0x00000018
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000248
Number of args:    0x00000000  // 0

======== Procedure 2 ========
Name offset:       0x00000020
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000003EA
Number of args:    0x00000000  // 0

======== Procedure 3 ========
Name offset:       0x00000032
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000052E
Number of args:    0x00000000  // 0

======== Procedure 4 ========
Name offset:       0x00000044
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000584
Number of args:    0x00000000  // 0

======== Procedure 5 ========
Name offset:       0x00000056
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000005D8
Number of args:    0x00000000  // 0

======== Procedure 6 ========
Name offset:       0x0000006A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000670
Number of args:    0x00000000  // 0

======== Procedure 7 ========
Name offset:       0x0000007A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000068C
Number of args:    0x00000000  // 0

======== Procedure 8 ========
Name offset:       0x00000088
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000006F4
Number of args:    0x00000000  // 0

======== Procedure 9 ========
Name offset:       0x0000009E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000742
Number of args:    0x00000000  // 0

======== Procedure 10 ========
Name offset:       0x000000B2
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000007B8
Number of args:    0x00000000  // 0



============== Namespace ==================
0x00000006: ".............."
0x00000018: "start"
0x00000020: "critter_p_proc"
0x00000032: "destroy_p_proc"
0x00000044: "look_at_p_proc"
0x00000056: "map_enter_p_proc"
0x0000006A: "pickup_p_proc"
0x0000007A: "talk_p_proc"
0x00000088: "timed_event_p_proc"
0x0000009E: "use_obj_on_p_proc"
0x000000B2: "dog_joins_dude"
0x000000C4: "hostile"
0x000000CE: "waiting_to_follow"
0x000000E2: "Katja_ptr"
==================
14 item(s)



============== Stringspace ==================
Empty


============== Global variables values ==================
0: O_INTOP(0x00000000)   // 0 (0)
1: O_INTOP(0x00000000)   // 0 (0)


============== Exported variables ==================
Not found


============== Procedures ==================

0: .............. (0x00000248)
===============================

1: start (0x00000248)
===============================
0x00000248: 0x802B            - O_PUSH_BASE
0x0000024A: 0xC001 0x0000027c - O_INTOP(0x0000027c)   // 636 (636)
0x00000250: 0x80C7            - O_SCRIPT_ACTION
0x00000252: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00000258: 0x8033            - O_EQUAL
0x0000025A: 0x802F            - O_IF
0x0000025C: 0xC001 0x00000272 - O_INTOP(0x00000272)   // 626 (626)
0x00000262: 0x800D            - O_D_TO_A
0x00000264: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000026A: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000270: 0x8005            - O_CALL
0x00000272: 0x801A            - O_POP
0x00000274: 0xC001 0x000003d2 - O_INTOP(0x000003d2)   // 978 (978)
0x0000027A: 0x8004            - O_JMP
0x0000027C: 0xC001 0x000002ae - O_INTOP(0x000002ae)   // 686 (686)
0x00000282: 0x80C7            - O_SCRIPT_ACTION
0x00000284: 0xC001 0x00000012 - O_INTOP(0x00000012)   // 18 (18)
0x0000028A: 0x8033            - O_EQUAL
0x0000028C: 0x802F            - O_IF
0x0000028E: 0xC001 0x000002a4 - O_INTOP(0x000002a4)   // 676 (676)
0x00000294: 0x800D            - O_D_TO_A
0x00000296: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000029C: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000002A2: 0x8005            - O_CALL
0x000002A4: 0x801A            - O_POP
0x000002A6: 0xC001 0x000003d2 - O_INTOP(0x000003d2)   // 978 (978)
0x000002AC: 0x8004            - O_JMP
0x000002AE: 0xC001 0x000002e0 - O_INTOP(0x000002e0)   // 736 (736)
0x000002B4: 0x80C7            - O_SCRIPT_ACTION
0x000002B6: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x000002BC: 0x8033            - O_EQUAL
0x000002BE: 0x802F            - O_IF
0x000002C0: 0xC001 0x000002d6 - O_INTOP(0x000002d6)   // 726 (726)
0x000002C6: 0x800D            - O_D_TO_A
0x000002C8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000002CE: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000002D4: 0x8005            - O_CALL
0x000002D6: 0x801A            - O_POP
0x000002D8: 0xC001 0x000003d2 - O_INTOP(0x000003d2)   // 978 (978)
0x000002DE: 0x8004            - O_JMP
0x000002E0: 0xC001 0x00000312 - O_INTOP(0x00000312)   // 786 (786)
0x000002E6: 0x80C7            - O_SCRIPT_ACTION
0x000002E8: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x000002EE: 0x8033            - O_EQUAL
0x000002F0: 0x802F            - O_IF
0x000002F2: 0xC001 0x00000308 - O_INTOP(0x00000308)   // 776 (776)
0x000002F8: 0x800D            - O_D_TO_A
0x000002FA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000300: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000306: 0x8005            - O_CALL
0x00000308: 0x801A            - O_POP
0x0000030A: 0xC001 0x000003d2 - O_INTOP(0x000003d2)   // 978 (978)
0x00000310: 0x8004            - O_JMP
0x00000312: 0xC001 0x00000344 - O_INTOP(0x00000344)   // 836 (836)
0x00000318: 0x80C7            - O_SCRIPT_ACTION
0x0000031A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000320: 0x8033            - O_EQUAL
0x00000322: 0x802F            - O_IF
0x00000324: 0xC001 0x0000033a - O_INTOP(0x0000033a)   // 826 (826)
0x0000032A: 0x800D            - O_D_TO_A
0x0000032C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000332: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000338: 0x8005            - O_CALL
0x0000033A: 0x801A            - O_POP
0x0000033C: 0xC001 0x000003d2 - O_INTOP(0x000003d2)   // 978 (978)
0x00000342: 0x8004            - O_JMP
0x00000344: 0xC001 0x00000376 - O_INTOP(0x00000376)   // 886 (886)
0x0000034A: 0x80C7            - O_SCRIPT_ACTION
0x0000034C: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00000352: 0x8033            - O_EQUAL
0x00000354: 0x802F            - O_IF
0x00000356: 0xC001 0x0000036c - O_INTOP(0x0000036c)   // 876 (876)
0x0000035C: 0x800D            - O_D_TO_A
0x0000035E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000364: 0xC001 0x00000007 - O_INTOP(0x00000007)   // 7 (7)
0x0000036A: 0x8005            - O_CALL
0x0000036C: 0x801A            - O_POP
0x0000036E: 0xC001 0x000003d2 - O_INTOP(0x000003d2)   // 978 (978)
0x00000374: 0x8004            - O_JMP
0x00000376: 0xC001 0x000003a8 - O_INTOP(0x000003a8)   // 936 (936)
0x0000037C: 0x80C7            - O_SCRIPT_ACTION
0x0000037E: 0xC001 0x00000016 - O_INTOP(0x00000016)   // 22 (22)
0x00000384: 0x8033            - O_EQUAL
0x00000386: 0x802F            - O_IF
0x00000388: 0xC001 0x0000039e - O_INTOP(0x0000039e)   // 926 (926)
0x0000038E: 0x800D            - O_D_TO_A
0x00000390: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000396: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x0000039C: 0x8005            - O_CALL
0x0000039E: 0x801A            - O_POP
0x000003A0: 0xC001 0x000003d2 - O_INTOP(0x000003d2)   // 978 (978)
0x000003A6: 0x8004            - O_JMP
0x000003A8: 0xC001 0x000003d2 - O_INTOP(0x000003d2)   // 978 (978)
0x000003AE: 0x80C7            - O_SCRIPT_ACTION
0x000003B0: 0xC001 0x00000007 - O_INTOP(0x00000007)   // 7 (7)
0x000003B6: 0x8033            - O_EQUAL
0x000003B8: 0x802F            - O_IF
0x000003BA: 0xC001 0x000003d0 - O_INTOP(0x000003d0)   // 976 (976)
0x000003C0: 0x800D            - O_D_TO_A
0x000003C2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000003C8: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x000003CE: 0x8005            - O_CALL
0x000003D0: 0x801A            - O_POP
0x000003D2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000003D8: 0x800D            - O_D_TO_A
0x000003DA: 0x8019            - O_SWAPA
0x000003DC: 0x802A            - O_POP_TO_BASE
0x000003DE: 0x8029            - O_POP_BASE
0x000003E0: 0x800C            - O_A_TO_D
0x000003E2: 0x801C            - O_POP_RETURN
0x000003E4: 0x802A            - O_POP_TO_BASE
0x000003E6: 0x8029            - O_POP_BASE
0x000003E8: 0x801C            - O_POP_RETURN

2: critter_p_proc (0x000003ea)
===============================
0x000003EA: 0x802B            - O_PUSH_BASE
0x000003EC: 0xC001 0x00000450 - O_INTOP(0x00000450)   // 1104 (1104)
0x000003F2: 0x80BC            - O_SELF_OBJ
0x000003F4: 0x80BF            - O_DUDE_OBJ
0x000003F6: 0x80DC            - O_OBJ_CAN_SEE_OBJ
0x000003F8: 0x802F            - O_IF
0x000003FA: 0xC001 0x00000450 - O_INTOP(0x00000450)   // 1104 (1104)
0x00000400: 0x80BF            - O_DUDE_OBJ
0x00000402: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000408: 0x8106            - O_CRITTER_INVEN_OBJ
0x0000040A: 0x8100            - O_OBJ_PID
0x0000040C: 0xC001 0x0000004a - O_INTOP(0x0000004a)   // 74 (74)
0x00000412: 0x8033            - O_EQUAL
0x00000414: 0x802F            - O_IF
0x00000416: 0xC001 0x00000450 - O_INTOP(0x00000450)   // 1104 (1104)
0x0000041C: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000422: 0x80C5            - O_GLOBAL_VAR
0x00000424: 0x8045            - O_NOT
0x00000426: 0x802F            - O_IF
0x00000428: 0xC001 0x00000161 - O_INTOP(0x00000161)   // 353 (353)
0x0000042E: 0xC001 0x0000006a - O_INTOP(0x0000006a)   // 106 (106)
0x00000434: 0x8105            - O_MESSAGE_STR
0x00000436: 0x80B8            - O_DISPLAY_MSG
0x00000438: 0xC001 0x0000044e - O_INTOP(0x0000044e)   // 1102 (1102)
0x0000043E: 0x800D            - O_D_TO_A
0x00000440: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000446: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x0000044C: 0x8005            - O_CALL
0x0000044E: 0x801A            - O_POP
0x00000450: 0xC001 0x000004d6 - O_INTOP(0x000004d6)   // 1238 (1238)
0x00000456: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x0000045C: 0x80C5            - O_GLOBAL_VAR
0x0000045E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000464: 0x8033            - O_EQUAL
0x00000466: 0x802F            - O_IF
0x00000468: 0xC001 0x000004aa - O_INTOP(0x000004aa)   // 1194 (1194)
0x0000046E: 0x80BC            - O_SELF_OBJ
0x00000470: 0x80BF            - O_DUDE_OBJ
0x00000472: 0x80D3            - O_TILE_DISTANCE_OBJS
0x00000474: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000047A: 0x8038            - O_GREATER
0x0000047C: 0x802F            - O_IF
0x0000047E: 0x80BC            - O_SELF_OBJ
0x00000480: 0x80BF            - O_DUDE_OBJ
0x00000482: 0x80D4            - O_TILE_NUM
0x00000484: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000048A: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000490: 0x80B4            - O_RANDOM
0x00000492: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000498: 0x80D5            - O_TILE_NUM_IN_DIRECTION
0x0000049A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000004A0: 0x80CE            - O_ANIMATE_MOVE_OBJ_TO_TILE
0x000004A2: 0xC001 0x000004ce - O_INTOP(0x000004ce)   // 1230 (1230)
0x000004A8: 0x8004            - O_JMP
0x000004AA: 0x80BC            - O_SELF_OBJ
0x000004AC: 0x80BF            - O_DUDE_OBJ
0x000004AE: 0x80D4            - O_TILE_NUM
0x000004B0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000004B6: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000004BC: 0x80B4            - O_RANDOM
0x000004BE: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000004C4: 0x80D5            - O_TILE_NUM_IN_DIRECTION
0x000004C6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000004CC: 0x80CE            - O_ANIMATE_MOVE_OBJ_TO_TILE
0x000004CE: 0xC001 0x00000516 - O_INTOP(0x00000516)   // 1302 (1302)
0x000004D4: 0x8004            - O_JMP
0x000004D6: 0xC001 0x00000516 - O_INTOP(0x00000516)   // 1302 (1302)
0x000004DC: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x000004E2: 0x80C3            - O_MAP_VAR
0x000004E4: 0x802F            - O_IF
0x000004E6: 0xC001 0x00000508 - O_INTOP(0x00000508)   // 1288 (1288)
0x000004EC: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000004F2: 0x80C3            - O_MAP_VAR
0x000004F4: 0x802F            - O_IF
0x000004F6: 0x80BC            - O_SELF_OBJ
0x000004F8: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x000004FE: 0x80F2            - O_GAME_TICKS
0x00000500: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000506: 0x80F0            - O_ADD_TIMER_EVENT
0x00000508: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x0000050E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000514: 0x80C4            - O_SET_MAP_VAR
0x00000516: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000051C: 0x800D            - O_D_TO_A
0x0000051E: 0x8019            - O_SWAPA
0x00000520: 0x802A            - O_POP_TO_BASE
0x00000522: 0x8029            - O_POP_BASE
0x00000524: 0x800C            - O_A_TO_D
0x00000526: 0x801C            - O_POP_RETURN
0x00000528: 0x802A            - O_POP_TO_BASE
0x0000052A: 0x8029            - O_POP_BASE
0x0000052C: 0x801C            - O_POP_RETURN

3: destroy_p_proc (0x0000052e)
===============================
0x0000052E: 0x802B            - O_PUSH_BASE
0x00000530: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000536: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000053C: 0x80C6            - O_SET_GLOBAL_VAR
0x0000053E: 0xC001 0x000000ba - O_INTOP(0x000000ba)   // 186 (186)
0x00000544: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x0000054A: 0x80C6            - O_SET_GLOBAL_VAR
0x0000054C: 0xC001 0x000000bb - O_INTOP(0x000000bb)   // 187 (187)
0x00000552: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000558: 0x80C6            - O_SET_GLOBAL_VAR
0x0000055A: 0x80BC            - O_SELF_OBJ
0x0000055C: 0x8125            - O_PARTY_REMOVE
0x0000055E: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000564: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000056A: 0x80C4            - O_SET_MAP_VAR
0x0000056C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000572: 0x800D            - O_D_TO_A
0x00000574: 0x8019            - O_SWAPA
0x00000576: 0x802A            - O_POP_TO_BASE
0x00000578: 0x8029            - O_POP_BASE
0x0000057A: 0x800C            - O_A_TO_D
0x0000057C: 0x801C            - O_POP_RETURN
0x0000057E: 0x802A            - O_POP_TO_BASE
0x00000580: 0x8029            - O_POP_BASE
0x00000582: 0x801C            - O_POP_RETURN

4: look_at_p_proc (0x00000584)
===============================
0x00000584: 0x802B            - O_PUSH_BASE
0x00000586: 0x80B9            - O_SCRIPT_OVERRIDES
0x00000588: 0xC001 0x000005b0 - O_INTOP(0x000005b0)   // 1456 (1456)
0x0000058E: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000594: 0x80C5            - O_GLOBAL_VAR
0x00000596: 0x802F            - O_IF
0x00000598: 0xC001 0x00000161 - O_INTOP(0x00000161)   // 353 (353)
0x0000059E: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x000005A4: 0x8105            - O_MESSAGE_STR
0x000005A6: 0x80B8            - O_DISPLAY_MSG
0x000005A8: 0xC001 0x000005c0 - O_INTOP(0x000005c0)   // 1472 (1472)
0x000005AE: 0x8004            - O_JMP
0x000005B0: 0xC001 0x00000161 - O_INTOP(0x00000161)   // 353 (353)
0x000005B6: 0xC001 0x00000065 - O_INTOP(0x00000065)   // 101 (101)
0x000005BC: 0x8105            - O_MESSAGE_STR
0x000005BE: 0x80B8            - O_DISPLAY_MSG
0x000005C0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000005C6: 0x800D            - O_D_TO_A
0x000005C8: 0x8019            - O_SWAPA
0x000005CA: 0x802A            - O_POP_TO_BASE
0x000005CC: 0x8029            - O_POP_BASE
0x000005CE: 0x800C            - O_A_TO_D
0x000005D0: 0x801C            - O_POP_RETURN
0x000005D2: 0x802A            - O_POP_TO_BASE
0x000005D4: 0x8029            - O_POP_BASE
0x000005D6: 0x801C            - O_POP_RETURN

5: map_enter_p_proc (0x000005d8)
===============================
0x000005D8: 0x802B            - O_PUSH_BASE
0x000005DA: 0xC001 0x00000610 - O_INTOP(0x00000610)   // 1552 (1552)
0x000005E0: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000005E6: 0x80C5            - O_GLOBAL_VAR
0x000005E8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000005EE: 0x8033            - O_EQUAL
0x000005F0: 0x802F            - O_IF
0x000005F2: 0x80BC            - O_SELF_OBJ
0x000005F4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000005FA: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000600: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000606: 0x8102            - O_CRITTER_ADD_TRAIT
0x00000608: 0xC001 0x00000626 - O_INTOP(0x00000626)   // 1574 (1574)
0x0000060E: 0x8004            - O_JMP
0x00000610: 0x80BC            - O_SELF_OBJ
0x00000612: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000618: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x0000061E: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000624: 0x8102            - O_CRITTER_ADD_TRAIT
0x00000626: 0xC001 0x00000658 - O_INTOP(0x00000658)   // 1624 (1624)
0x0000062C: 0x8101            - O_CUR_MAP_INDEX
0x0000062E: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00000634: 0x8033            - O_EQUAL
0x00000636: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x0000063C: 0x80C5            - O_GLOBAL_VAR
0x0000063E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000644: 0x8033            - O_EQUAL
0x00000646: 0x803E            - O_AND
0x00000648: 0x802F            - O_IF
0x0000064A: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000650: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000656: 0x80C4            - O_SET_MAP_VAR
0x00000658: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000065E: 0x800D            - O_D_TO_A
0x00000660: 0x8019            - O_SWAPA
0x00000662: 0x802A            - O_POP_TO_BASE
0x00000664: 0x8029            - O_POP_BASE
0x00000666: 0x800C            - O_A_TO_D
0x00000668: 0x801C            - O_POP_RETURN
0x0000066A: 0x802A            - O_POP_TO_BASE
0x0000066C: 0x8029            - O_POP_BASE
0x0000066E: 0x801C            - O_POP_RETURN

6: pickup_p_proc (0x00000670)
===============================
0x00000670: 0x802B            - O_PUSH_BASE
0x00000672: 0x80B9            - O_SCRIPT_OVERRIDES
0x00000674: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000067A: 0x800D            - O_D_TO_A
0x0000067C: 0x8019            - O_SWAPA
0x0000067E: 0x802A            - O_POP_TO_BASE
0x00000680: 0x8029            - O_POP_BASE
0x00000682: 0x800C            - O_A_TO_D
0x00000684: 0x801C            - O_POP_RETURN
0x00000686: 0x802A            - O_POP_TO_BASE
0x00000688: 0x8029            - O_POP_BASE
0x0000068A: 0x801C            - O_POP_RETURN

7: talk_p_proc (0x0000068c)
===============================
0x0000068C: 0x802B            - O_PUSH_BASE
0x0000068E: 0x80BC            - O_SELF_OBJ
0x00000690: 0xC001 0x00000161 - O_INTOP(0x00000161)   // 353 (353)
0x00000696: 0xC001 0x00000066 - O_INTOP(0x00000066)   // 102 (102)
0x0000069C: 0x8105            - O_MESSAGE_STR
0x0000069E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000006A4: 0x810A            - O_FLOAT_MSG
0x000006A6: 0xC001 0x000006dc - O_INTOP(0x000006dc)   // 1756 (1756)
0x000006AC: 0x9001 0x000000e2 - O_STRINGOP(0x000000e2)   // 226 (226)
0x000006B2: 0x8014            - O_FETCH_EXTERNAL
0x000006B4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000006BA: 0x8034            - O_NOT_EQUAL
0x000006BC: 0x802F            - O_IF
0x000006BE: 0x9001 0x000000e2 - O_STRINGOP(0x000000e2)   // 226 (226)
0x000006C4: 0x8014            - O_FETCH_EXTERNAL
0x000006C6: 0xC001 0x0000026f - O_INTOP(0x0000026f)   // 623 (623)
0x000006CC: 0xC001 0x000000af - O_INTOP(0x000000af)   // 175 (175)
0x000006D2: 0x8105            - O_MESSAGE_STR
0x000006D4: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000006DA: 0x810A            - O_FLOAT_MSG
0x000006DC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000006E2: 0x800D            - O_D_TO_A
0x000006E4: 0x8019            - O_SWAPA
0x000006E6: 0x802A            - O_POP_TO_BASE
0x000006E8: 0x8029            - O_POP_BASE
0x000006EA: 0x800C            - O_A_TO_D
0x000006EC: 0x801C            - O_POP_RETURN
0x000006EE: 0x802A            - O_POP_TO_BASE
0x000006F0: 0x8029            - O_POP_BASE
0x000006F2: 0x801C            - O_POP_RETURN

8: timed_event_p_proc (0x000006f4)
===============================
0x000006F4: 0x802B            - O_PUSH_BASE
0x000006F6: 0x80BC            - O_SELF_OBJ
0x000006F8: 0xC001 0x00000161 - O_INTOP(0x00000161)   // 353 (353)
0x000006FE: 0xC001 0x00000067 - O_INTOP(0x00000067)   // 103 (103)
0x00000704: 0x8105            - O_MESSAGE_STR
0x00000706: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000070C: 0x810A            - O_FLOAT_MSG
0x0000070E: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x00000714: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000071A: 0x80C4            - O_SET_MAP_VAR
0x0000071C: 0xC001 0x00000007 - O_INTOP(0x00000007)   // 7 (7)
0x00000722: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000728: 0x80C4            - O_SET_MAP_VAR
0x0000072A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000730: 0x800D            - O_D_TO_A
0x00000732: 0x8019            - O_SWAPA
0x00000734: 0x802A            - O_POP_TO_BASE
0x00000736: 0x8029            - O_POP_BASE
0x00000738: 0x800C            - O_A_TO_D
0x0000073A: 0x801C            - O_POP_RETURN
0x0000073C: 0x802A            - O_POP_TO_BASE
0x0000073E: 0x8029            - O_POP_BASE
0x00000740: 0x801C            - O_POP_RETURN

9: use_obj_on_p_proc (0x00000742)
===============================
0x00000742: 0x802B            - O_PUSH_BASE
0x00000744: 0xC001 0x000007a0 - O_INTOP(0x000007a0)   // 1952 (1952)
0x0000074A: 0x80C0            - O_OBJ_BEING_USED_WITH
0x0000074C: 0x8100            - O_OBJ_PID
0x0000074E: 0xC001 0x00000067 - O_INTOP(0x00000067)   // 103 (103)
0x00000754: 0x8033            - O_EQUAL
0x00000756: 0x80C0            - O_OBJ_BEING_USED_WITH
0x00000758: 0x8100            - O_OBJ_PID
0x0000075A: 0xC001 0x00000051 - O_INTOP(0x00000051)   // 81 (81)
0x00000760: 0x8033            - O_EQUAL
0x00000762: 0x803F            - O_OR
0x00000764: 0x802F            - O_IF
0x00000766: 0xC001 0x000007a0 - O_INTOP(0x000007a0)   // 1952 (1952)
0x0000076C: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000772: 0x80C5            - O_GLOBAL_VAR
0x00000774: 0x8045            - O_NOT
0x00000776: 0x802F            - O_IF
0x00000778: 0xC001 0x00000161 - O_INTOP(0x00000161)   // 353 (353)
0x0000077E: 0xC001 0x00000069 - O_INTOP(0x00000069)   // 105 (105)
0x00000784: 0x8105            - O_MESSAGE_STR
0x00000786: 0x80B8            - O_DISPLAY_MSG
0x00000788: 0xC001 0x0000079e - O_INTOP(0x0000079e)   // 1950 (1950)
0x0000078E: 0x800D            - O_D_TO_A
0x00000790: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000796: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x0000079C: 0x8005            - O_CALL
0x0000079E: 0x801A            - O_POP
0x000007A0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000007A6: 0x800D            - O_D_TO_A
0x000007A8: 0x8019            - O_SWAPA
0x000007AA: 0x802A            - O_POP_TO_BASE
0x000007AC: 0x8029            - O_POP_BASE
0x000007AE: 0x800C            - O_A_TO_D
0x000007B0: 0x801C            - O_POP_RETURN
0x000007B2: 0x802A            - O_POP_TO_BASE
0x000007B4: 0x8029            - O_POP_BASE
0x000007B6: 0x801C            - O_POP_RETURN

10: dog_joins_dude (0x000007b8)
===============================
0x000007B8: 0x802B            - O_PUSH_BASE
0x000007BA: 0xC001 0x00000161 - O_INTOP(0x00000161)   // 353 (353)
0x000007C0: 0xC001 0x00000068 - O_INTOP(0x00000068)   // 104 (104)
0x000007C6: 0x8105            - O_MESSAGE_STR
0x000007C8: 0x80B8            - O_DISPLAY_MSG
0x000007CA: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x000007D0: 0x80A1            - O_GIVE_EXP_POINTS
0x000007D2: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000007D8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000007DE: 0x80C6            - O_SET_GLOBAL_VAR
0x000007E0: 0xC001 0x000000bb - O_INTOP(0x000000bb)   // 187 (187)
0x000007E6: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000007EC: 0x80C6            - O_SET_GLOBAL_VAR
0x000007EE: 0xC001 0x000000ba - O_INTOP(0x000000ba)   // 186 (186)
0x000007F4: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000007FA: 0x80C6            - O_SET_GLOBAL_VAR
0x000007FC: 0x80BC            - O_SELF_OBJ
0x000007FE: 0x8124            - O_PARTY_ADD
0x00000800: 0x80BC            - O_SELF_OBJ
0x00000802: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000808: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x0000080E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000814: 0x8102            - O_CRITTER_ADD_TRAIT
0x00000816: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x0000081C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000822: 0x80C4            - O_SET_MAP_VAR
0x00000824: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000082A: 0x800D            - O_D_TO_A
0x0000082C: 0x8019            - O_SWAPA
0x0000082E: 0x802A            - O_POP_TO_BASE
0x00000830: 0x8029            - O_POP_BASE
0x00000832: 0x800C            - O_A_TO_D
0x00000834: 0x801C            - O_POP_RETURN
0x00000836: 0x802A            - O_POP_TO_BASE
0x00000838: 0x8029            - O_POP_BASE
0x0000083A: 0x801C            - O_POP_RETURN

