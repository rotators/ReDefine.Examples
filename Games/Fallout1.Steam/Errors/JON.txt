Fallout script decompiler, version 8.4.7 (sfall edition)
Copyright (C) Anchorite (TeamX), 2005-2009
anchorite2001@yandex.ru
Continued by Nirran, phobos2077, Mr.Stalin (2014-2023)
Crossplatformed by alexeevdv (2015)
int2ssl is using Fallout 1 code.
Loading file Games/Fallout1.Steam/scripts/JON.int...
  Read startup code
  Read procedures table
  Read namespace
  Read stringspace
  Read tail of startup code
    Check "Jump to 'start' procedure" / "Jump to end of statup code"
    Check "# of argument to 'start' procedure"
    Extract "Export var" section
    Extract "Set exported var values" section
    Extract "Export procedures" section
    Extract "Global variables" section
  Read procedure's bodies
    Procedure: 0
    Procedure: 1
    Procedure: 2
    Procedure: 3
    Procedure: 4
    Procedure: 5
    Procedure: 6
    Procedure: 7
    Procedure: 8
    Procedure: 9
    Procedure: 10
    Procedure: 11
    Procedure: 12
    Procedure: 13
    Procedure: 14
    Procedure: 15
    Procedure: 16
    Procedure: 17
    Procedure: 18
    Procedure: 19
    Procedure: 20
    Procedure: 21
    Procedure: 22
    Procedure: 23
    Procedure: 24
    Procedure: 25
    Procedure: 26
    Procedure: 27
    Procedure: 28
    Procedure: 29
    Procedure: 30
    Procedure: 31
    Procedure: 32
    Procedure: 33
    Procedure: 34
    Procedure: 35
    Procedure: 36
    Procedure: 37
    Procedure: 38
    Procedure: 39
    Procedure: 40
    Procedure: 41
    Procedure: 42
    Procedure: 43
    Procedure: 44
    Procedure: 45
    Procedure: 46
    Procedure: 47
    Procedure: 48
    Procedure: 49
    Procedure: 50
    Procedure: 51
File Games/Fallout1.Steam/scripts/JON.int loaded successfuly

Decompiling...
  Init definitions
  Processing code
    Intial reducing
    Building execution tree
        Procedure: 0
        Procedure: 1
        Procedure: 2
        Procedure: 3
        Procedure: 4
        Procedure: 5
        Procedure: 6
        Procedure: 7
        Procedure: 8
        Procedure: 9
        Procedure: 10
        Procedure: 11
        Procedure: 12
        Procedure: 13
        Procedure: 14
        Procedure: 15
        Procedure: 16
        Procedure: 17
        Procedure: 18
        Procedure: 19
        Procedure: 20
        Procedure: 21
        Procedure: 22
        Procedure: 23
        Procedure: 24
        Procedure: 25
        Procedure: 26
        Procedure: 27
        Procedure: 28
        Procedure: 29
        Procedure: 30
        Procedure: 31
        Procedure: 32
        Procedure: 33
        Procedure: 34
        Procedure: 35
        Procedure: 36
        Procedure: 37
        Procedure: 38
        Procedure: 39
        Procedure: 40
        Procedure: 41
        Procedure: 42
        Procedure: 43
        Procedure: 44
        Procedure: 45
        Procedure: 46
        Procedure: 47
        Procedure: 48
        Procedure: 49
        Procedure: 50
        Procedure: 51
    Extracting and reducing conditions
    Setting borders of blocks
        Procedure: 0
        Procedure: 1
Error: Conditional expression left in stack.

============== Procedures table ==================

======== Procedure 0 ========
Name offset:       0x00000006
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000007B2
Number of args:    0x00000000  // 0

======== Procedure 1 ========
Name offset:       0x00000018
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000007B2
Number of args:    0x00000000  // 0

======== Procedure 2 ========
Name offset:       0x00000020
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000008BA
Number of args:    0x00000000  // 0

======== Procedure 3 ========
Name offset:       0x00000032
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000916
Number of args:    0x00000000  // 0

======== Procedure 4 ========
Name offset:       0x00000048
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000972
Number of args:    0x00000000  // 0

======== Procedure 5 ========
Name offset:       0x00000056
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000C20
Number of args:    0x00000000  // 0

======== Procedure 6 ========
Name offset:       0x00000066
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000C84
Number of args:    0x00000000  // 0

======== Procedure 7 ========
Name offset:       0x00000078
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000E1E
Number of args:    0x00000000  // 0

======== Procedure 8 ========
Name offset:       0x0000008A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000F76
Number of args:    0x00000000  // 0

======== Procedure 9 ========
Name offset:       0x0000009A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000F9E
Number of args:    0x00000000  // 0

======== Procedure 10 ========
Name offset:       0x000000A2
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001024
Number of args:    0x00000000  // 0

======== Procedure 11 ========
Name offset:       0x000000AA
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001102
Number of args:    0x00000000  // 0

======== Procedure 12 ========
Name offset:       0x000000B2
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001178
Number of args:    0x00000000  // 0

======== Procedure 13 ========
Name offset:       0x000000BA
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000011EE
Number of args:    0x00000000  // 0

======== Procedure 14 ========
Name offset:       0x000000C4
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001216
Number of args:    0x00000000  // 0

======== Procedure 15 ========
Name offset:       0x000000CC
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000128C
Number of args:    0x00000000  // 0

======== Procedure 16 ========
Name offset:       0x000000D4
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000012E8
Number of args:    0x00000000  // 0

======== Procedure 17 ========
Name offset:       0x000000DC
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001344
Number of args:    0x00000000  // 0

======== Procedure 18 ========
Name offset:       0x000000E4
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000013BA
Number of args:    0x00000000  // 0

======== Procedure 19 ========
Name offset:       0x000000EC
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001430
Number of args:    0x00000000  // 0

======== Procedure 20 ========
Name offset:       0x000000F6
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001470
Number of args:    0x00000000  // 0

======== Procedure 21 ========
Name offset:       0x000000FE
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000014DA
Number of args:    0x00000000  // 0

======== Procedure 22 ========
Name offset:       0x00000106
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001516
Number of args:    0x00000000  // 0

======== Procedure 23 ========
Name offset:       0x0000010E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001572
Number of args:    0x00000000  // 0

======== Procedure 24 ========
Name offset:       0x00000116
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000015E8
Number of args:    0x00000000  // 0

======== Procedure 25 ========
Name offset:       0x0000011E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001616
Number of args:    0x00000000  // 0

======== Procedure 26 ========
Name offset:       0x00000126
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001672
Number of args:    0x00000000  // 0

======== Procedure 27 ========
Name offset:       0x0000012E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001702
Number of args:    0x00000000  // 0

======== Procedure 28 ========
Name offset:       0x00000136
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001778
Number of args:    0x00000000  // 0

======== Procedure 29 ========
Name offset:       0x0000013E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000017EE
Number of args:    0x00000000  // 0

======== Procedure 30 ========
Name offset:       0x00000146
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000182A
Number of args:    0x00000000  // 0

======== Procedure 31 ========
Name offset:       0x0000014E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000018A0
Number of args:    0x00000000  // 0

======== Procedure 32 ========
Name offset:       0x00000156
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000018CE
Number of args:    0x00000000  // 0

======== Procedure 33 ========
Name offset:       0x0000015E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001952
Number of args:    0x00000000  // 0

======== Procedure 34 ========
Name offset:       0x00000166
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000019A4
Number of args:    0x00000000  // 0

======== Procedure 35 ========
Name offset:       0x0000016E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000019F6
Number of args:    0x00000000  // 0

======== Procedure 36 ========
Name offset:       0x00000176
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001A52
Number of args:    0x00000000  // 0

======== Procedure 37 ========
Name offset:       0x0000017E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001A94
Number of args:    0x00000000  // 0

======== Procedure 38 ========
Name offset:       0x00000186
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001B4E
Number of args:    0x00000000  // 0

======== Procedure 39 ========
Name offset:       0x0000018E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001BAA
Number of args:    0x00000000  // 0

======== Procedure 40 ========
Name offset:       0x000001C2
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001BC4
Number of args:    0x00000000  // 0

======== Procedure 41 ========
Name offset:       0x000001D2
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001E56
Number of args:    0x00000000  // 0

======== Procedure 42 ========
Name offset:       0x000001E2
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001EDA
Number of args:    0x00000000  // 0

======== Procedure 43 ========
Name offset:       0x000001F2
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001F76
Number of args:    0x00000000  // 0

======== Procedure 44 ========
Name offset:       0x000001FC
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001FC0
Number of args:    0x00000000  // 0

======== Procedure 45 ========
Name offset:       0x00000208
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000200A
Number of args:    0x00000000  // 0

======== Procedure 46 ========
Name offset:       0x00000216
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002040
Number of args:    0x00000000  // 0

======== Procedure 47 ========
Name offset:       0x00000222
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002076
Number of args:    0x00000000  // 0

======== Procedure 48 ========
Name offset:       0x00000230
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000020C0
Number of args:    0x00000000  // 0

======== Procedure 49 ========
Name offset:       0x00000240
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000210A
Number of args:    0x00000000  // 0

======== Procedure 50 ========
Name offset:       0x00000250
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000217A
Number of args:    0x00000000  // 0

======== Procedure 51 ========
Name offset:       0x00000262
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000021EA
Number of args:    0x00000000  // 0



============== Namespace ==================
0x00000006: ".............."
0x00000018: "Start"
0x00000020: "look_at_p_proc"
0x00000032: "description_p_proc"
0x00000048: "talk_p_proc"
0x00000056: "damage_p_proc"
0x00000066: "destroy_p_proc"
0x00000078: "critter_p_proc"
0x0000008A: "pickup_p_proc"
0x0000009A: "Zim00"
0x000000A2: "Zim01"
0x000000AA: "Zim02"
0x000000B2: "Zim03"
0x000000BA: "Zim03a"
0x000000C4: "Zim04"
0x000000CC: "Zim05"
0x000000D4: "Zim06"
0x000000DC: "Zim07"
0x000000E4: "Zim08"
0x000000EC: "Zim08a"
0x000000F6: "Zim09"
0x000000FE: "Zim10"
0x00000106: "Zim11"
0x0000010E: "Zim12"
0x00000116: "Zim13"
0x0000011E: "Zim14"
0x00000126: "Zim15"
0x0000012E: "Zim16"
0x00000136: "Zim17"
0x0000013E: "Zim18"
0x00000146: "Zim19"
0x0000014E: "Zim20"
0x00000156: "Zim21"
0x0000015E: "Zim22"
0x00000166: "Zim23"
0x0000016E: "Zim24"
0x00000176: "Zim25"
0x0000017E: "Zim26"
0x00000186: "Zim27"
0x0000018E: "ZimEnd"
0x00000198: "JonPtr"
0x000001A2: "Initialize"
0x000001B0: "DisplayMessage"
0x000001C2: "get_reaction"
0x000001D2: "ReactToLevel"
0x000001E2: "LevelToReact"
0x000001F2: "UpReact"
0x000001FC: "DownReact"
0x00000208: "BottomReact"
0x00000216: "TopReact"
0x00000222: "BigUpReact"
0x00000230: "BigDownReact"
0x00000240: "UpReactLevel"
0x00000250: "DownReactLevel"
0x00000262: "Goodbyes"
0x0000026E: "exit_line"
==================
56 item(s)



============== Stringspace ==================
Empty


============== Global variables values ==================
0: O_INTOP(0x00000001)   // 1 (1)
1: O_INTOP(0x00000000)   // 0 (0)
2: O_INTOP(0x00000000)   // 0 (0)


============== Exported variables ==================
Not found


============== Procedures ==================

0: .............. (0x000007b2)
===============================

1: Start (0x000007b2)
===============================
0x000007B2: 0x802B            - O_PUSH_BASE
0x000007B4: 0xC001 0x000008a2 - O_INTOP(0x000008a2)   // 2210 (2210)
0x000007BA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000007C0: 0x8012            - O_FETCH_GLOBAL
0x000007C2: 0x802F            - O_IF
0x000007C4: 0xC001 0x000007f2 - O_INTOP(0x000007f2)   // 2034 (2034)
0x000007CA: 0x80BC            - O_SELF_OBJ
0x000007CC: 0xC001 0x00000029 - O_INTOP(0x00000029)   // 41 (41)
0x000007D2: 0x80BA            - O_OBJ_IS_CARRYING_OBJ_PID
0x000007D4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000007DA: 0x8033            - O_EQUAL
0x000007DC: 0x802F            - O_IF
0x000007DE: 0x80BC            - O_SELF_OBJ
0x000007E0: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000007E6: 0xC001 0x00000096 - O_INTOP(0x00000096)   // 150 (150)
0x000007EC: 0x80B4            - O_RANDOM
0x000007EE: 0x8139            - O_ITEM_CAPS_ADJUST
0x000007F0: 0x801A            - O_POP
0x000007F2: 0xC001 0x0000085e - O_INTOP(0x0000085e)   // 2142 (2142)
0x000007F8: 0xC001 0x00000265 - O_INTOP(0x00000265)   // 613 (613)
0x000007FE: 0x80C5            - O_GLOBAL_VAR
0x00000800: 0xC001 0x0000238f - O_INTOP(0x0000238f)   // 9103 (9103)
0x00000806: 0x8033            - O_EQUAL
0x00000808: 0x802F            - O_IF
0x0000080A: 0xC001 0x00000840 - O_INTOP(0x00000840)   // 2112 (2112)
0x00000810: 0xC001 0x00000264 - O_INTOP(0x00000264)   // 612 (612)
0x00000816: 0x80C5            - O_GLOBAL_VAR
0x00000818: 0xC001 0x0000232b - O_INTOP(0x0000232b)   // 9003 (9003)
0x0000081E: 0x8034            - O_NOT_EQUAL
0x00000820: 0x802F            - O_IF
0x00000822: 0x80BC            - O_SELF_OBJ
0x00000824: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000082A: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000830: 0xC001 0x00000059 - O_INTOP(0x00000059)   // 89 (89)
0x00000836: 0x8102            - O_CRITTER_ADD_TRAIT
0x00000838: 0xC001 0x00000856 - O_INTOP(0x00000856)   // 2134 (2134)
0x0000083E: 0x8004            - O_JMP
0x00000840: 0x80BC            - O_SELF_OBJ
0x00000842: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000848: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x0000084E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000854: 0x8102            - O_CRITTER_ADD_TRAIT
0x00000856: 0xC001 0x00000874 - O_INTOP(0x00000874)   // 2164 (2164)
0x0000085C: 0x8004            - O_JMP
0x0000085E: 0x80BC            - O_SELF_OBJ
0x00000860: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000866: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x0000086C: 0xC001 0x00000031 - O_INTOP(0x00000031)   // 49 (49)
0x00000872: 0x8102            - O_CRITTER_ADD_TRAIT
0x00000874: 0x80BC            - O_SELF_OBJ
0x00000876: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000087C: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000882: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000888: 0x8102            - O_CRITTER_ADD_TRAIT
0x0000088A: 0x80BC            - O_SELF_OBJ
0x0000088C: 0x9001 0x00000198 - O_STRINGOP(0x00000198)   // 408 (408)
0x00000892: 0x8015            - O_STORE_EXTERNAL
0x00000894: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000089A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000008A0: 0x8013            - O_STORE_GLOBAL
0x000008A2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000008A8: 0x800D            - O_D_TO_A
0x000008AA: 0x8019            - O_SWAPA
0x000008AC: 0x802A            - O_POP_TO_BASE
0x000008AE: 0x8029            - O_POP_BASE
0x000008B0: 0x800C            - O_A_TO_D
0x000008B2: 0x801C            - O_POP_RETURN
0x000008B4: 0x802A            - O_POP_TO_BASE
0x000008B6: 0x8029            - O_POP_BASE
0x000008B8: 0x801C            - O_POP_RETURN

2: look_at_p_proc (0x000008ba)
===============================
0x000008BA: 0x802B            - O_PUSH_BASE
0x000008BC: 0x80B9            - O_SCRIPT_OVERRIDES
0x000008BE: 0xC001 0x000008ee - O_INTOP(0x000008ee)   // 2286 (2286)
0x000008C4: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000008CA: 0x80C1            - O_LOCAL_VAR
0x000008CC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000008D2: 0x8033            - O_EQUAL
0x000008D4: 0x802F            - O_IF
0x000008D6: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x000008DC: 0xC001 0x000000b0 - O_INTOP(0x000000b0)   // 176 (176)
0x000008E2: 0x8105            - O_MESSAGE_STR
0x000008E4: 0x80B8            - O_DISPLAY_MSG
0x000008E6: 0xC001 0x000008fe - O_INTOP(0x000008fe)   // 2302 (2302)
0x000008EC: 0x8004            - O_JMP
0x000008EE: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x000008F4: 0xC001 0x000000af - O_INTOP(0x000000af)   // 175 (175)
0x000008FA: 0x8105            - O_MESSAGE_STR
0x000008FC: 0x80B8            - O_DISPLAY_MSG
0x000008FE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000904: 0x800D            - O_D_TO_A
0x00000906: 0x8019            - O_SWAPA
0x00000908: 0x802A            - O_POP_TO_BASE
0x0000090A: 0x8029            - O_POP_BASE
0x0000090C: 0x800C            - O_A_TO_D
0x0000090E: 0x801C            - O_POP_RETURN
0x00000910: 0x802A            - O_POP_TO_BASE
0x00000912: 0x8029            - O_POP_BASE
0x00000914: 0x801C            - O_POP_RETURN

3: description_p_proc (0x00000916)
===============================
0x00000916: 0x802B            - O_PUSH_BASE
0x00000918: 0x80B9            - O_SCRIPT_OVERRIDES
0x0000091A: 0xC001 0x0000094a - O_INTOP(0x0000094a)   // 2378 (2378)
0x00000920: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000926: 0x80C1            - O_LOCAL_VAR
0x00000928: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000092E: 0x8033            - O_EQUAL
0x00000930: 0x802F            - O_IF
0x00000932: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00000938: 0xC001 0x000000b0 - O_INTOP(0x000000b0)   // 176 (176)
0x0000093E: 0x8105            - O_MESSAGE_STR
0x00000940: 0x80B8            - O_DISPLAY_MSG
0x00000942: 0xC001 0x0000095a - O_INTOP(0x0000095a)   // 2394 (2394)
0x00000948: 0x8004            - O_JMP
0x0000094A: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00000950: 0xC001 0x000000af - O_INTOP(0x000000af)   // 175 (175)
0x00000956: 0x8105            - O_MESSAGE_STR
0x00000958: 0x80B8            - O_DISPLAY_MSG
0x0000095A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000960: 0x800D            - O_D_TO_A
0x00000962: 0x8019            - O_SWAPA
0x00000964: 0x802A            - O_POP_TO_BASE
0x00000966: 0x8029            - O_POP_BASE
0x00000968: 0x800C            - O_A_TO_D
0x0000096A: 0x801C            - O_POP_RETURN
0x0000096C: 0x802A            - O_POP_TO_BASE
0x0000096E: 0x8029            - O_POP_BASE
0x00000970: 0x801C            - O_POP_RETURN

4: talk_p_proc (0x00000972)
===============================
0x00000972: 0x802B            - O_PUSH_BASE
0x00000974: 0xC001 0x000009b4 - O_INTOP(0x000009b4)   // 2484 (2484)
0x0000097A: 0xC001 0x000000fb - O_INTOP(0x000000fb)   // 251 (251)
0x00000980: 0x80C5            - O_GLOBAL_VAR
0x00000982: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000988: 0x8033            - O_EQUAL
0x0000098A: 0x802F            - O_IF
0x0000098C: 0x80BC            - O_SELF_OBJ
0x0000098E: 0xC001 0x0000029d - O_INTOP(0x0000029d)   // 669 (669)
0x00000994: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x0000099A: 0xC001 0x00000069 - O_INTOP(0x00000069)   // 105 (105)
0x000009A0: 0x80B4            - O_RANDOM
0x000009A2: 0x8105            - O_MESSAGE_STR
0x000009A4: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000009AA: 0x810A            - O_FLOAT_MSG
0x000009AC: 0xC001 0x00000c08 - O_INTOP(0x00000c08)   // 3080 (3080)
0x000009B2: 0x8004            - O_JMP
0x000009B4: 0xC001 0x00000a00 - O_INTOP(0x00000a00)   // 2560 (2560)
0x000009BA: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000009C0: 0x80C1            - O_LOCAL_VAR
0x000009C2: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000009C8: 0x8033            - O_EQUAL
0x000009CA: 0x80BF            - O_DUDE_OBJ
0x000009CC: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000009D2: 0x80CA            - O_GET_CRITTER_STAT
0x000009D4: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000009DA: 0x8037            - O_LESS
0x000009DC: 0x803E            - O_AND
0x000009DE: 0x802F            - O_IF
0x000009E0: 0x80BC            - O_SELF_OBJ
0x000009E2: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x000009E8: 0xC001 0x0000008b - O_INTOP(0x0000008b)   // 139 (139)
0x000009EE: 0x8105            - O_MESSAGE_STR
0x000009F0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000009F6: 0x810A            - O_FLOAT_MSG
0x000009F8: 0xC001 0x00000c08 - O_INTOP(0x00000c08)   // 3080 (3080)
0x000009FE: 0x8004            - O_JMP
0x00000A00: 0xC001 0x00000a40 - O_INTOP(0x00000a40)   // 2624 (2624)
0x00000A06: 0xC001 0x00000264 - O_INTOP(0x00000264)   // 612 (612)
0x00000A0C: 0x80C5            - O_GLOBAL_VAR
0x00000A0E: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000A14: 0x8033            - O_EQUAL
0x00000A16: 0x802F            - O_IF
0x00000A18: 0x80BC            - O_SELF_OBJ
0x00000A1A: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00000A20: 0xC001 0x000000b7 - O_INTOP(0x000000b7)   // 183 (183)
0x00000A26: 0xC001 0x000000bb - O_INTOP(0x000000bb)   // 187 (187)
0x00000A2C: 0x80B4            - O_RANDOM
0x00000A2E: 0x8105            - O_MESSAGE_STR
0x00000A30: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A36: 0x810A            - O_FLOAT_MSG
0x00000A38: 0xC001 0x00000c08 - O_INTOP(0x00000c08)   // 3080 (3080)
0x00000A3E: 0x8004            - O_JMP
0x00000A40: 0xC001 0x00000a56 - O_INTOP(0x00000a56)   // 2646 (2646)
0x00000A46: 0x800D            - O_D_TO_A
0x00000A48: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A4E: 0xC001 0x00000028 - O_INTOP(0x00000028)   // 40 (40)
0x00000A54: 0x8005            - O_CALL
0x00000A56: 0x801A            - O_POP
0x00000A58: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00000A5E: 0x80BC            - O_SELF_OBJ
0x00000A60: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000A66: 0x8046            - O_NEGATE
0x00000A68: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000A6E: 0x8046            - O_NEGATE
0x00000A70: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000A76: 0x8046            - O_NEGATE
0x00000A78: 0x80DE            - O_START_GDIALOG
0x00000A7A: 0x811C            - O_GSAY_START
0x00000A7C: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x00000A82: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000A88: 0x8013            - O_STORE_GLOBAL
0x00000A8A: 0xC001 0x00000ac2 - O_INTOP(0x00000ac2)   // 2754 (2754)
0x00000A90: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000A96: 0x80C1            - O_LOCAL_VAR
0x00000A98: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A9E: 0x8033            - O_EQUAL
0x00000AA0: 0x802F            - O_IF
0x00000AA2: 0xC001 0x00000ab8 - O_INTOP(0x00000ab8)   // 2744 (2744)
0x00000AA8: 0x800D            - O_D_TO_A
0x00000AAA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000AB0: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x00000AB6: 0x8005            - O_CALL
0x00000AB8: 0x801A            - O_POP
0x00000ABA: 0xC001 0x00000c04 - O_INTOP(0x00000c04)   // 3076 (3076)
0x00000AC0: 0x8004            - O_JMP
0x00000AC2: 0xC001 0x00000afa - O_INTOP(0x00000afa)   // 2810 (2810)
0x00000AC8: 0xC001 0x00000264 - O_INTOP(0x00000264)   // 612 (612)
0x00000ACE: 0x80C5            - O_GLOBAL_VAR
0x00000AD0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000AD6: 0x8033            - O_EQUAL
0x00000AD8: 0x802F            - O_IF
0x00000ADA: 0xC001 0x00000af0 - O_INTOP(0x00000af0)   // 2800 (2800)
0x00000AE0: 0x800D            - O_D_TO_A
0x00000AE2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000AE8: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00000AEE: 0x8005            - O_CALL
0x00000AF0: 0x801A            - O_POP
0x00000AF2: 0xC001 0x00000c04 - O_INTOP(0x00000c04)   // 3076 (3076)
0x00000AF8: 0x8004            - O_JMP
0x00000AFA: 0xC001 0x00000b64 - O_INTOP(0x00000b64)   // 2916 (2916)
0x00000B00: 0x80BF            - O_DUDE_OBJ
0x00000B02: 0xC001 0x000000ee - O_INTOP(0x000000ee)   // 238 (238)
0x00000B08: 0x80BA            - O_OBJ_IS_CARRYING_OBJ_PID
0x00000B0A: 0x802F            - O_IF
0x00000B0C: 0xC001 0x00000b44 - O_INTOP(0x00000b44)   // 2884 (2884)
0x00000B12: 0xC001 0x00000264 - O_INTOP(0x00000264)   // 612 (612)
0x00000B18: 0x80C5            - O_GLOBAL_VAR
0x00000B1A: 0xC001 0x00002329 - O_INTOP(0x00002329)   // 9001 (9001)
0x00000B20: 0x8033            - O_EQUAL
0x00000B22: 0x802F            - O_IF
0x00000B24: 0xC001 0x00000b3a - O_INTOP(0x00000b3a)   // 2874 (2874)
0x00000B2A: 0x800D            - O_D_TO_A
0x00000B2C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000B32: 0xC001 0x00000023 - O_INTOP(0x00000023)   // 35 (35)
0x00000B38: 0x8005            - O_CALL
0x00000B3A: 0x801A            - O_POP
0x00000B3C: 0xC001 0x00000b5c - O_INTOP(0x00000b5c)   // 2908 (2908)
0x00000B42: 0x8004            - O_JMP
0x00000B44: 0xC001 0x00000b5a - O_INTOP(0x00000b5a)   // 2906 (2906)
0x00000B4A: 0x800D            - O_D_TO_A
0x00000B4C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000B52: 0xC001 0x00000026 - O_INTOP(0x00000026)   // 38 (38)
0x00000B58: 0x8005            - O_CALL
0x00000B5A: 0x801A            - O_POP
0x00000B5C: 0xC001 0x00000c04 - O_INTOP(0x00000c04)   // 3076 (3076)
0x00000B62: 0x8004            - O_JMP
0x00000B64: 0xC001 0x00000b9c - O_INTOP(0x00000b9c)   // 2972 (2972)
0x00000B6A: 0xC001 0x00000264 - O_INTOP(0x00000264)   // 612 (612)
0x00000B70: 0x80C5            - O_GLOBAL_VAR
0x00000B72: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000B78: 0x8033            - O_EQUAL
0x00000B7A: 0x802F            - O_IF
0x00000B7C: 0xC001 0x00000b92 - O_INTOP(0x00000b92)   // 2962 (2962)
0x00000B82: 0x800D            - O_D_TO_A
0x00000B84: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000B8A: 0xC001 0x0000001c - O_INTOP(0x0000001c)   // 28 (28)
0x00000B90: 0x8005            - O_CALL
0x00000B92: 0x801A            - O_POP
0x00000B94: 0xC001 0x00000c04 - O_INTOP(0x00000c04)   // 3076 (3076)
0x00000B9A: 0x8004            - O_JMP
0x00000B9C: 0xC001 0x00000bd4 - O_INTOP(0x00000bd4)   // 3028 (3028)
0x00000BA2: 0xC001 0x00000264 - O_INTOP(0x00000264)   // 612 (612)
0x00000BA8: 0x80C5            - O_GLOBAL_VAR
0x00000BAA: 0xC001 0x00002329 - O_INTOP(0x00002329)   // 9001 (9001)
0x00000BB0: 0x8033            - O_EQUAL
0x00000BB2: 0x802F            - O_IF
0x00000BB4: 0xC001 0x00000bca - O_INTOP(0x00000bca)   // 3018 (3018)
0x00000BBA: 0x800D            - O_D_TO_A
0x00000BBC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000BC2: 0xC001 0x0000001e - O_INTOP(0x0000001e)   // 30 (30)
0x00000BC8: 0x8005            - O_CALL
0x00000BCA: 0x801A            - O_POP
0x00000BCC: 0xC001 0x00000c04 - O_INTOP(0x00000c04)   // 3076 (3076)
0x00000BD2: 0x8004            - O_JMP
0x00000BD4: 0xC001 0x00000c04 - O_INTOP(0x00000c04)   // 3076 (3076)
0x00000BDA: 0xC001 0x00000264 - O_INTOP(0x00000264)   // 612 (612)
0x00000BE0: 0x80C5            - O_GLOBAL_VAR
0x00000BE2: 0xC001 0x0000232a - O_INTOP(0x0000232a)   // 9002 (9002)
0x00000BE8: 0x8033            - O_EQUAL
0x00000BEA: 0x802F            - O_IF
0x00000BEC: 0xC001 0x00000c02 - O_INTOP(0x00000c02)   // 3074 (3074)
0x00000BF2: 0x800D            - O_D_TO_A
0x00000BF4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000BFA: 0xC001 0x00000020 - O_INTOP(0x00000020)   // 32 (32)
0x00000C00: 0x8005            - O_CALL
0x00000C02: 0x801A            - O_POP
0x00000C04: 0x811D            - O_GSAY_END
0x00000C06: 0x80DF            - O_END_DIALOGUE
0x00000C08: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000C0E: 0x800D            - O_D_TO_A
0x00000C10: 0x8019            - O_SWAPA
0x00000C12: 0x802A            - O_POP_TO_BASE
0x00000C14: 0x8029            - O_POP_BASE
0x00000C16: 0x800C            - O_A_TO_D
0x00000C18: 0x801C            - O_POP_RETURN
0x00000C1A: 0x802A            - O_POP_TO_BASE
0x00000C1C: 0x8029            - O_POP_BASE
0x00000C1E: 0x801C            - O_POP_RETURN

5: damage_p_proc (0x00000c20)
===============================
0x00000C20: 0x802B            - O_PUSH_BASE
0x00000C22: 0xC001 0x00000c6c - O_INTOP(0x00000c6c)   // 3180 (3180)
0x00000C28: 0x80BD            - O_SOURCE_OBJ
0x00000C2A: 0x80BF            - O_DUDE_OBJ
0x00000C2C: 0x8033            - O_EQUAL
0x00000C2E: 0x802F            - O_IF
0x00000C30: 0xC001 0x00000c6c - O_INTOP(0x00000c6c)   // 3180 (3180)
0x00000C36: 0xC001 0x00000268 - O_INTOP(0x00000268)   // 616 (616)
0x00000C3C: 0x80C5            - O_GLOBAL_VAR
0x00000C3E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000C44: 0x8034            - O_NOT_EQUAL
0x00000C46: 0x802F            - O_IF
0x00000C48: 0xC001 0x000000fb - O_INTOP(0x000000fb)   // 251 (251)
0x00000C4E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000C54: 0x80C6            - O_SET_GLOBAL_VAR
0x00000C56: 0x80BC            - O_SELF_OBJ
0x00000C58: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000C5E: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000C64: 0xC001 0x00000031 - O_INTOP(0x00000031)   // 49 (49)
0x00000C6A: 0x8102            - O_CRITTER_ADD_TRAIT
0x00000C6C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000C72: 0x800D            - O_D_TO_A
0x00000C74: 0x8019            - O_SWAPA
0x00000C76: 0x802A            - O_POP_TO_BASE
0x00000C78: 0x8029            - O_POP_BASE
0x00000C7A: 0x800C            - O_A_TO_D
0x00000C7C: 0x801C            - O_POP_RETURN
0x00000C7E: 0x802A            - O_POP_TO_BASE
0x00000C80: 0x8029            - O_POP_BASE
0x00000C82: 0x801C            - O_POP_RETURN

6: destroy_p_proc (0x00000c84)
===============================
0x00000C84: 0x802B            - O_PUSH_BASE
0x00000C86: 0xC001 0x00000e06 - O_INTOP(0x00000e06)   // 3590 (3590)
0x00000C8C: 0x80BD            - O_SOURCE_OBJ
0x00000C8E: 0x80BF            - O_DUDE_OBJ
0x00000C90: 0x8033            - O_EQUAL
0x00000C92: 0x802F            - O_IF
0x00000C94: 0xC001 0x00000cd0 - O_INTOP(0x00000cd0)   // 3280 (3280)
0x00000C9A: 0xC001 0x00000268 - O_INTOP(0x00000268)   // 616 (616)
0x00000CA0: 0x80C5            - O_GLOBAL_VAR
0x00000CA2: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000CA8: 0x8034            - O_NOT_EQUAL
0x00000CAA: 0x802F            - O_IF
0x00000CAC: 0xC001 0x000000fb - O_INTOP(0x000000fb)   // 251 (251)
0x00000CB2: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000CB8: 0x80C6            - O_SET_GLOBAL_VAR
0x00000CBA: 0x80BC            - O_SELF_OBJ
0x00000CBC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000CC2: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000CC8: 0xC001 0x00000031 - O_INTOP(0x00000031)   // 49 (49)
0x00000CCE: 0x8102            - O_CRITTER_ADD_TRAIT
0x00000CD0: 0xC001 0x00000e06 - O_INTOP(0x00000e06)   // 3590 (3590)
0x00000CD6: 0x80BD            - O_SOURCE_OBJ
0x00000CD8: 0x80BF            - O_DUDE_OBJ
0x00000CDA: 0x8033            - O_EQUAL
0x00000CDC: 0x802F            - O_IF
0x00000CDE: 0xC001 0x00000d4a - O_INTOP(0x00000d4a)   // 3402 (3402)
0x00000CE4: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00000CEA: 0x80C5            - O_GLOBAL_VAR
0x00000CEC: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000CF2: 0x80C5            - O_GLOBAL_VAR
0x00000CF4: 0x8039            - O_ADD
0x00000CF6: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00000CFC: 0x8036            - O_GREATER_EQUAL
0x00000CFE: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000D04: 0x80C5            - O_GLOBAL_VAR
0x00000D06: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000D0C: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00000D12: 0x80C5            - O_GLOBAL_VAR
0x00000D14: 0x803B            - O_MUL
0x00000D16: 0x8038            - O_GREATER
0x00000D18: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x00000D1E: 0x80C5            - O_GLOBAL_VAR
0x00000D20: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000D26: 0x8033            - O_EQUAL
0x00000D28: 0x803F            - O_OR
0x00000D2A: 0x803E            - O_AND
0x00000D2C: 0x802F            - O_IF
0x00000D2E: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x00000D34: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000D3A: 0x80C6            - O_SET_GLOBAL_VAR
0x00000D3C: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x00000D42: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D48: 0x80C6            - O_SET_GLOBAL_VAR
0x00000D4A: 0xC001 0x00000db6 - O_INTOP(0x00000db6)   // 3510 (3510)
0x00000D50: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00000D56: 0x80C5            - O_GLOBAL_VAR
0x00000D58: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000D5E: 0x80C5            - O_GLOBAL_VAR
0x00000D60: 0x8039            - O_ADD
0x00000D62: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00000D68: 0x8036            - O_GREATER_EQUAL
0x00000D6A: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00000D70: 0x80C5            - O_GLOBAL_VAR
0x00000D72: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000D78: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000D7E: 0x80C5            - O_GLOBAL_VAR
0x00000D80: 0x803B            - O_MUL
0x00000D82: 0x8038            - O_GREATER
0x00000D84: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x00000D8A: 0x80C5            - O_GLOBAL_VAR
0x00000D8C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000D92: 0x8033            - O_EQUAL
0x00000D94: 0x803F            - O_OR
0x00000D96: 0x803E            - O_AND
0x00000D98: 0x802F            - O_IF
0x00000D9A: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x00000DA0: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000DA6: 0x80C6            - O_SET_GLOBAL_VAR
0x00000DA8: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x00000DAE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000DB4: 0x80C6            - O_SET_GLOBAL_VAR
0x00000DB6: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000DBC: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000DC2: 0x80C5            - O_GLOBAL_VAR
0x00000DC4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000DCA: 0x8039            - O_ADD
0x00000DCC: 0x80C6            - O_SET_GLOBAL_VAR
0x00000DCE: 0xC001 0x00000e06 - O_INTOP(0x00000e06)   // 3590 (3590)
0x00000DD4: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000DDA: 0x80C5            - O_GLOBAL_VAR
0x00000DDC: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000DE2: 0x803D            - O_MOD
0x00000DE4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000DEA: 0x8033            - O_EQUAL
0x00000DEC: 0x802F            - O_IF
0x00000DEE: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00000DF4: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00000DFA: 0x80C5            - O_GLOBAL_VAR
0x00000DFC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000E02: 0x803A            - O_SUB
0x00000E04: 0x80C6            - O_SET_GLOBAL_VAR
0x00000E06: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E0C: 0x800D            - O_D_TO_A
0x00000E0E: 0x8019            - O_SWAPA
0x00000E10: 0x802A            - O_POP_TO_BASE
0x00000E12: 0x8029            - O_POP_BASE
0x00000E14: 0x800C            - O_A_TO_D
0x00000E16: 0x801C            - O_POP_RETURN
0x00000E18: 0x802A            - O_POP_TO_BASE
0x00000E1A: 0x8029            - O_POP_BASE
0x00000E1C: 0x801C            - O_POP_RETURN

7: critter_p_proc (0x00000e1e)
===============================
0x00000E1E: 0x802B            - O_PUSH_BASE
0x00000E20: 0xC001 0x00000f02 - O_INTOP(0x00000f02)   // 3842 (3842)
0x00000E26: 0x80BC            - O_SELF_OBJ
0x00000E28: 0x80BF            - O_DUDE_OBJ
0x00000E2A: 0x80DC            - O_OBJ_CAN_SEE_OBJ
0x00000E2C: 0x802F            - O_IF
0x00000E2E: 0xC001 0x00000ebc - O_INTOP(0x00000ebc)   // 3772 (3772)
0x00000E34: 0xC001 0x00000265 - O_INTOP(0x00000265)   // 613 (613)
0x00000E3A: 0x80C5            - O_GLOBAL_VAR
0x00000E3C: 0xC001 0x0000238f - O_INTOP(0x0000238f)   // 9103 (9103)
0x00000E42: 0x8033            - O_EQUAL
0x00000E44: 0xC001 0x00000264 - O_INTOP(0x00000264)   // 612 (612)
0x00000E4A: 0x80C5            - O_GLOBAL_VAR
0x00000E4C: 0xC001 0x0000232b - O_INTOP(0x0000232b)   // 9003 (9003)
0x00000E52: 0x8034            - O_NOT_EQUAL
0x00000E54: 0x803E            - O_AND
0x00000E56: 0x802F            - O_IF
0x00000E58: 0x80BC            - O_SELF_OBJ
0x00000E5A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000E60: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000E66: 0xC001 0x00000059 - O_INTOP(0x00000059)   // 89 (89)
0x00000E6C: 0x8102            - O_CRITTER_ADD_TRAIT
0x00000E6E: 0x80BC            - O_SELF_OBJ
0x00000E70: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00000E76: 0xC001 0x000000ae - O_INTOP(0x000000ae)   // 174 (174)
0x00000E7C: 0x8105            - O_MESSAGE_STR
0x00000E7E: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000E84: 0x810A            - O_FLOAT_MSG
0x00000E86: 0x80BF            - O_DUDE_OBJ
0x00000E88: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E8E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000E94: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E9A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000EA0: 0xC001 0x00007530 - O_INTOP(0x00007530)   // 30000 (30000)
0x00000EA6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000EAC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000EB2: 0x80D0            - O_ATTACK_COMPLEX
0x00000EB4: 0xC001 0x00000f02 - O_INTOP(0x00000f02)   // 3842 (3842)
0x00000EBA: 0x8004            - O_JMP
0x00000EBC: 0xC001 0x00000f02 - O_INTOP(0x00000f02)   // 3842 (3842)
0x00000EC2: 0xC001 0x000000fb - O_INTOP(0x000000fb)   // 251 (251)
0x00000EC8: 0x80C5            - O_GLOBAL_VAR
0x00000ECA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000ED0: 0x8033            - O_EQUAL
0x00000ED2: 0x802F            - O_IF
0x00000ED4: 0x80BF            - O_DUDE_OBJ
0x00000ED6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000EDC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000EE2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000EE8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000EEE: 0xC001 0x00007530 - O_INTOP(0x00007530)   // 30000 (30000)
0x00000EF4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000EFA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F00: 0x80D0            - O_ATTACK_COMPLEX
0x00000F02: 0xC001 0x00000f5e - O_INTOP(0x00000f5e)   // 3934 (3934)
0x00000F08: 0xC001 0x00000268 - O_INTOP(0x00000268)   // 616 (616)
0x00000F0E: 0x80C5            - O_GLOBAL_VAR
0x00000F10: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000F16: 0x8033            - O_EQUAL
0x00000F18: 0x802F            - O_IF
0x00000F1A: 0x80BC            - O_SELF_OBJ
0x00000F1C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000F22: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000F28: 0xC001 0x00000059 - O_INTOP(0x00000059)   // 89 (89)
0x00000F2E: 0x8102            - O_CRITTER_ADD_TRAIT
0x00000F30: 0x80BF            - O_DUDE_OBJ
0x00000F32: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F38: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000F3E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F44: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F4A: 0xC001 0x00007530 - O_INTOP(0x00007530)   // 30000 (30000)
0x00000F50: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F56: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F5C: 0x80D0            - O_ATTACK_COMPLEX
0x00000F5E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F64: 0x800D            - O_D_TO_A
0x00000F66: 0x8019            - O_SWAPA
0x00000F68: 0x802A            - O_POP_TO_BASE
0x00000F6A: 0x8029            - O_POP_BASE
0x00000F6C: 0x800C            - O_A_TO_D
0x00000F6E: 0x801C            - O_POP_RETURN
0x00000F70: 0x802A            - O_POP_TO_BASE
0x00000F72: 0x8029            - O_POP_BASE
0x00000F74: 0x801C            - O_POP_RETURN

8: pickup_p_proc (0x00000f76)
===============================
0x00000F76: 0x802B            - O_PUSH_BASE
0x00000F78: 0xC001 0x000000fb - O_INTOP(0x000000fb)   // 251 (251)
0x00000F7E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000F84: 0x80C6            - O_SET_GLOBAL_VAR
0x00000F86: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F8C: 0x800D            - O_D_TO_A
0x00000F8E: 0x8019            - O_SWAPA
0x00000F90: 0x802A            - O_POP_TO_BASE
0x00000F92: 0x8029            - O_POP_BASE
0x00000F94: 0x800C            - O_A_TO_D
0x00000F96: 0x801C            - O_POP_RETURN
0x00000F98: 0x802A            - O_POP_TO_BASE
0x00000F9A: 0x8029            - O_POP_BASE
0x00000F9C: 0x801C            - O_POP_RETURN

9: Zim00 (0x00000f9e)
===============================
0x00000F9E: 0x802B            - O_PUSH_BASE
0x00000FA0: 0xC001 0x000000b6 - O_INTOP(0x000000b6)   // 182 (182)
0x00000FA6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000FAC: 0x8013            - O_STORE_GLOBAL
0x00000FAE: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00000FB4: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x00000FBA: 0x811E            - O_GSAY_REPLY
0x00000FBC: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000FC2: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00000FC8: 0xC001 0x000000b5 - O_INTOP(0x000000b5)   // 181 (181)
0x00000FCE: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00000FD4: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000FDA: 0x8121            - O_GIQ_OPTION
0x00000FDC: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000FE2: 0x8046            - O_NEGATE
0x00000FE4: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00000FEA: 0xC001 0x00000068 - O_INTOP(0x00000068)   // 104 (104)
0x00000FF0: 0xC001 0x00000018 - O_INTOP(0x00000018)   // 24 (24)
0x00000FF6: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000FFC: 0x8121            - O_GIQ_OPTION
0x00000FFE: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001004: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000100A: 0x80C2            - O_SET_LOCAL_VAR
0x0000100C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001012: 0x800D            - O_D_TO_A
0x00001014: 0x8019            - O_SWAPA
0x00001016: 0x802A            - O_POP_TO_BASE
0x00001018: 0x8029            - O_POP_BASE
0x0000101A: 0x800C            - O_A_TO_D
0x0000101C: 0x801C            - O_POP_RETURN
0x0000101E: 0x802A            - O_POP_TO_BASE
0x00001020: 0x8029            - O_POP_BASE
0x00001022: 0x801C            - O_POP_RETURN

10: Zim01 (0x00001024)
===============================
0x00001024: 0x802B            - O_PUSH_BASE
0x00001026: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x0000102C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001032: 0x8012            - O_FETCH_GLOBAL
0x00001034: 0x811E            - O_GSAY_REPLY
0x00001036: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000103C: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00001042: 0xC001 0x00000065 - O_INTOP(0x00000065)   // 101 (101)
0x00001048: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x0000104E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001054: 0x8121            - O_GIQ_OPTION
0x00001056: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000105C: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00001062: 0xC001 0x00000066 - O_INTOP(0x00000066)   // 102 (102)
0x00001068: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x0000106E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001074: 0x8121            - O_GIQ_OPTION
0x00001076: 0xC001 0x000010a8 - O_INTOP(0x000010a8)   // 4264 (4264)
0x0000107C: 0x80BF            - O_DUDE_OBJ
0x0000107E: 0xC001 0x000000ee - O_INTOP(0x000000ee)   // 238 (238)
0x00001084: 0x80BA            - O_OBJ_IS_CARRYING_OBJ_PID
0x00001086: 0x802F            - O_IF
0x00001088: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000108E: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00001094: 0xC001 0x000000b2 - O_INTOP(0x000000b2)   // 178 (178)
0x0000109A: 0xC001 0x00000025 - O_INTOP(0x00000025)   // 37 (37)
0x000010A0: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000010A6: 0x8121            - O_GIQ_OPTION
0x000010A8: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000010AE: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x000010B4: 0xC001 0x00000067 - O_INTOP(0x00000067)   // 103 (103)
0x000010BA: 0xC001 0x00000027 - O_INTOP(0x00000027)   // 39 (39)
0x000010C0: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000010C6: 0x8121            - O_GIQ_OPTION
0x000010C8: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000010CE: 0x8046            - O_NEGATE
0x000010D0: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x000010D6: 0xC001 0x00000068 - O_INTOP(0x00000068)   // 104 (104)
0x000010DC: 0xC001 0x00000018 - O_INTOP(0x00000018)   // 24 (24)
0x000010E2: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000010E8: 0x8121            - O_GIQ_OPTION
0x000010EA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000010F0: 0x800D            - O_D_TO_A
0x000010F2: 0x8019            - O_SWAPA
0x000010F4: 0x802A            - O_POP_TO_BASE
0x000010F6: 0x8029            - O_POP_BASE
0x000010F8: 0x800C            - O_A_TO_D
0x000010FA: 0x801C            - O_POP_RETURN
0x000010FC: 0x802A            - O_POP_TO_BASE
0x000010FE: 0x8029            - O_POP_BASE
0x00001100: 0x801C            - O_POP_RETURN

11: Zim02 (0x00001102)
===============================
0x00001102: 0x802B            - O_PUSH_BASE
0x00001104: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x0000110A: 0xC001 0x00000069 - O_INTOP(0x00000069)   // 105 (105)
0x00001110: 0x811E            - O_GSAY_REPLY
0x00001112: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00001118: 0xC001 0x0000006a - O_INTOP(0x0000006a)   // 106 (106)
0x0000111E: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00001124: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000112A: 0x811F            - O_GSAY_OPTION
0x0000112C: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00001132: 0xC001 0x0000006b - O_INTOP(0x0000006b)   // 107 (107)
0x00001138: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x0000113E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001144: 0x811F            - O_GSAY_OPTION
0x00001146: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x0000114C: 0xC001 0x0000006c - O_INTOP(0x0000006c)   // 108 (108)
0x00001152: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x00001158: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000115E: 0x811F            - O_GSAY_OPTION
0x00001160: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001166: 0x800D            - O_D_TO_A
0x00001168: 0x8019            - O_SWAPA
0x0000116A: 0x802A            - O_POP_TO_BASE
0x0000116C: 0x8029            - O_POP_BASE
0x0000116E: 0x800C            - O_A_TO_D
0x00001170: 0x801C            - O_POP_RETURN
0x00001172: 0x802A            - O_POP_TO_BASE
0x00001174: 0x8029            - O_POP_BASE
0x00001176: 0x801C            - O_POP_RETURN

12: Zim03 (0x00001178)
===============================
0x00001178: 0x802B            - O_PUSH_BASE
0x0000117A: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00001180: 0xC001 0x0000006d - O_INTOP(0x0000006d)   // 109 (109)
0x00001186: 0x811E            - O_GSAY_REPLY
0x00001188: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x0000118E: 0xC001 0x0000006e - O_INTOP(0x0000006e)   // 110 (110)
0x00001194: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x0000119A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000011A0: 0x811F            - O_GSAY_OPTION
0x000011A2: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x000011A8: 0xC001 0x0000006f - O_INTOP(0x0000006f)   // 111 (111)
0x000011AE: 0xC001 0x00000018 - O_INTOP(0x00000018)   // 24 (24)
0x000011B4: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000011BA: 0x811F            - O_GSAY_OPTION
0x000011BC: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x000011C2: 0xC001 0x00000070 - O_INTOP(0x00000070)   // 112 (112)
0x000011C8: 0xC001 0x0000000d - O_INTOP(0x0000000d)   // 13 (13)
0x000011CE: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000011D4: 0x811F            - O_GSAY_OPTION
0x000011D6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000011DC: 0x800D            - O_D_TO_A
0x000011DE: 0x8019            - O_SWAPA
0x000011E0: 0x802A            - O_POP_TO_BASE
0x000011E2: 0x8029            - O_POP_BASE
0x000011E4: 0x800C            - O_A_TO_D
0x000011E6: 0x801C            - O_POP_RETURN
0x000011E8: 0x802A            - O_POP_TO_BASE
0x000011EA: 0x8029            - O_POP_BASE
0x000011EC: 0x801C            - O_POP_RETURN

13: Zim03a (0x000011ee)
===============================
0x000011EE: 0x802B            - O_PUSH_BASE
0x000011F0: 0xC001 0x00000264 - O_INTOP(0x00000264)   // 612 (612)
0x000011F6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000011FC: 0x80C6            - O_SET_GLOBAL_VAR
0x000011FE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001204: 0x800D            - O_D_TO_A
0x00001206: 0x8019            - O_SWAPA
0x00001208: 0x802A            - O_POP_TO_BASE
0x0000120A: 0x8029            - O_POP_BASE
0x0000120C: 0x800C            - O_A_TO_D
0x0000120E: 0x801C            - O_POP_RETURN
0x00001210: 0x802A            - O_POP_TO_BASE
0x00001212: 0x8029            - O_POP_BASE
0x00001214: 0x801C            - O_POP_RETURN

14: Zim04 (0x00001216)
===============================
0x00001216: 0x802B            - O_PUSH_BASE
0x00001218: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x0000121E: 0xC001 0x00000071 - O_INTOP(0x00000071)   // 113 (113)
0x00001224: 0x811E            - O_GSAY_REPLY
0x00001226: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x0000122C: 0xC001 0x00000072 - O_INTOP(0x00000072)   // 114 (114)
0x00001232: 0xC001 0x00000011 - O_INTOP(0x00000011)   // 17 (17)
0x00001238: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000123E: 0x811F            - O_GSAY_OPTION
0x00001240: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00001246: 0xC001 0x00000073 - O_INTOP(0x00000073)   // 115 (115)
0x0000124C: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x00001252: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001258: 0x811F            - O_GSAY_OPTION
0x0000125A: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00001260: 0xC001 0x00000074 - O_INTOP(0x00000074)   // 116 (116)
0x00001266: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x0000126C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001272: 0x811F            - O_GSAY_OPTION
0x00001274: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000127A: 0x800D            - O_D_TO_A
0x0000127C: 0x8019            - O_SWAPA
0x0000127E: 0x802A            - O_POP_TO_BASE
0x00001280: 0x8029            - O_POP_BASE
0x00001282: 0x800C            - O_A_TO_D
0x00001284: 0x801C            - O_POP_RETURN
0x00001286: 0x802A            - O_POP_TO_BASE
0x00001288: 0x8029            - O_POP_BASE
0x0000128A: 0x801C            - O_POP_RETURN

15: Zim05 (0x0000128c)
===============================
0x0000128C: 0x802B            - O_PUSH_BASE
0x0000128E: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00001294: 0xC001 0x00000075 - O_INTOP(0x00000075)   // 117 (117)
0x0000129A: 0x811E            - O_GSAY_REPLY
0x0000129C: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x000012A2: 0xC001 0x00000076 - O_INTOP(0x00000076)   // 118 (118)
0x000012A8: 0xC001 0x00000010 - O_INTOP(0x00000010)   // 16 (16)
0x000012AE: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000012B4: 0x811F            - O_GSAY_OPTION
0x000012B6: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x000012BC: 0xC001 0x00000077 - O_INTOP(0x00000077)   // 119 (119)
0x000012C2: 0xC001 0x00000011 - O_INTOP(0x00000011)   // 17 (17)
0x000012C8: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000012CE: 0x811F            - O_GSAY_OPTION
0x000012D0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000012D6: 0x800D            - O_D_TO_A
0x000012D8: 0x8019            - O_SWAPA
0x000012DA: 0x802A            - O_POP_TO_BASE
0x000012DC: 0x8029            - O_POP_BASE
0x000012DE: 0x800C            - O_A_TO_D
0x000012E0: 0x801C            - O_POP_RETURN
0x000012E2: 0x802A            - O_POP_TO_BASE
0x000012E4: 0x8029            - O_POP_BASE
0x000012E6: 0x801C            - O_POP_RETURN

16: Zim06 (0x000012e8)
===============================
0x000012E8: 0x802B            - O_PUSH_BASE
0x000012EA: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x000012F0: 0xC001 0x00000078 - O_INTOP(0x00000078)   // 120 (120)
0x000012F6: 0x811E            - O_GSAY_REPLY
0x000012F8: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x000012FE: 0xC001 0x00000079 - O_INTOP(0x00000079)   // 121 (121)
0x00001304: 0xC001 0x00000011 - O_INTOP(0x00000011)   // 17 (17)
0x0000130A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001310: 0x811F            - O_GSAY_OPTION
0x00001312: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00001318: 0xC001 0x0000007a - O_INTOP(0x0000007a)   // 122 (122)
0x0000131E: 0xC001 0x00000016 - O_INTOP(0x00000016)   // 22 (22)
0x00001324: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000132A: 0x811F            - O_GSAY_OPTION
0x0000132C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001332: 0x800D            - O_D_TO_A
0x00001334: 0x8019            - O_SWAPA
0x00001336: 0x802A            - O_POP_TO_BASE
0x00001338: 0x8029            - O_POP_BASE
0x0000133A: 0x800C            - O_A_TO_D
0x0000133C: 0x801C            - O_POP_RETURN
0x0000133E: 0x802A            - O_POP_TO_BASE
0x00001340: 0x8029            - O_POP_BASE
0x00001342: 0x801C            - O_POP_RETURN

17: Zim07 (0x00001344)
===============================
0x00001344: 0x802B            - O_PUSH_BASE
0x00001346: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x0000134C: 0xC001 0x0000007b - O_INTOP(0x0000007b)   // 123 (123)
0x00001352: 0x811E            - O_GSAY_REPLY
0x00001354: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x0000135A: 0xC001 0x0000007c - O_INTOP(0x0000007c)   // 124 (124)
0x00001360: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x00001366: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000136C: 0x811F            - O_GSAY_OPTION
0x0000136E: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00001374: 0xC001 0x0000007d - O_INTOP(0x0000007d)   // 125 (125)
0x0000137A: 0xC001 0x00000012 - O_INTOP(0x00000012)   // 18 (18)
0x00001380: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001386: 0x811F            - O_GSAY_OPTION
0x00001388: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x0000138E: 0xC001 0x0000007e - O_INTOP(0x0000007e)   // 126 (126)
0x00001394: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x0000139A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000013A0: 0x811F            - O_GSAY_OPTION
0x000013A2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000013A8: 0x800D            - O_D_TO_A
0x000013AA: 0x8019            - O_SWAPA
0x000013AC: 0x802A            - O_POP_TO_BASE
0x000013AE: 0x8029            - O_POP_BASE
0x000013B0: 0x800C            - O_A_TO_D
0x000013B2: 0x801C            - O_POP_RETURN
0x000013B4: 0x802A            - O_POP_TO_BASE
0x000013B6: 0x8029            - O_POP_BASE
0x000013B8: 0x801C            - O_POP_RETURN

18: Zim08 (0x000013ba)
===============================
0x000013BA: 0x802B            - O_PUSH_BASE
0x000013BC: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x000013C2: 0xC001 0x0000007f - O_INTOP(0x0000007f)   // 127 (127)
0x000013C8: 0x811E            - O_GSAY_REPLY
0x000013CA: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x000013D0: 0xC001 0x00000080 - O_INTOP(0x00000080)   // 128 (128)
0x000013D6: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x000013DC: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000013E2: 0x811F            - O_GSAY_OPTION
0x000013E4: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x000013EA: 0xC001 0x00000081 - O_INTOP(0x00000081)   // 129 (129)
0x000013F0: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x000013F6: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000013FC: 0x811F            - O_GSAY_OPTION
0x000013FE: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00001404: 0xC001 0x00000082 - O_INTOP(0x00000082)   // 130 (130)
0x0000140A: 0xC001 0x00000013 - O_INTOP(0x00000013)   // 19 (19)
0x00001410: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001416: 0x811F            - O_GSAY_OPTION
0x00001418: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000141E: 0x800D            - O_D_TO_A
0x00001420: 0x8019            - O_SWAPA
0x00001422: 0x802A            - O_POP_TO_BASE
0x00001424: 0x8029            - O_POP_BASE
0x00001426: 0x800C            - O_A_TO_D
0x00001428: 0x801C            - O_POP_RETURN
0x0000142A: 0x802A            - O_POP_TO_BASE
0x0000142C: 0x8029            - O_POP_BASE
0x0000142E: 0x801C            - O_POP_RETURN

19: Zim08a (0x00001430)
===============================
0x00001430: 0x802B            - O_PUSH_BASE
0x00001432: 0xC001 0x00001448 - O_INTOP(0x00001448)   // 5192 (5192)
0x00001438: 0x800D            - O_D_TO_A
0x0000143A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001440: 0xC001 0x0000002d - O_INTOP(0x0000002d)   // 45 (45)
0x00001446: 0x8005            - O_CALL
0x00001448: 0x801A            - O_POP
0x0000144A: 0xC001 0x00000264 - O_INTOP(0x00000264)   // 612 (612)
0x00001450: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001456: 0x80C6            - O_SET_GLOBAL_VAR
0x00001458: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000145E: 0x800D            - O_D_TO_A
0x00001460: 0x8019            - O_SWAPA
0x00001462: 0x802A            - O_POP_TO_BASE
0x00001464: 0x8029            - O_POP_BASE
0x00001466: 0x800C            - O_A_TO_D
0x00001468: 0x801C            - O_POP_RETURN
0x0000146A: 0x802A            - O_POP_TO_BASE
0x0000146C: 0x8029            - O_POP_BASE
0x0000146E: 0x801C            - O_POP_RETURN

20: Zim09 (0x00001470)
===============================
0x00001470: 0x802B            - O_PUSH_BASE
0x00001472: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00001478: 0xC001 0x00000083 - O_INTOP(0x00000083)   // 131 (131)
0x0000147E: 0x811E            - O_GSAY_REPLY
0x00001480: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00001486: 0xC001 0x00000084 - O_INTOP(0x00000084)   // 132 (132)
0x0000148C: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x00001492: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001498: 0x811F            - O_GSAY_OPTION
0x0000149A: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x000014A0: 0xC001 0x00000085 - O_INTOP(0x00000085)   // 133 (133)
0x000014A6: 0xC001 0x00000013 - O_INTOP(0x00000013)   // 19 (19)
0x000014AC: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000014B2: 0x811F            - O_GSAY_OPTION
0x000014B4: 0xC001 0x00000264 - O_INTOP(0x00000264)   // 612 (612)
0x000014BA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000014C0: 0x80C6            - O_SET_GLOBAL_VAR
0x000014C2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000014C8: 0x800D            - O_D_TO_A
0x000014CA: 0x8019            - O_SWAPA
0x000014CC: 0x802A            - O_POP_TO_BASE
0x000014CE: 0x8029            - O_POP_BASE
0x000014D0: 0x800C            - O_A_TO_D
0x000014D2: 0x801C            - O_POP_RETURN
0x000014D4: 0x802A            - O_POP_TO_BASE
0x000014D6: 0x8029            - O_POP_BASE
0x000014D8: 0x801C            - O_POP_RETURN

21: Zim10 (0x000014da)
===============================
0x000014DA: 0x802B            - O_PUSH_BASE
0x000014DC: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x000014E2: 0xC001 0x00000086 - O_INTOP(0x00000086)   // 134 (134)
0x000014E8: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000014EE: 0x8120            - O_GSAY_MESSAGE
0x000014F0: 0xC001 0x00000264 - O_INTOP(0x00000264)   // 612 (612)
0x000014F6: 0xC001 0x00002329 - O_INTOP(0x00002329)   // 9001 (9001)
0x000014FC: 0x80C6            - O_SET_GLOBAL_VAR
0x000014FE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001504: 0x800D            - O_D_TO_A
0x00001506: 0x8019            - O_SWAPA
0x00001508: 0x802A            - O_POP_TO_BASE
0x0000150A: 0x8029            - O_POP_BASE
0x0000150C: 0x800C            - O_A_TO_D
0x0000150E: 0x801C            - O_POP_RETURN
0x00001510: 0x802A            - O_POP_TO_BASE
0x00001512: 0x8029            - O_POP_BASE
0x00001514: 0x801C            - O_POP_RETURN

22: Zim11 (0x00001516)
===============================
0x00001516: 0x802B            - O_PUSH_BASE
0x00001518: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x0000151E: 0xC001 0x00000087 - O_INTOP(0x00000087)   // 135 (135)
0x00001524: 0x811E            - O_GSAY_REPLY
0x00001526: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x0000152C: 0xC001 0x00000088 - O_INTOP(0x00000088)   // 136 (136)
0x00001532: 0xC001 0x0000001b - O_INTOP(0x0000001b)   // 27 (27)
0x00001538: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000153E: 0x811F            - O_GSAY_OPTION
0x00001540: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00001546: 0xC001 0x00000089 - O_INTOP(0x00000089)   // 137 (137)
0x0000154C: 0xC001 0x00000013 - O_INTOP(0x00000013)   // 19 (19)
0x00001552: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001558: 0x811F            - O_GSAY_OPTION
0x0000155A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001560: 0x800D            - O_D_TO_A
0x00001562: 0x8019            - O_SWAPA
0x00001564: 0x802A            - O_POP_TO_BASE
0x00001566: 0x8029            - O_POP_BASE
0x00001568: 0x800C            - O_A_TO_D
0x0000156A: 0x801C            - O_POP_RETURN
0x0000156C: 0x802A            - O_POP_TO_BASE
0x0000156E: 0x8029            - O_POP_BASE
0x00001570: 0x801C            - O_POP_RETURN

23: Zim12 (0x00001572)
===============================
0x00001572: 0x802B            - O_PUSH_BASE
0x00001574: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x0000157A: 0xC001 0x0000008a - O_INTOP(0x0000008a)   // 138 (138)
0x00001580: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001586: 0x8120            - O_GSAY_MESSAGE
0x00001588: 0xC001 0x0000159e - O_INTOP(0x0000159e)   // 5534 (5534)
0x0000158E: 0x800D            - O_D_TO_A
0x00001590: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001596: 0xC001 0x0000002d - O_INTOP(0x0000002d)   // 45 (45)
0x0000159C: 0x8005            - O_CALL
0x0000159E: 0x801A            - O_POP
0x000015A0: 0xC001 0x00000268 - O_INTOP(0x00000268)   // 616 (616)
0x000015A6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000015AC: 0x80C6            - O_SET_GLOBAL_VAR
0x000015AE: 0xC001 0x00000258 - O_INTOP(0x00000258)   // 600 (600)
0x000015B4: 0x8136            - O_GFADE_OUT
0x000015B6: 0x80BF            - O_DUDE_OBJ
0x000015B8: 0xC001 0x00002389 - O_INTOP(0x00002389)   // 9097 (9097)
0x000015BE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000015C4: 0x80B6            - O_MOVE_TO
0x000015C6: 0x801A            - O_POP
0x000015C8: 0xC001 0x00000258 - O_INTOP(0x00000258)   // 600 (600)
0x000015CE: 0x8137            - O_GFADE_IN
0x000015D0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000015D6: 0x800D            - O_D_TO_A
0x000015D8: 0x8019            - O_SWAPA
0x000015DA: 0x802A            - O_POP_TO_BASE
0x000015DC: 0x8029            - O_POP_BASE
0x000015DE: 0x800C            - O_A_TO_D
0x000015E0: 0x801C            - O_POP_RETURN
0x000015E2: 0x802A            - O_POP_TO_BASE
0x000015E4: 0x8029            - O_POP_BASE
0x000015E6: 0x801C            - O_POP_RETURN

24: Zim13 (0x000015e8)
===============================
0x000015E8: 0x802B            - O_PUSH_BASE
0x000015EA: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x000015F0: 0xC001 0x0000008b - O_INTOP(0x0000008b)   // 139 (139)
0x000015F6: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000015FC: 0x8120            - O_GSAY_MESSAGE
0x000015FE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001604: 0x800D            - O_D_TO_A
0x00001606: 0x8019            - O_SWAPA
0x00001608: 0x802A            - O_POP_TO_BASE
0x0000160A: 0x8029            - O_POP_BASE
0x0000160C: 0x800C            - O_A_TO_D
0x0000160E: 0x801C            - O_POP_RETURN
0x00001610: 0x802A            - O_POP_TO_BASE
0x00001612: 0x8029            - O_POP_BASE
0x00001614: 0x801C            - O_POP_RETURN

25: Zim14 (0x00001616)
===============================
0x00001616: 0x802B            - O_PUSH_BASE
0x00001618: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x0000161E: 0xC001 0x0000008c - O_INTOP(0x0000008c)   // 140 (140)
0x00001624: 0x811E            - O_GSAY_REPLY
0x00001626: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x0000162C: 0xC001 0x0000008d - O_INTOP(0x0000008d)   // 141 (141)
0x00001632: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x00001638: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000163E: 0x811F            - O_GSAY_OPTION
0x00001640: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00001646: 0xC001 0x0000008e - O_INTOP(0x0000008e)   // 142 (142)
0x0000164C: 0xC001 0x00000017 - O_INTOP(0x00000017)   // 23 (23)
0x00001652: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001658: 0x811F            - O_GSAY_OPTION
0x0000165A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001660: 0x800D            - O_D_TO_A
0x00001662: 0x8019            - O_SWAPA
0x00001664: 0x802A            - O_POP_TO_BASE
0x00001666: 0x8029            - O_POP_BASE
0x00001668: 0x800C            - O_A_TO_D
0x0000166A: 0x801C            - O_POP_RETURN
0x0000166C: 0x802A            - O_POP_TO_BASE
0x0000166E: 0x8029            - O_POP_BASE
0x00001670: 0x801C            - O_POP_RETURN

26: Zim15 (0x00001672)
===============================
0x00001672: 0x802B            - O_PUSH_BASE
0x00001674: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x0000167A: 0xC001 0x0000008f - O_INTOP(0x0000008f)   // 143 (143)
0x00001680: 0x811E            - O_GSAY_REPLY
0x00001682: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00001688: 0xC001 0x00000090 - O_INTOP(0x00000090)   // 144 (144)
0x0000168E: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00001694: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000169A: 0x811F            - O_GSAY_OPTION
0x0000169C: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x000016A2: 0xC001 0x00000091 - O_INTOP(0x00000091)   // 145 (145)
0x000016A8: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x000016AE: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000016B4: 0x811F            - O_GSAY_OPTION
0x000016B6: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x000016BC: 0xC001 0x00000092 - O_INTOP(0x00000092)   // 146 (146)
0x000016C2: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x000016C8: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000016CE: 0x811F            - O_GSAY_OPTION
0x000016D0: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x000016D6: 0xC001 0x00000093 - O_INTOP(0x00000093)   // 147 (147)
0x000016DC: 0xC001 0x00000017 - O_INTOP(0x00000017)   // 23 (23)
0x000016E2: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000016E8: 0x811F            - O_GSAY_OPTION
0x000016EA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000016F0: 0x800D            - O_D_TO_A
0x000016F2: 0x8019            - O_SWAPA
0x000016F4: 0x802A            - O_POP_TO_BASE
0x000016F6: 0x8029            - O_POP_BASE
0x000016F8: 0x800C            - O_A_TO_D
0x000016FA: 0x801C            - O_POP_RETURN
0x000016FC: 0x802A            - O_POP_TO_BASE
0x000016FE: 0x8029            - O_POP_BASE
0x00001700: 0x801C            - O_POP_RETURN

27: Zim16 (0x00001702)
===============================
0x00001702: 0x802B            - O_PUSH_BASE
0x00001704: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x0000170A: 0xC001 0x00000094 - O_INTOP(0x00000094)   // 148 (148)
0x00001710: 0x811E            - O_GSAY_REPLY
0x00001712: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00001718: 0xC001 0x00000095 - O_INTOP(0x00000095)   // 149 (149)
0x0000171E: 0xC001 0x00000011 - O_INTOP(0x00000011)   // 17 (17)
0x00001724: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000172A: 0x811F            - O_GSAY_OPTION
0x0000172C: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00001732: 0xC001 0x00000096 - O_INTOP(0x00000096)   // 150 (150)
0x00001738: 0xC001 0x00000011 - O_INTOP(0x00000011)   // 17 (17)
0x0000173E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001744: 0x811F            - O_GSAY_OPTION
0x00001746: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x0000174C: 0xC001 0x00000097 - O_INTOP(0x00000097)   // 151 (151)
0x00001752: 0xC001 0x00000013 - O_INTOP(0x00000013)   // 19 (19)
0x00001758: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000175E: 0x811F            - O_GSAY_OPTION
0x00001760: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001766: 0x800D            - O_D_TO_A
0x00001768: 0x8019            - O_SWAPA
0x0000176A: 0x802A            - O_POP_TO_BASE
0x0000176C: 0x8029            - O_POP_BASE
0x0000176E: 0x800C            - O_A_TO_D
0x00001770: 0x801C            - O_POP_RETURN
0x00001772: 0x802A            - O_POP_TO_BASE
0x00001774: 0x8029            - O_POP_BASE
0x00001776: 0x801C            - O_POP_RETURN

28: Zim17 (0x00001778)
===============================
0x00001778: 0x802B            - O_PUSH_BASE
0x0000177A: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00001780: 0xC001 0x00000098 - O_INTOP(0x00000098)   // 152 (152)
0x00001786: 0x811E            - O_GSAY_REPLY
0x00001788: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x0000178E: 0xC001 0x00000099 - O_INTOP(0x00000099)   // 153 (153)
0x00001794: 0xC001 0x0000001d - O_INTOP(0x0000001d)   // 29 (29)
0x0000179A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000017A0: 0x811F            - O_GSAY_OPTION
0x000017A2: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x000017A8: 0xC001 0x0000009a - O_INTOP(0x0000009a)   // 154 (154)
0x000017AE: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x000017B4: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000017BA: 0x811F            - O_GSAY_OPTION
0x000017BC: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x000017C2: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x000017C8: 0xC001 0x00000027 - O_INTOP(0x00000027)   // 39 (39)
0x000017CE: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000017D4: 0x811F            - O_GSAY_OPTION
0x000017D6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000017DC: 0x800D            - O_D_TO_A
0x000017DE: 0x8019            - O_SWAPA
0x000017E0: 0x802A            - O_POP_TO_BASE
0x000017E2: 0x8029            - O_POP_BASE
0x000017E4: 0x800C            - O_A_TO_D
0x000017E6: 0x801C            - O_POP_RETURN
0x000017E8: 0x802A            - O_POP_TO_BASE
0x000017EA: 0x8029            - O_POP_BASE
0x000017EC: 0x801C            - O_POP_RETURN

29: Zim18 (0x000017ee)
===============================
0x000017EE: 0x802B            - O_PUSH_BASE
0x000017F0: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x000017F6: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x000017FC: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001802: 0x8120            - O_GSAY_MESSAGE
0x00001804: 0xC001 0x00000264 - O_INTOP(0x00000264)   // 612 (612)
0x0000180A: 0xC001 0x00002329 - O_INTOP(0x00002329)   // 9001 (9001)
0x00001810: 0x80C6            - O_SET_GLOBAL_VAR
0x00001812: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001818: 0x800D            - O_D_TO_A
0x0000181A: 0x8019            - O_SWAPA
0x0000181C: 0x802A            - O_POP_TO_BASE
0x0000181E: 0x8029            - O_POP_BASE
0x00001820: 0x800C            - O_A_TO_D
0x00001822: 0x801C            - O_POP_RETURN
0x00001824: 0x802A            - O_POP_TO_BASE
0x00001826: 0x8029            - O_POP_BASE
0x00001828: 0x801C            - O_POP_RETURN

30: Zim19 (0x0000182a)
===============================
0x0000182A: 0x802B            - O_PUSH_BASE
0x0000182C: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00001832: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x00001838: 0x811E            - O_GSAY_REPLY
0x0000183A: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00001840: 0xC001 0x0000009e - O_INTOP(0x0000009e)   // 158 (158)
0x00001846: 0xC001 0x00000017 - O_INTOP(0x00000017)   // 23 (23)
0x0000184C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001852: 0x811F            - O_GSAY_OPTION
0x00001854: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x0000185A: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00001860: 0xC001 0x0000001f - O_INTOP(0x0000001f)   // 31 (31)
0x00001866: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000186C: 0x811F            - O_GSAY_OPTION
0x0000186E: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00001874: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x0000187A: 0xC001 0x00000018 - O_INTOP(0x00000018)   // 24 (24)
0x00001880: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001886: 0x811F            - O_GSAY_OPTION
0x00001888: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000188E: 0x800D            - O_D_TO_A
0x00001890: 0x8019            - O_SWAPA
0x00001892: 0x802A            - O_POP_TO_BASE
0x00001894: 0x8029            - O_POP_BASE
0x00001896: 0x800C            - O_A_TO_D
0x00001898: 0x801C            - O_POP_RETURN
0x0000189A: 0x802A            - O_POP_TO_BASE
0x0000189C: 0x8029            - O_POP_BASE
0x0000189E: 0x801C            - O_POP_RETURN

31: Zim20 (0x000018a0)
===============================
0x000018A0: 0x802B            - O_PUSH_BASE
0x000018A2: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x000018A8: 0xC001 0x000000a1 - O_INTOP(0x000000a1)   // 161 (161)
0x000018AE: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000018B4: 0x8120            - O_GSAY_MESSAGE
0x000018B6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000018BC: 0x800D            - O_D_TO_A
0x000018BE: 0x8019            - O_SWAPA
0x000018C0: 0x802A            - O_POP_TO_BASE
0x000018C2: 0x8029            - O_POP_BASE
0x000018C4: 0x800C            - O_A_TO_D
0x000018C6: 0x801C            - O_POP_RETURN
0x000018C8: 0x802A            - O_POP_TO_BASE
0x000018CA: 0x8029            - O_POP_BASE
0x000018CC: 0x801C            - O_POP_RETURN

32: Zim21 (0x000018ce)
===============================
0x000018CE: 0x802B            - O_PUSH_BASE
0x000018D0: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x000018D6: 0xC001 0x000000a2 - O_INTOP(0x000000a2)   // 162 (162)
0x000018DC: 0x811E            - O_GSAY_REPLY
0x000018DE: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x000018E4: 0xC001 0x000000a3 - O_INTOP(0x000000a3)   // 163 (163)
0x000018EA: 0xC001 0x00000021 - O_INTOP(0x00000021)   // 33 (33)
0x000018F0: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000018F6: 0x811F            - O_GSAY_OPTION
0x000018F8: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x000018FE: 0xC001 0x000000a4 - O_INTOP(0x000000a4)   // 164 (164)
0x00001904: 0xC001 0x00000022 - O_INTOP(0x00000022)   // 34 (34)
0x0000190A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001910: 0x811F            - O_GSAY_OPTION
0x00001912: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00001918: 0xC001 0x000000a5 - O_INTOP(0x000000a5)   // 165 (165)
0x0000191E: 0xC001 0x00000021 - O_INTOP(0x00000021)   // 33 (33)
0x00001924: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000192A: 0x811F            - O_GSAY_OPTION
0x0000192C: 0xC001 0x00000264 - O_INTOP(0x00000264)   // 612 (612)
0x00001932: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001938: 0x80C6            - O_SET_GLOBAL_VAR
0x0000193A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001940: 0x800D            - O_D_TO_A
0x00001942: 0x8019            - O_SWAPA
0x00001944: 0x802A            - O_POP_TO_BASE
0x00001946: 0x8029            - O_POP_BASE
0x00001948: 0x800C            - O_A_TO_D
0x0000194A: 0x801C            - O_POP_RETURN
0x0000194C: 0x802A            - O_POP_TO_BASE
0x0000194E: 0x8029            - O_POP_BASE
0x00001950: 0x801C            - O_POP_RETURN

33: Zim22 (0x00001952)
===============================
0x00001952: 0x802B            - O_PUSH_BASE
0x00001954: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x0000195A: 0xC001 0x000000a6 - O_INTOP(0x000000a6)   // 166 (166)
0x00001960: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001966: 0x8120            - O_GSAY_MESSAGE
0x00001968: 0xC001 0x0000197e - O_INTOP(0x0000197e)   // 6526 (6526)
0x0000196E: 0x800D            - O_D_TO_A
0x00001970: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001976: 0xC001 0x0000002e - O_INTOP(0x0000002e)   // 46 (46)
0x0000197C: 0x8005            - O_CALL
0x0000197E: 0x801A            - O_POP
0x00001980: 0x80BF            - O_DUDE_OBJ
0x00001982: 0xC001 0x000007d0 - O_INTOP(0x000007d0)   // 2000 (2000)
0x00001988: 0x8139            - O_ITEM_CAPS_ADJUST
0x0000198A: 0x801A            - O_POP
0x0000198C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001992: 0x800D            - O_D_TO_A
0x00001994: 0x8019            - O_SWAPA
0x00001996: 0x802A            - O_POP_TO_BASE
0x00001998: 0x8029            - O_POP_BASE
0x0000199A: 0x800C            - O_A_TO_D
0x0000199C: 0x801C            - O_POP_RETURN
0x0000199E: 0x802A            - O_POP_TO_BASE
0x000019A0: 0x8029            - O_POP_BASE
0x000019A2: 0x801C            - O_POP_RETURN

34: Zim23 (0x000019a4)
===============================
0x000019A4: 0x802B            - O_PUSH_BASE
0x000019A6: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x000019AC: 0xC001 0x000000a7 - O_INTOP(0x000000a7)   // 167 (167)
0x000019B2: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000019B8: 0x8120            - O_GSAY_MESSAGE
0x000019BA: 0xC001 0x000019d0 - O_INTOP(0x000019d0)   // 6608 (6608)
0x000019C0: 0x800D            - O_D_TO_A
0x000019C2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000019C8: 0xC001 0x0000002e - O_INTOP(0x0000002e)   // 46 (46)
0x000019CE: 0x8005            - O_CALL
0x000019D0: 0x801A            - O_POP
0x000019D2: 0x80BF            - O_DUDE_OBJ
0x000019D4: 0xC001 0x000009c4 - O_INTOP(0x000009c4)   // 2500 (2500)
0x000019DA: 0x8139            - O_ITEM_CAPS_ADJUST
0x000019DC: 0x801A            - O_POP
0x000019DE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000019E4: 0x800D            - O_D_TO_A
0x000019E6: 0x8019            - O_SWAPA
0x000019E8: 0x802A            - O_POP_TO_BASE
0x000019EA: 0x8029            - O_POP_BASE
0x000019EC: 0x800C            - O_A_TO_D
0x000019EE: 0x801C            - O_POP_RETURN
0x000019F0: 0x802A            - O_POP_TO_BASE
0x000019F2: 0x8029            - O_POP_BASE
0x000019F4: 0x801C            - O_POP_RETURN

35: Zim24 (0x000019f6)
===============================
0x000019F6: 0x802B            - O_PUSH_BASE
0x000019F8: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x000019FE: 0xC001 0x000000a8 - O_INTOP(0x000000a8)   // 168 (168)
0x00001A04: 0x811E            - O_GSAY_REPLY
0x00001A06: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00001A0C: 0xC001 0x000000a9 - O_INTOP(0x000000a9)   // 169 (169)
0x00001A12: 0xC001 0x00000024 - O_INTOP(0x00000024)   // 36 (36)
0x00001A18: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001A1E: 0x811F            - O_GSAY_OPTION
0x00001A20: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00001A26: 0xC001 0x000000aa - O_INTOP(0x000000aa)   // 170 (170)
0x00001A2C: 0xC001 0x00000025 - O_INTOP(0x00000025)   // 37 (37)
0x00001A32: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001A38: 0x811F            - O_GSAY_OPTION
0x00001A3A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001A40: 0x800D            - O_D_TO_A
0x00001A42: 0x8019            - O_SWAPA
0x00001A44: 0x802A            - O_POP_TO_BASE
0x00001A46: 0x8029            - O_POP_BASE
0x00001A48: 0x800C            - O_A_TO_D
0x00001A4A: 0x801C            - O_POP_RETURN
0x00001A4C: 0x802A            - O_POP_TO_BASE
0x00001A4E: 0x8029            - O_POP_BASE
0x00001A50: 0x801C            - O_POP_RETURN

36: Zim25 (0x00001a52)
===============================
0x00001A52: 0x802B            - O_PUSH_BASE
0x00001A54: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00001A5A: 0xC001 0x000000ab - O_INTOP(0x000000ab)   // 171 (171)
0x00001A60: 0x811E            - O_GSAY_REPLY
0x00001A62: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00001A68: 0xC001 0x000000ac - O_INTOP(0x000000ac)   // 172 (172)
0x00001A6E: 0xC001 0x00000025 - O_INTOP(0x00000025)   // 37 (37)
0x00001A74: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001A7A: 0x811F            - O_GSAY_OPTION
0x00001A7C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001A82: 0x800D            - O_D_TO_A
0x00001A84: 0x8019            - O_SWAPA
0x00001A86: 0x802A            - O_POP_TO_BASE
0x00001A88: 0x8029            - O_POP_BASE
0x00001A8A: 0x800C            - O_A_TO_D
0x00001A8C: 0x801C            - O_POP_RETURN
0x00001A8E: 0x802A            - O_POP_TO_BASE
0x00001A90: 0x8029            - O_POP_BASE
0x00001A92: 0x801C            - O_POP_RETURN

37: Zim26 (0x00001a94)
===============================
0x00001A94: 0x802B            - O_PUSH_BASE
0x00001A96: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001A9C: 0x80BF            - O_DUDE_OBJ
0x00001A9E: 0xC001 0x000000ee - O_INTOP(0x000000ee)   // 238 (238)
0x00001AA4: 0x810D            - O_OBJ_CARRYING_PID_OBJ
0x00001AA6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001AAC: 0x8031            - O_STORE
0x00001AAE: 0x80BF            - O_DUDE_OBJ
0x00001AB0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001AB6: 0x8032            - O_FETCH
0x00001AB8: 0x80D9            - O_RM_OBJ_FROM_INVEN
0x00001ABA: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00001AC0: 0xC001 0x000000ad - O_INTOP(0x000000ad)   // 173 (173)
0x00001AC6: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001ACC: 0x8120            - O_GSAY_MESSAGE
0x00001ACE: 0xC001 0x00000264 - O_INTOP(0x00000264)   // 612 (612)
0x00001AD4: 0xC001 0x0000232b - O_INTOP(0x0000232b)   // 9003 (9003)
0x00001ADA: 0x80C6            - O_SET_GLOBAL_VAR
0x00001ADC: 0xC001 0x00001b20 - O_INTOP(0x00001b20)   // 6944 (6944)
0x00001AE2: 0xC001 0x00000265 - O_INTOP(0x00000265)   // 613 (613)
0x00001AE8: 0x80C5            - O_GLOBAL_VAR
0x00001AEA: 0xC001 0x0000238e - O_INTOP(0x0000238e)   // 9102 (9102)
0x00001AF0: 0x8033            - O_EQUAL
0x00001AF2: 0x802F            - O_IF
0x00001AF4: 0x80BC            - O_SELF_OBJ
0x00001AF6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001AFC: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00001B02: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001B08: 0x8102            - O_CRITTER_ADD_TRAIT
0x00001B0A: 0xC001 0x00000265 - O_INTOP(0x00000265)   // 613 (613)
0x00001B10: 0xC001 0x0000238f - O_INTOP(0x0000238f)   // 9103 (9103)
0x00001B16: 0x80C6            - O_SET_GLOBAL_VAR
0x00001B18: 0xC001 0x00001b36 - O_INTOP(0x00001b36)   // 6966 (6966)
0x00001B1E: 0x8004            - O_JMP
0x00001B20: 0x80BC            - O_SELF_OBJ
0x00001B22: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001B28: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00001B2E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001B34: 0x8102            - O_CRITTER_ADD_TRAIT
0x00001B36: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001B3C: 0x800D            - O_D_TO_A
0x00001B3E: 0x8019            - O_SWAPA
0x00001B40: 0x802A            - O_POP_TO_BASE
0x00001B42: 0x8029            - O_POP_BASE
0x00001B44: 0x800C            - O_A_TO_D
0x00001B46: 0x801C            - O_POP_RETURN
0x00001B48: 0x802A            - O_POP_TO_BASE
0x00001B4A: 0x8029            - O_POP_BASE
0x00001B4C: 0x801C            - O_POP_RETURN

38: Zim27 (0x00001b4e)
===============================
0x00001B4E: 0x802B            - O_PUSH_BASE
0x00001B50: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00001B56: 0xC001 0x000000b1 - O_INTOP(0x000000b1)   // 177 (177)
0x00001B5C: 0x811E            - O_GSAY_REPLY
0x00001B5E: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00001B64: 0xC001 0x000000b2 - O_INTOP(0x000000b2)   // 178 (178)
0x00001B6A: 0xC001 0x00000025 - O_INTOP(0x00000025)   // 37 (37)
0x00001B70: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001B76: 0x811F            - O_GSAY_OPTION
0x00001B78: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00001B7E: 0xC001 0x000000b3 - O_INTOP(0x000000b3)   // 179 (179)
0x00001B84: 0xC001 0x00000027 - O_INTOP(0x00000027)   // 39 (39)
0x00001B8A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001B90: 0x811F            - O_GSAY_OPTION
0x00001B92: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001B98: 0x800D            - O_D_TO_A
0x00001B9A: 0x8019            - O_SWAPA
0x00001B9C: 0x802A            - O_POP_TO_BASE
0x00001B9E: 0x8029            - O_POP_BASE
0x00001BA0: 0x800C            - O_A_TO_D
0x00001BA2: 0x801C            - O_POP_RETURN
0x00001BA4: 0x802A            - O_POP_TO_BASE
0x00001BA6: 0x8029            - O_POP_BASE
0x00001BA8: 0x801C            - O_POP_RETURN

39: ZimEnd (0x00001baa)
===============================
0x00001BAA: 0x802B            - O_PUSH_BASE
0x00001BAC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001BB2: 0x800D            - O_D_TO_A
0x00001BB4: 0x8019            - O_SWAPA
0x00001BB6: 0x802A            - O_POP_TO_BASE
0x00001BB8: 0x8029            - O_POP_BASE
0x00001BBA: 0x800C            - O_A_TO_D
0x00001BBC: 0x801C            - O_POP_RETURN
0x00001BBE: 0x802A            - O_POP_TO_BASE
0x00001BC0: 0x8029            - O_POP_BASE
0x00001BC2: 0x801C            - O_POP_RETURN

40: get_reaction (0x00001bc4)
===============================
0x00001BC4: 0x802B            - O_PUSH_BASE
0x00001BC6: 0xC001 0x00001e3e - O_INTOP(0x00001e3e)   // 7742 (7742)
0x00001BCC: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001BD2: 0x80C1            - O_LOCAL_VAR
0x00001BD4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001BDA: 0x8033            - O_EQUAL
0x00001BDC: 0x802F            - O_IF
0x00001BDE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001BE4: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001BEA: 0x80C2            - O_SET_LOCAL_VAR
0x00001BEC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001BF2: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001BF8: 0x80C2            - O_SET_LOCAL_VAR
0x00001BFA: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001C00: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001C06: 0x80C2            - O_SET_LOCAL_VAR
0x00001C08: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001C0E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001C14: 0x80C1            - O_LOCAL_VAR
0x00001C16: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001C1C: 0x80BF            - O_DUDE_OBJ
0x00001C1E: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001C24: 0x80CA            - O_GET_CRITTER_STAT
0x00001C26: 0x803B            - O_MUL
0x00001C28: 0x8039            - O_ADD
0x00001C2A: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00001C30: 0x803A            - O_SUB
0x00001C32: 0x80C2            - O_SET_LOCAL_VAR
0x00001C34: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001C3A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001C40: 0x80C1            - O_LOCAL_VAR
0x00001C42: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00001C48: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001C4E: 0x80BF            - O_DUDE_OBJ
0x00001C50: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00001C56: 0x80F3            - O_HAS_TRAIT
0x00001C58: 0x803B            - O_MUL
0x00001C5A: 0x8039            - O_ADD
0x00001C5C: 0x80C2            - O_SET_LOCAL_VAR
0x00001C5E: 0xC001 0x00001cd2 - O_INTOP(0x00001cd2)   // 7378 (7378)
0x00001C64: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001C6A: 0x80BF            - O_DUDE_OBJ
0x00001C6C: 0xC001 0x00000027 - O_INTOP(0x00000027)   // 39 (39)
0x00001C72: 0x80F3            - O_HAS_TRAIT
0x00001C74: 0x802F            - O_IF
0x00001C76: 0xC001 0x00001cb0 - O_INTOP(0x00001cb0)   // 7344 (7344)
0x00001C7C: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00001C82: 0x80C5            - O_GLOBAL_VAR
0x00001C84: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001C8A: 0x8038            - O_GREATER
0x00001C8C: 0x802F            - O_IF
0x00001C8E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001C94: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001C9A: 0x80C1            - O_LOCAL_VAR
0x00001C9C: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00001CA2: 0x80C5            - O_GLOBAL_VAR
0x00001CA4: 0x8039            - O_ADD
0x00001CA6: 0x80C2            - O_SET_LOCAL_VAR
0x00001CA8: 0xC001 0x00001cca - O_INTOP(0x00001cca)   // 7370 (7370)
0x00001CAE: 0x8004            - O_JMP
0x00001CB0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001CB6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001CBC: 0x80C1            - O_LOCAL_VAR
0x00001CBE: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00001CC4: 0x80C5            - O_GLOBAL_VAR
0x00001CC6: 0x803A            - O_SUB
0x00001CC8: 0x80C2            - O_SET_LOCAL_VAR
0x00001CCA: 0xC001 0x00001d26 - O_INTOP(0x00001d26)   // 7462 (7462)
0x00001CD0: 0x8004            - O_JMP
0x00001CD2: 0xC001 0x00001d0c - O_INTOP(0x00001d0c)   // 7436 (7436)
0x00001CD8: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001CDE: 0x80C1            - O_LOCAL_VAR
0x00001CE0: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001CE6: 0x8033            - O_EQUAL
0x00001CE8: 0x802F            - O_IF
0x00001CEA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001CF0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001CF6: 0x80C1            - O_LOCAL_VAR
0x00001CF8: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00001CFE: 0x80C5            - O_GLOBAL_VAR
0x00001D00: 0x803A            - O_SUB
0x00001D02: 0x80C2            - O_SET_LOCAL_VAR
0x00001D04: 0xC001 0x00001d26 - O_INTOP(0x00001d26)   // 7462 (7462)
0x00001D0A: 0x8004            - O_JMP
0x00001D0C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001D12: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001D18: 0x80C1            - O_LOCAL_VAR
0x00001D1A: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00001D20: 0x80C5            - O_GLOBAL_VAR
0x00001D22: 0x8039            - O_ADD
0x00001D24: 0x80C2            - O_SET_LOCAL_VAR
0x00001D26: 0xC001 0x00001d56 - O_INTOP(0x00001d56)   // 7510 (7510)
0x00001D2C: 0xC001 0x0000009e - O_INTOP(0x0000009e)   // 158 (158)
0x00001D32: 0x80C5            - O_GLOBAL_VAR
0x00001D34: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001D3A: 0x8038            - O_GREATER
0x00001D3C: 0x802F            - O_IF
0x00001D3E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001D44: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001D4A: 0x80C1            - O_LOCAL_VAR
0x00001D4C: 0xC001 0x0000001e - O_INTOP(0x0000001e)   // 30 (30)
0x00001D52: 0x803A            - O_SUB
0x00001D54: 0x80C2            - O_SET_LOCAL_VAR
0x00001D56: 0xC001 0x00001dbe - O_INTOP(0x00001dbe)   // 7614 (7614)
0x00001D5C: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00001D62: 0x80C5            - O_GLOBAL_VAR
0x00001D64: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00001D6A: 0x80C5            - O_GLOBAL_VAR
0x00001D6C: 0x8039            - O_ADD
0x00001D6E: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00001D74: 0x8036            - O_GREATER_EQUAL
0x00001D76: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00001D7C: 0x80C5            - O_GLOBAL_VAR
0x00001D7E: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001D84: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00001D8A: 0x80C5            - O_GLOBAL_VAR
0x00001D8C: 0x803B            - O_MUL
0x00001D8E: 0x8038            - O_GREATER
0x00001D90: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x00001D96: 0x80C5            - O_GLOBAL_VAR
0x00001D98: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001D9E: 0x8033            - O_EQUAL
0x00001DA0: 0x803F            - O_OR
0x00001DA2: 0x803E            - O_AND
0x00001DA4: 0x802F            - O_IF
0x00001DA6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001DAC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001DB2: 0x80C1            - O_LOCAL_VAR
0x00001DB4: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x00001DBA: 0x8039            - O_ADD
0x00001DBC: 0x80C2            - O_SET_LOCAL_VAR
0x00001DBE: 0xC001 0x00001e26 - O_INTOP(0x00001e26)   // 7718 (7718)
0x00001DC4: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00001DCA: 0x80C5            - O_GLOBAL_VAR
0x00001DCC: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00001DD2: 0x80C5            - O_GLOBAL_VAR
0x00001DD4: 0x8039            - O_ADD
0x00001DD6: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00001DDC: 0x8036            - O_GREATER_EQUAL
0x00001DDE: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00001DE4: 0x80C5            - O_GLOBAL_VAR
0x00001DE6: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001DEC: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00001DF2: 0x80C5            - O_GLOBAL_VAR
0x00001DF4: 0x803B            - O_MUL
0x00001DF6: 0x8038            - O_GREATER
0x00001DF8: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x00001DFE: 0x80C5            - O_GLOBAL_VAR
0x00001E00: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001E06: 0x8033            - O_EQUAL
0x00001E08: 0x803F            - O_OR
0x00001E0A: 0x803E            - O_AND
0x00001E0C: 0x802F            - O_IF
0x00001E0E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001E14: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001E1A: 0x80C1            - O_LOCAL_VAR
0x00001E1C: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x00001E22: 0x803A            - O_SUB
0x00001E24: 0x80C2            - O_SET_LOCAL_VAR
0x00001E26: 0xC001 0x00001e3c - O_INTOP(0x00001e3c)   // 7740 (7740)
0x00001E2C: 0x800D            - O_D_TO_A
0x00001E2E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001E34: 0xC001 0x00000029 - O_INTOP(0x00000029)   // 41 (41)
0x00001E3A: 0x8005            - O_CALL
0x00001E3C: 0x801A            - O_POP
0x00001E3E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001E44: 0x800D            - O_D_TO_A
0x00001E46: 0x8019            - O_SWAPA
0x00001E48: 0x802A            - O_POP_TO_BASE
0x00001E4A: 0x8029            - O_POP_BASE
0x00001E4C: 0x800C            - O_A_TO_D
0x00001E4E: 0x801C            - O_POP_RETURN
0x00001E50: 0x802A            - O_POP_TO_BASE
0x00001E52: 0x8029            - O_POP_BASE
0x00001E54: 0x801C            - O_POP_RETURN

41: ReactToLevel (0x00001e56)
===============================
0x00001E56: 0x802B            - O_PUSH_BASE
0x00001E58: 0xC001 0x00001e86 - O_INTOP(0x00001e86)   // 7814 (7814)
0x00001E5E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001E64: 0x80C1            - O_LOCAL_VAR
0x00001E66: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00001E6C: 0x8035            - O_LESS_EQUAL
0x00001E6E: 0x802F            - O_IF
0x00001E70: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001E76: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001E7C: 0x80C2            - O_SET_LOCAL_VAR
0x00001E7E: 0xC001 0x00001ec2 - O_INTOP(0x00001ec2)   // 7874 (7874)
0x00001E84: 0x8004            - O_JMP
0x00001E86: 0xC001 0x00001eb4 - O_INTOP(0x00001eb4)   // 7860 (7860)
0x00001E8C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001E92: 0x80C1            - O_LOCAL_VAR
0x00001E94: 0xC001 0x0000004b - O_INTOP(0x0000004b)   // 75 (75)
0x00001E9A: 0x8035            - O_LESS_EQUAL
0x00001E9C: 0x802F            - O_IF
0x00001E9E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001EA4: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001EAA: 0x80C2            - O_SET_LOCAL_VAR
0x00001EAC: 0xC001 0x00001ec2 - O_INTOP(0x00001ec2)   // 7874 (7874)
0x00001EB2: 0x8004            - O_JMP
0x00001EB4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001EBA: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001EC0: 0x80C2            - O_SET_LOCAL_VAR
0x00001EC2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001EC8: 0x800D            - O_D_TO_A
0x00001ECA: 0x8019            - O_SWAPA
0x00001ECC: 0x802A            - O_POP_TO_BASE
0x00001ECE: 0x8029            - O_POP_BASE
0x00001ED0: 0x800C            - O_A_TO_D
0x00001ED2: 0x801C            - O_POP_RETURN
0x00001ED4: 0x802A            - O_POP_TO_BASE
0x00001ED6: 0x8029            - O_POP_BASE
0x00001ED8: 0x801C            - O_POP_RETURN

42: LevelToReact (0x00001eda)
===============================
0x00001EDA: 0x802B            - O_PUSH_BASE
0x00001EDC: 0xC001 0x00001f12 - O_INTOP(0x00001f12)   // 7954 (7954)
0x00001EE2: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001EE8: 0x80C1            - O_LOCAL_VAR
0x00001EEA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001EF0: 0x8033            - O_EQUAL
0x00001EF2: 0x802F            - O_IF
0x00001EF4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001EFA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001F00: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00001F06: 0x80B4            - O_RANDOM
0x00001F08: 0x80C2            - O_SET_LOCAL_VAR
0x00001F0A: 0xC001 0x00001f5e - O_INTOP(0x00001f5e)   // 8030 (8030)
0x00001F10: 0x8004            - O_JMP
0x00001F12: 0xC001 0x00001f48 - O_INTOP(0x00001f48)   // 8008 (8008)
0x00001F18: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001F1E: 0x80C1            - O_LOCAL_VAR
0x00001F20: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001F26: 0x8033            - O_EQUAL
0x00001F28: 0x802F            - O_IF
0x00001F2A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001F30: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x00001F36: 0xC001 0x0000004b - O_INTOP(0x0000004b)   // 75 (75)
0x00001F3C: 0x80B4            - O_RANDOM
0x00001F3E: 0x80C2            - O_SET_LOCAL_VAR
0x00001F40: 0xC001 0x00001f5e - O_INTOP(0x00001f5e)   // 8030 (8030)
0x00001F46: 0x8004            - O_JMP
0x00001F48: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001F4E: 0xC001 0x0000004c - O_INTOP(0x0000004c)   // 76 (76)
0x00001F54: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x00001F5A: 0x80B4            - O_RANDOM
0x00001F5C: 0x80C2            - O_SET_LOCAL_VAR
0x00001F5E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001F64: 0x800D            - O_D_TO_A
0x00001F66: 0x8019            - O_SWAPA
0x00001F68: 0x802A            - O_POP_TO_BASE
0x00001F6A: 0x8029            - O_POP_BASE
0x00001F6C: 0x800C            - O_A_TO_D
0x00001F6E: 0x801C            - O_POP_RETURN
0x00001F70: 0x802A            - O_POP_TO_BASE
0x00001F72: 0x8029            - O_POP_BASE
0x00001F74: 0x801C            - O_POP_RETURN

43: UpReact (0x00001f76)
===============================
0x00001F76: 0x802B            - O_PUSH_BASE
0x00001F78: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001F7E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001F84: 0x80C1            - O_LOCAL_VAR
0x00001F86: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00001F8C: 0x8039            - O_ADD
0x00001F8E: 0x80C2            - O_SET_LOCAL_VAR
0x00001F90: 0xC001 0x00001fa6 - O_INTOP(0x00001fa6)   // 8102 (8102)
0x00001F96: 0x800D            - O_D_TO_A
0x00001F98: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001F9E: 0xC001 0x00000029 - O_INTOP(0x00000029)   // 41 (41)
0x00001FA4: 0x8005            - O_CALL
0x00001FA6: 0x801A            - O_POP
0x00001FA8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001FAE: 0x800D            - O_D_TO_A
0x00001FB0: 0x8019            - O_SWAPA
0x00001FB2: 0x802A            - O_POP_TO_BASE
0x00001FB4: 0x8029            - O_POP_BASE
0x00001FB6: 0x800C            - O_A_TO_D
0x00001FB8: 0x801C            - O_POP_RETURN
0x00001FBA: 0x802A            - O_POP_TO_BASE
0x00001FBC: 0x8029            - O_POP_BASE
0x00001FBE: 0x801C            - O_POP_RETURN

44: DownReact (0x00001fc0)
===============================
0x00001FC0: 0x802B            - O_PUSH_BASE
0x00001FC2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001FC8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001FCE: 0x80C1            - O_LOCAL_VAR
0x00001FD0: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00001FD6: 0x803A            - O_SUB
0x00001FD8: 0x80C2            - O_SET_LOCAL_VAR
0x00001FDA: 0xC001 0x00001ff0 - O_INTOP(0x00001ff0)   // 8176 (8176)
0x00001FE0: 0x800D            - O_D_TO_A
0x00001FE2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001FE8: 0xC001 0x00000029 - O_INTOP(0x00000029)   // 41 (41)
0x00001FEE: 0x8005            - O_CALL
0x00001FF0: 0x801A            - O_POP
0x00001FF2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001FF8: 0x800D            - O_D_TO_A
0x00001FFA: 0x8019            - O_SWAPA
0x00001FFC: 0x802A            - O_POP_TO_BASE
0x00001FFE: 0x8029            - O_POP_BASE
0x00002000: 0x800C            - O_A_TO_D
0x00002002: 0x801C            - O_POP_RETURN
0x00002004: 0x802A            - O_POP_TO_BASE
0x00002006: 0x8029            - O_POP_BASE
0x00002008: 0x801C            - O_POP_RETURN

45: BottomReact (0x0000200a)
===============================
0x0000200A: 0x802B            - O_PUSH_BASE
0x0000200C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002012: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002018: 0x80C2            - O_SET_LOCAL_VAR
0x0000201A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002020: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002026: 0x80C2            - O_SET_LOCAL_VAR
0x00002028: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000202E: 0x800D            - O_D_TO_A
0x00002030: 0x8019            - O_SWAPA
0x00002032: 0x802A            - O_POP_TO_BASE
0x00002034: 0x8029            - O_POP_BASE
0x00002036: 0x800C            - O_A_TO_D
0x00002038: 0x801C            - O_POP_RETURN
0x0000203A: 0x802A            - O_POP_TO_BASE
0x0000203C: 0x8029            - O_POP_BASE
0x0000203E: 0x801C            - O_POP_RETURN

46: TopReact (0x00002040)
===============================
0x00002040: 0x802B            - O_PUSH_BASE
0x00002042: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002048: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x0000204E: 0x80C2            - O_SET_LOCAL_VAR
0x00002050: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002056: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x0000205C: 0x80C2            - O_SET_LOCAL_VAR
0x0000205E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002064: 0x800D            - O_D_TO_A
0x00002066: 0x8019            - O_SWAPA
0x00002068: 0x802A            - O_POP_TO_BASE
0x0000206A: 0x8029            - O_POP_BASE
0x0000206C: 0x800C            - O_A_TO_D
0x0000206E: 0x801C            - O_POP_RETURN
0x00002070: 0x802A            - O_POP_TO_BASE
0x00002072: 0x8029            - O_POP_BASE
0x00002074: 0x801C            - O_POP_RETURN

47: BigUpReact (0x00002076)
===============================
0x00002076: 0x802B            - O_PUSH_BASE
0x00002078: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000207E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002084: 0x80C1            - O_LOCAL_VAR
0x00002086: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x0000208C: 0x8039            - O_ADD
0x0000208E: 0x80C2            - O_SET_LOCAL_VAR
0x00002090: 0xC001 0x000020a6 - O_INTOP(0x000020a6)   // 8358 (8358)
0x00002096: 0x800D            - O_D_TO_A
0x00002098: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000209E: 0xC001 0x00000029 - O_INTOP(0x00000029)   // 41 (41)
0x000020A4: 0x8005            - O_CALL
0x000020A6: 0x801A            - O_POP
0x000020A8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000020AE: 0x800D            - O_D_TO_A
0x000020B0: 0x8019            - O_SWAPA
0x000020B2: 0x802A            - O_POP_TO_BASE
0x000020B4: 0x8029            - O_POP_BASE
0x000020B6: 0x800C            - O_A_TO_D
0x000020B8: 0x801C            - O_POP_RETURN
0x000020BA: 0x802A            - O_POP_TO_BASE
0x000020BC: 0x8029            - O_POP_BASE
0x000020BE: 0x801C            - O_POP_RETURN

48: BigDownReact (0x000020c0)
===============================
0x000020C0: 0x802B            - O_PUSH_BASE
0x000020C2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000020C8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000020CE: 0x80C1            - O_LOCAL_VAR
0x000020D0: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x000020D6: 0x803A            - O_SUB
0x000020D8: 0x80C2            - O_SET_LOCAL_VAR
0x000020DA: 0xC001 0x000020f0 - O_INTOP(0x000020f0)   // 8432 (8432)
0x000020E0: 0x800D            - O_D_TO_A
0x000020E2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000020E8: 0xC001 0x00000029 - O_INTOP(0x00000029)   // 41 (41)
0x000020EE: 0x8005            - O_CALL
0x000020F0: 0x801A            - O_POP
0x000020F2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000020F8: 0x800D            - O_D_TO_A
0x000020FA: 0x8019            - O_SWAPA
0x000020FC: 0x802A            - O_POP_TO_BASE
0x000020FE: 0x8029            - O_POP_BASE
0x00002100: 0x800C            - O_A_TO_D
0x00002102: 0x801C            - O_POP_RETURN
0x00002104: 0x802A            - O_POP_TO_BASE
0x00002106: 0x8029            - O_POP_BASE
0x00002108: 0x801C            - O_POP_RETURN

49: UpReactLevel (0x0000210a)
===============================
0x0000210A: 0x802B            - O_PUSH_BASE
0x0000210C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002112: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002118: 0x80C1            - O_LOCAL_VAR
0x0000211A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002120: 0x8039            - O_ADD
0x00002122: 0x80C2            - O_SET_LOCAL_VAR
0x00002124: 0xC001 0x0000214a - O_INTOP(0x0000214a)   // 8522 (8522)
0x0000212A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002130: 0x80C1            - O_LOCAL_VAR
0x00002132: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00002138: 0x8038            - O_GREATER
0x0000213A: 0x802F            - O_IF
0x0000213C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002142: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00002148: 0x80C2            - O_SET_LOCAL_VAR
0x0000214A: 0xC001 0x00002160 - O_INTOP(0x00002160)   // 8544 (8544)
0x00002150: 0x800D            - O_D_TO_A
0x00002152: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002158: 0xC001 0x0000002a - O_INTOP(0x0000002a)   // 42 (42)
0x0000215E: 0x8005            - O_CALL
0x00002160: 0x801A            - O_POP
0x00002162: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002168: 0x800D            - O_D_TO_A
0x0000216A: 0x8019            - O_SWAPA
0x0000216C: 0x802A            - O_POP_TO_BASE
0x0000216E: 0x8029            - O_POP_BASE
0x00002170: 0x800C            - O_A_TO_D
0x00002172: 0x801C            - O_POP_RETURN
0x00002174: 0x802A            - O_POP_TO_BASE
0x00002176: 0x8029            - O_POP_BASE
0x00002178: 0x801C            - O_POP_RETURN

50: DownReactLevel (0x0000217a)
===============================
0x0000217A: 0x802B            - O_PUSH_BASE
0x0000217C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002182: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002188: 0x80C1            - O_LOCAL_VAR
0x0000218A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002190: 0x803A            - O_SUB
0x00002192: 0x80C2            - O_SET_LOCAL_VAR
0x00002194: 0xC001 0x000021ba - O_INTOP(0x000021ba)   // 8634 (8634)
0x0000219A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000021A0: 0x80C1            - O_LOCAL_VAR
0x000021A2: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000021A8: 0x8037            - O_LESS
0x000021AA: 0x802F            - O_IF
0x000021AC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000021B2: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000021B8: 0x80C2            - O_SET_LOCAL_VAR
0x000021BA: 0xC001 0x000021d0 - O_INTOP(0x000021d0)   // 8656 (8656)
0x000021C0: 0x800D            - O_D_TO_A
0x000021C2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000021C8: 0xC001 0x0000002a - O_INTOP(0x0000002a)   // 42 (42)
0x000021CE: 0x8005            - O_CALL
0x000021D0: 0x801A            - O_POP
0x000021D2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000021D8: 0x800D            - O_D_TO_A
0x000021DA: 0x8019            - O_SWAPA
0x000021DC: 0x802A            - O_POP_TO_BASE
0x000021DE: 0x8029            - O_POP_BASE
0x000021E0: 0x800C            - O_A_TO_D
0x000021E2: 0x801C            - O_POP_RETURN
0x000021E4: 0x802A            - O_POP_TO_BASE
0x000021E6: 0x8029            - O_POP_BASE
0x000021E8: 0x801C            - O_POP_RETURN

51: Goodbyes (0x000021ea)
===============================
0x000021EA: 0x802B            - O_PUSH_BASE
0x000021EC: 0xC001 0x0000027a - O_INTOP(0x0000027a)   // 634 (634)
0x000021F2: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x000021F8: 0xC001 0x00000069 - O_INTOP(0x00000069)   // 105 (105)
0x000021FE: 0x80B4            - O_RANDOM
0x00002200: 0x8105            - O_MESSAGE_STR
0x00002202: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00002208: 0x8013            - O_STORE_GLOBAL
0x0000220A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002210: 0x800D            - O_D_TO_A
0x00002212: 0x8019            - O_SWAPA
0x00002214: 0x802A            - O_POP_TO_BASE
0x00002216: 0x8029            - O_POP_BASE
0x00002218: 0x800C            - O_A_TO_D
0x0000221A: 0x801C            - O_POP_RETURN
0x0000221C: 0x802A            - O_POP_TO_BASE
0x0000221E: 0x8029            - O_POP_BASE
0x00002220: 0x801C            - O_POP_RETURN

