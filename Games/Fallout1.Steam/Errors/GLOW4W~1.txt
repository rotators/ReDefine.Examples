Fallout script decompiler, version 8.4.7 (sfall edition)
Copyright (C) Anchorite (TeamX), 2005-2009
anchorite2001@yandex.ru
Continued by Nirran, phobos2077, Mr.Stalin (2014-2023)
Crossplatformed by alexeevdv (2015)
int2ssl is using Fallout 1 code.
Loading file Games/Fallout1.Steam/scripts/GLOW4W~1.int...
  Read startup code
  Read procedures table
  Read namespace
  Read stringspace
  Read tail of startup code
    Check "Jump to 'start' procedure" / "Jump to end of statup code"
    Check "# of argument to 'start' procedure"
    Extract "Export var" section
    Extract "Set exported var values" section
    Extract "Export procedures" section
    Extract "Global variables" section
  Read procedure's bodies
    Procedure: 0
    Procedure: 1
File Games/Fallout1.Steam/scripts/GLOW4W~1.int loaded successfuly

Decompiling...
  Init definitions
  Processing code
    Intial reducing
    Building execution tree
        Procedure: 0
        Procedure: 1
Error: Expression required for 1C0

============== Procedures table ==================

======== Procedure 0 ========
Name offset:       0x00000006
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000000A6
Number of args:    0x00000000  // 0

======== Procedure 1 ========
Name offset:       0x00000018
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000000A6
Number of args:    0x00000000  // 0



============== Namespace ==================
0x00000006: ".............."
0x00000018: "start"
0x00000020: "Shocked"
==================
3 item(s)



============== Stringspace ==================
Empty


============== Global variables values ==================
0: O_INTOP(0x00000000)   // 0 (0)


============== Exported variables ==================
Not found


============== Procedures ==================

0: .............. (0x000000a6)
===============================

1: start (0x000000a6)
===============================
0x000000A6: 0x802B            - O_PUSH_BASE
0x000000A8: 0xC001 0x000000e0 - O_INTOP(0x000000e0)   // 224 (224)
0x000000AE: 0x80C7            - O_SCRIPT_ACTION
0x000000B0: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x000000B6: 0x8033            - O_EQUAL
0x000000B8: 0x80C7            - O_SCRIPT_ACTION
0x000000BA: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000000C0: 0x8033            - O_EQUAL
0x000000C2: 0x803F            - O_OR
0x000000C4: 0x802F            - O_IF
0x000000C6: 0x80B9            - O_SCRIPT_OVERRIDES
0x000000C8: 0xC001 0x00000148 - O_INTOP(0x00000148)   // 328 (328)
0x000000CE: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x000000D4: 0x8105            - O_MESSAGE_STR
0x000000D6: 0x80B8            - O_DISPLAY_MSG
0x000000D8: 0xC001 0x00000264 - O_INTOP(0x00000264)   // 612 (612)
0x000000DE: 0x8004            - O_JMP
0x000000E0: 0xC001 0x00000208 - O_INTOP(0x00000208)   // 520 (520)
0x000000E6: 0x80C7            - O_SCRIPT_ACTION
0x000000E8: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x000000EE: 0x8033            - O_EQUAL
0x000000F0: 0x802F            - O_IF
0x000000F2: 0xC001 0x00000200 - O_INTOP(0x00000200)   // 512 (512)
0x000000F8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000000FE: 0x80C1            - O_LOCAL_VAR
0x00000100: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000106: 0x8033            - O_EQUAL
0x00000108: 0xC001 0x0000008b - O_INTOP(0x0000008b)   // 139 (139)
0x0000010E: 0x80C5            - O_GLOBAL_VAR
0x00000110: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000116: 0x8033            - O_EQUAL
0x00000118: 0x803E            - O_AND
0x0000011A: 0x802F            - O_IF
0x0000011C: 0x80B9            - O_SCRIPT_OVERRIDES
0x0000011E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000124: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000012A: 0x80C1            - O_LOCAL_VAR
0x0000012C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000132: 0x8039            - O_ADD
0x00000134: 0x80C2            - O_SET_LOCAL_VAR
0x00000136: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000013C: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000142: 0x80B4            - O_RANDOM
0x00000144: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000014A: 0x803A            - O_SUB
0x0000014C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000152: 0x80C1            - O_LOCAL_VAR
0x00000154: 0x8039            - O_ADD
0x00000156: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000015C: 0x8013            - O_STORE_GLOBAL
0x0000015E: 0xC001 0x0000018e - O_INTOP(0x0000018e)   // 398 (398)
0x00000164: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000016A: 0x8012            - O_FETCH_GLOBAL
0x0000016C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000172: 0x8035            - O_LESS_EQUAL
0x00000174: 0x802F            - O_IF
0x00000176: 0xC001 0x00000148 - O_INTOP(0x00000148)   // 328 (328)
0x0000017C: 0xC001 0x00000065 - O_INTOP(0x00000065)   // 101 (101)
0x00000182: 0x8105            - O_MESSAGE_STR
0x00000184: 0x80B8            - O_DISPLAY_MSG
0x00000186: 0xC001 0x00000200 - O_INTOP(0x00000200)   // 512 (512)
0x0000018C: 0x8004            - O_JMP
0x0000018E: 0xC001 0x000001ca - O_INTOP(0x000001ca)   // 458 (458)
0x00000194: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000019A: 0x8012            - O_FETCH_GLOBAL
0x0000019C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000001A2: 0x8033            - O_EQUAL
0x000001A4: 0x802F            - O_IF
0x000001A6: 0xC001 0x00000148 - O_INTOP(0x00000148)   // 328 (328)
0x000001AC: 0xC001 0x00000066 - O_INTOP(0x00000066)   // 102 (102)
0x000001B2: 0x8105            - O_MESSAGE_STR
0x000001B4: 0x80B8            - O_DISPLAY_MSG
0x000001B6: 0x80BF            - O_DUDE_OBJ
0x000001B8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000001BE: 0x8012            - O_FETCH_GLOBAL
0x000001C0: 0x80EF            - O_CRITTER_DMG
0x000001C2: 0xC001 0x00000200 - O_INTOP(0x00000200)   // 512 (512)
0x000001C8: 0x8004            - O_JMP
0x000001CA: 0xC001 0x00000148 - O_INTOP(0x00000148)   // 328 (328)
0x000001D0: 0xC001 0x00000067 - O_INTOP(0x00000067)   // 103 (103)
0x000001D6: 0x8105            - O_MESSAGE_STR
0x000001D8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000001DE: 0x8012            - O_FETCH_GLOBAL
0x000001E0: 0x8039            - O_ADD
0x000001E2: 0xC001 0x00000148 - O_INTOP(0x00000148)   // 328 (328)
0x000001E8: 0xC001 0x00000068 - O_INTOP(0x00000068)   // 104 (104)
0x000001EE: 0x8105            - O_MESSAGE_STR
0x000001F0: 0x8039            - O_ADD
0x000001F2: 0x80B8            - O_DISPLAY_MSG
0x000001F4: 0x80BF            - O_DUDE_OBJ
0x000001F6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000001FC: 0x8012            - O_FETCH_GLOBAL
0x000001FE: 0x80EF            - O_CRITTER_DMG
0x00000200: 0xC001 0x00000264 - O_INTOP(0x00000264)   // 612 (612)
0x00000206: 0x8004            - O_JMP
0x00000208: 0xC001 0x00000264 - O_INTOP(0x00000264)   // 612 (612)
0x0000020E: 0x80C7            - O_SCRIPT_ACTION
0x00000210: 0xC001 0x00000007 - O_INTOP(0x00000007)   // 7 (7)
0x00000216: 0x8033            - O_EQUAL
0x00000218: 0x802F            - O_IF
0x0000021A: 0xC001 0x00000254 - O_INTOP(0x00000254)   // 596 (596)
0x00000220: 0x80C0            - O_OBJ_BEING_USED_WITH
0x00000222: 0x8100            - O_OBJ_PID
0x00000224: 0xC001 0x00000061 - O_INTOP(0x00000061)   // 97 (97)
0x0000022A: 0x8033            - O_EQUAL
0x0000022C: 0x802F            - O_IF
0x0000022E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000234: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000023A: 0x80C2            - O_SET_LOCAL_VAR
0x0000023C: 0xC001 0x00000148 - O_INTOP(0x00000148)   // 328 (328)
0x00000242: 0xC001 0x00000069 - O_INTOP(0x00000069)   // 105 (105)
0x00000248: 0x8105            - O_MESSAGE_STR
0x0000024A: 0x80B8            - O_DISPLAY_MSG
0x0000024C: 0xC001 0x00000264 - O_INTOP(0x00000264)   // 612 (612)
0x00000252: 0x8004            - O_JMP
0x00000254: 0xC001 0x00000148 - O_INTOP(0x00000148)   // 328 (328)
0x0000025A: 0xC001 0x0000006a - O_INTOP(0x0000006a)   // 106 (106)
0x00000260: 0x8105            - O_MESSAGE_STR
0x00000262: 0x80B8            - O_DISPLAY_MSG
0x00000264: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000026A: 0x800D            - O_D_TO_A
0x0000026C: 0x8019            - O_SWAPA
0x0000026E: 0x802A            - O_POP_TO_BASE
0x00000270: 0x8029            - O_POP_BASE
0x00000272: 0x800C            - O_A_TO_D
0x00000274: 0x801C            - O_POP_RETURN
0x00000276: 0x802A            - O_POP_TO_BASE
0x00000278: 0x8029            - O_POP_BASE
0x0000027A: 0x801C            - O_POP_RETURN

