Fallout script decompiler, version 8.4.6 (sfall edition)
Copyright (C) Anchorite (TeamX), 2005-2009
anchorite2001@yandex.ru
Continued by Nirran, phobos2077, Mr.Stalin (2014-2020)
Crossplatformed by alexeevdv (2015)
int2ssl is using Fallout 1 code.
Loading file Games/Fallout1.Steam/scripts/MORPH.int...
  Read startup code
  Read procedures table
  Read namespace
  Read stringspace
  Read tail of startup code
    Check "Jump to 'start' procedure" / "Jump to end of statup code"
    Check "# of argument to 'start' procedure"
    Extract "Export var" section
    Extract "Set exported var values" section
    Extract "Export procedures" section
    Extract "Global variables" section
  Read procedure's bodies
    Procedure: 0
    Procedure: 1
    Procedure: 2
    Procedure: 3
    Procedure: 4
    Procedure: 5
    Procedure: 6
    Procedure: 7
    Procedure: 8
    Procedure: 9
    Procedure: 10
    Procedure: 11
    Procedure: 12
    Procedure: 13
    Procedure: 14
    Procedure: 15
    Procedure: 16
    Procedure: 17
    Procedure: 18
    Procedure: 19
    Procedure: 20
    Procedure: 21
    Procedure: 22
    Procedure: 23
    Procedure: 24
    Procedure: 25
    Procedure: 26
    Procedure: 27
    Procedure: 28
    Procedure: 29
    Procedure: 30
    Procedure: 31
    Procedure: 32
    Procedure: 33
    Procedure: 34
    Procedure: 35
    Procedure: 36
    Procedure: 37
    Procedure: 38
    Procedure: 39
    Procedure: 40
    Procedure: 41
    Procedure: 42
    Procedure: 43
    Procedure: 44
    Procedure: 45
    Procedure: 46
    Procedure: 47
    Procedure: 48
    Procedure: 49
    Procedure: 50
    Procedure: 51
    Procedure: 52
    Procedure: 53
    Procedure: 54
    Procedure: 55
    Procedure: 56
    Procedure: 57
    Procedure: 58
    Procedure: 59
    Procedure: 60
    Procedure: 61
    Procedure: 62
    Procedure: 63
    Procedure: 64
    Procedure: 65
    Procedure: 66
    Procedure: 67
    Procedure: 68
    Procedure: 69
    Procedure: 70
    Procedure: 71
    Procedure: 72
    Procedure: 73
    Procedure: 74
    Procedure: 75
    Procedure: 76
    Procedure: 77
    Procedure: 78
    Procedure: 79
    Procedure: 80
    Procedure: 81
    Procedure: 82
    Procedure: 83
    Procedure: 84
    Procedure: 85
    Procedure: 86
    Procedure: 87
    Procedure: 88
    Procedure: 89
    Procedure: 90
    Procedure: 91
    Procedure: 92
    Procedure: 93
    Procedure: 94
    Procedure: 95
    Procedure: 96
    Procedure: 97
    Procedure: 98
    Procedure: 99
    Procedure: 100
    Procedure: 101
    Procedure: 102
    Procedure: 103
File Games/Fallout1.Steam/scripts/MORPH.int loaded successfuly

Decompiling...
  Init definitions
  Processing code
    Intial reducing
    Building execution tree
        Procedure: 0
        Procedure: 1
        Procedure: 2
        Procedure: 3
        Procedure: 4
        Procedure: 5
        Procedure: 6
        Procedure: 7
        Procedure: 8
        Procedure: 9
        Procedure: 10
        Procedure: 11
        Procedure: 12
        Procedure: 13
        Procedure: 14
        Procedure: 15
        Procedure: 16
        Procedure: 17
        Procedure: 18
        Procedure: 19
        Procedure: 20
        Procedure: 21
        Procedure: 22
        Procedure: 23
        Procedure: 24
        Procedure: 25
        Procedure: 26
        Procedure: 27
        Procedure: 28
        Procedure: 29
        Procedure: 30
        Procedure: 31
        Procedure: 32
        Procedure: 33
        Procedure: 34
        Procedure: 35
        Procedure: 36
        Procedure: 37
        Procedure: 38
        Procedure: 39
        Procedure: 40
        Procedure: 41
        Procedure: 42
        Procedure: 43
        Procedure: 44
        Procedure: 45
        Procedure: 46
        Procedure: 47
        Procedure: 48
        Procedure: 49
        Procedure: 50
        Procedure: 51
        Procedure: 52
        Procedure: 53
        Procedure: 54
        Procedure: 55
        Procedure: 56
        Procedure: 57
        Procedure: 58
        Procedure: 59
        Procedure: 60
        Procedure: 61
        Procedure: 62
        Procedure: 63
        Procedure: 64
        Procedure: 65
        Procedure: 66
        Procedure: 67
        Procedure: 68
        Procedure: 69
        Procedure: 70
        Procedure: 71
        Procedure: 72
        Procedure: 73
        Procedure: 74
        Procedure: 75
        Procedure: 76
        Procedure: 77
        Procedure: 78
        Procedure: 79
        Procedure: 80
        Procedure: 81
        Procedure: 82
        Procedure: 83
        Procedure: 84
        Procedure: 85
        Procedure: 86
        Procedure: 87
        Procedure: 88
        Procedure: 89
        Procedure: 90
        Procedure: 91
        Procedure: 92
        Procedure: 93
        Procedure: 94
        Procedure: 95
        Procedure: 96
        Procedure: 97
        Procedure: 98
        Procedure: 99
        Procedure: 100
        Procedure: 101
        Procedure: 102
        Procedure: 103
    Extracting and reducing conditions
    Setting borders of blocks
        Procedure: 0
        Procedure: 1
Error: Conditional expression left in stack

============== Procedures table ==================

======== Procedure 0 ========
Name offset:       0x00000006
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000F66
Number of args:    0x00000000  // 0

======== Procedure 1 ========
Name offset:       0x00000018
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000F66
Number of args:    0x00000000  // 0

======== Procedure 2 ========
Name offset:       0x00000020
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000136E
Number of args:    0x00000000  // 0

======== Procedure 3 ========
Name offset:       0x0000002E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001564
Number of args:    0x00000000  // 0

======== Procedure 4 ========
Name offset:       0x0000003A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000157E
Number of args:    0x00000000  // 0

======== Procedure 5 ========
Name offset:       0x00000046
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000015A6
Number of args:    0x00000000  // 0

======== Procedure 6 ========
Name offset:       0x00000050
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001696
Number of args:    0x00000000  // 0

======== Procedure 7 ========
Name offset:       0x0000005C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000016DC
Number of args:    0x00000000  // 0

======== Procedure 8 ========
Name offset:       0x00000068
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000174A
Number of args:    0x00000000  // 0

======== Procedure 9 ========
Name offset:       0x00000074
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000017B6
Number of args:    0x00000000  // 0

======== Procedure 10 ========
Name offset:       0x00000080
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001822
Number of args:    0x00000000  // 0

======== Procedure 11 ========
Name offset:       0x0000008A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000018EA
Number of args:    0x00000000  // 0

======== Procedure 12 ========
Name offset:       0x00000096
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001956
Number of args:    0x00000000  // 0

======== Procedure 13 ========
Name offset:       0x000000A2
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000019C4
Number of args:    0x00000000  // 0

======== Procedure 14 ========
Name offset:       0x000000AC
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001A0A
Number of args:    0x00000000  // 0

======== Procedure 15 ========
Name offset:       0x000000B8
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001A54
Number of args:    0x00000000  // 0

======== Procedure 16 ========
Name offset:       0x000000C2
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001ADC
Number of args:    0x00000000  // 0

======== Procedure 17 ========
Name offset:       0x000000CC
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001B22
Number of args:    0x00000000  // 0

======== Procedure 18 ========
Name offset:       0x000000D6
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001BAA
Number of args:    0x00000000  // 0

======== Procedure 19 ========
Name offset:       0x000000E2
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001C16
Number of args:    0x00000000  // 0

======== Procedure 20 ========
Name offset:       0x000000EC
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001C9E
Number of args:    0x00000000  // 0

======== Procedure 21 ========
Name offset:       0x000000F6
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001D46
Number of args:    0x00000000  // 0

======== Procedure 22 ========
Name offset:       0x00000100
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001DCE
Number of args:    0x00000000  // 0

======== Procedure 23 ========
Name offset:       0x0000010C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001E48
Number of args:    0x00000000  // 0

======== Procedure 24 ========
Name offset:       0x00000116
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001E8E
Number of args:    0x00000000  // 0

======== Procedure 25 ========
Name offset:       0x00000120
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001EF6
Number of args:    0x00000000  // 0

======== Procedure 26 ========
Name offset:       0x0000012A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001F3C
Number of args:    0x00000000  // 0

======== Procedure 27 ========
Name offset:       0x00000134
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001FC4
Number of args:    0x00000000  // 0

======== Procedure 28 ========
Name offset:       0x0000013E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000200A
Number of args:    0x00000000  // 0

======== Procedure 29 ========
Name offset:       0x00000148
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002072
Number of args:    0x00000000  // 0

======== Procedure 30 ========
Name offset:       0x00000152
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000020DA
Number of args:    0x00000000  // 0

======== Procedure 31 ========
Name offset:       0x0000015C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002142
Number of args:    0x00000000  // 0

======== Procedure 32 ========
Name offset:       0x00000168
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000021B0
Number of args:    0x00000000  // 0

======== Procedure 33 ========
Name offset:       0x00000174
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000221E
Number of args:    0x00000000  // 0

======== Procedure 34 ========
Name offset:       0x0000017E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002286
Number of args:    0x00000000  // 0

======== Procedure 35 ========
Name offset:       0x00000188
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000022CC
Number of args:    0x00000000  // 0

======== Procedure 36 ========
Name offset:       0x00000192
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002334
Number of args:    0x00000000  // 0

======== Procedure 37 ========
Name offset:       0x0000019C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000023DC
Number of args:    0x00000000  // 0

======== Procedure 38 ========
Name offset:       0x000001A6
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002464
Number of args:    0x00000000  // 0

======== Procedure 39 ========
Name offset:       0x000001B0
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000250C
Number of args:    0x00000000  // 0

======== Procedure 40 ========
Name offset:       0x000001BA
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002574
Number of args:    0x00000000  // 0

======== Procedure 41 ========
Name offset:       0x000001C6
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000025E2
Number of args:    0x00000000  // 0

======== Procedure 42 ========
Name offset:       0x000001D0
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000266C
Number of args:    0x00000000  // 0

======== Procedure 43 ========
Name offset:       0x000001DA
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000026D4
Number of args:    0x00000000  // 0

======== Procedure 44 ========
Name offset:       0x000001E4
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000275C
Number of args:    0x00000000  // 0

======== Procedure 45 ========
Name offset:       0x000001EE
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000027C4
Number of args:    0x00000000  // 0

======== Procedure 46 ========
Name offset:       0x000001F8
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000282C
Number of args:    0x00000000  // 0

======== Procedure 47 ========
Name offset:       0x00000202
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002894
Number of args:    0x00000000  // 0

======== Procedure 48 ========
Name offset:       0x0000020E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002902
Number of args:    0x00000000  // 0

======== Procedure 49 ========
Name offset:       0x00000218
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002948
Number of args:    0x00000000  // 0

======== Procedure 50 ========
Name offset:       0x00000222
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000029B0
Number of args:    0x00000000  // 0

======== Procedure 51 ========
Name offset:       0x0000022C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000029F6
Number of args:    0x00000000  // 0

======== Procedure 52 ========
Name offset:       0x00000236
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002A3C
Number of args:    0x00000000  // 0

======== Procedure 53 ========
Name offset:       0x00000240
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002AA4
Number of args:    0x00000000  // 0

======== Procedure 54 ========
Name offset:       0x0000024A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002B0C
Number of args:    0x00000000  // 0

======== Procedure 55 ========
Name offset:       0x00000256
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002B26
Number of args:    0x00000000  // 0

======== Procedure 56 ========
Name offset:       0x00000260
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002B6C
Number of args:    0x00000000  // 0

======== Procedure 57 ========
Name offset:       0x0000026A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002BD4
Number of args:    0x00000000  // 0

======== Procedure 58 ========
Name offset:       0x00000274
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002C3C
Number of args:    0x00000000  // 0

======== Procedure 59 ========
Name offset:       0x00000280
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002C84
Number of args:    0x00000000  // 0

======== Procedure 60 ========
Name offset:       0x0000028E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002CF0
Number of args:    0x00000000  // 0

======== Procedure 61 ========
Name offset:       0x0000029A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002D36
Number of args:    0x00000000  // 0

======== Procedure 62 ========
Name offset:       0x000002A6
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002D7C
Number of args:    0x00000000  // 0

======== Procedure 63 ========
Name offset:       0x000002B0
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002DAA
Number of args:    0x00000000  // 0

======== Procedure 64 ========
Name offset:       0x000002BA
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002DD8
Number of args:    0x00000000  // 0

======== Procedure 65 ========
Name offset:       0x000002C4
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002E06
Number of args:    0x00000000  // 0

======== Procedure 66 ========
Name offset:       0x000002CE
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002E34
Number of args:    0x00000000  // 0

======== Procedure 67 ========
Name offset:       0x000002D8
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002E62
Number of args:    0x00000000  // 0

======== Procedure 68 ========
Name offset:       0x000002E2
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002E90
Number of args:    0x00000000  // 0

======== Procedure 69 ========
Name offset:       0x000002EC
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002EBE
Number of args:    0x00000000  // 0

======== Procedure 70 ========
Name offset:       0x000002F6
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002EEC
Number of args:    0x00000000  // 0

======== Procedure 71 ========
Name offset:       0x00000300
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002F1A
Number of args:    0x00000000  // 0

======== Procedure 72 ========
Name offset:       0x0000030A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002F48
Number of args:    0x00000000  // 0

======== Procedure 73 ========
Name offset:       0x00000314
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002F76
Number of args:    0x00000000  // 0

======== Procedure 74 ========
Name offset:       0x0000031E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002FA4
Number of args:    0x00000000  // 0

======== Procedure 75 ========
Name offset:       0x00000328
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002FD2
Number of args:    0x00000000  // 0

======== Procedure 76 ========
Name offset:       0x00000332
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00003000
Number of args:    0x00000000  // 0

======== Procedure 77 ========
Name offset:       0x0000033C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000302E
Number of args:    0x00000000  // 0

======== Procedure 78 ========
Name offset:       0x00000346
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000305C
Number of args:    0x00000000  // 0

======== Procedure 79 ========
Name offset:       0x00000350
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000308A
Number of args:    0x00000000  // 0

======== Procedure 80 ========
Name offset:       0x0000035A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000030B8
Number of args:    0x00000000  // 0

======== Procedure 81 ========
Name offset:       0x00000364
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000030E6
Number of args:    0x00000000  // 0

======== Procedure 82 ========
Name offset:       0x0000036E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00003114
Number of args:    0x00000000  // 0

======== Procedure 83 ========
Name offset:       0x00000378
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00003142
Number of args:    0x00000000  // 0

======== Procedure 84 ========
Name offset:       0x00000382
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000317C
Number of args:    0x00000000  // 0

======== Procedure 85 ========
Name offset:       0x0000038C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000031C0
Number of args:    0x00000000  // 0

======== Procedure 86 ========
Name offset:       0x00000396
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000031DA
Number of args:    0x00000000  // 0

======== Procedure 87 ========
Name offset:       0x000003A0
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000320C
Number of args:    0x00000000  // 0

======== Procedure 88 ========
Name offset:       0x000003AC
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00003256
Number of args:    0x00000000  // 0

======== Procedure 89 ========
Name offset:       0x000003B8
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000032A0
Number of args:    0x00000000  // 0

======== Procedure 90 ========
Name offset:       0x000003C4
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000032EA
Number of args:    0x00000000  // 0

======== Procedure 91 ========
Name offset:       0x000003D0
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00003334
Number of args:    0x00000000  // 0

======== Procedure 92 ========
Name offset:       0x00000458
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000033A0
Number of args:    0x00000000  // 0

======== Procedure 93 ========
Name offset:       0x00000468
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00003632
Number of args:    0x00000000  // 0

======== Procedure 94 ========
Name offset:       0x00000478
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000036B6
Number of args:    0x00000000  // 0

======== Procedure 95 ========
Name offset:       0x00000488
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00003752
Number of args:    0x00000000  // 0

======== Procedure 96 ========
Name offset:       0x00000492
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000379C
Number of args:    0x00000000  // 0

======== Procedure 97 ========
Name offset:       0x0000049E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000037E6
Number of args:    0x00000000  // 0

======== Procedure 98 ========
Name offset:       0x000004AC
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000381C
Number of args:    0x00000000  // 0

======== Procedure 99 ========
Name offset:       0x000004B8
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00003852
Number of args:    0x00000000  // 0

======== Procedure 100 ========
Name offset:       0x000004C6
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000389C
Number of args:    0x00000000  // 0

======== Procedure 101 ========
Name offset:       0x000004D6
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000038E6
Number of args:    0x00000000  // 0

======== Procedure 102 ========
Name offset:       0x000004E6
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00003956
Number of args:    0x00000000  // 0

======== Procedure 103 ========
Name offset:       0x000004F8
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000039C6
Number of args:    0x00000000  // 0



============== Namespace ==================
0x00000006: ".............."
0x00000018: "start"
0x00000020: "do_dialogue"
0x0000002E: "morphend"
0x0000003A: "morphcbt"
0x00000046: "morph02"
0x00000050: "morph02a"
0x0000005C: "morph02_1"
0x00000068: "morph02_2"
0x00000074: "morph02_3"
0x00000080: "morph03"
0x0000008A: "morph03_1"
0x00000096: "morph03_2"
0x000000A2: "morph04"
0x000000AC: "morph04a"
0x000000B8: "morph05"
0x000000C2: "morph06"
0x000000CC: "morph07"
0x000000D6: "morph07_1"
0x000000E2: "morph08"
0x000000EC: "morph09"
0x000000F6: "morph10"
0x00000100: "morph10_1"
0x0000010C: "morph11"
0x00000116: "morph12"
0x00000120: "morph13"
0x0000012A: "morph14"
0x00000134: "morph15"
0x0000013E: "morph16"
0x00000148: "morph17"
0x00000152: "morph18"
0x0000015C: "morph18_1"
0x00000168: "morph18_2"
0x00000174: "morph19"
0x0000017E: "morph20"
0x00000188: "morph21"
0x00000192: "morph23"
0x0000019C: "morph24"
0x000001A6: "morph26"
0x000001B0: "morph27"
0x000001BA: "morph27_1"
0x000001C6: "morph28"
0x000001D0: "morph29"
0x000001DA: "morph30"
0x000001E4: "morph31"
0x000001EE: "morph32"
0x000001F8: "morph33"
0x00000202: "morph33_1"
0x0000020E: "morph34"
0x00000218: "morph35"
0x00000222: "morph36"
0x0000022C: "morph37"
0x00000236: "morph38"
0x00000240: "morph39"
0x0000024A: "morph39_1"
0x00000256: "morph40"
0x00000260: "morph41"
0x0000026A: "morph42"
0x00000274: "morph42a"
0x00000280: "morph42a_1"
0x0000028E: "morph42b"
0x0000029A: "morph42c"
0x000002A6: "morph45"
0x000002B0: "morph46"
0x000002BA: "morph47"
0x000002C4: "morph48"
0x000002CE: "morph49"
0x000002D8: "morph50"
0x000002E2: "morph51"
0x000002EC: "morph52"
0x000002F6: "morph53"
0x00000300: "morph54"
0x0000030A: "morph55"
0x00000314: "morph56"
0x0000031E: "morph57"
0x00000328: "morph58"
0x00000332: "morph59"
0x0000033C: "morph60"
0x00000346: "morph61"
0x00000350: "morph62"
0x0000035A: "morph63"
0x00000364: "morph64"
0x0000036E: "morph65"
0x00000378: "morphx"
0x00000382: "morphx2"
0x0000038C: "morphx4"
0x00000396: "morph66"
0x000003A0: "morph05a"
0x000003AC: "morph08a"
0x000003B8: "morph32a"
0x000003C4: "morph39a"
0x000003D0: "morph05b"
0x000003DC: "MALE"
0x000003E4: "ONTHEJOB"
0x000003F0: "DESTROYED"
0x000003FC: "LIED"
0x00000404: "ONCEBEFORE"
0x00000412: "TRESPASS"
0x0000041E: "Signal_wait"
0x0000042C: "deliver_player"
0x0000043E: "Only_Once"
0x0000044A: "Master_Ptr"
0x00000458: "get_reaction"
0x00000468: "ReactToLevel"
0x00000478: "LevelToReact"
0x00000488: "UpReact"
0x00000492: "DownReact"
0x0000049E: "BottomReact"
0x000004AC: "TopReact"
0x000004B8: "BigUpReact"
0x000004C6: "BigDownReact"
0x000004D6: "UpReactLevel"
0x000004E6: "DownReactLevel"
0x000004F8: "Goodbyes"
0x00000504: "exit_line"
==================
115 item(s)



============== Stringspace ==================
0x00000006: "mstrlr34.map"
==================
1 item(s)



============== Global variables values ==================
0: O_INTOP(0x00000000)   // 0 (0)
1: O_INTOP(0x00000000)   // 0 (0)
2: O_INTOP(0x00000000)   // 0 (0)
3: O_INTOP(0x00000000)   // 0 (0)
4: O_INTOP(0x00000000)   // 0 (0)
5: O_INTOP(0x00000000)   // 0 (0)
6: O_INTOP(0x00000000)   // 0 (0)
7: O_INTOP(0x00000000)   // 0 (0)
8: O_INTOP(0x00000001)   // 1 (1)
9: O_INTOP(0x00000000)   // 0 (0)


============== Exported variables ==================
Not found


============== Procedures ==================

0: .............. (0x00000f66)
===============================

1: start (0x00000f66)
===============================
0x00000F66: 0x802B            - O_PUSH_BASE
0x00000F68: 0xC001 0x00000fe2 - O_INTOP(0x00000fe2)   // 4066 (4066)
0x00000F6E: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x00000F74: 0x8012            - O_FETCH_GLOBAL
0x00000F76: 0x802F            - O_IF
0x00000F78: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F7E: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x00000F84: 0x8013            - O_STORE_GLOBAL
0x00000F86: 0xC001 0x00000fb6 - O_INTOP(0x00000fb6)   // 4022 (4022)
0x00000F8C: 0x8101            - O_CUR_MAP_INDEX
0x00000F8E: 0xC001 0x00000012 - O_INTOP(0x00000012)   // 18 (18)
0x00000F94: 0x8033            - O_EQUAL
0x00000F96: 0x802F            - O_IF
0x00000F98: 0x80BC            - O_SELF_OBJ
0x00000F9A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000FA0: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000FA6: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x00000FAC: 0x8102            - O_CRITTER_ADD_TRAIT
0x00000FAE: 0xC001 0x00000fcc - O_INTOP(0x00000fcc)   // 4044 (4044)
0x00000FB4: 0x8004            - O_JMP
0x00000FB6: 0x80BC            - O_SELF_OBJ
0x00000FB8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000FBE: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000FC4: 0xC001 0x00000037 - O_INTOP(0x00000037)   // 55 (55)
0x00000FCA: 0x8102            - O_CRITTER_ADD_TRAIT
0x00000FCC: 0x80BC            - O_SELF_OBJ
0x00000FCE: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000FD4: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000FDA: 0xC001 0x00000052 - O_INTOP(0x00000052)   // 82 (82)
0x00000FE0: 0x8102            - O_CRITTER_ADD_TRAIT
0x00000FE2: 0xC001 0x00001014 - O_INTOP(0x00001014)   // 4116 (4116)
0x00000FE8: 0x80C7            - O_SCRIPT_ACTION
0x00000FEA: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00000FF0: 0x8033            - O_EQUAL
0x00000FF2: 0x802F            - O_IF
0x00000FF4: 0xC001 0x0000100a - O_INTOP(0x0000100a)   // 4106 (4106)
0x00000FFA: 0x800D            - O_D_TO_A
0x00000FFC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001002: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001008: 0x8005            - O_CALL
0x0000100A: 0x801A            - O_POP
0x0000100C: 0xC001 0x00001356 - O_INTOP(0x00001356)   // 4950 (4950)
0x00001012: 0x8004            - O_JMP
0x00001014: 0xC001 0x0000104c - O_INTOP(0x0000104c)   // 4172 (4172)
0x0000101A: 0x80C7            - O_SCRIPT_ACTION
0x0000101C: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x00001022: 0x8033            - O_EQUAL
0x00001024: 0x80C7            - O_SCRIPT_ACTION
0x00001026: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x0000102C: 0x8033            - O_EQUAL
0x0000102E: 0x803F            - O_OR
0x00001030: 0x802F            - O_IF
0x00001032: 0x80B9            - O_SCRIPT_OVERRIDES
0x00001034: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x0000103A: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x00001040: 0x8105            - O_MESSAGE_STR
0x00001042: 0x80B8            - O_DISPLAY_MSG
0x00001044: 0xC001 0x00001356 - O_INTOP(0x00001356)   // 4950 (4950)
0x0000104A: 0x8004            - O_JMP
0x0000104C: 0xC001 0x000010c8 - O_INTOP(0x000010c8)   // 4296 (4296)
0x00001052: 0x80C7            - O_SCRIPT_ACTION
0x00001054: 0xC001 0x00000016 - O_INTOP(0x00000016)   // 22 (22)
0x0000105A: 0x8033            - O_EQUAL
0x0000105C: 0x802F            - O_IF
0x0000105E: 0xC001 0x0000109e - O_INTOP(0x0000109e)   // 4254 (4254)
0x00001064: 0x80F7            - O_FIXED_PARAM
0x00001066: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000106C: 0x8033            - O_EQUAL
0x0000106E: 0x802F            - O_IF
0x00001070: 0xC001 0x00001088 - O_INTOP(0x00001088)   // 4232 (4232)
0x00001076: 0x80BC            - O_SELF_OBJ
0x00001078: 0x80BF            - O_DUDE_OBJ
0x0000107A: 0x80DC            - O_OBJ_CAN_SEE_OBJ
0x0000107C: 0x802F            - O_IF
0x0000107E: 0x80F9            - O_DIALOGUE_SYSTEM_ENTER
0x00001080: 0xC001 0x00001096 - O_INTOP(0x00001096)   // 4246 (4246)
0x00001086: 0x8004            - O_JMP
0x00001088: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000108E: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00001094: 0x8013            - O_STORE_GLOBAL
0x00001096: 0xC001 0x000010c0 - O_INTOP(0x000010c0)   // 4288 (4288)
0x0000109C: 0x8004            - O_JMP
0x0000109E: 0xC001 0x000010c0 - O_INTOP(0x000010c0)   // 4288 (4288)
0x000010A4: 0x80F7            - O_FIXED_PARAM
0x000010A6: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000010AC: 0x8033            - O_EQUAL
0x000010AE: 0x8128            - O_COMBAT_IS_INITIALIZED
0x000010B0: 0x8045            - O_NOT
0x000010B2: 0x803E            - O_AND
0x000010B4: 0x802F            - O_IF
0x000010B6: 0x80BC            - O_SELF_OBJ
0x000010B8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000010BE: 0x80E3            - O_SET_OBJ_VISIBILITY
0x000010C0: 0xC001 0x00001356 - O_INTOP(0x00001356)   // 4950 (4950)
0x000010C6: 0x8004            - O_JMP
0x000010C8: 0xC001 0x00001230 - O_INTOP(0x00001230)   // 4656 (4656)
0x000010CE: 0x80C7            - O_SCRIPT_ACTION
0x000010D0: 0xC001 0x00000012 - O_INTOP(0x00000012)   // 18 (18)
0x000010D6: 0x8033            - O_EQUAL
0x000010D8: 0x802F            - O_IF
0x000010DA: 0xC001 0x00001210 - O_INTOP(0x00001210)   // 4624 (4624)
0x000010E0: 0x80BD            - O_SOURCE_OBJ
0x000010E2: 0x80BF            - O_DUDE_OBJ
0x000010E4: 0x8033            - O_EQUAL
0x000010E6: 0x802F            - O_IF
0x000010E8: 0xC001 0x00001154 - O_INTOP(0x00001154)   // 4436 (4436)
0x000010EE: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x000010F4: 0x80C5            - O_GLOBAL_VAR
0x000010F6: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x000010FC: 0x80C5            - O_GLOBAL_VAR
0x000010FE: 0x8039            - O_ADD
0x00001100: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00001106: 0x8036            - O_GREATER_EQUAL
0x00001108: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x0000110E: 0x80C5            - O_GLOBAL_VAR
0x00001110: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001116: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x0000111C: 0x80C5            - O_GLOBAL_VAR
0x0000111E: 0x803B            - O_MUL
0x00001120: 0x8038            - O_GREATER
0x00001122: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x00001128: 0x80C5            - O_GLOBAL_VAR
0x0000112A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001130: 0x8033            - O_EQUAL
0x00001132: 0x803F            - O_OR
0x00001134: 0x803E            - O_AND
0x00001136: 0x802F            - O_IF
0x00001138: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x0000113E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001144: 0x80C6            - O_SET_GLOBAL_VAR
0x00001146: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x0000114C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001152: 0x80C6            - O_SET_GLOBAL_VAR
0x00001154: 0xC001 0x000011c0 - O_INTOP(0x000011c0)   // 4544 (4544)
0x0000115A: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00001160: 0x80C5            - O_GLOBAL_VAR
0x00001162: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00001168: 0x80C5            - O_GLOBAL_VAR
0x0000116A: 0x8039            - O_ADD
0x0000116C: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00001172: 0x8036            - O_GREATER_EQUAL
0x00001174: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x0000117A: 0x80C5            - O_GLOBAL_VAR
0x0000117C: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001182: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00001188: 0x80C5            - O_GLOBAL_VAR
0x0000118A: 0x803B            - O_MUL
0x0000118C: 0x8038            - O_GREATER
0x0000118E: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x00001194: 0x80C5            - O_GLOBAL_VAR
0x00001196: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000119C: 0x8033            - O_EQUAL
0x0000119E: 0x803F            - O_OR
0x000011A0: 0x803E            - O_AND
0x000011A2: 0x802F            - O_IF
0x000011A4: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x000011AA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000011B0: 0x80C6            - O_SET_GLOBAL_VAR
0x000011B2: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x000011B8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000011BE: 0x80C6            - O_SET_GLOBAL_VAR
0x000011C0: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x000011C6: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x000011CC: 0x80C5            - O_GLOBAL_VAR
0x000011CE: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000011D4: 0x8039            - O_ADD
0x000011D6: 0x80C6            - O_SET_GLOBAL_VAR
0x000011D8: 0xC001 0x00001210 - O_INTOP(0x00001210)   // 4624 (4624)
0x000011DE: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x000011E4: 0x80C5            - O_GLOBAL_VAR
0x000011E6: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x000011EC: 0x803D            - O_MOD
0x000011EE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000011F4: 0x8033            - O_EQUAL
0x000011F6: 0x802F            - O_IF
0x000011F8: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x000011FE: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00001204: 0x80C5            - O_GLOBAL_VAR
0x00001206: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000120C: 0x8039            - O_ADD
0x0000120E: 0x80C6            - O_SET_GLOBAL_VAR
0x00001210: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001216: 0xC001 0x000001f4 - O_INTOP(0x000001f4)   // 500 (500)
0x0000121C: 0x8105            - O_MESSAGE_STR
0x0000121E: 0x80B8            - O_DISPLAY_MSG
0x00001220: 0xC001 0x000003e8 - O_INTOP(0x000003e8)   // 1000 (1000)
0x00001226: 0x80A1            - O_GIVE_EXP_POINTS
0x00001228: 0xC001 0x00001356 - O_INTOP(0x00001356)   // 4950 (4950)
0x0000122E: 0x8004            - O_JMP
0x00001230: 0xC001 0x00001258 - O_INTOP(0x00001258)   // 4696 (4696)
0x00001236: 0x80C7            - O_SCRIPT_ACTION
0x00001238: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000123E: 0x8033            - O_EQUAL
0x00001240: 0x802F            - O_IF
0x00001242: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001248: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x0000124E: 0x80C2            - O_SET_LOCAL_VAR
0x00001250: 0xC001 0x00001356 - O_INTOP(0x00001356)   // 4950 (4950)
0x00001256: 0x8004            - O_JMP
0x00001258: 0xC001 0x00001280 - O_INTOP(0x00001280)   // 4736 (4736)
0x0000125E: 0x80C7            - O_SCRIPT_ACTION
0x00001260: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x00001266: 0x8033            - O_EQUAL
0x00001268: 0x802F            - O_IF
0x0000126A: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001270: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001276: 0x80C2            - O_SET_LOCAL_VAR
0x00001278: 0xC001 0x00001356 - O_INTOP(0x00001356)   // 4950 (4950)
0x0000127E: 0x8004            - O_JMP
0x00001280: 0xC001 0x00001356 - O_INTOP(0x00001356)   // 4950 (4950)
0x00001286: 0x80C7            - O_SCRIPT_ACTION
0x00001288: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x0000128E: 0x8033            - O_EQUAL
0x00001290: 0x802F            - O_IF
0x00001292: 0xC001 0x000012e4 - O_INTOP(0x000012e4)   // 4836 (4836)
0x00001298: 0xC001 0x000000f1 - O_INTOP(0x000000f1)   // 241 (241)
0x0000129E: 0x80C5            - O_GLOBAL_VAR
0x000012A0: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000012A6: 0x8033            - O_EQUAL
0x000012A8: 0x802F            - O_IF
0x000012AA: 0xC001 0x000000f1 - O_INTOP(0x000000f1)   // 241 (241)
0x000012B0: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000012B6: 0x80C6            - O_SET_GLOBAL_VAR
0x000012B8: 0x9001 0x0000044a - O_STRINGOP(0x0000044a)   // 1098 (1098)
0x000012BE: 0x8014            - O_FETCH_EXTERNAL
0x000012C0: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000012C6: 0x80F2            - O_GAME_TICKS
0x000012C8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000012CE: 0x80F0            - O_ADD_TIMER_EVENT
0x000012D0: 0x80BC            - O_SELF_OBJ
0x000012D2: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000012D8: 0x80F2            - O_GAME_TICKS
0x000012DA: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000012E0: 0x80F0            - O_ADD_TIMER_EVENT
0x000012E2: 0x80F9            - O_DIALOGUE_SYSTEM_ENTER
0x000012E4: 0xC001 0x00001338 - O_INTOP(0x00001338)   // 4920 (4920)
0x000012EA: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000012F0: 0x80C1            - O_LOCAL_VAR
0x000012F2: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000012F8: 0x8033            - O_EQUAL
0x000012FA: 0x802F            - O_IF
0x000012FC: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001302: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001308: 0x80C2            - O_SET_LOCAL_VAR
0x0000130A: 0x80BF            - O_DUDE_OBJ
0x0000130C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001312: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001318: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000131E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001324: 0xC001 0x00007530 - O_INTOP(0x00007530)   // 30000 (30000)
0x0000132A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001330: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001336: 0x80D0            - O_ATTACK_COMPLEX
0x00001338: 0xC001 0x00001356 - O_INTOP(0x00001356)   // 4950 (4950)
0x0000133E: 0x80BC            - O_SELF_OBJ
0x00001340: 0x80D4            - O_TILE_NUM
0x00001342: 0xC001 0x00005ba1 - O_INTOP(0x00005ba1)   // 23457 (23457)
0x00001348: 0x8033            - O_EQUAL
0x0000134A: 0x802F            - O_IF
0x0000134C: 0x80BC            - O_SELF_OBJ
0x0000134E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001354: 0x80E3            - O_SET_OBJ_VISIBILITY
0x00001356: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000135C: 0x800D            - O_D_TO_A
0x0000135E: 0x8019            - O_SWAPA
0x00001360: 0x802A            - O_POP_TO_BASE
0x00001362: 0x8029            - O_POP_BASE
0x00001364: 0x800C            - O_A_TO_D
0x00001366: 0x801C            - O_POP_RETURN
0x00001368: 0x802A            - O_POP_TO_BASE
0x0000136A: 0x8029            - O_POP_BASE
0x0000136C: 0x801C            - O_POP_RETURN

2: do_dialogue (0x0000136e)
===============================
0x0000136E: 0x802B            - O_PUSH_BASE
0x00001370: 0xC001 0x00001386 - O_INTOP(0x00001386)   // 4998 (4998)
0x00001376: 0x800D            - O_D_TO_A
0x00001378: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000137E: 0xC001 0x0000005c - O_INTOP(0x0000005c)   // 92 (92)
0x00001384: 0x8005            - O_CALL
0x00001386: 0x801A            - O_POP
0x00001388: 0x80BF            - O_DUDE_OBJ
0x0000138A: 0xC001 0x00000022 - O_INTOP(0x00000022)   // 34 (34)
0x00001390: 0x80CA            - O_GET_CRITTER_STAT
0x00001392: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001398: 0x8033            - O_EQUAL
0x0000139A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000013A0: 0x8013            - O_STORE_GLOBAL
0x000013A2: 0xC001 0x000013f2 - O_INTOP(0x000013f2)   // 5106 (5106)
0x000013A8: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000013AE: 0x80C1            - O_LOCAL_VAR
0x000013B0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000013B6: 0x8034            - O_NOT_EQUAL
0x000013B8: 0x802F            - O_IF
0x000013BA: 0x80BC            - O_SELF_OBJ
0x000013BC: 0xC001 0x000002fe - O_INTOP(0x000002fe)   // 766 (766)
0x000013C2: 0xC001 0x000000ac - O_INTOP(0x000000ac)   // 172 (172)
0x000013C8: 0x8105            - O_MESSAGE_STR
0x000013CA: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000013D0: 0x810A            - O_FLOAT_MSG
0x000013D2: 0xC001 0x000013e8 - O_INTOP(0x000013e8)   // 5096 (5096)
0x000013D8: 0x800D            - O_D_TO_A
0x000013DA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000013E0: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000013E6: 0x8005            - O_CALL
0x000013E8: 0x801A            - O_POP
0x000013EA: 0xC001 0x0000154c - O_INTOP(0x0000154c)   // 5452 (5452)
0x000013F0: 0x8004            - O_JMP
0x000013F2: 0xC001 0x00001448 - O_INTOP(0x00001448)   // 5192 (5192)
0x000013F8: 0xC001 0x000000f1 - O_INTOP(0x000000f1)   // 241 (241)
0x000013FE: 0x80C5            - O_GLOBAL_VAR
0x00001400: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001406: 0x8033            - O_EQUAL
0x00001408: 0x802F            - O_IF
0x0000140A: 0xC001 0x000000f1 - O_INTOP(0x000000f1)   // 241 (241)
0x00001410: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001416: 0x80C6            - O_SET_GLOBAL_VAR
0x00001418: 0xC001 0x0000142e - O_INTOP(0x0000142e)   // 5166 (5166)
0x0000141E: 0x800D            - O_D_TO_A
0x00001420: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001426: 0xC001 0x00000056 - O_INTOP(0x00000056)   // 86 (86)
0x0000142C: 0x8005            - O_CALL
0x0000142E: 0x801A            - O_POP
0x00001430: 0x80BC            - O_SELF_OBJ
0x00001432: 0xC001 0x00005ba1 - O_INTOP(0x00005ba1)   // 23457 (23457)
0x00001438: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000143E: 0x80CE            - O_ANIMATE_MOVE_OBJ_TO_TILE
0x00001440: 0xC001 0x0000154c - O_INTOP(0x0000154c)   // 5452 (5452)
0x00001446: 0x8004            - O_JMP
0x00001448: 0xC001 0x00001486 - O_INTOP(0x00001486)   // 5254 (5254)
0x0000144E: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00001454: 0x8012            - O_FETCH_GLOBAL
0x00001456: 0x802F            - O_IF
0x00001458: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000145E: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00001464: 0x8013            - O_STORE_GLOBAL
0x00001466: 0xC001 0x0000147c - O_INTOP(0x0000147c)   // 5244 (5244)
0x0000146C: 0x800D            - O_D_TO_A
0x0000146E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001474: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x0000147A: 0x8005            - O_CALL
0x0000147C: 0x801A            - O_POP
0x0000147E: 0xC001 0x0000154c - O_INTOP(0x0000154c)   // 5452 (5452)
0x00001484: 0x8004            - O_JMP
0x00001486: 0xC001 0x000014da - O_INTOP(0x000014da)   // 5338 (5338)
0x0000148C: 0x8101            - O_CUR_MAP_INDEX
0x0000148E: 0xC001 0x00000011 - O_INTOP(0x00000011)   // 17 (17)
0x00001494: 0x8033            - O_EQUAL
0x00001496: 0x802F            - O_IF
0x00001498: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x0000149E: 0x80BC            - O_SELF_OBJ
0x000014A0: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000014A6: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000014AC: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x000014B2: 0x80DE            - O_START_GDIALOG
0x000014B4: 0x811C            - O_GSAY_START
0x000014B6: 0xC001 0x000014cc - O_INTOP(0x000014cc)   // 5324 (5324)
0x000014BC: 0x800D            - O_D_TO_A
0x000014BE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000014C4: 0xC001 0x00000029 - O_INTOP(0x00000029)   // 41 (41)
0x000014CA: 0x8005            - O_CALL
0x000014CC: 0x801A            - O_POP
0x000014CE: 0x811D            - O_GSAY_END
0x000014D0: 0x80DF            - O_END_DIALOGUE
0x000014D2: 0xC001 0x0000154c - O_INTOP(0x0000154c)   // 5452 (5452)
0x000014D8: 0x8004            - O_JMP
0x000014DA: 0xC001 0x00001512 - O_INTOP(0x00001512)   // 5394 (5394)
0x000014E0: 0xC001 0x000000f1 - O_INTOP(0x000000f1)   // 241 (241)
0x000014E6: 0x80C5            - O_GLOBAL_VAR
0x000014E8: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000014EE: 0x8033            - O_EQUAL
0x000014F0: 0x802F            - O_IF
0x000014F2: 0x80BC            - O_SELF_OBJ
0x000014F4: 0xC001 0x000002fe - O_INTOP(0x000002fe)   // 766 (766)
0x000014FA: 0xC001 0x000000ab - O_INTOP(0x000000ab)   // 171 (171)
0x00001500: 0x8105            - O_MESSAGE_STR
0x00001502: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001508: 0x810A            - O_FLOAT_MSG
0x0000150A: 0xC001 0x0000154c - O_INTOP(0x0000154c)   // 5452 (5452)
0x00001510: 0x8004            - O_JMP
0x00001512: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001518: 0x80BC            - O_SELF_OBJ
0x0000151A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001520: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001526: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x0000152C: 0x80DE            - O_START_GDIALOG
0x0000152E: 0x811C            - O_GSAY_START
0x00001530: 0xC001 0x00001546 - O_INTOP(0x00001546)   // 5446 (5446)
0x00001536: 0x800D            - O_D_TO_A
0x00001538: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000153E: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001544: 0x8005            - O_CALL
0x00001546: 0x801A            - O_POP
0x00001548: 0x811D            - O_GSAY_END
0x0000154A: 0x80DF            - O_END_DIALOGUE
0x0000154C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001552: 0x800D            - O_D_TO_A
0x00001554: 0x8019            - O_SWAPA
0x00001556: 0x802A            - O_POP_TO_BASE
0x00001558: 0x8029            - O_POP_BASE
0x0000155A: 0x800C            - O_A_TO_D
0x0000155C: 0x801C            - O_POP_RETURN
0x0000155E: 0x802A            - O_POP_TO_BASE
0x00001560: 0x8029            - O_POP_BASE
0x00001562: 0x801C            - O_POP_RETURN

3: morphend (0x00001564)
===============================
0x00001564: 0x802B            - O_PUSH_BASE
0x00001566: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000156C: 0x800D            - O_D_TO_A
0x0000156E: 0x8019            - O_SWAPA
0x00001570: 0x802A            - O_POP_TO_BASE
0x00001572: 0x8029            - O_POP_BASE
0x00001574: 0x800C            - O_A_TO_D
0x00001576: 0x801C            - O_POP_RETURN
0x00001578: 0x802A            - O_POP_TO_BASE
0x0000157A: 0x8029            - O_POP_BASE
0x0000157C: 0x801C            - O_POP_RETURN

4: morphcbt (0x0000157e)
===============================
0x0000157E: 0x802B            - O_PUSH_BASE
0x00001580: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001586: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x0000158C: 0x80C2            - O_SET_LOCAL_VAR
0x0000158E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001594: 0x800D            - O_D_TO_A
0x00001596: 0x8019            - O_SWAPA
0x00001598: 0x802A            - O_POP_TO_BASE
0x0000159A: 0x8029            - O_POP_BASE
0x0000159C: 0x800C            - O_A_TO_D
0x0000159E: 0x801C            - O_POP_RETURN
0x000015A0: 0x802A            - O_POP_TO_BASE
0x000015A2: 0x8029            - O_POP_BASE
0x000015A4: 0x801C            - O_POP_RETURN

5: morph02 (0x000015a6)
===============================
0x000015A6: 0x802B            - O_PUSH_BASE
0x000015A8: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x000015AE: 0xC001 0x00000065 - O_INTOP(0x00000065)   // 101 (101)
0x000015B4: 0x811E            - O_GSAY_REPLY
0x000015B6: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000015BC: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x000015C2: 0xC001 0x00000066 - O_INTOP(0x00000066)   // 102 (102)
0x000015C8: 0xC001 0x00000007 - O_INTOP(0x00000007)   // 7 (7)
0x000015CE: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000015D4: 0x8121            - O_GIQ_OPTION
0x000015D6: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000015DC: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x000015E2: 0xC001 0x00000067 - O_INTOP(0x00000067)   // 103 (103)
0x000015E8: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x000015EE: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000015F4: 0x8121            - O_GIQ_OPTION
0x000015F6: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000015FC: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001602: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001608: 0xC001 0x00000068 - O_INTOP(0x00000068)   // 104 (104)
0x0000160E: 0x8105            - O_MESSAGE_STR
0x00001610: 0x80BF            - O_DUDE_OBJ
0x00001612: 0x8100            - O_OBJ_PID
0x00001614: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000161A: 0x8104            - O_PROTO_DATA
0x0000161C: 0x8039            - O_ADD
0x0000161E: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001624: 0xC001 0x00000069 - O_INTOP(0x00000069)   // 105 (105)
0x0000162A: 0x8105            - O_MESSAGE_STR
0x0000162C: 0x8039            - O_ADD
0x0000162E: 0xC001 0x00000027 - O_INTOP(0x00000027)   // 39 (39)
0x00001634: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000163A: 0x8121            - O_GIQ_OPTION
0x0000163C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001642: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001648: 0xC001 0x0000006a - O_INTOP(0x0000006a)   // 106 (106)
0x0000164E: 0xC001 0x00000010 - O_INTOP(0x00000010)   // 16 (16)
0x00001654: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x0000165A: 0x8121            - O_GIQ_OPTION
0x0000165C: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001662: 0x8046            - O_NEGATE
0x00001664: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x0000166A: 0xC001 0x0000006b - O_INTOP(0x0000006b)   // 107 (107)
0x00001670: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00001676: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000167C: 0x8121            - O_GIQ_OPTION
0x0000167E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001684: 0x800D            - O_D_TO_A
0x00001686: 0x8019            - O_SWAPA
0x00001688: 0x802A            - O_POP_TO_BASE
0x0000168A: 0x8029            - O_POP_BASE
0x0000168C: 0x800C            - O_A_TO_D
0x0000168E: 0x801C            - O_POP_RETURN
0x00001690: 0x802A            - O_POP_TO_BASE
0x00001692: 0x8029            - O_POP_BASE
0x00001694: 0x801C            - O_POP_RETURN

6: morph02a (0x00001696)
===============================
0x00001696: 0x802B            - O_PUSH_BASE
0x00001698: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x0000169E: 0xC001 0x0000006c - O_INTOP(0x0000006c)   // 108 (108)
0x000016A4: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x000016AA: 0x8120            - O_GSAY_MESSAGE
0x000016AC: 0xC001 0x000016c2 - O_INTOP(0x000016c2)   // 5826 (5826)
0x000016B2: 0x800D            - O_D_TO_A
0x000016B4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000016BA: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000016C0: 0x8005            - O_CALL
0x000016C2: 0x801A            - O_POP
0x000016C4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000016CA: 0x800D            - O_D_TO_A
0x000016CC: 0x8019            - O_SWAPA
0x000016CE: 0x802A            - O_POP_TO_BASE
0x000016D0: 0x8029            - O_POP_BASE
0x000016D2: 0x800C            - O_A_TO_D
0x000016D4: 0x801C            - O_POP_RETURN
0x000016D6: 0x802A            - O_POP_TO_BASE
0x000016D8: 0x8029            - O_POP_BASE
0x000016DA: 0x801C            - O_POP_RETURN

7: morph02_1 (0x000016dc)
===============================
0x000016DC: 0x802B            - O_PUSH_BASE
0x000016DE: 0xC001 0x0000171a - O_INTOP(0x0000171a)   // 5914 (5914)
0x000016E4: 0x80BF            - O_DUDE_OBJ
0x000016E6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000016EC: 0x8106            - O_CRITTER_INVEN_OBJ
0x000016EE: 0x8100            - O_OBJ_PID
0x000016F0: 0xC001 0x00000071 - O_INTOP(0x00000071)   // 113 (113)
0x000016F6: 0x8033            - O_EQUAL
0x000016F8: 0x802F            - O_IF
0x000016FA: 0xC001 0x00001710 - O_INTOP(0x00001710)   // 5904 (5904)
0x00001700: 0x800D            - O_D_TO_A
0x00001702: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001708: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x0000170E: 0x8005            - O_CALL
0x00001710: 0x801A            - O_POP
0x00001712: 0xC001 0x00001732 - O_INTOP(0x00001732)   // 5938 (5938)
0x00001718: 0x8004            - O_JMP
0x0000171A: 0xC001 0x00001730 - O_INTOP(0x00001730)   // 5936 (5936)
0x00001720: 0x800D            - O_D_TO_A
0x00001722: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001728: 0xC001 0x00000010 - O_INTOP(0x00000010)   // 16 (16)
0x0000172E: 0x8005            - O_CALL
0x00001730: 0x801A            - O_POP
0x00001732: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001738: 0x800D            - O_D_TO_A
0x0000173A: 0x8019            - O_SWAPA
0x0000173C: 0x802A            - O_POP_TO_BASE
0x0000173E: 0x8029            - O_POP_BASE
0x00001740: 0x800C            - O_A_TO_D
0x00001742: 0x801C            - O_POP_RETURN
0x00001744: 0x802A            - O_POP_TO_BASE
0x00001746: 0x8029            - O_POP_BASE
0x00001748: 0x801C            - O_POP_RETURN

8: morph02_2 (0x0000174a)
===============================
0x0000174A: 0x802B            - O_PUSH_BASE
0x0000174C: 0xC001 0x00001786 - O_INTOP(0x00001786)   // 6022 (6022)
0x00001752: 0x80BF            - O_DUDE_OBJ
0x00001754: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x0000175A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001760: 0x80AC            - O_ROLL_VS_SKILL
0x00001762: 0x80AF            - O_IS_SUCCESS
0x00001764: 0x802F            - O_IF
0x00001766: 0xC001 0x0000177c - O_INTOP(0x0000177c)   // 6012 (6012)
0x0000176C: 0x800D            - O_D_TO_A
0x0000176E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001774: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x0000177A: 0x8005            - O_CALL
0x0000177C: 0x801A            - O_POP
0x0000177E: 0xC001 0x0000179e - O_INTOP(0x0000179e)   // 6046 (6046)
0x00001784: 0x8004            - O_JMP
0x00001786: 0xC001 0x0000179c - O_INTOP(0x0000179c)   // 6044 (6044)
0x0000178C: 0x800D            - O_D_TO_A
0x0000178E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001794: 0xC001 0x00000010 - O_INTOP(0x00000010)   // 16 (16)
0x0000179A: 0x8005            - O_CALL
0x0000179C: 0x801A            - O_POP
0x0000179E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000017A4: 0x800D            - O_D_TO_A
0x000017A6: 0x8019            - O_SWAPA
0x000017A8: 0x802A            - O_POP_TO_BASE
0x000017AA: 0x8029            - O_POP_BASE
0x000017AC: 0x800C            - O_A_TO_D
0x000017AE: 0x801C            - O_POP_RETURN
0x000017B0: 0x802A            - O_POP_TO_BASE
0x000017B2: 0x8029            - O_POP_BASE
0x000017B4: 0x801C            - O_POP_RETURN

9: morph02_3 (0x000017b6)
===============================
0x000017B6: 0x802B            - O_PUSH_BASE
0x000017B8: 0xC001 0x000017f2 - O_INTOP(0x000017f2)   // 6130 (6130)
0x000017BE: 0x80BF            - O_DUDE_OBJ
0x000017C0: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x000017C6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000017CC: 0x80AC            - O_ROLL_VS_SKILL
0x000017CE: 0x80AF            - O_IS_SUCCESS
0x000017D0: 0x802F            - O_IF
0x000017D2: 0xC001 0x000017e8 - O_INTOP(0x000017e8)   // 6120 (6120)
0x000017D8: 0x800D            - O_D_TO_A
0x000017DA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000017E0: 0xC001 0x00000011 - O_INTOP(0x00000011)   // 17 (17)
0x000017E6: 0x8005            - O_CALL
0x000017E8: 0x801A            - O_POP
0x000017EA: 0xC001 0x0000180a - O_INTOP(0x0000180a)   // 6154 (6154)
0x000017F0: 0x8004            - O_JMP
0x000017F2: 0xC001 0x00001808 - O_INTOP(0x00001808)   // 6152 (6152)
0x000017F8: 0x800D            - O_D_TO_A
0x000017FA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001800: 0xC001 0x00000026 - O_INTOP(0x00000026)   // 38 (38)
0x00001806: 0x8005            - O_CALL
0x00001808: 0x801A            - O_POP
0x0000180A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001810: 0x800D            - O_D_TO_A
0x00001812: 0x8019            - O_SWAPA
0x00001814: 0x802A            - O_POP_TO_BASE
0x00001816: 0x8029            - O_POP_BASE
0x00001818: 0x800C            - O_A_TO_D
0x0000181A: 0x801C            - O_POP_RETURN
0x0000181C: 0x802A            - O_POP_TO_BASE
0x0000181E: 0x8029            - O_POP_BASE
0x00001820: 0x801C            - O_POP_RETURN

10: morph03 (0x00001822)
===============================
0x00001822: 0x802B            - O_PUSH_BASE
0x00001824: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x0000182A: 0xC001 0x0000006d - O_INTOP(0x0000006d)   // 109 (109)
0x00001830: 0x811E            - O_GSAY_REPLY
0x00001832: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001838: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x0000183E: 0xC001 0x0000006e - O_INTOP(0x0000006e)   // 110 (110)
0x00001844: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x0000184A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001850: 0x8121            - O_GIQ_OPTION
0x00001852: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001858: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x0000185E: 0xC001 0x0000006f - O_INTOP(0x0000006f)   // 111 (111)
0x00001864: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x0000186A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001870: 0x8121            - O_GIQ_OPTION
0x00001872: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001878: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x0000187E: 0xC001 0x00000070 - O_INTOP(0x00000070)   // 112 (112)
0x00001884: 0xC001 0x00000024 - O_INTOP(0x00000024)   // 36 (36)
0x0000188A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001890: 0x8121            - O_GIQ_OPTION
0x00001892: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001898: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x0000189E: 0xC001 0x00000071 - O_INTOP(0x00000071)   // 113 (113)
0x000018A4: 0xC001 0x00000025 - O_INTOP(0x00000025)   // 37 (37)
0x000018AA: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x000018B0: 0x8121            - O_GIQ_OPTION
0x000018B2: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000018B8: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x000018BE: 0xC001 0x00000072 - O_INTOP(0x00000072)   // 114 (114)
0x000018C4: 0xC001 0x00000010 - O_INTOP(0x00000010)   // 16 (16)
0x000018CA: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000018D0: 0x8121            - O_GIQ_OPTION
0x000018D2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000018D8: 0x800D            - O_D_TO_A
0x000018DA: 0x8019            - O_SWAPA
0x000018DC: 0x802A            - O_POP_TO_BASE
0x000018DE: 0x8029            - O_POP_BASE
0x000018E0: 0x800C            - O_A_TO_D
0x000018E2: 0x801C            - O_POP_RETURN
0x000018E4: 0x802A            - O_POP_TO_BASE
0x000018E6: 0x8029            - O_POP_BASE
0x000018E8: 0x801C            - O_POP_RETURN

11: morph03_1 (0x000018ea)
===============================
0x000018EA: 0x802B            - O_PUSH_BASE
0x000018EC: 0xC001 0x00001926 - O_INTOP(0x00001926)   // 6438 (6438)
0x000018F2: 0x80BF            - O_DUDE_OBJ
0x000018F4: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x000018FA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001900: 0x80AC            - O_ROLL_VS_SKILL
0x00001902: 0x80AF            - O_IS_SUCCESS
0x00001904: 0x802F            - O_IF
0x00001906: 0xC001 0x0000191c - O_INTOP(0x0000191c)   // 6428 (6428)
0x0000190C: 0x800D            - O_D_TO_A
0x0000190E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001914: 0xC001 0x0000000d - O_INTOP(0x0000000d)   // 13 (13)
0x0000191A: 0x8005            - O_CALL
0x0000191C: 0x801A            - O_POP
0x0000191E: 0xC001 0x0000193e - O_INTOP(0x0000193e)   // 6462 (6462)
0x00001924: 0x8004            - O_JMP
0x00001926: 0xC001 0x0000193c - O_INTOP(0x0000193c)   // 6460 (6460)
0x0000192C: 0x800D            - O_D_TO_A
0x0000192E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001934: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x0000193A: 0x8005            - O_CALL
0x0000193C: 0x801A            - O_POP
0x0000193E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001944: 0x800D            - O_D_TO_A
0x00001946: 0x8019            - O_SWAPA
0x00001948: 0x802A            - O_POP_TO_BASE
0x0000194A: 0x8029            - O_POP_BASE
0x0000194C: 0x800C            - O_A_TO_D
0x0000194E: 0x801C            - O_POP_RETURN
0x00001950: 0x802A            - O_POP_TO_BASE
0x00001952: 0x8029            - O_POP_BASE
0x00001954: 0x801C            - O_POP_RETURN

12: morph03_2 (0x00001956)
===============================
0x00001956: 0x802B            - O_PUSH_BASE
0x00001958: 0xC001 0x00001994 - O_INTOP(0x00001994)   // 6548 (6548)
0x0000195E: 0x80BF            - O_DUDE_OBJ
0x00001960: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x00001966: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x0000196C: 0x8046            - O_NEGATE
0x0000196E: 0x80AC            - O_ROLL_VS_SKILL
0x00001970: 0x80AF            - O_IS_SUCCESS
0x00001972: 0x802F            - O_IF
0x00001974: 0xC001 0x0000198a - O_INTOP(0x0000198a)   // 6538 (6538)
0x0000197A: 0x800D            - O_D_TO_A
0x0000197C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001982: 0xC001 0x0000000d - O_INTOP(0x0000000d)   // 13 (13)
0x00001988: 0x8005            - O_CALL
0x0000198A: 0x801A            - O_POP
0x0000198C: 0xC001 0x000019ac - O_INTOP(0x000019ac)   // 6572 (6572)
0x00001992: 0x8004            - O_JMP
0x00001994: 0xC001 0x000019aa - O_INTOP(0x000019aa)   // 6570 (6570)
0x0000199A: 0x800D            - O_D_TO_A
0x0000199C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000019A2: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x000019A8: 0x8005            - O_CALL
0x000019AA: 0x801A            - O_POP
0x000019AC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000019B2: 0x800D            - O_D_TO_A
0x000019B4: 0x8019            - O_SWAPA
0x000019B6: 0x802A            - O_POP_TO_BASE
0x000019B8: 0x8029            - O_POP_BASE
0x000019BA: 0x800C            - O_A_TO_D
0x000019BC: 0x801C            - O_POP_RETURN
0x000019BE: 0x802A            - O_POP_TO_BASE
0x000019C0: 0x8029            - O_POP_BASE
0x000019C2: 0x801C            - O_POP_RETURN

13: morph04 (0x000019c4)
===============================
0x000019C4: 0x802B            - O_PUSH_BASE
0x000019C6: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x000019CC: 0xC001 0x00000073 - O_INTOP(0x00000073)   // 115 (115)
0x000019D2: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000019D8: 0x8120            - O_GSAY_MESSAGE
0x000019DA: 0xC001 0x000019f0 - O_INTOP(0x000019f0)   // 6640 (6640)
0x000019E0: 0x800D            - O_D_TO_A
0x000019E2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000019E8: 0xC001 0x00000053 - O_INTOP(0x00000053)   // 83 (83)
0x000019EE: 0x8005            - O_CALL
0x000019F0: 0x801A            - O_POP
0x000019F2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000019F8: 0x800D            - O_D_TO_A
0x000019FA: 0x8019            - O_SWAPA
0x000019FC: 0x802A            - O_POP_TO_BASE
0x000019FE: 0x8029            - O_POP_BASE
0x00001A00: 0x800C            - O_A_TO_D
0x00001A02: 0x801C            - O_POP_RETURN
0x00001A04: 0x802A            - O_POP_TO_BASE
0x00001A06: 0x8029            - O_POP_BASE
0x00001A08: 0x801C            - O_POP_RETURN

14: morph04a (0x00001a0a)
===============================
0x00001A0A: 0x802B            - O_PUSH_BASE
0x00001A0C: 0x80BC            - O_SELF_OBJ
0x00001A0E: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001A14: 0xC001 0x00000074 - O_INTOP(0x00000074)   // 116 (116)
0x00001A1A: 0x8105            - O_MESSAGE_STR
0x00001A1C: 0xC001 0x00000007 - O_INTOP(0x00000007)   // 7 (7)
0x00001A22: 0x810A            - O_FLOAT_MSG
0x00001A24: 0xC001 0x00001a3a - O_INTOP(0x00001a3a)   // 6714 (6714)
0x00001A2A: 0x800D            - O_D_TO_A
0x00001A2C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001A32: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001A38: 0x8005            - O_CALL
0x00001A3A: 0x801A            - O_POP
0x00001A3C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001A42: 0x800D            - O_D_TO_A
0x00001A44: 0x8019            - O_SWAPA
0x00001A46: 0x802A            - O_POP_TO_BASE
0x00001A48: 0x8029            - O_POP_BASE
0x00001A4A: 0x800C            - O_A_TO_D
0x00001A4C: 0x801C            - O_POP_RETURN
0x00001A4E: 0x802A            - O_POP_TO_BASE
0x00001A50: 0x8029            - O_POP_BASE
0x00001A52: 0x801C            - O_POP_RETURN

15: morph05 (0x00001a54)
===============================
0x00001A54: 0x802B            - O_PUSH_BASE
0x00001A56: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001A5C: 0xC001 0x00000075 - O_INTOP(0x00000075)   // 117 (117)
0x00001A62: 0x811E            - O_GSAY_REPLY
0x00001A64: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001A6A: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001A70: 0xC001 0x00000076 - O_INTOP(0x00000076)   // 118 (118)
0x00001A76: 0xC001 0x00000057 - O_INTOP(0x00000057)   // 87 (87)
0x00001A7C: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x00001A82: 0x8121            - O_GIQ_OPTION
0x00001A84: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001A8A: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001A90: 0xC001 0x00000077 - O_INTOP(0x00000077)   // 119 (119)
0x00001A96: 0xC001 0x0000005b - O_INTOP(0x0000005b)   // 91 (91)
0x00001A9C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001AA2: 0x8121            - O_GIQ_OPTION
0x00001AA4: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001AAA: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001AB0: 0xC001 0x00000078 - O_INTOP(0x00000078)   // 120 (120)
0x00001AB6: 0xC001 0x00000010 - O_INTOP(0x00000010)   // 16 (16)
0x00001ABC: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x00001AC2: 0x8121            - O_GIQ_OPTION
0x00001AC4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001ACA: 0x800D            - O_D_TO_A
0x00001ACC: 0x8019            - O_SWAPA
0x00001ACE: 0x802A            - O_POP_TO_BASE
0x00001AD0: 0x8029            - O_POP_BASE
0x00001AD2: 0x800C            - O_A_TO_D
0x00001AD4: 0x801C            - O_POP_RETURN
0x00001AD6: 0x802A            - O_POP_TO_BASE
0x00001AD8: 0x8029            - O_POP_BASE
0x00001ADA: 0x801C            - O_POP_RETURN

16: morph06 (0x00001adc)
===============================
0x00001ADC: 0x802B            - O_PUSH_BASE
0x00001ADE: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001AE4: 0xC001 0x00000079 - O_INTOP(0x00000079)   // 121 (121)
0x00001AEA: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x00001AF0: 0x8120            - O_GSAY_MESSAGE
0x00001AF2: 0xC001 0x00001b08 - O_INTOP(0x00001b08)   // 6920 (6920)
0x00001AF8: 0x800D            - O_D_TO_A
0x00001AFA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001B00: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001B06: 0x8005            - O_CALL
0x00001B08: 0x801A            - O_POP
0x00001B0A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001B10: 0x800D            - O_D_TO_A
0x00001B12: 0x8019            - O_SWAPA
0x00001B14: 0x802A            - O_POP_TO_BASE
0x00001B16: 0x8029            - O_POP_BASE
0x00001B18: 0x800C            - O_A_TO_D
0x00001B1A: 0x801C            - O_POP_RETURN
0x00001B1C: 0x802A            - O_POP_TO_BASE
0x00001B1E: 0x8029            - O_POP_BASE
0x00001B20: 0x801C            - O_POP_RETURN

17: morph07 (0x00001b22)
===============================
0x00001B22: 0x802B            - O_PUSH_BASE
0x00001B24: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001B2A: 0xC001 0x0000007a - O_INTOP(0x0000007a)   // 122 (122)
0x00001B30: 0x811E            - O_GSAY_REPLY
0x00001B32: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001B38: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001B3E: 0xC001 0x0000007b - O_INTOP(0x0000007b)   // 123 (123)
0x00001B44: 0xC001 0x00000013 - O_INTOP(0x00000013)   // 19 (19)
0x00001B4A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001B50: 0x8121            - O_GIQ_OPTION
0x00001B52: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001B58: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001B5E: 0xC001 0x0000007c - O_INTOP(0x0000007c)   // 124 (124)
0x00001B64: 0xC001 0x0000001c - O_INTOP(0x0000001c)   // 28 (28)
0x00001B6A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001B70: 0x8121            - O_GIQ_OPTION
0x00001B72: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00001B78: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001B7E: 0xC001 0x0000007d - O_INTOP(0x0000007d)   // 125 (125)
0x00001B84: 0xC001 0x00000012 - O_INTOP(0x00000012)   // 18 (18)
0x00001B8A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001B90: 0x8121            - O_GIQ_OPTION
0x00001B92: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001B98: 0x800D            - O_D_TO_A
0x00001B9A: 0x8019            - O_SWAPA
0x00001B9C: 0x802A            - O_POP_TO_BASE
0x00001B9E: 0x8029            - O_POP_BASE
0x00001BA0: 0x800C            - O_A_TO_D
0x00001BA2: 0x801C            - O_POP_RETURN
0x00001BA4: 0x802A            - O_POP_TO_BASE
0x00001BA6: 0x8029            - O_POP_BASE
0x00001BA8: 0x801C            - O_POP_RETURN

18: morph07_1 (0x00001baa)
===============================
0x00001BAA: 0x802B            - O_PUSH_BASE
0x00001BAC: 0xC001 0x00001be6 - O_INTOP(0x00001be6)   // 7142 (7142)
0x00001BB2: 0x80BF            - O_DUDE_OBJ
0x00001BB4: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x00001BBA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001BC0: 0x80AC            - O_ROLL_VS_SKILL
0x00001BC2: 0x80AF            - O_IS_SUCCESS
0x00001BC4: 0x802F            - O_IF
0x00001BC6: 0xC001 0x00001bdc - O_INTOP(0x00001bdc)   // 7132 (7132)
0x00001BCC: 0x800D            - O_D_TO_A
0x00001BCE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001BD4: 0xC001 0x00000022 - O_INTOP(0x00000022)   // 34 (34)
0x00001BDA: 0x8005            - O_CALL
0x00001BDC: 0x801A            - O_POP
0x00001BDE: 0xC001 0x00001bfe - O_INTOP(0x00001bfe)   // 7166 (7166)
0x00001BE4: 0x8004            - O_JMP
0x00001BE6: 0xC001 0x00001bfc - O_INTOP(0x00001bfc)   // 7164 (7164)
0x00001BEC: 0x800D            - O_D_TO_A
0x00001BEE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001BF4: 0xC001 0x00000023 - O_INTOP(0x00000023)   // 35 (35)
0x00001BFA: 0x8005            - O_CALL
0x00001BFC: 0x801A            - O_POP
0x00001BFE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001C04: 0x800D            - O_D_TO_A
0x00001C06: 0x8019            - O_SWAPA
0x00001C08: 0x802A            - O_POP_TO_BASE
0x00001C0A: 0x8029            - O_POP_BASE
0x00001C0C: 0x800C            - O_A_TO_D
0x00001C0E: 0x801C            - O_POP_RETURN
0x00001C10: 0x802A            - O_POP_TO_BASE
0x00001C12: 0x8029            - O_POP_BASE
0x00001C14: 0x801C            - O_POP_RETURN

19: morph08 (0x00001c16)
===============================
0x00001C16: 0x802B            - O_PUSH_BASE
0x00001C18: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001C1E: 0xC001 0x0000007e - O_INTOP(0x0000007e)   // 126 (126)
0x00001C24: 0x811E            - O_GSAY_REPLY
0x00001C26: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001C2C: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001C32: 0xC001 0x0000007f - O_INTOP(0x0000007f)   // 127 (127)
0x00001C38: 0xC001 0x00000058 - O_INTOP(0x00000058)   // 88 (88)
0x00001C3E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001C44: 0x8121            - O_GIQ_OPTION
0x00001C46: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001C4C: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001C52: 0xC001 0x00000080 - O_INTOP(0x00000080)   // 128 (128)
0x00001C58: 0xC001 0x00000018 - O_INTOP(0x00000018)   // 24 (24)
0x00001C5E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001C64: 0x8121            - O_GIQ_OPTION
0x00001C66: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001C6C: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001C72: 0xC001 0x00000081 - O_INTOP(0x00000081)   // 129 (129)
0x00001C78: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x00001C7E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001C84: 0x8121            - O_GIQ_OPTION
0x00001C86: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001C8C: 0x800D            - O_D_TO_A
0x00001C8E: 0x8019            - O_SWAPA
0x00001C90: 0x802A            - O_POP_TO_BASE
0x00001C92: 0x8029            - O_POP_BASE
0x00001C94: 0x800C            - O_A_TO_D
0x00001C96: 0x801C            - O_POP_RETURN
0x00001C98: 0x802A            - O_POP_TO_BASE
0x00001C9A: 0x8029            - O_POP_BASE
0x00001C9C: 0x801C            - O_POP_RETURN

20: morph09 (0x00001c9e)
===============================
0x00001C9E: 0x802B            - O_PUSH_BASE
0x00001CA0: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001CA6: 0xC001 0x00000082 - O_INTOP(0x00000082)   // 130 (130)
0x00001CAC: 0x811E            - O_GSAY_REPLY
0x00001CAE: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001CB4: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001CBA: 0xC001 0x00000083 - O_INTOP(0x00000083)   // 131 (131)
0x00001CC0: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x00001CC6: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001CCC: 0x8121            - O_GIQ_OPTION
0x00001CCE: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001CD4: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001CDA: 0xC001 0x00000084 - O_INTOP(0x00000084)   // 132 (132)
0x00001CE0: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x00001CE6: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001CEC: 0x8121            - O_GIQ_OPTION
0x00001CEE: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001CF4: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001CFA: 0xC001 0x00000085 - O_INTOP(0x00000085)   // 133 (133)
0x00001D00: 0xC001 0x00000010 - O_INTOP(0x00000010)   // 16 (16)
0x00001D06: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x00001D0C: 0x8121            - O_GIQ_OPTION
0x00001D0E: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001D14: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001D1A: 0xC001 0x00000086 - O_INTOP(0x00000086)   // 134 (134)
0x00001D20: 0xC001 0x00000017 - O_INTOP(0x00000017)   // 23 (23)
0x00001D26: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x00001D2C: 0x8121            - O_GIQ_OPTION
0x00001D2E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001D34: 0x800D            - O_D_TO_A
0x00001D36: 0x8019            - O_SWAPA
0x00001D38: 0x802A            - O_POP_TO_BASE
0x00001D3A: 0x8029            - O_POP_BASE
0x00001D3C: 0x800C            - O_A_TO_D
0x00001D3E: 0x801C            - O_POP_RETURN
0x00001D40: 0x802A            - O_POP_TO_BASE
0x00001D42: 0x8029            - O_POP_BASE
0x00001D44: 0x801C            - O_POP_RETURN

21: morph10 (0x00001d46)
===============================
0x00001D46: 0x802B            - O_PUSH_BASE
0x00001D48: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001D4E: 0xC001 0x00000087 - O_INTOP(0x00000087)   // 135 (135)
0x00001D54: 0x811E            - O_GSAY_REPLY
0x00001D56: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001D5C: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001D62: 0xC001 0x00000088 - O_INTOP(0x00000088)   // 136 (136)
0x00001D68: 0xC001 0x00000017 - O_INTOP(0x00000017)   // 23 (23)
0x00001D6E: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x00001D74: 0x8121            - O_GIQ_OPTION
0x00001D76: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001D7C: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001D82: 0xC001 0x00000089 - O_INTOP(0x00000089)   // 137 (137)
0x00001D88: 0xC001 0x00000018 - O_INTOP(0x00000018)   // 24 (24)
0x00001D8E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001D94: 0x8121            - O_GIQ_OPTION
0x00001D96: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001D9C: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001DA2: 0xC001 0x0000008a - O_INTOP(0x0000008a)   // 138 (138)
0x00001DA8: 0xC001 0x00000016 - O_INTOP(0x00000016)   // 22 (22)
0x00001DAE: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001DB4: 0x8121            - O_GIQ_OPTION
0x00001DB6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001DBC: 0x800D            - O_D_TO_A
0x00001DBE: 0x8019            - O_SWAPA
0x00001DC0: 0x802A            - O_POP_TO_BASE
0x00001DC2: 0x8029            - O_POP_BASE
0x00001DC4: 0x800C            - O_A_TO_D
0x00001DC6: 0x801C            - O_POP_RETURN
0x00001DC8: 0x802A            - O_POP_TO_BASE
0x00001DCA: 0x8029            - O_POP_BASE
0x00001DCC: 0x801C            - O_POP_RETURN

22: morph10_1 (0x00001dce)
===============================
0x00001DCE: 0x802B            - O_PUSH_BASE
0x00001DD0: 0xC001 0x00001e18 - O_INTOP(0x00001e18)   // 7704 (7704)
0x00001DD6: 0x80BF            - O_DUDE_OBJ
0x00001DD8: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x00001DDE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001DE4: 0x80AC            - O_ROLL_VS_SKILL
0x00001DE6: 0x80AF            - O_IS_SUCCESS
0x00001DE8: 0x802F            - O_IF
0x00001DEA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001DF0: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001DF6: 0x80C2            - O_SET_LOCAL_VAR
0x00001DF8: 0xC001 0x00001e0e - O_INTOP(0x00001e0e)   // 7694 (7694)
0x00001DFE: 0x800D            - O_D_TO_A
0x00001E00: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001E06: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00001E0C: 0x8005            - O_CALL
0x00001E0E: 0x801A            - O_POP
0x00001E10: 0xC001 0x00001e30 - O_INTOP(0x00001e30)   // 7728 (7728)
0x00001E16: 0x8004            - O_JMP
0x00001E18: 0xC001 0x00001e2e - O_INTOP(0x00001e2e)   // 7726 (7726)
0x00001E1E: 0x800D            - O_D_TO_A
0x00001E20: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001E26: 0xC001 0x00000017 - O_INTOP(0x00000017)   // 23 (23)
0x00001E2C: 0x8005            - O_CALL
0x00001E2E: 0x801A            - O_POP
0x00001E30: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001E36: 0x800D            - O_D_TO_A
0x00001E38: 0x8019            - O_SWAPA
0x00001E3A: 0x802A            - O_POP_TO_BASE
0x00001E3C: 0x8029            - O_POP_BASE
0x00001E3E: 0x800C            - O_A_TO_D
0x00001E40: 0x801C            - O_POP_RETURN
0x00001E42: 0x802A            - O_POP_TO_BASE
0x00001E44: 0x8029            - O_POP_BASE
0x00001E46: 0x801C            - O_POP_RETURN

23: morph11 (0x00001e48)
===============================
0x00001E48: 0x802B            - O_PUSH_BASE
0x00001E4A: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001E50: 0xC001 0x0000008b - O_INTOP(0x0000008b)   // 139 (139)
0x00001E56: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x00001E5C: 0x8120            - O_GSAY_MESSAGE
0x00001E5E: 0xC001 0x00001e74 - O_INTOP(0x00001e74)   // 7796 (7796)
0x00001E64: 0x800D            - O_D_TO_A
0x00001E66: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001E6C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001E72: 0x8005            - O_CALL
0x00001E74: 0x801A            - O_POP
0x00001E76: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001E7C: 0x800D            - O_D_TO_A
0x00001E7E: 0x8019            - O_SWAPA
0x00001E80: 0x802A            - O_POP_TO_BASE
0x00001E82: 0x8029            - O_POP_BASE
0x00001E84: 0x800C            - O_A_TO_D
0x00001E86: 0x801C            - O_POP_RETURN
0x00001E88: 0x802A            - O_POP_TO_BASE
0x00001E8A: 0x8029            - O_POP_BASE
0x00001E8C: 0x801C            - O_POP_RETURN

24: morph12 (0x00001e8e)
===============================
0x00001E8E: 0x802B            - O_PUSH_BASE
0x00001E90: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001E96: 0xC001 0x0000008c - O_INTOP(0x0000008c)   // 140 (140)
0x00001E9C: 0x811E            - O_GSAY_REPLY
0x00001E9E: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001EA4: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001EAA: 0xC001 0x0000008d - O_INTOP(0x0000008d)   // 141 (141)
0x00001EB0: 0xC001 0x00000054 - O_INTOP(0x00000054)   // 84 (84)
0x00001EB6: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001EBC: 0x8121            - O_GIQ_OPTION
0x00001EBE: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001EC4: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001ECA: 0xC001 0x0000008e - O_INTOP(0x0000008e)   // 142 (142)
0x00001ED0: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001ED6: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x00001EDC: 0x8121            - O_GIQ_OPTION
0x00001EDE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001EE4: 0x800D            - O_D_TO_A
0x00001EE6: 0x8019            - O_SWAPA
0x00001EE8: 0x802A            - O_POP_TO_BASE
0x00001EEA: 0x8029            - O_POP_BASE
0x00001EEC: 0x800C            - O_A_TO_D
0x00001EEE: 0x801C            - O_POP_RETURN
0x00001EF0: 0x802A            - O_POP_TO_BASE
0x00001EF2: 0x8029            - O_POP_BASE
0x00001EF4: 0x801C            - O_POP_RETURN

25: morph13 (0x00001ef6)
===============================
0x00001EF6: 0x802B            - O_PUSH_BASE
0x00001EF8: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001EFE: 0xC001 0x0000008f - O_INTOP(0x0000008f)   // 143 (143)
0x00001F04: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001F0A: 0x8120            - O_GSAY_MESSAGE
0x00001F0C: 0xC001 0x00001f22 - O_INTOP(0x00001f22)   // 7970 (7970)
0x00001F12: 0x800D            - O_D_TO_A
0x00001F14: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001F1A: 0xC001 0x00000054 - O_INTOP(0x00000054)   // 84 (84)
0x00001F20: 0x8005            - O_CALL
0x00001F22: 0x801A            - O_POP
0x00001F24: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001F2A: 0x800D            - O_D_TO_A
0x00001F2C: 0x8019            - O_SWAPA
0x00001F2E: 0x802A            - O_POP_TO_BASE
0x00001F30: 0x8029            - O_POP_BASE
0x00001F32: 0x800C            - O_A_TO_D
0x00001F34: 0x801C            - O_POP_RETURN
0x00001F36: 0x802A            - O_POP_TO_BASE
0x00001F38: 0x8029            - O_POP_BASE
0x00001F3A: 0x801C            - O_POP_RETURN

26: morph14 (0x00001f3c)
===============================
0x00001F3C: 0x802B            - O_PUSH_BASE
0x00001F3E: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001F44: 0xC001 0x00000090 - O_INTOP(0x00000090)   // 144 (144)
0x00001F4A: 0x811E            - O_GSAY_REPLY
0x00001F4C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001F52: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001F58: 0xC001 0x00000091 - O_INTOP(0x00000091)   // 145 (145)
0x00001F5E: 0xC001 0x00000018 - O_INTOP(0x00000018)   // 24 (24)
0x00001F64: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001F6A: 0x8121            - O_GIQ_OPTION
0x00001F6C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001F72: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001F78: 0xC001 0x00000092 - O_INTOP(0x00000092)   // 146 (146)
0x00001F7E: 0xC001 0x00000017 - O_INTOP(0x00000017)   // 23 (23)
0x00001F84: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x00001F8A: 0x8121            - O_GIQ_OPTION
0x00001F8C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001F92: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001F98: 0xC001 0x00000093 - O_INTOP(0x00000093)   // 147 (147)
0x00001F9E: 0xC001 0x0000001b - O_INTOP(0x0000001b)   // 27 (27)
0x00001FA4: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x00001FAA: 0x8121            - O_GIQ_OPTION
0x00001FAC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001FB2: 0x800D            - O_D_TO_A
0x00001FB4: 0x8019            - O_SWAPA
0x00001FB6: 0x802A            - O_POP_TO_BASE
0x00001FB8: 0x8029            - O_POP_BASE
0x00001FBA: 0x800C            - O_A_TO_D
0x00001FBC: 0x801C            - O_POP_RETURN
0x00001FBE: 0x802A            - O_POP_TO_BASE
0x00001FC0: 0x8029            - O_POP_BASE
0x00001FC2: 0x801C            - O_POP_RETURN

27: morph15 (0x00001fc4)
===============================
0x00001FC4: 0x802B            - O_PUSH_BASE
0x00001FC6: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00001FCC: 0xC001 0x00000094 - O_INTOP(0x00000094)   // 148 (148)
0x00001FD2: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x00001FD8: 0x8120            - O_GSAY_MESSAGE
0x00001FDA: 0xC001 0x00001ff0 - O_INTOP(0x00001ff0)   // 8176 (8176)
0x00001FE0: 0x800D            - O_D_TO_A
0x00001FE2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001FE8: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001FEE: 0x8005            - O_CALL
0x00001FF0: 0x801A            - O_POP
0x00001FF2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001FF8: 0x800D            - O_D_TO_A
0x00001FFA: 0x8019            - O_SWAPA
0x00001FFC: 0x802A            - O_POP_TO_BASE
0x00001FFE: 0x8029            - O_POP_BASE
0x00002000: 0x800C            - O_A_TO_D
0x00002002: 0x801C            - O_POP_RETURN
0x00002004: 0x802A            - O_POP_TO_BASE
0x00002006: 0x8029            - O_POP_BASE
0x00002008: 0x801C            - O_POP_RETURN

28: morph16 (0x0000200a)
===============================
0x0000200A: 0x802B            - O_PUSH_BASE
0x0000200C: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002012: 0xC001 0x00000095 - O_INTOP(0x00000095)   // 149 (149)
0x00002018: 0x811E            - O_GSAY_REPLY
0x0000201A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002020: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002026: 0xC001 0x00000096 - O_INTOP(0x00000096)   // 150 (150)
0x0000202C: 0xC001 0x0000001d - O_INTOP(0x0000001d)   // 29 (29)
0x00002032: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002038: 0x8121            - O_GIQ_OPTION
0x0000203A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002040: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002046: 0xC001 0x00000097 - O_INTOP(0x00000097)   // 151 (151)
0x0000204C: 0xC001 0x0000001d - O_INTOP(0x0000001d)   // 29 (29)
0x00002052: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002058: 0x8121            - O_GIQ_OPTION
0x0000205A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002060: 0x800D            - O_D_TO_A
0x00002062: 0x8019            - O_SWAPA
0x00002064: 0x802A            - O_POP_TO_BASE
0x00002066: 0x8029            - O_POP_BASE
0x00002068: 0x800C            - O_A_TO_D
0x0000206A: 0x801C            - O_POP_RETURN
0x0000206C: 0x802A            - O_POP_TO_BASE
0x0000206E: 0x8029            - O_POP_BASE
0x00002070: 0x801C            - O_POP_RETURN

29: morph17 (0x00002072)
===============================
0x00002072: 0x802B            - O_PUSH_BASE
0x00002074: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x0000207A: 0xC001 0x00000098 - O_INTOP(0x00000098)   // 152 (152)
0x00002080: 0x811E            - O_GSAY_REPLY
0x00002082: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002088: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x0000208E: 0xC001 0x00000099 - O_INTOP(0x00000099)   // 153 (153)
0x00002094: 0xC001 0x0000001e - O_INTOP(0x0000001e)   // 30 (30)
0x0000209A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000020A0: 0x8121            - O_GIQ_OPTION
0x000020A2: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000020A8: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x000020AE: 0xC001 0x0000009a - O_INTOP(0x0000009a)   // 154 (154)
0x000020B4: 0xC001 0x0000001e - O_INTOP(0x0000001e)   // 30 (30)
0x000020BA: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000020C0: 0x8121            - O_GIQ_OPTION
0x000020C2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000020C8: 0x800D            - O_D_TO_A
0x000020CA: 0x8019            - O_SWAPA
0x000020CC: 0x802A            - O_POP_TO_BASE
0x000020CE: 0x8029            - O_POP_BASE
0x000020D0: 0x800C            - O_A_TO_D
0x000020D2: 0x801C            - O_POP_RETURN
0x000020D4: 0x802A            - O_POP_TO_BASE
0x000020D6: 0x8029            - O_POP_BASE
0x000020D8: 0x801C            - O_POP_RETURN

30: morph18 (0x000020da)
===============================
0x000020DA: 0x802B            - O_PUSH_BASE
0x000020DC: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x000020E2: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x000020E8: 0x811E            - O_GSAY_REPLY
0x000020EA: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000020F0: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x000020F6: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x000020FC: 0xC001 0x0000001f - O_INTOP(0x0000001f)   // 31 (31)
0x00002102: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002108: 0x8121            - O_GIQ_OPTION
0x0000210A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002110: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002116: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x0000211C: 0xC001 0x00000020 - O_INTOP(0x00000020)   // 32 (32)
0x00002122: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002128: 0x8121            - O_GIQ_OPTION
0x0000212A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002130: 0x800D            - O_D_TO_A
0x00002132: 0x8019            - O_SWAPA
0x00002134: 0x802A            - O_POP_TO_BASE
0x00002136: 0x8029            - O_POP_BASE
0x00002138: 0x800C            - O_A_TO_D
0x0000213A: 0x801C            - O_POP_RETURN
0x0000213C: 0x802A            - O_POP_TO_BASE
0x0000213E: 0x8029            - O_POP_BASE
0x00002140: 0x801C            - O_POP_RETURN

31: morph18_1 (0x00002142)
===============================
0x00002142: 0x802B            - O_PUSH_BASE
0x00002144: 0xC001 0x00002180 - O_INTOP(0x00002180)   // 8576 (8576)
0x0000214A: 0x80BF            - O_DUDE_OBJ
0x0000214C: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x00002152: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00002158: 0x8046            - O_NEGATE
0x0000215A: 0x80AC            - O_ROLL_VS_SKILL
0x0000215C: 0x80AF            - O_IS_SUCCESS
0x0000215E: 0x802F            - O_IF
0x00002160: 0xC001 0x00002176 - O_INTOP(0x00002176)   // 8566 (8566)
0x00002166: 0x800D            - O_D_TO_A
0x00002168: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000216E: 0xC001 0x00000021 - O_INTOP(0x00000021)   // 33 (33)
0x00002174: 0x8005            - O_CALL
0x00002176: 0x801A            - O_POP
0x00002178: 0xC001 0x00002198 - O_INTOP(0x00002198)   // 8600 (8600)
0x0000217E: 0x8004            - O_JMP
0x00002180: 0xC001 0x00002196 - O_INTOP(0x00002196)   // 8598 (8598)
0x00002186: 0x800D            - O_D_TO_A
0x00002188: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000218E: 0xC001 0x0000001b - O_INTOP(0x0000001b)   // 27 (27)
0x00002194: 0x8005            - O_CALL
0x00002196: 0x801A            - O_POP
0x00002198: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000219E: 0x800D            - O_D_TO_A
0x000021A0: 0x8019            - O_SWAPA
0x000021A2: 0x802A            - O_POP_TO_BASE
0x000021A4: 0x8029            - O_POP_BASE
0x000021A6: 0x800C            - O_A_TO_D
0x000021A8: 0x801C            - O_POP_RETURN
0x000021AA: 0x802A            - O_POP_TO_BASE
0x000021AC: 0x8029            - O_POP_BASE
0x000021AE: 0x801C            - O_POP_RETURN

32: morph18_2 (0x000021b0)
===============================
0x000021B0: 0x802B            - O_PUSH_BASE
0x000021B2: 0xC001 0x000021ee - O_INTOP(0x000021ee)   // 8686 (8686)
0x000021B8: 0x80BF            - O_DUDE_OBJ
0x000021BA: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x000021C0: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x000021C6: 0x8046            - O_NEGATE
0x000021C8: 0x80AC            - O_ROLL_VS_SKILL
0x000021CA: 0x80AF            - O_IS_SUCCESS
0x000021CC: 0x802F            - O_IF
0x000021CE: 0xC001 0x000021e4 - O_INTOP(0x000021e4)   // 8676 (8676)
0x000021D4: 0x800D            - O_D_TO_A
0x000021D6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000021DC: 0xC001 0x00000018 - O_INTOP(0x00000018)   // 24 (24)
0x000021E2: 0x8005            - O_CALL
0x000021E4: 0x801A            - O_POP
0x000021E6: 0xC001 0x00002206 - O_INTOP(0x00002206)   // 8710 (8710)
0x000021EC: 0x8004            - O_JMP
0x000021EE: 0xC001 0x00002204 - O_INTOP(0x00002204)   // 8708 (8708)
0x000021F4: 0x800D            - O_D_TO_A
0x000021F6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000021FC: 0xC001 0x0000001b - O_INTOP(0x0000001b)   // 27 (27)
0x00002202: 0x8005            - O_CALL
0x00002204: 0x801A            - O_POP
0x00002206: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000220C: 0x800D            - O_D_TO_A
0x0000220E: 0x8019            - O_SWAPA
0x00002210: 0x802A            - O_POP_TO_BASE
0x00002212: 0x8029            - O_POP_BASE
0x00002214: 0x800C            - O_A_TO_D
0x00002216: 0x801C            - O_POP_RETURN
0x00002218: 0x802A            - O_POP_TO_BASE
0x0000221A: 0x8029            - O_POP_BASE
0x0000221C: 0x801C            - O_POP_RETURN

33: morph19 (0x0000221e)
===============================
0x0000221E: 0x802B            - O_PUSH_BASE
0x00002220: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002226: 0xC001 0x0000009e - O_INTOP(0x0000009e)   // 158 (158)
0x0000222C: 0x811E            - O_GSAY_REPLY
0x0000222E: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002234: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x0000223A: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00002240: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002246: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x0000224C: 0x8121            - O_GIQ_OPTION
0x0000224E: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002254: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x0000225A: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00002260: 0xC001 0x00000054 - O_INTOP(0x00000054)   // 84 (84)
0x00002266: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000226C: 0x8121            - O_GIQ_OPTION
0x0000226E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002274: 0x800D            - O_D_TO_A
0x00002276: 0x8019            - O_SWAPA
0x00002278: 0x802A            - O_POP_TO_BASE
0x0000227A: 0x8029            - O_POP_BASE
0x0000227C: 0x800C            - O_A_TO_D
0x0000227E: 0x801C            - O_POP_RETURN
0x00002280: 0x802A            - O_POP_TO_BASE
0x00002282: 0x8029            - O_POP_BASE
0x00002284: 0x801C            - O_POP_RETURN

34: morph20 (0x00002286)
===============================
0x00002286: 0x802B            - O_PUSH_BASE
0x00002288: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x0000228E: 0xC001 0x000000a1 - O_INTOP(0x000000a1)   // 161 (161)
0x00002294: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x0000229A: 0x8120            - O_GSAY_MESSAGE
0x0000229C: 0xC001 0x000022b2 - O_INTOP(0x000022b2)   // 8882 (8882)
0x000022A2: 0x800D            - O_D_TO_A
0x000022A4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000022AA: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000022B0: 0x8005            - O_CALL
0x000022B2: 0x801A            - O_POP
0x000022B4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000022BA: 0x800D            - O_D_TO_A
0x000022BC: 0x8019            - O_SWAPA
0x000022BE: 0x802A            - O_POP_TO_BASE
0x000022C0: 0x8029            - O_POP_BASE
0x000022C2: 0x800C            - O_A_TO_D
0x000022C4: 0x801C            - O_POP_RETURN
0x000022C6: 0x802A            - O_POP_TO_BASE
0x000022C8: 0x8029            - O_POP_BASE
0x000022CA: 0x801C            - O_POP_RETURN

35: morph21 (0x000022cc)
===============================
0x000022CC: 0x802B            - O_PUSH_BASE
0x000022CE: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x000022D4: 0xC001 0x000000a2 - O_INTOP(0x000000a2)   // 162 (162)
0x000022DA: 0x811E            - O_GSAY_REPLY
0x000022DC: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000022E2: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x000022E8: 0xC001 0x000000a3 - O_INTOP(0x000000a3)   // 163 (163)
0x000022EE: 0xC001 0x00000013 - O_INTOP(0x00000013)   // 19 (19)
0x000022F4: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000022FA: 0x8121            - O_GIQ_OPTION
0x000022FC: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002302: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002308: 0xC001 0x000000a4 - O_INTOP(0x000000a4)   // 164 (164)
0x0000230E: 0xC001 0x0000001c - O_INTOP(0x0000001c)   // 28 (28)
0x00002314: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000231A: 0x8121            - O_GIQ_OPTION
0x0000231C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002322: 0x800D            - O_D_TO_A
0x00002324: 0x8019            - O_SWAPA
0x00002326: 0x802A            - O_POP_TO_BASE
0x00002328: 0x8029            - O_POP_BASE
0x0000232A: 0x800C            - O_A_TO_D
0x0000232C: 0x801C            - O_POP_RETURN
0x0000232E: 0x802A            - O_POP_TO_BASE
0x00002330: 0x8029            - O_POP_BASE
0x00002332: 0x801C            - O_POP_RETURN

36: morph23 (0x00002334)
===============================
0x00002334: 0x802B            - O_PUSH_BASE
0x00002336: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x0000233C: 0xC001 0x000000a5 - O_INTOP(0x000000a5)   // 165 (165)
0x00002342: 0x811E            - O_GSAY_REPLY
0x00002344: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000234A: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002350: 0xC001 0x000000a6 - O_INTOP(0x000000a6)   // 166 (166)
0x00002356: 0xC001 0x00000018 - O_INTOP(0x00000018)   // 24 (24)
0x0000235C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002362: 0x8121            - O_GIQ_OPTION
0x00002364: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000236A: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002370: 0xC001 0x000000a7 - O_INTOP(0x000000a7)   // 167 (167)
0x00002376: 0xC001 0x0000001c - O_INTOP(0x0000001c)   // 28 (28)
0x0000237C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002382: 0x8121            - O_GIQ_OPTION
0x00002384: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000238A: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002390: 0xC001 0x000000a8 - O_INTOP(0x000000a8)   // 168 (168)
0x00002396: 0xC001 0x00000017 - O_INTOP(0x00000017)   // 23 (23)
0x0000239C: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x000023A2: 0x8121            - O_GIQ_OPTION
0x000023A4: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000023AA: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x000023B0: 0xC001 0x000000a9 - O_INTOP(0x000000a9)   // 169 (169)
0x000023B6: 0xC001 0x0000001b - O_INTOP(0x0000001b)   // 27 (27)
0x000023BC: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x000023C2: 0x8121            - O_GIQ_OPTION
0x000023C4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000023CA: 0x800D            - O_D_TO_A
0x000023CC: 0x8019            - O_SWAPA
0x000023CE: 0x802A            - O_POP_TO_BASE
0x000023D0: 0x8029            - O_POP_BASE
0x000023D2: 0x800C            - O_A_TO_D
0x000023D4: 0x801C            - O_POP_RETURN
0x000023D6: 0x802A            - O_POP_TO_BASE
0x000023D8: 0x8029            - O_POP_BASE
0x000023DA: 0x801C            - O_POP_RETURN

37: morph24 (0x000023dc)
===============================
0x000023DC: 0x802B            - O_PUSH_BASE
0x000023DE: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x000023E4: 0xC001 0x000000aa - O_INTOP(0x000000aa)   // 170 (170)
0x000023EA: 0x811E            - O_GSAY_REPLY
0x000023EC: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000023F2: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x000023F8: 0xC001 0x000000ab - O_INTOP(0x000000ab)   // 171 (171)
0x000023FE: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002404: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x0000240A: 0x8121            - O_GIQ_OPTION
0x0000240C: 0xC001 0x00000007 - O_INTOP(0x00000007)   // 7 (7)
0x00002412: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002418: 0xC001 0x000000ac - O_INTOP(0x000000ac)   // 172 (172)
0x0000241E: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002424: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x0000242A: 0x8121            - O_GIQ_OPTION
0x0000242C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002432: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002438: 0xC001 0x000000ad - O_INTOP(0x000000ad)   // 173 (173)
0x0000243E: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002444: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x0000244A: 0x8121            - O_GIQ_OPTION
0x0000244C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002452: 0x800D            - O_D_TO_A
0x00002454: 0x8019            - O_SWAPA
0x00002456: 0x802A            - O_POP_TO_BASE
0x00002458: 0x8029            - O_POP_BASE
0x0000245A: 0x800C            - O_A_TO_D
0x0000245C: 0x801C            - O_POP_RETURN
0x0000245E: 0x802A            - O_POP_TO_BASE
0x00002460: 0x8029            - O_POP_BASE
0x00002462: 0x801C            - O_POP_RETURN

38: morph26 (0x00002464)
===============================
0x00002464: 0x802B            - O_PUSH_BASE
0x00002466: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x0000246C: 0xC001 0x000000ae - O_INTOP(0x000000ae)   // 174 (174)
0x00002472: 0x811E            - O_GSAY_REPLY
0x00002474: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000247A: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002480: 0xC001 0x000000af - O_INTOP(0x000000af)   // 175 (175)
0x00002486: 0xC001 0x00000018 - O_INTOP(0x00000018)   // 24 (24)
0x0000248C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002492: 0x8121            - O_GIQ_OPTION
0x00002494: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x0000249A: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x000024A0: 0xC001 0x000000b0 - O_INTOP(0x000000b0)   // 176 (176)
0x000024A6: 0xC001 0x0000001c - O_INTOP(0x0000001c)   // 28 (28)
0x000024AC: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000024B2: 0x8121            - O_GIQ_OPTION
0x000024B4: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000024BA: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x000024C0: 0xC001 0x000000b1 - O_INTOP(0x000000b1)   // 177 (177)
0x000024C6: 0xC001 0x00000017 - O_INTOP(0x00000017)   // 23 (23)
0x000024CC: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x000024D2: 0x8121            - O_GIQ_OPTION
0x000024D4: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000024DA: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x000024E0: 0xC001 0x000000b2 - O_INTOP(0x000000b2)   // 178 (178)
0x000024E6: 0xC001 0x0000001b - O_INTOP(0x0000001b)   // 27 (27)
0x000024EC: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x000024F2: 0x8121            - O_GIQ_OPTION
0x000024F4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000024FA: 0x800D            - O_D_TO_A
0x000024FC: 0x8019            - O_SWAPA
0x000024FE: 0x802A            - O_POP_TO_BASE
0x00002500: 0x8029            - O_POP_BASE
0x00002502: 0x800C            - O_A_TO_D
0x00002504: 0x801C            - O_POP_RETURN
0x00002506: 0x802A            - O_POP_TO_BASE
0x00002508: 0x8029            - O_POP_BASE
0x0000250A: 0x801C            - O_POP_RETURN

39: morph27 (0x0000250c)
===============================
0x0000250C: 0x802B            - O_PUSH_BASE
0x0000250E: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002514: 0xC001 0x000000b3 - O_INTOP(0x000000b3)   // 179 (179)
0x0000251A: 0x811E            - O_GSAY_REPLY
0x0000251C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002522: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002528: 0xC001 0x000000b4 - O_INTOP(0x000000b4)   // 180 (180)
0x0000252E: 0xC001 0x00000007 - O_INTOP(0x00000007)   // 7 (7)
0x00002534: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000253A: 0x8121            - O_GIQ_OPTION
0x0000253C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002542: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002548: 0xC001 0x000000b5 - O_INTOP(0x000000b5)   // 181 (181)
0x0000254E: 0xC001 0x00000028 - O_INTOP(0x00000028)   // 40 (40)
0x00002554: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000255A: 0x8121            - O_GIQ_OPTION
0x0000255C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002562: 0x800D            - O_D_TO_A
0x00002564: 0x8019            - O_SWAPA
0x00002566: 0x802A            - O_POP_TO_BASE
0x00002568: 0x8029            - O_POP_BASE
0x0000256A: 0x800C            - O_A_TO_D
0x0000256C: 0x801C            - O_POP_RETURN
0x0000256E: 0x802A            - O_POP_TO_BASE
0x00002570: 0x8029            - O_POP_BASE
0x00002572: 0x801C            - O_POP_RETURN

40: morph27_1 (0x00002574)
===============================
0x00002574: 0x802B            - O_PUSH_BASE
0x00002576: 0xC001 0x000025b2 - O_INTOP(0x000025b2)   // 9650 (9650)
0x0000257C: 0x80BF            - O_DUDE_OBJ
0x0000257E: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x00002584: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x0000258A: 0x8046            - O_NEGATE
0x0000258C: 0x80AC            - O_ROLL_VS_SKILL
0x0000258E: 0x80AF            - O_IS_SUCCESS
0x00002590: 0x802F            - O_IF
0x00002592: 0xC001 0x000025a8 - O_INTOP(0x000025a8)   // 9640 (9640)
0x00002598: 0x800D            - O_D_TO_A
0x0000259A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000025A0: 0xC001 0x00000011 - O_INTOP(0x00000011)   // 17 (17)
0x000025A6: 0x8005            - O_CALL
0x000025A8: 0x801A            - O_POP
0x000025AA: 0xC001 0x000025ca - O_INTOP(0x000025ca)   // 9674 (9674)
0x000025B0: 0x8004            - O_JMP
0x000025B2: 0xC001 0x000025c8 - O_INTOP(0x000025c8)   // 9672 (9672)
0x000025B8: 0x800D            - O_D_TO_A
0x000025BA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000025C0: 0xC001 0x00000010 - O_INTOP(0x00000010)   // 16 (16)
0x000025C6: 0x8005            - O_CALL
0x000025C8: 0x801A            - O_POP
0x000025CA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000025D0: 0x800D            - O_D_TO_A
0x000025D2: 0x8019            - O_SWAPA
0x000025D4: 0x802A            - O_POP_TO_BASE
0x000025D6: 0x8029            - O_POP_BASE
0x000025D8: 0x800C            - O_A_TO_D
0x000025DA: 0x801C            - O_POP_RETURN
0x000025DC: 0x802A            - O_POP_TO_BASE
0x000025DE: 0x8029            - O_POP_BASE
0x000025E0: 0x801C            - O_POP_RETURN

41: morph28 (0x000025e2)
===============================
0x000025E2: 0x802B            - O_PUSH_BASE
0x000025E4: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x000025EA: 0xC001 0x000000b6 - O_INTOP(0x000000b6)   // 182 (182)
0x000025F0: 0x811E            - O_GSAY_REPLY
0x000025F2: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000025F8: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x000025FE: 0xC001 0x000000b7 - O_INTOP(0x000000b7)   // 183 (183)
0x00002604: 0xC001 0x0000002a - O_INTOP(0x0000002a)   // 42 (42)
0x0000260A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002610: 0x8121            - O_GIQ_OPTION
0x00002612: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002618: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x0000261E: 0xC001 0x000000b8 - O_INTOP(0x000000b8)   // 184 (184)
0x00002624: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x0000262A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002630: 0x8121            - O_GIQ_OPTION
0x00002632: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00002638: 0x8046            - O_NEGATE
0x0000263A: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002640: 0xC001 0x000000b9 - O_INTOP(0x000000b9)   // 185 (185)
0x00002646: 0xC001 0x0000003d - O_INTOP(0x0000003d)   // 61 (61)
0x0000264C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002652: 0x8121            - O_GIQ_OPTION
0x00002654: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000265A: 0x800D            - O_D_TO_A
0x0000265C: 0x8019            - O_SWAPA
0x0000265E: 0x802A            - O_POP_TO_BASE
0x00002660: 0x8029            - O_POP_BASE
0x00002662: 0x800C            - O_A_TO_D
0x00002664: 0x801C            - O_POP_RETURN
0x00002666: 0x802A            - O_POP_TO_BASE
0x00002668: 0x8029            - O_POP_BASE
0x0000266A: 0x801C            - O_POP_RETURN

42: morph29 (0x0000266c)
===============================
0x0000266C: 0x802B            - O_PUSH_BASE
0x0000266E: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002674: 0xC001 0x000000ba - O_INTOP(0x000000ba)   // 186 (186)
0x0000267A: 0x811E            - O_GSAY_REPLY
0x0000267C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002682: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002688: 0xC001 0x000000bb - O_INTOP(0x000000bb)   // 187 (187)
0x0000268E: 0xC001 0x0000002b - O_INTOP(0x0000002b)   // 43 (43)
0x00002694: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000269A: 0x8121            - O_GIQ_OPTION
0x0000269C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000026A2: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x000026A8: 0xC001 0x000000bc - O_INTOP(0x000000bc)   // 188 (188)
0x000026AE: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000026B4: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000026BA: 0x8121            - O_GIQ_OPTION
0x000026BC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000026C2: 0x800D            - O_D_TO_A
0x000026C4: 0x8019            - O_SWAPA
0x000026C6: 0x802A            - O_POP_TO_BASE
0x000026C8: 0x8029            - O_POP_BASE
0x000026CA: 0x800C            - O_A_TO_D
0x000026CC: 0x801C            - O_POP_RETURN
0x000026CE: 0x802A            - O_POP_TO_BASE
0x000026D0: 0x8029            - O_POP_BASE
0x000026D2: 0x801C            - O_POP_RETURN

43: morph30 (0x000026d4)
===============================
0x000026D4: 0x802B            - O_PUSH_BASE
0x000026D6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000026DC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000026E2: 0x811E            - O_GSAY_REPLY
0x000026E4: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000026EA: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x000026F0: 0xC001 0x000000bd - O_INTOP(0x000000bd)   // 189 (189)
0x000026F6: 0xC001 0x0000002c - O_INTOP(0x0000002c)   // 44 (44)
0x000026FC: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002702: 0x8121            - O_GIQ_OPTION
0x00002704: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000270A: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002710: 0xC001 0x000000be - O_INTOP(0x000000be)   // 190 (190)
0x00002716: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x0000271C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002722: 0x8121            - O_GIQ_OPTION
0x00002724: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000272A: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002730: 0xC001 0x000000bf - O_INTOP(0x000000bf)   // 191 (191)
0x00002736: 0xC001 0x0000003a - O_INTOP(0x0000003a)   // 58 (58)
0x0000273C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002742: 0x8121            - O_GIQ_OPTION
0x00002744: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000274A: 0x800D            - O_D_TO_A
0x0000274C: 0x8019            - O_SWAPA
0x0000274E: 0x802A            - O_POP_TO_BASE
0x00002750: 0x8029            - O_POP_BASE
0x00002752: 0x800C            - O_A_TO_D
0x00002754: 0x801C            - O_POP_RETURN
0x00002756: 0x802A            - O_POP_TO_BASE
0x00002758: 0x8029            - O_POP_BASE
0x0000275A: 0x801C            - O_POP_RETURN

44: morph31 (0x0000275c)
===============================
0x0000275C: 0x802B            - O_PUSH_BASE
0x0000275E: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002764: 0xC001 0x000000c0 - O_INTOP(0x000000c0)   // 192 (192)
0x0000276A: 0x811E            - O_GSAY_REPLY
0x0000276C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002772: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002778: 0xC001 0x000000c1 - O_INTOP(0x000000c1)   // 193 (193)
0x0000277E: 0xC001 0x0000002d - O_INTOP(0x0000002d)   // 45 (45)
0x00002784: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000278A: 0x8121            - O_GIQ_OPTION
0x0000278C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002792: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002798: 0xC001 0x000000c2 - O_INTOP(0x000000c2)   // 194 (194)
0x0000279E: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x000027A4: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000027AA: 0x8121            - O_GIQ_OPTION
0x000027AC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000027B2: 0x800D            - O_D_TO_A
0x000027B4: 0x8019            - O_SWAPA
0x000027B6: 0x802A            - O_POP_TO_BASE
0x000027B8: 0x8029            - O_POP_BASE
0x000027BA: 0x800C            - O_A_TO_D
0x000027BC: 0x801C            - O_POP_RETURN
0x000027BE: 0x802A            - O_POP_TO_BASE
0x000027C0: 0x8029            - O_POP_BASE
0x000027C2: 0x801C            - O_POP_RETURN

45: morph32 (0x000027c4)
===============================
0x000027C4: 0x802B            - O_PUSH_BASE
0x000027C6: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x000027CC: 0xC001 0x000000c3 - O_INTOP(0x000000c3)   // 195 (195)
0x000027D2: 0x811E            - O_GSAY_REPLY
0x000027D4: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000027DA: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x000027E0: 0xC001 0x000000c4 - O_INTOP(0x000000c4)   // 196 (196)
0x000027E6: 0xC001 0x00000059 - O_INTOP(0x00000059)   // 89 (89)
0x000027EC: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x000027F2: 0x8121            - O_GIQ_OPTION
0x000027F4: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000027FA: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002800: 0xC001 0x000000c5 - O_INTOP(0x000000c5)   // 197 (197)
0x00002806: 0xC001 0x00000034 - O_INTOP(0x00000034)   // 52 (52)
0x0000280C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002812: 0x8121            - O_GIQ_OPTION
0x00002814: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000281A: 0x800D            - O_D_TO_A
0x0000281C: 0x8019            - O_SWAPA
0x0000281E: 0x802A            - O_POP_TO_BASE
0x00002820: 0x8029            - O_POP_BASE
0x00002822: 0x800C            - O_A_TO_D
0x00002824: 0x801C            - O_POP_RETURN
0x00002826: 0x802A            - O_POP_TO_BASE
0x00002828: 0x8029            - O_POP_BASE
0x0000282A: 0x801C            - O_POP_RETURN

46: morph33 (0x0000282c)
===============================
0x0000282C: 0x802B            - O_PUSH_BASE
0x0000282E: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002834: 0xC001 0x000000c6 - O_INTOP(0x000000c6)   // 198 (198)
0x0000283A: 0x811E            - O_GSAY_REPLY
0x0000283C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002842: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002848: 0xC001 0x000000c7 - O_INTOP(0x000000c7)   // 199 (199)
0x0000284E: 0xC001 0x00000030 - O_INTOP(0x00000030)   // 48 (48)
0x00002854: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000285A: 0x8121            - O_GIQ_OPTION
0x0000285C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002862: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002868: 0xC001 0x000000c8 - O_INTOP(0x000000c8)   // 200 (200)
0x0000286E: 0xC001 0x0000002f - O_INTOP(0x0000002f)   // 47 (47)
0x00002874: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000287A: 0x8121            - O_GIQ_OPTION
0x0000287C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002882: 0x800D            - O_D_TO_A
0x00002884: 0x8019            - O_SWAPA
0x00002886: 0x802A            - O_POP_TO_BASE
0x00002888: 0x8029            - O_POP_BASE
0x0000288A: 0x800C            - O_A_TO_D
0x0000288C: 0x801C            - O_POP_RETURN
0x0000288E: 0x802A            - O_POP_TO_BASE
0x00002890: 0x8029            - O_POP_BASE
0x00002892: 0x801C            - O_POP_RETURN

47: morph33_1 (0x00002894)
===============================
0x00002894: 0x802B            - O_PUSH_BASE
0x00002896: 0xC001 0x000028d2 - O_INTOP(0x000028d2)   // 10450 (10450)
0x0000289C: 0x80BF            - O_DUDE_OBJ
0x0000289E: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x000028A4: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000028AA: 0x8046            - O_NEGATE
0x000028AC: 0x80AC            - O_ROLL_VS_SKILL
0x000028AE: 0x80AF            - O_IS_SUCCESS
0x000028B0: 0x802F            - O_IF
0x000028B2: 0xC001 0x000028c8 - O_INTOP(0x000028c8)   // 10440 (10440)
0x000028B8: 0x800D            - O_D_TO_A
0x000028BA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000028C0: 0xC001 0x00000031 - O_INTOP(0x00000031)   // 49 (49)
0x000028C6: 0x8005            - O_CALL
0x000028C8: 0x801A            - O_POP
0x000028CA: 0xC001 0x000028ea - O_INTOP(0x000028ea)   // 10474 (10474)
0x000028D0: 0x8004            - O_JMP
0x000028D2: 0xC001 0x000028e8 - O_INTOP(0x000028e8)   // 10472 (10472)
0x000028D8: 0x800D            - O_D_TO_A
0x000028DA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000028E0: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x000028E6: 0x8005            - O_CALL
0x000028E8: 0x801A            - O_POP
0x000028EA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000028F0: 0x800D            - O_D_TO_A
0x000028F2: 0x8019            - O_SWAPA
0x000028F4: 0x802A            - O_POP_TO_BASE
0x000028F6: 0x8029            - O_POP_BASE
0x000028F8: 0x800C            - O_A_TO_D
0x000028FA: 0x801C            - O_POP_RETURN
0x000028FC: 0x802A            - O_POP_TO_BASE
0x000028FE: 0x8029            - O_POP_BASE
0x00002900: 0x801C            - O_POP_RETURN

48: morph34 (0x00002902)
===============================
0x00002902: 0x802B            - O_PUSH_BASE
0x00002904: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x0000290A: 0xC001 0x000000c9 - O_INTOP(0x000000c9)   // 201 (201)
0x00002910: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002916: 0x8120            - O_GSAY_MESSAGE
0x00002918: 0xC001 0x0000292e - O_INTOP(0x0000292e)   // 10542 (10542)
0x0000291E: 0x800D            - O_D_TO_A
0x00002920: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002926: 0xC001 0x00000055 - O_INTOP(0x00000055)   // 85 (85)
0x0000292C: 0x8005            - O_CALL
0x0000292E: 0x801A            - O_POP
0x00002930: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002936: 0x800D            - O_D_TO_A
0x00002938: 0x8019            - O_SWAPA
0x0000293A: 0x802A            - O_POP_TO_BASE
0x0000293C: 0x8029            - O_POP_BASE
0x0000293E: 0x800C            - O_A_TO_D
0x00002940: 0x801C            - O_POP_RETURN
0x00002942: 0x802A            - O_POP_TO_BASE
0x00002944: 0x8029            - O_POP_BASE
0x00002946: 0x801C            - O_POP_RETURN

49: morph35 (0x00002948)
===============================
0x00002948: 0x802B            - O_PUSH_BASE
0x0000294A: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002950: 0xC001 0x000000ca - O_INTOP(0x000000ca)   // 202 (202)
0x00002956: 0x811E            - O_GSAY_REPLY
0x00002958: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000295E: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002964: 0xC001 0x000000cb - O_INTOP(0x000000cb)   // 203 (203)
0x0000296A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002970: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002976: 0x8121            - O_GIQ_OPTION
0x00002978: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000297E: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002984: 0xC001 0x000000cc - O_INTOP(0x000000cc)   // 204 (204)
0x0000298A: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00002990: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002996: 0x8121            - O_GIQ_OPTION
0x00002998: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000299E: 0x800D            - O_D_TO_A
0x000029A0: 0x8019            - O_SWAPA
0x000029A2: 0x802A            - O_POP_TO_BASE
0x000029A4: 0x8029            - O_POP_BASE
0x000029A6: 0x800C            - O_A_TO_D
0x000029A8: 0x801C            - O_POP_RETURN
0x000029AA: 0x802A            - O_POP_TO_BASE
0x000029AC: 0x8029            - O_POP_BASE
0x000029AE: 0x801C            - O_POP_RETURN

50: morph36 (0x000029b0)
===============================
0x000029B0: 0x802B            - O_PUSH_BASE
0x000029B2: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x000029B8: 0xC001 0x000000cd - O_INTOP(0x000000cd)   // 205 (205)
0x000029BE: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000029C4: 0x8120            - O_GSAY_MESSAGE
0x000029C6: 0xC001 0x000029dc - O_INTOP(0x000029dc)   // 10716 (10716)
0x000029CC: 0x800D            - O_D_TO_A
0x000029CE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000029D4: 0xC001 0x0000002b - O_INTOP(0x0000002b)   // 43 (43)
0x000029DA: 0x8005            - O_CALL
0x000029DC: 0x801A            - O_POP
0x000029DE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000029E4: 0x800D            - O_D_TO_A
0x000029E6: 0x8019            - O_SWAPA
0x000029E8: 0x802A            - O_POP_TO_BASE
0x000029EA: 0x8029            - O_POP_BASE
0x000029EC: 0x800C            - O_A_TO_D
0x000029EE: 0x801C            - O_POP_RETURN
0x000029F0: 0x802A            - O_POP_TO_BASE
0x000029F2: 0x8029            - O_POP_BASE
0x000029F4: 0x801C            - O_POP_RETURN

51: morph37 (0x000029f6)
===============================
0x000029F6: 0x802B            - O_PUSH_BASE
0x000029F8: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x000029FE: 0xC001 0x000000ce - O_INTOP(0x000000ce)   // 206 (206)
0x00002A04: 0xC001 0x00000031 - O_INTOP(0x00000031)   // 49 (49)
0x00002A0A: 0x8120            - O_GSAY_MESSAGE
0x00002A0C: 0xC001 0x00002a22 - O_INTOP(0x00002a22)   // 10786 (10786)
0x00002A12: 0x800D            - O_D_TO_A
0x00002A14: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002A1A: 0xC001 0x00000055 - O_INTOP(0x00000055)   // 85 (85)
0x00002A20: 0x8005            - O_CALL
0x00002A22: 0x801A            - O_POP
0x00002A24: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002A2A: 0x800D            - O_D_TO_A
0x00002A2C: 0x8019            - O_SWAPA
0x00002A2E: 0x802A            - O_POP_TO_BASE
0x00002A30: 0x8029            - O_POP_BASE
0x00002A32: 0x800C            - O_A_TO_D
0x00002A34: 0x801C            - O_POP_RETURN
0x00002A36: 0x802A            - O_POP_TO_BASE
0x00002A38: 0x8029            - O_POP_BASE
0x00002A3A: 0x801C            - O_POP_RETURN

52: morph38 (0x00002a3c)
===============================
0x00002A3C: 0x802B            - O_PUSH_BASE
0x00002A3E: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002A44: 0xC001 0x000000cf - O_INTOP(0x000000cf)   // 207 (207)
0x00002A4A: 0x811E            - O_GSAY_REPLY
0x00002A4C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002A52: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002A58: 0xC001 0x000000d0 - O_INTOP(0x000000d0)   // 208 (208)
0x00002A5E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002A64: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002A6A: 0x8121            - O_GIQ_OPTION
0x00002A6C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002A72: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002A78: 0xC001 0x000000d1 - O_INTOP(0x000000d1)   // 209 (209)
0x00002A7E: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00002A84: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002A8A: 0x8121            - O_GIQ_OPTION
0x00002A8C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002A92: 0x800D            - O_D_TO_A
0x00002A94: 0x8019            - O_SWAPA
0x00002A96: 0x802A            - O_POP_TO_BASE
0x00002A98: 0x8029            - O_POP_BASE
0x00002A9A: 0x800C            - O_A_TO_D
0x00002A9C: 0x801C            - O_POP_RETURN
0x00002A9E: 0x802A            - O_POP_TO_BASE
0x00002AA0: 0x8029            - O_POP_BASE
0x00002AA2: 0x801C            - O_POP_RETURN

53: morph39 (0x00002aa4)
===============================
0x00002AA4: 0x802B            - O_PUSH_BASE
0x00002AA6: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002AAC: 0xC001 0x000000d2 - O_INTOP(0x000000d2)   // 210 (210)
0x00002AB2: 0x811E            - O_GSAY_REPLY
0x00002AB4: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002ABA: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002AC0: 0xC001 0x000000d3 - O_INTOP(0x000000d3)   // 211 (211)
0x00002AC6: 0xC001 0x0000005a - O_INTOP(0x0000005a)   // 90 (90)
0x00002ACC: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x00002AD2: 0x8121            - O_GIQ_OPTION
0x00002AD4: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002ADA: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002AE0: 0xC001 0x000000d4 - O_INTOP(0x000000d4)   // 212 (212)
0x00002AE6: 0xC001 0x00000036 - O_INTOP(0x00000036)   // 54 (54)
0x00002AEC: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002AF2: 0x8121            - O_GIQ_OPTION
0x00002AF4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002AFA: 0x800D            - O_D_TO_A
0x00002AFC: 0x8019            - O_SWAPA
0x00002AFE: 0x802A            - O_POP_TO_BASE
0x00002B00: 0x8029            - O_POP_BASE
0x00002B02: 0x800C            - O_A_TO_D
0x00002B04: 0x801C            - O_POP_RETURN
0x00002B06: 0x802A            - O_POP_TO_BASE
0x00002B08: 0x8029            - O_POP_BASE
0x00002B0A: 0x801C            - O_POP_RETURN

54: morph39_1 (0x00002b0c)
===============================
0x00002B0C: 0x802B            - O_PUSH_BASE
0x00002B0E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002B14: 0x800D            - O_D_TO_A
0x00002B16: 0x8019            - O_SWAPA
0x00002B18: 0x802A            - O_POP_TO_BASE
0x00002B1A: 0x8029            - O_POP_BASE
0x00002B1C: 0x800C            - O_A_TO_D
0x00002B1E: 0x801C            - O_POP_RETURN
0x00002B20: 0x802A            - O_POP_TO_BASE
0x00002B22: 0x8029            - O_POP_BASE
0x00002B24: 0x801C            - O_POP_RETURN

55: morph40 (0x00002b26)
===============================
0x00002B26: 0x802B            - O_PUSH_BASE
0x00002B28: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002B2E: 0xC001 0x000000d5 - O_INTOP(0x000000d5)   // 213 (213)
0x00002B34: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002B3A: 0x8120            - O_GSAY_MESSAGE
0x00002B3C: 0xC001 0x00002b52 - O_INTOP(0x00002b52)   // 11090 (11090)
0x00002B42: 0x800D            - O_D_TO_A
0x00002B44: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002B4A: 0xC001 0x0000002b - O_INTOP(0x0000002b)   // 43 (43)
0x00002B50: 0x8005            - O_CALL
0x00002B52: 0x801A            - O_POP
0x00002B54: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002B5A: 0x800D            - O_D_TO_A
0x00002B5C: 0x8019            - O_SWAPA
0x00002B5E: 0x802A            - O_POP_TO_BASE
0x00002B60: 0x8029            - O_POP_BASE
0x00002B62: 0x800C            - O_A_TO_D
0x00002B64: 0x801C            - O_POP_RETURN
0x00002B66: 0x802A            - O_POP_TO_BASE
0x00002B68: 0x8029            - O_POP_BASE
0x00002B6A: 0x801C            - O_POP_RETURN

56: morph41 (0x00002b6c)
===============================
0x00002B6C: 0x802B            - O_PUSH_BASE
0x00002B6E: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002B74: 0xC001 0x000000d6 - O_INTOP(0x000000d6)   // 214 (214)
0x00002B7A: 0x811E            - O_GSAY_REPLY
0x00002B7C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002B82: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002B88: 0xC001 0x000000d7 - O_INTOP(0x000000d7)   // 215 (215)
0x00002B8E: 0xC001 0x0000002b - O_INTOP(0x0000002b)   // 43 (43)
0x00002B94: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002B9A: 0x8121            - O_GIQ_OPTION
0x00002B9C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002BA2: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002BA8: 0xC001 0x000000d8 - O_INTOP(0x000000d8)   // 216 (216)
0x00002BAE: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00002BB4: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002BBA: 0x8121            - O_GIQ_OPTION
0x00002BBC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002BC2: 0x800D            - O_D_TO_A
0x00002BC4: 0x8019            - O_SWAPA
0x00002BC6: 0x802A            - O_POP_TO_BASE
0x00002BC8: 0x8029            - O_POP_BASE
0x00002BCA: 0x800C            - O_A_TO_D
0x00002BCC: 0x801C            - O_POP_RETURN
0x00002BCE: 0x802A            - O_POP_TO_BASE
0x00002BD0: 0x8029            - O_POP_BASE
0x00002BD2: 0x801C            - O_POP_RETURN

57: morph42 (0x00002bd4)
===============================
0x00002BD4: 0x802B            - O_PUSH_BASE
0x00002BD6: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002BDC: 0xC001 0x000000d9 - O_INTOP(0x000000d9)   // 217 (217)
0x00002BE2: 0x811E            - O_GSAY_REPLY
0x00002BE4: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002BEA: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002BF0: 0xC001 0x000000da - O_INTOP(0x000000da)   // 218 (218)
0x00002BF6: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002BFC: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002C02: 0x8121            - O_GIQ_OPTION
0x00002C04: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002C0A: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002C10: 0xC001 0x000000db - O_INTOP(0x000000db)   // 219 (219)
0x00002C16: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00002C1C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002C22: 0x8121            - O_GIQ_OPTION
0x00002C24: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002C2A: 0x800D            - O_D_TO_A
0x00002C2C: 0x8019            - O_SWAPA
0x00002C2E: 0x802A            - O_POP_TO_BASE
0x00002C30: 0x8029            - O_POP_BASE
0x00002C32: 0x800C            - O_A_TO_D
0x00002C34: 0x801C            - O_POP_RETURN
0x00002C36: 0x802A            - O_POP_TO_BASE
0x00002C38: 0x8029            - O_POP_BASE
0x00002C3A: 0x801C            - O_POP_RETURN

58: morph42a (0x00002c3c)
===============================
0x00002C3C: 0x802B            - O_PUSH_BASE
0x00002C3E: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002C44: 0xC001 0x000000dc - O_INTOP(0x000000dc)   // 220 (220)
0x00002C4A: 0x811E            - O_GSAY_REPLY
0x00002C4C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002C52: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002C58: 0xC001 0x000000dd - O_INTOP(0x000000dd)   // 221 (221)
0x00002C5E: 0xC001 0x0000003b - O_INTOP(0x0000003b)   // 59 (59)
0x00002C64: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002C6A: 0x8121            - O_GIQ_OPTION
0x00002C6C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002C72: 0x800D            - O_D_TO_A
0x00002C74: 0x8019            - O_SWAPA
0x00002C76: 0x802A            - O_POP_TO_BASE
0x00002C78: 0x8029            - O_POP_BASE
0x00002C7A: 0x800C            - O_A_TO_D
0x00002C7C: 0x801C            - O_POP_RETURN
0x00002C7E: 0x802A            - O_POP_TO_BASE
0x00002C80: 0x8029            - O_POP_BASE
0x00002C82: 0x801C            - O_POP_RETURN

59: morph42a_1 (0x00002c84)
===============================
0x00002C84: 0x802B            - O_PUSH_BASE
0x00002C86: 0xC001 0x00002cc0 - O_INTOP(0x00002cc0)   // 11456 (11456)
0x00002C8C: 0x80BF            - O_DUDE_OBJ
0x00002C8E: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x00002C94: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002C9A: 0x80AC            - O_ROLL_VS_SKILL
0x00002C9C: 0x80AF            - O_IS_SUCCESS
0x00002C9E: 0x802F            - O_IF
0x00002CA0: 0xC001 0x00002cb6 - O_INTOP(0x00002cb6)   // 11446 (11446)
0x00002CA6: 0x800D            - O_D_TO_A
0x00002CA8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002CAE: 0xC001 0x0000003c - O_INTOP(0x0000003c)   // 60 (60)
0x00002CB4: 0x8005            - O_CALL
0x00002CB6: 0x801A            - O_POP
0x00002CB8: 0xC001 0x00002cd8 - O_INTOP(0x00002cd8)   // 11480 (11480)
0x00002CBE: 0x8004            - O_JMP
0x00002CC0: 0xC001 0x00002cd6 - O_INTOP(0x00002cd6)   // 11478 (11478)
0x00002CC6: 0x800D            - O_D_TO_A
0x00002CC8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002CCE: 0xC001 0x0000003d - O_INTOP(0x0000003d)   // 61 (61)
0x00002CD4: 0x8005            - O_CALL
0x00002CD6: 0x801A            - O_POP
0x00002CD8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002CDE: 0x800D            - O_D_TO_A
0x00002CE0: 0x8019            - O_SWAPA
0x00002CE2: 0x802A            - O_POP_TO_BASE
0x00002CE4: 0x8029            - O_POP_BASE
0x00002CE6: 0x800C            - O_A_TO_D
0x00002CE8: 0x801C            - O_POP_RETURN
0x00002CEA: 0x802A            - O_POP_TO_BASE
0x00002CEC: 0x8029            - O_POP_BASE
0x00002CEE: 0x801C            - O_POP_RETURN

60: morph42b (0x00002cf0)
===============================
0x00002CF0: 0x802B            - O_PUSH_BASE
0x00002CF2: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002CF8: 0xC001 0x000000de - O_INTOP(0x000000de)   // 222 (222)
0x00002CFE: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002D04: 0x8120            - O_GSAY_MESSAGE
0x00002D06: 0xC001 0x00002d1c - O_INTOP(0x00002d1c)   // 11548 (11548)
0x00002D0C: 0x800D            - O_D_TO_A
0x00002D0E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002D14: 0xC001 0x00000054 - O_INTOP(0x00000054)   // 84 (84)
0x00002D1A: 0x8005            - O_CALL
0x00002D1C: 0x801A            - O_POP
0x00002D1E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002D24: 0x800D            - O_D_TO_A
0x00002D26: 0x8019            - O_SWAPA
0x00002D28: 0x802A            - O_POP_TO_BASE
0x00002D2A: 0x8029            - O_POP_BASE
0x00002D2C: 0x800C            - O_A_TO_D
0x00002D2E: 0x801C            - O_POP_RETURN
0x00002D30: 0x802A            - O_POP_TO_BASE
0x00002D32: 0x8029            - O_POP_BASE
0x00002D34: 0x801C            - O_POP_RETURN

61: morph42c (0x00002d36)
===============================
0x00002D36: 0x802B            - O_PUSH_BASE
0x00002D38: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002D3E: 0xC001 0x000000df - O_INTOP(0x000000df)   // 223 (223)
0x00002D44: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002D4A: 0x8120            - O_GSAY_MESSAGE
0x00002D4C: 0xC001 0x00002d62 - O_INTOP(0x00002d62)   // 11618 (11618)
0x00002D52: 0x800D            - O_D_TO_A
0x00002D54: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002D5A: 0xC001 0x00000055 - O_INTOP(0x00000055)   // 85 (85)
0x00002D60: 0x8005            - O_CALL
0x00002D62: 0x801A            - O_POP
0x00002D64: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002D6A: 0x800D            - O_D_TO_A
0x00002D6C: 0x8019            - O_SWAPA
0x00002D6E: 0x802A            - O_POP_TO_BASE
0x00002D70: 0x8029            - O_POP_BASE
0x00002D72: 0x800C            - O_A_TO_D
0x00002D74: 0x801C            - O_POP_RETURN
0x00002D76: 0x802A            - O_POP_TO_BASE
0x00002D78: 0x8029            - O_POP_BASE
0x00002D7A: 0x801C            - O_POP_RETURN

62: morph45 (0x00002d7c)
===============================
0x00002D7C: 0x802B            - O_PUSH_BASE
0x00002D7E: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002D84: 0xC001 0x000000e0 - O_INTOP(0x000000e0)   // 224 (224)
0x00002D8A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002D90: 0x8120            - O_GSAY_MESSAGE
0x00002D92: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002D98: 0x800D            - O_D_TO_A
0x00002D9A: 0x8019            - O_SWAPA
0x00002D9C: 0x802A            - O_POP_TO_BASE
0x00002D9E: 0x8029            - O_POP_BASE
0x00002DA0: 0x800C            - O_A_TO_D
0x00002DA2: 0x801C            - O_POP_RETURN
0x00002DA4: 0x802A            - O_POP_TO_BASE
0x00002DA6: 0x8029            - O_POP_BASE
0x00002DA8: 0x801C            - O_POP_RETURN

63: morph46 (0x00002daa)
===============================
0x00002DAA: 0x802B            - O_PUSH_BASE
0x00002DAC: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002DB2: 0xC001 0x000000e1 - O_INTOP(0x000000e1)   // 225 (225)
0x00002DB8: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002DBE: 0x8120            - O_GSAY_MESSAGE
0x00002DC0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002DC6: 0x800D            - O_D_TO_A
0x00002DC8: 0x8019            - O_SWAPA
0x00002DCA: 0x802A            - O_POP_TO_BASE
0x00002DCC: 0x8029            - O_POP_BASE
0x00002DCE: 0x800C            - O_A_TO_D
0x00002DD0: 0x801C            - O_POP_RETURN
0x00002DD2: 0x802A            - O_POP_TO_BASE
0x00002DD4: 0x8029            - O_POP_BASE
0x00002DD6: 0x801C            - O_POP_RETURN

64: morph47 (0x00002dd8)
===============================
0x00002DD8: 0x802B            - O_PUSH_BASE
0x00002DDA: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002DE0: 0xC001 0x000000e2 - O_INTOP(0x000000e2)   // 226 (226)
0x00002DE6: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002DEC: 0x8120            - O_GSAY_MESSAGE
0x00002DEE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002DF4: 0x800D            - O_D_TO_A
0x00002DF6: 0x8019            - O_SWAPA
0x00002DF8: 0x802A            - O_POP_TO_BASE
0x00002DFA: 0x8029            - O_POP_BASE
0x00002DFC: 0x800C            - O_A_TO_D
0x00002DFE: 0x801C            - O_POP_RETURN
0x00002E00: 0x802A            - O_POP_TO_BASE
0x00002E02: 0x8029            - O_POP_BASE
0x00002E04: 0x801C            - O_POP_RETURN

65: morph48 (0x00002e06)
===============================
0x00002E06: 0x802B            - O_PUSH_BASE
0x00002E08: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002E0E: 0xC001 0x000000e3 - O_INTOP(0x000000e3)   // 227 (227)
0x00002E14: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002E1A: 0x8120            - O_GSAY_MESSAGE
0x00002E1C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002E22: 0x800D            - O_D_TO_A
0x00002E24: 0x8019            - O_SWAPA
0x00002E26: 0x802A            - O_POP_TO_BASE
0x00002E28: 0x8029            - O_POP_BASE
0x00002E2A: 0x800C            - O_A_TO_D
0x00002E2C: 0x801C            - O_POP_RETURN
0x00002E2E: 0x802A            - O_POP_TO_BASE
0x00002E30: 0x8029            - O_POP_BASE
0x00002E32: 0x801C            - O_POP_RETURN

66: morph49 (0x00002e34)
===============================
0x00002E34: 0x802B            - O_PUSH_BASE
0x00002E36: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002E3C: 0xC001 0x000000e4 - O_INTOP(0x000000e4)   // 228 (228)
0x00002E42: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002E48: 0x8120            - O_GSAY_MESSAGE
0x00002E4A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002E50: 0x800D            - O_D_TO_A
0x00002E52: 0x8019            - O_SWAPA
0x00002E54: 0x802A            - O_POP_TO_BASE
0x00002E56: 0x8029            - O_POP_BASE
0x00002E58: 0x800C            - O_A_TO_D
0x00002E5A: 0x801C            - O_POP_RETURN
0x00002E5C: 0x802A            - O_POP_TO_BASE
0x00002E5E: 0x8029            - O_POP_BASE
0x00002E60: 0x801C            - O_POP_RETURN

67: morph50 (0x00002e62)
===============================
0x00002E62: 0x802B            - O_PUSH_BASE
0x00002E64: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002E6A: 0xC001 0x000000e5 - O_INTOP(0x000000e5)   // 229 (229)
0x00002E70: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002E76: 0x8120            - O_GSAY_MESSAGE
0x00002E78: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002E7E: 0x800D            - O_D_TO_A
0x00002E80: 0x8019            - O_SWAPA
0x00002E82: 0x802A            - O_POP_TO_BASE
0x00002E84: 0x8029            - O_POP_BASE
0x00002E86: 0x800C            - O_A_TO_D
0x00002E88: 0x801C            - O_POP_RETURN
0x00002E8A: 0x802A            - O_POP_TO_BASE
0x00002E8C: 0x8029            - O_POP_BASE
0x00002E8E: 0x801C            - O_POP_RETURN

68: morph51 (0x00002e90)
===============================
0x00002E90: 0x802B            - O_PUSH_BASE
0x00002E92: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002E98: 0xC001 0x000000e6 - O_INTOP(0x000000e6)   // 230 (230)
0x00002E9E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002EA4: 0x8120            - O_GSAY_MESSAGE
0x00002EA6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002EAC: 0x800D            - O_D_TO_A
0x00002EAE: 0x8019            - O_SWAPA
0x00002EB0: 0x802A            - O_POP_TO_BASE
0x00002EB2: 0x8029            - O_POP_BASE
0x00002EB4: 0x800C            - O_A_TO_D
0x00002EB6: 0x801C            - O_POP_RETURN
0x00002EB8: 0x802A            - O_POP_TO_BASE
0x00002EBA: 0x8029            - O_POP_BASE
0x00002EBC: 0x801C            - O_POP_RETURN

69: morph52 (0x00002ebe)
===============================
0x00002EBE: 0x802B            - O_PUSH_BASE
0x00002EC0: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002EC6: 0xC001 0x000000e7 - O_INTOP(0x000000e7)   // 231 (231)
0x00002ECC: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002ED2: 0x8120            - O_GSAY_MESSAGE
0x00002ED4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002EDA: 0x800D            - O_D_TO_A
0x00002EDC: 0x8019            - O_SWAPA
0x00002EDE: 0x802A            - O_POP_TO_BASE
0x00002EE0: 0x8029            - O_POP_BASE
0x00002EE2: 0x800C            - O_A_TO_D
0x00002EE4: 0x801C            - O_POP_RETURN
0x00002EE6: 0x802A            - O_POP_TO_BASE
0x00002EE8: 0x8029            - O_POP_BASE
0x00002EEA: 0x801C            - O_POP_RETURN

70: morph53 (0x00002eec)
===============================
0x00002EEC: 0x802B            - O_PUSH_BASE
0x00002EEE: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002EF4: 0xC001 0x000000e8 - O_INTOP(0x000000e8)   // 232 (232)
0x00002EFA: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002F00: 0x8120            - O_GSAY_MESSAGE
0x00002F02: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002F08: 0x800D            - O_D_TO_A
0x00002F0A: 0x8019            - O_SWAPA
0x00002F0C: 0x802A            - O_POP_TO_BASE
0x00002F0E: 0x8029            - O_POP_BASE
0x00002F10: 0x800C            - O_A_TO_D
0x00002F12: 0x801C            - O_POP_RETURN
0x00002F14: 0x802A            - O_POP_TO_BASE
0x00002F16: 0x8029            - O_POP_BASE
0x00002F18: 0x801C            - O_POP_RETURN

71: morph54 (0x00002f1a)
===============================
0x00002F1A: 0x802B            - O_PUSH_BASE
0x00002F1C: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002F22: 0xC001 0x000000e9 - O_INTOP(0x000000e9)   // 233 (233)
0x00002F28: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002F2E: 0x8120            - O_GSAY_MESSAGE
0x00002F30: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002F36: 0x800D            - O_D_TO_A
0x00002F38: 0x8019            - O_SWAPA
0x00002F3A: 0x802A            - O_POP_TO_BASE
0x00002F3C: 0x8029            - O_POP_BASE
0x00002F3E: 0x800C            - O_A_TO_D
0x00002F40: 0x801C            - O_POP_RETURN
0x00002F42: 0x802A            - O_POP_TO_BASE
0x00002F44: 0x8029            - O_POP_BASE
0x00002F46: 0x801C            - O_POP_RETURN

72: morph55 (0x00002f48)
===============================
0x00002F48: 0x802B            - O_PUSH_BASE
0x00002F4A: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002F50: 0xC001 0x000000ea - O_INTOP(0x000000ea)   // 234 (234)
0x00002F56: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002F5C: 0x8120            - O_GSAY_MESSAGE
0x00002F5E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002F64: 0x800D            - O_D_TO_A
0x00002F66: 0x8019            - O_SWAPA
0x00002F68: 0x802A            - O_POP_TO_BASE
0x00002F6A: 0x8029            - O_POP_BASE
0x00002F6C: 0x800C            - O_A_TO_D
0x00002F6E: 0x801C            - O_POP_RETURN
0x00002F70: 0x802A            - O_POP_TO_BASE
0x00002F72: 0x8029            - O_POP_BASE
0x00002F74: 0x801C            - O_POP_RETURN

73: morph56 (0x00002f76)
===============================
0x00002F76: 0x802B            - O_PUSH_BASE
0x00002F78: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002F7E: 0xC001 0x000000eb - O_INTOP(0x000000eb)   // 235 (235)
0x00002F84: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002F8A: 0x8120            - O_GSAY_MESSAGE
0x00002F8C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002F92: 0x800D            - O_D_TO_A
0x00002F94: 0x8019            - O_SWAPA
0x00002F96: 0x802A            - O_POP_TO_BASE
0x00002F98: 0x8029            - O_POP_BASE
0x00002F9A: 0x800C            - O_A_TO_D
0x00002F9C: 0x801C            - O_POP_RETURN
0x00002F9E: 0x802A            - O_POP_TO_BASE
0x00002FA0: 0x8029            - O_POP_BASE
0x00002FA2: 0x801C            - O_POP_RETURN

74: morph57 (0x00002fa4)
===============================
0x00002FA4: 0x802B            - O_PUSH_BASE
0x00002FA6: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002FAC: 0xC001 0x000000ec - O_INTOP(0x000000ec)   // 236 (236)
0x00002FB2: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002FB8: 0x8120            - O_GSAY_MESSAGE
0x00002FBA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002FC0: 0x800D            - O_D_TO_A
0x00002FC2: 0x8019            - O_SWAPA
0x00002FC4: 0x802A            - O_POP_TO_BASE
0x00002FC6: 0x8029            - O_POP_BASE
0x00002FC8: 0x800C            - O_A_TO_D
0x00002FCA: 0x801C            - O_POP_RETURN
0x00002FCC: 0x802A            - O_POP_TO_BASE
0x00002FCE: 0x8029            - O_POP_BASE
0x00002FD0: 0x801C            - O_POP_RETURN

75: morph58 (0x00002fd2)
===============================
0x00002FD2: 0x802B            - O_PUSH_BASE
0x00002FD4: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00002FDA: 0xC001 0x000000ed - O_INTOP(0x000000ed)   // 237 (237)
0x00002FE0: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002FE6: 0x8120            - O_GSAY_MESSAGE
0x00002FE8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002FEE: 0x800D            - O_D_TO_A
0x00002FF0: 0x8019            - O_SWAPA
0x00002FF2: 0x802A            - O_POP_TO_BASE
0x00002FF4: 0x8029            - O_POP_BASE
0x00002FF6: 0x800C            - O_A_TO_D
0x00002FF8: 0x801C            - O_POP_RETURN
0x00002FFA: 0x802A            - O_POP_TO_BASE
0x00002FFC: 0x8029            - O_POP_BASE
0x00002FFE: 0x801C            - O_POP_RETURN

76: morph59 (0x00003000)
===============================
0x00003000: 0x802B            - O_PUSH_BASE
0x00003002: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00003008: 0xC001 0x000000ee - O_INTOP(0x000000ee)   // 238 (238)
0x0000300E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00003014: 0x8120            - O_GSAY_MESSAGE
0x00003016: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000301C: 0x800D            - O_D_TO_A
0x0000301E: 0x8019            - O_SWAPA
0x00003020: 0x802A            - O_POP_TO_BASE
0x00003022: 0x8029            - O_POP_BASE
0x00003024: 0x800C            - O_A_TO_D
0x00003026: 0x801C            - O_POP_RETURN
0x00003028: 0x802A            - O_POP_TO_BASE
0x0000302A: 0x8029            - O_POP_BASE
0x0000302C: 0x801C            - O_POP_RETURN

77: morph60 (0x0000302e)
===============================
0x0000302E: 0x802B            - O_PUSH_BASE
0x00003030: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00003036: 0xC001 0x000000ef - O_INTOP(0x000000ef)   // 239 (239)
0x0000303C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00003042: 0x8120            - O_GSAY_MESSAGE
0x00003044: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000304A: 0x800D            - O_D_TO_A
0x0000304C: 0x8019            - O_SWAPA
0x0000304E: 0x802A            - O_POP_TO_BASE
0x00003050: 0x8029            - O_POP_BASE
0x00003052: 0x800C            - O_A_TO_D
0x00003054: 0x801C            - O_POP_RETURN
0x00003056: 0x802A            - O_POP_TO_BASE
0x00003058: 0x8029            - O_POP_BASE
0x0000305A: 0x801C            - O_POP_RETURN

78: morph61 (0x0000305c)
===============================
0x0000305C: 0x802B            - O_PUSH_BASE
0x0000305E: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00003064: 0xC001 0x000000f0 - O_INTOP(0x000000f0)   // 240 (240)
0x0000306A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00003070: 0x8120            - O_GSAY_MESSAGE
0x00003072: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003078: 0x800D            - O_D_TO_A
0x0000307A: 0x8019            - O_SWAPA
0x0000307C: 0x802A            - O_POP_TO_BASE
0x0000307E: 0x8029            - O_POP_BASE
0x00003080: 0x800C            - O_A_TO_D
0x00003082: 0x801C            - O_POP_RETURN
0x00003084: 0x802A            - O_POP_TO_BASE
0x00003086: 0x8029            - O_POP_BASE
0x00003088: 0x801C            - O_POP_RETURN

79: morph62 (0x0000308a)
===============================
0x0000308A: 0x802B            - O_PUSH_BASE
0x0000308C: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x00003092: 0xC001 0x000000f1 - O_INTOP(0x000000f1)   // 241 (241)
0x00003098: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000309E: 0x8120            - O_GSAY_MESSAGE
0x000030A0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000030A6: 0x800D            - O_D_TO_A
0x000030A8: 0x8019            - O_SWAPA
0x000030AA: 0x802A            - O_POP_TO_BASE
0x000030AC: 0x8029            - O_POP_BASE
0x000030AE: 0x800C            - O_A_TO_D
0x000030B0: 0x801C            - O_POP_RETURN
0x000030B2: 0x802A            - O_POP_TO_BASE
0x000030B4: 0x8029            - O_POP_BASE
0x000030B6: 0x801C            - O_POP_RETURN

80: morph63 (0x000030b8)
===============================
0x000030B8: 0x802B            - O_PUSH_BASE
0x000030BA: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x000030C0: 0xC001 0x000000f2 - O_INTOP(0x000000f2)   // 242 (242)
0x000030C6: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000030CC: 0x8120            - O_GSAY_MESSAGE
0x000030CE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000030D4: 0x800D            - O_D_TO_A
0x000030D6: 0x8019            - O_SWAPA
0x000030D8: 0x802A            - O_POP_TO_BASE
0x000030DA: 0x8029            - O_POP_BASE
0x000030DC: 0x800C            - O_A_TO_D
0x000030DE: 0x801C            - O_POP_RETURN
0x000030E0: 0x802A            - O_POP_TO_BASE
0x000030E2: 0x8029            - O_POP_BASE
0x000030E4: 0x801C            - O_POP_RETURN

81: morph64 (0x000030e6)
===============================
0x000030E6: 0x802B            - O_PUSH_BASE
0x000030E8: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x000030EE: 0xC001 0x000000f3 - O_INTOP(0x000000f3)   // 243 (243)
0x000030F4: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000030FA: 0x8120            - O_GSAY_MESSAGE
0x000030FC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003102: 0x800D            - O_D_TO_A
0x00003104: 0x8019            - O_SWAPA
0x00003106: 0x802A            - O_POP_TO_BASE
0x00003108: 0x8029            - O_POP_BASE
0x0000310A: 0x800C            - O_A_TO_D
0x0000310C: 0x801C            - O_POP_RETURN
0x0000310E: 0x802A            - O_POP_TO_BASE
0x00003110: 0x8029            - O_POP_BASE
0x00003112: 0x801C            - O_POP_RETURN

82: morph65 (0x00003114)
===============================
0x00003114: 0x802B            - O_PUSH_BASE
0x00003116: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x0000311C: 0xC001 0x000000f4 - O_INTOP(0x000000f4)   // 244 (244)
0x00003122: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00003128: 0x8120            - O_GSAY_MESSAGE
0x0000312A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003130: 0x800D            - O_D_TO_A
0x00003132: 0x8019            - O_SWAPA
0x00003134: 0x802A            - O_POP_TO_BASE
0x00003136: 0x8029            - O_POP_BASE
0x00003138: 0x800C            - O_A_TO_D
0x0000313A: 0x801C            - O_POP_RETURN
0x0000313C: 0x802A            - O_POP_TO_BASE
0x0000313E: 0x8029            - O_POP_BASE
0x00003140: 0x801C            - O_POP_RETURN

83: morphx (0x00003142)
===============================
0x00003142: 0x802B            - O_PUSH_BASE
0x00003144: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000314A: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00003150: 0x8013            - O_STORE_GLOBAL
0x00003152: 0x80BC            - O_SELF_OBJ
0x00003154: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x0000315A: 0x80F2            - O_GAME_TICKS
0x0000315C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00003162: 0x80F0            - O_ADD_TIMER_EVENT
0x00003164: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000316A: 0x800D            - O_D_TO_A
0x0000316C: 0x8019            - O_SWAPA
0x0000316E: 0x802A            - O_POP_TO_BASE
0x00003170: 0x8029            - O_POP_BASE
0x00003172: 0x800C            - O_A_TO_D
0x00003174: 0x801C            - O_POP_RETURN
0x00003176: 0x802A            - O_POP_TO_BASE
0x00003178: 0x8029            - O_POP_BASE
0x0000317A: 0x801C            - O_POP_RETURN

84: morphx2 (0x0000317c)
===============================
0x0000317C: 0x802B            - O_PUSH_BASE
0x0000317E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00003184: 0xC001 0x00000007 - O_INTOP(0x00000007)   // 7 (7)
0x0000318A: 0x8013            - O_STORE_GLOBAL
0x0000318C: 0xC001 0x000000f1 - O_INTOP(0x000000f1)   // 241 (241)
0x00003192: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00003198: 0x80C6            - O_SET_GLOBAL_VAR
0x0000319A: 0x9001 0x00000006 - O_STRINGOP(0x00000006)   // 6 (6)
0x000031A0: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x000031A6: 0x80E4            - O_LOAD_MAP
0x000031A8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000031AE: 0x800D            - O_D_TO_A
0x000031B0: 0x8019            - O_SWAPA
0x000031B2: 0x802A            - O_POP_TO_BASE
0x000031B4: 0x8029            - O_POP_BASE
0x000031B6: 0x800C            - O_A_TO_D
0x000031B8: 0x801C            - O_POP_RETURN
0x000031BA: 0x802A            - O_POP_TO_BASE
0x000031BC: 0x8029            - O_POP_BASE
0x000031BE: 0x801C            - O_POP_RETURN

85: morphx4 (0x000031c0)
===============================
0x000031C0: 0x802B            - O_PUSH_BASE
0x000031C2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000031C8: 0x800D            - O_D_TO_A
0x000031CA: 0x8019            - O_SWAPA
0x000031CC: 0x802A            - O_POP_TO_BASE
0x000031CE: 0x8029            - O_POP_BASE
0x000031D0: 0x800C            - O_A_TO_D
0x000031D2: 0x801C            - O_POP_RETURN
0x000031D4: 0x802A            - O_POP_TO_BASE
0x000031D6: 0x8029            - O_POP_BASE
0x000031D8: 0x801C            - O_POP_RETURN

86: morph66 (0x000031da)
===============================
0x000031DA: 0x802B            - O_PUSH_BASE
0x000031DC: 0x80BC            - O_SELF_OBJ
0x000031DE: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x000031E4: 0xC001 0x000000f5 - O_INTOP(0x000000f5)   // 245 (245)
0x000031EA: 0x8105            - O_MESSAGE_STR
0x000031EC: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000031F2: 0x810A            - O_FLOAT_MSG
0x000031F4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000031FA: 0x800D            - O_D_TO_A
0x000031FC: 0x8019            - O_SWAPA
0x000031FE: 0x802A            - O_POP_TO_BASE
0x00003200: 0x8029            - O_POP_BASE
0x00003202: 0x800C            - O_A_TO_D
0x00003204: 0x801C            - O_POP_RETURN
0x00003206: 0x802A            - O_POP_TO_BASE
0x00003208: 0x8029            - O_POP_BASE
0x0000320A: 0x801C            - O_POP_RETURN

87: morph05a (0x0000320c)
===============================
0x0000320C: 0x802B            - O_PUSH_BASE
0x0000320E: 0xC001 0x00003224 - O_INTOP(0x00003224)   // 12836 (12836)
0x00003214: 0x800D            - O_D_TO_A
0x00003216: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000321C: 0xC001 0x00000060 - O_INTOP(0x00000060)   // 96 (96)
0x00003222: 0x8005            - O_CALL
0x00003224: 0x801A            - O_POP
0x00003226: 0xC001 0x0000323c - O_INTOP(0x0000323c)   // 12860 (12860)
0x0000322C: 0x800D            - O_D_TO_A
0x0000322E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003234: 0xC001 0x00000010 - O_INTOP(0x00000010)   // 16 (16)
0x0000323A: 0x8005            - O_CALL
0x0000323C: 0x801A            - O_POP
0x0000323E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003244: 0x800D            - O_D_TO_A
0x00003246: 0x8019            - O_SWAPA
0x00003248: 0x802A            - O_POP_TO_BASE
0x0000324A: 0x8029            - O_POP_BASE
0x0000324C: 0x800C            - O_A_TO_D
0x0000324E: 0x801C            - O_POP_RETURN
0x00003250: 0x802A            - O_POP_TO_BASE
0x00003252: 0x8029            - O_POP_BASE
0x00003254: 0x801C            - O_POP_RETURN

88: morph08a (0x00003256)
===============================
0x00003256: 0x802B            - O_PUSH_BASE
0x00003258: 0xC001 0x0000326e - O_INTOP(0x0000326e)   // 12910 (12910)
0x0000325E: 0x800D            - O_D_TO_A
0x00003260: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003266: 0xC001 0x00000060 - O_INTOP(0x00000060)   // 96 (96)
0x0000326C: 0x8005            - O_CALL
0x0000326E: 0x801A            - O_POP
0x00003270: 0xC001 0x00003286 - O_INTOP(0x00003286)   // 12934 (12934)
0x00003276: 0x800D            - O_D_TO_A
0x00003278: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000327E: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x00003284: 0x8005            - O_CALL
0x00003286: 0x801A            - O_POP
0x00003288: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000328E: 0x800D            - O_D_TO_A
0x00003290: 0x8019            - O_SWAPA
0x00003292: 0x802A            - O_POP_TO_BASE
0x00003294: 0x8029            - O_POP_BASE
0x00003296: 0x800C            - O_A_TO_D
0x00003298: 0x801C            - O_POP_RETURN
0x0000329A: 0x802A            - O_POP_TO_BASE
0x0000329C: 0x8029            - O_POP_BASE
0x0000329E: 0x801C            - O_POP_RETURN

89: morph32a (0x000032a0)
===============================
0x000032A0: 0x802B            - O_PUSH_BASE
0x000032A2: 0xC001 0x000032b8 - O_INTOP(0x000032b8)   // 12984 (12984)
0x000032A8: 0x800D            - O_D_TO_A
0x000032AA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000032B0: 0xC001 0x00000060 - O_INTOP(0x00000060)   // 96 (96)
0x000032B6: 0x8005            - O_CALL
0x000032B8: 0x801A            - O_POP
0x000032BA: 0xC001 0x000032d0 - O_INTOP(0x000032d0)   // 13008 (13008)
0x000032C0: 0x800D            - O_D_TO_A
0x000032C2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000032C8: 0xC001 0x0000002e - O_INTOP(0x0000002e)   // 46 (46)
0x000032CE: 0x8005            - O_CALL
0x000032D0: 0x801A            - O_POP
0x000032D2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000032D8: 0x800D            - O_D_TO_A
0x000032DA: 0x8019            - O_SWAPA
0x000032DC: 0x802A            - O_POP_TO_BASE
0x000032DE: 0x8029            - O_POP_BASE
0x000032E0: 0x800C            - O_A_TO_D
0x000032E2: 0x801C            - O_POP_RETURN
0x000032E4: 0x802A            - O_POP_TO_BASE
0x000032E6: 0x8029            - O_POP_BASE
0x000032E8: 0x801C            - O_POP_RETURN

90: morph39a (0x000032ea)
===============================
0x000032EA: 0x802B            - O_PUSH_BASE
0x000032EC: 0xC001 0x00003302 - O_INTOP(0x00003302)   // 13058 (13058)
0x000032F2: 0x800D            - O_D_TO_A
0x000032F4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000032FA: 0xC001 0x00000060 - O_INTOP(0x00000060)   // 96 (96)
0x00003300: 0x8005            - O_CALL
0x00003302: 0x801A            - O_POP
0x00003304: 0xC001 0x0000331a - O_INTOP(0x0000331a)   // 13082 (13082)
0x0000330A: 0x800D            - O_D_TO_A
0x0000330C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003312: 0xC001 0x0000002e - O_INTOP(0x0000002e)   // 46 (46)
0x00003318: 0x8005            - O_CALL
0x0000331A: 0x801A            - O_POP
0x0000331C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003322: 0x800D            - O_D_TO_A
0x00003324: 0x8019            - O_SWAPA
0x00003326: 0x802A            - O_POP_TO_BASE
0x00003328: 0x8029            - O_POP_BASE
0x0000332A: 0x800C            - O_A_TO_D
0x0000332C: 0x801C            - O_POP_RETURN
0x0000332E: 0x802A            - O_POP_TO_BASE
0x00003330: 0x8029            - O_POP_BASE
0x00003332: 0x801C            - O_POP_RETURN

91: morph05b (0x00003334)
===============================
0x00003334: 0x802B            - O_PUSH_BASE
0x00003336: 0xC001 0x00003370 - O_INTOP(0x00003370)   // 13168 (13168)
0x0000333C: 0x80BF            - O_DUDE_OBJ
0x0000333E: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x00003344: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000334A: 0x80AC            - O_ROLL_VS_SKILL
0x0000334C: 0x80AF            - O_IS_SUCCESS
0x0000334E: 0x802F            - O_IF
0x00003350: 0xC001 0x00003366 - O_INTOP(0x00003366)   // 13158 (13158)
0x00003356: 0x800D            - O_D_TO_A
0x00003358: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000335E: 0xC001 0x00000011 - O_INTOP(0x00000011)   // 17 (17)
0x00003364: 0x8005            - O_CALL
0x00003366: 0x801A            - O_POP
0x00003368: 0xC001 0x00003388 - O_INTOP(0x00003388)   // 13192 (13192)
0x0000336E: 0x8004            - O_JMP
0x00003370: 0xC001 0x00003386 - O_INTOP(0x00003386)   // 13190 (13190)
0x00003376: 0x800D            - O_D_TO_A
0x00003378: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000337E: 0xC001 0x00000026 - O_INTOP(0x00000026)   // 38 (38)
0x00003384: 0x8005            - O_CALL
0x00003386: 0x801A            - O_POP
0x00003388: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000338E: 0x800D            - O_D_TO_A
0x00003390: 0x8019            - O_SWAPA
0x00003392: 0x802A            - O_POP_TO_BASE
0x00003394: 0x8029            - O_POP_BASE
0x00003396: 0x800C            - O_A_TO_D
0x00003398: 0x801C            - O_POP_RETURN
0x0000339A: 0x802A            - O_POP_TO_BASE
0x0000339C: 0x8029            - O_POP_BASE
0x0000339E: 0x801C            - O_POP_RETURN

92: get_reaction (0x000033a0)
===============================
0x000033A0: 0x802B            - O_PUSH_BASE
0x000033A2: 0xC001 0x0000361a - O_INTOP(0x0000361a)   // 13850 (13850)
0x000033A8: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000033AE: 0x80C1            - O_LOCAL_VAR
0x000033B0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000033B6: 0x8033            - O_EQUAL
0x000033B8: 0x802F            - O_IF
0x000033BA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000033C0: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000033C6: 0x80C2            - O_SET_LOCAL_VAR
0x000033C8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000033CE: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000033D4: 0x80C2            - O_SET_LOCAL_VAR
0x000033D6: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000033DC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000033E2: 0x80C2            - O_SET_LOCAL_VAR
0x000033E4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000033EA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000033F0: 0x80C1            - O_LOCAL_VAR
0x000033F2: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000033F8: 0x80BF            - O_DUDE_OBJ
0x000033FA: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00003400: 0x80CA            - O_GET_CRITTER_STAT
0x00003402: 0x803B            - O_MUL
0x00003404: 0x8039            - O_ADD
0x00003406: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x0000340C: 0x803A            - O_SUB
0x0000340E: 0x80C2            - O_SET_LOCAL_VAR
0x00003410: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003416: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000341C: 0x80C1            - O_LOCAL_VAR
0x0000341E: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00003424: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000342A: 0x80BF            - O_DUDE_OBJ
0x0000342C: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00003432: 0x80F3            - O_HAS_TRAIT
0x00003434: 0x803B            - O_MUL
0x00003436: 0x8039            - O_ADD
0x00003438: 0x80C2            - O_SET_LOCAL_VAR
0x0000343A: 0xC001 0x000034ae - O_INTOP(0x000034ae)   // 13486 (13486)
0x00003440: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003446: 0x80BF            - O_DUDE_OBJ
0x00003448: 0xC001 0x00000027 - O_INTOP(0x00000027)   // 39 (39)
0x0000344E: 0x80F3            - O_HAS_TRAIT
0x00003450: 0x802F            - O_IF
0x00003452: 0xC001 0x0000348c - O_INTOP(0x0000348c)   // 13452 (13452)
0x00003458: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x0000345E: 0x80C5            - O_GLOBAL_VAR
0x00003460: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003466: 0x8038            - O_GREATER
0x00003468: 0x802F            - O_IF
0x0000346A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003470: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003476: 0x80C1            - O_LOCAL_VAR
0x00003478: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x0000347E: 0x80C5            - O_GLOBAL_VAR
0x00003480: 0x8039            - O_ADD
0x00003482: 0x80C2            - O_SET_LOCAL_VAR
0x00003484: 0xC001 0x000034a6 - O_INTOP(0x000034a6)   // 13478 (13478)
0x0000348A: 0x8004            - O_JMP
0x0000348C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003492: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003498: 0x80C1            - O_LOCAL_VAR
0x0000349A: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x000034A0: 0x80C5            - O_GLOBAL_VAR
0x000034A2: 0x803A            - O_SUB
0x000034A4: 0x80C2            - O_SET_LOCAL_VAR
0x000034A6: 0xC001 0x00003502 - O_INTOP(0x00003502)   // 13570 (13570)
0x000034AC: 0x8004            - O_JMP
0x000034AE: 0xC001 0x000034e8 - O_INTOP(0x000034e8)   // 13544 (13544)
0x000034B4: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000034BA: 0x80C1            - O_LOCAL_VAR
0x000034BC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000034C2: 0x8033            - O_EQUAL
0x000034C4: 0x802F            - O_IF
0x000034C6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000034CC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000034D2: 0x80C1            - O_LOCAL_VAR
0x000034D4: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x000034DA: 0x80C5            - O_GLOBAL_VAR
0x000034DC: 0x803A            - O_SUB
0x000034DE: 0x80C2            - O_SET_LOCAL_VAR
0x000034E0: 0xC001 0x00003502 - O_INTOP(0x00003502)   // 13570 (13570)
0x000034E6: 0x8004            - O_JMP
0x000034E8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000034EE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000034F4: 0x80C1            - O_LOCAL_VAR
0x000034F6: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x000034FC: 0x80C5            - O_GLOBAL_VAR
0x000034FE: 0x8039            - O_ADD
0x00003500: 0x80C2            - O_SET_LOCAL_VAR
0x00003502: 0xC001 0x00003532 - O_INTOP(0x00003532)   // 13618 (13618)
0x00003508: 0xC001 0x0000009e - O_INTOP(0x0000009e)   // 158 (158)
0x0000350E: 0x80C5            - O_GLOBAL_VAR
0x00003510: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00003516: 0x8038            - O_GREATER
0x00003518: 0x802F            - O_IF
0x0000351A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003520: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003526: 0x80C1            - O_LOCAL_VAR
0x00003528: 0xC001 0x0000001e - O_INTOP(0x0000001e)   // 30 (30)
0x0000352E: 0x803A            - O_SUB
0x00003530: 0x80C2            - O_SET_LOCAL_VAR
0x00003532: 0xC001 0x0000359a - O_INTOP(0x0000359a)   // 13722 (13722)
0x00003538: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x0000353E: 0x80C5            - O_GLOBAL_VAR
0x00003540: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00003546: 0x80C5            - O_GLOBAL_VAR
0x00003548: 0x8039            - O_ADD
0x0000354A: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00003550: 0x8036            - O_GREATER_EQUAL
0x00003552: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00003558: 0x80C5            - O_GLOBAL_VAR
0x0000355A: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00003560: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00003566: 0x80C5            - O_GLOBAL_VAR
0x00003568: 0x803B            - O_MUL
0x0000356A: 0x8038            - O_GREATER
0x0000356C: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x00003572: 0x80C5            - O_GLOBAL_VAR
0x00003574: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000357A: 0x8033            - O_EQUAL
0x0000357C: 0x803F            - O_OR
0x0000357E: 0x803E            - O_AND
0x00003580: 0x802F            - O_IF
0x00003582: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003588: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000358E: 0x80C1            - O_LOCAL_VAR
0x00003590: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x00003596: 0x8039            - O_ADD
0x00003598: 0x80C2            - O_SET_LOCAL_VAR
0x0000359A: 0xC001 0x00003602 - O_INTOP(0x00003602)   // 13826 (13826)
0x000035A0: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x000035A6: 0x80C5            - O_GLOBAL_VAR
0x000035A8: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x000035AE: 0x80C5            - O_GLOBAL_VAR
0x000035B0: 0x8039            - O_ADD
0x000035B2: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x000035B8: 0x8036            - O_GREATER_EQUAL
0x000035BA: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x000035C0: 0x80C5            - O_GLOBAL_VAR
0x000035C2: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000035C8: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x000035CE: 0x80C5            - O_GLOBAL_VAR
0x000035D0: 0x803B            - O_MUL
0x000035D2: 0x8038            - O_GREATER
0x000035D4: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x000035DA: 0x80C5            - O_GLOBAL_VAR
0x000035DC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000035E2: 0x8033            - O_EQUAL
0x000035E4: 0x803F            - O_OR
0x000035E6: 0x803E            - O_AND
0x000035E8: 0x802F            - O_IF
0x000035EA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000035F0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000035F6: 0x80C1            - O_LOCAL_VAR
0x000035F8: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x000035FE: 0x803A            - O_SUB
0x00003600: 0x80C2            - O_SET_LOCAL_VAR
0x00003602: 0xC001 0x00003618 - O_INTOP(0x00003618)   // 13848 (13848)
0x00003608: 0x800D            - O_D_TO_A
0x0000360A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003610: 0xC001 0x0000005d - O_INTOP(0x0000005d)   // 93 (93)
0x00003616: 0x8005            - O_CALL
0x00003618: 0x801A            - O_POP
0x0000361A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003620: 0x800D            - O_D_TO_A
0x00003622: 0x8019            - O_SWAPA
0x00003624: 0x802A            - O_POP_TO_BASE
0x00003626: 0x8029            - O_POP_BASE
0x00003628: 0x800C            - O_A_TO_D
0x0000362A: 0x801C            - O_POP_RETURN
0x0000362C: 0x802A            - O_POP_TO_BASE
0x0000362E: 0x8029            - O_POP_BASE
0x00003630: 0x801C            - O_POP_RETURN

93: ReactToLevel (0x00003632)
===============================
0x00003632: 0x802B            - O_PUSH_BASE
0x00003634: 0xC001 0x00003662 - O_INTOP(0x00003662)   // 13922 (13922)
0x0000363A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003640: 0x80C1            - O_LOCAL_VAR
0x00003642: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00003648: 0x8035            - O_LESS_EQUAL
0x0000364A: 0x802F            - O_IF
0x0000364C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00003652: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00003658: 0x80C2            - O_SET_LOCAL_VAR
0x0000365A: 0xC001 0x0000369e - O_INTOP(0x0000369e)   // 13982 (13982)
0x00003660: 0x8004            - O_JMP
0x00003662: 0xC001 0x00003690 - O_INTOP(0x00003690)   // 13968 (13968)
0x00003668: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000366E: 0x80C1            - O_LOCAL_VAR
0x00003670: 0xC001 0x0000004b - O_INTOP(0x0000004b)   // 75 (75)
0x00003676: 0x8035            - O_LESS_EQUAL
0x00003678: 0x802F            - O_IF
0x0000367A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00003680: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00003686: 0x80C2            - O_SET_LOCAL_VAR
0x00003688: 0xC001 0x0000369e - O_INTOP(0x0000369e)   // 13982 (13982)
0x0000368E: 0x8004            - O_JMP
0x00003690: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00003696: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x0000369C: 0x80C2            - O_SET_LOCAL_VAR
0x0000369E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000036A4: 0x800D            - O_D_TO_A
0x000036A6: 0x8019            - O_SWAPA
0x000036A8: 0x802A            - O_POP_TO_BASE
0x000036AA: 0x8029            - O_POP_BASE
0x000036AC: 0x800C            - O_A_TO_D
0x000036AE: 0x801C            - O_POP_RETURN
0x000036B0: 0x802A            - O_POP_TO_BASE
0x000036B2: 0x8029            - O_POP_BASE
0x000036B4: 0x801C            - O_POP_RETURN

94: LevelToReact (0x000036b6)
===============================
0x000036B6: 0x802B            - O_PUSH_BASE
0x000036B8: 0xC001 0x000036ee - O_INTOP(0x000036ee)   // 14062 (14062)
0x000036BE: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000036C4: 0x80C1            - O_LOCAL_VAR
0x000036C6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000036CC: 0x8033            - O_EQUAL
0x000036CE: 0x802F            - O_IF
0x000036D0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000036D6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000036DC: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x000036E2: 0x80B4            - O_RANDOM
0x000036E4: 0x80C2            - O_SET_LOCAL_VAR
0x000036E6: 0xC001 0x0000373a - O_INTOP(0x0000373a)   // 14138 (14138)
0x000036EC: 0x8004            - O_JMP
0x000036EE: 0xC001 0x00003724 - O_INTOP(0x00003724)   // 14116 (14116)
0x000036F4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000036FA: 0x80C1            - O_LOCAL_VAR
0x000036FC: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00003702: 0x8033            - O_EQUAL
0x00003704: 0x802F            - O_IF
0x00003706: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000370C: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x00003712: 0xC001 0x0000004b - O_INTOP(0x0000004b)   // 75 (75)
0x00003718: 0x80B4            - O_RANDOM
0x0000371A: 0x80C2            - O_SET_LOCAL_VAR
0x0000371C: 0xC001 0x0000373a - O_INTOP(0x0000373a)   // 14138 (14138)
0x00003722: 0x8004            - O_JMP
0x00003724: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000372A: 0xC001 0x0000004c - O_INTOP(0x0000004c)   // 76 (76)
0x00003730: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x00003736: 0x80B4            - O_RANDOM
0x00003738: 0x80C2            - O_SET_LOCAL_VAR
0x0000373A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003740: 0x800D            - O_D_TO_A
0x00003742: 0x8019            - O_SWAPA
0x00003744: 0x802A            - O_POP_TO_BASE
0x00003746: 0x8029            - O_POP_BASE
0x00003748: 0x800C            - O_A_TO_D
0x0000374A: 0x801C            - O_POP_RETURN
0x0000374C: 0x802A            - O_POP_TO_BASE
0x0000374E: 0x8029            - O_POP_BASE
0x00003750: 0x801C            - O_POP_RETURN

95: UpReact (0x00003752)
===============================
0x00003752: 0x802B            - O_PUSH_BASE
0x00003754: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000375A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003760: 0x80C1            - O_LOCAL_VAR
0x00003762: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00003768: 0x8039            - O_ADD
0x0000376A: 0x80C2            - O_SET_LOCAL_VAR
0x0000376C: 0xC001 0x00003782 - O_INTOP(0x00003782)   // 14210 (14210)
0x00003772: 0x800D            - O_D_TO_A
0x00003774: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000377A: 0xC001 0x0000005d - O_INTOP(0x0000005d)   // 93 (93)
0x00003780: 0x8005            - O_CALL
0x00003782: 0x801A            - O_POP
0x00003784: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000378A: 0x800D            - O_D_TO_A
0x0000378C: 0x8019            - O_SWAPA
0x0000378E: 0x802A            - O_POP_TO_BASE
0x00003790: 0x8029            - O_POP_BASE
0x00003792: 0x800C            - O_A_TO_D
0x00003794: 0x801C            - O_POP_RETURN
0x00003796: 0x802A            - O_POP_TO_BASE
0x00003798: 0x8029            - O_POP_BASE
0x0000379A: 0x801C            - O_POP_RETURN

96: DownReact (0x0000379c)
===============================
0x0000379C: 0x802B            - O_PUSH_BASE
0x0000379E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000037A4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000037AA: 0x80C1            - O_LOCAL_VAR
0x000037AC: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x000037B2: 0x803A            - O_SUB
0x000037B4: 0x80C2            - O_SET_LOCAL_VAR
0x000037B6: 0xC001 0x000037cc - O_INTOP(0x000037cc)   // 14284 (14284)
0x000037BC: 0x800D            - O_D_TO_A
0x000037BE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000037C4: 0xC001 0x0000005d - O_INTOP(0x0000005d)   // 93 (93)
0x000037CA: 0x8005            - O_CALL
0x000037CC: 0x801A            - O_POP
0x000037CE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000037D4: 0x800D            - O_D_TO_A
0x000037D6: 0x8019            - O_SWAPA
0x000037D8: 0x802A            - O_POP_TO_BASE
0x000037DA: 0x8029            - O_POP_BASE
0x000037DC: 0x800C            - O_A_TO_D
0x000037DE: 0x801C            - O_POP_RETURN
0x000037E0: 0x802A            - O_POP_TO_BASE
0x000037E2: 0x8029            - O_POP_BASE
0x000037E4: 0x801C            - O_POP_RETURN

97: BottomReact (0x000037e6)
===============================
0x000037E6: 0x802B            - O_PUSH_BASE
0x000037E8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000037EE: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000037F4: 0x80C2            - O_SET_LOCAL_VAR
0x000037F6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000037FC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00003802: 0x80C2            - O_SET_LOCAL_VAR
0x00003804: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000380A: 0x800D            - O_D_TO_A
0x0000380C: 0x8019            - O_SWAPA
0x0000380E: 0x802A            - O_POP_TO_BASE
0x00003810: 0x8029            - O_POP_BASE
0x00003812: 0x800C            - O_A_TO_D
0x00003814: 0x801C            - O_POP_RETURN
0x00003816: 0x802A            - O_POP_TO_BASE
0x00003818: 0x8029            - O_POP_BASE
0x0000381A: 0x801C            - O_POP_RETURN

98: TopReact (0x0000381c)
===============================
0x0000381C: 0x802B            - O_PUSH_BASE
0x0000381E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003824: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x0000382A: 0x80C2            - O_SET_LOCAL_VAR
0x0000382C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00003832: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00003838: 0x80C2            - O_SET_LOCAL_VAR
0x0000383A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003840: 0x800D            - O_D_TO_A
0x00003842: 0x8019            - O_SWAPA
0x00003844: 0x802A            - O_POP_TO_BASE
0x00003846: 0x8029            - O_POP_BASE
0x00003848: 0x800C            - O_A_TO_D
0x0000384A: 0x801C            - O_POP_RETURN
0x0000384C: 0x802A            - O_POP_TO_BASE
0x0000384E: 0x8029            - O_POP_BASE
0x00003850: 0x801C            - O_POP_RETURN

99: BigUpReact (0x00003852)
===============================
0x00003852: 0x802B            - O_PUSH_BASE
0x00003854: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000385A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003860: 0x80C1            - O_LOCAL_VAR
0x00003862: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00003868: 0x8039            - O_ADD
0x0000386A: 0x80C2            - O_SET_LOCAL_VAR
0x0000386C: 0xC001 0x00003882 - O_INTOP(0x00003882)   // 14466 (14466)
0x00003872: 0x800D            - O_D_TO_A
0x00003874: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000387A: 0xC001 0x0000005d - O_INTOP(0x0000005d)   // 93 (93)
0x00003880: 0x8005            - O_CALL
0x00003882: 0x801A            - O_POP
0x00003884: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000388A: 0x800D            - O_D_TO_A
0x0000388C: 0x8019            - O_SWAPA
0x0000388E: 0x802A            - O_POP_TO_BASE
0x00003890: 0x8029            - O_POP_BASE
0x00003892: 0x800C            - O_A_TO_D
0x00003894: 0x801C            - O_POP_RETURN
0x00003896: 0x802A            - O_POP_TO_BASE
0x00003898: 0x8029            - O_POP_BASE
0x0000389A: 0x801C            - O_POP_RETURN

100: BigDownReact (0x0000389c)
===============================
0x0000389C: 0x802B            - O_PUSH_BASE
0x0000389E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000038A4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000038AA: 0x80C1            - O_LOCAL_VAR
0x000038AC: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x000038B2: 0x803A            - O_SUB
0x000038B4: 0x80C2            - O_SET_LOCAL_VAR
0x000038B6: 0xC001 0x000038cc - O_INTOP(0x000038cc)   // 14540 (14540)
0x000038BC: 0x800D            - O_D_TO_A
0x000038BE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000038C4: 0xC001 0x0000005d - O_INTOP(0x0000005d)   // 93 (93)
0x000038CA: 0x8005            - O_CALL
0x000038CC: 0x801A            - O_POP
0x000038CE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000038D4: 0x800D            - O_D_TO_A
0x000038D6: 0x8019            - O_SWAPA
0x000038D8: 0x802A            - O_POP_TO_BASE
0x000038DA: 0x8029            - O_POP_BASE
0x000038DC: 0x800C            - O_A_TO_D
0x000038DE: 0x801C            - O_POP_RETURN
0x000038E0: 0x802A            - O_POP_TO_BASE
0x000038E2: 0x8029            - O_POP_BASE
0x000038E4: 0x801C            - O_POP_RETURN

101: UpReactLevel (0x000038e6)
===============================
0x000038E6: 0x802B            - O_PUSH_BASE
0x000038E8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000038EE: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000038F4: 0x80C1            - O_LOCAL_VAR
0x000038F6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000038FC: 0x8039            - O_ADD
0x000038FE: 0x80C2            - O_SET_LOCAL_VAR
0x00003900: 0xC001 0x00003926 - O_INTOP(0x00003926)   // 14630 (14630)
0x00003906: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000390C: 0x80C1            - O_LOCAL_VAR
0x0000390E: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00003914: 0x8038            - O_GREATER
0x00003916: 0x802F            - O_IF
0x00003918: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000391E: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00003924: 0x80C2            - O_SET_LOCAL_VAR
0x00003926: 0xC001 0x0000393c - O_INTOP(0x0000393c)   // 14652 (14652)
0x0000392C: 0x800D            - O_D_TO_A
0x0000392E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003934: 0xC001 0x0000005e - O_INTOP(0x0000005e)   // 94 (94)
0x0000393A: 0x8005            - O_CALL
0x0000393C: 0x801A            - O_POP
0x0000393E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003944: 0x800D            - O_D_TO_A
0x00003946: 0x8019            - O_SWAPA
0x00003948: 0x802A            - O_POP_TO_BASE
0x0000394A: 0x8029            - O_POP_BASE
0x0000394C: 0x800C            - O_A_TO_D
0x0000394E: 0x801C            - O_POP_RETURN
0x00003950: 0x802A            - O_POP_TO_BASE
0x00003952: 0x8029            - O_POP_BASE
0x00003954: 0x801C            - O_POP_RETURN

102: DownReactLevel (0x00003956)
===============================
0x00003956: 0x802B            - O_PUSH_BASE
0x00003958: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000395E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00003964: 0x80C1            - O_LOCAL_VAR
0x00003966: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000396C: 0x803A            - O_SUB
0x0000396E: 0x80C2            - O_SET_LOCAL_VAR
0x00003970: 0xC001 0x00003996 - O_INTOP(0x00003996)   // 14742 (14742)
0x00003976: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000397C: 0x80C1            - O_LOCAL_VAR
0x0000397E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00003984: 0x8037            - O_LESS
0x00003986: 0x802F            - O_IF
0x00003988: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000398E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00003994: 0x80C2            - O_SET_LOCAL_VAR
0x00003996: 0xC001 0x000039ac - O_INTOP(0x000039ac)   // 14764 (14764)
0x0000399C: 0x800D            - O_D_TO_A
0x0000399E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000039A4: 0xC001 0x0000005e - O_INTOP(0x0000005e)   // 94 (94)
0x000039AA: 0x8005            - O_CALL
0x000039AC: 0x801A            - O_POP
0x000039AE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000039B4: 0x800D            - O_D_TO_A
0x000039B6: 0x8019            - O_SWAPA
0x000039B8: 0x802A            - O_POP_TO_BASE
0x000039BA: 0x8029            - O_POP_BASE
0x000039BC: 0x800C            - O_A_TO_D
0x000039BE: 0x801C            - O_POP_RETURN
0x000039C0: 0x802A            - O_POP_TO_BASE
0x000039C2: 0x8029            - O_POP_BASE
0x000039C4: 0x801C            - O_POP_RETURN

103: Goodbyes (0x000039c6)
===============================
0x000039C6: 0x802B            - O_PUSH_BASE
0x000039C8: 0xC001 0x0000027a - O_INTOP(0x0000027a)   // 634 (634)
0x000039CE: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x000039D4: 0xC001 0x00000069 - O_INTOP(0x00000069)   // 105 (105)
0x000039DA: 0x80B4            - O_RANDOM
0x000039DC: 0x8105            - O_MESSAGE_STR
0x000039DE: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x000039E4: 0x8013            - O_STORE_GLOBAL
0x000039E6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000039EC: 0x800D            - O_D_TO_A
0x000039EE: 0x8019            - O_SWAPA
0x000039F0: 0x802A            - O_POP_TO_BASE
0x000039F2: 0x8029            - O_POP_BASE
0x000039F4: 0x800C            - O_A_TO_D
0x000039F6: 0x801C            - O_POP_RETURN
0x000039F8: 0x802A            - O_POP_TO_BASE
0x000039FA: 0x8029            - O_POP_BASE
0x000039FC: 0x801C            - O_POP_RETURN

