Fallout script decompiler, version 8.4.6 (sfall edition)
Copyright (C) Anchorite (TeamX), 2005-2009
anchorite2001@yandex.ru
Continued by Nirran, phobos2077, Mr.Stalin (2014-2020)
Crossplatformed by alexeevdv (2015)
int2ssl is using Fallout 1 code.
Loading file Games/Fallout1.Steam/scripts/SAMMY.int...
  Read startup code
  Read procedures table
  Read namespace
  Read stringspace
  Read tail of startup code
    Check "Jump to 'start' procedure" / "Jump to end of statup code"
    Check "# of argument to 'start' procedure"
    Extract "Export var" section
    Extract "Set exported var values" section
    Extract "Export procedures" section
    Extract "Global variables" section
  Read procedure's bodies
    Procedure: 0
    Procedure: 1
    Procedure: 2
    Procedure: 3
    Procedure: 4
    Procedure: 5
File Games/Fallout1.Steam/scripts/SAMMY.int loaded successfuly

Decompiling...
  Init definitions
  Processing code
    Intial reducing
    Building execution tree
        Procedure: 0
        Procedure: 1
        Procedure: 2
Error: Expression required for 564

============== Procedures table ==================

======== Procedure 0 ========
Name offset:       0x00000006
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000366
Number of args:    0x00000000  // 0

======== Procedure 1 ========
Name offset:       0x00000018
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000366
Number of args:    0x00000000  // 0

======== Procedure 2 ========
Name offset:       0x00000020
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000054A
Number of args:    0x00000000  // 0

======== Procedure 3 ========
Name offset:       0x0000002E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000006B2
Number of args:    0x00000000  // 0

======== Procedure 4 ========
Name offset:       0x00000038
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000006F6
Number of args:    0x00000000  // 0

======== Procedure 5 ========
Name offset:       0x00000042
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000071E
Number of args:    0x00000000  // 0



============== Namespace ==================
0x00000006: ".............."
0x00000018: "start"
0x00000020: "do_dialogue"
0x0000002E: "sammy02"
0x00000038: "sammy03"
0x00000042: "sammy04"
0x0000004C: "whim"
0x00000054: "reaction"
0x00000060: "in_combat"
0x0000006C: "rndx"
0x00000074: "rndy"
0x0000007C: "new_obj"
0x00000086: "new_obj_picked"
0x00000098: "HEREBEFORE"
0x000000A6: "said_to_go"
0x000000B4: "dest_tile"
0x000000C0: "ready_to_load_map"
0x000000D4: "test_go"
==================
18 item(s)



============== Stringspace ==================
0x00000006: "You see Sammy."
0x00000018: "caves.map"
0x00000024: "Speak to the Elder.  He has something important to tell you first."
0x0000006A: "Follow me.  I know the way to the lair."
0x00000094: "Boy, I wish you had the guts to help us out."
0x000000C4: "All ready to go? Once we get to the lair, there is no coming back until the job is done."
0x00000120: "Yes"
0x00000126: "No"
0x0000012C: "OK, I'll wait for here. Let me know when you're ready to go."
==================
9 item(s)



============== Global variables values ==================
0: O_INTOP(0x00000000)   // 0 (0)
1: O_INTOP(0x00000000)   // 0 (0)
2: O_INTOP(0x00000000)   // 0 (0)
3: O_INTOP(0x00000000)   // 0 (0)
4: O_INTOP(0x00000000)   // 0 (0)
5: O_INTOP(0x00000000)   // 0 (0)
6: O_INTOP(0x00000000)   // 0 (0)
7: O_INTOP(0x00000000)   // 0 (0)
8: O_INTOP(0x00000000)   // 0 (0)
9: O_INTOP(0x00000000)   // 0 (0)
10: O_INTOP(0x00000000)   // 0 (0)
11: O_INTOP(0x00000000)   // 0 (0)


============== Exported variables ==================
Not found


============== Procedures ==================

0: .............. (0x00000366)
===============================

1: start (0x00000366)
===============================
0x00000366: 0x802B            - O_PUSH_BASE
0x00000368: 0xC001 0x0000039c - O_INTOP(0x0000039c)   // 924 (924)
0x0000036E: 0x80C7            - O_SCRIPT_ACTION
0x00000370: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00000376: 0x8033            - O_EQUAL
0x00000378: 0x802F            - O_IF
0x0000037A: 0xC001 0x00000390 - O_INTOP(0x00000390)   // 912 (912)
0x00000380: 0x800D            - O_D_TO_A
0x00000382: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000388: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x0000038E: 0x8005            - O_CALL
0x00000390: 0x801A            - O_POP
0x00000392: 0x800F            - O_DETACH
0x00000394: 0xC001 0x000003e4 - O_INTOP(0x000003e4)   // 996 (996)
0x0000039A: 0x8004            - O_JMP
0x0000039C: 0xC001 0x000003c2 - O_INTOP(0x000003c2)   // 962 (962)
0x000003A2: 0x80C7            - O_SCRIPT_ACTION
0x000003A4: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000003AA: 0x8033            - O_EQUAL
0x000003AC: 0x802F            - O_IF
0x000003AE: 0x80B9            - O_SCRIPT_OVERRIDES
0x000003B0: 0x9001 0x00000006 - O_STRINGOP(0x00000006)   // 6 (6)
0x000003B6: 0x80B8            - O_DISPLAY_MSG
0x000003B8: 0x800F            - O_DETACH
0x000003BA: 0xC001 0x000003e4 - O_INTOP(0x000003e4)   // 996 (996)
0x000003C0: 0x8004            - O_JMP
0x000003C2: 0xC001 0x000003e4 - O_INTOP(0x000003e4)   // 996 (996)
0x000003C8: 0x80C7            - O_SCRIPT_ACTION
0x000003CA: 0xC001 0x00000012 - O_INTOP(0x00000012)   // 18 (18)
0x000003D0: 0x8033            - O_EQUAL
0x000003D2: 0x802F            - O_IF
0x000003D4: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x000003DA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000003E0: 0x80C6            - O_SET_GLOBAL_VAR
0x000003E2: 0x800F            - O_DETACH
0x000003E4: 0xC001 0x00000532 - O_INTOP(0x00000532)   // 1330 (1330)
0x000003EA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000003F0: 0x80C5            - O_GLOBAL_VAR
0x000003F2: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000003F8: 0x8033            - O_EQUAL
0x000003FA: 0x802F            - O_IF
0x000003FC: 0xC001 0x00000464 - O_INTOP(0x00000464)   // 1124 (1124)
0x00000402: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x00000408: 0x8012            - O_FETCH_GLOBAL
0x0000040A: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000410: 0x8033            - O_EQUAL
0x00000412: 0x80BC            - O_SELF_OBJ
0x00000414: 0x80E7            - O_ANIM_BUSY
0x00000416: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000041C: 0x8033            - O_EQUAL
0x0000041E: 0x803E            - O_AND
0x00000420: 0x80BC            - O_SELF_OBJ
0x00000422: 0x80BF            - O_DUDE_OBJ
0x00000424: 0x80D3            - O_TILE_DISTANCE_OBJS
0x00000426: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x0000042C: 0x8037            - O_LESS
0x0000042E: 0x803E            - O_AND
0x00000430: 0x80BC            - O_SELF_OBJ
0x00000432: 0x80D4            - O_TILE_NUM
0x00000434: 0xC001 0x00004689 - O_INTOP(0x00004689)   // 18057 (18057)
0x0000043A: 0x8033            - O_EQUAL
0x0000043C: 0x803E            - O_AND
0x0000043E: 0x802F            - O_IF
0x00000440: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000446: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x0000044C: 0x8013            - O_STORE_GLOBAL
0x0000044E: 0x9001 0x00000018 - O_STRINGOP(0x00000018)   // 24 (24)
0x00000454: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000045A: 0x80E4            - O_LOAD_MAP
0x0000045C: 0xC001 0x00000532 - O_INTOP(0x00000532)   // 1330 (1330)
0x00000462: 0x8004            - O_JMP
0x00000464: 0xC001 0x000004ce - O_INTOP(0x000004ce)   // 1230 (1230)
0x0000046A: 0x80BC            - O_SELF_OBJ
0x0000046C: 0x80BF            - O_DUDE_OBJ
0x0000046E: 0x80D3            - O_TILE_DISTANCE_OBJS
0x00000470: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x00000476: 0x8038            - O_GREATER
0x00000478: 0x80BC            - O_SELF_OBJ
0x0000047A: 0x80D4            - O_TILE_NUM
0x0000047C: 0xC001 0x00004689 - O_INTOP(0x00004689)   // 18057 (18057)
0x00000482: 0x8034            - O_NOT_EQUAL
0x00000484: 0x803E            - O_AND
0x00000486: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000048C: 0x80C5            - O_GLOBAL_VAR
0x0000048E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000494: 0x8033            - O_EQUAL
0x00000496: 0x803E            - O_AND
0x00000498: 0x802F            - O_IF
0x0000049A: 0xC001 0x00004689 - O_INTOP(0x00004689)   // 18057 (18057)
0x000004A0: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x000004A6: 0x8013            - O_STORE_GLOBAL
0x000004A8: 0x80BC            - O_SELF_OBJ
0x000004AA: 0xC001 0x00004689 - O_INTOP(0x00004689)   // 18057 (18057)
0x000004B0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000004B6: 0x80CE            - O_ANIMATE_MOVE_OBJ_TO_TILE
0x000004B8: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000004BE: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x000004C4: 0x8013            - O_STORE_GLOBAL
0x000004C6: 0xC001 0x00000532 - O_INTOP(0x00000532)   // 1330 (1330)
0x000004CC: 0x8004            - O_JMP
0x000004CE: 0xC001 0x00000532 - O_INTOP(0x00000532)   // 1330 (1330)
0x000004D4: 0x80BC            - O_SELF_OBJ
0x000004D6: 0x80D4            - O_TILE_NUM
0x000004D8: 0xC001 0x00004689 - O_INTOP(0x00004689)   // 18057 (18057)
0x000004DE: 0x8034            - O_NOT_EQUAL
0x000004E0: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x000004E6: 0x8012            - O_FETCH_GLOBAL
0x000004E8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000004EE: 0x8033            - O_EQUAL
0x000004F0: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000004F6: 0x8012            - O_FETCH_GLOBAL
0x000004F8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000004FE: 0x8033            - O_EQUAL
0x00000500: 0x803F            - O_OR
0x00000502: 0x803E            - O_AND
0x00000504: 0x802F            - O_IF
0x00000506: 0xC001 0x00004689 - O_INTOP(0x00004689)   // 18057 (18057)
0x0000050C: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x00000512: 0x8013            - O_STORE_GLOBAL
0x00000514: 0x80BC            - O_SELF_OBJ
0x00000516: 0xC001 0x00004689 - O_INTOP(0x00004689)   // 18057 (18057)
0x0000051C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000522: 0x80CE            - O_ANIMATE_MOVE_OBJ_TO_TILE
0x00000524: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x0000052A: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x00000530: 0x8013            - O_STORE_GLOBAL
0x00000532: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000538: 0x800D            - O_D_TO_A
0x0000053A: 0x8019            - O_SWAPA
0x0000053C: 0x802A            - O_POP_TO_BASE
0x0000053E: 0x8029            - O_POP_BASE
0x00000540: 0x800C            - O_A_TO_D
0x00000542: 0x801C            - O_POP_RETURN
0x00000544: 0x802A            - O_POP_TO_BASE
0x00000546: 0x8029            - O_POP_BASE
0x00000548: 0x801C            - O_POP_RETURN

2: do_dialogue (0x0000054a)
===============================
0x0000054A: 0x802B            - O_PUSH_BASE
0x0000054C: 0x80BC            - O_SELF_OBJ
0x0000054E: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000554: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000055A: 0x8046            - O_NEGATE
0x0000055C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000562: 0x8046            - O_NEGATE
0x00000564: 0x80DE            - O_START_GDIALOG
0x00000566: 0xC001 0x00000594 - O_INTOP(0x00000594)   // 1428 (1428)
0x0000056C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000572: 0x80C5            - O_GLOBAL_VAR
0x00000574: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000057A: 0x8033            - O_EQUAL
0x0000057C: 0x802F            - O_IF
0x0000057E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000584: 0x9001 0x00000024 - O_STRINGOP(0x00000024)   // 36 (36)
0x0000058A: 0x8054            - O_SAYMESSAGE
0x0000058C: 0xC001 0x00000672 - O_INTOP(0x00000672)   // 1650 (1650)
0x00000592: 0x8004            - O_JMP
0x00000594: 0xC001 0x000005f0 - O_INTOP(0x000005f0)   // 1520 (1520)
0x0000059A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000005A0: 0x80C5            - O_GLOBAL_VAR
0x000005A2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000005A8: 0x8033            - O_EQUAL
0x000005AA: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x000005B0: 0x8012            - O_FETCH_GLOBAL
0x000005B2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000005B8: 0x8033            - O_EQUAL
0x000005BA: 0x803E            - O_AND
0x000005BC: 0x802F            - O_IF
0x000005BE: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000005C4: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x000005CA: 0x8013            - O_STORE_GLOBAL
0x000005CC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000005D2: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000005D8: 0x8013            - O_STORE_GLOBAL
0x000005DA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000005E0: 0x9001 0x0000006a - O_STRINGOP(0x0000006a)   // 106 (106)
0x000005E6: 0x8054            - O_SAYMESSAGE
0x000005E8: 0xC001 0x00000672 - O_INTOP(0x00000672)   // 1650 (1650)
0x000005EE: 0x8004            - O_JMP
0x000005F0: 0xC001 0x0000061e - O_INTOP(0x0000061e)   // 1566 (1566)
0x000005F6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000005FC: 0x80C5            - O_GLOBAL_VAR
0x000005FE: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000604: 0x8033            - O_EQUAL
0x00000606: 0x802F            - O_IF
0x00000608: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000060E: 0x9001 0x00000094 - O_STRINGOP(0x00000094)   // 148 (148)
0x00000614: 0x8054            - O_SAYMESSAGE
0x00000616: 0xC001 0x00000672 - O_INTOP(0x00000672)   // 1650 (1650)
0x0000061C: 0x8004            - O_JMP
0x0000061E: 0xC001 0x00000672 - O_INTOP(0x00000672)   // 1650 (1650)
0x00000624: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x0000062A: 0x8012            - O_FETCH_GLOBAL
0x0000062C: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000632: 0x8033            - O_EQUAL
0x00000634: 0x80BC            - O_SELF_OBJ
0x00000636: 0x80D4            - O_TILE_NUM
0x00000638: 0xC001 0x00004689 - O_INTOP(0x00004689)   // 18057 (18057)
0x0000063E: 0x8033            - O_EQUAL
0x00000640: 0x803E            - O_AND
0x00000642: 0x802F            - O_IF
0x00000644: 0x804E            - O_SAYSTART
0x00000646: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000064C: 0x9001 0x000000c4 - O_STRINGOP(0x000000c4)   // 196 (196)
0x00000652: 0x8052            - O_SAYREPLY
0x00000654: 0x9001 0x00000120 - O_STRINGOP(0x00000120)   // 288 (288)
0x0000065A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000660: 0x8053            - O_SAYOPTION
0x00000662: 0x9001 0x00000126 - O_STRINGOP(0x00000126)   // 294 (294)
0x00000668: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x0000066E: 0x8053            - O_SAYOPTION
0x00000670: 0x804D            - O_SAYEND
0x00000672: 0x80DF            - O_END_DIALOGUE
0x00000674: 0xC001 0x0000069a - O_INTOP(0x0000069a)   // 1690 (1690)
0x0000067A: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00000680: 0x8012            - O_FETCH_GLOBAL
0x00000682: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000688: 0x8033            - O_EQUAL
0x0000068A: 0x802F            - O_IF
0x0000068C: 0x9001 0x00000018 - O_STRINGOP(0x00000018)   // 24 (24)
0x00000692: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000698: 0x80E4            - O_LOAD_MAP
0x0000069A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000006A0: 0x800D            - O_D_TO_A
0x000006A2: 0x8019            - O_SWAPA
0x000006A4: 0x802A            - O_POP_TO_BASE
0x000006A6: 0x8029            - O_POP_BASE
0x000006A8: 0x800C            - O_A_TO_D
0x000006AA: 0x801C            - O_POP_RETURN
0x000006AC: 0x802A            - O_POP_TO_BASE
0x000006AE: 0x8029            - O_POP_BASE
0x000006B0: 0x801C            - O_POP_RETURN

3: sammy02 (0x000006b2)
===============================
0x000006B2: 0x802B            - O_PUSH_BASE
0x000006B4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000006BA: 0x9001 0x000000c4 - O_STRINGOP(0x000000c4)   // 196 (196)
0x000006C0: 0x8052            - O_SAYREPLY
0x000006C2: 0x9001 0x00000120 - O_STRINGOP(0x00000120)   // 288 (288)
0x000006C8: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000006CE: 0x8053            - O_SAYOPTION
0x000006D0: 0x9001 0x00000126 - O_STRINGOP(0x00000126)   // 294 (294)
0x000006D6: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000006DC: 0x8053            - O_SAYOPTION
0x000006DE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000006E4: 0x800D            - O_D_TO_A
0x000006E6: 0x8019            - O_SWAPA
0x000006E8: 0x802A            - O_POP_TO_BASE
0x000006EA: 0x8029            - O_POP_BASE
0x000006EC: 0x800C            - O_A_TO_D
0x000006EE: 0x801C            - O_POP_RETURN
0x000006F0: 0x802A            - O_POP_TO_BASE
0x000006F2: 0x8029            - O_POP_BASE
0x000006F4: 0x801C            - O_POP_RETURN

4: sammy03 (0x000006f6)
===============================
0x000006F6: 0x802B            - O_PUSH_BASE
0x000006F8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000006FE: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00000704: 0x8013            - O_STORE_GLOBAL
0x00000706: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000070C: 0x800D            - O_D_TO_A
0x0000070E: 0x8019            - O_SWAPA
0x00000710: 0x802A            - O_POP_TO_BASE
0x00000712: 0x8029            - O_POP_BASE
0x00000714: 0x800C            - O_A_TO_D
0x00000716: 0x801C            - O_POP_RETURN
0x00000718: 0x802A            - O_POP_TO_BASE
0x0000071A: 0x8029            - O_POP_BASE
0x0000071C: 0x801C            - O_POP_RETURN

5: sammy04 (0x0000071e)
===============================
0x0000071E: 0x802B            - O_PUSH_BASE
0x00000720: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000726: 0x9001 0x0000012c - O_STRINGOP(0x0000012c)   // 300 (300)
0x0000072C: 0x8054            - O_SAYMESSAGE
0x0000072E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000734: 0x800D            - O_D_TO_A
0x00000736: 0x8019            - O_SWAPA
0x00000738: 0x802A            - O_POP_TO_BASE
0x0000073A: 0x8029            - O_POP_BASE
0x0000073C: 0x800C            - O_A_TO_D
0x0000073E: 0x801C            - O_POP_RETURN
0x00000740: 0x802A            - O_POP_TO_BASE
0x00000742: 0x8029            - O_POP_BASE
0x00000744: 0x801C            - O_POP_RETURN

