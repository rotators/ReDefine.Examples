Fallout script decompiler, version 8.4.6 (sfall edition)
Copyright (C) Anchorite (TeamX), 2005-2009
anchorite2001@yandex.ru
Continued by Nirran, phobos2077, Mr.Stalin (2014-2020)
Crossplatformed by alexeevdv (2015)
int2ssl is using Fallout 1 code.
Loading file Games/Fallout1.Steam/scripts/CHUCK.int...
  Read startup code
  Read procedures table
  Read namespace
  Read stringspace
  Read tail of startup code
    Check "Jump to 'start' procedure" / "Jump to end of statup code"
    Check "# of argument to 'start' procedure"
    Extract "Export var" section
    Extract "Set exported var values" section
    Extract "Export procedures" section
    Extract "Global variables" section
  Read procedure's bodies
    Procedure: 0
    Procedure: 1
    Procedure: 2
    Procedure: 3
    Procedure: 4
    Procedure: 5
    Procedure: 6
    Procedure: 7
    Procedure: 8
    Procedure: 9
    Procedure: 10
    Procedure: 11
    Procedure: 12
    Procedure: 13
    Procedure: 14
    Procedure: 15
    Procedure: 16
    Procedure: 17
    Procedure: 18
    Procedure: 19
    Procedure: 20
    Procedure: 21
    Procedure: 22
    Procedure: 23
    Procedure: 24
    Procedure: 25
    Procedure: 26
    Procedure: 27
    Procedure: 28
    Procedure: 29
    Procedure: 30
    Procedure: 31
    Procedure: 32
    Procedure: 33
    Procedure: 34
    Procedure: 35
    Procedure: 36
    Procedure: 37
    Procedure: 38
    Procedure: 39
    Procedure: 40
    Procedure: 41
    Procedure: 42
    Procedure: 43
    Procedure: 44
    Procedure: 45
    Procedure: 46
File Games/Fallout1.Steam/scripts/CHUCK.int loaded successfuly

Decompiling...
  Init definitions
  Processing code
    Intial reducing
    Building execution tree
        Procedure: 0
        Procedure: 1
        Procedure: 2
        Procedure: 3
        Procedure: 4
        Procedure: 5
        Procedure: 6
        Procedure: 7
        Procedure: 8
        Procedure: 9
        Procedure: 10
        Procedure: 11
        Procedure: 12
        Procedure: 13
        Procedure: 14
        Procedure: 15
        Procedure: 16
        Procedure: 17
        Procedure: 18
        Procedure: 19
        Procedure: 20
        Procedure: 21
        Procedure: 22
        Procedure: 23
        Procedure: 24
        Procedure: 25
        Procedure: 26
        Procedure: 27
        Procedure: 28
        Procedure: 29
        Procedure: 30
        Procedure: 31
        Procedure: 32
        Procedure: 33
        Procedure: 34
        Procedure: 35
        Procedure: 36
        Procedure: 37
        Procedure: 38
        Procedure: 39
        Procedure: 40
        Procedure: 41
        Procedure: 42
        Procedure: 43
        Procedure: 44
        Procedure: 45
        Procedure: 46
    Extracting and reducing conditions
    Setting borders of blocks
        Procedure: 0
        Procedure: 1
Error: Conditional expression left in stack

============== Procedures table ==================

======== Procedure 0 ========
Name offset:       0x00000006
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000071E
Number of args:    0x00000000  // 0

======== Procedure 1 ========
Name offset:       0x00000018
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000071E
Number of args:    0x00000000  // 0

======== Procedure 2 ========
Name offset:       0x00000020
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000008AA
Number of args:    0x00000000  // 0

======== Procedure 3 ========
Name offset:       0x00000030
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000008F6
Number of args:    0x00000000  // 0

======== Procedure 4 ========
Name offset:       0x00000042
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000A78
Number of args:    0x00000000  // 0

======== Procedure 5 ========
Name offset:       0x00000054
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000ACC
Number of args:    0x00000000  // 0

======== Procedure 6 ========
Name offset:       0x00000062
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000B6C
Number of args:    0x00000000  // 0

======== Procedure 7 ========
Name offset:       0x00000074
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000BDA
Number of args:    0x00000000  // 0

======== Procedure 8 ========
Name offset:       0x00000084
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000C02
Number of args:    0x00000000  // 0

======== Procedure 9 ========
Name offset:       0x0000008E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000CBA
Number of args:    0x00000000  // 0

======== Procedure 10 ========
Name offset:       0x00000098
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000CE8
Number of args:    0x00000000  // 0

======== Procedure 11 ========
Name offset:       0x000000A2
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000D70
Number of args:    0x00000000  // 0

======== Procedure 12 ========
Name offset:       0x000000AC
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000DF8
Number of args:    0x00000000  // 0

======== Procedure 13 ========
Name offset:       0x000000B6
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000E60
Number of args:    0x00000000  // 0

======== Procedure 14 ========
Name offset:       0x000000C0
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000EE0
Number of args:    0x00000000  // 0

======== Procedure 15 ========
Name offset:       0x000000CA
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000F34
Number of args:    0x00000000  // 0

======== Procedure 16 ========
Name offset:       0x000000D4
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000F7A
Number of args:    0x00000000  // 0

======== Procedure 17 ========
Name offset:       0x000000DE
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001002
Number of args:    0x00000000  // 0

======== Procedure 18 ========
Name offset:       0x000000E8
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000106A
Number of args:    0x00000000  // 0

======== Procedure 19 ========
Name offset:       0x000000F2
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000010F2
Number of args:    0x00000000  // 0

======== Procedure 20 ========
Name offset:       0x000000FC
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000117A
Number of args:    0x00000000  // 0

======== Procedure 21 ========
Name offset:       0x00000106
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000011E2
Number of args:    0x00000000  // 0

======== Procedure 22 ========
Name offset:       0x00000110
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000124A
Number of args:    0x00000000  // 0

======== Procedure 23 ========
Name offset:       0x0000011A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000012D2
Number of args:    0x00000000  // 0

======== Procedure 24 ========
Name offset:       0x00000124
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000133A
Number of args:    0x00000000  // 0

======== Procedure 25 ========
Name offset:       0x0000012E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000013A2
Number of args:    0x00000000  // 0

======== Procedure 26 ========
Name offset:       0x00000138
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001418
Number of args:    0x00000000  // 0

======== Procedure 27 ========
Name offset:       0x00000142
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000014A0
Number of args:    0x00000000  // 0

======== Procedure 28 ========
Name offset:       0x0000014C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001508
Number of args:    0x00000000  // 0

======== Procedure 29 ========
Name offset:       0x00000156
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001550
Number of args:    0x00000000  // 0

======== Procedure 30 ========
Name offset:       0x00000160
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001632
Number of args:    0x00000000  // 0

======== Procedure 31 ========
Name offset:       0x0000016A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000167A
Number of args:    0x00000000  // 0

======== Procedure 32 ========
Name offset:       0x00000178
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000016C2
Number of args:    0x00000000  // 0

======== Procedure 33 ========
Name offset:       0x00000186
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001866
Number of args:    0x00000000  // 0

======== Procedure 34 ========
Name offset:       0x00000192
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001894
Number of args:    0x00000000  // 0

======== Procedure 35 ========
Name offset:       0x000001AC
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000018AE
Number of args:    0x00000000  // 0

======== Procedure 36 ========
Name offset:       0x000001BC
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001B40
Number of args:    0x00000000  // 0

======== Procedure 37 ========
Name offset:       0x000001CC
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001BC4
Number of args:    0x00000000  // 0

======== Procedure 38 ========
Name offset:       0x000001DC
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001C60
Number of args:    0x00000000  // 0

======== Procedure 39 ========
Name offset:       0x000001E6
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001CAA
Number of args:    0x00000000  // 0

======== Procedure 40 ========
Name offset:       0x000001F2
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001CF4
Number of args:    0x00000000  // 0

======== Procedure 41 ========
Name offset:       0x00000200
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001D2A
Number of args:    0x00000000  // 0

======== Procedure 42 ========
Name offset:       0x0000020C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001D60
Number of args:    0x00000000  // 0

======== Procedure 43 ========
Name offset:       0x0000021A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001DAA
Number of args:    0x00000000  // 0

======== Procedure 44 ========
Name offset:       0x0000022A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001DF4
Number of args:    0x00000000  // 0

======== Procedure 45 ========
Name offset:       0x0000023A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001E64
Number of args:    0x00000000  // 0

======== Procedure 46 ========
Name offset:       0x0000024C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001ED4
Number of args:    0x00000000  // 0



============== Namespace ==================
0x00000006: ".............."
0x00000018: "start"
0x00000020: "damage_p_proc"
0x00000030: "destroy_p_proc"
0x00000042: "look_at_p_proc"
0x00000054: "talk_p_proc"
0x00000062: "critter_p_proc"
0x00000074: "pickup_p_proc"
0x00000084: "Chuck01"
0x0000008E: "Chuck02"
0x00000098: "Chuck03"
0x000000A2: "Chuck04"
0x000000AC: "Chuck05"
0x000000B6: "Chuck06"
0x000000C0: "Chuck07"
0x000000CA: "Chuck08"
0x000000D4: "Chuck09"
0x000000DE: "Chuck10"
0x000000E8: "Chuck11"
0x000000F2: "Chuck12"
0x000000FC: "Chuck13"
0x00000106: "Chuck14"
0x00000110: "Chuck15"
0x0000011A: "Chuck16"
0x00000124: "Chuck17"
0x0000012E: "Chuck18"
0x00000138: "Chuck19"
0x00000142: "Chuck20"
0x0000014C: "Chuck21"
0x00000156: "Chuck22"
0x00000160: "Chuck23"
0x0000016A: "ChuckCards"
0x00000178: "ChuckCards2"
0x00000186: "ChuckBye"
0x00000192: "ChuckEnd"
0x0000019E: "initialized"
0x000001AC: "get_reaction"
0x000001BC: "ReactToLevel"
0x000001CC: "LevelToReact"
0x000001DC: "UpReact"
0x000001E6: "DownReact"
0x000001F2: "BottomReact"
0x00000200: "TopReact"
0x0000020C: "BigUpReact"
0x0000021A: "BigDownReact"
0x0000022A: "UpReactLevel"
0x0000023A: "DownReactLevel"
0x0000024C: "Goodbyes"
0x00000258: "exit_line"
==================
49 item(s)



============== Stringspace ==================
Empty


============== Global variables values ==================
0: O_INTOP(0x00000000)   // 0 (0)
1: O_INTOP(0x00000000)   // 0 (0)


============== Exported variables ==================
Not found


============== Procedures ==================

0: .............. (0x0000071e)
===============================

1: start (0x0000071e)
===============================
0x0000071E: 0x802B            - O_PUSH_BASE
0x00000720: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000726: 0xC001 0x00000804 - O_INTOP(0x00000804)   // 2052 (2052)
0x0000072C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000732: 0x8012            - O_FETCH_GLOBAL
0x00000734: 0x8045            - O_NOT
0x00000736: 0x802F            - O_IF
0x00000738: 0xC001 0x000007ee - O_INTOP(0x000007ee)   // 2030 (2030)
0x0000073E: 0x80BC            - O_SELF_OBJ
0x00000740: 0xC001 0x00000029 - O_INTOP(0x00000029)   // 41 (41)
0x00000746: 0x80BA            - O_OBJ_IS_CARRYING_OBJ_PID
0x00000748: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000074E: 0x8033            - O_EQUAL
0x00000750: 0x802F            - O_IF
0x00000752: 0xC001 0x00000029 - O_INTOP(0x00000029)   // 41 (41)
0x00000758: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000075E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000764: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000076A: 0x8046            - O_NEGATE
0x0000076C: 0x80B7            - O_CREATE_OBJECT_SID
0x0000076E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000774: 0x8031            - O_STORE
0x00000776: 0x80BC            - O_SELF_OBJ
0x00000778: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000077E: 0x8032            - O_FETCH
0x00000780: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000786: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x0000078C: 0x80B4            - O_RANDOM
0x0000078E: 0x8116            - O_ADD_MULT_OBJS_TO_INVEN
0x00000790: 0xC001 0x000007d8 - O_INTOP(0x000007d8)   // 2008 (2008)
0x00000796: 0xC001 0x00000265 - O_INTOP(0x00000265)   // 613 (613)
0x0000079C: 0x80C5            - O_GLOBAL_VAR
0x0000079E: 0xC001 0x0000238f - O_INTOP(0x0000238f)   // 9103 (9103)
0x000007A4: 0x8033            - O_EQUAL
0x000007A6: 0xC001 0x00000265 - O_INTOP(0x00000265)   // 613 (613)
0x000007AC: 0x80C5            - O_GLOBAL_VAR
0x000007AE: 0xC001 0x0000238e - O_INTOP(0x0000238e)   // 9102 (9102)
0x000007B4: 0x8033            - O_EQUAL
0x000007B6: 0x803F            - O_OR
0x000007B8: 0x802F            - O_IF
0x000007BA: 0x80BC            - O_SELF_OBJ
0x000007BC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000007C2: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x000007C8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000007CE: 0x8102            - O_CRITTER_ADD_TRAIT
0x000007D0: 0xC001 0x000007ee - O_INTOP(0x000007ee)   // 2030 (2030)
0x000007D6: 0x8004            - O_JMP
0x000007D8: 0x80BC            - O_SELF_OBJ
0x000007DA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000007E0: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x000007E6: 0xC001 0x00000031 - O_INTOP(0x00000031)   // 49 (49)
0x000007EC: 0x8102            - O_CRITTER_ADD_TRAIT
0x000007EE: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000007F4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000007FA: 0x8013            - O_STORE_GLOBAL
0x000007FC: 0xC001 0x00000892 - O_INTOP(0x00000892)   // 2194 (2194)
0x00000802: 0x8004            - O_JMP
0x00000804: 0xC001 0x00000836 - O_INTOP(0x00000836)   // 2102 (2102)
0x0000080A: 0x80C7            - O_SCRIPT_ACTION
0x0000080C: 0xC001 0x00000012 - O_INTOP(0x00000012)   // 18 (18)
0x00000812: 0x8033            - O_EQUAL
0x00000814: 0x802F            - O_IF
0x00000816: 0xC001 0x0000082c - O_INTOP(0x0000082c)   // 2092 (2092)
0x0000081C: 0x800D            - O_D_TO_A
0x0000081E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000824: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x0000082A: 0x8005            - O_CALL
0x0000082C: 0x801A            - O_POP
0x0000082E: 0xC001 0x00000892 - O_INTOP(0x00000892)   // 2194 (2194)
0x00000834: 0x8004            - O_JMP
0x00000836: 0xC001 0x00000868 - O_INTOP(0x00000868)   // 2152 (2152)
0x0000083C: 0x80C7            - O_SCRIPT_ACTION
0x0000083E: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x00000844: 0x8033            - O_EQUAL
0x00000846: 0x802F            - O_IF
0x00000848: 0xC001 0x0000085e - O_INTOP(0x0000085e)   // 2142 (2142)
0x0000084E: 0x800D            - O_D_TO_A
0x00000850: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000856: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000085C: 0x8005            - O_CALL
0x0000085E: 0x801A            - O_POP
0x00000860: 0xC001 0x00000892 - O_INTOP(0x00000892)   // 2194 (2194)
0x00000866: 0x8004            - O_JMP
0x00000868: 0xC001 0x00000892 - O_INTOP(0x00000892)   // 2194 (2194)
0x0000086E: 0x80C7            - O_SCRIPT_ACTION
0x00000870: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00000876: 0x8033            - O_EQUAL
0x00000878: 0x802F            - O_IF
0x0000087A: 0xC001 0x00000890 - O_INTOP(0x00000890)   // 2192 (2192)
0x00000880: 0x800D            - O_D_TO_A
0x00000882: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000888: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x0000088E: 0x8005            - O_CALL
0x00000890: 0x801A            - O_POP
0x00000892: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000898: 0x800D            - O_D_TO_A
0x0000089A: 0x8019            - O_SWAPA
0x0000089C: 0x802A            - O_POP_TO_BASE
0x0000089E: 0x8029            - O_POP_BASE
0x000008A0: 0x800C            - O_A_TO_D
0x000008A2: 0x801C            - O_POP_RETURN
0x000008A4: 0x802A            - O_POP_TO_BASE
0x000008A6: 0x8029            - O_POP_BASE
0x000008A8: 0x801C            - O_POP_RETURN

2: damage_p_proc (0x000008aa)
===============================
0x000008AA: 0x802B            - O_PUSH_BASE
0x000008AC: 0xC001 0x000008de - O_INTOP(0x000008de)   // 2270 (2270)
0x000008B2: 0x80BD            - O_SOURCE_OBJ
0x000008B4: 0x80BF            - O_DUDE_OBJ
0x000008B6: 0x8033            - O_EQUAL
0x000008B8: 0x802F            - O_IF
0x000008BA: 0xC001 0x000000fb - O_INTOP(0x000000fb)   // 251 (251)
0x000008C0: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000008C6: 0x80C6            - O_SET_GLOBAL_VAR
0x000008C8: 0x80BC            - O_SELF_OBJ
0x000008CA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000008D0: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x000008D6: 0xC001 0x00000031 - O_INTOP(0x00000031)   // 49 (49)
0x000008DC: 0x8102            - O_CRITTER_ADD_TRAIT
0x000008DE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000008E4: 0x800D            - O_D_TO_A
0x000008E6: 0x8019            - O_SWAPA
0x000008E8: 0x802A            - O_POP_TO_BASE
0x000008EA: 0x8029            - O_POP_BASE
0x000008EC: 0x800C            - O_A_TO_D
0x000008EE: 0x801C            - O_POP_RETURN
0x000008F0: 0x802A            - O_POP_TO_BASE
0x000008F2: 0x8029            - O_POP_BASE
0x000008F4: 0x801C            - O_POP_RETURN

3: destroy_p_proc (0x000008f6)
===============================
0x000008F6: 0x802B            - O_PUSH_BASE
0x000008F8: 0xC001 0x00000a60 - O_INTOP(0x00000a60)   // 2656 (2656)
0x000008FE: 0x80BD            - O_SOURCE_OBJ
0x00000900: 0x80BF            - O_DUDE_OBJ
0x00000902: 0x8033            - O_EQUAL
0x00000904: 0x802F            - O_IF
0x00000906: 0xC001 0x000000fb - O_INTOP(0x000000fb)   // 251 (251)
0x0000090C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000912: 0x80C6            - O_SET_GLOBAL_VAR
0x00000914: 0xC001 0x00000a4a - O_INTOP(0x00000a4a)   // 2634 (2634)
0x0000091A: 0x80BD            - O_SOURCE_OBJ
0x0000091C: 0x80BF            - O_DUDE_OBJ
0x0000091E: 0x8033            - O_EQUAL
0x00000920: 0x802F            - O_IF
0x00000922: 0xC001 0x0000098e - O_INTOP(0x0000098e)   // 2446 (2446)
0x00000928: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x0000092E: 0x80C5            - O_GLOBAL_VAR
0x00000930: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000936: 0x80C5            - O_GLOBAL_VAR
0x00000938: 0x8039            - O_ADD
0x0000093A: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00000940: 0x8036            - O_GREATER_EQUAL
0x00000942: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000948: 0x80C5            - O_GLOBAL_VAR
0x0000094A: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000950: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00000956: 0x80C5            - O_GLOBAL_VAR
0x00000958: 0x803B            - O_MUL
0x0000095A: 0x8038            - O_GREATER
0x0000095C: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x00000962: 0x80C5            - O_GLOBAL_VAR
0x00000964: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000096A: 0x8033            - O_EQUAL
0x0000096C: 0x803F            - O_OR
0x0000096E: 0x803E            - O_AND
0x00000970: 0x802F            - O_IF
0x00000972: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x00000978: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000097E: 0x80C6            - O_SET_GLOBAL_VAR
0x00000980: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x00000986: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000098C: 0x80C6            - O_SET_GLOBAL_VAR
0x0000098E: 0xC001 0x000009fa - O_INTOP(0x000009fa)   // 2554 (2554)
0x00000994: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x0000099A: 0x80C5            - O_GLOBAL_VAR
0x0000099C: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x000009A2: 0x80C5            - O_GLOBAL_VAR
0x000009A4: 0x8039            - O_ADD
0x000009A6: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x000009AC: 0x8036            - O_GREATER_EQUAL
0x000009AE: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x000009B4: 0x80C5            - O_GLOBAL_VAR
0x000009B6: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000009BC: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x000009C2: 0x80C5            - O_GLOBAL_VAR
0x000009C4: 0x803B            - O_MUL
0x000009C6: 0x8038            - O_GREATER
0x000009C8: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x000009CE: 0x80C5            - O_GLOBAL_VAR
0x000009D0: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000009D6: 0x8033            - O_EQUAL
0x000009D8: 0x803F            - O_OR
0x000009DA: 0x803E            - O_AND
0x000009DC: 0x802F            - O_IF
0x000009DE: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x000009E4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000009EA: 0x80C6            - O_SET_GLOBAL_VAR
0x000009EC: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x000009F2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000009F8: 0x80C6            - O_SET_GLOBAL_VAR
0x000009FA: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000A00: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000A06: 0x80C5            - O_GLOBAL_VAR
0x00000A08: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000A0E: 0x8039            - O_ADD
0x00000A10: 0x80C6            - O_SET_GLOBAL_VAR
0x00000A12: 0xC001 0x00000a4a - O_INTOP(0x00000a4a)   // 2634 (2634)
0x00000A18: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000A1E: 0x80C5            - O_GLOBAL_VAR
0x00000A20: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000A26: 0x803D            - O_MOD
0x00000A28: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A2E: 0x8033            - O_EQUAL
0x00000A30: 0x802F            - O_IF
0x00000A32: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00000A38: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00000A3E: 0x80C5            - O_GLOBAL_VAR
0x00000A40: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000A46: 0x803A            - O_SUB
0x00000A48: 0x80C6            - O_SET_GLOBAL_VAR
0x00000A4A: 0x80BC            - O_SELF_OBJ
0x00000A4C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000A52: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000A58: 0xC001 0x00000031 - O_INTOP(0x00000031)   // 49 (49)
0x00000A5E: 0x8102            - O_CRITTER_ADD_TRAIT
0x00000A60: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A66: 0x800D            - O_D_TO_A
0x00000A68: 0x8019            - O_SWAPA
0x00000A6A: 0x802A            - O_POP_TO_BASE
0x00000A6C: 0x8029            - O_POP_BASE
0x00000A6E: 0x800C            - O_A_TO_D
0x00000A70: 0x801C            - O_POP_RETURN
0x00000A72: 0x802A            - O_POP_TO_BASE
0x00000A74: 0x8029            - O_POP_BASE
0x00000A76: 0x801C            - O_POP_RETURN

4: look_at_p_proc (0x00000a78)
===============================
0x00000A78: 0x802B            - O_PUSH_BASE
0x00000A7A: 0x80B9            - O_SCRIPT_OVERRIDES
0x00000A7C: 0xC001 0x00000aa4 - O_INTOP(0x00000aa4)   // 2724 (2724)
0x00000A82: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000A88: 0x80C1            - O_LOCAL_VAR
0x00000A8A: 0x802F            - O_IF
0x00000A8C: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00000A92: 0xC001 0x00000065 - O_INTOP(0x00000065)   // 101 (101)
0x00000A98: 0x8105            - O_MESSAGE_STR
0x00000A9A: 0x80B8            - O_DISPLAY_MSG
0x00000A9C: 0xC001 0x00000ab4 - O_INTOP(0x00000ab4)   // 2740 (2740)
0x00000AA2: 0x8004            - O_JMP
0x00000AA4: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00000AAA: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x00000AB0: 0x8105            - O_MESSAGE_STR
0x00000AB2: 0x80B8            - O_DISPLAY_MSG
0x00000AB4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000ABA: 0x800D            - O_D_TO_A
0x00000ABC: 0x8019            - O_SWAPA
0x00000ABE: 0x802A            - O_POP_TO_BASE
0x00000AC0: 0x8029            - O_POP_BASE
0x00000AC2: 0x800C            - O_A_TO_D
0x00000AC4: 0x801C            - O_POP_RETURN
0x00000AC6: 0x802A            - O_POP_TO_BASE
0x00000AC8: 0x8029            - O_POP_BASE
0x00000ACA: 0x801C            - O_POP_RETURN

5: talk_p_proc (0x00000acc)
===============================
0x00000ACC: 0x802B            - O_PUSH_BASE
0x00000ACE: 0xC001 0x00000ae4 - O_INTOP(0x00000ae4)   // 2788 (2788)
0x00000AD4: 0x800D            - O_D_TO_A
0x00000AD6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000ADC: 0xC001 0x00000023 - O_INTOP(0x00000023)   // 35 (35)
0x00000AE2: 0x8005            - O_CALL
0x00000AE4: 0x801A            - O_POP
0x00000AE6: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00000AEC: 0x80BC            - O_SELF_OBJ
0x00000AEE: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000AF4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000AFA: 0x8046            - O_NEGATE
0x00000AFC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000B02: 0x8046            - O_NEGATE
0x00000B04: 0x80DE            - O_START_GDIALOG
0x00000B06: 0x811C            - O_GSAY_START
0x00000B08: 0xC001 0x00000b38 - O_INTOP(0x00000b38)   // 2872 (2872)
0x00000B0E: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000B14: 0x80C1            - O_LOCAL_VAR
0x00000B16: 0x802F            - O_IF
0x00000B18: 0xC001 0x00000b2e - O_INTOP(0x00000b2e)   // 2862 (2862)
0x00000B1E: 0x800D            - O_D_TO_A
0x00000B20: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000B26: 0xC001 0x0000001d - O_INTOP(0x0000001d)   // 29 (29)
0x00000B2C: 0x8005            - O_CALL
0x00000B2E: 0x801A            - O_POP
0x00000B30: 0xC001 0x00000b50 - O_INTOP(0x00000b50)   // 2896 (2896)
0x00000B36: 0x8004            - O_JMP
0x00000B38: 0xC001 0x00000b4e - O_INTOP(0x00000b4e)   // 2894 (2894)
0x00000B3E: 0x800D            - O_D_TO_A
0x00000B40: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000B46: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x00000B4C: 0x8005            - O_CALL
0x00000B4E: 0x801A            - O_POP
0x00000B50: 0x811D            - O_GSAY_END
0x00000B52: 0x80DF            - O_END_DIALOGUE
0x00000B54: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000B5A: 0x800D            - O_D_TO_A
0x00000B5C: 0x8019            - O_SWAPA
0x00000B5E: 0x802A            - O_POP_TO_BASE
0x00000B60: 0x8029            - O_POP_BASE
0x00000B62: 0x800C            - O_A_TO_D
0x00000B64: 0x801C            - O_POP_RETURN
0x00000B66: 0x802A            - O_POP_TO_BASE
0x00000B68: 0x8029            - O_POP_BASE
0x00000B6A: 0x801C            - O_POP_RETURN

6: critter_p_proc (0x00000b6c)
===============================
0x00000B6C: 0x802B            - O_PUSH_BASE
0x00000B6E: 0xC001 0x00000bc2 - O_INTOP(0x00000bc2)   // 3010 (3010)
0x00000B74: 0x80BC            - O_SELF_OBJ
0x00000B76: 0x80BF            - O_DUDE_OBJ
0x00000B78: 0x80DC            - O_OBJ_CAN_SEE_OBJ
0x00000B7A: 0x802F            - O_IF
0x00000B7C: 0xC001 0x00000bc2 - O_INTOP(0x00000bc2)   // 3010 (3010)
0x00000B82: 0xC001 0x000000fb - O_INTOP(0x000000fb)   // 251 (251)
0x00000B88: 0x80C5            - O_GLOBAL_VAR
0x00000B8A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000B90: 0x8033            - O_EQUAL
0x00000B92: 0x802F            - O_IF
0x00000B94: 0x80BF            - O_DUDE_OBJ
0x00000B96: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000B9C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000BA2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000BA8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000BAE: 0xC001 0x00007530 - O_INTOP(0x00007530)   // 30000 (30000)
0x00000BB4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000BBA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000BC0: 0x80D0            - O_ATTACK_COMPLEX
0x00000BC2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000BC8: 0x800D            - O_D_TO_A
0x00000BCA: 0x8019            - O_SWAPA
0x00000BCC: 0x802A            - O_POP_TO_BASE
0x00000BCE: 0x8029            - O_POP_BASE
0x00000BD0: 0x800C            - O_A_TO_D
0x00000BD2: 0x801C            - O_POP_RETURN
0x00000BD4: 0x802A            - O_POP_TO_BASE
0x00000BD6: 0x8029            - O_POP_BASE
0x00000BD8: 0x801C            - O_POP_RETURN

7: pickup_p_proc (0x00000bda)
===============================
0x00000BDA: 0x802B            - O_PUSH_BASE
0x00000BDC: 0xC001 0x000000fb - O_INTOP(0x000000fb)   // 251 (251)
0x00000BE2: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000BE8: 0x80C6            - O_SET_GLOBAL_VAR
0x00000BEA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000BF0: 0x800D            - O_D_TO_A
0x00000BF2: 0x8019            - O_SWAPA
0x00000BF4: 0x802A            - O_POP_TO_BASE
0x00000BF6: 0x8029            - O_POP_BASE
0x00000BF8: 0x800C            - O_A_TO_D
0x00000BFA: 0x801C            - O_POP_RETURN
0x00000BFC: 0x802A            - O_POP_TO_BASE
0x00000BFE: 0x8029            - O_POP_BASE
0x00000C00: 0x801C            - O_POP_RETURN

8: Chuck01 (0x00000c02)
===============================
0x00000C02: 0x802B            - O_PUSH_BASE
0x00000C04: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000C0A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000C10: 0x80C2            - O_SET_LOCAL_VAR
0x00000C12: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00000C18: 0xC001 0x00000066 - O_INTOP(0x00000066)   // 102 (102)
0x00000C1E: 0x811E            - O_GSAY_REPLY
0x00000C20: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000C26: 0x8046            - O_NEGATE
0x00000C28: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00000C2E: 0xC001 0x00000067 - O_INTOP(0x00000067)   // 103 (103)
0x00000C34: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x00000C3A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000C40: 0x8121            - O_GIQ_OPTION
0x00000C42: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000C48: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00000C4E: 0xC001 0x00000068 - O_INTOP(0x00000068)   // 104 (104)
0x00000C54: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00000C5A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000C60: 0x8121            - O_GIQ_OPTION
0x00000C62: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000C68: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00000C6E: 0xC001 0x00000069 - O_INTOP(0x00000069)   // 105 (105)
0x00000C74: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00000C7A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000C80: 0x8121            - O_GIQ_OPTION
0x00000C82: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000C88: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00000C8E: 0xC001 0x0000006a - O_INTOP(0x0000006a)   // 106 (106)
0x00000C94: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00000C9A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000CA0: 0x8121            - O_GIQ_OPTION
0x00000CA2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000CA8: 0x800D            - O_D_TO_A
0x00000CAA: 0x8019            - O_SWAPA
0x00000CAC: 0x802A            - O_POP_TO_BASE
0x00000CAE: 0x8029            - O_POP_BASE
0x00000CB0: 0x800C            - O_A_TO_D
0x00000CB2: 0x801C            - O_POP_RETURN
0x00000CB4: 0x802A            - O_POP_TO_BASE
0x00000CB6: 0x8029            - O_POP_BASE
0x00000CB8: 0x801C            - O_POP_RETURN

9: Chuck02 (0x00000cba)
===============================
0x00000CBA: 0x802B            - O_PUSH_BASE
0x00000CBC: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00000CC2: 0xC001 0x0000006b - O_INTOP(0x0000006b)   // 107 (107)
0x00000CC8: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000CCE: 0x8120            - O_GSAY_MESSAGE
0x00000CD0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000CD6: 0x800D            - O_D_TO_A
0x00000CD8: 0x8019            - O_SWAPA
0x00000CDA: 0x802A            - O_POP_TO_BASE
0x00000CDC: 0x8029            - O_POP_BASE
0x00000CDE: 0x800C            - O_A_TO_D
0x00000CE0: 0x801C            - O_POP_RETURN
0x00000CE2: 0x802A            - O_POP_TO_BASE
0x00000CE4: 0x8029            - O_POP_BASE
0x00000CE6: 0x801C            - O_POP_RETURN

10: Chuck03 (0x00000ce8)
===============================
0x00000CE8: 0x802B            - O_PUSH_BASE
0x00000CEA: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00000CF0: 0xC001 0x0000006c - O_INTOP(0x0000006c)   // 108 (108)
0x00000CF6: 0x811E            - O_GSAY_REPLY
0x00000CF8: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000CFE: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00000D04: 0xC001 0x0000006d - O_INTOP(0x0000006d)   // 109 (109)
0x00000D0A: 0xC001 0x00000010 - O_INTOP(0x00000010)   // 16 (16)
0x00000D10: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000D16: 0x8121            - O_GIQ_OPTION
0x00000D18: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000D1E: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00000D24: 0xC001 0x0000006e - O_INTOP(0x0000006e)   // 110 (110)
0x00000D2A: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x00000D30: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000D36: 0x8121            - O_GIQ_OPTION
0x00000D38: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000D3E: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00000D44: 0xC001 0x0000006f - O_INTOP(0x0000006f)   // 111 (111)
0x00000D4A: 0xC001 0x00000016 - O_INTOP(0x00000016)   // 22 (22)
0x00000D50: 0xC001 0x00000031 - O_INTOP(0x00000031)   // 49 (49)
0x00000D56: 0x8121            - O_GIQ_OPTION
0x00000D58: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D5E: 0x800D            - O_D_TO_A
0x00000D60: 0x8019            - O_SWAPA
0x00000D62: 0x802A            - O_POP_TO_BASE
0x00000D64: 0x8029            - O_POP_BASE
0x00000D66: 0x800C            - O_A_TO_D
0x00000D68: 0x801C            - O_POP_RETURN
0x00000D6A: 0x802A            - O_POP_TO_BASE
0x00000D6C: 0x8029            - O_POP_BASE
0x00000D6E: 0x801C            - O_POP_RETURN

11: Chuck04 (0x00000d70)
===============================
0x00000D70: 0x802B            - O_PUSH_BASE
0x00000D72: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00000D78: 0xC001 0x00000070 - O_INTOP(0x00000070)   // 112 (112)
0x00000D7E: 0x811E            - O_GSAY_REPLY
0x00000D80: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000D86: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00000D8C: 0xC001 0x00000071 - O_INTOP(0x00000071)   // 113 (113)
0x00000D92: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x00000D98: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000D9E: 0x8121            - O_GIQ_OPTION
0x00000DA0: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000DA6: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00000DAC: 0xC001 0x00000072 - O_INTOP(0x00000072)   // 114 (114)
0x00000DB2: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00000DB8: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000DBE: 0x8121            - O_GIQ_OPTION
0x00000DC0: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000DC6: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00000DCC: 0xC001 0x00000073 - O_INTOP(0x00000073)   // 115 (115)
0x00000DD2: 0xC001 0x00000021 - O_INTOP(0x00000021)   // 33 (33)
0x00000DD8: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000DDE: 0x8121            - O_GIQ_OPTION
0x00000DE0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000DE6: 0x800D            - O_D_TO_A
0x00000DE8: 0x8019            - O_SWAPA
0x00000DEA: 0x802A            - O_POP_TO_BASE
0x00000DEC: 0x8029            - O_POP_BASE
0x00000DEE: 0x800C            - O_A_TO_D
0x00000DF0: 0x801C            - O_POP_RETURN
0x00000DF2: 0x802A            - O_POP_TO_BASE
0x00000DF4: 0x8029            - O_POP_BASE
0x00000DF6: 0x801C            - O_POP_RETURN

12: Chuck05 (0x00000df8)
===============================
0x00000DF8: 0x802B            - O_PUSH_BASE
0x00000DFA: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00000E00: 0xC001 0x00000075 - O_INTOP(0x00000075)   // 117 (117)
0x00000E06: 0x811E            - O_GSAY_REPLY
0x00000E08: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000E0E: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00000E14: 0xC001 0x00000076 - O_INTOP(0x00000076)   // 118 (118)
0x00000E1A: 0xC001 0x00000021 - O_INTOP(0x00000021)   // 33 (33)
0x00000E20: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000E26: 0x8121            - O_GIQ_OPTION
0x00000E28: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000E2E: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00000E34: 0xC001 0x00000077 - O_INTOP(0x00000077)   // 119 (119)
0x00000E3A: 0xC001 0x0000001f - O_INTOP(0x0000001f)   // 31 (31)
0x00000E40: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000E46: 0x8121            - O_GIQ_OPTION
0x00000E48: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E4E: 0x800D            - O_D_TO_A
0x00000E50: 0x8019            - O_SWAPA
0x00000E52: 0x802A            - O_POP_TO_BASE
0x00000E54: 0x8029            - O_POP_BASE
0x00000E56: 0x800C            - O_A_TO_D
0x00000E58: 0x801C            - O_POP_RETURN
0x00000E5A: 0x802A            - O_POP_TO_BASE
0x00000E5C: 0x8029            - O_POP_BASE
0x00000E5E: 0x801C            - O_POP_RETURN

13: Chuck06 (0x00000e60)
===============================
0x00000E60: 0x802B            - O_PUSH_BASE
0x00000E62: 0xC001 0x00000e78 - O_INTOP(0x00000e78)   // 3704 (3704)
0x00000E68: 0x800D            - O_D_TO_A
0x00000E6A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E70: 0xC001 0x00000027 - O_INTOP(0x00000027)   // 39 (39)
0x00000E76: 0x8005            - O_CALL
0x00000E78: 0x801A            - O_POP
0x00000E7A: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00000E80: 0xC001 0x00000080 - O_INTOP(0x00000080)   // 128 (128)
0x00000E86: 0x811E            - O_GSAY_REPLY
0x00000E88: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000E8E: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00000E94: 0xC001 0x00000081 - O_INTOP(0x00000081)   // 129 (129)
0x00000E9A: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x00000EA0: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x00000EA6: 0x8121            - O_GIQ_OPTION
0x00000EA8: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000EAE: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00000EB4: 0xC001 0x00000082 - O_INTOP(0x00000082)   // 130 (130)
0x00000EBA: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x00000EC0: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000EC6: 0x8121            - O_GIQ_OPTION
0x00000EC8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000ECE: 0x800D            - O_D_TO_A
0x00000ED0: 0x8019            - O_SWAPA
0x00000ED2: 0x802A            - O_POP_TO_BASE
0x00000ED4: 0x8029            - O_POP_BASE
0x00000ED6: 0x800C            - O_A_TO_D
0x00000ED8: 0x801C            - O_POP_RETURN
0x00000EDA: 0x802A            - O_POP_TO_BASE
0x00000EDC: 0x8029            - O_POP_BASE
0x00000EDE: 0x801C            - O_POP_RETURN

14: Chuck07 (0x00000ee0)
===============================
0x00000EE0: 0x802B            - O_PUSH_BASE
0x00000EE2: 0xC001 0x00000ef8 - O_INTOP(0x00000ef8)   // 3832 (3832)
0x00000EE8: 0x800D            - O_D_TO_A
0x00000EEA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000EF0: 0xC001 0x00000027 - O_INTOP(0x00000027)   // 39 (39)
0x00000EF6: 0x8005            - O_CALL
0x00000EF8: 0x801A            - O_POP
0x00000EFA: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000F00: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000F06: 0x80C2            - O_SET_LOCAL_VAR
0x00000F08: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00000F0E: 0xC001 0x00000083 - O_INTOP(0x00000083)   // 131 (131)
0x00000F14: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x00000F1A: 0x8120            - O_GSAY_MESSAGE
0x00000F1C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F22: 0x800D            - O_D_TO_A
0x00000F24: 0x8019            - O_SWAPA
0x00000F26: 0x802A            - O_POP_TO_BASE
0x00000F28: 0x8029            - O_POP_BASE
0x00000F2A: 0x800C            - O_A_TO_D
0x00000F2C: 0x801C            - O_POP_RETURN
0x00000F2E: 0x802A            - O_POP_TO_BASE
0x00000F30: 0x8029            - O_POP_BASE
0x00000F32: 0x801C            - O_POP_RETURN

15: Chuck08 (0x00000f34)
===============================
0x00000F34: 0x802B            - O_PUSH_BASE
0x00000F36: 0xC001 0x00000f4c - O_INTOP(0x00000f4c)   // 3916 (3916)
0x00000F3C: 0x800D            - O_D_TO_A
0x00000F3E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F44: 0xC001 0x00000026 - O_INTOP(0x00000026)   // 38 (38)
0x00000F4A: 0x8005            - O_CALL
0x00000F4C: 0x801A            - O_POP
0x00000F4E: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00000F54: 0xC001 0x00000084 - O_INTOP(0x00000084)   // 132 (132)
0x00000F5A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000F60: 0x8120            - O_GSAY_MESSAGE
0x00000F62: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F68: 0x800D            - O_D_TO_A
0x00000F6A: 0x8019            - O_SWAPA
0x00000F6C: 0x802A            - O_POP_TO_BASE
0x00000F6E: 0x8029            - O_POP_BASE
0x00000F70: 0x800C            - O_A_TO_D
0x00000F72: 0x801C            - O_POP_RETURN
0x00000F74: 0x802A            - O_POP_TO_BASE
0x00000F76: 0x8029            - O_POP_BASE
0x00000F78: 0x801C            - O_POP_RETURN

16: Chuck09 (0x00000f7a)
===============================
0x00000F7A: 0x802B            - O_PUSH_BASE
0x00000F7C: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00000F82: 0xC001 0x00000085 - O_INTOP(0x00000085)   // 133 (133)
0x00000F88: 0x811E            - O_GSAY_REPLY
0x00000F8A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000F90: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00000F96: 0xC001 0x00000086 - O_INTOP(0x00000086)   // 134 (134)
0x00000F9C: 0xC001 0x00000021 - O_INTOP(0x00000021)   // 33 (33)
0x00000FA2: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000FA8: 0x8121            - O_GIQ_OPTION
0x00000FAA: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000FB0: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00000FB6: 0xC001 0x00000087 - O_INTOP(0x00000087)   // 135 (135)
0x00000FBC: 0xC001 0x00000011 - O_INTOP(0x00000011)   // 17 (17)
0x00000FC2: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000FC8: 0x8121            - O_GIQ_OPTION
0x00000FCA: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000FD0: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00000FD6: 0xC001 0x00000088 - O_INTOP(0x00000088)   // 136 (136)
0x00000FDC: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x00000FE2: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000FE8: 0x8121            - O_GIQ_OPTION
0x00000FEA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000FF0: 0x800D            - O_D_TO_A
0x00000FF2: 0x8019            - O_SWAPA
0x00000FF4: 0x802A            - O_POP_TO_BASE
0x00000FF6: 0x8029            - O_POP_BASE
0x00000FF8: 0x800C            - O_A_TO_D
0x00000FFA: 0x801C            - O_POP_RETURN
0x00000FFC: 0x802A            - O_POP_TO_BASE
0x00000FFE: 0x8029            - O_POP_BASE
0x00001000: 0x801C            - O_POP_RETURN

17: Chuck10 (0x00001002)
===============================
0x00001002: 0x802B            - O_PUSH_BASE
0x00001004: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x0000100A: 0xC001 0x00000089 - O_INTOP(0x00000089)   // 137 (137)
0x00001010: 0x811E            - O_GSAY_REPLY
0x00001012: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001018: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x0000101E: 0xC001 0x0000008a - O_INTOP(0x0000008a)   // 138 (138)
0x00001024: 0xC001 0x00000021 - O_INTOP(0x00000021)   // 33 (33)
0x0000102A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001030: 0x8121            - O_GIQ_OPTION
0x00001032: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001038: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x0000103E: 0xC001 0x0000008b - O_INTOP(0x0000008b)   // 139 (139)
0x00001044: 0xC001 0x00000012 - O_INTOP(0x00000012)   // 18 (18)
0x0000104A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001050: 0x8121            - O_GIQ_OPTION
0x00001052: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001058: 0x800D            - O_D_TO_A
0x0000105A: 0x8019            - O_SWAPA
0x0000105C: 0x802A            - O_POP_TO_BASE
0x0000105E: 0x8029            - O_POP_BASE
0x00001060: 0x800C            - O_A_TO_D
0x00001062: 0x801C            - O_POP_RETURN
0x00001064: 0x802A            - O_POP_TO_BASE
0x00001066: 0x8029            - O_POP_BASE
0x00001068: 0x801C            - O_POP_RETURN

18: Chuck11 (0x0000106a)
===============================
0x0000106A: 0x802B            - O_PUSH_BASE
0x0000106C: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00001072: 0xC001 0x0000008c - O_INTOP(0x0000008c)   // 140 (140)
0x00001078: 0x811E            - O_GSAY_REPLY
0x0000107A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001080: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00001086: 0xC001 0x00000086 - O_INTOP(0x00000086)   // 134 (134)
0x0000108C: 0xC001 0x00000021 - O_INTOP(0x00000021)   // 33 (33)
0x00001092: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001098: 0x8121            - O_GIQ_OPTION
0x0000109A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000010A0: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x000010A6: 0xC001 0x0000008d - O_INTOP(0x0000008d)   // 141 (141)
0x000010AC: 0xC001 0x00000013 - O_INTOP(0x00000013)   // 19 (19)
0x000010B2: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x000010B8: 0x8121            - O_GIQ_OPTION
0x000010BA: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000010C0: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x000010C6: 0xC001 0x0000008e - O_INTOP(0x0000008e)   // 142 (142)
0x000010CC: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x000010D2: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000010D8: 0x8121            - O_GIQ_OPTION
0x000010DA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000010E0: 0x800D            - O_D_TO_A
0x000010E2: 0x8019            - O_SWAPA
0x000010E4: 0x802A            - O_POP_TO_BASE
0x000010E6: 0x8029            - O_POP_BASE
0x000010E8: 0x800C            - O_A_TO_D
0x000010EA: 0x801C            - O_POP_RETURN
0x000010EC: 0x802A            - O_POP_TO_BASE
0x000010EE: 0x8029            - O_POP_BASE
0x000010F0: 0x801C            - O_POP_RETURN

19: Chuck12 (0x000010f2)
===============================
0x000010F2: 0x802B            - O_PUSH_BASE
0x000010F4: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x000010FA: 0xC001 0x0000008f - O_INTOP(0x0000008f)   // 143 (143)
0x00001100: 0x811E            - O_GSAY_REPLY
0x00001102: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001108: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x0000110E: 0xC001 0x00000090 - O_INTOP(0x00000090)   // 144 (144)
0x00001114: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x0000111A: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x00001120: 0x8121            - O_GIQ_OPTION
0x00001122: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001128: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x0000112E: 0xC001 0x00000091 - O_INTOP(0x00000091)   // 145 (145)
0x00001134: 0xC001 0x00000026 - O_INTOP(0x00000026)   // 38 (38)
0x0000113A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001140: 0x8121            - O_GIQ_OPTION
0x00001142: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001148: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x0000114E: 0xC001 0x00000092 - O_INTOP(0x00000092)   // 146 (146)
0x00001154: 0xC001 0x00000021 - O_INTOP(0x00000021)   // 33 (33)
0x0000115A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001160: 0x8121            - O_GIQ_OPTION
0x00001162: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001168: 0x800D            - O_D_TO_A
0x0000116A: 0x8019            - O_SWAPA
0x0000116C: 0x802A            - O_POP_TO_BASE
0x0000116E: 0x8029            - O_POP_BASE
0x00001170: 0x800C            - O_A_TO_D
0x00001172: 0x801C            - O_POP_RETURN
0x00001174: 0x802A            - O_POP_TO_BASE
0x00001176: 0x8029            - O_POP_BASE
0x00001178: 0x801C            - O_POP_RETURN

20: Chuck13 (0x0000117a)
===============================
0x0000117A: 0x802B            - O_PUSH_BASE
0x0000117C: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00001182: 0xC001 0x00000093 - O_INTOP(0x00000093)   // 147 (147)
0x00001188: 0x811E            - O_GSAY_REPLY
0x0000118A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001190: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00001196: 0xC001 0x00000094 - O_INTOP(0x00000094)   // 148 (148)
0x0000119C: 0xC001 0x0000001f - O_INTOP(0x0000001f)   // 31 (31)
0x000011A2: 0xC001 0x00000031 - O_INTOP(0x00000031)   // 49 (49)
0x000011A8: 0x8121            - O_GIQ_OPTION
0x000011AA: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000011B0: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x000011B6: 0xC001 0x00000090 - O_INTOP(0x00000090)   // 144 (144)
0x000011BC: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x000011C2: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x000011C8: 0x8121            - O_GIQ_OPTION
0x000011CA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000011D0: 0x800D            - O_D_TO_A
0x000011D2: 0x8019            - O_SWAPA
0x000011D4: 0x802A            - O_POP_TO_BASE
0x000011D6: 0x8029            - O_POP_BASE
0x000011D8: 0x800C            - O_A_TO_D
0x000011DA: 0x801C            - O_POP_RETURN
0x000011DC: 0x802A            - O_POP_TO_BASE
0x000011DE: 0x8029            - O_POP_BASE
0x000011E0: 0x801C            - O_POP_RETURN

21: Chuck14 (0x000011e2)
===============================
0x000011E2: 0x802B            - O_PUSH_BASE
0x000011E4: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x000011EA: 0xC001 0x00000095 - O_INTOP(0x00000095)   // 149 (149)
0x000011F0: 0x811E            - O_GSAY_REPLY
0x000011F2: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000011F8: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x000011FE: 0xC001 0x00000096 - O_INTOP(0x00000096)   // 150 (150)
0x00001204: 0xC001 0x00000022 - O_INTOP(0x00000022)   // 34 (34)
0x0000120A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001210: 0x8121            - O_GIQ_OPTION
0x00001212: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001218: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x0000121E: 0xC001 0x00000097 - O_INTOP(0x00000097)   // 151 (151)
0x00001224: 0xC001 0x00000011 - O_INTOP(0x00000011)   // 17 (17)
0x0000122A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001230: 0x8121            - O_GIQ_OPTION
0x00001232: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001238: 0x800D            - O_D_TO_A
0x0000123A: 0x8019            - O_SWAPA
0x0000123C: 0x802A            - O_POP_TO_BASE
0x0000123E: 0x8029            - O_POP_BASE
0x00001240: 0x800C            - O_A_TO_D
0x00001242: 0x801C            - O_POP_RETURN
0x00001244: 0x802A            - O_POP_TO_BASE
0x00001246: 0x8029            - O_POP_BASE
0x00001248: 0x801C            - O_POP_RETURN

22: Chuck15 (0x0000124a)
===============================
0x0000124A: 0x802B            - O_PUSH_BASE
0x0000124C: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00001252: 0xC001 0x00000098 - O_INTOP(0x00000098)   // 152 (152)
0x00001258: 0x811E            - O_GSAY_REPLY
0x0000125A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001260: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00001266: 0xC001 0x00000099 - O_INTOP(0x00000099)   // 153 (153)
0x0000126C: 0xC001 0x00000021 - O_INTOP(0x00000021)   // 33 (33)
0x00001272: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001278: 0x8121            - O_GIQ_OPTION
0x0000127A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001280: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00001286: 0xC001 0x00000096 - O_INTOP(0x00000096)   // 150 (150)
0x0000128C: 0xC001 0x00000022 - O_INTOP(0x00000022)   // 34 (34)
0x00001292: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001298: 0x8121            - O_GIQ_OPTION
0x0000129A: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x000012A0: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x000012A6: 0xC001 0x0000009a - O_INTOP(0x0000009a)   // 154 (154)
0x000012AC: 0xC001 0x00000017 - O_INTOP(0x00000017)   // 23 (23)
0x000012B2: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000012B8: 0x8121            - O_GIQ_OPTION
0x000012BA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000012C0: 0x800D            - O_D_TO_A
0x000012C2: 0x8019            - O_SWAPA
0x000012C4: 0x802A            - O_POP_TO_BASE
0x000012C6: 0x8029            - O_POP_BASE
0x000012C8: 0x800C            - O_A_TO_D
0x000012CA: 0x801C            - O_POP_RETURN
0x000012CC: 0x802A            - O_POP_TO_BASE
0x000012CE: 0x8029            - O_POP_BASE
0x000012D0: 0x801C            - O_POP_RETURN

23: Chuck16 (0x000012d2)
===============================
0x000012D2: 0x802B            - O_PUSH_BASE
0x000012D4: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x000012DA: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x000012E0: 0x811E            - O_GSAY_REPLY
0x000012E2: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000012E8: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x000012EE: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x000012F4: 0xC001 0x00000021 - O_INTOP(0x00000021)   // 33 (33)
0x000012FA: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001300: 0x8121            - O_GIQ_OPTION
0x00001302: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00001308: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x0000130E: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x00001314: 0xC001 0x00000018 - O_INTOP(0x00000018)   // 24 (24)
0x0000131A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001320: 0x8121            - O_GIQ_OPTION
0x00001322: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001328: 0x800D            - O_D_TO_A
0x0000132A: 0x8019            - O_SWAPA
0x0000132C: 0x802A            - O_POP_TO_BASE
0x0000132E: 0x8029            - O_POP_BASE
0x00001330: 0x800C            - O_A_TO_D
0x00001332: 0x801C            - O_POP_RETURN
0x00001334: 0x802A            - O_POP_TO_BASE
0x00001336: 0x8029            - O_POP_BASE
0x00001338: 0x801C            - O_POP_RETURN

24: Chuck17 (0x0000133a)
===============================
0x0000133A: 0x802B            - O_PUSH_BASE
0x0000133C: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00001342: 0xC001 0x0000009e - O_INTOP(0x0000009e)   // 158 (158)
0x00001348: 0x811E            - O_GSAY_REPLY
0x0000134A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001350: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00001356: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x0000135C: 0xC001 0x00000021 - O_INTOP(0x00000021)   // 33 (33)
0x00001362: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001368: 0x8121            - O_GIQ_OPTION
0x0000136A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001370: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00001376: 0xC001 0x00000096 - O_INTOP(0x00000096)   // 150 (150)
0x0000137C: 0xC001 0x00000027 - O_INTOP(0x00000027)   // 39 (39)
0x00001382: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x00001388: 0x8121            - O_GIQ_OPTION
0x0000138A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001390: 0x800D            - O_D_TO_A
0x00001392: 0x8019            - O_SWAPA
0x00001394: 0x802A            - O_POP_TO_BASE
0x00001396: 0x8029            - O_POP_BASE
0x00001398: 0x800C            - O_A_TO_D
0x0000139A: 0x801C            - O_POP_RETURN
0x0000139C: 0x802A            - O_POP_TO_BASE
0x0000139E: 0x8029            - O_POP_BASE
0x000013A0: 0x801C            - O_POP_RETURN

25: Chuck18 (0x000013a2)
===============================
0x000013A2: 0x802B            - O_PUSH_BASE
0x000013A4: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x000013AA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000013B0: 0x80C2            - O_SET_LOCAL_VAR
0x000013B2: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x000013B8: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x000013BE: 0x811E            - O_GSAY_REPLY
0x000013C0: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000013C6: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x000013CC: 0xC001 0x00000092 - O_INTOP(0x00000092)   // 146 (146)
0x000013D2: 0xC001 0x00000021 - O_INTOP(0x00000021)   // 33 (33)
0x000013D8: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000013DE: 0x8121            - O_GIQ_OPTION
0x000013E0: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000013E6: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x000013EC: 0xC001 0x000000a1 - O_INTOP(0x000000a1)   // 161 (161)
0x000013F2: 0xC001 0x0000001f - O_INTOP(0x0000001f)   // 31 (31)
0x000013F8: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000013FE: 0x8121            - O_GIQ_OPTION
0x00001400: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001406: 0x800D            - O_D_TO_A
0x00001408: 0x8019            - O_SWAPA
0x0000140A: 0x802A            - O_POP_TO_BASE
0x0000140C: 0x8029            - O_POP_BASE
0x0000140E: 0x800C            - O_A_TO_D
0x00001410: 0x801C            - O_POP_RETURN
0x00001412: 0x802A            - O_POP_TO_BASE
0x00001414: 0x8029            - O_POP_BASE
0x00001416: 0x801C            - O_POP_RETURN

26: Chuck19 (0x00001418)
===============================
0x00001418: 0x802B            - O_PUSH_BASE
0x0000141A: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00001420: 0xC001 0x000000a2 - O_INTOP(0x000000a2)   // 162 (162)
0x00001426: 0x811E            - O_GSAY_REPLY
0x00001428: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000142E: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00001434: 0xC001 0x00000092 - O_INTOP(0x00000092)   // 146 (146)
0x0000143A: 0xC001 0x00000021 - O_INTOP(0x00000021)   // 33 (33)
0x00001440: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001446: 0x8121            - O_GIQ_OPTION
0x00001448: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x0000144E: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00001454: 0xC001 0x000000a3 - O_INTOP(0x000000a3)   // 163 (163)
0x0000145A: 0xC001 0x0000001b - O_INTOP(0x0000001b)   // 27 (27)
0x00001460: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001466: 0x8121            - O_GIQ_OPTION
0x00001468: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x0000146E: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00001474: 0xC001 0x000000a4 - O_INTOP(0x000000a4)   // 164 (164)
0x0000147A: 0xC001 0x0000001c - O_INTOP(0x0000001c)   // 28 (28)
0x00001480: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001486: 0x8121            - O_GIQ_OPTION
0x00001488: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000148E: 0x800D            - O_D_TO_A
0x00001490: 0x8019            - O_SWAPA
0x00001492: 0x802A            - O_POP_TO_BASE
0x00001494: 0x8029            - O_POP_BASE
0x00001496: 0x800C            - O_A_TO_D
0x00001498: 0x801C            - O_POP_RETURN
0x0000149A: 0x802A            - O_POP_TO_BASE
0x0000149C: 0x8029            - O_POP_BASE
0x0000149E: 0x801C            - O_POP_RETURN

27: Chuck20 (0x000014a0)
===============================
0x000014A0: 0x802B            - O_PUSH_BASE
0x000014A2: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x000014A8: 0xC001 0x000000a5 - O_INTOP(0x000000a5)   // 165 (165)
0x000014AE: 0x811E            - O_GSAY_REPLY
0x000014B0: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000014B6: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x000014BC: 0xC001 0x00000092 - O_INTOP(0x00000092)   // 146 (146)
0x000014C2: 0xC001 0x00000021 - O_INTOP(0x00000021)   // 33 (33)
0x000014C8: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000014CE: 0x8121            - O_GIQ_OPTION
0x000014D0: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x000014D6: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x000014DC: 0xC001 0x000000a4 - O_INTOP(0x000000a4)   // 164 (164)
0x000014E2: 0xC001 0x0000001c - O_INTOP(0x0000001c)   // 28 (28)
0x000014E8: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000014EE: 0x8121            - O_GIQ_OPTION
0x000014F0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000014F6: 0x800D            - O_D_TO_A
0x000014F8: 0x8019            - O_SWAPA
0x000014FA: 0x802A            - O_POP_TO_BASE
0x000014FC: 0x8029            - O_POP_BASE
0x000014FE: 0x800C            - O_A_TO_D
0x00001500: 0x801C            - O_POP_RETURN
0x00001502: 0x802A            - O_POP_TO_BASE
0x00001504: 0x8029            - O_POP_BASE
0x00001506: 0x801C            - O_POP_RETURN

28: Chuck21 (0x00001508)
===============================
0x00001508: 0x802B            - O_PUSH_BASE
0x0000150A: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00001510: 0xC001 0x000000a6 - O_INTOP(0x000000a6)   // 166 (166)
0x00001516: 0x811E            - O_GSAY_REPLY
0x00001518: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000151E: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00001524: 0xC001 0x0000007d - O_INTOP(0x0000007d)   // 125 (125)
0x0000152A: 0xC001 0x00000021 - O_INTOP(0x00000021)   // 33 (33)
0x00001530: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001536: 0x8121            - O_GIQ_OPTION
0x00001538: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000153E: 0x800D            - O_D_TO_A
0x00001540: 0x8019            - O_SWAPA
0x00001542: 0x802A            - O_POP_TO_BASE
0x00001544: 0x8029            - O_POP_BASE
0x00001546: 0x800C            - O_A_TO_D
0x00001548: 0x801C            - O_POP_RETURN
0x0000154A: 0x802A            - O_POP_TO_BASE
0x0000154C: 0x8029            - O_POP_BASE
0x0000154E: 0x801C            - O_POP_RETURN

29: Chuck22 (0x00001550)
===============================
0x00001550: 0x802B            - O_PUSH_BASE
0x00001552: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00001558: 0xC001 0x000000a7 - O_INTOP(0x000000a7)   // 167 (167)
0x0000155E: 0xC001 0x000000a9 - O_INTOP(0x000000a9)   // 169 (169)
0x00001564: 0x80B4            - O_RANDOM
0x00001566: 0x811E            - O_GSAY_REPLY
0x00001568: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x0000156E: 0x8046            - O_NEGATE
0x00001570: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00001576: 0xC001 0x00000067 - O_INTOP(0x00000067)   // 103 (103)
0x0000157C: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x00001582: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001588: 0x8121            - O_GIQ_OPTION
0x0000158A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001590: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00001596: 0xC001 0x000000aa - O_INTOP(0x000000aa)   // 170 (170)
0x0000159C: 0xC001 0x0000001e - O_INTOP(0x0000001e)   // 30 (30)
0x000015A2: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000015A8: 0x8121            - O_GIQ_OPTION
0x000015AA: 0xC001 0x000015e2 - O_INTOP(0x000015e2)   // 5602 (5602)
0x000015B0: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000015B6: 0x80C1            - O_LOCAL_VAR
0x000015B8: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000015BE: 0x8037            - O_LESS
0x000015C0: 0x802F            - O_IF
0x000015C2: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000015C8: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x000015CE: 0xC001 0x000000ab - O_INTOP(0x000000ab)   // 171 (171)
0x000015D4: 0xC001 0x0000001f - O_INTOP(0x0000001f)   // 31 (31)
0x000015DA: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000015E0: 0x8121            - O_GIQ_OPTION
0x000015E2: 0xC001 0x0000161a - O_INTOP(0x0000161a)   // 5658 (5658)
0x000015E8: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x000015EE: 0x80C1            - O_LOCAL_VAR
0x000015F0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000015F6: 0x8033            - O_EQUAL
0x000015F8: 0x802F            - O_IF
0x000015FA: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001600: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00001606: 0xC001 0x000000ac - O_INTOP(0x000000ac)   // 172 (172)
0x0000160C: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00001612: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001618: 0x8121            - O_GIQ_OPTION
0x0000161A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001620: 0x800D            - O_D_TO_A
0x00001622: 0x8019            - O_SWAPA
0x00001624: 0x802A            - O_POP_TO_BASE
0x00001626: 0x8029            - O_POP_BASE
0x00001628: 0x800C            - O_A_TO_D
0x0000162A: 0x801C            - O_POP_RETURN
0x0000162C: 0x802A            - O_POP_TO_BASE
0x0000162E: 0x8029            - O_POP_BASE
0x00001630: 0x801C            - O_POP_RETURN

30: Chuck23 (0x00001632)
===============================
0x00001632: 0x802B            - O_PUSH_BASE
0x00001634: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x0000163A: 0xC001 0x000000ad - O_INTOP(0x000000ad)   // 173 (173)
0x00001640: 0x811E            - O_GSAY_REPLY
0x00001642: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001648: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x0000164E: 0xC001 0x0000007d - O_INTOP(0x0000007d)   // 125 (125)
0x00001654: 0xC001 0x00000021 - O_INTOP(0x00000021)   // 33 (33)
0x0000165A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001660: 0x8121            - O_GIQ_OPTION
0x00001662: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001668: 0x800D            - O_D_TO_A
0x0000166A: 0x8019            - O_SWAPA
0x0000166C: 0x802A            - O_POP_TO_BASE
0x0000166E: 0x8029            - O_POP_BASE
0x00001670: 0x800C            - O_A_TO_D
0x00001672: 0x801C            - O_POP_RETURN
0x00001674: 0x802A            - O_POP_TO_BASE
0x00001676: 0x8029            - O_POP_BASE
0x00001678: 0x801C            - O_POP_RETURN

31: ChuckCards (0x0000167a)
===============================
0x0000167A: 0x802B            - O_PUSH_BASE
0x0000167C: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00001682: 0xC001 0x00000078 - O_INTOP(0x00000078)   // 120 (120)
0x00001688: 0x811E            - O_GSAY_REPLY
0x0000168A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001690: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x00001696: 0xC001 0x0000007d - O_INTOP(0x0000007d)   // 125 (125)
0x0000169C: 0xC001 0x00000020 - O_INTOP(0x00000020)   // 32 (32)
0x000016A2: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000016A8: 0x8121            - O_GIQ_OPTION
0x000016AA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000016B0: 0x800D            - O_D_TO_A
0x000016B2: 0x8019            - O_SWAPA
0x000016B4: 0x802A            - O_POP_TO_BASE
0x000016B6: 0x8029            - O_POP_BASE
0x000016B8: 0x800C            - O_A_TO_D
0x000016BA: 0x801C            - O_POP_RETURN
0x000016BC: 0x802A            - O_POP_TO_BASE
0x000016BE: 0x8029            - O_POP_BASE
0x000016C0: 0x801C            - O_POP_RETURN

32: ChuckCards2 (0x000016c2)
===============================
0x000016C2: 0x802B            - O_PUSH_BASE
0x000016C4: 0xC001 0x00001718 - O_INTOP(0x00001718)   // 5912 (5912)
0x000016CA: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000016D0: 0x80C1            - O_LOCAL_VAR
0x000016D2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000016D8: 0x8033            - O_EQUAL
0x000016DA: 0x802F            - O_IF
0x000016DC: 0xC001 0x0000170a - O_INTOP(0x0000170a)   // 5898 (5898)
0x000016E2: 0xC001 0x0000004a - O_INTOP(0x0000004a)   // 74 (74)
0x000016E8: 0x80C5            - O_GLOBAL_VAR
0x000016EA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000016F0: 0x8037            - O_LESS
0x000016F2: 0x802F            - O_IF
0x000016F4: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x000016FA: 0xC001 0x00000079 - O_INTOP(0x00000079)   // 121 (121)
0x00001700: 0x811E            - O_GSAY_REPLY
0x00001702: 0xC001 0x00001718 - O_INTOP(0x00001718)   // 5912 (5912)
0x00001708: 0x8004            - O_JMP
0x0000170A: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001710: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001716: 0x80C2            - O_SET_LOCAL_VAR
0x00001718: 0xC001 0x0000176c - O_INTOP(0x0000176c)   // 5996 (5996)
0x0000171E: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001724: 0x80C1            - O_LOCAL_VAR
0x00001726: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000172C: 0x8033            - O_EQUAL
0x0000172E: 0x802F            - O_IF
0x00001730: 0xC001 0x0000175e - O_INTOP(0x0000175e)   // 5982 (5982)
0x00001736: 0xC001 0x0000004e - O_INTOP(0x0000004e)   // 78 (78)
0x0000173C: 0x80C5            - O_GLOBAL_VAR
0x0000173E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001744: 0x8037            - O_LESS
0x00001746: 0x802F            - O_IF
0x00001748: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x0000174E: 0xC001 0x0000007a - O_INTOP(0x0000007a)   // 122 (122)
0x00001754: 0x811E            - O_GSAY_REPLY
0x00001756: 0xC001 0x0000176c - O_INTOP(0x0000176c)   // 5996 (5996)
0x0000175C: 0x8004            - O_JMP
0x0000175E: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001764: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x0000176A: 0x80C2            - O_SET_LOCAL_VAR
0x0000176C: 0xC001 0x000017c0 - O_INTOP(0x000017c0)   // 6080 (6080)
0x00001772: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001778: 0x80C1            - O_LOCAL_VAR
0x0000177A: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001780: 0x8033            - O_EQUAL
0x00001782: 0x802F            - O_IF
0x00001784: 0xC001 0x000017b2 - O_INTOP(0x000017b2)   // 6066 (6066)
0x0000178A: 0xC001 0x0000004f - O_INTOP(0x0000004f)   // 79 (79)
0x00001790: 0x80C5            - O_GLOBAL_VAR
0x00001792: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001798: 0x8037            - O_LESS
0x0000179A: 0x802F            - O_IF
0x0000179C: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x000017A2: 0xC001 0x0000007b - O_INTOP(0x0000007b)   // 123 (123)
0x000017A8: 0x811E            - O_GSAY_REPLY
0x000017AA: 0xC001 0x000017c0 - O_INTOP(0x000017c0)   // 6080 (6080)
0x000017B0: 0x8004            - O_JMP
0x000017B2: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000017B8: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000017BE: 0x80C2            - O_SET_LOCAL_VAR
0x000017C0: 0xC001 0x000017f6 - O_INTOP(0x000017f6)   // 6134 (6134)
0x000017C6: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000017CC: 0x80C1            - O_LOCAL_VAR
0x000017CE: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000017D4: 0x8036            - O_GREATER_EQUAL
0x000017D6: 0x802F            - O_IF
0x000017D8: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x000017DE: 0xC001 0x0000007c - O_INTOP(0x0000007c)   // 124 (124)
0x000017E4: 0x811E            - O_GSAY_REPLY
0x000017E6: 0x80BF            - O_DUDE_OBJ
0x000017E8: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x000017EE: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000017F4: 0x80CB            - O_SET_CRITTER_STAT
0x000017F6: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000017FC: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001802: 0x80C1            - O_LOCAL_VAR
0x00001804: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000180A: 0x8039            - O_ADD
0x0000180C: 0x80C2            - O_SET_LOCAL_VAR
0x0000180E: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001814: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x0000181A: 0xC001 0x0000007e - O_INTOP(0x0000007e)   // 126 (126)
0x00001820: 0xC001 0x00000021 - O_INTOP(0x00000021)   // 33 (33)
0x00001826: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000182C: 0x8121            - O_GIQ_OPTION
0x0000182E: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001834: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x0000183A: 0xC001 0x0000007f - O_INTOP(0x0000007f)   // 127 (127)
0x00001840: 0xC001 0x0000000d - O_INTOP(0x0000000d)   // 13 (13)
0x00001846: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000184C: 0x8121            - O_GIQ_OPTION
0x0000184E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001854: 0x800D            - O_D_TO_A
0x00001856: 0x8019            - O_SWAPA
0x00001858: 0x802A            - O_POP_TO_BASE
0x0000185A: 0x8029            - O_POP_BASE
0x0000185C: 0x800C            - O_A_TO_D
0x0000185E: 0x801C            - O_POP_RETURN
0x00001860: 0x802A            - O_POP_TO_BASE
0x00001862: 0x8029            - O_POP_BASE
0x00001864: 0x801C            - O_POP_RETURN

33: ChuckBye (0x00001866)
===============================
0x00001866: 0x802B            - O_PUSH_BASE
0x00001868: 0xC001 0x00000298 - O_INTOP(0x00000298)   // 664 (664)
0x0000186E: 0xC001 0x00000074 - O_INTOP(0x00000074)   // 116 (116)
0x00001874: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000187A: 0x8120            - O_GSAY_MESSAGE
0x0000187C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001882: 0x800D            - O_D_TO_A
0x00001884: 0x8019            - O_SWAPA
0x00001886: 0x802A            - O_POP_TO_BASE
0x00001888: 0x8029            - O_POP_BASE
0x0000188A: 0x800C            - O_A_TO_D
0x0000188C: 0x801C            - O_POP_RETURN
0x0000188E: 0x802A            - O_POP_TO_BASE
0x00001890: 0x8029            - O_POP_BASE
0x00001892: 0x801C            - O_POP_RETURN

34: ChuckEnd (0x00001894)
===============================
0x00001894: 0x802B            - O_PUSH_BASE
0x00001896: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000189C: 0x800D            - O_D_TO_A
0x0000189E: 0x8019            - O_SWAPA
0x000018A0: 0x802A            - O_POP_TO_BASE
0x000018A2: 0x8029            - O_POP_BASE
0x000018A4: 0x800C            - O_A_TO_D
0x000018A6: 0x801C            - O_POP_RETURN
0x000018A8: 0x802A            - O_POP_TO_BASE
0x000018AA: 0x8029            - O_POP_BASE
0x000018AC: 0x801C            - O_POP_RETURN

35: get_reaction (0x000018ae)
===============================
0x000018AE: 0x802B            - O_PUSH_BASE
0x000018B0: 0xC001 0x00001b28 - O_INTOP(0x00001b28)   // 6952 (6952)
0x000018B6: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000018BC: 0x80C1            - O_LOCAL_VAR
0x000018BE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000018C4: 0x8033            - O_EQUAL
0x000018C6: 0x802F            - O_IF
0x000018C8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000018CE: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000018D4: 0x80C2            - O_SET_LOCAL_VAR
0x000018D6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000018DC: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000018E2: 0x80C2            - O_SET_LOCAL_VAR
0x000018E4: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000018EA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000018F0: 0x80C2            - O_SET_LOCAL_VAR
0x000018F2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000018F8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000018FE: 0x80C1            - O_LOCAL_VAR
0x00001900: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001906: 0x80BF            - O_DUDE_OBJ
0x00001908: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x0000190E: 0x80CA            - O_GET_CRITTER_STAT
0x00001910: 0x803B            - O_MUL
0x00001912: 0x8039            - O_ADD
0x00001914: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x0000191A: 0x803A            - O_SUB
0x0000191C: 0x80C2            - O_SET_LOCAL_VAR
0x0000191E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001924: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000192A: 0x80C1            - O_LOCAL_VAR
0x0000192C: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00001932: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001938: 0x80BF            - O_DUDE_OBJ
0x0000193A: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00001940: 0x80F3            - O_HAS_TRAIT
0x00001942: 0x803B            - O_MUL
0x00001944: 0x8039            - O_ADD
0x00001946: 0x80C2            - O_SET_LOCAL_VAR
0x00001948: 0xC001 0x000019bc - O_INTOP(0x000019bc)   // 6588 (6588)
0x0000194E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001954: 0x80BF            - O_DUDE_OBJ
0x00001956: 0xC001 0x00000027 - O_INTOP(0x00000027)   // 39 (39)
0x0000195C: 0x80F3            - O_HAS_TRAIT
0x0000195E: 0x802F            - O_IF
0x00001960: 0xC001 0x0000199a - O_INTOP(0x0000199a)   // 6554 (6554)
0x00001966: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x0000196C: 0x80C5            - O_GLOBAL_VAR
0x0000196E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001974: 0x8038            - O_GREATER
0x00001976: 0x802F            - O_IF
0x00001978: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000197E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001984: 0x80C1            - O_LOCAL_VAR
0x00001986: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x0000198C: 0x80C5            - O_GLOBAL_VAR
0x0000198E: 0x8039            - O_ADD
0x00001990: 0x80C2            - O_SET_LOCAL_VAR
0x00001992: 0xC001 0x000019b4 - O_INTOP(0x000019b4)   // 6580 (6580)
0x00001998: 0x8004            - O_JMP
0x0000199A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000019A0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000019A6: 0x80C1            - O_LOCAL_VAR
0x000019A8: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x000019AE: 0x80C5            - O_GLOBAL_VAR
0x000019B0: 0x803A            - O_SUB
0x000019B2: 0x80C2            - O_SET_LOCAL_VAR
0x000019B4: 0xC001 0x00001a10 - O_INTOP(0x00001a10)   // 6672 (6672)
0x000019BA: 0x8004            - O_JMP
0x000019BC: 0xC001 0x000019f6 - O_INTOP(0x000019f6)   // 6646 (6646)
0x000019C2: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000019C8: 0x80C1            - O_LOCAL_VAR
0x000019CA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000019D0: 0x8033            - O_EQUAL
0x000019D2: 0x802F            - O_IF
0x000019D4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000019DA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000019E0: 0x80C1            - O_LOCAL_VAR
0x000019E2: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x000019E8: 0x80C5            - O_GLOBAL_VAR
0x000019EA: 0x803A            - O_SUB
0x000019EC: 0x80C2            - O_SET_LOCAL_VAR
0x000019EE: 0xC001 0x00001a10 - O_INTOP(0x00001a10)   // 6672 (6672)
0x000019F4: 0x8004            - O_JMP
0x000019F6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000019FC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001A02: 0x80C1            - O_LOCAL_VAR
0x00001A04: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00001A0A: 0x80C5            - O_GLOBAL_VAR
0x00001A0C: 0x8039            - O_ADD
0x00001A0E: 0x80C2            - O_SET_LOCAL_VAR
0x00001A10: 0xC001 0x00001a40 - O_INTOP(0x00001a40)   // 6720 (6720)
0x00001A16: 0xC001 0x0000009e - O_INTOP(0x0000009e)   // 158 (158)
0x00001A1C: 0x80C5            - O_GLOBAL_VAR
0x00001A1E: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001A24: 0x8038            - O_GREATER
0x00001A26: 0x802F            - O_IF
0x00001A28: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001A2E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001A34: 0x80C1            - O_LOCAL_VAR
0x00001A36: 0xC001 0x0000001e - O_INTOP(0x0000001e)   // 30 (30)
0x00001A3C: 0x803A            - O_SUB
0x00001A3E: 0x80C2            - O_SET_LOCAL_VAR
0x00001A40: 0xC001 0x00001aa8 - O_INTOP(0x00001aa8)   // 6824 (6824)
0x00001A46: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00001A4C: 0x80C5            - O_GLOBAL_VAR
0x00001A4E: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00001A54: 0x80C5            - O_GLOBAL_VAR
0x00001A56: 0x8039            - O_ADD
0x00001A58: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00001A5E: 0x8036            - O_GREATER_EQUAL
0x00001A60: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00001A66: 0x80C5            - O_GLOBAL_VAR
0x00001A68: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001A6E: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00001A74: 0x80C5            - O_GLOBAL_VAR
0x00001A76: 0x803B            - O_MUL
0x00001A78: 0x8038            - O_GREATER
0x00001A7A: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x00001A80: 0x80C5            - O_GLOBAL_VAR
0x00001A82: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001A88: 0x8033            - O_EQUAL
0x00001A8A: 0x803F            - O_OR
0x00001A8C: 0x803E            - O_AND
0x00001A8E: 0x802F            - O_IF
0x00001A90: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001A96: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001A9C: 0x80C1            - O_LOCAL_VAR
0x00001A9E: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x00001AA4: 0x8039            - O_ADD
0x00001AA6: 0x80C2            - O_SET_LOCAL_VAR
0x00001AA8: 0xC001 0x00001b10 - O_INTOP(0x00001b10)   // 6928 (6928)
0x00001AAE: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00001AB4: 0x80C5            - O_GLOBAL_VAR
0x00001AB6: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00001ABC: 0x80C5            - O_GLOBAL_VAR
0x00001ABE: 0x8039            - O_ADD
0x00001AC0: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00001AC6: 0x8036            - O_GREATER_EQUAL
0x00001AC8: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00001ACE: 0x80C5            - O_GLOBAL_VAR
0x00001AD0: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001AD6: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00001ADC: 0x80C5            - O_GLOBAL_VAR
0x00001ADE: 0x803B            - O_MUL
0x00001AE0: 0x8038            - O_GREATER
0x00001AE2: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x00001AE8: 0x80C5            - O_GLOBAL_VAR
0x00001AEA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001AF0: 0x8033            - O_EQUAL
0x00001AF2: 0x803F            - O_OR
0x00001AF4: 0x803E            - O_AND
0x00001AF6: 0x802F            - O_IF
0x00001AF8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001AFE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001B04: 0x80C1            - O_LOCAL_VAR
0x00001B06: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x00001B0C: 0x803A            - O_SUB
0x00001B0E: 0x80C2            - O_SET_LOCAL_VAR
0x00001B10: 0xC001 0x00001b26 - O_INTOP(0x00001b26)   // 6950 (6950)
0x00001B16: 0x800D            - O_D_TO_A
0x00001B18: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001B1E: 0xC001 0x00000024 - O_INTOP(0x00000024)   // 36 (36)
0x00001B24: 0x8005            - O_CALL
0x00001B26: 0x801A            - O_POP
0x00001B28: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001B2E: 0x800D            - O_D_TO_A
0x00001B30: 0x8019            - O_SWAPA
0x00001B32: 0x802A            - O_POP_TO_BASE
0x00001B34: 0x8029            - O_POP_BASE
0x00001B36: 0x800C            - O_A_TO_D
0x00001B38: 0x801C            - O_POP_RETURN
0x00001B3A: 0x802A            - O_POP_TO_BASE
0x00001B3C: 0x8029            - O_POP_BASE
0x00001B3E: 0x801C            - O_POP_RETURN

36: ReactToLevel (0x00001b40)
===============================
0x00001B40: 0x802B            - O_PUSH_BASE
0x00001B42: 0xC001 0x00001b70 - O_INTOP(0x00001b70)   // 7024 (7024)
0x00001B48: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001B4E: 0x80C1            - O_LOCAL_VAR
0x00001B50: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00001B56: 0x8035            - O_LESS_EQUAL
0x00001B58: 0x802F            - O_IF
0x00001B5A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001B60: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001B66: 0x80C2            - O_SET_LOCAL_VAR
0x00001B68: 0xC001 0x00001bac - O_INTOP(0x00001bac)   // 7084 (7084)
0x00001B6E: 0x8004            - O_JMP
0x00001B70: 0xC001 0x00001b9e - O_INTOP(0x00001b9e)   // 7070 (7070)
0x00001B76: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001B7C: 0x80C1            - O_LOCAL_VAR
0x00001B7E: 0xC001 0x0000004b - O_INTOP(0x0000004b)   // 75 (75)
0x00001B84: 0x8035            - O_LESS_EQUAL
0x00001B86: 0x802F            - O_IF
0x00001B88: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001B8E: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001B94: 0x80C2            - O_SET_LOCAL_VAR
0x00001B96: 0xC001 0x00001bac - O_INTOP(0x00001bac)   // 7084 (7084)
0x00001B9C: 0x8004            - O_JMP
0x00001B9E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001BA4: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001BAA: 0x80C2            - O_SET_LOCAL_VAR
0x00001BAC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001BB2: 0x800D            - O_D_TO_A
0x00001BB4: 0x8019            - O_SWAPA
0x00001BB6: 0x802A            - O_POP_TO_BASE
0x00001BB8: 0x8029            - O_POP_BASE
0x00001BBA: 0x800C            - O_A_TO_D
0x00001BBC: 0x801C            - O_POP_RETURN
0x00001BBE: 0x802A            - O_POP_TO_BASE
0x00001BC0: 0x8029            - O_POP_BASE
0x00001BC2: 0x801C            - O_POP_RETURN

37: LevelToReact (0x00001bc4)
===============================
0x00001BC4: 0x802B            - O_PUSH_BASE
0x00001BC6: 0xC001 0x00001bfc - O_INTOP(0x00001bfc)   // 7164 (7164)
0x00001BCC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001BD2: 0x80C1            - O_LOCAL_VAR
0x00001BD4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001BDA: 0x8033            - O_EQUAL
0x00001BDC: 0x802F            - O_IF
0x00001BDE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001BE4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001BEA: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00001BF0: 0x80B4            - O_RANDOM
0x00001BF2: 0x80C2            - O_SET_LOCAL_VAR
0x00001BF4: 0xC001 0x00001c48 - O_INTOP(0x00001c48)   // 7240 (7240)
0x00001BFA: 0x8004            - O_JMP
0x00001BFC: 0xC001 0x00001c32 - O_INTOP(0x00001c32)   // 7218 (7218)
0x00001C02: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001C08: 0x80C1            - O_LOCAL_VAR
0x00001C0A: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001C10: 0x8033            - O_EQUAL
0x00001C12: 0x802F            - O_IF
0x00001C14: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001C1A: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x00001C20: 0xC001 0x0000004b - O_INTOP(0x0000004b)   // 75 (75)
0x00001C26: 0x80B4            - O_RANDOM
0x00001C28: 0x80C2            - O_SET_LOCAL_VAR
0x00001C2A: 0xC001 0x00001c48 - O_INTOP(0x00001c48)   // 7240 (7240)
0x00001C30: 0x8004            - O_JMP
0x00001C32: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001C38: 0xC001 0x0000004c - O_INTOP(0x0000004c)   // 76 (76)
0x00001C3E: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x00001C44: 0x80B4            - O_RANDOM
0x00001C46: 0x80C2            - O_SET_LOCAL_VAR
0x00001C48: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001C4E: 0x800D            - O_D_TO_A
0x00001C50: 0x8019            - O_SWAPA
0x00001C52: 0x802A            - O_POP_TO_BASE
0x00001C54: 0x8029            - O_POP_BASE
0x00001C56: 0x800C            - O_A_TO_D
0x00001C58: 0x801C            - O_POP_RETURN
0x00001C5A: 0x802A            - O_POP_TO_BASE
0x00001C5C: 0x8029            - O_POP_BASE
0x00001C5E: 0x801C            - O_POP_RETURN

38: UpReact (0x00001c60)
===============================
0x00001C60: 0x802B            - O_PUSH_BASE
0x00001C62: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001C68: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001C6E: 0x80C1            - O_LOCAL_VAR
0x00001C70: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00001C76: 0x8039            - O_ADD
0x00001C78: 0x80C2            - O_SET_LOCAL_VAR
0x00001C7A: 0xC001 0x00001c90 - O_INTOP(0x00001c90)   // 7312 (7312)
0x00001C80: 0x800D            - O_D_TO_A
0x00001C82: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001C88: 0xC001 0x00000024 - O_INTOP(0x00000024)   // 36 (36)
0x00001C8E: 0x8005            - O_CALL
0x00001C90: 0x801A            - O_POP
0x00001C92: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001C98: 0x800D            - O_D_TO_A
0x00001C9A: 0x8019            - O_SWAPA
0x00001C9C: 0x802A            - O_POP_TO_BASE
0x00001C9E: 0x8029            - O_POP_BASE
0x00001CA0: 0x800C            - O_A_TO_D
0x00001CA2: 0x801C            - O_POP_RETURN
0x00001CA4: 0x802A            - O_POP_TO_BASE
0x00001CA6: 0x8029            - O_POP_BASE
0x00001CA8: 0x801C            - O_POP_RETURN

39: DownReact (0x00001caa)
===============================
0x00001CAA: 0x802B            - O_PUSH_BASE
0x00001CAC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001CB2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001CB8: 0x80C1            - O_LOCAL_VAR
0x00001CBA: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00001CC0: 0x803A            - O_SUB
0x00001CC2: 0x80C2            - O_SET_LOCAL_VAR
0x00001CC4: 0xC001 0x00001cda - O_INTOP(0x00001cda)   // 7386 (7386)
0x00001CCA: 0x800D            - O_D_TO_A
0x00001CCC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001CD2: 0xC001 0x00000024 - O_INTOP(0x00000024)   // 36 (36)
0x00001CD8: 0x8005            - O_CALL
0x00001CDA: 0x801A            - O_POP
0x00001CDC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001CE2: 0x800D            - O_D_TO_A
0x00001CE4: 0x8019            - O_SWAPA
0x00001CE6: 0x802A            - O_POP_TO_BASE
0x00001CE8: 0x8029            - O_POP_BASE
0x00001CEA: 0x800C            - O_A_TO_D
0x00001CEC: 0x801C            - O_POP_RETURN
0x00001CEE: 0x802A            - O_POP_TO_BASE
0x00001CF0: 0x8029            - O_POP_BASE
0x00001CF2: 0x801C            - O_POP_RETURN

40: BottomReact (0x00001cf4)
===============================
0x00001CF4: 0x802B            - O_PUSH_BASE
0x00001CF6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001CFC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001D02: 0x80C2            - O_SET_LOCAL_VAR
0x00001D04: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001D0A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001D10: 0x80C2            - O_SET_LOCAL_VAR
0x00001D12: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001D18: 0x800D            - O_D_TO_A
0x00001D1A: 0x8019            - O_SWAPA
0x00001D1C: 0x802A            - O_POP_TO_BASE
0x00001D1E: 0x8029            - O_POP_BASE
0x00001D20: 0x800C            - O_A_TO_D
0x00001D22: 0x801C            - O_POP_RETURN
0x00001D24: 0x802A            - O_POP_TO_BASE
0x00001D26: 0x8029            - O_POP_BASE
0x00001D28: 0x801C            - O_POP_RETURN

41: TopReact (0x00001d2a)
===============================
0x00001D2A: 0x802B            - O_PUSH_BASE
0x00001D2C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001D32: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x00001D38: 0x80C2            - O_SET_LOCAL_VAR
0x00001D3A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001D40: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001D46: 0x80C2            - O_SET_LOCAL_VAR
0x00001D48: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001D4E: 0x800D            - O_D_TO_A
0x00001D50: 0x8019            - O_SWAPA
0x00001D52: 0x802A            - O_POP_TO_BASE
0x00001D54: 0x8029            - O_POP_BASE
0x00001D56: 0x800C            - O_A_TO_D
0x00001D58: 0x801C            - O_POP_RETURN
0x00001D5A: 0x802A            - O_POP_TO_BASE
0x00001D5C: 0x8029            - O_POP_BASE
0x00001D5E: 0x801C            - O_POP_RETURN

42: BigUpReact (0x00001d60)
===============================
0x00001D60: 0x802B            - O_PUSH_BASE
0x00001D62: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001D68: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001D6E: 0x80C1            - O_LOCAL_VAR
0x00001D70: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00001D76: 0x8039            - O_ADD
0x00001D78: 0x80C2            - O_SET_LOCAL_VAR
0x00001D7A: 0xC001 0x00001d90 - O_INTOP(0x00001d90)   // 7568 (7568)
0x00001D80: 0x800D            - O_D_TO_A
0x00001D82: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001D88: 0xC001 0x00000024 - O_INTOP(0x00000024)   // 36 (36)
0x00001D8E: 0x8005            - O_CALL
0x00001D90: 0x801A            - O_POP
0x00001D92: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001D98: 0x800D            - O_D_TO_A
0x00001D9A: 0x8019            - O_SWAPA
0x00001D9C: 0x802A            - O_POP_TO_BASE
0x00001D9E: 0x8029            - O_POP_BASE
0x00001DA0: 0x800C            - O_A_TO_D
0x00001DA2: 0x801C            - O_POP_RETURN
0x00001DA4: 0x802A            - O_POP_TO_BASE
0x00001DA6: 0x8029            - O_POP_BASE
0x00001DA8: 0x801C            - O_POP_RETURN

43: BigDownReact (0x00001daa)
===============================
0x00001DAA: 0x802B            - O_PUSH_BASE
0x00001DAC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001DB2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001DB8: 0x80C1            - O_LOCAL_VAR
0x00001DBA: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00001DC0: 0x803A            - O_SUB
0x00001DC2: 0x80C2            - O_SET_LOCAL_VAR
0x00001DC4: 0xC001 0x00001dda - O_INTOP(0x00001dda)   // 7642 (7642)
0x00001DCA: 0x800D            - O_D_TO_A
0x00001DCC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001DD2: 0xC001 0x00000024 - O_INTOP(0x00000024)   // 36 (36)
0x00001DD8: 0x8005            - O_CALL
0x00001DDA: 0x801A            - O_POP
0x00001DDC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001DE2: 0x800D            - O_D_TO_A
0x00001DE4: 0x8019            - O_SWAPA
0x00001DE6: 0x802A            - O_POP_TO_BASE
0x00001DE8: 0x8029            - O_POP_BASE
0x00001DEA: 0x800C            - O_A_TO_D
0x00001DEC: 0x801C            - O_POP_RETURN
0x00001DEE: 0x802A            - O_POP_TO_BASE
0x00001DF0: 0x8029            - O_POP_BASE
0x00001DF2: 0x801C            - O_POP_RETURN

44: UpReactLevel (0x00001df4)
===============================
0x00001DF4: 0x802B            - O_PUSH_BASE
0x00001DF6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001DFC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001E02: 0x80C1            - O_LOCAL_VAR
0x00001E04: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001E0A: 0x8039            - O_ADD
0x00001E0C: 0x80C2            - O_SET_LOCAL_VAR
0x00001E0E: 0xC001 0x00001e34 - O_INTOP(0x00001e34)   // 7732 (7732)
0x00001E14: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001E1A: 0x80C1            - O_LOCAL_VAR
0x00001E1C: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001E22: 0x8038            - O_GREATER
0x00001E24: 0x802F            - O_IF
0x00001E26: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001E2C: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001E32: 0x80C2            - O_SET_LOCAL_VAR
0x00001E34: 0xC001 0x00001e4a - O_INTOP(0x00001e4a)   // 7754 (7754)
0x00001E3A: 0x800D            - O_D_TO_A
0x00001E3C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001E42: 0xC001 0x00000025 - O_INTOP(0x00000025)   // 37 (37)
0x00001E48: 0x8005            - O_CALL
0x00001E4A: 0x801A            - O_POP
0x00001E4C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001E52: 0x800D            - O_D_TO_A
0x00001E54: 0x8019            - O_SWAPA
0x00001E56: 0x802A            - O_POP_TO_BASE
0x00001E58: 0x8029            - O_POP_BASE
0x00001E5A: 0x800C            - O_A_TO_D
0x00001E5C: 0x801C            - O_POP_RETURN
0x00001E5E: 0x802A            - O_POP_TO_BASE
0x00001E60: 0x8029            - O_POP_BASE
0x00001E62: 0x801C            - O_POP_RETURN

45: DownReactLevel (0x00001e64)
===============================
0x00001E64: 0x802B            - O_PUSH_BASE
0x00001E66: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001E6C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001E72: 0x80C1            - O_LOCAL_VAR
0x00001E74: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001E7A: 0x803A            - O_SUB
0x00001E7C: 0x80C2            - O_SET_LOCAL_VAR
0x00001E7E: 0xC001 0x00001ea4 - O_INTOP(0x00001ea4)   // 7844 (7844)
0x00001E84: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001E8A: 0x80C1            - O_LOCAL_VAR
0x00001E8C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001E92: 0x8037            - O_LESS
0x00001E94: 0x802F            - O_IF
0x00001E96: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001E9C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001EA2: 0x80C2            - O_SET_LOCAL_VAR
0x00001EA4: 0xC001 0x00001eba - O_INTOP(0x00001eba)   // 7866 (7866)
0x00001EAA: 0x800D            - O_D_TO_A
0x00001EAC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001EB2: 0xC001 0x00000025 - O_INTOP(0x00000025)   // 37 (37)
0x00001EB8: 0x8005            - O_CALL
0x00001EBA: 0x801A            - O_POP
0x00001EBC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001EC2: 0x800D            - O_D_TO_A
0x00001EC4: 0x8019            - O_SWAPA
0x00001EC6: 0x802A            - O_POP_TO_BASE
0x00001EC8: 0x8029            - O_POP_BASE
0x00001ECA: 0x800C            - O_A_TO_D
0x00001ECC: 0x801C            - O_POP_RETURN
0x00001ECE: 0x802A            - O_POP_TO_BASE
0x00001ED0: 0x8029            - O_POP_BASE
0x00001ED2: 0x801C            - O_POP_RETURN

46: Goodbyes (0x00001ed4)
===============================
0x00001ED4: 0x802B            - O_PUSH_BASE
0x00001ED6: 0xC001 0x0000027a - O_INTOP(0x0000027a)   // 634 (634)
0x00001EDC: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x00001EE2: 0xC001 0x00000069 - O_INTOP(0x00000069)   // 105 (105)
0x00001EE8: 0x80B4            - O_RANDOM
0x00001EEA: 0x8105            - O_MESSAGE_STR
0x00001EEC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001EF2: 0x8013            - O_STORE_GLOBAL
0x00001EF4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001EFA: 0x800D            - O_D_TO_A
0x00001EFC: 0x8019            - O_SWAPA
0x00001EFE: 0x802A            - O_POP_TO_BASE
0x00001F00: 0x8029            - O_POP_BASE
0x00001F02: 0x800C            - O_A_TO_D
0x00001F04: 0x801C            - O_POP_RETURN
0x00001F06: 0x802A            - O_POP_TO_BASE
0x00001F08: 0x8029            - O_POP_BASE
0x00001F0A: 0x801C            - O_POP_RETURN

