Fallout script decompiler, version 8.4.7 (sfall edition)
Copyright (C) Anchorite (TeamX), 2005-2009
anchorite2001@yandex.ru
Continued by Nirran, phobos2077, Mr.Stalin (2014-2023)
Crossplatformed by alexeevdv (2015)
int2ssl is using Fallout 1 code.
Loading file Games/Fallout1.Steam/scripts/PRISON.int...
  Read startup code
  Read procedures table
  Read namespace
  Read stringspace
  Read tail of startup code
    Check "Jump to 'start' procedure" / "Jump to end of statup code"
    Check "# of argument to 'start' procedure"
    Extract "Export var" section
    Extract "Set exported var values" section
    Extract "Export procedures" section
    Extract "Global variables" section
  Read procedure's bodies
    Procedure: 0
    Procedure: 1
    Procedure: 2
    Procedure: 3
    Procedure: 4
    Procedure: 5
    Procedure: 6
    Procedure: 7
    Procedure: 8
    Procedure: 9
    Procedure: 10
    Procedure: 11
    Procedure: 12
    Procedure: 13
    Procedure: 14
    Procedure: 15
    Procedure: 16
    Procedure: 17
    Procedure: 18
    Procedure: 19
    Procedure: 20
    Procedure: 21
    Procedure: 22
    Procedure: 23
    Procedure: 24
    Procedure: 25
    Procedure: 26
    Procedure: 27
    Procedure: 28
    Procedure: 29
    Procedure: 30
    Procedure: 31
    Procedure: 32
    Procedure: 33
File Games/Fallout1.Steam/scripts/PRISON.int loaded successfuly

Decompiling...
  Init definitions
  Processing code
    Intial reducing
    Building execution tree
        Procedure: 0
        Procedure: 1
        Procedure: 2
        Procedure: 3
        Procedure: 4
        Procedure: 5
        Procedure: 6
        Procedure: 7
        Procedure: 8
        Procedure: 9
        Procedure: 10
        Procedure: 11
        Procedure: 12
        Procedure: 13
        Procedure: 14
        Procedure: 15
        Procedure: 16
        Procedure: 17
        Procedure: 18
        Procedure: 19
Error: Expression required for DC6

============== Procedures table ==================

======== Procedure 0 ========
Name offset:       0x00000006
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000586
Number of args:    0x00000000  // 0

======== Procedure 1 ========
Name offset:       0x00000018
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000586
Number of args:    0x00000000  // 0

======== Procedure 2 ========
Name offset:       0x00000020
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000006C6
Number of args:    0x00000000  // 0

======== Procedure 3 ========
Name offset:       0x0000002A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000006EE
Number of args:    0x00000000  // 0

======== Procedure 4 ========
Name offset:       0x0000003C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000007BA
Number of args:    0x00000000  // 0

======== Procedure 5 ========
Name offset:       0x0000004C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000007F0
Number of args:    0x00000000  // 0

======== Procedure 6 ========
Name offset:       0x0000005A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000928
Number of args:    0x00000000  // 0

======== Procedure 7 ========
Name offset:       0x0000006C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000968
Number of args:    0x00000000  // 0

======== Procedure 8 ========
Name offset:       0x0000007E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000994
Number of args:    0x00000000  // 0

======== Procedure 9 ========
Name offset:       0x00000088
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000A1E
Number of args:    0x00000000  // 0

======== Procedure 10 ========
Name offset:       0x00000092
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000A64
Number of args:    0x00000000  // 0

======== Procedure 11 ========
Name offset:       0x0000009C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000AAA
Number of args:    0x00000000  // 0

======== Procedure 12 ========
Name offset:       0x000000A6
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000AF0
Number of args:    0x00000000  // 0

======== Procedure 13 ========
Name offset:       0x000000B0
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000B7A
Number of args:    0x00000000  // 0

======== Procedure 14 ========
Name offset:       0x000000BA
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000BC0
Number of args:    0x00000000  // 0

======== Procedure 15 ========
Name offset:       0x000000C4
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000C2A
Number of args:    0x00000000  // 0

======== Procedure 16 ========
Name offset:       0x000000CE
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000C70
Number of args:    0x00000000  // 0

======== Procedure 17 ========
Name offset:       0x000000D8
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000CFA
Number of args:    0x00000000  // 0

======== Procedure 18 ========
Name offset:       0x000000E2
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000D40
Number of args:    0x00000000  // 0

======== Procedure 19 ========
Name offset:       0x000000EC
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000D86
Number of args:    0x00000000  // 0

======== Procedure 20 ========
Name offset:       0x000000F6
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000DE0
Number of args:    0x00000000  // 0

======== Procedure 21 ========
Name offset:       0x00000100
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000E58
Number of args:    0x00000000  // 0

======== Procedure 22 ========
Name offset:       0x0000013A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000E72
Number of args:    0x00000000  // 0

======== Procedure 23 ========
Name offset:       0x0000014A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000010CC
Number of args:    0x00000000  // 0

======== Procedure 24 ========
Name offset:       0x0000015A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001150
Number of args:    0x00000000  // 0

======== Procedure 25 ========
Name offset:       0x0000016A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000011EC
Number of args:    0x00000000  // 0

======== Procedure 26 ========
Name offset:       0x00000174
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001236
Number of args:    0x00000000  // 0

======== Procedure 27 ========
Name offset:       0x00000180
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001280
Number of args:    0x00000000  // 0

======== Procedure 28 ========
Name offset:       0x0000018E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000012B6
Number of args:    0x00000000  // 0

======== Procedure 29 ========
Name offset:       0x0000019A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000012EC
Number of args:    0x00000000  // 0

======== Procedure 30 ========
Name offset:       0x000001A8
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001336
Number of args:    0x00000000  // 0

======== Procedure 31 ========
Name offset:       0x000001B8
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001380
Number of args:    0x00000000  // 0

======== Procedure 32 ========
Name offset:       0x000001C8
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000013F0
Number of args:    0x00000000  // 0

======== Procedure 33 ========
Name offset:       0x000001DA
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001460
Number of args:    0x00000000  // 0



============== Namespace ==================
0x00000006: ".............."
0x00000018: "start"
0x00000020: "combat"
0x0000002A: "critter_p_proc"
0x0000003C: "pickup_p_proc"
0x0000004C: "talk_p_proc"
0x0000005A: "destroy_p_proc"
0x0000006C: "look_at_p_proc"
0x0000007E: "goto01"
0x00000088: "goto02"
0x00000092: "goto03"
0x0000009C: "goto04"
0x000000A6: "goto05"
0x000000B0: "goto06"
0x000000BA: "goto07"
0x000000C4: "goto08"
0x000000CE: "goto09"
0x000000D8: "goto10"
0x000000E2: "goto11"
0x000000EC: "explode"
0x000000F6: "escape"
0x00000100: "dialog_end"
0x0000010E: "hostile"
0x00000118: "Only_Once"
0x00000124: "target_hex"
0x00000132: "said"
0x0000013A: "get_reaction"
0x0000014A: "ReactToLevel"
0x0000015A: "LevelToReact"
0x0000016A: "UpReact"
0x00000174: "DownReact"
0x00000180: "BottomReact"
0x0000018E: "TopReact"
0x0000019A: "BigUpReact"
0x000001A8: "BigDownReact"
0x000001B8: "UpReactLevel"
0x000001C8: "DownReactLevel"
0x000001DA: "Goodbyes"
0x000001E6: "exit_line"
==================
39 item(s)



============== Stringspace ==================
Empty


============== Global variables values ==================
0: O_INTOP(0x00000000)   // 0 (0)
1: O_INTOP(0x00000001)   // 1 (1)
2: O_INTOP(0x00000000)   // 0 (0)
3: O_INTOP(0x00000000)   // 0 (0)
4: O_INTOP(0x00000000)   // 0 (0)


============== Exported variables ==================
Not found


============== Procedures ==================

0: .............. (0x00000586)
===============================

1: start (0x00000586)
===============================
0x00000586: 0x802B            - O_PUSH_BASE
0x00000588: 0xC001 0x000005bc - O_INTOP(0x000005bc)   // 1468 (1468)
0x0000058E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000594: 0x8012            - O_FETCH_GLOBAL
0x00000596: 0x802F            - O_IF
0x00000598: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000059E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000005A4: 0x8013            - O_STORE_GLOBAL
0x000005A6: 0x80BC            - O_SELF_OBJ
0x000005A8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000005AE: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x000005B4: 0xC001 0x0000002c - O_INTOP(0x0000002c)   // 44 (44)
0x000005BA: 0x8102            - O_CRITTER_ADD_TRAIT
0x000005BC: 0xC001 0x000005ee - O_INTOP(0x000005ee)   // 1518 (1518)
0x000005C2: 0x80C7            - O_SCRIPT_ACTION
0x000005C4: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x000005CA: 0x8033            - O_EQUAL
0x000005CC: 0x802F            - O_IF
0x000005CE: 0xC001 0x000005e4 - O_INTOP(0x000005e4)   // 1508 (1508)
0x000005D4: 0x800D            - O_D_TO_A
0x000005D6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000005DC: 0xC001 0x00000007 - O_INTOP(0x00000007)   // 7 (7)
0x000005E2: 0x8005            - O_CALL
0x000005E4: 0x801A            - O_POP
0x000005E6: 0xC001 0x000006ae - O_INTOP(0x000006ae)   // 1710 (1710)
0x000005EC: 0x8004            - O_JMP
0x000005EE: 0xC001 0x00000620 - O_INTOP(0x00000620)   // 1568 (1568)
0x000005F4: 0x80C7            - O_SCRIPT_ACTION
0x000005F6: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000005FC: 0x8033            - O_EQUAL
0x000005FE: 0x802F            - O_IF
0x00000600: 0xC001 0x00000616 - O_INTOP(0x00000616)   // 1558 (1558)
0x00000606: 0x800D            - O_D_TO_A
0x00000608: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000060E: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000614: 0x8005            - O_CALL
0x00000616: 0x801A            - O_POP
0x00000618: 0xC001 0x000006ae - O_INTOP(0x000006ae)   // 1710 (1710)
0x0000061E: 0x8004            - O_JMP
0x00000620: 0xC001 0x00000652 - O_INTOP(0x00000652)   // 1618 (1618)
0x00000626: 0x80C7            - O_SCRIPT_ACTION
0x00000628: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x0000062E: 0x8033            - O_EQUAL
0x00000630: 0x802F            - O_IF
0x00000632: 0xC001 0x00000648 - O_INTOP(0x00000648)   // 1608 (1608)
0x00000638: 0x800D            - O_D_TO_A
0x0000063A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000640: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000646: 0x8005            - O_CALL
0x00000648: 0x801A            - O_POP
0x0000064A: 0xC001 0x000006ae - O_INTOP(0x000006ae)   // 1710 (1710)
0x00000650: 0x8004            - O_JMP
0x00000652: 0xC001 0x00000684 - O_INTOP(0x00000684)   // 1668 (1668)
0x00000658: 0x80C7            - O_SCRIPT_ACTION
0x0000065A: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00000660: 0x8033            - O_EQUAL
0x00000662: 0x802F            - O_IF
0x00000664: 0xC001 0x0000067a - O_INTOP(0x0000067a)   // 1658 (1658)
0x0000066A: 0x800D            - O_D_TO_A
0x0000066C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000672: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000678: 0x8005            - O_CALL
0x0000067A: 0x801A            - O_POP
0x0000067C: 0xC001 0x000006ae - O_INTOP(0x000006ae)   // 1710 (1710)
0x00000682: 0x8004            - O_JMP
0x00000684: 0xC001 0x000006ae - O_INTOP(0x000006ae)   // 1710 (1710)
0x0000068A: 0x80C7            - O_SCRIPT_ACTION
0x0000068C: 0xC001 0x00000012 - O_INTOP(0x00000012)   // 18 (18)
0x00000692: 0x8033            - O_EQUAL
0x00000694: 0x802F            - O_IF
0x00000696: 0xC001 0x000006ac - O_INTOP(0x000006ac)   // 1708 (1708)
0x0000069C: 0x800D            - O_D_TO_A
0x0000069E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000006A4: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x000006AA: 0x8005            - O_CALL
0x000006AC: 0x801A            - O_POP
0x000006AE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000006B4: 0x800D            - O_D_TO_A
0x000006B6: 0x8019            - O_SWAPA
0x000006B8: 0x802A            - O_POP_TO_BASE
0x000006BA: 0x8029            - O_POP_BASE
0x000006BC: 0x800C            - O_A_TO_D
0x000006BE: 0x801C            - O_POP_RETURN
0x000006C0: 0x802A            - O_POP_TO_BASE
0x000006C2: 0x8029            - O_POP_BASE
0x000006C4: 0x801C            - O_POP_RETURN

2: combat (0x000006c6)
===============================
0x000006C6: 0x802B            - O_PUSH_BASE
0x000006C8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000006CE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000006D4: 0x8013            - O_STORE_GLOBAL
0x000006D6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000006DC: 0x800D            - O_D_TO_A
0x000006DE: 0x8019            - O_SWAPA
0x000006E0: 0x802A            - O_POP_TO_BASE
0x000006E2: 0x8029            - O_POP_BASE
0x000006E4: 0x800C            - O_A_TO_D
0x000006E6: 0x801C            - O_POP_RETURN
0x000006E8: 0x802A            - O_POP_TO_BASE
0x000006EA: 0x8029            - O_POP_BASE
0x000006EC: 0x801C            - O_POP_RETURN

3: critter_p_proc (0x000006ee)
===============================
0x000006EE: 0x802B            - O_PUSH_BASE
0x000006F0: 0xC001 0x00000724 - O_INTOP(0x00000724)   // 1828 (1828)
0x000006F6: 0x80BC            - O_SELF_OBJ
0x000006F8: 0x80D4            - O_TILE_NUM
0x000006FA: 0xC001 0x000061a8 - O_INTOP(0x000061a8)   // 25000 (25000)
0x00000700: 0x8037            - O_LESS
0x00000702: 0x802F            - O_IF
0x00000704: 0xC001 0x0000071a - O_INTOP(0x0000071a)   // 1818 (1818)
0x0000070A: 0x800D            - O_D_TO_A
0x0000070C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000712: 0xC001 0x00000013 - O_INTOP(0x00000013)   // 19 (19)
0x00000718: 0x8005            - O_CALL
0x0000071A: 0x801A            - O_POP
0x0000071C: 0xC001 0x000007a2 - O_INTOP(0x000007a2)   // 1954 (1954)
0x00000722: 0x8004            - O_JMP
0x00000724: 0xC001 0x0000075c - O_INTOP(0x0000075c)   // 1884 (1884)
0x0000072A: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000730: 0x80C3            - O_MAP_VAR
0x00000732: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000738: 0x8033            - O_EQUAL
0x0000073A: 0x802F            - O_IF
0x0000073C: 0xC001 0x00000752 - O_INTOP(0x00000752)   // 1874 (1874)
0x00000742: 0x800D            - O_D_TO_A
0x00000744: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000074A: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x00000750: 0x8005            - O_CALL
0x00000752: 0x801A            - O_POP
0x00000754: 0xC001 0x000007a2 - O_INTOP(0x000007a2)   // 1954 (1954)
0x0000075A: 0x8004            - O_JMP
0x0000075C: 0xC001 0x000007a2 - O_INTOP(0x000007a2)   // 1954 (1954)
0x00000762: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000768: 0x8012            - O_FETCH_GLOBAL
0x0000076A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000770: 0x8033            - O_EQUAL
0x00000772: 0x802F            - O_IF
0x00000774: 0x80BF            - O_DUDE_OBJ
0x00000776: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000077C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000782: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000788: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000078E: 0xC001 0x00007530 - O_INTOP(0x00007530)   // 30000 (30000)
0x00000794: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000079A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000007A0: 0x80D0            - O_ATTACK_COMPLEX
0x000007A2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000007A8: 0x800D            - O_D_TO_A
0x000007AA: 0x8019            - O_SWAPA
0x000007AC: 0x802A            - O_POP_TO_BASE
0x000007AE: 0x8029            - O_POP_BASE
0x000007B0: 0x800C            - O_A_TO_D
0x000007B2: 0x801C            - O_POP_RETURN
0x000007B4: 0x802A            - O_POP_TO_BASE
0x000007B6: 0x8029            - O_POP_BASE
0x000007B8: 0x801C            - O_POP_RETURN

4: pickup_p_proc (0x000007ba)
===============================
0x000007BA: 0x802B            - O_PUSH_BASE
0x000007BC: 0xC001 0x000007d8 - O_INTOP(0x000007d8)   // 2008 (2008)
0x000007C2: 0x80BD            - O_SOURCE_OBJ
0x000007C4: 0x80BF            - O_DUDE_OBJ
0x000007C6: 0x8033            - O_EQUAL
0x000007C8: 0x802F            - O_IF
0x000007CA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000007D0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000007D6: 0x8013            - O_STORE_GLOBAL
0x000007D8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000007DE: 0x800D            - O_D_TO_A
0x000007E0: 0x8019            - O_SWAPA
0x000007E2: 0x802A            - O_POP_TO_BASE
0x000007E4: 0x8029            - O_POP_BASE
0x000007E6: 0x800C            - O_A_TO_D
0x000007E8: 0x801C            - O_POP_RETURN
0x000007EA: 0x802A            - O_POP_TO_BASE
0x000007EC: 0x8029            - O_POP_BASE
0x000007EE: 0x801C            - O_POP_RETURN

5: talk_p_proc (0x000007f0)
===============================
0x000007F0: 0x802B            - O_PUSH_BASE
0x000007F2: 0xC001 0x00000808 - O_INTOP(0x00000808)   // 2056 (2056)
0x000007F8: 0x800D            - O_D_TO_A
0x000007FA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000800: 0xC001 0x00000016 - O_INTOP(0x00000016)   // 22 (22)
0x00000806: 0x8005            - O_CALL
0x00000808: 0x801A            - O_POP
0x0000080A: 0xC001 0x000002aa - O_INTOP(0x000002aa)   // 682 (682)
0x00000810: 0x80BC            - O_SELF_OBJ
0x00000812: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000818: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000081E: 0x8046            - O_NEGATE
0x00000820: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000826: 0x8046            - O_NEGATE
0x00000828: 0x80DE            - O_START_GDIALOG
0x0000082A: 0x811C            - O_GSAY_START
0x0000082C: 0xC001 0x000008ae - O_INTOP(0x000008ae)   // 2222 (2222)
0x00000832: 0x80BF            - O_DUDE_OBJ
0x00000834: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000083A: 0x8106            - O_CRITTER_INVEN_OBJ
0x0000083C: 0x8100            - O_OBJ_PID
0x0000083E: 0xC001 0x00000071 - O_INTOP(0x00000071)   // 113 (113)
0x00000844: 0x8033            - O_EQUAL
0x00000846: 0x802F            - O_IF
0x00000848: 0xC001 0x00000880 - O_INTOP(0x00000880)   // 2176 (2176)
0x0000084E: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000854: 0x80C1            - O_LOCAL_VAR
0x00000856: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000085C: 0x8033            - O_EQUAL
0x0000085E: 0x802F            - O_IF
0x00000860: 0xC001 0x00000876 - O_INTOP(0x00000876)   // 2166 (2166)
0x00000866: 0x800D            - O_D_TO_A
0x00000868: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000086E: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00000874: 0x8005            - O_CALL
0x00000876: 0x801A            - O_POP
0x00000878: 0xC001 0x00000898 - O_INTOP(0x00000898)   // 2200 (2200)
0x0000087E: 0x8004            - O_JMP
0x00000880: 0xC001 0x00000896 - O_INTOP(0x00000896)   // 2198 (2198)
0x00000886: 0x800D            - O_D_TO_A
0x00000888: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000088E: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x00000894: 0x8005            - O_CALL
0x00000896: 0x801A            - O_POP
0x00000898: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x0000089E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000008A4: 0x80C2            - O_SET_LOCAL_VAR
0x000008A6: 0xC001 0x0000090c - O_INTOP(0x0000090c)   // 2316 (2316)
0x000008AC: 0x8004            - O_JMP
0x000008AE: 0xC001 0x000008e6 - O_INTOP(0x000008e6)   // 2278 (2278)
0x000008B4: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000008BA: 0x80C1            - O_LOCAL_VAR
0x000008BC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000008C2: 0x8033            - O_EQUAL
0x000008C4: 0x802F            - O_IF
0x000008C6: 0xC001 0x000008dc - O_INTOP(0x000008dc)   // 2268 (2268)
0x000008CC: 0x800D            - O_D_TO_A
0x000008CE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000008D4: 0xC001 0x00000010 - O_INTOP(0x00000010)   // 16 (16)
0x000008DA: 0x8005            - O_CALL
0x000008DC: 0x801A            - O_POP
0x000008DE: 0xC001 0x000008fe - O_INTOP(0x000008fe)   // 2302 (2302)
0x000008E4: 0x8004            - O_JMP
0x000008E6: 0xC001 0x000008fc - O_INTOP(0x000008fc)   // 2300 (2300)
0x000008EC: 0x800D            - O_D_TO_A
0x000008EE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000008F4: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x000008FA: 0x8005            - O_CALL
0x000008FC: 0x801A            - O_POP
0x000008FE: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000904: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000090A: 0x80C2            - O_SET_LOCAL_VAR
0x0000090C: 0x811D            - O_GSAY_END
0x0000090E: 0x80DF            - O_END_DIALOGUE
0x00000910: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000916: 0x800D            - O_D_TO_A
0x00000918: 0x8019            - O_SWAPA
0x0000091A: 0x802A            - O_POP_TO_BASE
0x0000091C: 0x8029            - O_POP_BASE
0x0000091E: 0x800C            - O_A_TO_D
0x00000920: 0x801C            - O_POP_RETURN
0x00000922: 0x802A            - O_POP_TO_BASE
0x00000924: 0x8029            - O_POP_BASE
0x00000926: 0x801C            - O_POP_RETURN

6: destroy_p_proc (0x00000928)
===============================
0x00000928: 0x802B            - O_PUSH_BASE
0x0000092A: 0xC001 0x00000950 - O_INTOP(0x00000950)   // 2384 (2384)
0x00000930: 0x80BD            - O_SOURCE_OBJ
0x00000932: 0x80BF            - O_DUDE_OBJ
0x00000934: 0x8033            - O_EQUAL
0x00000936: 0x802F            - O_IF
0x00000938: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x0000093E: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000944: 0x80C5            - O_GLOBAL_VAR
0x00000946: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000094C: 0x8039            - O_ADD
0x0000094E: 0x80C6            - O_SET_GLOBAL_VAR
0x00000950: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000956: 0x800D            - O_D_TO_A
0x00000958: 0x8019            - O_SWAPA
0x0000095A: 0x802A            - O_POP_TO_BASE
0x0000095C: 0x8029            - O_POP_BASE
0x0000095E: 0x800C            - O_A_TO_D
0x00000960: 0x801C            - O_POP_RETURN
0x00000962: 0x802A            - O_POP_TO_BASE
0x00000964: 0x8029            - O_POP_BASE
0x00000966: 0x801C            - O_POP_RETURN

7: look_at_p_proc (0x00000968)
===============================
0x00000968: 0x802B            - O_PUSH_BASE
0x0000096A: 0x80B9            - O_SCRIPT_OVERRIDES
0x0000096C: 0xC001 0x000002aa - O_INTOP(0x000002aa)   // 682 (682)
0x00000972: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x00000978: 0x8105            - O_MESSAGE_STR
0x0000097A: 0x80B8            - O_DISPLAY_MSG
0x0000097C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000982: 0x800D            - O_D_TO_A
0x00000984: 0x8019            - O_SWAPA
0x00000986: 0x802A            - O_POP_TO_BASE
0x00000988: 0x8029            - O_POP_BASE
0x0000098A: 0x800C            - O_A_TO_D
0x0000098C: 0x801C            - O_POP_RETURN
0x0000098E: 0x802A            - O_POP_TO_BASE
0x00000990: 0x8029            - O_POP_BASE
0x00000992: 0x801C            - O_POP_RETURN

8: goto01 (0x00000994)
===============================
0x00000994: 0x802B            - O_PUSH_BASE
0x00000996: 0xC001 0x000002aa - O_INTOP(0x000002aa)   // 682 (682)
0x0000099C: 0xC001 0x0000006c - O_INTOP(0x0000006c)   // 108 (108)
0x000009A2: 0x811E            - O_GSAY_REPLY
0x000009A4: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000009AA: 0x8046            - O_NEGATE
0x000009AC: 0xC001 0x000002aa - O_INTOP(0x000002aa)   // 682 (682)
0x000009B2: 0xC001 0x0000006d - O_INTOP(0x0000006d)   // 109 (109)
0x000009B8: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x000009BE: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000009C4: 0x8121            - O_GIQ_OPTION
0x000009C6: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000009CC: 0xC001 0x000002aa - O_INTOP(0x000002aa)   // 682 (682)
0x000009D2: 0xC001 0x0000006e - O_INTOP(0x0000006e)   // 110 (110)
0x000009D8: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x000009DE: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000009E4: 0x8121            - O_GIQ_OPTION
0x000009E6: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000009EC: 0xC001 0x000002aa - O_INTOP(0x000002aa)   // 682 (682)
0x000009F2: 0xC001 0x0000006f - O_INTOP(0x0000006f)   // 111 (111)
0x000009F8: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000009FE: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000A04: 0x8121            - O_GIQ_OPTION
0x00000A06: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A0C: 0x800D            - O_D_TO_A
0x00000A0E: 0x8019            - O_SWAPA
0x00000A10: 0x802A            - O_POP_TO_BASE
0x00000A12: 0x8029            - O_POP_BASE
0x00000A14: 0x800C            - O_A_TO_D
0x00000A16: 0x801C            - O_POP_RETURN
0x00000A18: 0x802A            - O_POP_TO_BASE
0x00000A1A: 0x8029            - O_POP_BASE
0x00000A1C: 0x801C            - O_POP_RETURN

9: goto02 (0x00000a1e)
===============================
0x00000A1E: 0x802B            - O_PUSH_BASE
0x00000A20: 0xC001 0x000002aa - O_INTOP(0x000002aa)   // 682 (682)
0x00000A26: 0xC001 0x00000070 - O_INTOP(0x00000070)   // 112 (112)
0x00000A2C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000A32: 0x8120            - O_GSAY_MESSAGE
0x00000A34: 0xC001 0x00000a4a - O_INTOP(0x00000a4a)   // 2634 (2634)
0x00000A3A: 0x800D            - O_D_TO_A
0x00000A3C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A42: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x00000A48: 0x8005            - O_CALL
0x00000A4A: 0x801A            - O_POP
0x00000A4C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A52: 0x800D            - O_D_TO_A
0x00000A54: 0x8019            - O_SWAPA
0x00000A56: 0x802A            - O_POP_TO_BASE
0x00000A58: 0x8029            - O_POP_BASE
0x00000A5A: 0x800C            - O_A_TO_D
0x00000A5C: 0x801C            - O_POP_RETURN
0x00000A5E: 0x802A            - O_POP_TO_BASE
0x00000A60: 0x8029            - O_POP_BASE
0x00000A62: 0x801C            - O_POP_RETURN

10: goto03 (0x00000a64)
===============================
0x00000A64: 0x802B            - O_PUSH_BASE
0x00000A66: 0xC001 0x000002aa - O_INTOP(0x000002aa)   // 682 (682)
0x00000A6C: 0xC001 0x00000071 - O_INTOP(0x00000071)   // 113 (113)
0x00000A72: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000A78: 0x8120            - O_GSAY_MESSAGE
0x00000A7A: 0xC001 0x00000a90 - O_INTOP(0x00000a90)   // 2704 (2704)
0x00000A80: 0x800D            - O_D_TO_A
0x00000A82: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A88: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x00000A8E: 0x8005            - O_CALL
0x00000A90: 0x801A            - O_POP
0x00000A92: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A98: 0x800D            - O_D_TO_A
0x00000A9A: 0x8019            - O_SWAPA
0x00000A9C: 0x802A            - O_POP_TO_BASE
0x00000A9E: 0x8029            - O_POP_BASE
0x00000AA0: 0x800C            - O_A_TO_D
0x00000AA2: 0x801C            - O_POP_RETURN
0x00000AA4: 0x802A            - O_POP_TO_BASE
0x00000AA6: 0x8029            - O_POP_BASE
0x00000AA8: 0x801C            - O_POP_RETURN

11: goto04 (0x00000aaa)
===============================
0x00000AAA: 0x802B            - O_PUSH_BASE
0x00000AAC: 0xC001 0x000002aa - O_INTOP(0x000002aa)   // 682 (682)
0x00000AB2: 0xC001 0x00000080 - O_INTOP(0x00000080)   // 128 (128)
0x00000AB8: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000ABE: 0x8120            - O_GSAY_MESSAGE
0x00000AC0: 0xC001 0x00000ad6 - O_INTOP(0x00000ad6)   // 2774 (2774)
0x00000AC6: 0x800D            - O_D_TO_A
0x00000AC8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000ACE: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x00000AD4: 0x8005            - O_CALL
0x00000AD6: 0x801A            - O_POP
0x00000AD8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000ADE: 0x800D            - O_D_TO_A
0x00000AE0: 0x8019            - O_SWAPA
0x00000AE2: 0x802A            - O_POP_TO_BASE
0x00000AE4: 0x8029            - O_POP_BASE
0x00000AE6: 0x800C            - O_A_TO_D
0x00000AE8: 0x801C            - O_POP_RETURN
0x00000AEA: 0x802A            - O_POP_TO_BASE
0x00000AEC: 0x8029            - O_POP_BASE
0x00000AEE: 0x801C            - O_POP_RETURN

12: goto05 (0x00000af0)
===============================
0x00000AF0: 0x802B            - O_PUSH_BASE
0x00000AF2: 0xC001 0x000002aa - O_INTOP(0x000002aa)   // 682 (682)
0x00000AF8: 0xC001 0x00000072 - O_INTOP(0x00000072)   // 114 (114)
0x00000AFE: 0x811E            - O_GSAY_REPLY
0x00000B00: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000B06: 0x8046            - O_NEGATE
0x00000B08: 0xC001 0x000002aa - O_INTOP(0x000002aa)   // 682 (682)
0x00000B0E: 0xC001 0x00000073 - O_INTOP(0x00000073)   // 115 (115)
0x00000B14: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x00000B1A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000B20: 0x8121            - O_GIQ_OPTION
0x00000B22: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000B28: 0xC001 0x000002aa - O_INTOP(0x000002aa)   // 682 (682)
0x00000B2E: 0xC001 0x00000074 - O_INTOP(0x00000074)   // 116 (116)
0x00000B34: 0xC001 0x0000000d - O_INTOP(0x0000000d)   // 13 (13)
0x00000B3A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000B40: 0x8121            - O_GIQ_OPTION
0x00000B42: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000B48: 0xC001 0x000002aa - O_INTOP(0x000002aa)   // 682 (682)
0x00000B4E: 0xC001 0x00000075 - O_INTOP(0x00000075)   // 117 (117)
0x00000B54: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x00000B5A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000B60: 0x8121            - O_GIQ_OPTION
0x00000B62: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000B68: 0x800D            - O_D_TO_A
0x00000B6A: 0x8019            - O_SWAPA
0x00000B6C: 0x802A            - O_POP_TO_BASE
0x00000B6E: 0x8029            - O_POP_BASE
0x00000B70: 0x800C            - O_A_TO_D
0x00000B72: 0x801C            - O_POP_RETURN
0x00000B74: 0x802A            - O_POP_TO_BASE
0x00000B76: 0x8029            - O_POP_BASE
0x00000B78: 0x801C            - O_POP_RETURN

13: goto06 (0x00000b7a)
===============================
0x00000B7A: 0x802B            - O_PUSH_BASE
0x00000B7C: 0xC001 0x000002aa - O_INTOP(0x000002aa)   // 682 (682)
0x00000B82: 0xC001 0x00000076 - O_INTOP(0x00000076)   // 118 (118)
0x00000B88: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000B8E: 0x8120            - O_GSAY_MESSAGE
0x00000B90: 0xC001 0x00000ba6 - O_INTOP(0x00000ba6)   // 2982 (2982)
0x00000B96: 0x800D            - O_D_TO_A
0x00000B98: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000B9E: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x00000BA4: 0x8005            - O_CALL
0x00000BA6: 0x801A            - O_POP
0x00000BA8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000BAE: 0x800D            - O_D_TO_A
0x00000BB0: 0x8019            - O_SWAPA
0x00000BB2: 0x802A            - O_POP_TO_BASE
0x00000BB4: 0x8029            - O_POP_BASE
0x00000BB6: 0x800C            - O_A_TO_D
0x00000BB8: 0x801C            - O_POP_RETURN
0x00000BBA: 0x802A            - O_POP_TO_BASE
0x00000BBC: 0x8029            - O_POP_BASE
0x00000BBE: 0x801C            - O_POP_RETURN

14: goto07 (0x00000bc0)
===============================
0x00000BC0: 0x802B            - O_PUSH_BASE
0x00000BC2: 0xC001 0x000002aa - O_INTOP(0x000002aa)   // 682 (682)
0x00000BC8: 0xC001 0x00000077 - O_INTOP(0x00000077)   // 119 (119)
0x00000BCE: 0x811E            - O_GSAY_REPLY
0x00000BD0: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000BD6: 0x8046            - O_NEGATE
0x00000BD8: 0xC001 0x000002aa - O_INTOP(0x000002aa)   // 682 (682)
0x00000BDE: 0xC001 0x00000073 - O_INTOP(0x00000073)   // 115 (115)
0x00000BE4: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x00000BEA: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000BF0: 0x8121            - O_GIQ_OPTION
0x00000BF2: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000BF8: 0xC001 0x000002aa - O_INTOP(0x000002aa)   // 682 (682)
0x00000BFE: 0xC001 0x00000078 - O_INTOP(0x00000078)   // 120 (120)
0x00000C04: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x00000C0A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000C10: 0x8121            - O_GIQ_OPTION
0x00000C12: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000C18: 0x800D            - O_D_TO_A
0x00000C1A: 0x8019            - O_SWAPA
0x00000C1C: 0x802A            - O_POP_TO_BASE
0x00000C1E: 0x8029            - O_POP_BASE
0x00000C20: 0x800C            - O_A_TO_D
0x00000C22: 0x801C            - O_POP_RETURN
0x00000C24: 0x802A            - O_POP_TO_BASE
0x00000C26: 0x8029            - O_POP_BASE
0x00000C28: 0x801C            - O_POP_RETURN

15: goto08 (0x00000c2a)
===============================
0x00000C2A: 0x802B            - O_PUSH_BASE
0x00000C2C: 0xC001 0x000002aa - O_INTOP(0x000002aa)   // 682 (682)
0x00000C32: 0xC001 0x0000007a - O_INTOP(0x0000007a)   // 122 (122)
0x00000C38: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000C3E: 0x8120            - O_GSAY_MESSAGE
0x00000C40: 0xC001 0x00000c56 - O_INTOP(0x00000c56)   // 3158 (3158)
0x00000C46: 0x800D            - O_D_TO_A
0x00000C48: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000C4E: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x00000C54: 0x8005            - O_CALL
0x00000C56: 0x801A            - O_POP
0x00000C58: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000C5E: 0x800D            - O_D_TO_A
0x00000C60: 0x8019            - O_SWAPA
0x00000C62: 0x802A            - O_POP_TO_BASE
0x00000C64: 0x8029            - O_POP_BASE
0x00000C66: 0x800C            - O_A_TO_D
0x00000C68: 0x801C            - O_POP_RETURN
0x00000C6A: 0x802A            - O_POP_TO_BASE
0x00000C6C: 0x8029            - O_POP_BASE
0x00000C6E: 0x801C            - O_POP_RETURN

16: goto09 (0x00000c70)
===============================
0x00000C70: 0x802B            - O_PUSH_BASE
0x00000C72: 0xC001 0x000002aa - O_INTOP(0x000002aa)   // 682 (682)
0x00000C78: 0xC001 0x0000007b - O_INTOP(0x0000007b)   // 123 (123)
0x00000C7E: 0x811E            - O_GSAY_REPLY
0x00000C80: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000C86: 0x8046            - O_NEGATE
0x00000C88: 0xC001 0x000002aa - O_INTOP(0x000002aa)   // 682 (682)
0x00000C8E: 0xC001 0x00000073 - O_INTOP(0x00000073)   // 115 (115)
0x00000C94: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x00000C9A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000CA0: 0x8121            - O_GIQ_OPTION
0x00000CA2: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000CA8: 0xC001 0x000002aa - O_INTOP(0x000002aa)   // 682 (682)
0x00000CAE: 0xC001 0x0000007c - O_INTOP(0x0000007c)   // 124 (124)
0x00000CB4: 0xC001 0x00000012 - O_INTOP(0x00000012)   // 18 (18)
0x00000CBA: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000CC0: 0x8121            - O_GIQ_OPTION
0x00000CC2: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000CC8: 0xC001 0x000002aa - O_INTOP(0x000002aa)   // 682 (682)
0x00000CCE: 0xC001 0x0000007d - O_INTOP(0x0000007d)   // 125 (125)
0x00000CD4: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x00000CDA: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000CE0: 0x8121            - O_GIQ_OPTION
0x00000CE2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000CE8: 0x800D            - O_D_TO_A
0x00000CEA: 0x8019            - O_SWAPA
0x00000CEC: 0x802A            - O_POP_TO_BASE
0x00000CEE: 0x8029            - O_POP_BASE
0x00000CF0: 0x800C            - O_A_TO_D
0x00000CF2: 0x801C            - O_POP_RETURN
0x00000CF4: 0x802A            - O_POP_TO_BASE
0x00000CF6: 0x8029            - O_POP_BASE
0x00000CF8: 0x801C            - O_POP_RETURN

17: goto10 (0x00000cfa)
===============================
0x00000CFA: 0x802B            - O_PUSH_BASE
0x00000CFC: 0xC001 0x000002aa - O_INTOP(0x000002aa)   // 682 (682)
0x00000D02: 0xC001 0x0000007e - O_INTOP(0x0000007e)   // 126 (126)
0x00000D08: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000D0E: 0x8120            - O_GSAY_MESSAGE
0x00000D10: 0xC001 0x00000d26 - O_INTOP(0x00000d26)   // 3366 (3366)
0x00000D16: 0x800D            - O_D_TO_A
0x00000D18: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D1E: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x00000D24: 0x8005            - O_CALL
0x00000D26: 0x801A            - O_POP
0x00000D28: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D2E: 0x800D            - O_D_TO_A
0x00000D30: 0x8019            - O_SWAPA
0x00000D32: 0x802A            - O_POP_TO_BASE
0x00000D34: 0x8029            - O_POP_BASE
0x00000D36: 0x800C            - O_A_TO_D
0x00000D38: 0x801C            - O_POP_RETURN
0x00000D3A: 0x802A            - O_POP_TO_BASE
0x00000D3C: 0x8029            - O_POP_BASE
0x00000D3E: 0x801C            - O_POP_RETURN

18: goto11 (0x00000d40)
===============================
0x00000D40: 0x802B            - O_PUSH_BASE
0x00000D42: 0xC001 0x000002aa - O_INTOP(0x000002aa)   // 682 (682)
0x00000D48: 0xC001 0x0000007f - O_INTOP(0x0000007f)   // 127 (127)
0x00000D4E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000D54: 0x8120            - O_GSAY_MESSAGE
0x00000D56: 0xC001 0x00000d6c - O_INTOP(0x00000d6c)   // 3436 (3436)
0x00000D5C: 0x800D            - O_D_TO_A
0x00000D5E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D64: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x00000D6A: 0x8005            - O_CALL
0x00000D6C: 0x801A            - O_POP
0x00000D6E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D74: 0x800D            - O_D_TO_A
0x00000D76: 0x8019            - O_SWAPA
0x00000D78: 0x802A            - O_POP_TO_BASE
0x00000D7A: 0x8029            - O_POP_BASE
0x00000D7C: 0x800C            - O_A_TO_D
0x00000D7E: 0x801C            - O_POP_RETURN
0x00000D80: 0x802A            - O_POP_TO_BASE
0x00000D82: 0x8029            - O_POP_BASE
0x00000D84: 0x801C            - O_POP_RETURN

19: explode (0x00000d86)
===============================
0x00000D86: 0x802B            - O_PUSH_BASE
0x00000D88: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000D8E: 0x80BC            - O_SELF_OBJ
0x00000D90: 0x810E            - O_REG_ANIM_FUNC
0x00000D92: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000D98: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000D9E: 0x810E            - O_REG_ANIM_FUNC
0x00000DA0: 0x80BC            - O_SELF_OBJ
0x00000DA2: 0xC001 0x0000001f - O_INTOP(0x0000001f)   // 31 (31)
0x00000DA8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000DAE: 0x810F            - O_REG_ANIM_ANIMATE
0x00000DB0: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000DB6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000DBC: 0x810E            - O_REG_ANIM_FUNC
0x00000DBE: 0x80BC            - O_SELF_OBJ
0x00000DC0: 0xC001 0x00000080 - O_INTOP(0x00000080)   // 128 (128)
0x00000DC6: 0x80EF            - O_CRITTER_DMG
0x00000DC8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000DCE: 0x800D            - O_D_TO_A
0x00000DD0: 0x8019            - O_SWAPA
0x00000DD2: 0x802A            - O_POP_TO_BASE
0x00000DD4: 0x8029            - O_POP_BASE
0x00000DD6: 0x800C            - O_A_TO_D
0x00000DD8: 0x801C            - O_POP_RETURN
0x00000DDA: 0x802A            - O_POP_TO_BASE
0x00000DDC: 0x8029            - O_POP_BASE
0x00000DDE: 0x801C            - O_POP_RETURN

20: escape (0x00000de0)
===============================
0x00000DE0: 0x802B            - O_PUSH_BASE
0x00000DE2: 0xC001 0x00000e20 - O_INTOP(0x00000e20)   // 3616 (3616)
0x00000DE8: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000DEE: 0x8012            - O_FETCH_GLOBAL
0x00000DF0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000DF6: 0x8033            - O_EQUAL
0x00000DF8: 0x802F            - O_IF
0x00000DFA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000E00: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000E06: 0x8013            - O_STORE_GLOBAL
0x00000E08: 0x80BC            - O_SELF_OBJ
0x00000E0A: 0xC001 0x000002aa - O_INTOP(0x000002aa)   // 682 (682)
0x00000E10: 0xC001 0x0000006b - O_INTOP(0x0000006b)   // 107 (107)
0x00000E16: 0x8105            - O_MESSAGE_STR
0x00000E18: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000E1E: 0x810A            - O_FLOAT_MSG
0x00000E20: 0xC001 0x00005980 - O_INTOP(0x00005980)   // 22912 (22912)
0x00000E26: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000E2C: 0x8013            - O_STORE_GLOBAL
0x00000E2E: 0x80BC            - O_SELF_OBJ
0x00000E30: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000E36: 0x8012            - O_FETCH_GLOBAL
0x00000E38: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000E3E: 0x80CE            - O_ANIMATE_MOVE_OBJ_TO_TILE
0x00000E40: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E46: 0x800D            - O_D_TO_A
0x00000E48: 0x8019            - O_SWAPA
0x00000E4A: 0x802A            - O_POP_TO_BASE
0x00000E4C: 0x8029            - O_POP_BASE
0x00000E4E: 0x800C            - O_A_TO_D
0x00000E50: 0x801C            - O_POP_RETURN
0x00000E52: 0x802A            - O_POP_TO_BASE
0x00000E54: 0x8029            - O_POP_BASE
0x00000E56: 0x801C            - O_POP_RETURN

21: dialog_end (0x00000e58)
===============================
0x00000E58: 0x802B            - O_PUSH_BASE
0x00000E5A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E60: 0x800D            - O_D_TO_A
0x00000E62: 0x8019            - O_SWAPA
0x00000E64: 0x802A            - O_POP_TO_BASE
0x00000E66: 0x8029            - O_POP_BASE
0x00000E68: 0x800C            - O_A_TO_D
0x00000E6A: 0x801C            - O_POP_RETURN
0x00000E6C: 0x802A            - O_POP_TO_BASE
0x00000E6E: 0x8029            - O_POP_BASE
0x00000E70: 0x801C            - O_POP_RETURN

22: get_reaction (0x00000e72)
===============================
0x00000E72: 0x802B            - O_PUSH_BASE
0x00000E74: 0xC001 0x000010b4 - O_INTOP(0x000010b4)   // 4276 (4276)
0x00000E7A: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000E80: 0x80C1            - O_LOCAL_VAR
0x00000E82: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E88: 0x8033            - O_EQUAL
0x00000E8A: 0x802F            - O_IF
0x00000E8C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E92: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000E98: 0x80C2            - O_SET_LOCAL_VAR
0x00000E9A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000EA0: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000EA6: 0x80C2            - O_SET_LOCAL_VAR
0x00000EA8: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000EAE: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000EB4: 0x80C2            - O_SET_LOCAL_VAR
0x00000EB6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000EBC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000EC2: 0x80C1            - O_LOCAL_VAR
0x00000EC4: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000ECA: 0x80BF            - O_DUDE_OBJ
0x00000ECC: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000ED2: 0x80CA            - O_GET_CRITTER_STAT
0x00000ED4: 0x803B            - O_MUL
0x00000ED6: 0x8039            - O_ADD
0x00000ED8: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00000EDE: 0x803A            - O_SUB
0x00000EE0: 0x80C2            - O_SET_LOCAL_VAR
0x00000EE2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000EE8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000EEE: 0x80C1            - O_LOCAL_VAR
0x00000EF0: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00000EF6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000EFC: 0x80BF            - O_DUDE_OBJ
0x00000EFE: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00000F04: 0x80F3            - O_HAS_TRAIT
0x00000F06: 0x803B            - O_MUL
0x00000F08: 0x8039            - O_ADD
0x00000F0A: 0x80C2            - O_SET_LOCAL_VAR
0x00000F0C: 0xC001 0x00000f80 - O_INTOP(0x00000f80)   // 3968 (3968)
0x00000F12: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F18: 0x80BF            - O_DUDE_OBJ
0x00000F1A: 0xC001 0x00000027 - O_INTOP(0x00000027)   // 39 (39)
0x00000F20: 0x80F3            - O_HAS_TRAIT
0x00000F22: 0x802F            - O_IF
0x00000F24: 0xC001 0x00000f5e - O_INTOP(0x00000f5e)   // 3934 (3934)
0x00000F2A: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00000F30: 0x80C5            - O_GLOBAL_VAR
0x00000F32: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F38: 0x8038            - O_GREATER
0x00000F3A: 0x802F            - O_IF
0x00000F3C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F42: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F48: 0x80C1            - O_LOCAL_VAR
0x00000F4A: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00000F50: 0x80C5            - O_GLOBAL_VAR
0x00000F52: 0x8039            - O_ADD
0x00000F54: 0x80C2            - O_SET_LOCAL_VAR
0x00000F56: 0xC001 0x00000f78 - O_INTOP(0x00000f78)   // 3960 (3960)
0x00000F5C: 0x8004            - O_JMP
0x00000F5E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F64: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F6A: 0x80C1            - O_LOCAL_VAR
0x00000F6C: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00000F72: 0x80C5            - O_GLOBAL_VAR
0x00000F74: 0x803A            - O_SUB
0x00000F76: 0x80C2            - O_SET_LOCAL_VAR
0x00000F78: 0xC001 0x00000fd4 - O_INTOP(0x00000fd4)   // 4052 (4052)
0x00000F7E: 0x8004            - O_JMP
0x00000F80: 0xC001 0x00000fba - O_INTOP(0x00000fba)   // 4026 (4026)
0x00000F86: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000F8C: 0x80C1            - O_LOCAL_VAR
0x00000F8E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000F94: 0x8033            - O_EQUAL
0x00000F96: 0x802F            - O_IF
0x00000F98: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F9E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000FA4: 0x80C1            - O_LOCAL_VAR
0x00000FA6: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00000FAC: 0x80C5            - O_GLOBAL_VAR
0x00000FAE: 0x803A            - O_SUB
0x00000FB0: 0x80C2            - O_SET_LOCAL_VAR
0x00000FB2: 0xC001 0x00000fd4 - O_INTOP(0x00000fd4)   // 4052 (4052)
0x00000FB8: 0x8004            - O_JMP
0x00000FBA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000FC0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000FC6: 0x80C1            - O_LOCAL_VAR
0x00000FC8: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00000FCE: 0x80C5            - O_GLOBAL_VAR
0x00000FD0: 0x8039            - O_ADD
0x00000FD2: 0x80C2            - O_SET_LOCAL_VAR
0x00000FD4: 0xC001 0x00001004 - O_INTOP(0x00001004)   // 4100 (4100)
0x00000FDA: 0xC001 0x0000009e - O_INTOP(0x0000009e)   // 158 (158)
0x00000FE0: 0x80C5            - O_GLOBAL_VAR
0x00000FE2: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000FE8: 0x8038            - O_GREATER
0x00000FEA: 0x802F            - O_IF
0x00000FEC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000FF2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000FF8: 0x80C1            - O_LOCAL_VAR
0x00000FFA: 0xC001 0x0000001e - O_INTOP(0x0000001e)   // 30 (30)
0x00001000: 0x803A            - O_SUB
0x00001002: 0x80C2            - O_SET_LOCAL_VAR
0x00001004: 0xC001 0x00001050 - O_INTOP(0x00001050)   // 4176 (4176)
0x0000100A: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00001010: 0x80C5            - O_GLOBAL_VAR
0x00001012: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001018: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x0000101E: 0x80C5            - O_GLOBAL_VAR
0x00001020: 0x803B            - O_MUL
0x00001022: 0x8038            - O_GREATER
0x00001024: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x0000102A: 0x80C5            - O_GLOBAL_VAR
0x0000102C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001032: 0x8033            - O_EQUAL
0x00001034: 0x803F            - O_OR
0x00001036: 0x802F            - O_IF
0x00001038: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000103E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001044: 0x80C1            - O_LOCAL_VAR
0x00001046: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x0000104C: 0x8039            - O_ADD
0x0000104E: 0x80C2            - O_SET_LOCAL_VAR
0x00001050: 0xC001 0x0000109c - O_INTOP(0x0000109c)   // 4252 (4252)
0x00001056: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x0000105C: 0x80C5            - O_GLOBAL_VAR
0x0000105E: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001064: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x0000106A: 0x80C5            - O_GLOBAL_VAR
0x0000106C: 0x803B            - O_MUL
0x0000106E: 0x8038            - O_GREATER
0x00001070: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x00001076: 0x80C5            - O_GLOBAL_VAR
0x00001078: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000107E: 0x8033            - O_EQUAL
0x00001080: 0x803F            - O_OR
0x00001082: 0x802F            - O_IF
0x00001084: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000108A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001090: 0x80C1            - O_LOCAL_VAR
0x00001092: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x00001098: 0x803A            - O_SUB
0x0000109A: 0x80C2            - O_SET_LOCAL_VAR
0x0000109C: 0xC001 0x000010b2 - O_INTOP(0x000010b2)   // 4274 (4274)
0x000010A2: 0x800D            - O_D_TO_A
0x000010A4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000010AA: 0xC001 0x00000017 - O_INTOP(0x00000017)   // 23 (23)
0x000010B0: 0x8005            - O_CALL
0x000010B2: 0x801A            - O_POP
0x000010B4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000010BA: 0x800D            - O_D_TO_A
0x000010BC: 0x8019            - O_SWAPA
0x000010BE: 0x802A            - O_POP_TO_BASE
0x000010C0: 0x8029            - O_POP_BASE
0x000010C2: 0x800C            - O_A_TO_D
0x000010C4: 0x801C            - O_POP_RETURN
0x000010C6: 0x802A            - O_POP_TO_BASE
0x000010C8: 0x8029            - O_POP_BASE
0x000010CA: 0x801C            - O_POP_RETURN

23: ReactToLevel (0x000010cc)
===============================
0x000010CC: 0x802B            - O_PUSH_BASE
0x000010CE: 0xC001 0x000010fc - O_INTOP(0x000010fc)   // 4348 (4348)
0x000010D4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000010DA: 0x80C1            - O_LOCAL_VAR
0x000010DC: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x000010E2: 0x8035            - O_LESS_EQUAL
0x000010E4: 0x802F            - O_IF
0x000010E6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000010EC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000010F2: 0x80C2            - O_SET_LOCAL_VAR
0x000010F4: 0xC001 0x00001138 - O_INTOP(0x00001138)   // 4408 (4408)
0x000010FA: 0x8004            - O_JMP
0x000010FC: 0xC001 0x0000112a - O_INTOP(0x0000112a)   // 4394 (4394)
0x00001102: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001108: 0x80C1            - O_LOCAL_VAR
0x0000110A: 0xC001 0x0000004b - O_INTOP(0x0000004b)   // 75 (75)
0x00001110: 0x8035            - O_LESS_EQUAL
0x00001112: 0x802F            - O_IF
0x00001114: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000111A: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001120: 0x80C2            - O_SET_LOCAL_VAR
0x00001122: 0xC001 0x00001138 - O_INTOP(0x00001138)   // 4408 (4408)
0x00001128: 0x8004            - O_JMP
0x0000112A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001130: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001136: 0x80C2            - O_SET_LOCAL_VAR
0x00001138: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000113E: 0x800D            - O_D_TO_A
0x00001140: 0x8019            - O_SWAPA
0x00001142: 0x802A            - O_POP_TO_BASE
0x00001144: 0x8029            - O_POP_BASE
0x00001146: 0x800C            - O_A_TO_D
0x00001148: 0x801C            - O_POP_RETURN
0x0000114A: 0x802A            - O_POP_TO_BASE
0x0000114C: 0x8029            - O_POP_BASE
0x0000114E: 0x801C            - O_POP_RETURN

24: LevelToReact (0x00001150)
===============================
0x00001150: 0x802B            - O_PUSH_BASE
0x00001152: 0xC001 0x00001188 - O_INTOP(0x00001188)   // 4488 (4488)
0x00001158: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000115E: 0x80C1            - O_LOCAL_VAR
0x00001160: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001166: 0x8033            - O_EQUAL
0x00001168: 0x802F            - O_IF
0x0000116A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001170: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001176: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x0000117C: 0x80B4            - O_RANDOM
0x0000117E: 0x80C2            - O_SET_LOCAL_VAR
0x00001180: 0xC001 0x000011d4 - O_INTOP(0x000011d4)   // 4564 (4564)
0x00001186: 0x8004            - O_JMP
0x00001188: 0xC001 0x000011be - O_INTOP(0x000011be)   // 4542 (4542)
0x0000118E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001194: 0x80C1            - O_LOCAL_VAR
0x00001196: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x0000119C: 0x8033            - O_EQUAL
0x0000119E: 0x802F            - O_IF
0x000011A0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000011A6: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x000011AC: 0xC001 0x0000004b - O_INTOP(0x0000004b)   // 75 (75)
0x000011B2: 0x80B4            - O_RANDOM
0x000011B4: 0x80C2            - O_SET_LOCAL_VAR
0x000011B6: 0xC001 0x000011d4 - O_INTOP(0x000011d4)   // 4564 (4564)
0x000011BC: 0x8004            - O_JMP
0x000011BE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000011C4: 0xC001 0x0000004c - O_INTOP(0x0000004c)   // 76 (76)
0x000011CA: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x000011D0: 0x80B4            - O_RANDOM
0x000011D2: 0x80C2            - O_SET_LOCAL_VAR
0x000011D4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000011DA: 0x800D            - O_D_TO_A
0x000011DC: 0x8019            - O_SWAPA
0x000011DE: 0x802A            - O_POP_TO_BASE
0x000011E0: 0x8029            - O_POP_BASE
0x000011E2: 0x800C            - O_A_TO_D
0x000011E4: 0x801C            - O_POP_RETURN
0x000011E6: 0x802A            - O_POP_TO_BASE
0x000011E8: 0x8029            - O_POP_BASE
0x000011EA: 0x801C            - O_POP_RETURN

25: UpReact (0x000011ec)
===============================
0x000011EC: 0x802B            - O_PUSH_BASE
0x000011EE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000011F4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000011FA: 0x80C1            - O_LOCAL_VAR
0x000011FC: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00001202: 0x8039            - O_ADD
0x00001204: 0x80C2            - O_SET_LOCAL_VAR
0x00001206: 0xC001 0x0000121c - O_INTOP(0x0000121c)   // 4636 (4636)
0x0000120C: 0x800D            - O_D_TO_A
0x0000120E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001214: 0xC001 0x00000017 - O_INTOP(0x00000017)   // 23 (23)
0x0000121A: 0x8005            - O_CALL
0x0000121C: 0x801A            - O_POP
0x0000121E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001224: 0x800D            - O_D_TO_A
0x00001226: 0x8019            - O_SWAPA
0x00001228: 0x802A            - O_POP_TO_BASE
0x0000122A: 0x8029            - O_POP_BASE
0x0000122C: 0x800C            - O_A_TO_D
0x0000122E: 0x801C            - O_POP_RETURN
0x00001230: 0x802A            - O_POP_TO_BASE
0x00001232: 0x8029            - O_POP_BASE
0x00001234: 0x801C            - O_POP_RETURN

26: DownReact (0x00001236)
===============================
0x00001236: 0x802B            - O_PUSH_BASE
0x00001238: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000123E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001244: 0x80C1            - O_LOCAL_VAR
0x00001246: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x0000124C: 0x803A            - O_SUB
0x0000124E: 0x80C2            - O_SET_LOCAL_VAR
0x00001250: 0xC001 0x00001266 - O_INTOP(0x00001266)   // 4710 (4710)
0x00001256: 0x800D            - O_D_TO_A
0x00001258: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000125E: 0xC001 0x00000017 - O_INTOP(0x00000017)   // 23 (23)
0x00001264: 0x8005            - O_CALL
0x00001266: 0x801A            - O_POP
0x00001268: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000126E: 0x800D            - O_D_TO_A
0x00001270: 0x8019            - O_SWAPA
0x00001272: 0x802A            - O_POP_TO_BASE
0x00001274: 0x8029            - O_POP_BASE
0x00001276: 0x800C            - O_A_TO_D
0x00001278: 0x801C            - O_POP_RETURN
0x0000127A: 0x802A            - O_POP_TO_BASE
0x0000127C: 0x8029            - O_POP_BASE
0x0000127E: 0x801C            - O_POP_RETURN

27: BottomReact (0x00001280)
===============================
0x00001280: 0x802B            - O_PUSH_BASE
0x00001282: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001288: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000128E: 0x80C2            - O_SET_LOCAL_VAR
0x00001290: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001296: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000129C: 0x80C2            - O_SET_LOCAL_VAR
0x0000129E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000012A4: 0x800D            - O_D_TO_A
0x000012A6: 0x8019            - O_SWAPA
0x000012A8: 0x802A            - O_POP_TO_BASE
0x000012AA: 0x8029            - O_POP_BASE
0x000012AC: 0x800C            - O_A_TO_D
0x000012AE: 0x801C            - O_POP_RETURN
0x000012B0: 0x802A            - O_POP_TO_BASE
0x000012B2: 0x8029            - O_POP_BASE
0x000012B4: 0x801C            - O_POP_RETURN

28: TopReact (0x000012b6)
===============================
0x000012B6: 0x802B            - O_PUSH_BASE
0x000012B8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000012BE: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x000012C4: 0x80C2            - O_SET_LOCAL_VAR
0x000012C6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000012CC: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000012D2: 0x80C2            - O_SET_LOCAL_VAR
0x000012D4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000012DA: 0x800D            - O_D_TO_A
0x000012DC: 0x8019            - O_SWAPA
0x000012DE: 0x802A            - O_POP_TO_BASE
0x000012E0: 0x8029            - O_POP_BASE
0x000012E2: 0x800C            - O_A_TO_D
0x000012E4: 0x801C            - O_POP_RETURN
0x000012E6: 0x802A            - O_POP_TO_BASE
0x000012E8: 0x8029            - O_POP_BASE
0x000012EA: 0x801C            - O_POP_RETURN

29: BigUpReact (0x000012ec)
===============================
0x000012EC: 0x802B            - O_PUSH_BASE
0x000012EE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000012F4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000012FA: 0x80C1            - O_LOCAL_VAR
0x000012FC: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00001302: 0x8039            - O_ADD
0x00001304: 0x80C2            - O_SET_LOCAL_VAR
0x00001306: 0xC001 0x0000131c - O_INTOP(0x0000131c)   // 4892 (4892)
0x0000130C: 0x800D            - O_D_TO_A
0x0000130E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001314: 0xC001 0x00000017 - O_INTOP(0x00000017)   // 23 (23)
0x0000131A: 0x8005            - O_CALL
0x0000131C: 0x801A            - O_POP
0x0000131E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001324: 0x800D            - O_D_TO_A
0x00001326: 0x8019            - O_SWAPA
0x00001328: 0x802A            - O_POP_TO_BASE
0x0000132A: 0x8029            - O_POP_BASE
0x0000132C: 0x800C            - O_A_TO_D
0x0000132E: 0x801C            - O_POP_RETURN
0x00001330: 0x802A            - O_POP_TO_BASE
0x00001332: 0x8029            - O_POP_BASE
0x00001334: 0x801C            - O_POP_RETURN

30: BigDownReact (0x00001336)
===============================
0x00001336: 0x802B            - O_PUSH_BASE
0x00001338: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000133E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001344: 0x80C1            - O_LOCAL_VAR
0x00001346: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x0000134C: 0x803A            - O_SUB
0x0000134E: 0x80C2            - O_SET_LOCAL_VAR
0x00001350: 0xC001 0x00001366 - O_INTOP(0x00001366)   // 4966 (4966)
0x00001356: 0x800D            - O_D_TO_A
0x00001358: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000135E: 0xC001 0x00000017 - O_INTOP(0x00000017)   // 23 (23)
0x00001364: 0x8005            - O_CALL
0x00001366: 0x801A            - O_POP
0x00001368: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000136E: 0x800D            - O_D_TO_A
0x00001370: 0x8019            - O_SWAPA
0x00001372: 0x802A            - O_POP_TO_BASE
0x00001374: 0x8029            - O_POP_BASE
0x00001376: 0x800C            - O_A_TO_D
0x00001378: 0x801C            - O_POP_RETURN
0x0000137A: 0x802A            - O_POP_TO_BASE
0x0000137C: 0x8029            - O_POP_BASE
0x0000137E: 0x801C            - O_POP_RETURN

31: UpReactLevel (0x00001380)
===============================
0x00001380: 0x802B            - O_PUSH_BASE
0x00001382: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001388: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000138E: 0x80C1            - O_LOCAL_VAR
0x00001390: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001396: 0x8039            - O_ADD
0x00001398: 0x80C2            - O_SET_LOCAL_VAR
0x0000139A: 0xC001 0x000013c0 - O_INTOP(0x000013c0)   // 5056 (5056)
0x000013A0: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000013A6: 0x80C1            - O_LOCAL_VAR
0x000013A8: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000013AE: 0x8038            - O_GREATER
0x000013B0: 0x802F            - O_IF
0x000013B2: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000013B8: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000013BE: 0x80C2            - O_SET_LOCAL_VAR
0x000013C0: 0xC001 0x000013d6 - O_INTOP(0x000013d6)   // 5078 (5078)
0x000013C6: 0x800D            - O_D_TO_A
0x000013C8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000013CE: 0xC001 0x00000018 - O_INTOP(0x00000018)   // 24 (24)
0x000013D4: 0x8005            - O_CALL
0x000013D6: 0x801A            - O_POP
0x000013D8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000013DE: 0x800D            - O_D_TO_A
0x000013E0: 0x8019            - O_SWAPA
0x000013E2: 0x802A            - O_POP_TO_BASE
0x000013E4: 0x8029            - O_POP_BASE
0x000013E6: 0x800C            - O_A_TO_D
0x000013E8: 0x801C            - O_POP_RETURN
0x000013EA: 0x802A            - O_POP_TO_BASE
0x000013EC: 0x8029            - O_POP_BASE
0x000013EE: 0x801C            - O_POP_RETURN

32: DownReactLevel (0x000013f0)
===============================
0x000013F0: 0x802B            - O_PUSH_BASE
0x000013F2: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000013F8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000013FE: 0x80C1            - O_LOCAL_VAR
0x00001400: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001406: 0x803A            - O_SUB
0x00001408: 0x80C2            - O_SET_LOCAL_VAR
0x0000140A: 0xC001 0x00001430 - O_INTOP(0x00001430)   // 5168 (5168)
0x00001410: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001416: 0x80C1            - O_LOCAL_VAR
0x00001418: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000141E: 0x8037            - O_LESS
0x00001420: 0x802F            - O_IF
0x00001422: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001428: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000142E: 0x80C2            - O_SET_LOCAL_VAR
0x00001430: 0xC001 0x00001446 - O_INTOP(0x00001446)   // 5190 (5190)
0x00001436: 0x800D            - O_D_TO_A
0x00001438: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000143E: 0xC001 0x00000018 - O_INTOP(0x00000018)   // 24 (24)
0x00001444: 0x8005            - O_CALL
0x00001446: 0x801A            - O_POP
0x00001448: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000144E: 0x800D            - O_D_TO_A
0x00001450: 0x8019            - O_SWAPA
0x00001452: 0x802A            - O_POP_TO_BASE
0x00001454: 0x8029            - O_POP_BASE
0x00001456: 0x800C            - O_A_TO_D
0x00001458: 0x801C            - O_POP_RETURN
0x0000145A: 0x802A            - O_POP_TO_BASE
0x0000145C: 0x8029            - O_POP_BASE
0x0000145E: 0x801C            - O_POP_RETURN

33: Goodbyes (0x00001460)
===============================
0x00001460: 0x802B            - O_PUSH_BASE
0x00001462: 0xC001 0x0000027a - O_INTOP(0x0000027a)   // 634 (634)
0x00001468: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x0000146E: 0xC001 0x00000069 - O_INTOP(0x00000069)   // 105 (105)
0x00001474: 0x80B4            - O_RANDOM
0x00001476: 0x8105            - O_MESSAGE_STR
0x00001478: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000147E: 0x8013            - O_STORE_GLOBAL
0x00001480: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001486: 0x800D            - O_D_TO_A
0x00001488: 0x8019            - O_SWAPA
0x0000148A: 0x802A            - O_POP_TO_BASE
0x0000148C: 0x8029            - O_POP_BASE
0x0000148E: 0x800C            - O_A_TO_D
0x00001490: 0x801C            - O_POP_RETURN
0x00001492: 0x802A            - O_POP_TO_BASE
0x00001494: 0x8029            - O_POP_BASE
0x00001496: 0x801C            - O_POP_RETURN

