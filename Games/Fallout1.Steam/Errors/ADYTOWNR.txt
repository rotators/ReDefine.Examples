Fallout script decompiler, version 8.4.6 (sfall edition)
Copyright (C) Anchorite (TeamX), 2005-2009
anchorite2001@yandex.ru
Continued by Nirran, phobos2077, mr.Stalin (2014-2020)
Crossplatformed by alexeevdv (2015)
int2ssl is using Fallout 1 code.
Loading file Games/Fallout1.Steam/scripts/ADYTOWNR.int...
  Read startup code
  Read procedures table
  Read namespace
  Read stringspace
  Read tail of startup code
    Check "Jump to 'start' procedure" / "Jump to end of statup code"
    Check "# of argument to 'start' procedure"
    Extract "Export var" section
    Extract "Set exported var values" section
    Extract "Export procedures" section
    Extract "Global variables" section
  Read procedure's bodies
    Procedure: 0
    Procedure: 1
    Procedure: 2
    Procedure: 3
    Procedure: 4
    Procedure: 5
    Procedure: 6
    Procedure: 7
    Procedure: 8
    Procedure: 9
    Procedure: 10
    Procedure: 11
    Procedure: 12
    Procedure: 13
    Procedure: 14
    Procedure: 15
    Procedure: 16
    Procedure: 17
    Procedure: 18
    Procedure: 19
    Procedure: 20
    Procedure: 21
    Procedure: 22
File Games/Fallout1.Steam/scripts/ADYTOWNR.int loaded successfuly

Decompiling...
  Init definitions
  Processing code
    Intial reducing
    Building execution tree
        Procedure: 0
        Procedure: 1
        Procedure: 2
        Procedure: 3
        Procedure: 4
        Procedure: 5
        Procedure: 6
        Procedure: 7
        Procedure: 8
        Procedure: 9
        Procedure: 10
        Procedure: 11
        Procedure: 12
        Procedure: 13
        Procedure: 14
        Procedure: 15
        Procedure: 16
        Procedure: 17
        Procedure: 18
        Procedure: 19
        Procedure: 20
        Procedure: 21
        Procedure: 22
    Extracting and reducing conditions
    Setting borders of blocks
        Procedure: 0
        Procedure: 1
Error: Conditional expression left in stack

============== Procedures table ==================

======== Procedure 0 ========
Name offset:       0x00000006
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000003FC
Number of args:    0x00000000  // 0

======== Procedure 1 ========
Name offset:       0x00000018
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000003FC
Number of args:    0x00000000  // 0

======== Procedure 2 ========
Name offset:       0x00000020
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000514
Number of args:    0x00000000  // 0

======== Procedure 3 ========
Name offset:       0x00000032
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000540
Number of args:    0x00000000  // 0

======== Procedure 4 ========
Name offset:       0x00000048
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000056C
Number of args:    0x00000000  // 0

======== Procedure 5 ========
Name offset:       0x00000056
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000626
Number of args:    0x00000000  // 0

======== Procedure 6 ========
Name offset:       0x00000068
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000772
Number of args:    0x00000000  // 0

======== Procedure 7 ========
Name offset:       0x00000078
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000007BE
Number of args:    0x00000000  // 0

======== Procedure 8 ========
Name offset:       0x0000008A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000940
Number of args:    0x00000000  // 0

======== Procedure 9 ========
Name offset:       0x000000AE
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000009BA
Number of args:    0x00000000  // 0

======== Procedure 10 ========
Name offset:       0x000000BE
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000C4C
Number of args:    0x00000000  // 0

======== Procedure 11 ========
Name offset:       0x000000CE
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000CD0
Number of args:    0x00000000  // 0

======== Procedure 12 ========
Name offset:       0x000000DE
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000D6C
Number of args:    0x00000000  // 0

======== Procedure 13 ========
Name offset:       0x000000E8
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000DB6
Number of args:    0x00000000  // 0

======== Procedure 14 ========
Name offset:       0x000000F4
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000E00
Number of args:    0x00000000  // 0

======== Procedure 15 ========
Name offset:       0x00000102
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000E36
Number of args:    0x00000000  // 0

======== Procedure 16 ========
Name offset:       0x0000010E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000E6C
Number of args:    0x00000000  // 0

======== Procedure 17 ========
Name offset:       0x0000011C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000EB6
Number of args:    0x00000000  // 0

======== Procedure 18 ========
Name offset:       0x0000012C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000F00
Number of args:    0x00000000  // 0

======== Procedure 19 ========
Name offset:       0x0000013C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000F70
Number of args:    0x00000000  // 0

======== Procedure 20 ========
Name offset:       0x0000014E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000FE0
Number of args:    0x00000000  // 0

======== Procedure 21 ========
Name offset:       0x00000166
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001018
Number of args:    0x00000000  // 0

======== Procedure 22 ========
Name offset:       0x00000176
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001040
Number of args:    0x00000000  // 0



============== Namespace ==================
0x00000006: ".............."
0x00000018: "Start"
0x00000020: "look_at_p_proc"
0x00000032: "description_p_proc"
0x00000048: "talk_p_proc"
0x00000056: "critter_p_proc"
0x00000068: "damage_p_proc"
0x00000078: "destroy_p_proc"
0x0000008A: "timed_event_p_proc"
0x000000A0: "Initialize"
0x000000AE: "get_reaction"
0x000000BE: "ReactToLevel"
0x000000CE: "LevelToReact"
0x000000DE: "UpReact"
0x000000E8: "DownReact"
0x000000F4: "BottomReact"
0x00000102: "TopReact"
0x0000010E: "BigUpReact"
0x0000011C: "BigDownReact"
0x0000012C: "UpReactLevel"
0x0000013C: "DownReactLevel"
0x0000014E: "Goodbyes"
0x0000015A: "exit_line"
0x00000166: "pickup_p_proc"
0x00000176: "FleeDude"
==================
25 item(s)



============== Stringspace ==================
Empty


============== Global variables values ==================
0: O_INTOP(0x00000001)   // 1 (1)
1: O_INTOP(0x00000000)   // 0 (0)


============== Exported variables ==================
Not found


============== Procedures ==================

0: .............. (0x000003fc)
===============================

1: Start (0x000003fc)
===============================
0x000003FC: 0x802B            - O_PUSH_BASE
0x000003FE: 0xC001 0x000004fc - O_INTOP(0x000004fc)   // 1276 (1276)
0x00000404: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000040A: 0x8012            - O_FETCH_GLOBAL
0x0000040C: 0x802F            - O_IF
0x0000040E: 0xC001 0x0000043c - O_INTOP(0x0000043c)   // 1084 (1084)
0x00000414: 0x80BC            - O_SELF_OBJ
0x00000416: 0xC001 0x00000029 - O_INTOP(0x00000029)   // 41 (41)
0x0000041C: 0x80BA            - O_OBJ_IS_CARRYING_OBJ_PID
0x0000041E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000424: 0x8033            - O_EQUAL
0x00000426: 0x802F            - O_IF
0x00000428: 0x80BC            - O_SELF_OBJ
0x0000042A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000430: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00000436: 0x80B4            - O_RANDOM
0x00000438: 0x8139            - O_ITEM_CAPS_ADJUST
0x0000043A: 0x801A            - O_POP
0x0000043C: 0xC001 0x00000484 - O_INTOP(0x00000484)   // 1156 (1156)
0x00000442: 0xC001 0x00000265 - O_INTOP(0x00000265)   // 613 (613)
0x00000448: 0x80C5            - O_GLOBAL_VAR
0x0000044A: 0xC001 0x0000238f - O_INTOP(0x0000238f)   // 9103 (9103)
0x00000450: 0x8033            - O_EQUAL
0x00000452: 0xC001 0x00000265 - O_INTOP(0x00000265)   // 613 (613)
0x00000458: 0x80C5            - O_GLOBAL_VAR
0x0000045A: 0xC001 0x0000238e - O_INTOP(0x0000238e)   // 9102 (9102)
0x00000460: 0x8033            - O_EQUAL
0x00000462: 0x803F            - O_OR
0x00000464: 0x802F            - O_IF
0x00000466: 0x80BC            - O_SELF_OBJ
0x00000468: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000046E: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000474: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000047A: 0x8102            - O_CRITTER_ADD_TRAIT
0x0000047C: 0xC001 0x0000049a - O_INTOP(0x0000049a)   // 1178 (1178)
0x00000482: 0x8004            - O_JMP
0x00000484: 0x80BC            - O_SELF_OBJ
0x00000486: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000048C: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000492: 0xC001 0x00000031 - O_INTOP(0x00000031)   // 49 (49)
0x00000498: 0x8102            - O_CRITTER_ADD_TRAIT
0x0000049A: 0x80BC            - O_SELF_OBJ
0x0000049C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000004A2: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000004A8: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x000004AE: 0x8102            - O_CRITTER_ADD_TRAIT
0x000004B0: 0x80BC            - O_SELF_OBJ
0x000004B2: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000004B8: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000004BE: 0x80B4            - O_RANDOM
0x000004C0: 0x80F2            - O_GAME_TICKS
0x000004C2: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000004C8: 0x80F0            - O_ADD_TIMER_EVENT
0x000004CA: 0xC001 0x000004ee - O_INTOP(0x000004ee)   // 1262 (1262)
0x000004D0: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000004D6: 0x80C1            - O_LOCAL_VAR
0x000004D8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000004DE: 0x8033            - O_EQUAL
0x000004E0: 0x802F            - O_IF
0x000004E2: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000004E8: 0x80BC            - O_SELF_OBJ
0x000004EA: 0x80D4            - O_TILE_NUM
0x000004EC: 0x80C2            - O_SET_LOCAL_VAR
0x000004EE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000004F4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000004FA: 0x8013            - O_STORE_GLOBAL
0x000004FC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000502: 0x800D            - O_D_TO_A
0x00000504: 0x8019            - O_SWAPA
0x00000506: 0x802A            - O_POP_TO_BASE
0x00000508: 0x8029            - O_POP_BASE
0x0000050A: 0x800C            - O_A_TO_D
0x0000050C: 0x801C            - O_POP_RETURN
0x0000050E: 0x802A            - O_POP_TO_BASE
0x00000510: 0x8029            - O_POP_BASE
0x00000512: 0x801C            - O_POP_RETURN

2: look_at_p_proc (0x00000514)
===============================
0x00000514: 0x802B            - O_PUSH_BASE
0x00000516: 0x80B9            - O_SCRIPT_OVERRIDES
0x00000518: 0xC001 0x000000fb - O_INTOP(0x000000fb)   // 251 (251)
0x0000051E: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x00000524: 0x8105            - O_MESSAGE_STR
0x00000526: 0x80B8            - O_DISPLAY_MSG
0x00000528: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000052E: 0x800D            - O_D_TO_A
0x00000530: 0x8019            - O_SWAPA
0x00000532: 0x802A            - O_POP_TO_BASE
0x00000534: 0x8029            - O_POP_BASE
0x00000536: 0x800C            - O_A_TO_D
0x00000538: 0x801C            - O_POP_RETURN
0x0000053A: 0x802A            - O_POP_TO_BASE
0x0000053C: 0x8029            - O_POP_BASE
0x0000053E: 0x801C            - O_POP_RETURN

3: description_p_proc (0x00000540)
===============================
0x00000540: 0x802B            - O_PUSH_BASE
0x00000542: 0x80B9            - O_SCRIPT_OVERRIDES
0x00000544: 0xC001 0x000000fb - O_INTOP(0x000000fb)   // 251 (251)
0x0000054A: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x00000550: 0x8105            - O_MESSAGE_STR
0x00000552: 0x80B8            - O_DISPLAY_MSG
0x00000554: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000055A: 0x800D            - O_D_TO_A
0x0000055C: 0x8019            - O_SWAPA
0x0000055E: 0x802A            - O_POP_TO_BASE
0x00000560: 0x8029            - O_POP_BASE
0x00000562: 0x800C            - O_A_TO_D
0x00000564: 0x801C            - O_POP_RETURN
0x00000566: 0x802A            - O_POP_TO_BASE
0x00000568: 0x8029            - O_POP_BASE
0x0000056A: 0x801C            - O_POP_RETURN

4: talk_p_proc (0x0000056c)
===============================
0x0000056C: 0x802B            - O_PUSH_BASE
0x0000056E: 0xC001 0x000005ae - O_INTOP(0x000005ae)   // 1454 (1454)
0x00000574: 0xC001 0x000000fb - O_INTOP(0x000000fb)   // 251 (251)
0x0000057A: 0x80C5            - O_GLOBAL_VAR
0x0000057C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000582: 0x8033            - O_EQUAL
0x00000584: 0x802F            - O_IF
0x00000586: 0x80BC            - O_SELF_OBJ
0x00000588: 0xC001 0x0000029d - O_INTOP(0x0000029d)   // 669 (669)
0x0000058E: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x00000594: 0xC001 0x00000069 - O_INTOP(0x00000069)   // 105 (105)
0x0000059A: 0x80B4            - O_RANDOM
0x0000059C: 0x8105            - O_MESSAGE_STR
0x0000059E: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000005A4: 0x810A            - O_FLOAT_MSG
0x000005A6: 0xC001 0x0000060e - O_INTOP(0x0000060e)   // 1550 (1550)
0x000005AC: 0x8004            - O_JMP
0x000005AE: 0xC001 0x000005ee - O_INTOP(0x000005ee)   // 1518 (1518)
0x000005B4: 0xC001 0x00000265 - O_INTOP(0x00000265)   // 613 (613)
0x000005BA: 0x80C5            - O_GLOBAL_VAR
0x000005BC: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000005C2: 0x8033            - O_EQUAL
0x000005C4: 0x802F            - O_IF
0x000005C6: 0x80BC            - O_SELF_OBJ
0x000005C8: 0xC001 0x000000fb - O_INTOP(0x000000fb)   // 251 (251)
0x000005CE: 0xC001 0x00000071 - O_INTOP(0x00000071)   // 113 (113)
0x000005D4: 0xC001 0x00000077 - O_INTOP(0x00000077)   // 119 (119)
0x000005DA: 0x80B4            - O_RANDOM
0x000005DC: 0x8105            - O_MESSAGE_STR
0x000005DE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000005E4: 0x810A            - O_FLOAT_MSG
0x000005E6: 0xC001 0x0000060e - O_INTOP(0x0000060e)   // 1550 (1550)
0x000005EC: 0x8004            - O_JMP
0x000005EE: 0x80BC            - O_SELF_OBJ
0x000005F0: 0xC001 0x000000fb - O_INTOP(0x000000fb)   // 251 (251)
0x000005F6: 0xC001 0x00000065 - O_INTOP(0x00000065)   // 101 (101)
0x000005FC: 0xC001 0x00000070 - O_INTOP(0x00000070)   // 112 (112)
0x00000602: 0x80B4            - O_RANDOM
0x00000604: 0x8105            - O_MESSAGE_STR
0x00000606: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000060C: 0x810A            - O_FLOAT_MSG
0x0000060E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000614: 0x800D            - O_D_TO_A
0x00000616: 0x8019            - O_SWAPA
0x00000618: 0x802A            - O_POP_TO_BASE
0x0000061A: 0x8029            - O_POP_BASE
0x0000061C: 0x800C            - O_A_TO_D
0x0000061E: 0x801C            - O_POP_RETURN
0x00000620: 0x802A            - O_POP_TO_BASE
0x00000622: 0x8029            - O_POP_BASE
0x00000624: 0x801C            - O_POP_RETURN

5: critter_p_proc (0x00000626)
===============================
0x00000626: 0x802B            - O_PUSH_BASE
0x00000628: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000062E: 0xC001 0x00000154 - O_INTOP(0x00000154)   // 340 (340)
0x00000634: 0x80C5            - O_GLOBAL_VAR
0x00000636: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000063C: 0x8031            - O_STORE
0x0000063E: 0xC001 0x00000706 - O_INTOP(0x00000706)   // 1798 (1798)
0x00000644: 0x80EA            - O_GAME_TIME
0x00000646: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x0000064C: 0x803C            - O_DIV
0x0000064E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000654: 0x8032            - O_FETCH
0x00000656: 0x803A            - O_SUB
0x00000658: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x0000065E: 0x8036            - O_GREATER_EQUAL
0x00000660: 0x80BC            - O_SELF_OBJ
0x00000662: 0x80BF            - O_DUDE_OBJ
0x00000664: 0x80D3            - O_TILE_DISTANCE_OBJS
0x00000666: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000066C: 0x8035            - O_LESS_EQUAL
0x0000066E: 0x803E            - O_AND
0x00000670: 0xC001 0x000000fb - O_INTOP(0x000000fb)   // 251 (251)
0x00000676: 0x80C5            - O_GLOBAL_VAR
0x00000678: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000067E: 0x8033            - O_EQUAL
0x00000680: 0x803E            - O_AND
0x00000682: 0x802F            - O_IF
0x00000684: 0xC001 0x000006c4 - O_INTOP(0x000006c4)   // 1732 (1732)
0x0000068A: 0xC001 0x00000265 - O_INTOP(0x00000265)   // 613 (613)
0x00000690: 0x80C5            - O_GLOBAL_VAR
0x00000692: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000698: 0x8033            - O_EQUAL
0x0000069A: 0x802F            - O_IF
0x0000069C: 0x80BC            - O_SELF_OBJ
0x0000069E: 0xC001 0x000000fb - O_INTOP(0x000000fb)   // 251 (251)
0x000006A4: 0xC001 0x00000071 - O_INTOP(0x00000071)   // 113 (113)
0x000006AA: 0xC001 0x00000077 - O_INTOP(0x00000077)   // 119 (119)
0x000006B0: 0x80B4            - O_RANDOM
0x000006B2: 0x8105            - O_MESSAGE_STR
0x000006B4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000006BA: 0x810A            - O_FLOAT_MSG
0x000006BC: 0xC001 0x000006e4 - O_INTOP(0x000006e4)   // 1764 (1764)
0x000006C2: 0x8004            - O_JMP
0x000006C4: 0x80BC            - O_SELF_OBJ
0x000006C6: 0xC001 0x000000fb - O_INTOP(0x000000fb)   // 251 (251)
0x000006CC: 0xC001 0x00000065 - O_INTOP(0x00000065)   // 101 (101)
0x000006D2: 0xC001 0x00000070 - O_INTOP(0x00000070)   // 112 (112)
0x000006D8: 0x80B4            - O_RANDOM
0x000006DA: 0x8105            - O_MESSAGE_STR
0x000006DC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000006E2: 0x810A            - O_FLOAT_MSG
0x000006E4: 0x80EA            - O_GAME_TIME
0x000006E6: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x000006EC: 0x803C            - O_DIV
0x000006EE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000006F4: 0x8031            - O_STORE
0x000006F6: 0xC001 0x00000154 - O_INTOP(0x00000154)   // 340 (340)
0x000006FC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000702: 0x8032            - O_FETCH
0x00000704: 0x80C6            - O_SET_GLOBAL_VAR
0x00000706: 0xC001 0x0000075a - O_INTOP(0x0000075a)   // 1882 (1882)
0x0000070C: 0x80BC            - O_SELF_OBJ
0x0000070E: 0x80BF            - O_DUDE_OBJ
0x00000710: 0x80DC            - O_OBJ_CAN_SEE_OBJ
0x00000712: 0x802F            - O_IF
0x00000714: 0xC001 0x0000075a - O_INTOP(0x0000075a)   // 1882 (1882)
0x0000071A: 0xC001 0x000000fb - O_INTOP(0x000000fb)   // 251 (251)
0x00000720: 0x80C5            - O_GLOBAL_VAR
0x00000722: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000728: 0x8033            - O_EQUAL
0x0000072A: 0x802F            - O_IF
0x0000072C: 0x80BF            - O_DUDE_OBJ
0x0000072E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000734: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000073A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000740: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000746: 0xC001 0x00007530 - O_INTOP(0x00007530)   // 30000 (30000)
0x0000074C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000752: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000758: 0x80D0            - O_ATTACK_COMPLEX
0x0000075A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000760: 0x800D            - O_D_TO_A
0x00000762: 0x8019            - O_SWAPA
0x00000764: 0x802A            - O_POP_TO_BASE
0x00000766: 0x8029            - O_POP_BASE
0x00000768: 0x800C            - O_A_TO_D
0x0000076A: 0x801C            - O_POP_RETURN
0x0000076C: 0x802A            - O_POP_TO_BASE
0x0000076E: 0x8029            - O_POP_BASE
0x00000770: 0x801C            - O_POP_RETURN

6: damage_p_proc (0x00000772)
===============================
0x00000772: 0x802B            - O_PUSH_BASE
0x00000774: 0xC001 0x000007a6 - O_INTOP(0x000007a6)   // 1958 (1958)
0x0000077A: 0x80BD            - O_SOURCE_OBJ
0x0000077C: 0x80BF            - O_DUDE_OBJ
0x0000077E: 0x8033            - O_EQUAL
0x00000780: 0x802F            - O_IF
0x00000782: 0xC001 0x000000fb - O_INTOP(0x000000fb)   // 251 (251)
0x00000788: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000078E: 0x80C6            - O_SET_GLOBAL_VAR
0x00000790: 0x80BC            - O_SELF_OBJ
0x00000792: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000798: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x0000079E: 0xC001 0x00000031 - O_INTOP(0x00000031)   // 49 (49)
0x000007A4: 0x8102            - O_CRITTER_ADD_TRAIT
0x000007A6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000007AC: 0x800D            - O_D_TO_A
0x000007AE: 0x8019            - O_SWAPA
0x000007B0: 0x802A            - O_POP_TO_BASE
0x000007B2: 0x8029            - O_POP_BASE
0x000007B4: 0x800C            - O_A_TO_D
0x000007B6: 0x801C            - O_POP_RETURN
0x000007B8: 0x802A            - O_POP_TO_BASE
0x000007BA: 0x8029            - O_POP_BASE
0x000007BC: 0x801C            - O_POP_RETURN

7: destroy_p_proc (0x000007be)
===============================
0x000007BE: 0x802B            - O_PUSH_BASE
0x000007C0: 0xC001 0x00000928 - O_INTOP(0x00000928)   // 2344 (2344)
0x000007C6: 0x80BD            - O_SOURCE_OBJ
0x000007C8: 0x80BF            - O_DUDE_OBJ
0x000007CA: 0x8033            - O_EQUAL
0x000007CC: 0x802F            - O_IF
0x000007CE: 0xC001 0x000000fb - O_INTOP(0x000000fb)   // 251 (251)
0x000007D4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000007DA: 0x80C6            - O_SET_GLOBAL_VAR
0x000007DC: 0xC001 0x00000912 - O_INTOP(0x00000912)   // 2322 (2322)
0x000007E2: 0x80BD            - O_SOURCE_OBJ
0x000007E4: 0x80BF            - O_DUDE_OBJ
0x000007E6: 0x8033            - O_EQUAL
0x000007E8: 0x802F            - O_IF
0x000007EA: 0xC001 0x00000856 - O_INTOP(0x00000856)   // 2134 (2134)
0x000007F0: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x000007F6: 0x80C5            - O_GLOBAL_VAR
0x000007F8: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x000007FE: 0x80C5            - O_GLOBAL_VAR
0x00000800: 0x8039            - O_ADD
0x00000802: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00000808: 0x8036            - O_GREATER_EQUAL
0x0000080A: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000810: 0x80C5            - O_GLOBAL_VAR
0x00000812: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000818: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x0000081E: 0x80C5            - O_GLOBAL_VAR
0x00000820: 0x803B            - O_MUL
0x00000822: 0x8038            - O_GREATER
0x00000824: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x0000082A: 0x80C5            - O_GLOBAL_VAR
0x0000082C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000832: 0x8033            - O_EQUAL
0x00000834: 0x803F            - O_OR
0x00000836: 0x803E            - O_AND
0x00000838: 0x802F            - O_IF
0x0000083A: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x00000840: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000846: 0x80C6            - O_SET_GLOBAL_VAR
0x00000848: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x0000084E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000854: 0x80C6            - O_SET_GLOBAL_VAR
0x00000856: 0xC001 0x000008c2 - O_INTOP(0x000008c2)   // 2242 (2242)
0x0000085C: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00000862: 0x80C5            - O_GLOBAL_VAR
0x00000864: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x0000086A: 0x80C5            - O_GLOBAL_VAR
0x0000086C: 0x8039            - O_ADD
0x0000086E: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00000874: 0x8036            - O_GREATER_EQUAL
0x00000876: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x0000087C: 0x80C5            - O_GLOBAL_VAR
0x0000087E: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000884: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x0000088A: 0x80C5            - O_GLOBAL_VAR
0x0000088C: 0x803B            - O_MUL
0x0000088E: 0x8038            - O_GREATER
0x00000890: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x00000896: 0x80C5            - O_GLOBAL_VAR
0x00000898: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000089E: 0x8033            - O_EQUAL
0x000008A0: 0x803F            - O_OR
0x000008A2: 0x803E            - O_AND
0x000008A4: 0x802F            - O_IF
0x000008A6: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x000008AC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000008B2: 0x80C6            - O_SET_GLOBAL_VAR
0x000008B4: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x000008BA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000008C0: 0x80C6            - O_SET_GLOBAL_VAR
0x000008C2: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x000008C8: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x000008CE: 0x80C5            - O_GLOBAL_VAR
0x000008D0: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000008D6: 0x8039            - O_ADD
0x000008D8: 0x80C6            - O_SET_GLOBAL_VAR
0x000008DA: 0xC001 0x00000912 - O_INTOP(0x00000912)   // 2322 (2322)
0x000008E0: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x000008E6: 0x80C5            - O_GLOBAL_VAR
0x000008E8: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000008EE: 0x803D            - O_MOD
0x000008F0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000008F6: 0x8033            - O_EQUAL
0x000008F8: 0x802F            - O_IF
0x000008FA: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00000900: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00000906: 0x80C5            - O_GLOBAL_VAR
0x00000908: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000090E: 0x803A            - O_SUB
0x00000910: 0x80C6            - O_SET_GLOBAL_VAR
0x00000912: 0x80BC            - O_SELF_OBJ
0x00000914: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000091A: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000920: 0xC001 0x00000031 - O_INTOP(0x00000031)   // 49 (49)
0x00000926: 0x8102            - O_CRITTER_ADD_TRAIT
0x00000928: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000092E: 0x800D            - O_D_TO_A
0x00000930: 0x8019            - O_SWAPA
0x00000932: 0x802A            - O_POP_TO_BASE
0x00000934: 0x8029            - O_POP_BASE
0x00000936: 0x800C            - O_A_TO_D
0x00000938: 0x801C            - O_POP_RETURN
0x0000093A: 0x802A            - O_POP_TO_BASE
0x0000093C: 0x8029            - O_POP_BASE
0x0000093E: 0x801C            - O_POP_RETURN

8: timed_event_p_proc (0x00000940)
===============================
0x00000940: 0x802B            - O_PUSH_BASE
0x00000942: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000948: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000094E: 0x80C1            - O_LOCAL_VAR
0x00000950: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000956: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x0000095C: 0x80B4            - O_RANDOM
0x0000095E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000964: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x0000096A: 0x80B4            - O_RANDOM
0x0000096C: 0x80D5            - O_TILE_NUM_IN_DIRECTION
0x0000096E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000974: 0x8031            - O_STORE
0x00000976: 0x80BC            - O_SELF_OBJ
0x00000978: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000097E: 0x8032            - O_FETCH
0x00000980: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000986: 0x80CE            - O_ANIMATE_MOVE_OBJ_TO_TILE
0x00000988: 0x80BC            - O_SELF_OBJ
0x0000098A: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000990: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000996: 0x80B4            - O_RANDOM
0x00000998: 0x80F2            - O_GAME_TICKS
0x0000099A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000009A0: 0x80F0            - O_ADD_TIMER_EVENT
0x000009A2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000009A8: 0x800D            - O_D_TO_A
0x000009AA: 0x8019            - O_SWAPA
0x000009AC: 0x802A            - O_POP_TO_BASE
0x000009AE: 0x8029            - O_POP_BASE
0x000009B0: 0x800C            - O_A_TO_D
0x000009B2: 0x801C            - O_POP_RETURN
0x000009B4: 0x802A            - O_POP_TO_BASE
0x000009B6: 0x8029            - O_POP_BASE
0x000009B8: 0x801C            - O_POP_RETURN

9: get_reaction (0x000009ba)
===============================
0x000009BA: 0x802B            - O_PUSH_BASE
0x000009BC: 0xC001 0x00000c34 - O_INTOP(0x00000c34)   // 3124 (3124)
0x000009C2: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000009C8: 0x80C1            - O_LOCAL_VAR
0x000009CA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000009D0: 0x8033            - O_EQUAL
0x000009D2: 0x802F            - O_IF
0x000009D4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000009DA: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000009E0: 0x80C2            - O_SET_LOCAL_VAR
0x000009E2: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000009E8: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000009EE: 0x80C2            - O_SET_LOCAL_VAR
0x000009F0: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000009F6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000009FC: 0x80C2            - O_SET_LOCAL_VAR
0x000009FE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A04: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A0A: 0x80C1            - O_LOCAL_VAR
0x00000A0C: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000A12: 0x80BF            - O_DUDE_OBJ
0x00000A14: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000A1A: 0x80CA            - O_GET_CRITTER_STAT
0x00000A1C: 0x803B            - O_MUL
0x00000A1E: 0x8039            - O_ADD
0x00000A20: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00000A26: 0x803A            - O_SUB
0x00000A28: 0x80C2            - O_SET_LOCAL_VAR
0x00000A2A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A30: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A36: 0x80C1            - O_LOCAL_VAR
0x00000A38: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00000A3E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A44: 0x80BF            - O_DUDE_OBJ
0x00000A46: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00000A4C: 0x80F3            - O_HAS_TRAIT
0x00000A4E: 0x803B            - O_MUL
0x00000A50: 0x8039            - O_ADD
0x00000A52: 0x80C2            - O_SET_LOCAL_VAR
0x00000A54: 0xC001 0x00000ac8 - O_INTOP(0x00000ac8)   // 2760 (2760)
0x00000A5A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A60: 0x80BF            - O_DUDE_OBJ
0x00000A62: 0xC001 0x00000027 - O_INTOP(0x00000027)   // 39 (39)
0x00000A68: 0x80F3            - O_HAS_TRAIT
0x00000A6A: 0x802F            - O_IF
0x00000A6C: 0xC001 0x00000aa6 - O_INTOP(0x00000aa6)   // 2726 (2726)
0x00000A72: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00000A78: 0x80C5            - O_GLOBAL_VAR
0x00000A7A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A80: 0x8038            - O_GREATER
0x00000A82: 0x802F            - O_IF
0x00000A84: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A8A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A90: 0x80C1            - O_LOCAL_VAR
0x00000A92: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00000A98: 0x80C5            - O_GLOBAL_VAR
0x00000A9A: 0x8039            - O_ADD
0x00000A9C: 0x80C2            - O_SET_LOCAL_VAR
0x00000A9E: 0xC001 0x00000ac0 - O_INTOP(0x00000ac0)   // 2752 (2752)
0x00000AA4: 0x8004            - O_JMP
0x00000AA6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000AAC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000AB2: 0x80C1            - O_LOCAL_VAR
0x00000AB4: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00000ABA: 0x80C5            - O_GLOBAL_VAR
0x00000ABC: 0x803A            - O_SUB
0x00000ABE: 0x80C2            - O_SET_LOCAL_VAR
0x00000AC0: 0xC001 0x00000b1c - O_INTOP(0x00000b1c)   // 2844 (2844)
0x00000AC6: 0x8004            - O_JMP
0x00000AC8: 0xC001 0x00000b02 - O_INTOP(0x00000b02)   // 2818 (2818)
0x00000ACE: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000AD4: 0x80C1            - O_LOCAL_VAR
0x00000AD6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000ADC: 0x8033            - O_EQUAL
0x00000ADE: 0x802F            - O_IF
0x00000AE0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000AE6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000AEC: 0x80C1            - O_LOCAL_VAR
0x00000AEE: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00000AF4: 0x80C5            - O_GLOBAL_VAR
0x00000AF6: 0x803A            - O_SUB
0x00000AF8: 0x80C2            - O_SET_LOCAL_VAR
0x00000AFA: 0xC001 0x00000b1c - O_INTOP(0x00000b1c)   // 2844 (2844)
0x00000B00: 0x8004            - O_JMP
0x00000B02: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000B08: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000B0E: 0x80C1            - O_LOCAL_VAR
0x00000B10: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00000B16: 0x80C5            - O_GLOBAL_VAR
0x00000B18: 0x8039            - O_ADD
0x00000B1A: 0x80C2            - O_SET_LOCAL_VAR
0x00000B1C: 0xC001 0x00000b4c - O_INTOP(0x00000b4c)   // 2892 (2892)
0x00000B22: 0xC001 0x0000009e - O_INTOP(0x0000009e)   // 158 (158)
0x00000B28: 0x80C5            - O_GLOBAL_VAR
0x00000B2A: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000B30: 0x8038            - O_GREATER
0x00000B32: 0x802F            - O_IF
0x00000B34: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000B3A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000B40: 0x80C1            - O_LOCAL_VAR
0x00000B42: 0xC001 0x0000001e - O_INTOP(0x0000001e)   // 30 (30)
0x00000B48: 0x803A            - O_SUB
0x00000B4A: 0x80C2            - O_SET_LOCAL_VAR
0x00000B4C: 0xC001 0x00000bb4 - O_INTOP(0x00000bb4)   // 2996 (2996)
0x00000B52: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00000B58: 0x80C5            - O_GLOBAL_VAR
0x00000B5A: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000B60: 0x80C5            - O_GLOBAL_VAR
0x00000B62: 0x8039            - O_ADD
0x00000B64: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00000B6A: 0x8036            - O_GREATER_EQUAL
0x00000B6C: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00000B72: 0x80C5            - O_GLOBAL_VAR
0x00000B74: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000B7A: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000B80: 0x80C5            - O_GLOBAL_VAR
0x00000B82: 0x803B            - O_MUL
0x00000B84: 0x8038            - O_GREATER
0x00000B86: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x00000B8C: 0x80C5            - O_GLOBAL_VAR
0x00000B8E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000B94: 0x8033            - O_EQUAL
0x00000B96: 0x803F            - O_OR
0x00000B98: 0x803E            - O_AND
0x00000B9A: 0x802F            - O_IF
0x00000B9C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000BA2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000BA8: 0x80C1            - O_LOCAL_VAR
0x00000BAA: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x00000BB0: 0x8039            - O_ADD
0x00000BB2: 0x80C2            - O_SET_LOCAL_VAR
0x00000BB4: 0xC001 0x00000c1c - O_INTOP(0x00000c1c)   // 3100 (3100)
0x00000BBA: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00000BC0: 0x80C5            - O_GLOBAL_VAR
0x00000BC2: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000BC8: 0x80C5            - O_GLOBAL_VAR
0x00000BCA: 0x8039            - O_ADD
0x00000BCC: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00000BD2: 0x8036            - O_GREATER_EQUAL
0x00000BD4: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000BDA: 0x80C5            - O_GLOBAL_VAR
0x00000BDC: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000BE2: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00000BE8: 0x80C5            - O_GLOBAL_VAR
0x00000BEA: 0x803B            - O_MUL
0x00000BEC: 0x8038            - O_GREATER
0x00000BEE: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x00000BF4: 0x80C5            - O_GLOBAL_VAR
0x00000BF6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000BFC: 0x8033            - O_EQUAL
0x00000BFE: 0x803F            - O_OR
0x00000C00: 0x803E            - O_AND
0x00000C02: 0x802F            - O_IF
0x00000C04: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000C0A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000C10: 0x80C1            - O_LOCAL_VAR
0x00000C12: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x00000C18: 0x803A            - O_SUB
0x00000C1A: 0x80C2            - O_SET_LOCAL_VAR
0x00000C1C: 0xC001 0x00000c32 - O_INTOP(0x00000c32)   // 3122 (3122)
0x00000C22: 0x800D            - O_D_TO_A
0x00000C24: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000C2A: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00000C30: 0x8005            - O_CALL
0x00000C32: 0x801A            - O_POP
0x00000C34: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000C3A: 0x800D            - O_D_TO_A
0x00000C3C: 0x8019            - O_SWAPA
0x00000C3E: 0x802A            - O_POP_TO_BASE
0x00000C40: 0x8029            - O_POP_BASE
0x00000C42: 0x800C            - O_A_TO_D
0x00000C44: 0x801C            - O_POP_RETURN
0x00000C46: 0x802A            - O_POP_TO_BASE
0x00000C48: 0x8029            - O_POP_BASE
0x00000C4A: 0x801C            - O_POP_RETURN

10: ReactToLevel (0x00000c4c)
===============================
0x00000C4C: 0x802B            - O_PUSH_BASE
0x00000C4E: 0xC001 0x00000c7c - O_INTOP(0x00000c7c)   // 3196 (3196)
0x00000C54: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000C5A: 0x80C1            - O_LOCAL_VAR
0x00000C5C: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00000C62: 0x8035            - O_LESS_EQUAL
0x00000C64: 0x802F            - O_IF
0x00000C66: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000C6C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000C72: 0x80C2            - O_SET_LOCAL_VAR
0x00000C74: 0xC001 0x00000cb8 - O_INTOP(0x00000cb8)   // 3256 (3256)
0x00000C7A: 0x8004            - O_JMP
0x00000C7C: 0xC001 0x00000caa - O_INTOP(0x00000caa)   // 3242 (3242)
0x00000C82: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000C88: 0x80C1            - O_LOCAL_VAR
0x00000C8A: 0xC001 0x0000004b - O_INTOP(0x0000004b)   // 75 (75)
0x00000C90: 0x8035            - O_LESS_EQUAL
0x00000C92: 0x802F            - O_IF
0x00000C94: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000C9A: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000CA0: 0x80C2            - O_SET_LOCAL_VAR
0x00000CA2: 0xC001 0x00000cb8 - O_INTOP(0x00000cb8)   // 3256 (3256)
0x00000CA8: 0x8004            - O_JMP
0x00000CAA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000CB0: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000CB6: 0x80C2            - O_SET_LOCAL_VAR
0x00000CB8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000CBE: 0x800D            - O_D_TO_A
0x00000CC0: 0x8019            - O_SWAPA
0x00000CC2: 0x802A            - O_POP_TO_BASE
0x00000CC4: 0x8029            - O_POP_BASE
0x00000CC6: 0x800C            - O_A_TO_D
0x00000CC8: 0x801C            - O_POP_RETURN
0x00000CCA: 0x802A            - O_POP_TO_BASE
0x00000CCC: 0x8029            - O_POP_BASE
0x00000CCE: 0x801C            - O_POP_RETURN

11: LevelToReact (0x00000cd0)
===============================
0x00000CD0: 0x802B            - O_PUSH_BASE
0x00000CD2: 0xC001 0x00000d08 - O_INTOP(0x00000d08)   // 3336 (3336)
0x00000CD8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000CDE: 0x80C1            - O_LOCAL_VAR
0x00000CE0: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000CE6: 0x8033            - O_EQUAL
0x00000CE8: 0x802F            - O_IF
0x00000CEA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000CF0: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000CF6: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00000CFC: 0x80B4            - O_RANDOM
0x00000CFE: 0x80C2            - O_SET_LOCAL_VAR
0x00000D00: 0xC001 0x00000d54 - O_INTOP(0x00000d54)   // 3412 (3412)
0x00000D06: 0x8004            - O_JMP
0x00000D08: 0xC001 0x00000d3e - O_INTOP(0x00000d3e)   // 3390 (3390)
0x00000D0E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000D14: 0x80C1            - O_LOCAL_VAR
0x00000D16: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000D1C: 0x8033            - O_EQUAL
0x00000D1E: 0x802F            - O_IF
0x00000D20: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D26: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x00000D2C: 0xC001 0x0000004b - O_INTOP(0x0000004b)   // 75 (75)
0x00000D32: 0x80B4            - O_RANDOM
0x00000D34: 0x80C2            - O_SET_LOCAL_VAR
0x00000D36: 0xC001 0x00000d54 - O_INTOP(0x00000d54)   // 3412 (3412)
0x00000D3C: 0x8004            - O_JMP
0x00000D3E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D44: 0xC001 0x0000004c - O_INTOP(0x0000004c)   // 76 (76)
0x00000D4A: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x00000D50: 0x80B4            - O_RANDOM
0x00000D52: 0x80C2            - O_SET_LOCAL_VAR
0x00000D54: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D5A: 0x800D            - O_D_TO_A
0x00000D5C: 0x8019            - O_SWAPA
0x00000D5E: 0x802A            - O_POP_TO_BASE
0x00000D60: 0x8029            - O_POP_BASE
0x00000D62: 0x800C            - O_A_TO_D
0x00000D64: 0x801C            - O_POP_RETURN
0x00000D66: 0x802A            - O_POP_TO_BASE
0x00000D68: 0x8029            - O_POP_BASE
0x00000D6A: 0x801C            - O_POP_RETURN

12: UpReact (0x00000d6c)
===============================
0x00000D6C: 0x802B            - O_PUSH_BASE
0x00000D6E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D74: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D7A: 0x80C1            - O_LOCAL_VAR
0x00000D7C: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00000D82: 0x8039            - O_ADD
0x00000D84: 0x80C2            - O_SET_LOCAL_VAR
0x00000D86: 0xC001 0x00000d9c - O_INTOP(0x00000d9c)   // 3484 (3484)
0x00000D8C: 0x800D            - O_D_TO_A
0x00000D8E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D94: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00000D9A: 0x8005            - O_CALL
0x00000D9C: 0x801A            - O_POP
0x00000D9E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000DA4: 0x800D            - O_D_TO_A
0x00000DA6: 0x8019            - O_SWAPA
0x00000DA8: 0x802A            - O_POP_TO_BASE
0x00000DAA: 0x8029            - O_POP_BASE
0x00000DAC: 0x800C            - O_A_TO_D
0x00000DAE: 0x801C            - O_POP_RETURN
0x00000DB0: 0x802A            - O_POP_TO_BASE
0x00000DB2: 0x8029            - O_POP_BASE
0x00000DB4: 0x801C            - O_POP_RETURN

13: DownReact (0x00000db6)
===============================
0x00000DB6: 0x802B            - O_PUSH_BASE
0x00000DB8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000DBE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000DC4: 0x80C1            - O_LOCAL_VAR
0x00000DC6: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00000DCC: 0x803A            - O_SUB
0x00000DCE: 0x80C2            - O_SET_LOCAL_VAR
0x00000DD0: 0xC001 0x00000de6 - O_INTOP(0x00000de6)   // 3558 (3558)
0x00000DD6: 0x800D            - O_D_TO_A
0x00000DD8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000DDE: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00000DE4: 0x8005            - O_CALL
0x00000DE6: 0x801A            - O_POP
0x00000DE8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000DEE: 0x800D            - O_D_TO_A
0x00000DF0: 0x8019            - O_SWAPA
0x00000DF2: 0x802A            - O_POP_TO_BASE
0x00000DF4: 0x8029            - O_POP_BASE
0x00000DF6: 0x800C            - O_A_TO_D
0x00000DF8: 0x801C            - O_POP_RETURN
0x00000DFA: 0x802A            - O_POP_TO_BASE
0x00000DFC: 0x8029            - O_POP_BASE
0x00000DFE: 0x801C            - O_POP_RETURN

14: BottomReact (0x00000e00)
===============================
0x00000E00: 0x802B            - O_PUSH_BASE
0x00000E02: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000E08: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000E0E: 0x80C2            - O_SET_LOCAL_VAR
0x00000E10: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E16: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000E1C: 0x80C2            - O_SET_LOCAL_VAR
0x00000E1E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E24: 0x800D            - O_D_TO_A
0x00000E26: 0x8019            - O_SWAPA
0x00000E28: 0x802A            - O_POP_TO_BASE
0x00000E2A: 0x8029            - O_POP_BASE
0x00000E2C: 0x800C            - O_A_TO_D
0x00000E2E: 0x801C            - O_POP_RETURN
0x00000E30: 0x802A            - O_POP_TO_BASE
0x00000E32: 0x8029            - O_POP_BASE
0x00000E34: 0x801C            - O_POP_RETURN

15: TopReact (0x00000e36)
===============================
0x00000E36: 0x802B            - O_PUSH_BASE
0x00000E38: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E3E: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x00000E44: 0x80C2            - O_SET_LOCAL_VAR
0x00000E46: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000E4C: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000E52: 0x80C2            - O_SET_LOCAL_VAR
0x00000E54: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E5A: 0x800D            - O_D_TO_A
0x00000E5C: 0x8019            - O_SWAPA
0x00000E5E: 0x802A            - O_POP_TO_BASE
0x00000E60: 0x8029            - O_POP_BASE
0x00000E62: 0x800C            - O_A_TO_D
0x00000E64: 0x801C            - O_POP_RETURN
0x00000E66: 0x802A            - O_POP_TO_BASE
0x00000E68: 0x8029            - O_POP_BASE
0x00000E6A: 0x801C            - O_POP_RETURN

16: BigUpReact (0x00000e6c)
===============================
0x00000E6C: 0x802B            - O_PUSH_BASE
0x00000E6E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E74: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E7A: 0x80C1            - O_LOCAL_VAR
0x00000E7C: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00000E82: 0x8039            - O_ADD
0x00000E84: 0x80C2            - O_SET_LOCAL_VAR
0x00000E86: 0xC001 0x00000e9c - O_INTOP(0x00000e9c)   // 3740 (3740)
0x00000E8C: 0x800D            - O_D_TO_A
0x00000E8E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E94: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00000E9A: 0x8005            - O_CALL
0x00000E9C: 0x801A            - O_POP
0x00000E9E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000EA4: 0x800D            - O_D_TO_A
0x00000EA6: 0x8019            - O_SWAPA
0x00000EA8: 0x802A            - O_POP_TO_BASE
0x00000EAA: 0x8029            - O_POP_BASE
0x00000EAC: 0x800C            - O_A_TO_D
0x00000EAE: 0x801C            - O_POP_RETURN
0x00000EB0: 0x802A            - O_POP_TO_BASE
0x00000EB2: 0x8029            - O_POP_BASE
0x00000EB4: 0x801C            - O_POP_RETURN

17: BigDownReact (0x00000eb6)
===============================
0x00000EB6: 0x802B            - O_PUSH_BASE
0x00000EB8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000EBE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000EC4: 0x80C1            - O_LOCAL_VAR
0x00000EC6: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00000ECC: 0x803A            - O_SUB
0x00000ECE: 0x80C2            - O_SET_LOCAL_VAR
0x00000ED0: 0xC001 0x00000ee6 - O_INTOP(0x00000ee6)   // 3814 (3814)
0x00000ED6: 0x800D            - O_D_TO_A
0x00000ED8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000EDE: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00000EE4: 0x8005            - O_CALL
0x00000EE6: 0x801A            - O_POP
0x00000EE8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000EEE: 0x800D            - O_D_TO_A
0x00000EF0: 0x8019            - O_SWAPA
0x00000EF2: 0x802A            - O_POP_TO_BASE
0x00000EF4: 0x8029            - O_POP_BASE
0x00000EF6: 0x800C            - O_A_TO_D
0x00000EF8: 0x801C            - O_POP_RETURN
0x00000EFA: 0x802A            - O_POP_TO_BASE
0x00000EFC: 0x8029            - O_POP_BASE
0x00000EFE: 0x801C            - O_POP_RETURN

18: UpReactLevel (0x00000f00)
===============================
0x00000F00: 0x802B            - O_PUSH_BASE
0x00000F02: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000F08: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000F0E: 0x80C1            - O_LOCAL_VAR
0x00000F10: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000F16: 0x8039            - O_ADD
0x00000F18: 0x80C2            - O_SET_LOCAL_VAR
0x00000F1A: 0xC001 0x00000f40 - O_INTOP(0x00000f40)   // 3904 (3904)
0x00000F20: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000F26: 0x80C1            - O_LOCAL_VAR
0x00000F28: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000F2E: 0x8038            - O_GREATER
0x00000F30: 0x802F            - O_IF
0x00000F32: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000F38: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000F3E: 0x80C2            - O_SET_LOCAL_VAR
0x00000F40: 0xC001 0x00000f56 - O_INTOP(0x00000f56)   // 3926 (3926)
0x00000F46: 0x800D            - O_D_TO_A
0x00000F48: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F4E: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00000F54: 0x8005            - O_CALL
0x00000F56: 0x801A            - O_POP
0x00000F58: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F5E: 0x800D            - O_D_TO_A
0x00000F60: 0x8019            - O_SWAPA
0x00000F62: 0x802A            - O_POP_TO_BASE
0x00000F64: 0x8029            - O_POP_BASE
0x00000F66: 0x800C            - O_A_TO_D
0x00000F68: 0x801C            - O_POP_RETURN
0x00000F6A: 0x802A            - O_POP_TO_BASE
0x00000F6C: 0x8029            - O_POP_BASE
0x00000F6E: 0x801C            - O_POP_RETURN

19: DownReactLevel (0x00000f70)
===============================
0x00000F70: 0x802B            - O_PUSH_BASE
0x00000F72: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000F78: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000F7E: 0x80C1            - O_LOCAL_VAR
0x00000F80: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000F86: 0x803A            - O_SUB
0x00000F88: 0x80C2            - O_SET_LOCAL_VAR
0x00000F8A: 0xC001 0x00000fb0 - O_INTOP(0x00000fb0)   // 4016 (4016)
0x00000F90: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000F96: 0x80C1            - O_LOCAL_VAR
0x00000F98: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000F9E: 0x8037            - O_LESS
0x00000FA0: 0x802F            - O_IF
0x00000FA2: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000FA8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000FAE: 0x80C2            - O_SET_LOCAL_VAR
0x00000FB0: 0xC001 0x00000fc6 - O_INTOP(0x00000fc6)   // 4038 (4038)
0x00000FB6: 0x800D            - O_D_TO_A
0x00000FB8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000FBE: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00000FC4: 0x8005            - O_CALL
0x00000FC6: 0x801A            - O_POP
0x00000FC8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000FCE: 0x800D            - O_D_TO_A
0x00000FD0: 0x8019            - O_SWAPA
0x00000FD2: 0x802A            - O_POP_TO_BASE
0x00000FD4: 0x8029            - O_POP_BASE
0x00000FD6: 0x800C            - O_A_TO_D
0x00000FD8: 0x801C            - O_POP_RETURN
0x00000FDA: 0x802A            - O_POP_TO_BASE
0x00000FDC: 0x8029            - O_POP_BASE
0x00000FDE: 0x801C            - O_POP_RETURN

20: Goodbyes (0x00000fe0)
===============================
0x00000FE0: 0x802B            - O_PUSH_BASE
0x00000FE2: 0xC001 0x0000027a - O_INTOP(0x0000027a)   // 634 (634)
0x00000FE8: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x00000FEE: 0xC001 0x00000069 - O_INTOP(0x00000069)   // 105 (105)
0x00000FF4: 0x80B4            - O_RANDOM
0x00000FF6: 0x8105            - O_MESSAGE_STR
0x00000FF8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000FFE: 0x8013            - O_STORE_GLOBAL
0x00001000: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001006: 0x800D            - O_D_TO_A
0x00001008: 0x8019            - O_SWAPA
0x0000100A: 0x802A            - O_POP_TO_BASE
0x0000100C: 0x8029            - O_POP_BASE
0x0000100E: 0x800C            - O_A_TO_D
0x00001010: 0x801C            - O_POP_RETURN
0x00001012: 0x802A            - O_POP_TO_BASE
0x00001014: 0x8029            - O_POP_BASE
0x00001016: 0x801C            - O_POP_RETURN

21: pickup_p_proc (0x00001018)
===============================
0x00001018: 0x802B            - O_PUSH_BASE
0x0000101A: 0xC001 0x000000fb - O_INTOP(0x000000fb)   // 251 (251)
0x00001020: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001026: 0x80C6            - O_SET_GLOBAL_VAR
0x00001028: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000102E: 0x800D            - O_D_TO_A
0x00001030: 0x8019            - O_SWAPA
0x00001032: 0x802A            - O_POP_TO_BASE
0x00001034: 0x8029            - O_POP_BASE
0x00001036: 0x800C            - O_A_TO_D
0x00001038: 0x801C            - O_POP_RETURN
0x0000103A: 0x802A            - O_POP_TO_BASE
0x0000103C: 0x8029            - O_POP_BASE
0x0000103E: 0x801C            - O_POP_RETURN

22: FleeDude (0x00001040)
===============================
0x00001040: 0x802B            - O_PUSH_BASE
0x00001042: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001048: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000104E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001054: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000105A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001060: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001066: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x0000106C: 0x80B4            - O_RANDOM
0x0000106E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001074: 0x8031            - O_STORE
0x00001076: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000107C: 0x8032            - O_FETCH
0x0000107E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001084: 0x8031            - O_STORE
0x00001086: 0xC001 0x0000115e - O_INTOP(0x0000115e)   // 4446 (4446)
0x0000108C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001092: 0x8032            - O_FETCH
0x00001094: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000109A: 0x8033            - O_EQUAL
0x0000109C: 0x8030            - O_WHILE
0x0000109E: 0x80BC            - O_SELF_OBJ
0x000010A0: 0x80D4            - O_TILE_NUM
0x000010A2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000010A8: 0x8032            - O_FETCH
0x000010AA: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000010B0: 0x80D5            - O_TILE_NUM_IN_DIRECTION
0x000010B2: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000010B8: 0x8031            - O_STORE
0x000010BA: 0xC001 0x000010f0 - O_INTOP(0x000010f0)   // 4336 (4336)
0x000010C0: 0x80BF            - O_DUDE_OBJ
0x000010C2: 0x80D4            - O_TILE_NUM
0x000010C4: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000010CA: 0x8032            - O_FETCH
0x000010CC: 0x80D2            - O_TILE_DISTANCE
0x000010CE: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000010D4: 0x8032            - O_FETCH
0x000010D6: 0x8038            - O_GREATER
0x000010D8: 0x802F            - O_IF
0x000010DA: 0x80BF            - O_DUDE_OBJ
0x000010DC: 0x80D4            - O_TILE_NUM
0x000010DE: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000010E4: 0x8032            - O_FETCH
0x000010E6: 0x80D2            - O_TILE_DISTANCE
0x000010E8: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000010EE: 0x8031            - O_STORE
0x000010F0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000010F6: 0x8032            - O_FETCH
0x000010F8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000010FE: 0x8039            - O_ADD
0x00001100: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001106: 0x8031            - O_STORE
0x00001108: 0xC001 0x0000112e - O_INTOP(0x0000112e)   // 4398 (4398)
0x0000110E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001114: 0x8032            - O_FETCH
0x00001116: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x0000111C: 0x8033            - O_EQUAL
0x0000111E: 0x802F            - O_IF
0x00001120: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001126: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000112C: 0x8031            - O_STORE
0x0000112E: 0xC001 0x00001156 - O_INTOP(0x00001156)   // 4438 (4438)
0x00001134: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000113A: 0x8032            - O_FETCH
0x0000113C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001142: 0x8032            - O_FETCH
0x00001144: 0x8033            - O_EQUAL
0x00001146: 0x802F            - O_IF
0x00001148: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000114E: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001154: 0x8031            - O_STORE
0x00001156: 0xC001 0x0000108c - O_INTOP(0x0000108c)   // 4236 (4236)
0x0000115C: 0x8004            - O_JMP
0x0000115E: 0x80BC            - O_SELF_OBJ
0x00001160: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001166: 0x8032            - O_FETCH
0x00001168: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000116E: 0x80CE            - O_ANIMATE_MOVE_OBJ_TO_TILE
0x00001170: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001176: 0x800D            - O_D_TO_A
0x00001178: 0x8019            - O_SWAPA
0x0000117A: 0x802A            - O_POP_TO_BASE
0x0000117C: 0x8029            - O_POP_BASE
0x0000117E: 0x800C            - O_A_TO_D
0x00001180: 0x801C            - O_POP_RETURN
0x00001182: 0x802A            - O_POP_TO_BASE
0x00001184: 0x8029            - O_POP_BASE
0x00001186: 0x801C            - O_POP_RETURN

