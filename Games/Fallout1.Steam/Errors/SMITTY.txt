Fallout script decompiler, version 8.4.6 (sfall edition)
Copyright (C) Anchorite (TeamX), 2005-2009
anchorite2001@yandex.ru
Continued by Nirran, phobos2077, mr.Stalin (2014-2020)
Crossplatformed by alexeevdv (2015)
int2ssl is using Fallout 1 code.
Loading file Games/Fallout1.Steam/scripts/SMITTY.int...
  Read startup code
  Read procedures table
  Read namespace
  Read stringspace
  Read tail of startup code
    Check "Jump to 'start' procedure" / "Jump to end of statup code"
    Check "# of argument to 'start' procedure"
    Extract "Export var" section
    Extract "Set exported var values" section
    Extract "Export procedures" section
    Extract "Global variables" section
  Read procedure's bodies
    Procedure: 0
    Procedure: 1
    Procedure: 2
    Procedure: 3
    Procedure: 4
    Procedure: 5
    Procedure: 6
    Procedure: 7
    Procedure: 8
    Procedure: 9
    Procedure: 10
    Procedure: 11
    Procedure: 12
    Procedure: 13
    Procedure: 14
    Procedure: 15
    Procedure: 16
    Procedure: 17
    Procedure: 18
    Procedure: 19
    Procedure: 20
    Procedure: 21
    Procedure: 22
    Procedure: 23
    Procedure: 24
    Procedure: 25
    Procedure: 26
    Procedure: 27
    Procedure: 28
    Procedure: 29
    Procedure: 30
    Procedure: 31
    Procedure: 32
    Procedure: 33
    Procedure: 34
    Procedure: 35
File Games/Fallout1.Steam/scripts/SMITTY.int loaded successfuly

Decompiling...
  Init definitions
  Processing code
    Intial reducing
    Building execution tree
        Procedure: 0
        Procedure: 1
        Procedure: 2
        Procedure: 3
        Procedure: 4
        Procedure: 5
        Procedure: 6
        Procedure: 7
        Procedure: 8
        Procedure: 9
        Procedure: 10
        Procedure: 11
        Procedure: 12
        Procedure: 13
        Procedure: 14
        Procedure: 15
        Procedure: 16
        Procedure: 17
        Procedure: 18
        Procedure: 19
        Procedure: 20
        Procedure: 21
        Procedure: 22
        Procedure: 23
        Procedure: 24
        Procedure: 25
        Procedure: 26
        Procedure: 27
        Procedure: 28
        Procedure: 29
        Procedure: 30
        Procedure: 31
        Procedure: 32
        Procedure: 33
        Procedure: 34
        Procedure: 35
    Extracting and reducing conditions
    Setting borders of blocks
        Procedure: 0
        Procedure: 1
Error: Conditional expression left in stack

============== Procedures table ==================

======== Procedure 0 ========
Name offset:       0x00000006
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000005D8
Number of args:    0x00000000  // 0

======== Procedure 1 ========
Name offset:       0x00000018
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000005D8
Number of args:    0x00000000  // 0

======== Procedure 2 ========
Name offset:       0x00000020
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000006B2
Number of args:    0x00000000  // 0

======== Procedure 3 ========
Name offset:       0x00000032
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000070E
Number of args:    0x00000000  // 0

======== Procedure 4 ========
Name offset:       0x00000048
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000076A
Number of args:    0x00000000  // 0

======== Procedure 5 ========
Name offset:       0x00000056
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000009E6
Number of args:    0x00000000  // 0

======== Procedure 6 ========
Name offset:       0x00000066
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000A32
Number of args:    0x00000000  // 0

======== Procedure 7 ========
Name offset:       0x00000078
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000BB4
Number of args:    0x00000000  // 0

======== Procedure 8 ========
Name offset:       0x00000088
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000BDC
Number of args:    0x00000000  // 0

======== Procedure 9 ========
Name offset:       0x00000094
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000D18
Number of args:    0x00000000  // 0

======== Procedure 10 ========
Name offset:       0x000000A0
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000D58
Number of args:    0x00000000  // 0

======== Procedure 11 ========
Name offset:       0x000000AC
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000DA6
Number of args:    0x00000000  // 0

======== Procedure 12 ========
Name offset:       0x000000B8
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000E38
Number of args:    0x00000000  // 0

======== Procedure 13 ========
Name offset:       0x000000C4
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000E74
Number of args:    0x00000000  // 0

======== Procedure 14 ========
Name offset:       0x000000D0
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000EA2
Number of args:    0x00000000  // 0

======== Procedure 15 ========
Name offset:       0x000000DC
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000EE2
Number of args:    0x00000000  // 0

======== Procedure 16 ========
Name offset:       0x000000E8
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000F22
Number of args:    0x00000000  // 0

======== Procedure 17 ========
Name offset:       0x000000F4
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000F62
Number of args:    0x00000000  // 0

======== Procedure 18 ========
Name offset:       0x00000100
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000FDA
Number of args:    0x00000000  // 0

======== Procedure 19 ========
Name offset:       0x0000010C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001008
Number of args:    0x00000000  // 0

======== Procedure 20 ========
Name offset:       0x00000118
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000106E
Number of args:    0x00000000  // 0

======== Procedure 21 ========
Name offset:       0x00000124
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000010B0
Number of args:    0x00000000  // 0

======== Procedure 22 ========
Name offset:       0x00000130
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000011DA
Number of args:    0x00000000  // 0

======== Procedure 23 ========
Name offset:       0x0000013C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001208
Number of args:    0x00000000  // 0

======== Procedure 24 ========
Name offset:       0x00000168
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001222
Number of args:    0x00000000  // 0

======== Procedure 25 ========
Name offset:       0x00000178
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000014B4
Number of args:    0x00000000  // 0

======== Procedure 26 ========
Name offset:       0x00000188
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001538
Number of args:    0x00000000  // 0

======== Procedure 27 ========
Name offset:       0x00000198
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000015D4
Number of args:    0x00000000  // 0

======== Procedure 28 ========
Name offset:       0x000001A2
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000161E
Number of args:    0x00000000  // 0

======== Procedure 29 ========
Name offset:       0x000001AE
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001668
Number of args:    0x00000000  // 0

======== Procedure 30 ========
Name offset:       0x000001BC
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000169E
Number of args:    0x00000000  // 0

======== Procedure 31 ========
Name offset:       0x000001C8
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000016D4
Number of args:    0x00000000  // 0

======== Procedure 32 ========
Name offset:       0x000001D6
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000171E
Number of args:    0x00000000  // 0

======== Procedure 33 ========
Name offset:       0x000001E6
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001768
Number of args:    0x00000000  // 0

======== Procedure 34 ========
Name offset:       0x000001F6
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000017D8
Number of args:    0x00000000  // 0

======== Procedure 35 ========
Name offset:       0x00000208
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001848
Number of args:    0x00000000  // 0



============== Namespace ==================
0x00000006: ".............."
0x00000018: "Start"
0x00000020: "look_at_p_proc"
0x00000032: "description_p_proc"
0x00000048: "talk_p_proc"
0x00000056: "damage_p_proc"
0x00000066: "destroy_p_proc"
0x00000078: "pickup_p_proc"
0x00000088: "Smitty01"
0x00000094: "Smitty02"
0x000000A0: "Smitty03"
0x000000AC: "Smitty04"
0x000000B8: "Smitty05"
0x000000C4: "Smitty06"
0x000000D0: "Smitty07"
0x000000DC: "Smitty08"
0x000000E8: "Smitty09"
0x000000F4: "Smitty10"
0x00000100: "Smitty11"
0x0000010C: "Smitty12"
0x00000118: "Smitty14"
0x00000124: "Smitty14a"
0x00000130: "Smitty15"
0x0000013C: "SmittyEnd"
0x00000148: "Initialize"
0x00000156: "DisplayMessage"
0x00000168: "get_reaction"
0x00000178: "ReactToLevel"
0x00000188: "LevelToReact"
0x00000198: "UpReact"
0x000001A2: "DownReact"
0x000001AE: "BottomReact"
0x000001BC: "TopReact"
0x000001C8: "BigUpReact"
0x000001D6: "BigDownReact"
0x000001E6: "UpReactLevel"
0x000001F6: "DownReactLevel"
0x00000208: "Goodbyes"
0x00000214: "exit_line"
==================
39 item(s)



============== Stringspace ==================
Empty


============== Global variables values ==================
0: O_INTOP(0x00000001)   // 1 (1)
1: O_INTOP(0x00000064)   // 100 (100)
2: O_INTOP(0x00000000)   // 0 (0)


============== Exported variables ==================
Not found


============== Procedures ==================

0: .............. (0x000005d8)
===============================

1: Start (0x000005d8)
===============================
0x000005D8: 0x802B            - O_PUSH_BASE
0x000005DA: 0xC001 0x0000069a - O_INTOP(0x0000069a)   // 1690 (1690)
0x000005E0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000005E6: 0x8012            - O_FETCH_GLOBAL
0x000005E8: 0x802F            - O_IF
0x000005EA: 0xC001 0x00000618 - O_INTOP(0x00000618)   // 1560 (1560)
0x000005F0: 0x80BC            - O_SELF_OBJ
0x000005F2: 0xC001 0x00000029 - O_INTOP(0x00000029)   // 41 (41)
0x000005F8: 0x80BA            - O_OBJ_IS_CARRYING_OBJ_PID
0x000005FA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000600: 0x8033            - O_EQUAL
0x00000602: 0x802F            - O_IF
0x00000604: 0x80BC            - O_SELF_OBJ
0x00000606: 0xC001 0x000001f4 - O_INTOP(0x000001f4)   // 500 (500)
0x0000060C: 0xC001 0x000002ee - O_INTOP(0x000002ee)   // 750 (750)
0x00000612: 0x80B4            - O_RANDOM
0x00000614: 0x8139            - O_ITEM_CAPS_ADJUST
0x00000616: 0x801A            - O_POP
0x00000618: 0xC001 0x00000660 - O_INTOP(0x00000660)   // 1632 (1632)
0x0000061E: 0xC001 0x00000265 - O_INTOP(0x00000265)   // 613 (613)
0x00000624: 0x80C5            - O_GLOBAL_VAR
0x00000626: 0xC001 0x0000238f - O_INTOP(0x0000238f)   // 9103 (9103)
0x0000062C: 0x8033            - O_EQUAL
0x0000062E: 0xC001 0x00000265 - O_INTOP(0x00000265)   // 613 (613)
0x00000634: 0x80C5            - O_GLOBAL_VAR
0x00000636: 0xC001 0x0000238e - O_INTOP(0x0000238e)   // 9102 (9102)
0x0000063C: 0x8033            - O_EQUAL
0x0000063E: 0x803F            - O_OR
0x00000640: 0x802F            - O_IF
0x00000642: 0x80BC            - O_SELF_OBJ
0x00000644: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000064A: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000650: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000656: 0x8102            - O_CRITTER_ADD_TRAIT
0x00000658: 0xC001 0x00000676 - O_INTOP(0x00000676)   // 1654 (1654)
0x0000065E: 0x8004            - O_JMP
0x00000660: 0x80BC            - O_SELF_OBJ
0x00000662: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000668: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x0000066E: 0xC001 0x00000031 - O_INTOP(0x00000031)   // 49 (49)
0x00000674: 0x8102            - O_CRITTER_ADD_TRAIT
0x00000676: 0x80BC            - O_SELF_OBJ
0x00000678: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000067E: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000684: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x0000068A: 0x8102            - O_CRITTER_ADD_TRAIT
0x0000068C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000692: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000698: 0x8013            - O_STORE_GLOBAL
0x0000069A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000006A0: 0x800D            - O_D_TO_A
0x000006A2: 0x8019            - O_SWAPA
0x000006A4: 0x802A            - O_POP_TO_BASE
0x000006A6: 0x8029            - O_POP_BASE
0x000006A8: 0x800C            - O_A_TO_D
0x000006AA: 0x801C            - O_POP_RETURN
0x000006AC: 0x802A            - O_POP_TO_BASE
0x000006AE: 0x8029            - O_POP_BASE
0x000006B0: 0x801C            - O_POP_RETURN

2: look_at_p_proc (0x000006b2)
===============================
0x000006B2: 0x802B            - O_PUSH_BASE
0x000006B4: 0x80B9            - O_SCRIPT_OVERRIDES
0x000006B6: 0xC001 0x000006e6 - O_INTOP(0x000006e6)   // 1766 (1766)
0x000006BC: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000006C2: 0x80C1            - O_LOCAL_VAR
0x000006C4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000006CA: 0x8033            - O_EQUAL
0x000006CC: 0x802F            - O_IF
0x000006CE: 0xC001 0x000000fa - O_INTOP(0x000000fa)   // 250 (250)
0x000006D4: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x000006DA: 0x8105            - O_MESSAGE_STR
0x000006DC: 0x80B8            - O_DISPLAY_MSG
0x000006DE: 0xC001 0x000006f6 - O_INTOP(0x000006f6)   // 1782 (1782)
0x000006E4: 0x8004            - O_JMP
0x000006E6: 0xC001 0x000000fa - O_INTOP(0x000000fa)   // 250 (250)
0x000006EC: 0xC001 0x00000065 - O_INTOP(0x00000065)   // 101 (101)
0x000006F2: 0x8105            - O_MESSAGE_STR
0x000006F4: 0x80B8            - O_DISPLAY_MSG
0x000006F6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000006FC: 0x800D            - O_D_TO_A
0x000006FE: 0x8019            - O_SWAPA
0x00000700: 0x802A            - O_POP_TO_BASE
0x00000702: 0x8029            - O_POP_BASE
0x00000704: 0x800C            - O_A_TO_D
0x00000706: 0x801C            - O_POP_RETURN
0x00000708: 0x802A            - O_POP_TO_BASE
0x0000070A: 0x8029            - O_POP_BASE
0x0000070C: 0x801C            - O_POP_RETURN

3: description_p_proc (0x0000070e)
===============================
0x0000070E: 0x802B            - O_PUSH_BASE
0x00000710: 0x80B9            - O_SCRIPT_OVERRIDES
0x00000712: 0xC001 0x00000742 - O_INTOP(0x00000742)   // 1858 (1858)
0x00000718: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000071E: 0x80C1            - O_LOCAL_VAR
0x00000720: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000726: 0x8033            - O_EQUAL
0x00000728: 0x802F            - O_IF
0x0000072A: 0xC001 0x000000fa - O_INTOP(0x000000fa)   // 250 (250)
0x00000730: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x00000736: 0x8105            - O_MESSAGE_STR
0x00000738: 0x80B8            - O_DISPLAY_MSG
0x0000073A: 0xC001 0x00000752 - O_INTOP(0x00000752)   // 1874 (1874)
0x00000740: 0x8004            - O_JMP
0x00000742: 0xC001 0x000000fa - O_INTOP(0x000000fa)   // 250 (250)
0x00000748: 0xC001 0x00000065 - O_INTOP(0x00000065)   // 101 (101)
0x0000074E: 0x8105            - O_MESSAGE_STR
0x00000750: 0x80B8            - O_DISPLAY_MSG
0x00000752: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000758: 0x800D            - O_D_TO_A
0x0000075A: 0x8019            - O_SWAPA
0x0000075C: 0x802A            - O_POP_TO_BASE
0x0000075E: 0x8029            - O_POP_BASE
0x00000760: 0x800C            - O_A_TO_D
0x00000762: 0x801C            - O_POP_RETURN
0x00000764: 0x802A            - O_POP_TO_BASE
0x00000766: 0x8029            - O_POP_BASE
0x00000768: 0x801C            - O_POP_RETURN

4: talk_p_proc (0x0000076a)
===============================
0x0000076A: 0x802B            - O_PUSH_BASE
0x0000076C: 0xC001 0x000007ac - O_INTOP(0x000007ac)   // 1964 (1964)
0x00000772: 0xC001 0x000000fb - O_INTOP(0x000000fb)   // 251 (251)
0x00000778: 0x80C5            - O_GLOBAL_VAR
0x0000077A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000780: 0x8033            - O_EQUAL
0x00000782: 0x802F            - O_IF
0x00000784: 0x80BC            - O_SELF_OBJ
0x00000786: 0xC001 0x0000029d - O_INTOP(0x0000029d)   // 669 (669)
0x0000078C: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x00000792: 0xC001 0x00000069 - O_INTOP(0x00000069)   // 105 (105)
0x00000798: 0x80B4            - O_RANDOM
0x0000079A: 0x8105            - O_MESSAGE_STR
0x0000079C: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000007A2: 0x810A            - O_FLOAT_MSG
0x000007A4: 0xC001 0x000009ce - O_INTOP(0x000009ce)   // 2510 (2510)
0x000007AA: 0x8004            - O_JMP
0x000007AC: 0xC001 0x000007f8 - O_INTOP(0x000007f8)   // 2040 (2040)
0x000007B2: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000007B8: 0x80C1            - O_LOCAL_VAR
0x000007BA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000007C0: 0x8033            - O_EQUAL
0x000007C2: 0x80BF            - O_DUDE_OBJ
0x000007C4: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000007CA: 0x80CA            - O_GET_CRITTER_STAT
0x000007CC: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000007D2: 0x8037            - O_LESS
0x000007D4: 0x803E            - O_AND
0x000007D6: 0x802F            - O_IF
0x000007D8: 0x80BC            - O_SELF_OBJ
0x000007DA: 0xC001 0x000000fa - O_INTOP(0x000000fa)   // 250 (250)
0x000007E0: 0xC001 0x00000075 - O_INTOP(0x00000075)   // 117 (117)
0x000007E6: 0x8105            - O_MESSAGE_STR
0x000007E8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000007EE: 0x810A            - O_FLOAT_MSG
0x000007F0: 0xC001 0x000009ce - O_INTOP(0x000009ce)   // 2510 (2510)
0x000007F6: 0x8004            - O_JMP
0x000007F8: 0xC001 0x00000830 - O_INTOP(0x00000830)   // 2096 (2096)
0x000007FE: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000804: 0x80C1            - O_LOCAL_VAR
0x00000806: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x0000080C: 0x8033            - O_EQUAL
0x0000080E: 0x802F            - O_IF
0x00000810: 0x80BC            - O_SELF_OBJ
0x00000812: 0xC001 0x000000fa - O_INTOP(0x000000fa)   // 250 (250)
0x00000818: 0xC001 0x00000083 - O_INTOP(0x00000083)   // 131 (131)
0x0000081E: 0x8105            - O_MESSAGE_STR
0x00000820: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000826: 0x810A            - O_FLOAT_MSG
0x00000828: 0xC001 0x000009ce - O_INTOP(0x000009ce)   // 2510 (2510)
0x0000082E: 0x8004            - O_JMP
0x00000830: 0xC001 0x00000846 - O_INTOP(0x00000846)   // 2118 (2118)
0x00000836: 0x800D            - O_D_TO_A
0x00000838: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000083E: 0xC001 0x00000018 - O_INTOP(0x00000018)   // 24 (24)
0x00000844: 0x8005            - O_CALL
0x00000846: 0x801A            - O_POP
0x00000848: 0xC001 0x000000fa - O_INTOP(0x000000fa)   // 250 (250)
0x0000084E: 0x80BC            - O_SELF_OBJ
0x00000850: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000856: 0x8046            - O_NEGATE
0x00000858: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000085E: 0x8046            - O_NEGATE
0x00000860: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000866: 0x8046            - O_NEGATE
0x00000868: 0x80DE            - O_START_GDIALOG
0x0000086A: 0x811C            - O_GSAY_START
0x0000086C: 0xC001 0x000008a4 - O_INTOP(0x000008a4)   // 2212 (2212)
0x00000872: 0xC001 0x0000008a - O_INTOP(0x0000008a)   // 138 (138)
0x00000878: 0x80C5            - O_GLOBAL_VAR
0x0000087A: 0xC001 0x00002457 - O_INTOP(0x00002457)   // 9303 (9303)
0x00000880: 0x8033            - O_EQUAL
0x00000882: 0x802F            - O_IF
0x00000884: 0xC001 0x0000089a - O_INTOP(0x0000089a)   // 2202 (2202)
0x0000088A: 0x800D            - O_D_TO_A
0x0000088C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000892: 0xC001 0x00000012 - O_INTOP(0x00000012)   // 18 (18)
0x00000898: 0x8005            - O_CALL
0x0000089A: 0x801A            - O_POP
0x0000089C: 0xC001 0x000009ca - O_INTOP(0x000009ca)   // 2506 (2506)
0x000008A2: 0x8004            - O_JMP
0x000008A4: 0xC001 0x0000095e - O_INTOP(0x0000095e)   // 2398 (2398)
0x000008AA: 0xC001 0x0000008a - O_INTOP(0x0000008a)   // 138 (138)
0x000008B0: 0x80C5            - O_GLOBAL_VAR
0x000008B2: 0xC001 0x00002458 - O_INTOP(0x00002458)   // 9304 (9304)
0x000008B8: 0x8033            - O_EQUAL
0x000008BA: 0x802F            - O_IF
0x000008BC: 0xC001 0x000008f4 - O_INTOP(0x000008f4)   // 2292 (2292)
0x000008C2: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000008C8: 0x80C1            - O_LOCAL_VAR
0x000008CA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000008D0: 0x8033            - O_EQUAL
0x000008D2: 0x802F            - O_IF
0x000008D4: 0xC001 0x000008ea - O_INTOP(0x000008ea)   // 2282 (2282)
0x000008DA: 0x800D            - O_D_TO_A
0x000008DC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000008E2: 0xC001 0x00000013 - O_INTOP(0x00000013)   // 19 (19)
0x000008E8: 0x8005            - O_CALL
0x000008EA: 0x801A            - O_POP
0x000008EC: 0xC001 0x00000956 - O_INTOP(0x00000956)   // 2390 (2390)
0x000008F2: 0x8004            - O_JMP
0x000008F4: 0xC001 0x00000956 - O_INTOP(0x00000956)   // 2390 (2390)
0x000008FA: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000900: 0x80C1            - O_LOCAL_VAR
0x00000902: 0xC001 0x0000245b - O_INTOP(0x0000245b)   // 9307 (9307)
0x00000908: 0x8033            - O_EQUAL
0x0000090A: 0x802F            - O_IF
0x0000090C: 0xC001 0x0000093e - O_INTOP(0x0000093e)   // 2366 (2366)
0x00000912: 0x80BF            - O_DUDE_OBJ
0x00000914: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x0000091A: 0x80BA            - O_OBJ_IS_CARRYING_OBJ_PID
0x0000091C: 0x802F            - O_IF
0x0000091E: 0xC001 0x00000934 - O_INTOP(0x00000934)   // 2356 (2356)
0x00000924: 0x800D            - O_D_TO_A
0x00000926: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000092C: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x00000932: 0x8005            - O_CALL
0x00000934: 0x801A            - O_POP
0x00000936: 0xC001 0x00000956 - O_INTOP(0x00000956)   // 2390 (2390)
0x0000093C: 0x8004            - O_JMP
0x0000093E: 0xC001 0x00000954 - O_INTOP(0x00000954)   // 2388 (2388)
0x00000944: 0x800D            - O_D_TO_A
0x00000946: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000094C: 0xC001 0x00000016 - O_INTOP(0x00000016)   // 22 (22)
0x00000952: 0x8005            - O_CALL
0x00000954: 0x801A            - O_POP
0x00000956: 0xC001 0x000009ca - O_INTOP(0x000009ca)   // 2506 (2506)
0x0000095C: 0x8004            - O_JMP
0x0000095E: 0xC001 0x000009a4 - O_INTOP(0x000009a4)   // 2468 (2468)
0x00000964: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000096A: 0x80C1            - O_LOCAL_VAR
0x0000096C: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000972: 0x8037            - O_LESS
0x00000974: 0x802F            - O_IF
0x00000976: 0xC001 0x00000067 - O_INTOP(0x00000067)   // 103 (103)
0x0000097C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000982: 0x8013            - O_STORE_GLOBAL
0x00000984: 0xC001 0x0000099a - O_INTOP(0x0000099a)   // 2458 (2458)
0x0000098A: 0x800D            - O_D_TO_A
0x0000098C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000992: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x00000998: 0x8005            - O_CALL
0x0000099A: 0x801A            - O_POP
0x0000099C: 0xC001 0x000009ca - O_INTOP(0x000009ca)   // 2506 (2506)
0x000009A2: 0x8004            - O_JMP
0x000009A4: 0xC001 0x00000066 - O_INTOP(0x00000066)   // 102 (102)
0x000009AA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000009B0: 0x8013            - O_STORE_GLOBAL
0x000009B2: 0xC001 0x000009c8 - O_INTOP(0x000009c8)   // 2504 (2504)
0x000009B8: 0x800D            - O_D_TO_A
0x000009BA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000009C0: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x000009C6: 0x8005            - O_CALL
0x000009C8: 0x801A            - O_POP
0x000009CA: 0x811D            - O_GSAY_END
0x000009CC: 0x80DF            - O_END_DIALOGUE
0x000009CE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000009D4: 0x800D            - O_D_TO_A
0x000009D6: 0x8019            - O_SWAPA
0x000009D8: 0x802A            - O_POP_TO_BASE
0x000009DA: 0x8029            - O_POP_BASE
0x000009DC: 0x800C            - O_A_TO_D
0x000009DE: 0x801C            - O_POP_RETURN
0x000009E0: 0x802A            - O_POP_TO_BASE
0x000009E2: 0x8029            - O_POP_BASE
0x000009E4: 0x801C            - O_POP_RETURN

5: damage_p_proc (0x000009e6)
===============================
0x000009E6: 0x802B            - O_PUSH_BASE
0x000009E8: 0xC001 0x00000a1a - O_INTOP(0x00000a1a)   // 2586 (2586)
0x000009EE: 0x80BD            - O_SOURCE_OBJ
0x000009F0: 0x80BF            - O_DUDE_OBJ
0x000009F2: 0x8033            - O_EQUAL
0x000009F4: 0x802F            - O_IF
0x000009F6: 0xC001 0x000000fb - O_INTOP(0x000000fb)   // 251 (251)
0x000009FC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000A02: 0x80C6            - O_SET_GLOBAL_VAR
0x00000A04: 0x80BC            - O_SELF_OBJ
0x00000A06: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000A0C: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000A12: 0xC001 0x00000031 - O_INTOP(0x00000031)   // 49 (49)
0x00000A18: 0x8102            - O_CRITTER_ADD_TRAIT
0x00000A1A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A20: 0x800D            - O_D_TO_A
0x00000A22: 0x8019            - O_SWAPA
0x00000A24: 0x802A            - O_POP_TO_BASE
0x00000A26: 0x8029            - O_POP_BASE
0x00000A28: 0x800C            - O_A_TO_D
0x00000A2A: 0x801C            - O_POP_RETURN
0x00000A2C: 0x802A            - O_POP_TO_BASE
0x00000A2E: 0x8029            - O_POP_BASE
0x00000A30: 0x801C            - O_POP_RETURN

6: destroy_p_proc (0x00000a32)
===============================
0x00000A32: 0x802B            - O_PUSH_BASE
0x00000A34: 0xC001 0x00000b9c - O_INTOP(0x00000b9c)   // 2972 (2972)
0x00000A3A: 0x80BD            - O_SOURCE_OBJ
0x00000A3C: 0x80BF            - O_DUDE_OBJ
0x00000A3E: 0x8033            - O_EQUAL
0x00000A40: 0x802F            - O_IF
0x00000A42: 0xC001 0x000000fb - O_INTOP(0x000000fb)   // 251 (251)
0x00000A48: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000A4E: 0x80C6            - O_SET_GLOBAL_VAR
0x00000A50: 0xC001 0x00000b86 - O_INTOP(0x00000b86)   // 2950 (2950)
0x00000A56: 0x80BD            - O_SOURCE_OBJ
0x00000A58: 0x80BF            - O_DUDE_OBJ
0x00000A5A: 0x8033            - O_EQUAL
0x00000A5C: 0x802F            - O_IF
0x00000A5E: 0xC001 0x00000aca - O_INTOP(0x00000aca)   // 2762 (2762)
0x00000A64: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00000A6A: 0x80C5            - O_GLOBAL_VAR
0x00000A6C: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000A72: 0x80C5            - O_GLOBAL_VAR
0x00000A74: 0x8039            - O_ADD
0x00000A76: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00000A7C: 0x8036            - O_GREATER_EQUAL
0x00000A7E: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000A84: 0x80C5            - O_GLOBAL_VAR
0x00000A86: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000A8C: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00000A92: 0x80C5            - O_GLOBAL_VAR
0x00000A94: 0x803B            - O_MUL
0x00000A96: 0x8038            - O_GREATER
0x00000A98: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x00000A9E: 0x80C5            - O_GLOBAL_VAR
0x00000AA0: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000AA6: 0x8033            - O_EQUAL
0x00000AA8: 0x803F            - O_OR
0x00000AAA: 0x803E            - O_AND
0x00000AAC: 0x802F            - O_IF
0x00000AAE: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x00000AB4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000ABA: 0x80C6            - O_SET_GLOBAL_VAR
0x00000ABC: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x00000AC2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000AC8: 0x80C6            - O_SET_GLOBAL_VAR
0x00000ACA: 0xC001 0x00000b36 - O_INTOP(0x00000b36)   // 2870 (2870)
0x00000AD0: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00000AD6: 0x80C5            - O_GLOBAL_VAR
0x00000AD8: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000ADE: 0x80C5            - O_GLOBAL_VAR
0x00000AE0: 0x8039            - O_ADD
0x00000AE2: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00000AE8: 0x8036            - O_GREATER_EQUAL
0x00000AEA: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00000AF0: 0x80C5            - O_GLOBAL_VAR
0x00000AF2: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000AF8: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000AFE: 0x80C5            - O_GLOBAL_VAR
0x00000B00: 0x803B            - O_MUL
0x00000B02: 0x8038            - O_GREATER
0x00000B04: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x00000B0A: 0x80C5            - O_GLOBAL_VAR
0x00000B0C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000B12: 0x8033            - O_EQUAL
0x00000B14: 0x803F            - O_OR
0x00000B16: 0x803E            - O_AND
0x00000B18: 0x802F            - O_IF
0x00000B1A: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x00000B20: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000B26: 0x80C6            - O_SET_GLOBAL_VAR
0x00000B28: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x00000B2E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000B34: 0x80C6            - O_SET_GLOBAL_VAR
0x00000B36: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000B3C: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000B42: 0x80C5            - O_GLOBAL_VAR
0x00000B44: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000B4A: 0x8039            - O_ADD
0x00000B4C: 0x80C6            - O_SET_GLOBAL_VAR
0x00000B4E: 0xC001 0x00000b86 - O_INTOP(0x00000b86)   // 2950 (2950)
0x00000B54: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00000B5A: 0x80C5            - O_GLOBAL_VAR
0x00000B5C: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000B62: 0x803D            - O_MOD
0x00000B64: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000B6A: 0x8033            - O_EQUAL
0x00000B6C: 0x802F            - O_IF
0x00000B6E: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00000B74: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00000B7A: 0x80C5            - O_GLOBAL_VAR
0x00000B7C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000B82: 0x803A            - O_SUB
0x00000B84: 0x80C6            - O_SET_GLOBAL_VAR
0x00000B86: 0x80BC            - O_SELF_OBJ
0x00000B88: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000B8E: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000B94: 0xC001 0x00000031 - O_INTOP(0x00000031)   // 49 (49)
0x00000B9A: 0x8102            - O_CRITTER_ADD_TRAIT
0x00000B9C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000BA2: 0x800D            - O_D_TO_A
0x00000BA4: 0x8019            - O_SWAPA
0x00000BA6: 0x802A            - O_POP_TO_BASE
0x00000BA8: 0x8029            - O_POP_BASE
0x00000BAA: 0x800C            - O_A_TO_D
0x00000BAC: 0x801C            - O_POP_RETURN
0x00000BAE: 0x802A            - O_POP_TO_BASE
0x00000BB0: 0x8029            - O_POP_BASE
0x00000BB2: 0x801C            - O_POP_RETURN

7: pickup_p_proc (0x00000bb4)
===============================
0x00000BB4: 0x802B            - O_PUSH_BASE
0x00000BB6: 0xC001 0x000000fb - O_INTOP(0x000000fb)   // 251 (251)
0x00000BBC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000BC2: 0x80C6            - O_SET_GLOBAL_VAR
0x00000BC4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000BCA: 0x800D            - O_D_TO_A
0x00000BCC: 0x8019            - O_SWAPA
0x00000BCE: 0x802A            - O_POP_TO_BASE
0x00000BD0: 0x8029            - O_POP_BASE
0x00000BD2: 0x800C            - O_A_TO_D
0x00000BD4: 0x801C            - O_POP_RETURN
0x00000BD6: 0x802A            - O_POP_TO_BASE
0x00000BD8: 0x8029            - O_POP_BASE
0x00000BDA: 0x801C            - O_POP_RETURN

8: Smitty01 (0x00000bdc)
===============================
0x00000BDC: 0x802B            - O_PUSH_BASE
0x00000BDE: 0xC001 0x000000fa - O_INTOP(0x000000fa)   // 250 (250)
0x00000BE4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000BEA: 0x8012            - O_FETCH_GLOBAL
0x00000BEC: 0x811E            - O_GSAY_REPLY
0x00000BEE: 0xC001 0x00000070 - O_INTOP(0x00000070)   // 112 (112)
0x00000BF4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000BFA: 0x8013            - O_STORE_GLOBAL
0x00000BFC: 0xC001 0x00000c34 - O_INTOP(0x00000c34)   // 3124 (3124)
0x00000C02: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000C08: 0x80C1            - O_LOCAL_VAR
0x00000C0A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000C10: 0x8033            - O_EQUAL
0x00000C12: 0x802F            - O_IF
0x00000C14: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000C1A: 0xC001 0x000000fa - O_INTOP(0x000000fa)   // 250 (250)
0x00000C20: 0xC001 0x00000068 - O_INTOP(0x00000068)   // 104 (104)
0x00000C26: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00000C2C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000C32: 0x8121            - O_GIQ_OPTION
0x00000C34: 0xC001 0x00000c7e - O_INTOP(0x00000c7e)   // 3198 (3198)
0x00000C3A: 0xC001 0x0000008a - O_INTOP(0x0000008a)   // 138 (138)
0x00000C40: 0x80C5            - O_GLOBAL_VAR
0x00000C42: 0xC001 0x00002457 - O_INTOP(0x00002457)   // 9303 (9303)
0x00000C48: 0x8037            - O_LESS
0x00000C4A: 0xC001 0x0000008a - O_INTOP(0x0000008a)   // 138 (138)
0x00000C50: 0x80C5            - O_GLOBAL_VAR
0x00000C52: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000C58: 0x8038            - O_GREATER
0x00000C5A: 0x803E            - O_AND
0x00000C5C: 0x802F            - O_IF
0x00000C5E: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000C64: 0xC001 0x000000fa - O_INTOP(0x000000fa)   // 250 (250)
0x00000C6A: 0xC001 0x00000069 - O_INTOP(0x00000069)   // 105 (105)
0x00000C70: 0xC001 0x00000011 - O_INTOP(0x00000011)   // 17 (17)
0x00000C76: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000C7C: 0x8121            - O_GIQ_OPTION
0x00000C7E: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000C84: 0xC001 0x000000fa - O_INTOP(0x000000fa)   // 250 (250)
0x00000C8A: 0xC001 0x0000006a - O_INTOP(0x0000006a)   // 106 (106)
0x00000C90: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x00000C96: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000C9C: 0x8121            - O_GIQ_OPTION
0x00000C9E: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000CA4: 0xC001 0x000000fa - O_INTOP(0x000000fa)   // 250 (250)
0x00000CAA: 0xC001 0x0000006b - O_INTOP(0x0000006b)   // 107 (107)
0x00000CB0: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00000CB6: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000CBC: 0x8121            - O_GIQ_OPTION
0x00000CBE: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000CC4: 0xC001 0x000000fa - O_INTOP(0x000000fa)   // 250 (250)
0x00000CCA: 0xC001 0x0000006c - O_INTOP(0x0000006c)   // 108 (108)
0x00000CD0: 0xC001 0x0000000d - O_INTOP(0x0000000d)   // 13 (13)
0x00000CD6: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000CDC: 0x8121            - O_GIQ_OPTION
0x00000CDE: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000CE4: 0x8046            - O_NEGATE
0x00000CE6: 0xC001 0x000000fa - O_INTOP(0x000000fa)   // 250 (250)
0x00000CEC: 0xC001 0x0000006d - O_INTOP(0x0000006d)   // 109 (109)
0x00000CF2: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00000CF8: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000CFE: 0x8121            - O_GIQ_OPTION
0x00000D00: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D06: 0x800D            - O_D_TO_A
0x00000D08: 0x8019            - O_SWAPA
0x00000D0A: 0x802A            - O_POP_TO_BASE
0x00000D0C: 0x8029            - O_POP_BASE
0x00000D0E: 0x800C            - O_A_TO_D
0x00000D10: 0x801C            - O_POP_RETURN
0x00000D12: 0x802A            - O_POP_TO_BASE
0x00000D14: 0x8029            - O_POP_BASE
0x00000D16: 0x801C            - O_POP_RETURN

9: Smitty02 (0x00000d18)
===============================
0x00000D18: 0x802B            - O_PUSH_BASE
0x00000D1A: 0xC001 0x0000006e - O_INTOP(0x0000006e)   // 110 (110)
0x00000D20: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000D26: 0x8013            - O_STORE_GLOBAL
0x00000D28: 0xC001 0x00000d3e - O_INTOP(0x00000d3e)   // 3390 (3390)
0x00000D2E: 0x800D            - O_D_TO_A
0x00000D30: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D36: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x00000D3C: 0x8005            - O_CALL
0x00000D3E: 0x801A            - O_POP
0x00000D40: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D46: 0x800D            - O_D_TO_A
0x00000D48: 0x8019            - O_SWAPA
0x00000D4A: 0x802A            - O_POP_TO_BASE
0x00000D4C: 0x8029            - O_POP_BASE
0x00000D4E: 0x800C            - O_A_TO_D
0x00000D50: 0x801C            - O_POP_RETURN
0x00000D52: 0x802A            - O_POP_TO_BASE
0x00000D54: 0x8029            - O_POP_BASE
0x00000D56: 0x801C            - O_POP_RETURN

10: Smitty03 (0x00000d58)
===============================
0x00000D58: 0x802B            - O_PUSH_BASE
0x00000D5A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000D60: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000D66: 0x80C2            - O_SET_LOCAL_VAR
0x00000D68: 0xC001 0x0000006f - O_INTOP(0x0000006f)   // 111 (111)
0x00000D6E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000D74: 0x8013            - O_STORE_GLOBAL
0x00000D76: 0xC001 0x00000d8c - O_INTOP(0x00000d8c)   // 3468 (3468)
0x00000D7C: 0x800D            - O_D_TO_A
0x00000D7E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D84: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x00000D8A: 0x8005            - O_CALL
0x00000D8C: 0x801A            - O_POP
0x00000D8E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D94: 0x800D            - O_D_TO_A
0x00000D96: 0x8019            - O_SWAPA
0x00000D98: 0x802A            - O_POP_TO_BASE
0x00000D9A: 0x8029            - O_POP_BASE
0x00000D9C: 0x800C            - O_A_TO_D
0x00000D9E: 0x801C            - O_POP_RETURN
0x00000DA0: 0x802A            - O_POP_TO_BASE
0x00000DA2: 0x8029            - O_POP_BASE
0x00000DA4: 0x801C            - O_POP_RETURN

11: Smitty04 (0x00000da6)
===============================
0x00000DA6: 0x802B            - O_PUSH_BASE
0x00000DA8: 0xC001 0x000000fa - O_INTOP(0x000000fa)   // 250 (250)
0x00000DAE: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000DB4: 0x8012            - O_FETCH_GLOBAL
0x00000DB6: 0x811E            - O_GSAY_REPLY
0x00000DB8: 0xC001 0x000000fa - O_INTOP(0x000000fa)   // 250 (250)
0x00000DBE: 0xC001 0x00000071 - O_INTOP(0x00000071)   // 113 (113)
0x00000DC4: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x00000DCA: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000DD0: 0x811F            - O_GSAY_OPTION
0x00000DD2: 0xC001 0x000000fa - O_INTOP(0x000000fa)   // 250 (250)
0x00000DD8: 0xC001 0x00000072 - O_INTOP(0x00000072)   // 114 (114)
0x00000DDE: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x00000DE4: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000DEA: 0x811F            - O_GSAY_OPTION
0x00000DEC: 0xC001 0x000000fa - O_INTOP(0x000000fa)   // 250 (250)
0x00000DF2: 0xC001 0x00000073 - O_INTOP(0x00000073)   // 115 (115)
0x00000DF8: 0xC001 0x00000010 - O_INTOP(0x00000010)   // 16 (16)
0x00000DFE: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000E04: 0x811F            - O_GSAY_OPTION
0x00000E06: 0xC001 0x000000fa - O_INTOP(0x000000fa)   // 250 (250)
0x00000E0C: 0xC001 0x00000074 - O_INTOP(0x00000074)   // 116 (116)
0x00000E12: 0xC001 0x0000000d - O_INTOP(0x0000000d)   // 13 (13)
0x00000E18: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000E1E: 0x811F            - O_GSAY_OPTION
0x00000E20: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E26: 0x800D            - O_D_TO_A
0x00000E28: 0x8019            - O_SWAPA
0x00000E2A: 0x802A            - O_POP_TO_BASE
0x00000E2C: 0x8029            - O_POP_BASE
0x00000E2E: 0x800C            - O_A_TO_D
0x00000E30: 0x801C            - O_POP_RETURN
0x00000E32: 0x802A            - O_POP_TO_BASE
0x00000E34: 0x8029            - O_POP_BASE
0x00000E36: 0x801C            - O_POP_RETURN

12: Smitty05 (0x00000e38)
===============================
0x00000E38: 0x802B            - O_PUSH_BASE
0x00000E3A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000E40: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000E46: 0x80C2            - O_SET_LOCAL_VAR
0x00000E48: 0xC001 0x000000fa - O_INTOP(0x000000fa)   // 250 (250)
0x00000E4E: 0xC001 0x00000075 - O_INTOP(0x00000075)   // 117 (117)
0x00000E54: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000E5A: 0x8120            - O_GSAY_MESSAGE
0x00000E5C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E62: 0x800D            - O_D_TO_A
0x00000E64: 0x8019            - O_SWAPA
0x00000E66: 0x802A            - O_POP_TO_BASE
0x00000E68: 0x8029            - O_POP_BASE
0x00000E6A: 0x800C            - O_A_TO_D
0x00000E6C: 0x801C            - O_POP_RETURN
0x00000E6E: 0x802A            - O_POP_TO_BASE
0x00000E70: 0x8029            - O_POP_BASE
0x00000E72: 0x801C            - O_POP_RETURN

13: Smitty06 (0x00000e74)
===============================
0x00000E74: 0x802B            - O_PUSH_BASE
0x00000E76: 0xC001 0x000000fa - O_INTOP(0x000000fa)   // 250 (250)
0x00000E7C: 0xC001 0x00000076 - O_INTOP(0x00000076)   // 118 (118)
0x00000E82: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000E88: 0x8120            - O_GSAY_MESSAGE
0x00000E8A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E90: 0x800D            - O_D_TO_A
0x00000E92: 0x8019            - O_SWAPA
0x00000E94: 0x802A            - O_POP_TO_BASE
0x00000E96: 0x8029            - O_POP_BASE
0x00000E98: 0x800C            - O_A_TO_D
0x00000E9A: 0x801C            - O_POP_RETURN
0x00000E9C: 0x802A            - O_POP_TO_BASE
0x00000E9E: 0x8029            - O_POP_BASE
0x00000EA0: 0x801C            - O_POP_RETURN

14: Smitty07 (0x00000ea2)
===============================
0x00000EA2: 0x802B            - O_PUSH_BASE
0x00000EA4: 0xC001 0x00000077 - O_INTOP(0x00000077)   // 119 (119)
0x00000EAA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000EB0: 0x8013            - O_STORE_GLOBAL
0x00000EB2: 0xC001 0x00000ec8 - O_INTOP(0x00000ec8)   // 3784 (3784)
0x00000EB8: 0x800D            - O_D_TO_A
0x00000EBA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000EC0: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00000EC6: 0x8005            - O_CALL
0x00000EC8: 0x801A            - O_POP
0x00000ECA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000ED0: 0x800D            - O_D_TO_A
0x00000ED2: 0x8019            - O_SWAPA
0x00000ED4: 0x802A            - O_POP_TO_BASE
0x00000ED6: 0x8029            - O_POP_BASE
0x00000ED8: 0x800C            - O_A_TO_D
0x00000EDA: 0x801C            - O_POP_RETURN
0x00000EDC: 0x802A            - O_POP_TO_BASE
0x00000EDE: 0x8029            - O_POP_BASE
0x00000EE0: 0x801C            - O_POP_RETURN

15: Smitty08 (0x00000ee2)
===============================
0x00000EE2: 0x802B            - O_PUSH_BASE
0x00000EE4: 0xC001 0x00000078 - O_INTOP(0x00000078)   // 120 (120)
0x00000EEA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000EF0: 0x8013            - O_STORE_GLOBAL
0x00000EF2: 0xC001 0x00000f08 - O_INTOP(0x00000f08)   // 3848 (3848)
0x00000EF8: 0x800D            - O_D_TO_A
0x00000EFA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F00: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00000F06: 0x8005            - O_CALL
0x00000F08: 0x801A            - O_POP
0x00000F0A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F10: 0x800D            - O_D_TO_A
0x00000F12: 0x8019            - O_SWAPA
0x00000F14: 0x802A            - O_POP_TO_BASE
0x00000F16: 0x8029            - O_POP_BASE
0x00000F18: 0x800C            - O_A_TO_D
0x00000F1A: 0x801C            - O_POP_RETURN
0x00000F1C: 0x802A            - O_POP_TO_BASE
0x00000F1E: 0x8029            - O_POP_BASE
0x00000F20: 0x801C            - O_POP_RETURN

16: Smitty09 (0x00000f22)
===============================
0x00000F22: 0x802B            - O_PUSH_BASE
0x00000F24: 0xC001 0x00000079 - O_INTOP(0x00000079)   // 121 (121)
0x00000F2A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000F30: 0x8013            - O_STORE_GLOBAL
0x00000F32: 0xC001 0x00000f48 - O_INTOP(0x00000f48)   // 3912 (3912)
0x00000F38: 0x800D            - O_D_TO_A
0x00000F3A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F40: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00000F46: 0x8005            - O_CALL
0x00000F48: 0x801A            - O_POP
0x00000F4A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F50: 0x800D            - O_D_TO_A
0x00000F52: 0x8019            - O_SWAPA
0x00000F54: 0x802A            - O_POP_TO_BASE
0x00000F56: 0x8029            - O_POP_BASE
0x00000F58: 0x800C            - O_A_TO_D
0x00000F5A: 0x801C            - O_POP_RETURN
0x00000F5C: 0x802A            - O_POP_TO_BASE
0x00000F5E: 0x8029            - O_POP_BASE
0x00000F60: 0x801C            - O_POP_RETURN

17: Smitty10 (0x00000f62)
===============================
0x00000F62: 0x802B            - O_PUSH_BASE
0x00000F64: 0xC001 0x000000fa - O_INTOP(0x000000fa)   // 250 (250)
0x00000F6A: 0xC001 0x0000007a - O_INTOP(0x0000007a)   // 122 (122)
0x00000F70: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000F76: 0x8120            - O_GSAY_MESSAGE
0x00000F78: 0xC001 0x00000258 - O_INTOP(0x00000258)   // 600 (600)
0x00000F7E: 0x8136            - O_GFADE_OUT
0x00000F80: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00000F86: 0xC001 0x0000003c - O_INTOP(0x0000003c)   // 60 (60)
0x00000F8C: 0x803B            - O_MUL
0x00000F8E: 0xC001 0x0000003c - O_INTOP(0x0000003c)   // 60 (60)
0x00000F94: 0x803B            - O_MUL
0x00000F96: 0x80FC            - O_GAME_TIME_ADVANCE
0x00000F98: 0xC001 0x00000258 - O_INTOP(0x00000258)   // 600 (600)
0x00000F9E: 0x8137            - O_GFADE_IN
0x00000FA0: 0xC001 0x0000008a - O_INTOP(0x0000008a)   // 138 (138)
0x00000FA6: 0xC001 0x00002457 - O_INTOP(0x00002457)   // 9303 (9303)
0x00000FAC: 0x80C6            - O_SET_GLOBAL_VAR
0x00000FAE: 0xC001 0x000000fa - O_INTOP(0x000000fa)   // 250 (250)
0x00000FB4: 0xC001 0x0000007b - O_INTOP(0x0000007b)   // 123 (123)
0x00000FBA: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000FC0: 0x8120            - O_GSAY_MESSAGE
0x00000FC2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000FC8: 0x800D            - O_D_TO_A
0x00000FCA: 0x8019            - O_SWAPA
0x00000FCC: 0x802A            - O_POP_TO_BASE
0x00000FCE: 0x8029            - O_POP_BASE
0x00000FD0: 0x800C            - O_A_TO_D
0x00000FD2: 0x801C            - O_POP_RETURN
0x00000FD4: 0x802A            - O_POP_TO_BASE
0x00000FD6: 0x8029            - O_POP_BASE
0x00000FD8: 0x801C            - O_POP_RETURN

18: Smitty11 (0x00000fda)
===============================
0x00000FDA: 0x802B            - O_PUSH_BASE
0x00000FDC: 0xC001 0x000000fa - O_INTOP(0x000000fa)   // 250 (250)
0x00000FE2: 0xC001 0x0000007c - O_INTOP(0x0000007c)   // 124 (124)
0x00000FE8: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000FEE: 0x8120            - O_GSAY_MESSAGE
0x00000FF0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000FF6: 0x800D            - O_D_TO_A
0x00000FF8: 0x8019            - O_SWAPA
0x00000FFA: 0x802A            - O_POP_TO_BASE
0x00000FFC: 0x8029            - O_POP_BASE
0x00000FFE: 0x800C            - O_A_TO_D
0x00001000: 0x801C            - O_POP_RETURN
0x00001002: 0x802A            - O_POP_TO_BASE
0x00001004: 0x8029            - O_POP_BASE
0x00001006: 0x801C            - O_POP_RETURN

19: Smitty12 (0x00001008)
===============================
0x00001008: 0x802B            - O_PUSH_BASE
0x0000100A: 0xC001 0x000000fa - O_INTOP(0x000000fa)   // 250 (250)
0x00001010: 0xC001 0x0000007d - O_INTOP(0x0000007d)   // 125 (125)
0x00001016: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000101C: 0x8120            - O_GSAY_MESSAGE
0x0000101E: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001024: 0xC001 0x0000245b - O_INTOP(0x0000245b)   // 9307 (9307)
0x0000102A: 0x80C2            - O_SET_LOCAL_VAR
0x0000102C: 0xC001 0x00001056 - O_INTOP(0x00001056)   // 4182 (4182)
0x00001032: 0x80BF            - O_DUDE_OBJ
0x00001034: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x0000103A: 0x80BA            - O_OBJ_IS_CARRYING_OBJ_PID
0x0000103C: 0x802F            - O_IF
0x0000103E: 0xC001 0x00001054 - O_INTOP(0x00001054)   // 4180 (4180)
0x00001044: 0x800D            - O_D_TO_A
0x00001046: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000104C: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x00001052: 0x8005            - O_CALL
0x00001054: 0x801A            - O_POP
0x00001056: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000105C: 0x800D            - O_D_TO_A
0x0000105E: 0x8019            - O_SWAPA
0x00001060: 0x802A            - O_POP_TO_BASE
0x00001062: 0x8029            - O_POP_BASE
0x00001064: 0x800C            - O_A_TO_D
0x00001066: 0x801C            - O_POP_RETURN
0x00001068: 0x802A            - O_POP_TO_BASE
0x0000106A: 0x8029            - O_POP_BASE
0x0000106C: 0x801C            - O_POP_RETURN

20: Smitty14 (0x0000106e)
===============================
0x0000106E: 0x802B            - O_PUSH_BASE
0x00001070: 0xC001 0x000000fa - O_INTOP(0x000000fa)   // 250 (250)
0x00001076: 0xC001 0x0000007f - O_INTOP(0x0000007f)   // 127 (127)
0x0000107C: 0x811E            - O_GSAY_REPLY
0x0000107E: 0xC001 0x000000fa - O_INTOP(0x000000fa)   // 250 (250)
0x00001084: 0xC001 0x0000007e - O_INTOP(0x0000007e)   // 126 (126)
0x0000108A: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x00001090: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001096: 0x811F            - O_GSAY_OPTION
0x00001098: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000109E: 0x800D            - O_D_TO_A
0x000010A0: 0x8019            - O_SWAPA
0x000010A2: 0x802A            - O_POP_TO_BASE
0x000010A4: 0x8029            - O_POP_BASE
0x000010A6: 0x800C            - O_A_TO_D
0x000010A8: 0x801C            - O_POP_RETURN
0x000010AA: 0x802A            - O_POP_TO_BASE
0x000010AC: 0x8029            - O_POP_BASE
0x000010AE: 0x801C            - O_POP_RETURN

21: Smitty14a (0x000010b0)
===============================
0x000010B0: 0x802B            - O_PUSH_BASE
0x000010B2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000010B8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000010BE: 0xC001 0x000000fa - O_INTOP(0x000000fa)   // 250 (250)
0x000010C4: 0xC001 0x00000080 - O_INTOP(0x00000080)   // 128 (128)
0x000010CA: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000010D0: 0x8120            - O_GSAY_MESSAGE
0x000010D2: 0xC001 0x0000002a - O_INTOP(0x0000002a)   // 42 (42)
0x000010D8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000010DE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000010E4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000010EA: 0x8046            - O_NEGATE
0x000010EC: 0x80B7            - O_CREATE_OBJECT_SID
0x000010EE: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000010F4: 0x8031            - O_STORE
0x000010F6: 0x80BF            - O_DUDE_OBJ
0x000010F8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000010FE: 0x8032            - O_FETCH
0x00001100: 0x8147            - O_MOVE_OBJ_INVEN_TO_OBJ
0x00001102: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001108: 0x8032            - O_FETCH
0x0000110A: 0x80BF            - O_DUDE_OBJ
0x0000110C: 0x8147            - O_MOVE_OBJ_INVEN_TO_OBJ
0x0000110E: 0x80BF            - O_DUDE_OBJ
0x00001110: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x00001116: 0x810D            - O_OBJ_CARRYING_PID_OBJ
0x00001118: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000111E: 0x8031            - O_STORE
0x00001120: 0x80BF            - O_DUDE_OBJ
0x00001122: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001128: 0x8032            - O_FETCH
0x0000112A: 0x80D9            - O_RM_OBJ_FROM_INVEN
0x0000112C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001132: 0x8032            - O_FETCH
0x00001134: 0x80F4            - O_DESTROY_OBJECT
0x00001136: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000113C: 0x8032            - O_FETCH
0x0000113E: 0x80F4            - O_DESTROY_OBJECT
0x00001140: 0xC001 0x00000258 - O_INTOP(0x00000258)   // 600 (600)
0x00001146: 0x8136            - O_GFADE_OUT
0x00001148: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x0000114E: 0xC001 0x0000003c - O_INTOP(0x0000003c)   // 60 (60)
0x00001154: 0x803B            - O_MUL
0x00001156: 0xC001 0x0000003c - O_INTOP(0x0000003c)   // 60 (60)
0x0000115C: 0x803B            - O_MUL
0x0000115E: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001164: 0x803B            - O_MUL
0x00001166: 0x80FC            - O_GAME_TIME_ADVANCE
0x00001168: 0xC001 0x00000258 - O_INTOP(0x00000258)   // 600 (600)
0x0000116E: 0x8137            - O_GFADE_IN
0x00001170: 0xC001 0x000000fa - O_INTOP(0x000000fa)   // 250 (250)
0x00001176: 0xC001 0x00000081 - O_INTOP(0x00000081)   // 129 (129)
0x0000117C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001182: 0x8120            - O_GSAY_MESSAGE
0x00001184: 0xC001 0x000000e9 - O_INTOP(0x000000e9)   // 233 (233)
0x0000118A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001190: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001196: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000119C: 0x8046            - O_NEGATE
0x0000119E: 0x80B7            - O_CREATE_OBJECT_SID
0x000011A0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000011A6: 0x8031            - O_STORE
0x000011A8: 0x80BF            - O_DUDE_OBJ
0x000011AA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000011B0: 0x8032            - O_FETCH
0x000011B2: 0x80D8            - O_ADD_OBJ_TO_INVEN
0x000011B4: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000011BA: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000011C0: 0x80C2            - O_SET_LOCAL_VAR
0x000011C2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000011C8: 0x800D            - O_D_TO_A
0x000011CA: 0x8019            - O_SWAPA
0x000011CC: 0x802A            - O_POP_TO_BASE
0x000011CE: 0x8029            - O_POP_BASE
0x000011D0: 0x800C            - O_A_TO_D
0x000011D2: 0x801C            - O_POP_RETURN
0x000011D4: 0x802A            - O_POP_TO_BASE
0x000011D6: 0x8029            - O_POP_BASE
0x000011D8: 0x801C            - O_POP_RETURN

22: Smitty15 (0x000011da)
===============================
0x000011DA: 0x802B            - O_PUSH_BASE
0x000011DC: 0xC001 0x000000fa - O_INTOP(0x000000fa)   // 250 (250)
0x000011E2: 0xC001 0x00000082 - O_INTOP(0x00000082)   // 130 (130)
0x000011E8: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000011EE: 0x8120            - O_GSAY_MESSAGE
0x000011F0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000011F6: 0x800D            - O_D_TO_A
0x000011F8: 0x8019            - O_SWAPA
0x000011FA: 0x802A            - O_POP_TO_BASE
0x000011FC: 0x8029            - O_POP_BASE
0x000011FE: 0x800C            - O_A_TO_D
0x00001200: 0x801C            - O_POP_RETURN
0x00001202: 0x802A            - O_POP_TO_BASE
0x00001204: 0x8029            - O_POP_BASE
0x00001206: 0x801C            - O_POP_RETURN

23: SmittyEnd (0x00001208)
===============================
0x00001208: 0x802B            - O_PUSH_BASE
0x0000120A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001210: 0x800D            - O_D_TO_A
0x00001212: 0x8019            - O_SWAPA
0x00001214: 0x802A            - O_POP_TO_BASE
0x00001216: 0x8029            - O_POP_BASE
0x00001218: 0x800C            - O_A_TO_D
0x0000121A: 0x801C            - O_POP_RETURN
0x0000121C: 0x802A            - O_POP_TO_BASE
0x0000121E: 0x8029            - O_POP_BASE
0x00001220: 0x801C            - O_POP_RETURN

24: get_reaction (0x00001222)
===============================
0x00001222: 0x802B            - O_PUSH_BASE
0x00001224: 0xC001 0x0000149c - O_INTOP(0x0000149c)   // 5276 (5276)
0x0000122A: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001230: 0x80C1            - O_LOCAL_VAR
0x00001232: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001238: 0x8033            - O_EQUAL
0x0000123A: 0x802F            - O_IF
0x0000123C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001242: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001248: 0x80C2            - O_SET_LOCAL_VAR
0x0000124A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001250: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001256: 0x80C2            - O_SET_LOCAL_VAR
0x00001258: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x0000125E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001264: 0x80C2            - O_SET_LOCAL_VAR
0x00001266: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000126C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001272: 0x80C1            - O_LOCAL_VAR
0x00001274: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x0000127A: 0x80BF            - O_DUDE_OBJ
0x0000127C: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001282: 0x80CA            - O_GET_CRITTER_STAT
0x00001284: 0x803B            - O_MUL
0x00001286: 0x8039            - O_ADD
0x00001288: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x0000128E: 0x803A            - O_SUB
0x00001290: 0x80C2            - O_SET_LOCAL_VAR
0x00001292: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001298: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000129E: 0x80C1            - O_LOCAL_VAR
0x000012A0: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x000012A6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000012AC: 0x80BF            - O_DUDE_OBJ
0x000012AE: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x000012B4: 0x80F3            - O_HAS_TRAIT
0x000012B6: 0x803B            - O_MUL
0x000012B8: 0x8039            - O_ADD
0x000012BA: 0x80C2            - O_SET_LOCAL_VAR
0x000012BC: 0xC001 0x00001330 - O_INTOP(0x00001330)   // 4912 (4912)
0x000012C2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000012C8: 0x80BF            - O_DUDE_OBJ
0x000012CA: 0xC001 0x00000027 - O_INTOP(0x00000027)   // 39 (39)
0x000012D0: 0x80F3            - O_HAS_TRAIT
0x000012D2: 0x802F            - O_IF
0x000012D4: 0xC001 0x0000130e - O_INTOP(0x0000130e)   // 4878 (4878)
0x000012DA: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x000012E0: 0x80C5            - O_GLOBAL_VAR
0x000012E2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000012E8: 0x8038            - O_GREATER
0x000012EA: 0x802F            - O_IF
0x000012EC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000012F2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000012F8: 0x80C1            - O_LOCAL_VAR
0x000012FA: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00001300: 0x80C5            - O_GLOBAL_VAR
0x00001302: 0x8039            - O_ADD
0x00001304: 0x80C2            - O_SET_LOCAL_VAR
0x00001306: 0xC001 0x00001328 - O_INTOP(0x00001328)   // 4904 (4904)
0x0000130C: 0x8004            - O_JMP
0x0000130E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001314: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000131A: 0x80C1            - O_LOCAL_VAR
0x0000131C: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00001322: 0x80C5            - O_GLOBAL_VAR
0x00001324: 0x803A            - O_SUB
0x00001326: 0x80C2            - O_SET_LOCAL_VAR
0x00001328: 0xC001 0x00001384 - O_INTOP(0x00001384)   // 4996 (4996)
0x0000132E: 0x8004            - O_JMP
0x00001330: 0xC001 0x0000136a - O_INTOP(0x0000136a)   // 4970 (4970)
0x00001336: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x0000133C: 0x80C1            - O_LOCAL_VAR
0x0000133E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001344: 0x8033            - O_EQUAL
0x00001346: 0x802F            - O_IF
0x00001348: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000134E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001354: 0x80C1            - O_LOCAL_VAR
0x00001356: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x0000135C: 0x80C5            - O_GLOBAL_VAR
0x0000135E: 0x803A            - O_SUB
0x00001360: 0x80C2            - O_SET_LOCAL_VAR
0x00001362: 0xC001 0x00001384 - O_INTOP(0x00001384)   // 4996 (4996)
0x00001368: 0x8004            - O_JMP
0x0000136A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001370: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001376: 0x80C1            - O_LOCAL_VAR
0x00001378: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x0000137E: 0x80C5            - O_GLOBAL_VAR
0x00001380: 0x8039            - O_ADD
0x00001382: 0x80C2            - O_SET_LOCAL_VAR
0x00001384: 0xC001 0x000013b4 - O_INTOP(0x000013b4)   // 5044 (5044)
0x0000138A: 0xC001 0x0000009e - O_INTOP(0x0000009e)   // 158 (158)
0x00001390: 0x80C5            - O_GLOBAL_VAR
0x00001392: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001398: 0x8038            - O_GREATER
0x0000139A: 0x802F            - O_IF
0x0000139C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000013A2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000013A8: 0x80C1            - O_LOCAL_VAR
0x000013AA: 0xC001 0x0000001e - O_INTOP(0x0000001e)   // 30 (30)
0x000013B0: 0x803A            - O_SUB
0x000013B2: 0x80C2            - O_SET_LOCAL_VAR
0x000013B4: 0xC001 0x0000141c - O_INTOP(0x0000141c)   // 5148 (5148)
0x000013BA: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x000013C0: 0x80C5            - O_GLOBAL_VAR
0x000013C2: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x000013C8: 0x80C5            - O_GLOBAL_VAR
0x000013CA: 0x8039            - O_ADD
0x000013CC: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x000013D2: 0x8036            - O_GREATER_EQUAL
0x000013D4: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x000013DA: 0x80C5            - O_GLOBAL_VAR
0x000013DC: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000013E2: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x000013E8: 0x80C5            - O_GLOBAL_VAR
0x000013EA: 0x803B            - O_MUL
0x000013EC: 0x8038            - O_GREATER
0x000013EE: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x000013F4: 0x80C5            - O_GLOBAL_VAR
0x000013F6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000013FC: 0x8033            - O_EQUAL
0x000013FE: 0x803F            - O_OR
0x00001400: 0x803E            - O_AND
0x00001402: 0x802F            - O_IF
0x00001404: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000140A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001410: 0x80C1            - O_LOCAL_VAR
0x00001412: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x00001418: 0x8039            - O_ADD
0x0000141A: 0x80C2            - O_SET_LOCAL_VAR
0x0000141C: 0xC001 0x00001484 - O_INTOP(0x00001484)   // 5252 (5252)
0x00001422: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00001428: 0x80C5            - O_GLOBAL_VAR
0x0000142A: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00001430: 0x80C5            - O_GLOBAL_VAR
0x00001432: 0x8039            - O_ADD
0x00001434: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x0000143A: 0x8036            - O_GREATER_EQUAL
0x0000143C: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x00001442: 0x80C5            - O_GLOBAL_VAR
0x00001444: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x0000144A: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00001450: 0x80C5            - O_GLOBAL_VAR
0x00001452: 0x803B            - O_MUL
0x00001454: 0x8038            - O_GREATER
0x00001456: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x0000145C: 0x80C5            - O_GLOBAL_VAR
0x0000145E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001464: 0x8033            - O_EQUAL
0x00001466: 0x803F            - O_OR
0x00001468: 0x803E            - O_AND
0x0000146A: 0x802F            - O_IF
0x0000146C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001472: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001478: 0x80C1            - O_LOCAL_VAR
0x0000147A: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x00001480: 0x803A            - O_SUB
0x00001482: 0x80C2            - O_SET_LOCAL_VAR
0x00001484: 0xC001 0x0000149a - O_INTOP(0x0000149a)   // 5274 (5274)
0x0000148A: 0x800D            - O_D_TO_A
0x0000148C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001492: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00001498: 0x8005            - O_CALL
0x0000149A: 0x801A            - O_POP
0x0000149C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000014A2: 0x800D            - O_D_TO_A
0x000014A4: 0x8019            - O_SWAPA
0x000014A6: 0x802A            - O_POP_TO_BASE
0x000014A8: 0x8029            - O_POP_BASE
0x000014AA: 0x800C            - O_A_TO_D
0x000014AC: 0x801C            - O_POP_RETURN
0x000014AE: 0x802A            - O_POP_TO_BASE
0x000014B0: 0x8029            - O_POP_BASE
0x000014B2: 0x801C            - O_POP_RETURN

25: ReactToLevel (0x000014b4)
===============================
0x000014B4: 0x802B            - O_PUSH_BASE
0x000014B6: 0xC001 0x000014e4 - O_INTOP(0x000014e4)   // 5348 (5348)
0x000014BC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000014C2: 0x80C1            - O_LOCAL_VAR
0x000014C4: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x000014CA: 0x8035            - O_LESS_EQUAL
0x000014CC: 0x802F            - O_IF
0x000014CE: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000014D4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000014DA: 0x80C2            - O_SET_LOCAL_VAR
0x000014DC: 0xC001 0x00001520 - O_INTOP(0x00001520)   // 5408 (5408)
0x000014E2: 0x8004            - O_JMP
0x000014E4: 0xC001 0x00001512 - O_INTOP(0x00001512)   // 5394 (5394)
0x000014EA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000014F0: 0x80C1            - O_LOCAL_VAR
0x000014F2: 0xC001 0x0000004b - O_INTOP(0x0000004b)   // 75 (75)
0x000014F8: 0x8035            - O_LESS_EQUAL
0x000014FA: 0x802F            - O_IF
0x000014FC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001502: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001508: 0x80C2            - O_SET_LOCAL_VAR
0x0000150A: 0xC001 0x00001520 - O_INTOP(0x00001520)   // 5408 (5408)
0x00001510: 0x8004            - O_JMP
0x00001512: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001518: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x0000151E: 0x80C2            - O_SET_LOCAL_VAR
0x00001520: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001526: 0x800D            - O_D_TO_A
0x00001528: 0x8019            - O_SWAPA
0x0000152A: 0x802A            - O_POP_TO_BASE
0x0000152C: 0x8029            - O_POP_BASE
0x0000152E: 0x800C            - O_A_TO_D
0x00001530: 0x801C            - O_POP_RETURN
0x00001532: 0x802A            - O_POP_TO_BASE
0x00001534: 0x8029            - O_POP_BASE
0x00001536: 0x801C            - O_POP_RETURN

26: LevelToReact (0x00001538)
===============================
0x00001538: 0x802B            - O_PUSH_BASE
0x0000153A: 0xC001 0x00001570 - O_INTOP(0x00001570)   // 5488 (5488)
0x00001540: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001546: 0x80C1            - O_LOCAL_VAR
0x00001548: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000154E: 0x8033            - O_EQUAL
0x00001550: 0x802F            - O_IF
0x00001552: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001558: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000155E: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00001564: 0x80B4            - O_RANDOM
0x00001566: 0x80C2            - O_SET_LOCAL_VAR
0x00001568: 0xC001 0x000015bc - O_INTOP(0x000015bc)   // 5564 (5564)
0x0000156E: 0x8004            - O_JMP
0x00001570: 0xC001 0x000015a6 - O_INTOP(0x000015a6)   // 5542 (5542)
0x00001576: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000157C: 0x80C1            - O_LOCAL_VAR
0x0000157E: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001584: 0x8033            - O_EQUAL
0x00001586: 0x802F            - O_IF
0x00001588: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000158E: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x00001594: 0xC001 0x0000004b - O_INTOP(0x0000004b)   // 75 (75)
0x0000159A: 0x80B4            - O_RANDOM
0x0000159C: 0x80C2            - O_SET_LOCAL_VAR
0x0000159E: 0xC001 0x000015bc - O_INTOP(0x000015bc)   // 5564 (5564)
0x000015A4: 0x8004            - O_JMP
0x000015A6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000015AC: 0xC001 0x0000004c - O_INTOP(0x0000004c)   // 76 (76)
0x000015B2: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x000015B8: 0x80B4            - O_RANDOM
0x000015BA: 0x80C2            - O_SET_LOCAL_VAR
0x000015BC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000015C2: 0x800D            - O_D_TO_A
0x000015C4: 0x8019            - O_SWAPA
0x000015C6: 0x802A            - O_POP_TO_BASE
0x000015C8: 0x8029            - O_POP_BASE
0x000015CA: 0x800C            - O_A_TO_D
0x000015CC: 0x801C            - O_POP_RETURN
0x000015CE: 0x802A            - O_POP_TO_BASE
0x000015D0: 0x8029            - O_POP_BASE
0x000015D2: 0x801C            - O_POP_RETURN

27: UpReact (0x000015d4)
===============================
0x000015D4: 0x802B            - O_PUSH_BASE
0x000015D6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000015DC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000015E2: 0x80C1            - O_LOCAL_VAR
0x000015E4: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x000015EA: 0x8039            - O_ADD
0x000015EC: 0x80C2            - O_SET_LOCAL_VAR
0x000015EE: 0xC001 0x00001604 - O_INTOP(0x00001604)   // 5636 (5636)
0x000015F4: 0x800D            - O_D_TO_A
0x000015F6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000015FC: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00001602: 0x8005            - O_CALL
0x00001604: 0x801A            - O_POP
0x00001606: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000160C: 0x800D            - O_D_TO_A
0x0000160E: 0x8019            - O_SWAPA
0x00001610: 0x802A            - O_POP_TO_BASE
0x00001612: 0x8029            - O_POP_BASE
0x00001614: 0x800C            - O_A_TO_D
0x00001616: 0x801C            - O_POP_RETURN
0x00001618: 0x802A            - O_POP_TO_BASE
0x0000161A: 0x8029            - O_POP_BASE
0x0000161C: 0x801C            - O_POP_RETURN

28: DownReact (0x0000161e)
===============================
0x0000161E: 0x802B            - O_PUSH_BASE
0x00001620: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001626: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000162C: 0x80C1            - O_LOCAL_VAR
0x0000162E: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00001634: 0x803A            - O_SUB
0x00001636: 0x80C2            - O_SET_LOCAL_VAR
0x00001638: 0xC001 0x0000164e - O_INTOP(0x0000164e)   // 5710 (5710)
0x0000163E: 0x800D            - O_D_TO_A
0x00001640: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001646: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x0000164C: 0x8005            - O_CALL
0x0000164E: 0x801A            - O_POP
0x00001650: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001656: 0x800D            - O_D_TO_A
0x00001658: 0x8019            - O_SWAPA
0x0000165A: 0x802A            - O_POP_TO_BASE
0x0000165C: 0x8029            - O_POP_BASE
0x0000165E: 0x800C            - O_A_TO_D
0x00001660: 0x801C            - O_POP_RETURN
0x00001662: 0x802A            - O_POP_TO_BASE
0x00001664: 0x8029            - O_POP_BASE
0x00001666: 0x801C            - O_POP_RETURN

29: BottomReact (0x00001668)
===============================
0x00001668: 0x802B            - O_PUSH_BASE
0x0000166A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001670: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001676: 0x80C2            - O_SET_LOCAL_VAR
0x00001678: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000167E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001684: 0x80C2            - O_SET_LOCAL_VAR
0x00001686: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000168C: 0x800D            - O_D_TO_A
0x0000168E: 0x8019            - O_SWAPA
0x00001690: 0x802A            - O_POP_TO_BASE
0x00001692: 0x8029            - O_POP_BASE
0x00001694: 0x800C            - O_A_TO_D
0x00001696: 0x801C            - O_POP_RETURN
0x00001698: 0x802A            - O_POP_TO_BASE
0x0000169A: 0x8029            - O_POP_BASE
0x0000169C: 0x801C            - O_POP_RETURN

30: TopReact (0x0000169e)
===============================
0x0000169E: 0x802B            - O_PUSH_BASE
0x000016A0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000016A6: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x000016AC: 0x80C2            - O_SET_LOCAL_VAR
0x000016AE: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000016B4: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000016BA: 0x80C2            - O_SET_LOCAL_VAR
0x000016BC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000016C2: 0x800D            - O_D_TO_A
0x000016C4: 0x8019            - O_SWAPA
0x000016C6: 0x802A            - O_POP_TO_BASE
0x000016C8: 0x8029            - O_POP_BASE
0x000016CA: 0x800C            - O_A_TO_D
0x000016CC: 0x801C            - O_POP_RETURN
0x000016CE: 0x802A            - O_POP_TO_BASE
0x000016D0: 0x8029            - O_POP_BASE
0x000016D2: 0x801C            - O_POP_RETURN

31: BigUpReact (0x000016d4)
===============================
0x000016D4: 0x802B            - O_PUSH_BASE
0x000016D6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000016DC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000016E2: 0x80C1            - O_LOCAL_VAR
0x000016E4: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x000016EA: 0x8039            - O_ADD
0x000016EC: 0x80C2            - O_SET_LOCAL_VAR
0x000016EE: 0xC001 0x00001704 - O_INTOP(0x00001704)   // 5892 (5892)
0x000016F4: 0x800D            - O_D_TO_A
0x000016F6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000016FC: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00001702: 0x8005            - O_CALL
0x00001704: 0x801A            - O_POP
0x00001706: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000170C: 0x800D            - O_D_TO_A
0x0000170E: 0x8019            - O_SWAPA
0x00001710: 0x802A            - O_POP_TO_BASE
0x00001712: 0x8029            - O_POP_BASE
0x00001714: 0x800C            - O_A_TO_D
0x00001716: 0x801C            - O_POP_RETURN
0x00001718: 0x802A            - O_POP_TO_BASE
0x0000171A: 0x8029            - O_POP_BASE
0x0000171C: 0x801C            - O_POP_RETURN

32: BigDownReact (0x0000171e)
===============================
0x0000171E: 0x802B            - O_PUSH_BASE
0x00001720: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001726: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000172C: 0x80C1            - O_LOCAL_VAR
0x0000172E: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00001734: 0x803A            - O_SUB
0x00001736: 0x80C2            - O_SET_LOCAL_VAR
0x00001738: 0xC001 0x0000174e - O_INTOP(0x0000174e)   // 5966 (5966)
0x0000173E: 0x800D            - O_D_TO_A
0x00001740: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001746: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x0000174C: 0x8005            - O_CALL
0x0000174E: 0x801A            - O_POP
0x00001750: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001756: 0x800D            - O_D_TO_A
0x00001758: 0x8019            - O_SWAPA
0x0000175A: 0x802A            - O_POP_TO_BASE
0x0000175C: 0x8029            - O_POP_BASE
0x0000175E: 0x800C            - O_A_TO_D
0x00001760: 0x801C            - O_POP_RETURN
0x00001762: 0x802A            - O_POP_TO_BASE
0x00001764: 0x8029            - O_POP_BASE
0x00001766: 0x801C            - O_POP_RETURN

33: UpReactLevel (0x00001768)
===============================
0x00001768: 0x802B            - O_PUSH_BASE
0x0000176A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001770: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001776: 0x80C1            - O_LOCAL_VAR
0x00001778: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000177E: 0x8039            - O_ADD
0x00001780: 0x80C2            - O_SET_LOCAL_VAR
0x00001782: 0xC001 0x000017a8 - O_INTOP(0x000017a8)   // 6056 (6056)
0x00001788: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000178E: 0x80C1            - O_LOCAL_VAR
0x00001790: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001796: 0x8038            - O_GREATER
0x00001798: 0x802F            - O_IF
0x0000179A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000017A0: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000017A6: 0x80C2            - O_SET_LOCAL_VAR
0x000017A8: 0xC001 0x000017be - O_INTOP(0x000017be)   // 6078 (6078)
0x000017AE: 0x800D            - O_D_TO_A
0x000017B0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000017B6: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x000017BC: 0x8005            - O_CALL
0x000017BE: 0x801A            - O_POP
0x000017C0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000017C6: 0x800D            - O_D_TO_A
0x000017C8: 0x8019            - O_SWAPA
0x000017CA: 0x802A            - O_POP_TO_BASE
0x000017CC: 0x8029            - O_POP_BASE
0x000017CE: 0x800C            - O_A_TO_D
0x000017D0: 0x801C            - O_POP_RETURN
0x000017D2: 0x802A            - O_POP_TO_BASE
0x000017D4: 0x8029            - O_POP_BASE
0x000017D6: 0x801C            - O_POP_RETURN

34: DownReactLevel (0x000017d8)
===============================
0x000017D8: 0x802B            - O_PUSH_BASE
0x000017DA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000017E0: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000017E6: 0x80C1            - O_LOCAL_VAR
0x000017E8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000017EE: 0x803A            - O_SUB
0x000017F0: 0x80C2            - O_SET_LOCAL_VAR
0x000017F2: 0xC001 0x00001818 - O_INTOP(0x00001818)   // 6168 (6168)
0x000017F8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000017FE: 0x80C1            - O_LOCAL_VAR
0x00001800: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001806: 0x8037            - O_LESS
0x00001808: 0x802F            - O_IF
0x0000180A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001810: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001816: 0x80C2            - O_SET_LOCAL_VAR
0x00001818: 0xC001 0x0000182e - O_INTOP(0x0000182e)   // 6190 (6190)
0x0000181E: 0x800D            - O_D_TO_A
0x00001820: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001826: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x0000182C: 0x8005            - O_CALL
0x0000182E: 0x801A            - O_POP
0x00001830: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001836: 0x800D            - O_D_TO_A
0x00001838: 0x8019            - O_SWAPA
0x0000183A: 0x802A            - O_POP_TO_BASE
0x0000183C: 0x8029            - O_POP_BASE
0x0000183E: 0x800C            - O_A_TO_D
0x00001840: 0x801C            - O_POP_RETURN
0x00001842: 0x802A            - O_POP_TO_BASE
0x00001844: 0x8029            - O_POP_BASE
0x00001846: 0x801C            - O_POP_RETURN

35: Goodbyes (0x00001848)
===============================
0x00001848: 0x802B            - O_PUSH_BASE
0x0000184A: 0xC001 0x0000027a - O_INTOP(0x0000027a)   // 634 (634)
0x00001850: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x00001856: 0xC001 0x00000069 - O_INTOP(0x00000069)   // 105 (105)
0x0000185C: 0x80B4            - O_RANDOM
0x0000185E: 0x8105            - O_MESSAGE_STR
0x00001860: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001866: 0x8013            - O_STORE_GLOBAL
0x00001868: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000186E: 0x800D            - O_D_TO_A
0x00001870: 0x8019            - O_SWAPA
0x00001872: 0x802A            - O_POP_TO_BASE
0x00001874: 0x8029            - O_POP_BASE
0x00001876: 0x800C            - O_A_TO_D
0x00001878: 0x801C            - O_POP_RETURN
0x0000187A: 0x802A            - O_POP_TO_BASE
0x0000187C: 0x8029            - O_POP_BASE
0x0000187E: 0x801C            - O_POP_RETURN

