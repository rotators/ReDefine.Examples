Fallout script decompiler, version 8.4.6 (sfall edition)
Copyright (C) Anchorite (TeamX), 2005-2009
anchorite2001@yandex.ru
Continued by Nirran, phobos2077, Mr.Stalin (2014-2020)
Crossplatformed by alexeevdv (2015)
int2ssl is using Fallout 1 code.
Loading file Games/Fallout1.Steam/scripts/GIZGUARD.int...
  Read startup code
  Read procedures table
  Read namespace
  Read stringspace
  Read tail of startup code
    Check "Jump to 'start' procedure" / "Jump to end of statup code"
    Check "# of argument to 'start' procedure"
    Extract "Export var" section
    Extract "Set exported var values" section
    Extract "Export procedures" section
    Extract "Global variables" section
  Read procedure's bodies
    Procedure: 0
    Procedure: 1
    Procedure: 2
    Procedure: 3
    Procedure: 4
    Procedure: 5
    Procedure: 6
    Procedure: 7
    Procedure: 8
    Procedure: 9
    Procedure: 10
    Procedure: 11
    Procedure: 12
    Procedure: 13
    Procedure: 14
    Procedure: 15
    Procedure: 16
    Procedure: 17
    Procedure: 18
File Games/Fallout1.Steam/scripts/GIZGUARD.int loaded successfuly

Decompiling...
  Init definitions
  Processing code
    Intial reducing
    Building execution tree
        Procedure: 0
        Procedure: 1
        Procedure: 2
        Procedure: 3
        Procedure: 4
        Procedure: 5
        Procedure: 6
        Procedure: 7
        Procedure: 8
        Procedure: 9
        Procedure: 10
        Procedure: 11
        Procedure: 12
        Procedure: 13
        Procedure: 14
        Procedure: 15
        Procedure: 16
        Procedure: 17
        Procedure: 18
    Extracting and reducing conditions
    Setting borders of blocks
        Procedure: 0
        Procedure: 1
        Procedure: 2
        Procedure: 3
        Procedure: 4
Error: Conditional expression left in stack

============== Procedures table ==================

======== Procedure 0 ========
Name offset:       0x00000006
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000390
Number of args:    0x00000000  // 0

======== Procedure 1 ========
Name offset:       0x00000018
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000390
Number of args:    0x00000000  // 0

======== Procedure 2 ========
Name offset:       0x00000020
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000004CE
Number of args:    0x00000000  // 0

======== Procedure 3 ========
Name offset:       0x00000032
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000062A
Number of args:    0x00000000  // 0

======== Procedure 4 ========
Name offset:       0x00000044
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000796
Number of args:    0x00000000  // 0

======== Procedure 5 ========
Name offset:       0x00000058
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000874
Number of args:    0x00000000  // 0

======== Procedure 6 ========
Name offset:       0x00000068
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000089C
Number of args:    0x00000000  // 0

======== Procedure 7 ========
Name offset:       0x00000076
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000009AA
Number of args:    0x00000000  // 0

======== Procedure 8 ========
Name offset:       0x0000008C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000A9C
Number of args:    0x00000000  // 0

======== Procedure 9 ========
Name offset:       0x0000009C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000AD2
Number of args:    0x00000000  // 0

======== Procedure 10 ========
Name offset:       0x000000AA
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000B2C
Number of args:    0x00000000  // 0

======== Procedure 11 ========
Name offset:       0x000000B8
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000B86
Number of args:    0x00000000  // 0

======== Procedure 12 ========
Name offset:       0x000000C6
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000C3E
Number of args:    0x00000000  // 0

======== Procedure 13 ========
Name offset:       0x000000D4
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000CDC
Number of args:    0x00000000  // 0

======== Procedure 14 ========
Name offset:       0x000000E2
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000D12
Number of args:    0x00000000  // 0

======== Procedure 15 ========
Name offset:       0x000000F0
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000D40
Number of args:    0x00000000  // 0

======== Procedure 16 ========
Name offset:       0x000000FE
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000D76
Number of args:    0x00000000  // 0

======== Procedure 17 ========
Name offset:       0x0000010C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000DB0
Number of args:    0x00000000  // 0

======== Procedure 18 ========
Name offset:       0x0000011A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000DDE
Number of args:    0x00000000  // 0



============== Namespace ==================
0x00000006: ".............."
0x00000018: "start"
0x00000020: "critter_p_proc"
0x00000032: "destroy_p_proc"
0x00000044: "map_enter_p_proc"
0x00000058: "pickup_p_proc"
0x00000068: "talk_p_proc"
0x00000076: "timed_event_p_proc"
0x0000008C: "damage_p_proc"
0x0000009C: "GizGuard00"
0x000000AA: "GizGuard01"
0x000000B8: "GizGuard02"
0x000000C6: "GizGuard03"
0x000000D4: "GizGuard04"
0x000000E2: "GizGuard05"
0x000000F0: "GizGuard06"
0x000000FE: "GizGuard07"
0x0000010C: "GizGuard08"
0x0000011A: "GizGuardEnd"
0x00000128: "hostile"
0x00000132: "initialized"
0x00000140: "sneak_checked"
0x00000150: "removal_ptr"
0x0000015E: "weapon_checked"
==================
24 item(s)



============== Stringspace ==================
Empty


============== Global variables values ==================
0: O_INTOP(0x00000000)   // 0 (0)
1: O_INTOP(0x00000000)   // 0 (0)
2: O_INTOP(0x00000000)   // 0 (0)


============== Exported variables ==================
Not found


============== Procedures ==================

0: .............. (0x00000390)
===============================

1: start (0x00000390)
===============================
0x00000390: 0x802B            - O_PUSH_BASE
0x00000392: 0xC001 0x000003c4 - O_INTOP(0x000003c4)   // 964 (964)
0x00000398: 0x80C7            - O_SCRIPT_ACTION
0x0000039A: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x000003A0: 0x8033            - O_EQUAL
0x000003A2: 0x802F            - O_IF
0x000003A4: 0xC001 0x000003ba - O_INTOP(0x000003ba)   // 954 (954)
0x000003AA: 0x800D            - O_D_TO_A
0x000003AC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000003B2: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000003B8: 0x8005            - O_CALL
0x000003BA: 0x801A            - O_POP
0x000003BC: 0xC001 0x000004b6 - O_INTOP(0x000004b6)   // 1206 (1206)
0x000003C2: 0x8004            - O_JMP
0x000003C4: 0xC001 0x000003f6 - O_INTOP(0x000003f6)   // 1014 (1014)
0x000003CA: 0x80C7            - O_SCRIPT_ACTION
0x000003CC: 0xC001 0x00000012 - O_INTOP(0x00000012)   // 18 (18)
0x000003D2: 0x8033            - O_EQUAL
0x000003D4: 0x802F            - O_IF
0x000003D6: 0xC001 0x000003ec - O_INTOP(0x000003ec)   // 1004 (1004)
0x000003DC: 0x800D            - O_D_TO_A
0x000003DE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000003E4: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000003EA: 0x8005            - O_CALL
0x000003EC: 0x801A            - O_POP
0x000003EE: 0xC001 0x000004b6 - O_INTOP(0x000004b6)   // 1206 (1206)
0x000003F4: 0x8004            - O_JMP
0x000003F6: 0xC001 0x00000428 - O_INTOP(0x00000428)   // 1064 (1064)
0x000003FC: 0x80C7            - O_SCRIPT_ACTION
0x000003FE: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x00000404: 0x8033            - O_EQUAL
0x00000406: 0x802F            - O_IF
0x00000408: 0xC001 0x0000041e - O_INTOP(0x0000041e)   // 1054 (1054)
0x0000040E: 0x800D            - O_D_TO_A
0x00000410: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000416: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000041C: 0x8005            - O_CALL
0x0000041E: 0x801A            - O_POP
0x00000420: 0xC001 0x000004b6 - O_INTOP(0x000004b6)   // 1206 (1206)
0x00000426: 0x8004            - O_JMP
0x00000428: 0xC001 0x0000045a - O_INTOP(0x0000045a)   // 1114 (1114)
0x0000042E: 0x80C7            - O_SCRIPT_ACTION
0x00000430: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000436: 0x8033            - O_EQUAL
0x00000438: 0x802F            - O_IF
0x0000043A: 0xC001 0x00000450 - O_INTOP(0x00000450)   // 1104 (1104)
0x00000440: 0x800D            - O_D_TO_A
0x00000442: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000448: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x0000044E: 0x8005            - O_CALL
0x00000450: 0x801A            - O_POP
0x00000452: 0xC001 0x000004b6 - O_INTOP(0x000004b6)   // 1206 (1206)
0x00000458: 0x8004            - O_JMP
0x0000045A: 0xC001 0x0000048c - O_INTOP(0x0000048c)   // 1164 (1164)
0x00000460: 0x80C7            - O_SCRIPT_ACTION
0x00000462: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00000468: 0x8033            - O_EQUAL
0x0000046A: 0x802F            - O_IF
0x0000046C: 0xC001 0x00000482 - O_INTOP(0x00000482)   // 1154 (1154)
0x00000472: 0x800D            - O_D_TO_A
0x00000474: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000047A: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000480: 0x8005            - O_CALL
0x00000482: 0x801A            - O_POP
0x00000484: 0xC001 0x000004b6 - O_INTOP(0x000004b6)   // 1206 (1206)
0x0000048A: 0x8004            - O_JMP
0x0000048C: 0xC001 0x000004b6 - O_INTOP(0x000004b6)   // 1206 (1206)
0x00000492: 0x80C7            - O_SCRIPT_ACTION
0x00000494: 0xC001 0x00000016 - O_INTOP(0x00000016)   // 22 (22)
0x0000049A: 0x8033            - O_EQUAL
0x0000049C: 0x802F            - O_IF
0x0000049E: 0xC001 0x000004b4 - O_INTOP(0x000004b4)   // 1204 (1204)
0x000004A4: 0x800D            - O_D_TO_A
0x000004A6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000004AC: 0xC001 0x00000007 - O_INTOP(0x00000007)   // 7 (7)
0x000004B2: 0x8005            - O_CALL
0x000004B4: 0x801A            - O_POP
0x000004B6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000004BC: 0x800D            - O_D_TO_A
0x000004BE: 0x8019            - O_SWAPA
0x000004C0: 0x802A            - O_POP_TO_BASE
0x000004C2: 0x8029            - O_POP_BASE
0x000004C4: 0x800C            - O_A_TO_D
0x000004C6: 0x801C            - O_POP_RETURN
0x000004C8: 0x802A            - O_POP_TO_BASE
0x000004CA: 0x8029            - O_POP_BASE
0x000004CC: 0x801C            - O_POP_RETURN

2: critter_p_proc (0x000004ce)
===============================
0x000004CE: 0x802B            - O_PUSH_BASE
0x000004D0: 0xC001 0x00000532 - O_INTOP(0x00000532)   // 1330 (1330)
0x000004D6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000004DC: 0x8012            - O_FETCH_GLOBAL
0x000004DE: 0x802F            - O_IF
0x000004E0: 0xC001 0x0000052a - O_INTOP(0x0000052a)   // 1322 (1322)
0x000004E6: 0x80BC            - O_SELF_OBJ
0x000004E8: 0x80BF            - O_DUDE_OBJ
0x000004EA: 0x80DC            - O_OBJ_CAN_SEE_OBJ
0x000004EC: 0x802F            - O_IF
0x000004EE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000004F4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000004FA: 0x8013            - O_STORE_GLOBAL
0x000004FC: 0x80BF            - O_DUDE_OBJ
0x000004FE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000504: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000050A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000510: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000516: 0xC001 0x00007530 - O_INTOP(0x00007530)   // 30000 (30000)
0x0000051C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000522: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000528: 0x80D0            - O_ATTACK_COMPLEX
0x0000052A: 0xC001 0x000005be - O_INTOP(0x000005be)   // 1470 (1470)
0x00000530: 0x8004            - O_JMP
0x00000532: 0xC001 0x000005be - O_INTOP(0x000005be)   // 1470 (1470)
0x00000538: 0x80BC            - O_SELF_OBJ
0x0000053A: 0x80BF            - O_DUDE_OBJ
0x0000053C: 0x80DC            - O_OBJ_CAN_SEE_OBJ
0x0000053E: 0x802F            - O_IF
0x00000540: 0xC001 0x000005be - O_INTOP(0x000005be)   // 1470 (1470)
0x00000546: 0x80BC            - O_SELF_OBJ
0x00000548: 0x80BF            - O_DUDE_OBJ
0x0000054A: 0x80D3            - O_TILE_DISTANCE_OBJS
0x0000054C: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00000552: 0x8037            - O_LESS
0x00000554: 0x802F            - O_IF
0x00000556: 0xC001 0x0000059e - O_INTOP(0x0000059e)   // 1438 (1438)
0x0000055C: 0x80BF            - O_DUDE_OBJ
0x0000055E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000564: 0x8106            - O_CRITTER_INVEN_OBJ
0x00000566: 0x80C9            - O_OBJ_ITEM_SUBTYPE
0x00000568: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x0000056E: 0x8033            - O_EQUAL
0x00000570: 0x80BF            - O_DUDE_OBJ
0x00000572: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000578: 0x8106            - O_CRITTER_INVEN_OBJ
0x0000057A: 0x80C9            - O_OBJ_ITEM_SUBTYPE
0x0000057C: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000582: 0x8033            - O_EQUAL
0x00000584: 0x803F            - O_OR
0x00000586: 0x9001 0x0000015e - O_STRINGOP(0x0000015e)   // 350 (350)
0x0000058C: 0x8014            - O_FETCH_EXTERNAL
0x0000058E: 0x8045            - O_NOT
0x00000590: 0x803E            - O_AND
0x00000592: 0x802F            - O_IF
0x00000594: 0x80F9            - O_DIALOGUE_SYSTEM_ENTER
0x00000596: 0xC001 0x000005be - O_INTOP(0x000005be)   // 1470 (1470)
0x0000059C: 0x8004            - O_JMP
0x0000059E: 0xC001 0x000005be - O_INTOP(0x000005be)   // 1470 (1470)
0x000005A4: 0x80BF            - O_DUDE_OBJ
0x000005A6: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x000005AC: 0x80AB            - O_USING_SKILL
0x000005AE: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000005B4: 0x8012            - O_FETCH_GLOBAL
0x000005B6: 0x8045            - O_NOT
0x000005B8: 0x803E            - O_AND
0x000005BA: 0x802F            - O_IF
0x000005BC: 0x80F9            - O_DIALOGUE_SYSTEM_ENTER
0x000005BE: 0xC001 0x00000612 - O_INTOP(0x00000612)   // 1554 (1554)
0x000005C4: 0xC001 0x0000015b - O_INTOP(0x0000015b)   // 347 (347)
0x000005CA: 0x80C5            - O_GLOBAL_VAR
0x000005CC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000005D2: 0x8033            - O_EQUAL
0x000005D4: 0x802F            - O_IF
0x000005D6: 0xC001 0x00000612 - O_INTOP(0x00000612)   // 1554 (1554)
0x000005DC: 0x80BC            - O_SELF_OBJ
0x000005DE: 0x80BF            - O_DUDE_OBJ
0x000005E0: 0x80DC            - O_OBJ_CAN_SEE_OBJ
0x000005E2: 0x802F            - O_IF
0x000005E4: 0x80BF            - O_DUDE_OBJ
0x000005E6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000005EC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000005F2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000005F8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000005FE: 0xC001 0x00007530 - O_INTOP(0x00007530)   // 30000 (30000)
0x00000604: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000060A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000610: 0x80D0            - O_ATTACK_COMPLEX
0x00000612: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000618: 0x800D            - O_D_TO_A
0x0000061A: 0x8019            - O_SWAPA
0x0000061C: 0x802A            - O_POP_TO_BASE
0x0000061E: 0x8029            - O_POP_BASE
0x00000620: 0x800C            - O_A_TO_D
0x00000622: 0x801C            - O_POP_RETURN
0x00000624: 0x802A            - O_POP_TO_BASE
0x00000626: 0x8029            - O_POP_BASE
0x00000628: 0x801C            - O_POP_RETURN

3: destroy_p_proc (0x0000062a)
===============================
0x0000062A: 0x802B            - O_PUSH_BASE
0x0000062C: 0xC001 0x0000077e - O_INTOP(0x0000077e)   // 1918 (1918)
0x00000632: 0x80BD            - O_SOURCE_OBJ
0x00000634: 0x80BF            - O_DUDE_OBJ
0x00000636: 0x8033            - O_EQUAL
0x00000638: 0x802F            - O_IF
0x0000063A: 0xC001 0x0000015b - O_INTOP(0x0000015b)   // 347 (347)
0x00000640: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000646: 0x80C6            - O_SET_GLOBAL_VAR
0x00000648: 0xC001 0x0000077e - O_INTOP(0x0000077e)   // 1918 (1918)
0x0000064E: 0x80BD            - O_SOURCE_OBJ
0x00000650: 0x80BF            - O_DUDE_OBJ
0x00000652: 0x8033            - O_EQUAL
0x00000654: 0x802F            - O_IF
0x00000656: 0xC001 0x000006c2 - O_INTOP(0x000006c2)   // 1730 (1730)
0x0000065C: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00000662: 0x80C5            - O_GLOBAL_VAR
0x00000664: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x0000066A: 0x80C5            - O_GLOBAL_VAR
0x0000066C: 0x8039            - O_ADD
0x0000066E: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00000674: 0x8036            - O_GREATER_EQUAL
0x00000676: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x0000067C: 0x80C5            - O_GLOBAL_VAR
0x0000067E: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000684: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x0000068A: 0x80C5            - O_GLOBAL_VAR
0x0000068C: 0x803B            - O_MUL
0x0000068E: 0x8038            - O_GREATER
0x00000690: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x00000696: 0x80C5            - O_GLOBAL_VAR
0x00000698: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000069E: 0x8033            - O_EQUAL
0x000006A0: 0x803F            - O_OR
0x000006A2: 0x803E            - O_AND
0x000006A4: 0x802F            - O_IF
0x000006A6: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x000006AC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000006B2: 0x80C6            - O_SET_GLOBAL_VAR
0x000006B4: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x000006BA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000006C0: 0x80C6            - O_SET_GLOBAL_VAR
0x000006C2: 0xC001 0x0000072e - O_INTOP(0x0000072e)   // 1838 (1838)
0x000006C8: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x000006CE: 0x80C5            - O_GLOBAL_VAR
0x000006D0: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x000006D6: 0x80C5            - O_GLOBAL_VAR
0x000006D8: 0x8039            - O_ADD
0x000006DA: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x000006E0: 0x8036            - O_GREATER_EQUAL
0x000006E2: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x000006E8: 0x80C5            - O_GLOBAL_VAR
0x000006EA: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000006F0: 0xC001 0x0000009f - O_INTOP(0x0000009f)   // 159 (159)
0x000006F6: 0x80C5            - O_GLOBAL_VAR
0x000006F8: 0x803B            - O_MUL
0x000006FA: 0x8038            - O_GREATER
0x000006FC: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x00000702: 0x80C5            - O_GLOBAL_VAR
0x00000704: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000070A: 0x8033            - O_EQUAL
0x0000070C: 0x803F            - O_OR
0x0000070E: 0x803E            - O_AND
0x00000710: 0x802F            - O_IF
0x00000712: 0xC001 0x0000009d - O_INTOP(0x0000009d)   // 157 (157)
0x00000718: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000071E: 0x80C6            - O_SET_GLOBAL_VAR
0x00000720: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x00000726: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000072C: 0x80C6            - O_SET_GLOBAL_VAR
0x0000072E: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00000734: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x0000073A: 0x80C5            - O_GLOBAL_VAR
0x0000073C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000742: 0x8039            - O_ADD
0x00000744: 0x80C6            - O_SET_GLOBAL_VAR
0x00000746: 0xC001 0x0000077e - O_INTOP(0x0000077e)   // 1918 (1918)
0x0000074C: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00000752: 0x80C5            - O_GLOBAL_VAR
0x00000754: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x0000075A: 0x803D            - O_MOD
0x0000075C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000762: 0x8033            - O_EQUAL
0x00000764: 0x802F            - O_IF
0x00000766: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x0000076C: 0xC001 0x0000009b - O_INTOP(0x0000009b)   // 155 (155)
0x00000772: 0x80C5            - O_GLOBAL_VAR
0x00000774: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000077A: 0x8039            - O_ADD
0x0000077C: 0x80C6            - O_SET_GLOBAL_VAR
0x0000077E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000784: 0x800D            - O_D_TO_A
0x00000786: 0x8019            - O_SWAPA
0x00000788: 0x802A            - O_POP_TO_BASE
0x0000078A: 0x8029            - O_POP_BASE
0x0000078C: 0x800C            - O_A_TO_D
0x0000078E: 0x801C            - O_POP_RETURN
0x00000790: 0x802A            - O_POP_TO_BASE
0x00000792: 0x8029            - O_POP_BASE
0x00000794: 0x801C            - O_POP_RETURN

4: map_enter_p_proc (0x00000796)
===============================
0x00000796: 0x802B            - O_PUSH_BASE
0x00000798: 0xC001 0x000007c0 - O_INTOP(0x000007c0)   // 1984 (1984)
0x0000079E: 0x80BC            - O_SELF_OBJ
0x000007A0: 0xC001 0x00000029 - O_INTOP(0x00000029)   // 41 (41)
0x000007A6: 0x80BA            - O_OBJ_IS_CARRYING_OBJ_PID
0x000007A8: 0x8045            - O_NOT
0x000007AA: 0x802F            - O_IF
0x000007AC: 0x80BC            - O_SELF_OBJ
0x000007AE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000007B4: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x000007BA: 0x80B4            - O_RANDOM
0x000007BC: 0x8139            - O_ITEM_CAPS_ADJUST
0x000007BE: 0x801A            - O_POP
0x000007C0: 0xC001 0x000007f6 - O_INTOP(0x000007f6)   // 2038 (2038)
0x000007C6: 0xC001 0x00000020 - O_INTOP(0x00000020)   // 32 (32)
0x000007CC: 0x80C5            - O_GLOBAL_VAR
0x000007CE: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000007D4: 0x8033            - O_EQUAL
0x000007D6: 0x802F            - O_IF
0x000007D8: 0x80BC            - O_SELF_OBJ
0x000007DA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000007E0: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x000007E6: 0xC001 0x00000057 - O_INTOP(0x00000057)   // 87 (87)
0x000007EC: 0x8102            - O_CRITTER_ADD_TRAIT
0x000007EE: 0xC001 0x0000080c - O_INTOP(0x0000080c)   // 2060 (2060)
0x000007F4: 0x8004            - O_JMP
0x000007F6: 0x80BC            - O_SELF_OBJ
0x000007F8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000007FE: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000804: 0xC001 0x0000000d - O_INTOP(0x0000000d)   // 13 (13)
0x0000080A: 0x8102            - O_CRITTER_ADD_TRAIT
0x0000080C: 0xC001 0x0000085c - O_INTOP(0x0000085c)   // 2140 (2140)
0x00000812: 0xC001 0x00000026 - O_INTOP(0x00000026)   // 38 (38)
0x00000818: 0x80C5            - O_GLOBAL_VAR
0x0000081A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000820: 0x8033            - O_EQUAL
0x00000822: 0xC001 0x00000068 - O_INTOP(0x00000068)   // 104 (104)
0x00000828: 0x80C5            - O_GLOBAL_VAR
0x0000082A: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000830: 0x8033            - O_EQUAL
0x00000832: 0x803F            - O_OR
0x00000834: 0x802F            - O_IF
0x00000836: 0x80BC            - O_SELF_OBJ
0x00000838: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000083E: 0x80E3            - O_SET_OBJ_VISIBILITY
0x00000840: 0x80BC            - O_SELF_OBJ
0x00000842: 0xC001 0x00001b58 - O_INTOP(0x00001b58)   // 7000 (7000)
0x00000848: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000084E: 0x80B6            - O_MOVE_TO
0x00000850: 0x801A            - O_POP
0x00000852: 0x80BC            - O_SELF_OBJ
0x00000854: 0x9001 0x00000150 - O_STRINGOP(0x00000150)   // 336 (336)
0x0000085A: 0x8015            - O_STORE_EXTERNAL
0x0000085C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000862: 0x800D            - O_D_TO_A
0x00000864: 0x8019            - O_SWAPA
0x00000866: 0x802A            - O_POP_TO_BASE
0x00000868: 0x8029            - O_POP_BASE
0x0000086A: 0x800C            - O_A_TO_D
0x0000086C: 0x801C            - O_POP_RETURN
0x0000086E: 0x802A            - O_POP_TO_BASE
0x00000870: 0x8029            - O_POP_BASE
0x00000872: 0x801C            - O_POP_RETURN

5: pickup_p_proc (0x00000874)
===============================
0x00000874: 0x802B            - O_PUSH_BASE
0x00000876: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000087C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000882: 0x8013            - O_STORE_GLOBAL
0x00000884: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000088A: 0x800D            - O_D_TO_A
0x0000088C: 0x8019            - O_SWAPA
0x0000088E: 0x802A            - O_POP_TO_BASE
0x00000890: 0x8029            - O_POP_BASE
0x00000892: 0x800C            - O_A_TO_D
0x00000894: 0x801C            - O_POP_RETURN
0x00000896: 0x802A            - O_POP_TO_BASE
0x00000898: 0x8029            - O_POP_BASE
0x0000089A: 0x801C            - O_POP_RETURN

6: talk_p_proc (0x0000089c)
===============================
0x0000089C: 0x802B            - O_PUSH_BASE
0x0000089E: 0xC001 0x000008f0 - O_INTOP(0x000008f0)   // 2288 (2288)
0x000008A4: 0x80BF            - O_DUDE_OBJ
0x000008A6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000008AC: 0x8106            - O_CRITTER_INVEN_OBJ
0x000008AE: 0x80C9            - O_OBJ_ITEM_SUBTYPE
0x000008B0: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000008B6: 0x8033            - O_EQUAL
0x000008B8: 0x80BF            - O_DUDE_OBJ
0x000008BA: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000008C0: 0x8106            - O_CRITTER_INVEN_OBJ
0x000008C2: 0x80C9            - O_OBJ_ITEM_SUBTYPE
0x000008C4: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000008CA: 0x8033            - O_EQUAL
0x000008CC: 0x803F            - O_OR
0x000008CE: 0x802F            - O_IF
0x000008D0: 0xC001 0x000008e6 - O_INTOP(0x000008e6)   // 2278 (2278)
0x000008D6: 0x800D            - O_D_TO_A
0x000008D8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000008DE: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x000008E4: 0x8005            - O_CALL
0x000008E6: 0x801A            - O_POP
0x000008E8: 0xC001 0x00000992 - O_INTOP(0x00000992)   // 2450 (2450)
0x000008EE: 0x8004            - O_JMP
0x000008F0: 0xC001 0x00000922 - O_INTOP(0x00000922)   // 2338 (2338)
0x000008F6: 0x80BF            - O_DUDE_OBJ
0x000008F8: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x000008FE: 0x80AB            - O_USING_SKILL
0x00000900: 0x802F            - O_IF
0x00000902: 0xC001 0x00000918 - O_INTOP(0x00000918)   // 2328 (2328)
0x00000908: 0x800D            - O_D_TO_A
0x0000090A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000910: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00000916: 0x8005            - O_CALL
0x00000918: 0x801A            - O_POP
0x0000091A: 0xC001 0x00000992 - O_INTOP(0x00000992)   // 2450 (2450)
0x00000920: 0x8004            - O_JMP
0x00000922: 0xC001 0x0000097a - O_INTOP(0x0000097a)   // 2426 (2426)
0x00000928: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000092E: 0x80C1            - O_LOCAL_VAR
0x00000930: 0x8045            - O_NOT
0x00000932: 0x802F            - O_IF
0x00000934: 0xC001 0x0000027f - O_INTOP(0x0000027f)   // 639 (639)
0x0000093A: 0x80BC            - O_SELF_OBJ
0x0000093C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000942: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000948: 0x8046            - O_NEGATE
0x0000094A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000950: 0x8046            - O_NEGATE
0x00000952: 0x80DE            - O_START_GDIALOG
0x00000954: 0x811C            - O_GSAY_START
0x00000956: 0xC001 0x0000096c - O_INTOP(0x0000096c)   // 2412 (2412)
0x0000095C: 0x800D            - O_D_TO_A
0x0000095E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000964: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x0000096A: 0x8005            - O_CALL
0x0000096C: 0x801A            - O_POP
0x0000096E: 0x811D            - O_GSAY_END
0x00000970: 0x80DF            - O_END_DIALOGUE
0x00000972: 0xC001 0x00000992 - O_INTOP(0x00000992)   // 2450 (2450)
0x00000978: 0x8004            - O_JMP
0x0000097A: 0xC001 0x00000990 - O_INTOP(0x00000990)   // 2448 (2448)
0x00000980: 0x800D            - O_D_TO_A
0x00000982: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000988: 0xC001 0x00000010 - O_INTOP(0x00000010)   // 16 (16)
0x0000098E: 0x8005            - O_CALL
0x00000990: 0x801A            - O_POP
0x00000992: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000998: 0x800D            - O_D_TO_A
0x0000099A: 0x8019            - O_SWAPA
0x0000099C: 0x802A            - O_POP_TO_BASE
0x0000099E: 0x8029            - O_POP_BASE
0x000009A0: 0x800C            - O_A_TO_D
0x000009A2: 0x801C            - O_POP_RETURN
0x000009A4: 0x802A            - O_POP_TO_BASE
0x000009A6: 0x8029            - O_POP_BASE
0x000009A8: 0x801C            - O_POP_RETURN

7: timed_event_p_proc (0x000009aa)
===============================
0x000009AA: 0x802B            - O_PUSH_BASE
0x000009AC: 0xC001 0x00000a3c - O_INTOP(0x00000a3c)   // 2620 (2620)
0x000009B2: 0x80F7            - O_FIXED_PARAM
0x000009B4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000009BA: 0x8033            - O_EQUAL
0x000009BC: 0x802F            - O_IF
0x000009BE: 0xC001 0x00000a26 - O_INTOP(0x00000a26)   // 2598 (2598)
0x000009C4: 0x80BF            - O_DUDE_OBJ
0x000009C6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000009CC: 0x8106            - O_CRITTER_INVEN_OBJ
0x000009CE: 0x80C9            - O_OBJ_ITEM_SUBTYPE
0x000009D0: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000009D6: 0x8033            - O_EQUAL
0x000009D8: 0x80BF            - O_DUDE_OBJ
0x000009DA: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000009E0: 0x8106            - O_CRITTER_INVEN_OBJ
0x000009E2: 0x80C9            - O_OBJ_ITEM_SUBTYPE
0x000009E4: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000009EA: 0x8033            - O_EQUAL
0x000009EC: 0x803F            - O_OR
0x000009EE: 0x802F            - O_IF
0x000009F0: 0x80BC            - O_SELF_OBJ
0x000009F2: 0xC001 0x0000027f - O_INTOP(0x0000027f)   // 639 (639)
0x000009F8: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x000009FE: 0xC001 0x00000067 - O_INTOP(0x00000067)   // 103 (103)
0x00000A04: 0x80B4            - O_RANDOM
0x00000A06: 0x8105            - O_MESSAGE_STR
0x00000A08: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000A0E: 0x810A            - O_FLOAT_MSG
0x00000A10: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000A16: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A1C: 0x8013            - O_STORE_GLOBAL
0x00000A1E: 0xC001 0x00000a34 - O_INTOP(0x00000a34)   // 2612 (2612)
0x00000A24: 0x8004            - O_JMP
0x00000A26: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A2C: 0x9001 0x0000015e - O_STRINGOP(0x0000015e)   // 350 (350)
0x00000A32: 0x8015            - O_STORE_EXTERNAL
0x00000A34: 0xC001 0x00000a84 - O_INTOP(0x00000a84)   // 2692 (2692)
0x00000A3A: 0x8004            - O_JMP
0x00000A3C: 0xC001 0x00000a84 - O_INTOP(0x00000a84)   // 2692 (2692)
0x00000A42: 0x80F7            - O_FIXED_PARAM
0x00000A44: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000A4A: 0x8033            - O_EQUAL
0x00000A4C: 0x802F            - O_IF
0x00000A4E: 0xC001 0x00000a76 - O_INTOP(0x00000a76)   // 2678 (2678)
0x00000A54: 0x80BF            - O_DUDE_OBJ
0x00000A56: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x00000A5C: 0x80AB            - O_USING_SKILL
0x00000A5E: 0x802F            - O_IF
0x00000A60: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000A66: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A6C: 0x8013            - O_STORE_GLOBAL
0x00000A6E: 0xC001 0x00000a84 - O_INTOP(0x00000a84)   // 2692 (2692)
0x00000A74: 0x8004            - O_JMP
0x00000A76: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A7C: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000A82: 0x8013            - O_STORE_GLOBAL
0x00000A84: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A8A: 0x800D            - O_D_TO_A
0x00000A8C: 0x8019            - O_SWAPA
0x00000A8E: 0x802A            - O_POP_TO_BASE
0x00000A90: 0x8029            - O_POP_BASE
0x00000A92: 0x800C            - O_A_TO_D
0x00000A94: 0x801C            - O_POP_RETURN
0x00000A96: 0x802A            - O_POP_TO_BASE
0x00000A98: 0x8029            - O_POP_BASE
0x00000A9A: 0x801C            - O_POP_RETURN

8: damage_p_proc (0x00000a9c)
===============================
0x00000A9C: 0x802B            - O_PUSH_BASE
0x00000A9E: 0xC001 0x00000aba - O_INTOP(0x00000aba)   // 2746 (2746)
0x00000AA4: 0x80BD            - O_SOURCE_OBJ
0x00000AA6: 0x80BF            - O_DUDE_OBJ
0x00000AA8: 0x8033            - O_EQUAL
0x00000AAA: 0x802F            - O_IF
0x00000AAC: 0xC001 0x0000015b - O_INTOP(0x0000015b)   // 347 (347)
0x00000AB2: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000AB8: 0x80C6            - O_SET_GLOBAL_VAR
0x00000ABA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000AC0: 0x800D            - O_D_TO_A
0x00000AC2: 0x8019            - O_SWAPA
0x00000AC4: 0x802A            - O_POP_TO_BASE
0x00000AC6: 0x8029            - O_POP_BASE
0x00000AC8: 0x800C            - O_A_TO_D
0x00000ACA: 0x801C            - O_POP_RETURN
0x00000ACC: 0x802A            - O_POP_TO_BASE
0x00000ACE: 0x8029            - O_POP_BASE
0x00000AD0: 0x801C            - O_POP_RETURN

9: GizGuard00 (0x00000ad2)
===============================
0x00000AD2: 0x802B            - O_PUSH_BASE
0x00000AD4: 0x80BC            - O_SELF_OBJ
0x00000AD6: 0xC001 0x0000027f - O_INTOP(0x0000027f)   // 639 (639)
0x00000ADC: 0xC001 0x00000084 - O_INTOP(0x00000084)   // 132 (132)
0x00000AE2: 0xC001 0x00000085 - O_INTOP(0x00000085)   // 133 (133)
0x00000AE8: 0x80B4            - O_RANDOM
0x00000AEA: 0x8105            - O_MESSAGE_STR
0x00000AEC: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000AF2: 0x810A            - O_FLOAT_MSG
0x00000AF4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000AFA: 0x9001 0x0000015e - O_STRINGOP(0x0000015e)   // 350 (350)
0x00000B00: 0x8015            - O_STORE_EXTERNAL
0x00000B02: 0x80BC            - O_SELF_OBJ
0x00000B04: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000B0A: 0x80F2            - O_GAME_TICKS
0x00000B0C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000B12: 0x80F0            - O_ADD_TIMER_EVENT
0x00000B14: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000B1A: 0x800D            - O_D_TO_A
0x00000B1C: 0x8019            - O_SWAPA
0x00000B1E: 0x802A            - O_POP_TO_BASE
0x00000B20: 0x8029            - O_POP_BASE
0x00000B22: 0x800C            - O_A_TO_D
0x00000B24: 0x801C            - O_POP_RETURN
0x00000B26: 0x802A            - O_POP_TO_BASE
0x00000B28: 0x8029            - O_POP_BASE
0x00000B2A: 0x801C            - O_POP_RETURN

10: GizGuard01 (0x00000b2c)
===============================
0x00000B2C: 0x802B            - O_PUSH_BASE
0x00000B2E: 0x80BC            - O_SELF_OBJ
0x00000B30: 0xC001 0x0000027f - O_INTOP(0x0000027f)   // 639 (639)
0x00000B36: 0xC001 0x00000068 - O_INTOP(0x00000068)   // 104 (104)
0x00000B3C: 0xC001 0x0000006a - O_INTOP(0x0000006a)   // 106 (106)
0x00000B42: 0x80B4            - O_RANDOM
0x00000B44: 0x8105            - O_MESSAGE_STR
0x00000B46: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000B4C: 0x810A            - O_FLOAT_MSG
0x00000B4E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000B54: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000B5A: 0x8013            - O_STORE_GLOBAL
0x00000B5C: 0x80BC            - O_SELF_OBJ
0x00000B5E: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000B64: 0x80F2            - O_GAME_TICKS
0x00000B66: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000B6C: 0x80F0            - O_ADD_TIMER_EVENT
0x00000B6E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000B74: 0x800D            - O_D_TO_A
0x00000B76: 0x8019            - O_SWAPA
0x00000B78: 0x802A            - O_POP_TO_BASE
0x00000B7A: 0x8029            - O_POP_BASE
0x00000B7C: 0x800C            - O_A_TO_D
0x00000B7E: 0x801C            - O_POP_RETURN
0x00000B80: 0x802A            - O_POP_TO_BASE
0x00000B82: 0x8029            - O_POP_BASE
0x00000B84: 0x801C            - O_POP_RETURN

11: GizGuard02 (0x00000b86)
===============================
0x00000B86: 0x802B            - O_PUSH_BASE
0x00000B88: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000B8E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000B94: 0x80C2            - O_SET_LOCAL_VAR
0x00000B96: 0xC001 0x0000027f - O_INTOP(0x0000027f)   // 639 (639)
0x00000B9C: 0xC001 0x0000006b - O_INTOP(0x0000006b)   // 107 (107)
0x00000BA2: 0x811E            - O_GSAY_REPLY
0x00000BA4: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000BAA: 0xC001 0x0000027f - O_INTOP(0x0000027f)   // 639 (639)
0x00000BB0: 0xC001 0x0000006c - O_INTOP(0x0000006c)   // 108 (108)
0x00000BB6: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00000BBC: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000BC2: 0x8121            - O_GIQ_OPTION
0x00000BC4: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000BCA: 0xC001 0x0000027f - O_INTOP(0x0000027f)   // 639 (639)
0x00000BD0: 0xC001 0x0000006d - O_INTOP(0x0000006d)   // 109 (109)
0x00000BD6: 0xC001 0x0000000d - O_INTOP(0x0000000d)   // 13 (13)
0x00000BDC: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000BE2: 0x8121            - O_GIQ_OPTION
0x00000BE4: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000BEA: 0xC001 0x0000027f - O_INTOP(0x0000027f)   // 639 (639)
0x00000BF0: 0xC001 0x0000006e - O_INTOP(0x0000006e)   // 110 (110)
0x00000BF6: 0xC001 0x00000012 - O_INTOP(0x00000012)   // 18 (18)
0x00000BFC: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000C02: 0x8121            - O_GIQ_OPTION
0x00000C04: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000C0A: 0x8046            - O_NEGATE
0x00000C0C: 0xC001 0x0000027f - O_INTOP(0x0000027f)   // 639 (639)
0x00000C12: 0xC001 0x0000006f - O_INTOP(0x0000006f)   // 111 (111)
0x00000C18: 0xC001 0x00000011 - O_INTOP(0x00000011)   // 17 (17)
0x00000C1E: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x00000C24: 0x8121            - O_GIQ_OPTION
0x00000C26: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000C2C: 0x800D            - O_D_TO_A
0x00000C2E: 0x8019            - O_SWAPA
0x00000C30: 0x802A            - O_POP_TO_BASE
0x00000C32: 0x8029            - O_POP_BASE
0x00000C34: 0x800C            - O_A_TO_D
0x00000C36: 0x801C            - O_POP_RETURN
0x00000C38: 0x802A            - O_POP_TO_BASE
0x00000C3A: 0x8029            - O_POP_BASE
0x00000C3C: 0x801C            - O_POP_RETURN

12: GizGuard03 (0x00000c3e)
===============================
0x00000C3E: 0x802B            - O_PUSH_BASE
0x00000C40: 0xC001 0x00000cb0 - O_INTOP(0x00000cb0)   // 3248 (3248)
0x00000C46: 0x80BF            - O_DUDE_OBJ
0x00000C48: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x00000C4E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000C54: 0x80AC            - O_ROLL_VS_SKILL
0x00000C56: 0x80AF            - O_IS_SUCCESS
0x00000C58: 0x802F            - O_IF
0x00000C5A: 0xC001 0x0000027f - O_INTOP(0x0000027f)   // 639 (639)
0x00000C60: 0xC001 0x00000070 - O_INTOP(0x00000070)   // 112 (112)
0x00000C66: 0x811E            - O_GSAY_REPLY
0x00000C68: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000C6E: 0xC001 0x0000027f - O_INTOP(0x0000027f)   // 639 (639)
0x00000C74: 0xC001 0x00000072 - O_INTOP(0x00000072)   // 114 (114)
0x00000C7A: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x00000C80: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000C86: 0x8121            - O_GIQ_OPTION
0x00000C88: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000C8E: 0xC001 0x0000027f - O_INTOP(0x0000027f)   // 639 (639)
0x00000C94: 0xC001 0x00000073 - O_INTOP(0x00000073)   // 115 (115)
0x00000C9A: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x00000CA0: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000CA6: 0x8121            - O_GIQ_OPTION
0x00000CA8: 0xC001 0x00000cc4 - O_INTOP(0x00000cc4)   // 3268 (3268)
0x00000CAE: 0x8004            - O_JMP
0x00000CB0: 0xC001 0x0000027f - O_INTOP(0x0000027f)   // 639 (639)
0x00000CB6: 0xC001 0x00000071 - O_INTOP(0x00000071)   // 113 (113)
0x00000CBC: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x00000CC2: 0x8120            - O_GSAY_MESSAGE
0x00000CC4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000CCA: 0x800D            - O_D_TO_A
0x00000CCC: 0x8019            - O_SWAPA
0x00000CCE: 0x802A            - O_POP_TO_BASE
0x00000CD0: 0x8029            - O_POP_BASE
0x00000CD2: 0x800C            - O_A_TO_D
0x00000CD4: 0x801C            - O_POP_RETURN
0x00000CD6: 0x802A            - O_POP_TO_BASE
0x00000CD8: 0x8029            - O_POP_BASE
0x00000CDA: 0x801C            - O_POP_RETURN

13: GizGuard04 (0x00000cdc)
===============================
0x00000CDC: 0x802B            - O_PUSH_BASE
0x00000CDE: 0xC001 0x0000027f - O_INTOP(0x0000027f)   // 639 (639)
0x00000CE4: 0xC001 0x00000074 - O_INTOP(0x00000074)   // 116 (116)
0x00000CEA: 0xC001 0x00000077 - O_INTOP(0x00000077)   // 119 (119)
0x00000CF0: 0x80B4            - O_RANDOM
0x00000CF2: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000CF8: 0x8120            - O_GSAY_MESSAGE
0x00000CFA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D00: 0x800D            - O_D_TO_A
0x00000D02: 0x8019            - O_SWAPA
0x00000D04: 0x802A            - O_POP_TO_BASE
0x00000D06: 0x8029            - O_POP_BASE
0x00000D08: 0x800C            - O_A_TO_D
0x00000D0A: 0x801C            - O_POP_RETURN
0x00000D0C: 0x802A            - O_POP_TO_BASE
0x00000D0E: 0x8029            - O_POP_BASE
0x00000D10: 0x801C            - O_POP_RETURN

14: GizGuard05 (0x00000d12)
===============================
0x00000D12: 0x802B            - O_PUSH_BASE
0x00000D14: 0xC001 0x0000027f - O_INTOP(0x0000027f)   // 639 (639)
0x00000D1A: 0xC001 0x00000078 - O_INTOP(0x00000078)   // 120 (120)
0x00000D20: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000D26: 0x8120            - O_GSAY_MESSAGE
0x00000D28: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D2E: 0x800D            - O_D_TO_A
0x00000D30: 0x8019            - O_SWAPA
0x00000D32: 0x802A            - O_POP_TO_BASE
0x00000D34: 0x8029            - O_POP_BASE
0x00000D36: 0x800C            - O_A_TO_D
0x00000D38: 0x801C            - O_POP_RETURN
0x00000D3A: 0x802A            - O_POP_TO_BASE
0x00000D3C: 0x8029            - O_POP_BASE
0x00000D3E: 0x801C            - O_POP_RETURN

15: GizGuard06 (0x00000d40)
===============================
0x00000D40: 0x802B            - O_PUSH_BASE
0x00000D42: 0xC001 0x0000027f - O_INTOP(0x0000027f)   // 639 (639)
0x00000D48: 0xC001 0x00000079 - O_INTOP(0x00000079)   // 121 (121)
0x00000D4E: 0xC001 0x0000007c - O_INTOP(0x0000007c)   // 124 (124)
0x00000D54: 0x80B4            - O_RANDOM
0x00000D56: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000D5C: 0x8120            - O_GSAY_MESSAGE
0x00000D5E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D64: 0x800D            - O_D_TO_A
0x00000D66: 0x8019            - O_SWAPA
0x00000D68: 0x802A            - O_POP_TO_BASE
0x00000D6A: 0x8029            - O_POP_BASE
0x00000D6C: 0x800C            - O_A_TO_D
0x00000D6E: 0x801C            - O_POP_RETURN
0x00000D70: 0x802A            - O_POP_TO_BASE
0x00000D72: 0x8029            - O_POP_BASE
0x00000D74: 0x801C            - O_POP_RETURN

16: GizGuard07 (0x00000d76)
===============================
0x00000D76: 0x802B            - O_PUSH_BASE
0x00000D78: 0x80BC            - O_SELF_OBJ
0x00000D7A: 0xC001 0x0000027f - O_INTOP(0x0000027f)   // 639 (639)
0x00000D80: 0xC001 0x0000007d - O_INTOP(0x0000007d)   // 125 (125)
0x00000D86: 0xC001 0x00000082 - O_INTOP(0x00000082)   // 130 (130)
0x00000D8C: 0x80B4            - O_RANDOM
0x00000D8E: 0x8105            - O_MESSAGE_STR
0x00000D90: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D96: 0x810A            - O_FLOAT_MSG
0x00000D98: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D9E: 0x800D            - O_D_TO_A
0x00000DA0: 0x8019            - O_SWAPA
0x00000DA2: 0x802A            - O_POP_TO_BASE
0x00000DA4: 0x8029            - O_POP_BASE
0x00000DA6: 0x800C            - O_A_TO_D
0x00000DA8: 0x801C            - O_POP_RETURN
0x00000DAA: 0x802A            - O_POP_TO_BASE
0x00000DAC: 0x8029            - O_POP_BASE
0x00000DAE: 0x801C            - O_POP_RETURN

17: GizGuard08 (0x00000db0)
===============================
0x00000DB0: 0x802B            - O_PUSH_BASE
0x00000DB2: 0xC001 0x0000027f - O_INTOP(0x0000027f)   // 639 (639)
0x00000DB8: 0xC001 0x00000083 - O_INTOP(0x00000083)   // 131 (131)
0x00000DBE: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000DC4: 0x8120            - O_GSAY_MESSAGE
0x00000DC6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000DCC: 0x800D            - O_D_TO_A
0x00000DCE: 0x8019            - O_SWAPA
0x00000DD0: 0x802A            - O_POP_TO_BASE
0x00000DD2: 0x8029            - O_POP_BASE
0x00000DD4: 0x800C            - O_A_TO_D
0x00000DD6: 0x801C            - O_POP_RETURN
0x00000DD8: 0x802A            - O_POP_TO_BASE
0x00000DDA: 0x8029            - O_POP_BASE
0x00000DDC: 0x801C            - O_POP_RETURN

18: GizGuardEnd (0x00000dde)
===============================
0x00000DDE: 0x802B            - O_PUSH_BASE
0x00000DE0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000DE6: 0x800D            - O_D_TO_A
0x00000DE8: 0x8019            - O_SWAPA
0x00000DEA: 0x802A            - O_POP_TO_BASE
0x00000DEC: 0x8029            - O_POP_BASE
0x00000DEE: 0x800C            - O_A_TO_D
0x00000DF0: 0x801C            - O_POP_RETURN
0x00000DF2: 0x802A            - O_POP_TO_BASE
0x00000DF4: 0x8029            - O_POP_BASE
0x00000DF6: 0x801C            - O_POP_RETURN

