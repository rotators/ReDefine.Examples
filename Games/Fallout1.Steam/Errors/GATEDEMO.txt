Fallout script decompiler, version 8.4.7 (sfall edition)
Copyright (C) Anchorite (TeamX), 2005-2009
anchorite2001@yandex.ru
Continued by Nirran, phobos2077, Mr.Stalin (2014-2023)
Crossplatformed by alexeevdv (2015)
int2ssl is using Fallout 1 code.
Loading file Games/Fallout1.Steam/scripts/GATEDEMO.int...
  Read startup code
  Read procedures table
  Read namespace
  Read stringspace
  Read tail of startup code
    Check "Jump to 'start' procedure" / "Jump to end of statup code"
    Check "# of argument to 'start' procedure"
    Extract "Export var" section
    Extract "Set exported var values" section
    Extract "Export procedures" section
    Extract "Global variables" section
  Read procedure's bodies
    Procedure: 0
    Procedure: 1
    Procedure: 2
    Procedure: 3
    Procedure: 4
    Procedure: 5
    Procedure: 6
    Procedure: 7
    Procedure: 8
    Procedure: 9
    Procedure: 10
    Procedure: 11
    Procedure: 12
File Games/Fallout1.Steam/scripts/GATEDEMO.int loaded successfuly

Decompiling...
  Init definitions
  Processing code
    Intial reducing
    Building execution tree
        Procedure: 0
        Procedure: 1
        Procedure: 2
Error: Expression required for B60

============== Procedures table ==================

======== Procedure 0 ========
Name offset:       0x00000006
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000090E
Number of args:    0x00000000  // 0

======== Procedure 1 ========
Name offset:       0x00000018
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000090E
Number of args:    0x00000000  // 0

======== Procedure 2 ========
Name offset:       0x00000020
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000B46
Number of args:    0x00000000  // 0

======== Procedure 3 ========
Name offset:       0x0000002E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000B98
Number of args:    0x00000000  // 0

======== Procedure 4 ========
Name offset:       0x00000038
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000C78
Number of args:    0x00000000  // 0

======== Procedure 5 ========
Name offset:       0x00000044
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000CF2
Number of args:    0x00000000  // 0

======== Procedure 6 ========
Name offset:       0x0000004E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000D92
Number of args:    0x00000000  // 0

======== Procedure 7 ========
Name offset:       0x00000058
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000E0A
Number of args:    0x00000000  // 0

======== Procedure 8 ========
Name offset:       0x00000062
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000E62
Number of args:    0x00000000  // 0

======== Procedure 9 ========
Name offset:       0x0000006C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000E9A
Number of args:    0x00000000  // 0

======== Procedure 10 ========
Name offset:       0x00000076
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000EC2
Number of args:    0x00000000  // 0

======== Procedure 11 ========
Name offset:       0x00000080
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000EEA
Number of args:    0x00000000  // 0

======== Procedure 12 ========
Name offset:       0x0000008A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000F20
Number of args:    0x00000000  // 0



============== Namespace ==================
0x00000006: ".............."
0x00000018: "start"
0x00000020: "do_dialogue"
0x0000002E: "guard00"
0x00000038: "guard00a"
0x00000044: "guard01"
0x0000004E: "guard02"
0x00000058: "guard03"
0x00000062: "guard04"
0x0000006C: "guard05"
0x00000076: "guard06"
0x00000080: "guard07"
0x0000008A: "guardend"
0x00000096: "Sex"
0x0000009C: "Dip"
0x000000A2: "Talk"
0x000000AA: "new_obj"
0x000000B4: "Sav"
0x000000BA: "Tried"
0x000000C2: "rndx"
0x000000CA: "rndy"
0x000000D2: "critter_tile"
0x000000E2: "Herebefore"
==================
23 item(s)



============== Stringspace ==================
0x00000006: "The guard is enraged and begins to attack."
0x00000034: "The guard is frightened by your power."
0x0000005E: "Only Shadow Sword can intimidate this guard by his very presence. You must do so through words."
0x000000C0: "You successfully swipe something from the guard."
0x000000F4: "You have been spotted."
0x0000010E: "The guard has nothing else on him."
0x00000134: "The guard is unaffected."
0x00000150: "A Junktown gate guard."
0x0000016A: "What are you doing in Junktown, stranger?"
0x00000196: "Looking for a little fun."
0x000001B2: "Give me everything you have!"
0x000001D2: "Might you assist me in acquiring equipment?"
0x00000200: "Nothing. Thank you. Good bye."
0x00000220: "There are a lot of things to do here. Let's see. You can practice your aim on the cows, or you can just wander around Junktown and see the sights, as long as you don't start any trouble."
0x000002DE: "Is there anything else around here?"
0x00000304: "Fine! Give me everything you have!"
0x0000032A: "Thank you. Good bye."
0x00000342: "Well, supposedly one of the old residents had a nasty gun hidden in hishouse, on the northwest side.  But nobody has every found it."
0x000003CA: "Ok. Thank you for you time."
0x000003E8: "Is there anything else?"
0x00000402: "Ok, Ok, Ok. Please, don't hurt me."
0x00000428: "Not a chance! Die scum!!"
0x00000444: "Well, supposedly the fellow who used to live in the building to the northwest had a pretty nasty gun.  Maybe you can find it."
0x000004C4: "Sorry, I'm just a guard.  Try talking with some of the other residents."
0x0000050E: "This is just a taste of things which you can do when the full game comes out. You can either: kill everything that gets in your way, pilfer and sneak your way through situations, or you can talk your way out of trouble and into the graces of others."
0x0000060A: "When the full game comes out, you will be able to see more use of your skills than here."
==================
26 item(s)



============== Global variables values ==================
0: O_INTOP(0x00000000)   // 0 (0)
1: O_INTOP(0x00000000)   // 0 (0)
2: O_INTOP(0x00000000)   // 0 (0)
3: O_INTOP(0x00000000)   // 0 (0)
4: O_INTOP(0x00000000)   // 0 (0)
5: O_INTOP(0x00000000)   // 0 (0)
6: O_INTOP(0x00000000)   // 0 (0)
7: O_INTOP(0x00000000)   // 0 (0)
8: O_INTOP(0x00000000)   // 0 (0)
9: O_INTOP(0x00000000)   // 0 (0)


============== Exported variables ==================
Not found


============== Procedures ==================

0: .............. (0x0000090e)
===============================

1: start (0x0000090e)
===============================
0x0000090E: 0x802B            - O_PUSH_BASE
0x00000910: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000916: 0xC001 0x00000968 - O_INTOP(0x00000968)   // 2408 (2408)
0x0000091C: 0x80C7            - O_SCRIPT_ACTION
0x0000091E: 0xC001 0x00000016 - O_INTOP(0x00000016)   // 22 (22)
0x00000924: 0x8033            - O_EQUAL
0x00000926: 0x802F            - O_IF
0x00000928: 0x9001 0x00000006 - O_STRINGOP(0x00000006)   // 6 (6)
0x0000092E: 0x80B8            - O_DISPLAY_MSG
0x00000930: 0x80BF            - O_DUDE_OBJ
0x00000932: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000938: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000093E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000944: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000094A: 0xC001 0x00007530 - O_INTOP(0x00007530)   // 30000 (30000)
0x00000950: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000956: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000095C: 0x80D0            - O_ATTACK_COMPLEX
0x0000095E: 0x800F            - O_DETACH
0x00000960: 0xC001 0x00000b2e - O_INTOP(0x00000b2e)   // 2862 (2862)
0x00000966: 0x8004            - O_JMP
0x00000968: 0xC001 0x0000099c - O_INTOP(0x0000099c)   // 2460 (2460)
0x0000096E: 0x80C7            - O_SCRIPT_ACTION
0x00000970: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00000976: 0x8033            - O_EQUAL
0x00000978: 0x802F            - O_IF
0x0000097A: 0xC001 0x00000990 - O_INTOP(0x00000990)   // 2448 (2448)
0x00000980: 0x800D            - O_D_TO_A
0x00000982: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000988: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x0000098E: 0x8005            - O_CALL
0x00000990: 0x801A            - O_POP
0x00000992: 0x800F            - O_DETACH
0x00000994: 0xC001 0x00000b2e - O_INTOP(0x00000b2e)   // 2862 (2862)
0x0000099A: 0x8004            - O_JMP
0x0000099C: 0xC001 0x00000af4 - O_INTOP(0x00000af4)   // 2804 (2804)
0x000009A2: 0x80C7            - O_SCRIPT_ACTION
0x000009A4: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x000009AA: 0x8033            - O_EQUAL
0x000009AC: 0x802F            - O_IF
0x000009AE: 0x80B9            - O_SCRIPT_OVERRIDES
0x000009B0: 0xC001 0x000009fe - O_INTOP(0x000009fe)   // 2558 (2558)
0x000009B6: 0x80FA            - O_ACTION_BEING_USED
0x000009B8: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x000009BE: 0x8033            - O_EQUAL
0x000009C0: 0x802F            - O_IF
0x000009C2: 0xC001 0x000009ee - O_INTOP(0x000009ee)   // 2542 (2542)
0x000009C8: 0x80BF            - O_DUDE_OBJ
0x000009CA: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x000009D0: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x000009D6: 0x8046            - O_NEGATE
0x000009D8: 0x80AC            - O_ROLL_VS_SKILL
0x000009DA: 0x80AF            - O_IS_SUCCESS
0x000009DC: 0x802F            - O_IF
0x000009DE: 0x9001 0x00000034 - O_STRINGOP(0x00000034)   // 52 (52)
0x000009E4: 0x80B8            - O_DISPLAY_MSG
0x000009E6: 0xC001 0x000009f6 - O_INTOP(0x000009f6)   // 2550 (2550)
0x000009EC: 0x8004            - O_JMP
0x000009EE: 0x9001 0x0000005e - O_STRINGOP(0x0000005e)   // 94 (94)
0x000009F4: 0x80B8            - O_DISPLAY_MSG
0x000009F6: 0xC001 0x00000aea - O_INTOP(0x00000aea)   // 2794 (2794)
0x000009FC: 0x8004            - O_JMP
0x000009FE: 0xC001 0x00000ae2 - O_INTOP(0x00000ae2)   // 2786 (2786)
0x00000A04: 0x80FA            - O_ACTION_BEING_USED
0x00000A06: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00000A0C: 0x8033            - O_EQUAL
0x00000A0E: 0x802F            - O_IF
0x00000A10: 0xC001 0x00000ad0 - O_INTOP(0x00000ad0)   // 2768 (2768)
0x00000A16: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000A1C: 0x8012            - O_FETCH_GLOBAL
0x00000A1E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A24: 0x8033            - O_EQUAL
0x00000A26: 0x802F            - O_IF
0x00000A28: 0xC001 0x00000a90 - O_INTOP(0x00000a90)   // 2704 (2704)
0x00000A2E: 0x80BF            - O_DUDE_OBJ
0x00000A30: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00000A36: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A3C: 0x80AC            - O_ROLL_VS_SKILL
0x00000A3E: 0x80AF            - O_IS_SUCCESS
0x00000A40: 0x802F            - O_IF
0x00000A42: 0x9001 0x000000c0 - O_STRINGOP(0x000000c0)   // 192 (192)
0x00000A48: 0x80B8            - O_DISPLAY_MSG
0x00000A4A: 0xC001 0x0000001e - O_INTOP(0x0000001e)   // 30 (30)
0x00000A50: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A56: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A5C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000A62: 0x8046            - O_NEGATE
0x00000A64: 0x80B7            - O_CREATE_OBJECT_SID
0x00000A66: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000A6C: 0x8013            - O_STORE_GLOBAL
0x00000A6E: 0x80BF            - O_DUDE_OBJ
0x00000A70: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000A76: 0x8012            - O_FETCH_GLOBAL
0x00000A78: 0x80D8            - O_ADD_OBJ_TO_INVEN
0x00000A7A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000A80: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000A86: 0x8013            - O_STORE_GLOBAL
0x00000A88: 0xC001 0x00000ac8 - O_INTOP(0x00000ac8)   // 2760 (2760)
0x00000A8E: 0x8004            - O_JMP
0x00000A90: 0x9001 0x000000f4 - O_STRINGOP(0x000000f4)   // 244 (244)
0x00000A96: 0x80B8            - O_DISPLAY_MSG
0x00000A98: 0x80BF            - O_DUDE_OBJ
0x00000A9A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000AA0: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000AA6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000AAC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000AB2: 0xC001 0x00007530 - O_INTOP(0x00007530)   // 30000 (30000)
0x00000AB8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000ABE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000AC4: 0x80D0            - O_ATTACK_COMPLEX
0x00000AC6: 0x800F            - O_DETACH
0x00000AC8: 0xC001 0x00000ada - O_INTOP(0x00000ada)   // 2778 (2778)
0x00000ACE: 0x8004            - O_JMP
0x00000AD0: 0x9001 0x0000010e - O_STRINGOP(0x0000010e)   // 270 (270)
0x00000AD6: 0x80B8            - O_DISPLAY_MSG
0x00000AD8: 0x800F            - O_DETACH
0x00000ADA: 0xC001 0x00000aea - O_INTOP(0x00000aea)   // 2794 (2794)
0x00000AE0: 0x8004            - O_JMP
0x00000AE2: 0x9001 0x00000134 - O_STRINGOP(0x00000134)   // 308 (308)
0x00000AE8: 0x80B8            - O_DISPLAY_MSG
0x00000AEA: 0x800F            - O_DETACH
0x00000AEC: 0xC001 0x00000b2e - O_INTOP(0x00000b2e)   // 2862 (2862)
0x00000AF2: 0x8004            - O_JMP
0x00000AF4: 0xC001 0x00000b10 - O_INTOP(0x00000b10)   // 2832 (2832)
0x00000AFA: 0x80C7            - O_SCRIPT_ACTION
0x00000AFC: 0xC001 0x0000000d - O_INTOP(0x0000000d)   // 13 (13)
0x00000B02: 0x8033            - O_EQUAL
0x00000B04: 0x802F            - O_IF
0x00000B06: 0x800F            - O_DETACH
0x00000B08: 0xC001 0x00000b2e - O_INTOP(0x00000b2e)   // 2862 (2862)
0x00000B0E: 0x8004            - O_JMP
0x00000B10: 0xC001 0x00000b2e - O_INTOP(0x00000b2e)   // 2862 (2862)
0x00000B16: 0x80C7            - O_SCRIPT_ACTION
0x00000B18: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x00000B1E: 0x8033            - O_EQUAL
0x00000B20: 0x802F            - O_IF
0x00000B22: 0x80B9            - O_SCRIPT_OVERRIDES
0x00000B24: 0x9001 0x00000150 - O_STRINGOP(0x00000150)   // 336 (336)
0x00000B2A: 0x80B8            - O_DISPLAY_MSG
0x00000B2C: 0x800F            - O_DETACH
0x00000B2E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000B34: 0x800D            - O_D_TO_A
0x00000B36: 0x8019            - O_SWAPA
0x00000B38: 0x802A            - O_POP_TO_BASE
0x00000B3A: 0x8029            - O_POP_BASE
0x00000B3C: 0x800C            - O_A_TO_D
0x00000B3E: 0x801C            - O_POP_RETURN
0x00000B40: 0x802A            - O_POP_TO_BASE
0x00000B42: 0x8029            - O_POP_BASE
0x00000B44: 0x801C            - O_POP_RETURN

2: do_dialogue (0x00000b46)
===============================
0x00000B46: 0x802B            - O_PUSH_BASE
0x00000B48: 0x80BC            - O_SELF_OBJ
0x00000B4A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000B50: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000B56: 0x8046            - O_NEGATE
0x00000B58: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000B5E: 0x8046            - O_NEGATE
0x00000B60: 0x80DE            - O_START_GDIALOG
0x00000B62: 0x804E            - O_SAYSTART
0x00000B64: 0xC001 0x00000b7a - O_INTOP(0x00000b7a)   // 2938 (2938)
0x00000B6A: 0x800D            - O_D_TO_A
0x00000B6C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000B72: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000B78: 0x8005            - O_CALL
0x00000B7A: 0x801A            - O_POP
0x00000B7C: 0x804D            - O_SAYEND
0x00000B7E: 0x80DF            - O_END_DIALOGUE
0x00000B80: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000B86: 0x800D            - O_D_TO_A
0x00000B88: 0x8019            - O_SWAPA
0x00000B8A: 0x802A            - O_POP_TO_BASE
0x00000B8C: 0x8029            - O_POP_BASE
0x00000B8E: 0x800C            - O_A_TO_D
0x00000B90: 0x801C            - O_POP_RETURN
0x00000B92: 0x802A            - O_POP_TO_BASE
0x00000B94: 0x8029            - O_POP_BASE
0x00000B96: 0x801C            - O_POP_RETURN

3: guard00 (0x00000b98)
===============================
0x00000B98: 0x802B            - O_PUSH_BASE
0x00000B9A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000BA0: 0x9001 0x0000016a - O_STRINGOP(0x0000016a)   // 362 (362)
0x00000BA6: 0x8052            - O_SAYREPLY
0x00000BA8: 0xC001 0x00000bd0 - O_INTOP(0x00000bd0)   // 3024 (3024)
0x00000BAE: 0x80BF            - O_DUDE_OBJ
0x00000BB0: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000BB6: 0x80CA            - O_GET_CRITTER_STAT
0x00000BB8: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000BBE: 0x8036            - O_GREATER_EQUAL
0x00000BC0: 0x802F            - O_IF
0x00000BC2: 0x9001 0x00000196 - O_STRINGOP(0x00000196)   // 406 (406)
0x00000BC8: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000BCE: 0x8053            - O_SAYOPTION
0x00000BD0: 0xC001 0x00000c38 - O_INTOP(0x00000c38)   // 3128 (3128)
0x00000BD6: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000BDC: 0x8012            - O_FETCH_GLOBAL
0x00000BDE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000BE4: 0x8033            - O_EQUAL
0x00000BE6: 0x802F            - O_IF
0x00000BE8: 0xC001 0x00000c10 - O_INTOP(0x00000c10)   // 3088 (3088)
0x00000BEE: 0x80BF            - O_DUDE_OBJ
0x00000BF0: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000BF6: 0x80CA            - O_GET_CRITTER_STAT
0x00000BF8: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000BFE: 0x8036            - O_GREATER_EQUAL
0x00000C00: 0x802F            - O_IF
0x00000C02: 0x9001 0x000001b2 - O_STRINGOP(0x000001b2)   // 434 (434)
0x00000C08: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000C0E: 0x8053            - O_SAYOPTION
0x00000C10: 0xC001 0x00000c38 - O_INTOP(0x00000c38)   // 3128 (3128)
0x00000C16: 0x80BF            - O_DUDE_OBJ
0x00000C18: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000C1E: 0x80CA            - O_GET_CRITTER_STAT
0x00000C20: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000C26: 0x8036            - O_GREATER_EQUAL
0x00000C28: 0x802F            - O_IF
0x00000C2A: 0x9001 0x000001d2 - O_STRINGOP(0x000001d2)   // 466 (466)
0x00000C30: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000C36: 0x8053            - O_SAYOPTION
0x00000C38: 0xC001 0x00000c60 - O_INTOP(0x00000c60)   // 3168 (3168)
0x00000C3E: 0x80BF            - O_DUDE_OBJ
0x00000C40: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000C46: 0x80CA            - O_GET_CRITTER_STAT
0x00000C48: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000C4E: 0x8036            - O_GREATER_EQUAL
0x00000C50: 0x802F            - O_IF
0x00000C52: 0x9001 0x00000200 - O_STRINGOP(0x00000200)   // 512 (512)
0x00000C58: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00000C5E: 0x8053            - O_SAYOPTION
0x00000C60: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000C66: 0x800D            - O_D_TO_A
0x00000C68: 0x8019            - O_SWAPA
0x00000C6A: 0x802A            - O_POP_TO_BASE
0x00000C6C: 0x8029            - O_POP_BASE
0x00000C6E: 0x800C            - O_A_TO_D
0x00000C70: 0x801C            - O_POP_RETURN
0x00000C72: 0x802A            - O_POP_TO_BASE
0x00000C74: 0x8029            - O_POP_BASE
0x00000C76: 0x801C            - O_POP_RETURN

4: guard00a (0x00000c78)
===============================
0x00000C78: 0x802B            - O_PUSH_BASE
0x00000C7A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000C80: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000C86: 0x8013            - O_STORE_GLOBAL
0x00000C88: 0xC001 0x00000cc2 - O_INTOP(0x00000cc2)   // 3266 (3266)
0x00000C8E: 0x80BF            - O_DUDE_OBJ
0x00000C90: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x00000C96: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000C9C: 0x80AC            - O_ROLL_VS_SKILL
0x00000C9E: 0x80AF            - O_IS_SUCCESS
0x00000CA0: 0x802F            - O_IF
0x00000CA2: 0xC001 0x00000cb8 - O_INTOP(0x00000cb8)   // 3256 (3256)
0x00000CA8: 0x800D            - O_D_TO_A
0x00000CAA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000CB0: 0xC001 0x00000007 - O_INTOP(0x00000007)   // 7 (7)
0x00000CB6: 0x8005            - O_CALL
0x00000CB8: 0x801A            - O_POP
0x00000CBA: 0xC001 0x00000cda - O_INTOP(0x00000cda)   // 3290 (3290)
0x00000CC0: 0x8004            - O_JMP
0x00000CC2: 0xC001 0x00000cd8 - O_INTOP(0x00000cd8)   // 3288 (3288)
0x00000CC8: 0x800D            - O_D_TO_A
0x00000CCA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000CD0: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x00000CD6: 0x8005            - O_CALL
0x00000CD8: 0x801A            - O_POP
0x00000CDA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000CE0: 0x800D            - O_D_TO_A
0x00000CE2: 0x8019            - O_SWAPA
0x00000CE4: 0x802A            - O_POP_TO_BASE
0x00000CE6: 0x8029            - O_POP_BASE
0x00000CE8: 0x800C            - O_A_TO_D
0x00000CEA: 0x801C            - O_POP_RETURN
0x00000CEC: 0x802A            - O_POP_TO_BASE
0x00000CEE: 0x8029            - O_POP_BASE
0x00000CF0: 0x801C            - O_POP_RETURN

5: guard01 (0x00000cf2)
===============================
0x00000CF2: 0x802B            - O_PUSH_BASE
0x00000CF4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000CFA: 0x9001 0x00000220 - O_STRINGOP(0x00000220)   // 544 (544)
0x00000D00: 0x8052            - O_SAYREPLY
0x00000D02: 0xC001 0x00000d2a - O_INTOP(0x00000d2a)   // 3370 (3370)
0x00000D08: 0x80BF            - O_DUDE_OBJ
0x00000D0A: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000D10: 0x80CA            - O_GET_CRITTER_STAT
0x00000D12: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000D18: 0x8036            - O_GREATER_EQUAL
0x00000D1A: 0x802F            - O_IF
0x00000D1C: 0x9001 0x000002de - O_STRINGOP(0x000002de)   // 734 (734)
0x00000D22: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000D28: 0x8053            - O_SAYOPTION
0x00000D2A: 0xC001 0x00000d52 - O_INTOP(0x00000d52)   // 3410 (3410)
0x00000D30: 0x80BF            - O_DUDE_OBJ
0x00000D32: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000D38: 0x80CA            - O_GET_CRITTER_STAT
0x00000D3A: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000D40: 0x8036            - O_GREATER_EQUAL
0x00000D42: 0x802F            - O_IF
0x00000D44: 0x9001 0x00000304 - O_STRINGOP(0x00000304)   // 772 (772)
0x00000D4A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000D50: 0x8053            - O_SAYOPTION
0x00000D52: 0xC001 0x00000d7a - O_INTOP(0x00000d7a)   // 3450 (3450)
0x00000D58: 0x80BF            - O_DUDE_OBJ
0x00000D5A: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000D60: 0x80CA            - O_GET_CRITTER_STAT
0x00000D62: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000D68: 0x8036            - O_GREATER_EQUAL
0x00000D6A: 0x802F            - O_IF
0x00000D6C: 0x9001 0x0000032a - O_STRINGOP(0x0000032a)   // 810 (810)
0x00000D72: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00000D78: 0x8053            - O_SAYOPTION
0x00000D7A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D80: 0x800D            - O_D_TO_A
0x00000D82: 0x8019            - O_SWAPA
0x00000D84: 0x802A            - O_POP_TO_BASE
0x00000D86: 0x8029            - O_POP_BASE
0x00000D88: 0x800C            - O_A_TO_D
0x00000D8A: 0x801C            - O_POP_RETURN
0x00000D8C: 0x802A            - O_POP_TO_BASE
0x00000D8E: 0x8029            - O_POP_BASE
0x00000D90: 0x801C            - O_POP_RETURN

6: guard02 (0x00000d92)
===============================
0x00000D92: 0x802B            - O_PUSH_BASE
0x00000D94: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D9A: 0x9001 0x00000342 - O_STRINGOP(0x00000342)   // 834 (834)
0x00000DA0: 0x8052            - O_SAYREPLY
0x00000DA2: 0xC001 0x00000dca - O_INTOP(0x00000dca)   // 3530 (3530)
0x00000DA8: 0x80BF            - O_DUDE_OBJ
0x00000DAA: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000DB0: 0x80CA            - O_GET_CRITTER_STAT
0x00000DB2: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000DB8: 0x8036            - O_GREATER_EQUAL
0x00000DBA: 0x802F            - O_IF
0x00000DBC: 0x9001 0x000003ca - O_STRINGOP(0x000003ca)   // 970 (970)
0x00000DC2: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00000DC8: 0x8053            - O_SAYOPTION
0x00000DCA: 0xC001 0x00000df2 - O_INTOP(0x00000df2)   // 3570 (3570)
0x00000DD0: 0x80BF            - O_DUDE_OBJ
0x00000DD2: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000DD8: 0x80CA            - O_GET_CRITTER_STAT
0x00000DDA: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00000DE0: 0x8036            - O_GREATER_EQUAL
0x00000DE2: 0x802F            - O_IF
0x00000DE4: 0x9001 0x000003e8 - O_STRINGOP(0x000003e8)   // 1000 (1000)
0x00000DEA: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00000DF0: 0x8053            - O_SAYOPTION
0x00000DF2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000DF8: 0x800D            - O_D_TO_A
0x00000DFA: 0x8019            - O_SWAPA
0x00000DFC: 0x802A            - O_POP_TO_BASE
0x00000DFE: 0x8029            - O_POP_BASE
0x00000E00: 0x800C            - O_A_TO_D
0x00000E02: 0x801C            - O_POP_RETURN
0x00000E04: 0x802A            - O_POP_TO_BASE
0x00000E06: 0x8029            - O_POP_BASE
0x00000E08: 0x801C            - O_POP_RETURN

7: guard03 (0x00000e0a)
===============================
0x00000E0A: 0x802B            - O_PUSH_BASE
0x00000E0C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E12: 0x9001 0x00000402 - O_STRINGOP(0x00000402)   // 1026 (1026)
0x00000E18: 0x8054            - O_SAYMESSAGE
0x00000E1A: 0xC001 0x0000001e - O_INTOP(0x0000001e)   // 30 (30)
0x00000E20: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E26: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E2C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000E32: 0x8046            - O_NEGATE
0x00000E34: 0x80B7            - O_CREATE_OBJECT_SID
0x00000E36: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000E3C: 0x8013            - O_STORE_GLOBAL
0x00000E3E: 0x80BF            - O_DUDE_OBJ
0x00000E40: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000E46: 0x8012            - O_FETCH_GLOBAL
0x00000E48: 0x80D8            - O_ADD_OBJ_TO_INVEN
0x00000E4A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E50: 0x800D            - O_D_TO_A
0x00000E52: 0x8019            - O_SWAPA
0x00000E54: 0x802A            - O_POP_TO_BASE
0x00000E56: 0x8029            - O_POP_BASE
0x00000E58: 0x800C            - O_A_TO_D
0x00000E5A: 0x801C            - O_POP_RETURN
0x00000E5C: 0x802A            - O_POP_TO_BASE
0x00000E5E: 0x8029            - O_POP_BASE
0x00000E60: 0x801C            - O_POP_RETURN

8: guard04 (0x00000e62)
===============================
0x00000E62: 0x802B            - O_PUSH_BASE
0x00000E64: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E6A: 0x9001 0x00000428 - O_STRINGOP(0x00000428)   // 1064 (1064)
0x00000E70: 0x8054            - O_SAYMESSAGE
0x00000E72: 0x80BC            - O_SELF_OBJ
0x00000E74: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000E7A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000E80: 0x80F0            - O_ADD_TIMER_EVENT
0x00000E82: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E88: 0x800D            - O_D_TO_A
0x00000E8A: 0x8019            - O_SWAPA
0x00000E8C: 0x802A            - O_POP_TO_BASE
0x00000E8E: 0x8029            - O_POP_BASE
0x00000E90: 0x800C            - O_A_TO_D
0x00000E92: 0x801C            - O_POP_RETURN
0x00000E94: 0x802A            - O_POP_TO_BASE
0x00000E96: 0x8029            - O_POP_BASE
0x00000E98: 0x801C            - O_POP_RETURN

9: guard05 (0x00000e9a)
===============================
0x00000E9A: 0x802B            - O_PUSH_BASE
0x00000E9C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000EA2: 0x9001 0x00000444 - O_STRINGOP(0x00000444)   // 1092 (1092)
0x00000EA8: 0x8054            - O_SAYMESSAGE
0x00000EAA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000EB0: 0x800D            - O_D_TO_A
0x00000EB2: 0x8019            - O_SWAPA
0x00000EB4: 0x802A            - O_POP_TO_BASE
0x00000EB6: 0x8029            - O_POP_BASE
0x00000EB8: 0x800C            - O_A_TO_D
0x00000EBA: 0x801C            - O_POP_RETURN
0x00000EBC: 0x802A            - O_POP_TO_BASE
0x00000EBE: 0x8029            - O_POP_BASE
0x00000EC0: 0x801C            - O_POP_RETURN

10: guard06 (0x00000ec2)
===============================
0x00000EC2: 0x802B            - O_PUSH_BASE
0x00000EC4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000ECA: 0x9001 0x000004c4 - O_STRINGOP(0x000004c4)   // 1220 (1220)
0x00000ED0: 0x8054            - O_SAYMESSAGE
0x00000ED2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000ED8: 0x800D            - O_D_TO_A
0x00000EDA: 0x8019            - O_SWAPA
0x00000EDC: 0x802A            - O_POP_TO_BASE
0x00000EDE: 0x8029            - O_POP_BASE
0x00000EE0: 0x800C            - O_A_TO_D
0x00000EE2: 0x801C            - O_POP_RETURN
0x00000EE4: 0x802A            - O_POP_TO_BASE
0x00000EE6: 0x8029            - O_POP_BASE
0x00000EE8: 0x801C            - O_POP_RETURN

11: guard07 (0x00000eea)
===============================
0x00000EEA: 0x802B            - O_PUSH_BASE
0x00000EEC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000EF2: 0x9001 0x0000050e - O_STRINGOP(0x0000050e)   // 1294 (1294)
0x00000EF8: 0x8054            - O_SAYMESSAGE
0x00000EFA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F00: 0x9001 0x0000060a - O_STRINGOP(0x0000060a)   // 1546 (1546)
0x00000F06: 0x8054            - O_SAYMESSAGE
0x00000F08: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F0E: 0x800D            - O_D_TO_A
0x00000F10: 0x8019            - O_SWAPA
0x00000F12: 0x802A            - O_POP_TO_BASE
0x00000F14: 0x8029            - O_POP_BASE
0x00000F16: 0x800C            - O_A_TO_D
0x00000F18: 0x801C            - O_POP_RETURN
0x00000F1A: 0x802A            - O_POP_TO_BASE
0x00000F1C: 0x8029            - O_POP_BASE
0x00000F1E: 0x801C            - O_POP_RETURN

12: guardend (0x00000f20)
===============================
0x00000F20: 0x802B            - O_PUSH_BASE
0x00000F22: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F28: 0x800D            - O_D_TO_A
0x00000F2A: 0x8019            - O_SWAPA
0x00000F2C: 0x802A            - O_POP_TO_BASE
0x00000F2E: 0x8029            - O_POP_BASE
0x00000F30: 0x800C            - O_A_TO_D
0x00000F32: 0x801C            - O_POP_RETURN
0x00000F34: 0x802A            - O_POP_TO_BASE
0x00000F36: 0x8029            - O_POP_BASE
0x00000F38: 0x801C            - O_POP_RETURN

