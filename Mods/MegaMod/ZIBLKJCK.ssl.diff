diff --git a/Mods/MegaMod/Original/ZIBLKJCK.ssl b/Mods/MegaMod/ReDefine/ZIBLKJCK.ssl
index 57dc239..0d1ae87 100644
--- a/Mods/MegaMod/Original/ZIBLKJCK.ssl
+++ b/Mods/MegaMod/ReDefine/ZIBLKJCK.ssl
@@ -164,10 +164,10 @@ procedure look_at_p_proc
 begin
     script_overrides;
     if (obj_type(self_obj) == 1) then begin
-        display_msg(message_str(70, 101));
+        display_mstr(101);
     end
     else begin
-        display_msg(message_str(70, 100));
+        display_mstr(100);
     end
 end
 
@@ -175,10 +175,10 @@ procedure description_p_proc
 begin
     script_overrides;
     if (obj_type(self_obj) == 1) then begin
-        display_msg(message_str(70, 101));
+        display_mstr(101);
     end
     else begin
-        display_msg(message_str(70, 110) + 20 + message_str(70, 111));
+        display_msg(mstr(110) + 20 + mstr(111));
     end
 end
 
@@ -194,10 +194,10 @@ begin
             if (anim_busy(self_obj) == 0) then begin
                 if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                     if (anim_busy(self_obj) == 0) then begin
-                        global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
+                        global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                         animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                         global_temp := (global_temp + 1) % 6;
-                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
+                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                             debug_msg("flee loop: rot == " + global_temp);
                             animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                             global_temp := (global_temp + 1) % 6;
@@ -207,7 +207,7 @@ begin
             end
         end
         else begin
-            attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
+            attack(dude_obj);
         end
     end
 end
@@ -229,16 +229,16 @@ begin
         start_gdialog(70, self_obj, 4, -1, -1);
         gsay_start;
         if (((local_var(1) > 0) or (0 == 0)) == 0) then begin
-            gsay_reply(70, message_str(70, 102) + 20 + message_str(70, 103));
-            giq_option(4, 70, 104, Node001, 50);
-            giq_option(4, 70, 105, Node999, 50);
-            giq_option(-3, 70, 106, Node999, 50);
+            Reply(mstr(102) + 20 + mstr(103));
+            giq_option(4, NAME, 104, Node001, NEUTRAL_REACTION);
+            giq_option(4, NAME, 105, Node999, NEUTRAL_REACTION);
+            giq_option(-3, NAME, 106, Node999, NEUTRAL_REACTION);
         end
         else begin
-            gsay_reply(70, 129);
-            giq_option(1, 70, 127, Node999, 50);
+            Reply(129);
+            giq_option(1, NAME, 127, Node999, NEUTRAL_REACTION);
             if ((local_var(1) > 0) or (0 == 0)) then begin
-                giq_option(1, 70, 128, Node998, 50);
+                giq_option(1, NAME, 128, Node998, NEUTRAL_REACTION);
             end
         end
         gsay_end;
@@ -246,7 +246,7 @@ begin
     end
     else begin
         if (obj_type(self_obj) == 1) then begin
-            float_msg(self_obj, message_str(70, 129), 8);
+            float_msg(self_obj, mstr(129), FLOAT_MSG_YELLOW);
         end
     end
 end
@@ -265,7 +265,7 @@ begin
         call Node002();
     end
     else begin
-        gsay_reply(70, 107);
+        Reply(107);
     end
 end
 
@@ -282,7 +282,7 @@ begin
     variable LVar1 := 0;
     LVar0 := PrintDrawCardMessages(0, player_1_card, player_2_card, player_3_card, player_hand_total) + "  " + PrintDrawCardMessages(1, dealer_1_card, dealer_2_card, dealer_3_card, dealer_hand_total) + "  ";
     if ((player_hand_total == dealer_hand_total) or ((player_hand_total > 21) and (dealer_hand_total > 21))) then begin
-        gsay_reply(70, LVar0 + message_str(70, 126));
+        Reply(LVar0 + mstr(126));
     end
     else begin
         if ((player_hand_total > dealer_hand_total) or (dealer_hand_total > 21) and (player_hand_total <= 21)) then begin
@@ -294,29 +294,29 @@ begin
             end
             set_local_var(1, local_var(1) + LVar1);
             item_caps_adjust(dude_obj, LVar1);
-            gsay_reply(70, LVar0 + message_str(70, 131) + LVar1 + message_str(70, 132));
+            Reply(LVar0 + mstr(131) + LVar1 + mstr(132));
         end
         else begin
             set_local_var(1, local_var(1) + -20);
             item_caps_adjust(dude_obj, -20);
-            gsay_reply(70, LVar0 + message_str(70, 125));
+            Reply(LVar0 + mstr(125));
         end
     end
-    giq_option(1, 70, 121, Node006, 50);
+    giq_option(1, NAME, 121, Node006, NEUTRAL_REACTION);
 end
 
 procedure Node006
 begin
     if ((local_var(1) > 0) or (0 == 0)) then begin
         play_sfx("shuffle");
-        gsay_reply(70, 122);
-        giq_option(1, 70, 104, Node001, 50);
-        giq_option(1, 70, 105, Node999, 50);
+        Reply(122);
+        giq_option(1, NAME, 104, Node001, NEUTRAL_REACTION);
+        giq_option(1, NAME, 105, Node999, NEUTRAL_REACTION);
     end
     else begin
-        gsay_reply(70, 123);
-        giq_option(1, 70, 127, Node999, 50);
-        giq_option(1, 70, 128, Node998, 50);
+        Reply(123);
+        giq_option(1, NAME, 127, Node999, NEUTRAL_REACTION);
+        giq_option(1, NAME, 128, Node998, NEUTRAL_REACTION);
     end
 end
 
@@ -444,30 +444,29 @@ procedure PrintDrawCardMessages(variable arg0, variable arg1, variable arg2, var
 begin
     variable LVar5 := 0;
     variable LVar6 := 0;
-    LVar5 := message_str(70, 200 + (arg1 - (((((arg1 > ((13 * 1) - 13)) and (arg1 <= (13 * 1))) * 1) + (((arg1 > ((13 * 2) - 13)) and (arg1 <= (13 * 2))) * 2) + (((arg1 > ((13 * 3) - 13)) and (arg1 <= (13 * 3))) * 3) + (((arg1 > ((13 * 4) - 13)) and (arg1 <= (13 * 4))) * 4) - 1) * 13))) + message_str(70, 113) + message_str(70, 250 + ((((arg1 > ((13 * 1) - 13)) and (arg1 <= (13 * 1))) * 1) + (((arg1 > ((13 * 2) - 13)) and (arg1 <= (13 * 2))) * 2) + (((arg1 > ((13 * 3) - 13)) and (arg1 <= (13 * 3))) * 3) + (((arg1 > ((13 * 4) - 13)) and (arg1 <= (13 * 4))) * 4)));
+    LVar5 := mstr(200 + (arg1 - (((((arg1 > ((13 * 1) - 13)) and (arg1 <= (13 * 1))) * 1) + (((arg1 > ((13 * 2) - 13)) and (arg1 <= (13 * 2))) * 2) + (((arg1 > ((13 * 3) - 13)) and (arg1 <= (13 * 3))) * 3) + (((arg1 > ((13 * 4) - 13)) and (arg1 <= (13 * 4))) * 4) - 1) * 13))) + mstr(113) + mstr(250 + ((((arg1 > ((13 * 1) - 13)) and (arg1 <= (13 * 1))) * 1) + (((arg1 > ((13 * 2) - 13)) and (arg1 <= (13 * 2))) * 2) + (((arg1 > ((13 * 3) - 13)) and (arg1 <= (13 * 3))) * 3) + (((arg1 > ((13 * 4) - 13)) and (arg1 <= (13 * 4))) * 4)));
     if (arg3 == 0) then begin
         LVar6 := arg2;
     end
     else begin
-        LVar5 := LVar5 + (message_str(70, 114) + message_str(70, 200 + (arg2 - (((((arg2 > ((13 * 1) - 13)) and (arg2 <= (13 * 1))) * 1) + (((arg2 > ((13 * 2) - 13)) and (arg2 <= (13 * 2))) * 2) + (((arg2 > ((13 * 3) - 13)) and (arg2 <= (13 * 3))) * 3) + (((arg2 > ((13 * 4) - 13)) and (arg2 <= (13 * 4))) * 4) - 1) * 13))) + message_str(70, 113) + message_str(70, 250 + ((((arg2 > ((13 * 1) - 13)) and (arg2 <= (13 * 1))) * 1) + (((arg2 > ((13 * 2) - 13)) and (arg2 <= (13 * 2))) * 2) + (((arg2 > ((13 * 3) - 13)) and (arg2 <= (13 * 3))) * 3) + (((arg2 > ((13 * 4) - 13)) and (arg2 <= (13 * 4))) * 4))));
+        LVar5 := LVar5 + (mstr(114) + mstr(200 + (arg2 - (((((arg2 > ((13 * 1) - 13)) and (arg2 <= (13 * 1))) * 1) + (((arg2 > ((13 * 2) - 13)) and (arg2 <= (13 * 2))) * 2) + (((arg2 > ((13 * 3) - 13)) and (arg2 <= (13 * 3))) * 3) + (((arg2 > ((13 * 4) - 13)) and (arg2 <= (13 * 4))) * 4) - 1) * 13))) + mstr(113) + mstr(250 + ((((arg2 > ((13 * 1) - 13)) and (arg2 <= (13 * 1))) * 1) + (((arg2 > ((13 * 2) - 13)) and (arg2 <= (13 * 2))) * 2) + (((arg2 > ((13 * 3) - 13)) and (arg2 <= (13 * 3))) * 3) + (((arg2 > ((13 * 4) - 13)) and (arg2 <= (13 * 4))) * 4))));
         LVar6 := arg3;
     end
-    LVar5 := LVar5 + (message_str(70, 115) + message_str(70, 200 + (LVar6 - (((((LVar6 > ((13 * 1) - 13)) and (LVar6 <= (13 * 1))) * 1) + (((LVar6 > ((13 * 2) - 13)) and (LVar6 <= (13 * 2))) * 2) + (((LVar6 > ((13 * 3) - 13)) and (LVar6 <= (13 * 3))) * 3) + (((LVar6 > ((13 * 4) - 13)) and (LVar6 <= (13 * 4))) * 4) - 1) * 13))) + message_str(70, 113) + message_str(70, 250 + ((((LVar6 > ((13 * 1) - 13)) and (LVar6 <= (13 * 1))) * 1) + (((LVar6 > ((13 * 2) - 13)) and (LVar6 <= (13 * 2))) * 2) + (((LVar6 > ((13 * 3) - 13)) and (LVar6 <= (13 * 3))) * 3) + (((LVar6 > ((13 * 4) - 13)) and (LVar6 <= (13 * 4))) * 4))) + message_str(70, 116) + arg4);
+    LVar5 := LVar5 + (mstr(115) + mstr(200 + (LVar6 - (((((LVar6 > ((13 * 1) - 13)) and (LVar6 <= (13 * 1))) * 1) + (((LVar6 > ((13 * 2) - 13)) and (LVar6 <= (13 * 2))) * 2) + (((LVar6 > ((13 * 3) - 13)) and (LVar6 <= (13 * 3))) * 3) + (((LVar6 > ((13 * 4) - 13)) and (LVar6 <= (13 * 4))) * 4) - 1) * 13))) + mstr(113) + mstr(250 + ((((LVar6 > ((13 * 1) - 13)) and (LVar6 <= (13 * 1))) * 1) + (((LVar6 > ((13 * 2) - 13)) and (LVar6 <= (13 * 2))) * 2) + (((LVar6 > ((13 * 3) - 13)) and (LVar6 <= (13 * 3))) * 3) + (((LVar6 > ((13 * 4) - 13)) and (LVar6 <= (13 * 4))) * 4))) + mstr(116) + arg4);
     if ((arg4 == 21) and (arg3 == 0)) then begin
-        LVar5 := LVar5 + message_str(70, 117);
+        LVar5 := LVar5 + mstr(117);
     end
     else begin
         if (arg4 > 21) then begin
-            LVar5 := LVar5 + message_str(70, 118);
+            LVar5 := LVar5 + mstr(118);
         end
     end
-    LVar5 := LVar5 + message_str(70, 119);
+    LVar5 := LVar5 + mstr(119);
     if (arg0 == 0) then begin
-        LVar5 := message_str(70, 112) + LVar5;
+        LVar5 := mstr(112) + LVar5;
     end
     else begin
-        LVar5 := message_str(70, 120) + LVar5;
+        LVar5 := mstr(120) + LVar5;
     end
     return LVar5;
 end
-
