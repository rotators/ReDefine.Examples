Fallout script decompiler, version 8.4.6 (sfall edition)
Copyright (C) Anchorite (TeamX), 2005-2009
anchorite2001@yandex.ru
Continued by Nirran, phobos2077, Mr.Stalin (2014-2020)
Crossplatformed by alexeevdv (2015)
Loading file Mods/MegaMod/scripts/MAINBDOR.int...
  Read startup code
  Read procedures table
  Read namespace
  Read stringspace
  Read tail of startup code
    Check "Jump to 'start' procedure" / "Jump to end of statup code"
    Check "# of argument to 'start' procedure"
    Extract "Export var" section
    Extract "Set exported var values" section
    Extract "Export procedures" section
    Extract "Global variables" section
  Read procedure's bodies
    Procedure: 0
    Procedure: 1
    Procedure: 2
    Procedure: 3
    Procedure: 4
    Procedure: 5
    Procedure: 6
    Procedure: 7
    Procedure: 8
    Procedure: 9
    Procedure: 10
    Procedure: 11
    Procedure: 12
    Procedure: 13
    Procedure: 14
    Procedure: 15
    Procedure: 16
    Procedure: 17
    Procedure: 18
    Procedure: 19
    Procedure: 20
    Procedure: 21
    Procedure: 22
    Procedure: 23
    Procedure: 24
File Mods/MegaMod/scripts/MAINBDOR.int loaded successfuly

Decompiling...
  Init definitions
  Processing code
    Intial reducing
    Building execution tree
        Procedure: 0
        Procedure: 1
        Procedure: 2
        Procedure: 3
        Procedure: 4
        Procedure: 5
        Procedure: 6
        Procedure: 7
        Procedure: 8
        Procedure: 9
        Procedure: 10
        Procedure: 11
Error: Expression required for E84

============== Procedures table ==================

======== Procedure 0 ========
Name offset:       0x00000006
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000686
Number of args:    0x00000000  // 0

======== Procedure 1 ========
Name offset:       0x00000114
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000686
Number of args:    0x00000000  // 0

======== Procedure 2 ========
Name offset:       0x000001FC
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000C2A
Number of args:    0x00000000  // 0

======== Procedure 3 ========
Name offset:       0x00000204
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000C44
Number of args:    0x00000000  // 0

======== Procedure 4 ========
Name offset:       0x00000212
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000D42
Number of args:    0x00000000  // 0

======== Procedure 5 ========
Name offset:       0x00000224
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000D6E
Number of args:    0x00000000  // 0

======== Procedure 6 ========
Name offset:       0x0000023A
Type:              0x80000000  // ( )
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000000
Number of args:    0x00000000  // 0

======== Procedure 7 ========
Name offset:       0x00000250
Type:              0x80000000  // ( )
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000000
Number of args:    0x00000000  // 0

======== Procedure 8 ========
Name offset:       0x00000264
Type:              0x80000000  // ( )
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000000
Number of args:    0x00000000  // 0

======== Procedure 9 ========
Name offset:       0x00000274
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000D9A
Number of args:    0x00000000  // 0

======== Procedure 10 ========
Name offset:       0x00000288
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000DB4
Number of args:    0x00000000  // 0

======== Procedure 11 ========
Name offset:       0x0000029C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000DCE
Number of args:    0x00000000  // 0

======== Procedure 12 ========
Name offset:       0x000002AA
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000F22
Number of args:    0x00000000  // 0

======== Procedure 13 ========
Name offset:       0x000002B4
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000F6C
Number of args:    0x00000000  // 0

======== Procedure 14 ========
Name offset:       0x000002BE
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000100E
Number of args:    0x00000000  // 0

======== Procedure 15 ========
Name offset:       0x000002C8
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000010F6
Number of args:    0x00000000  // 0

======== Procedure 16 ========
Name offset:       0x000002D2
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000114E
Number of args:    0x00000000  // 0

======== Procedure 17 ========
Name offset:       0x000002DC
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001364
Number of args:    0x00000000  // 0

======== Procedure 18 ========
Name offset:       0x000002E6
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001430
Number of args:    0x00000000  // 0

======== Procedure 19 ========
Name offset:       0x000002F0
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000014BE
Number of args:    0x00000000  // 0

======== Procedure 20 ========
Name offset:       0x000002FA
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001550
Number of args:    0x00000000  // 0

======== Procedure 21 ========
Name offset:       0x00000304
Type:              0x80000000  // ( )
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000000
Number of args:    0x00000000  // 0

======== Procedure 22 ========
Name offset:       0x0000030E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000165A
Number of args:    0x00000000  // 0

======== Procedure 23 ========
Name offset:       0x00000318
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000016E2
Number of args:    0x00000000  // 0

======== Procedure 24 ========
Name offset:       0x00000324
Type:              0x80000000  // ( )
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000000
Number of args:    0x00000000  // 0



============== Namespace ==================
0x00000006: ".............."
0x00000018: "ProtoOfItemGiven"
0x0000002C: "ValueOfRollCheck"
0x00000040: "Scenery_Creation"
0x00000054: "Scenery_Creation_Hex"
0x0000006C: "Scenery_Creation_Count"
0x00000086: "Temp_Scenery_Creation_Hex"
0x000000A2: "Scenery_Creation_Ptr"
0x000000BA: "How_Many_Party_Members_Are_Injured"
0x000000E0: "How_Many_Party_Members_Armed"
0x00000100: "PartyHealingItem"
0x00000114: "checkPartyMembersNearDoor"
0x00000130: "global_temp"
0x0000013E: "dest_tile"
0x0000014A: "step_tile"
0x00000156: "in_dialog"
0x00000162: "forced_node"
0x00000170: "restock_amt"
0x0000017E: "restock_obj"
0x0000018C: "restock_trash"
0x0000019C: "removed_qty"
0x000001AA: "lmvar1"
0x000001B4: "lmvar2"
0x000001BE: "lmvar3"
0x000001C8: "lmvar4"
0x000001D2: "amove"
0x000001DA: "ticks"
0x000001E2: "lvar1"
0x000001EA: "z"
0x000001EE: "f"
0x000001F2: "my_form"
0x000001FC: "start"
0x00000204: "use_p_proc"
0x00000212: "look_at_p_proc"
0x00000224: "description_p_proc"
0x0000023A: "use_skill_on_p_proc"
0x00000250: "use_obj_on_p_proc"
0x00000264: "damage_p_proc"
0x00000274: "map_enter_p_proc"
0x00000288: "map_update_p_proc"
0x0000029C: "talk_p_proc"
0x000002AA: "node001"
0x000002B4: "Node002"
0x000002BE: "Node003"
0x000002C8: "Node004"
0x000002D2: "Node005"
0x000002DC: "Node006"
0x000002E6: "Node007"
0x000002F0: "Node008"
0x000002FA: "Node009"
0x00000304: "Node998"
0x0000030E: "Node999"
0x00000318: "NodeOpen"
0x00000324: "timed_event_p_proc"
==================
54 item(s)



============== Stringspace ==================
Empty


============== Global variables values ==================
0: O_INTOP(0x00000000)   // 0 (0)
1: O_INTOP(0x00000001)   // 1 (1)
2: O_INTOP(0x00000000)   // 0 (0)
3: O_INTOP(0x00000000)   // 0 (0)
4: O_INTOP(0x00000000)   // 0 (0)
5: O_INTOP(0x00000000)   // 0 (0)
6: O_INTOP(0x00000000)   // 0 (0)
7: O_INTOP(0x00000000)   // 0 (0)
8: O_INTOP(0x00000000)   // 0 (0)
9: O_INTOP(0x00000000)   // 0 (0)
10: O_INTOP(0x00000000)   // 0 (0)
11: O_INTOP(0x00000000)   // 0 (0)
12: O_INTOP(0x00000000)   // 0 (0)
13: O_INTOP(0x00000000)   // 0 (0)
14: O_INTOP(0x00000000)   // 0 (0)
15: O_INTOP(0x00000000)   // 0 (0)
16: O_INTOP(0x00000000)   // 0 (0)
17: O_INTOP(0x00000000)   // 0 (0)
18: O_INTOP(0x00000000)   // 0 (0)
19: O_INTOP(0x00000000)   // 0 (0)
20: O_INTOP(0x00000000)   // 0 (0)
21: O_INTOP(0x00000000)   // 0 (0)
22: O_INTOP(0x00000000)   // 0 (0)
23: O_INTOP(0x00000000)   // 0 (0)
24: O_INTOP(0x00000000)   // 0 (0)
25: O_INTOP(0x00000000)   // 0 (0)
26: O_INTOP(0x00000000)   // 0 (0)
27: O_INTOP(0x00000000)   // 0 (0)
28: O_INTOP(0x00000000)   // 0 (0)


============== Exported variables ==================
Not found


============== Procedures ==================

0: .............. (0x00000686)
===============================

1: checkPartyMembersNearDoor (0x00000686)
===============================
0x00000686: 0x802B            - O_PUSH_BASE
0x00000688: 0xC001 0x000006ce - O_INTOP(0x000006ce)   // 1742 (1742)
0x0000068E: 0xC001 0x0100003e - O_INTOP(0x0100003e)   // 16777278 (16777278)
0x00000694: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000696: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000069C: 0x8034            - O_NOT_EQUAL
0x0000069E: 0x802F            - O_IF
0x000006A0: 0xC001 0x000006ce - O_INTOP(0x000006ce)   // 1742 (1742)
0x000006A6: 0x80BC            - O_SELF_OBJ
0x000006A8: 0xC001 0x0100003e - O_INTOP(0x0100003e)   // 16777278 (16777278)
0x000006AE: 0x814B            - O_PARTY_MEMBER_OBJ
0x000006B0: 0x80D3            - O_TILE_DISTANCE_OBJS
0x000006B2: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000006B8: 0x8035            - O_LESS_EQUAL
0x000006BA: 0x802F            - O_IF
0x000006BC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000006C2: 0x800D            - O_D_TO_A
0x000006C4: 0x8019            - O_SWAPA
0x000006C6: 0x802A            - O_POP_TO_BASE
0x000006C8: 0x8029            - O_POP_BASE
0x000006CA: 0x800C            - O_A_TO_D
0x000006CC: 0x801C            - O_POP_RETURN
0x000006CE: 0xC001 0x00000714 - O_INTOP(0x00000714)   // 1812 (1812)
0x000006D4: 0xC001 0x010000a0 - O_INTOP(0x010000a0)   // 16777376 (16777376)
0x000006DA: 0x814B            - O_PARTY_MEMBER_OBJ
0x000006DC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000006E2: 0x8034            - O_NOT_EQUAL
0x000006E4: 0x802F            - O_IF
0x000006E6: 0xC001 0x00000714 - O_INTOP(0x00000714)   // 1812 (1812)
0x000006EC: 0x80BC            - O_SELF_OBJ
0x000006EE: 0xC001 0x010000a0 - O_INTOP(0x010000a0)   // 16777376 (16777376)
0x000006F4: 0x814B            - O_PARTY_MEMBER_OBJ
0x000006F6: 0x80D3            - O_TILE_DISTANCE_OBJS
0x000006F8: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000006FE: 0x8035            - O_LESS_EQUAL
0x00000700: 0x802F            - O_IF
0x00000702: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000708: 0x800D            - O_D_TO_A
0x0000070A: 0x8019            - O_SWAPA
0x0000070C: 0x802A            - O_POP_TO_BASE
0x0000070E: 0x8029            - O_POP_BASE
0x00000710: 0x800C            - O_A_TO_D
0x00000712: 0x801C            - O_POP_RETURN
0x00000714: 0xC001 0x0000075a - O_INTOP(0x0000075a)   // 1882 (1882)
0x0000071A: 0xC001 0x010000a1 - O_INTOP(0x010000a1)   // 16777377 (16777377)
0x00000720: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000722: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000728: 0x8034            - O_NOT_EQUAL
0x0000072A: 0x802F            - O_IF
0x0000072C: 0xC001 0x0000075a - O_INTOP(0x0000075a)   // 1882 (1882)
0x00000732: 0x80BC            - O_SELF_OBJ
0x00000734: 0xC001 0x010000a1 - O_INTOP(0x010000a1)   // 16777377 (16777377)
0x0000073A: 0x814B            - O_PARTY_MEMBER_OBJ
0x0000073C: 0x80D3            - O_TILE_DISTANCE_OBJS
0x0000073E: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000744: 0x8035            - O_LESS_EQUAL
0x00000746: 0x802F            - O_IF
0x00000748: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000074E: 0x800D            - O_D_TO_A
0x00000750: 0x8019            - O_SWAPA
0x00000752: 0x802A            - O_POP_TO_BASE
0x00000754: 0x8029            - O_POP_BASE
0x00000756: 0x800C            - O_A_TO_D
0x00000758: 0x801C            - O_POP_RETURN
0x0000075A: 0xC001 0x000007a0 - O_INTOP(0x000007a0)   // 1952 (1952)
0x00000760: 0xC001 0x01000059 - O_INTOP(0x01000059)   // 16777305 (16777305)
0x00000766: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000768: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000076E: 0x8034            - O_NOT_EQUAL
0x00000770: 0x802F            - O_IF
0x00000772: 0xC001 0x000007a0 - O_INTOP(0x000007a0)   // 1952 (1952)
0x00000778: 0x80BC            - O_SELF_OBJ
0x0000077A: 0xC001 0x01000059 - O_INTOP(0x01000059)   // 16777305 (16777305)
0x00000780: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000782: 0x80D3            - O_TILE_DISTANCE_OBJS
0x00000784: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x0000078A: 0x8035            - O_LESS_EQUAL
0x0000078C: 0x802F            - O_IF
0x0000078E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000794: 0x800D            - O_D_TO_A
0x00000796: 0x8019            - O_SWAPA
0x00000798: 0x802A            - O_POP_TO_BASE
0x0000079A: 0x8029            - O_POP_BASE
0x0000079C: 0x800C            - O_A_TO_D
0x0000079E: 0x801C            - O_POP_RETURN
0x000007A0: 0xC001 0x000007e6 - O_INTOP(0x000007e6)   // 2022 (2022)
0x000007A6: 0xC001 0x01000061 - O_INTOP(0x01000061)   // 16777313 (16777313)
0x000007AC: 0x814B            - O_PARTY_MEMBER_OBJ
0x000007AE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000007B4: 0x8034            - O_NOT_EQUAL
0x000007B6: 0x802F            - O_IF
0x000007B8: 0xC001 0x000007e6 - O_INTOP(0x000007e6)   // 2022 (2022)
0x000007BE: 0x80BC            - O_SELF_OBJ
0x000007C0: 0xC001 0x01000061 - O_INTOP(0x01000061)   // 16777313 (16777313)
0x000007C6: 0x814B            - O_PARTY_MEMBER_OBJ
0x000007C8: 0x80D3            - O_TILE_DISTANCE_OBJS
0x000007CA: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000007D0: 0x8035            - O_LESS_EQUAL
0x000007D2: 0x802F            - O_IF
0x000007D4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000007DA: 0x800D            - O_D_TO_A
0x000007DC: 0x8019            - O_SWAPA
0x000007DE: 0x802A            - O_POP_TO_BASE
0x000007E0: 0x8029            - O_POP_BASE
0x000007E2: 0x800C            - O_A_TO_D
0x000007E4: 0x801C            - O_POP_RETURN
0x000007E6: 0xC001 0x0000082c - O_INTOP(0x0000082c)   // 2092 (2092)
0x000007EC: 0xC001 0x0100006b - O_INTOP(0x0100006b)   // 16777323 (16777323)
0x000007F2: 0x814B            - O_PARTY_MEMBER_OBJ
0x000007F4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000007FA: 0x8034            - O_NOT_EQUAL
0x000007FC: 0x802F            - O_IF
0x000007FE: 0xC001 0x0000082c - O_INTOP(0x0000082c)   // 2092 (2092)
0x00000804: 0x80BC            - O_SELF_OBJ
0x00000806: 0xC001 0x0100006b - O_INTOP(0x0100006b)   // 16777323 (16777323)
0x0000080C: 0x814B            - O_PARTY_MEMBER_OBJ
0x0000080E: 0x80D3            - O_TILE_DISTANCE_OBJS
0x00000810: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000816: 0x8035            - O_LESS_EQUAL
0x00000818: 0x802F            - O_IF
0x0000081A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000820: 0x800D            - O_D_TO_A
0x00000822: 0x8019            - O_SWAPA
0x00000824: 0x802A            - O_POP_TO_BASE
0x00000826: 0x8029            - O_POP_BASE
0x00000828: 0x800C            - O_A_TO_D
0x0000082A: 0x801C            - O_POP_RETURN
0x0000082C: 0xC001 0x00000872 - O_INTOP(0x00000872)   // 2162 (2162)
0x00000832: 0xC001 0x01000088 - O_INTOP(0x01000088)   // 16777352 (16777352)
0x00000838: 0x814B            - O_PARTY_MEMBER_OBJ
0x0000083A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000840: 0x8034            - O_NOT_EQUAL
0x00000842: 0x802F            - O_IF
0x00000844: 0xC001 0x00000872 - O_INTOP(0x00000872)   // 2162 (2162)
0x0000084A: 0x80BC            - O_SELF_OBJ
0x0000084C: 0xC001 0x01000088 - O_INTOP(0x01000088)   // 16777352 (16777352)
0x00000852: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000854: 0x80D3            - O_TILE_DISTANCE_OBJS
0x00000856: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x0000085C: 0x8035            - O_LESS_EQUAL
0x0000085E: 0x802F            - O_IF
0x00000860: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000866: 0x800D            - O_D_TO_A
0x00000868: 0x8019            - O_SWAPA
0x0000086A: 0x802A            - O_POP_TO_BASE
0x0000086C: 0x8029            - O_POP_BASE
0x0000086E: 0x800C            - O_A_TO_D
0x00000870: 0x801C            - O_POP_RETURN
0x00000872: 0xC001 0x000008b8 - O_INTOP(0x000008b8)   // 2232 (2232)
0x00000878: 0xC001 0x010000a2 - O_INTOP(0x010000a2)   // 16777378 (16777378)
0x0000087E: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000880: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000886: 0x8034            - O_NOT_EQUAL
0x00000888: 0x802F            - O_IF
0x0000088A: 0xC001 0x000008b8 - O_INTOP(0x000008b8)   // 2232 (2232)
0x00000890: 0x80BC            - O_SELF_OBJ
0x00000892: 0xC001 0x010000a2 - O_INTOP(0x010000a2)   // 16777378 (16777378)
0x00000898: 0x814B            - O_PARTY_MEMBER_OBJ
0x0000089A: 0x80D3            - O_TILE_DISTANCE_OBJS
0x0000089C: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000008A2: 0x8035            - O_LESS_EQUAL
0x000008A4: 0x802F            - O_IF
0x000008A6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000008AC: 0x800D            - O_D_TO_A
0x000008AE: 0x8019            - O_SWAPA
0x000008B0: 0x802A            - O_POP_TO_BASE
0x000008B2: 0x8029            - O_POP_BASE
0x000008B4: 0x800C            - O_A_TO_D
0x000008B6: 0x801C            - O_POP_RETURN
0x000008B8: 0xC001 0x000008fe - O_INTOP(0x000008fe)   // 2302 (2302)
0x000008BE: 0xC001 0x01000098 - O_INTOP(0x01000098)   // 16777368 (16777368)
0x000008C4: 0x814B            - O_PARTY_MEMBER_OBJ
0x000008C6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000008CC: 0x8034            - O_NOT_EQUAL
0x000008CE: 0x802F            - O_IF
0x000008D0: 0xC001 0x000008fe - O_INTOP(0x000008fe)   // 2302 (2302)
0x000008D6: 0x80BC            - O_SELF_OBJ
0x000008D8: 0xC001 0x01000098 - O_INTOP(0x01000098)   // 16777368 (16777368)
0x000008DE: 0x814B            - O_PARTY_MEMBER_OBJ
0x000008E0: 0x80D3            - O_TILE_DISTANCE_OBJS
0x000008E2: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000008E8: 0x8035            - O_LESS_EQUAL
0x000008EA: 0x802F            - O_IF
0x000008EC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000008F2: 0x800D            - O_D_TO_A
0x000008F4: 0x8019            - O_SWAPA
0x000008F6: 0x802A            - O_POP_TO_BASE
0x000008F8: 0x8029            - O_POP_BASE
0x000008FA: 0x800C            - O_A_TO_D
0x000008FC: 0x801C            - O_POP_RETURN
0x000008FE: 0xC001 0x00000944 - O_INTOP(0x00000944)   // 2372 (2372)
0x00000904: 0xC001 0x010000a3 - O_INTOP(0x010000a3)   // 16777379 (16777379)
0x0000090A: 0x814B            - O_PARTY_MEMBER_OBJ
0x0000090C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000912: 0x8034            - O_NOT_EQUAL
0x00000914: 0x802F            - O_IF
0x00000916: 0xC001 0x00000944 - O_INTOP(0x00000944)   // 2372 (2372)
0x0000091C: 0x80BC            - O_SELF_OBJ
0x0000091E: 0xC001 0x010000a3 - O_INTOP(0x010000a3)   // 16777379 (16777379)
0x00000924: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000926: 0x80D3            - O_TILE_DISTANCE_OBJS
0x00000928: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x0000092E: 0x8035            - O_LESS_EQUAL
0x00000930: 0x802F            - O_IF
0x00000932: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000938: 0x800D            - O_D_TO_A
0x0000093A: 0x8019            - O_SWAPA
0x0000093C: 0x802A            - O_POP_TO_BASE
0x0000093E: 0x8029            - O_POP_BASE
0x00000940: 0x800C            - O_A_TO_D
0x00000942: 0x801C            - O_POP_RETURN
0x00000944: 0xC001 0x0000098a - O_INTOP(0x0000098a)   // 2442 (2442)
0x0000094A: 0xC001 0x010000a4 - O_INTOP(0x010000a4)   // 16777380 (16777380)
0x00000950: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000952: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000958: 0x8034            - O_NOT_EQUAL
0x0000095A: 0x802F            - O_IF
0x0000095C: 0xC001 0x0000098a - O_INTOP(0x0000098a)   // 2442 (2442)
0x00000962: 0x80BC            - O_SELF_OBJ
0x00000964: 0xC001 0x010000a4 - O_INTOP(0x010000a4)   // 16777380 (16777380)
0x0000096A: 0x814B            - O_PARTY_MEMBER_OBJ
0x0000096C: 0x80D3            - O_TILE_DISTANCE_OBJS
0x0000096E: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000974: 0x8035            - O_LESS_EQUAL
0x00000976: 0x802F            - O_IF
0x00000978: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000097E: 0x800D            - O_D_TO_A
0x00000980: 0x8019            - O_SWAPA
0x00000982: 0x802A            - O_POP_TO_BASE
0x00000984: 0x8029            - O_POP_BASE
0x00000986: 0x800C            - O_A_TO_D
0x00000988: 0x801C            - O_POP_RETURN
0x0000098A: 0xC001 0x000009d0 - O_INTOP(0x000009d0)   // 2512 (2512)
0x00000990: 0xC001 0x0100004f - O_INTOP(0x0100004f)   // 16777295 (16777295)
0x00000996: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000998: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000099E: 0x8034            - O_NOT_EQUAL
0x000009A0: 0x802F            - O_IF
0x000009A2: 0xC001 0x000009d0 - O_INTOP(0x000009d0)   // 2512 (2512)
0x000009A8: 0x80BC            - O_SELF_OBJ
0x000009AA: 0xC001 0x0100004f - O_INTOP(0x0100004f)   // 16777295 (16777295)
0x000009B0: 0x814B            - O_PARTY_MEMBER_OBJ
0x000009B2: 0x80D3            - O_TILE_DISTANCE_OBJS
0x000009B4: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000009BA: 0x8035            - O_LESS_EQUAL
0x000009BC: 0x802F            - O_IF
0x000009BE: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000009C4: 0x800D            - O_D_TO_A
0x000009C6: 0x8019            - O_SWAPA
0x000009C8: 0x802A            - O_POP_TO_BASE
0x000009CA: 0x8029            - O_POP_BASE
0x000009CC: 0x800C            - O_A_TO_D
0x000009CE: 0x801C            - O_POP_RETURN
0x000009D0: 0xC001 0x00000a16 - O_INTOP(0x00000a16)   // 2582 (2582)
0x000009D6: 0xC001 0x010000a5 - O_INTOP(0x010000a5)   // 16777381 (16777381)
0x000009DC: 0x814B            - O_PARTY_MEMBER_OBJ
0x000009DE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000009E4: 0x8034            - O_NOT_EQUAL
0x000009E6: 0x802F            - O_IF
0x000009E8: 0xC001 0x00000a16 - O_INTOP(0x00000a16)   // 2582 (2582)
0x000009EE: 0x80BC            - O_SELF_OBJ
0x000009F0: 0xC001 0x010000a5 - O_INTOP(0x010000a5)   // 16777381 (16777381)
0x000009F6: 0x814B            - O_PARTY_MEMBER_OBJ
0x000009F8: 0x80D3            - O_TILE_DISTANCE_OBJS
0x000009FA: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000A00: 0x8035            - O_LESS_EQUAL
0x00000A02: 0x802F            - O_IF
0x00000A04: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000A0A: 0x800D            - O_D_TO_A
0x00000A0C: 0x8019            - O_SWAPA
0x00000A0E: 0x802A            - O_POP_TO_BASE
0x00000A10: 0x8029            - O_POP_BASE
0x00000A12: 0x800C            - O_A_TO_D
0x00000A14: 0x801C            - O_POP_RETURN
0x00000A16: 0xC001 0x00000a5c - O_INTOP(0x00000a5c)   // 2652 (2652)
0x00000A1C: 0xC001 0x010000bf - O_INTOP(0x010000bf)   // 16777407 (16777407)
0x00000A22: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000A24: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A2A: 0x8034            - O_NOT_EQUAL
0x00000A2C: 0x802F            - O_IF
0x00000A2E: 0xC001 0x00000a5c - O_INTOP(0x00000a5c)   // 2652 (2652)
0x00000A34: 0x80BC            - O_SELF_OBJ
0x00000A36: 0xC001 0x010000bf - O_INTOP(0x010000bf)   // 16777407 (16777407)
0x00000A3C: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000A3E: 0x80D3            - O_TILE_DISTANCE_OBJS
0x00000A40: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000A46: 0x8035            - O_LESS_EQUAL
0x00000A48: 0x802F            - O_IF
0x00000A4A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000A50: 0x800D            - O_D_TO_A
0x00000A52: 0x8019            - O_SWAPA
0x00000A54: 0x802A            - O_POP_TO_BASE
0x00000A56: 0x8029            - O_POP_BASE
0x00000A58: 0x800C            - O_A_TO_D
0x00000A5A: 0x801C            - O_POP_RETURN
0x00000A5C: 0xC001 0x00000aa2 - O_INTOP(0x00000aa2)   // 2722 (2722)
0x00000A62: 0xC001 0x010000c3 - O_INTOP(0x010000c3)   // 16777411 (16777411)
0x00000A68: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000A6A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000A70: 0x8034            - O_NOT_EQUAL
0x00000A72: 0x802F            - O_IF
0x00000A74: 0xC001 0x00000aa2 - O_INTOP(0x00000aa2)   // 2722 (2722)
0x00000A7A: 0x80BC            - O_SELF_OBJ
0x00000A7C: 0xC001 0x010000c3 - O_INTOP(0x010000c3)   // 16777411 (16777411)
0x00000A82: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000A84: 0x80D3            - O_TILE_DISTANCE_OBJS
0x00000A86: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000A8C: 0x8035            - O_LESS_EQUAL
0x00000A8E: 0x802F            - O_IF
0x00000A90: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000A96: 0x800D            - O_D_TO_A
0x00000A98: 0x8019            - O_SWAPA
0x00000A9A: 0x802A            - O_POP_TO_BASE
0x00000A9C: 0x8029            - O_POP_BASE
0x00000A9E: 0x800C            - O_A_TO_D
0x00000AA0: 0x801C            - O_POP_RETURN
0x00000AA2: 0xC001 0x00000ae8 - O_INTOP(0x00000ae8)   // 2792 (2792)
0x00000AA8: 0xC001 0x010000c4 - O_INTOP(0x010000c4)   // 16777412 (16777412)
0x00000AAE: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000AB0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000AB6: 0x8034            - O_NOT_EQUAL
0x00000AB8: 0x802F            - O_IF
0x00000ABA: 0xC001 0x00000ae8 - O_INTOP(0x00000ae8)   // 2792 (2792)
0x00000AC0: 0x80BC            - O_SELF_OBJ
0x00000AC2: 0xC001 0x010000c4 - O_INTOP(0x010000c4)   // 16777412 (16777412)
0x00000AC8: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000ACA: 0x80D3            - O_TILE_DISTANCE_OBJS
0x00000ACC: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000AD2: 0x8035            - O_LESS_EQUAL
0x00000AD4: 0x802F            - O_IF
0x00000AD6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000ADC: 0x800D            - O_D_TO_A
0x00000ADE: 0x8019            - O_SWAPA
0x00000AE0: 0x802A            - O_POP_TO_BASE
0x00000AE2: 0x8029            - O_POP_BASE
0x00000AE4: 0x800C            - O_A_TO_D
0x00000AE6: 0x801C            - O_POP_RETURN
0x00000AE8: 0xC001 0x00000b2e - O_INTOP(0x00000b2e)   // 2862 (2862)
0x00000AEE: 0xC001 0x010000c5 - O_INTOP(0x010000c5)   // 16777413 (16777413)
0x00000AF4: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000AF6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000AFC: 0x8034            - O_NOT_EQUAL
0x00000AFE: 0x802F            - O_IF
0x00000B00: 0xC001 0x00000b2e - O_INTOP(0x00000b2e)   // 2862 (2862)
0x00000B06: 0x80BC            - O_SELF_OBJ
0x00000B08: 0xC001 0x010000c5 - O_INTOP(0x010000c5)   // 16777413 (16777413)
0x00000B0E: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000B10: 0x80D3            - O_TILE_DISTANCE_OBJS
0x00000B12: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000B18: 0x8035            - O_LESS_EQUAL
0x00000B1A: 0x802F            - O_IF
0x00000B1C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000B22: 0x800D            - O_D_TO_A
0x00000B24: 0x8019            - O_SWAPA
0x00000B26: 0x802A            - O_POP_TO_BASE
0x00000B28: 0x8029            - O_POP_BASE
0x00000B2A: 0x800C            - O_A_TO_D
0x00000B2C: 0x801C            - O_POP_RETURN
0x00000B2E: 0xC001 0x00000b74 - O_INTOP(0x00000b74)   // 2932 (2932)
0x00000B34: 0xC001 0x01000109 - O_INTOP(0x01000109)   // 16777481 (16777481)
0x00000B3A: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000B3C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000B42: 0x8034            - O_NOT_EQUAL
0x00000B44: 0x802F            - O_IF
0x00000B46: 0xC001 0x00000b74 - O_INTOP(0x00000b74)   // 2932 (2932)
0x00000B4C: 0x80BC            - O_SELF_OBJ
0x00000B4E: 0xC001 0x01000109 - O_INTOP(0x01000109)   // 16777481 (16777481)
0x00000B54: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000B56: 0x80D3            - O_TILE_DISTANCE_OBJS
0x00000B58: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000B5E: 0x8035            - O_LESS_EQUAL
0x00000B60: 0x802F            - O_IF
0x00000B62: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000B68: 0x800D            - O_D_TO_A
0x00000B6A: 0x8019            - O_SWAPA
0x00000B6C: 0x802A            - O_POP_TO_BASE
0x00000B6E: 0x8029            - O_POP_BASE
0x00000B70: 0x800C            - O_A_TO_D
0x00000B72: 0x801C            - O_POP_RETURN
0x00000B74: 0xC001 0x00000bba - O_INTOP(0x00000bba)   // 3002 (3002)
0x00000B7A: 0xC001 0x01000156 - O_INTOP(0x01000156)   // 16777558 (16777558)
0x00000B80: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000B82: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000B88: 0x8034            - O_NOT_EQUAL
0x00000B8A: 0x802F            - O_IF
0x00000B8C: 0xC001 0x00000bba - O_INTOP(0x00000bba)   // 3002 (3002)
0x00000B92: 0x80BC            - O_SELF_OBJ
0x00000B94: 0xC001 0x01000156 - O_INTOP(0x01000156)   // 16777558 (16777558)
0x00000B9A: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000B9C: 0x80D3            - O_TILE_DISTANCE_OBJS
0x00000B9E: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000BA4: 0x8035            - O_LESS_EQUAL
0x00000BA6: 0x802F            - O_IF
0x00000BA8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000BAE: 0x800D            - O_D_TO_A
0x00000BB0: 0x8019            - O_SWAPA
0x00000BB2: 0x802A            - O_POP_TO_BASE
0x00000BB4: 0x8029            - O_POP_BASE
0x00000BB6: 0x800C            - O_A_TO_D
0x00000BB8: 0x801C            - O_POP_RETURN
0x00000BBA: 0xC001 0x00000c00 - O_INTOP(0x00000c00)   // 3072 (3072)
0x00000BC0: 0xC001 0x01000180 - O_INTOP(0x01000180)   // 16777600 (16777600)
0x00000BC6: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000BC8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000BCE: 0x8034            - O_NOT_EQUAL
0x00000BD0: 0x802F            - O_IF
0x00000BD2: 0xC001 0x00000c00 - O_INTOP(0x00000c00)   // 3072 (3072)
0x00000BD8: 0x80BC            - O_SELF_OBJ
0x00000BDA: 0xC001 0x01000180 - O_INTOP(0x01000180)   // 16777600 (16777600)
0x00000BE0: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000BE2: 0x80D3            - O_TILE_DISTANCE_OBJS
0x00000BE4: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000BEA: 0x8035            - O_LESS_EQUAL
0x00000BEC: 0x802F            - O_IF
0x00000BEE: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000BF4: 0x800D            - O_D_TO_A
0x00000BF6: 0x8019            - O_SWAPA
0x00000BF8: 0x802A            - O_POP_TO_BASE
0x00000BFA: 0x8029            - O_POP_BASE
0x00000BFC: 0x800C            - O_A_TO_D
0x00000BFE: 0x801C            - O_POP_RETURN
0x00000C00: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000C06: 0x800D            - O_D_TO_A
0x00000C08: 0x8019            - O_SWAPA
0x00000C0A: 0x802A            - O_POP_TO_BASE
0x00000C0C: 0x8029            - O_POP_BASE
0x00000C0E: 0x800C            - O_A_TO_D
0x00000C10: 0x801C            - O_POP_RETURN
0x00000C12: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000C18: 0x800D            - O_D_TO_A
0x00000C1A: 0x8019            - O_SWAPA
0x00000C1C: 0x802A            - O_POP_TO_BASE
0x00000C1E: 0x8029            - O_POP_BASE
0x00000C20: 0x800C            - O_A_TO_D
0x00000C22: 0x801C            - O_POP_RETURN
0x00000C24: 0x802A            - O_POP_TO_BASE
0x00000C26: 0x8029            - O_POP_BASE
0x00000C28: 0x801C            - O_POP_RETURN

2: start (0x00000c2a)
===============================
0x00000C2A: 0x802B            - O_PUSH_BASE
0x00000C2C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000C32: 0x800D            - O_D_TO_A
0x00000C34: 0x8019            - O_SWAPA
0x00000C36: 0x802A            - O_POP_TO_BASE
0x00000C38: 0x8029            - O_POP_BASE
0x00000C3A: 0x800C            - O_A_TO_D
0x00000C3C: 0x801C            - O_POP_RETURN
0x00000C3E: 0x802A            - O_POP_TO_BASE
0x00000C40: 0x8029            - O_POP_BASE
0x00000C42: 0x801C            - O_POP_RETURN

3: use_p_proc (0x00000c44)
===============================
0x00000C44: 0x802B            - O_PUSH_BASE
0x00000C46: 0xC001 0x00000c8c - O_INTOP(0x00000c8c)   // 3212 (3212)
0x00000C4C: 0xC001 0x00000283 - O_INTOP(0x00000283)   // 643 (643)
0x00000C52: 0x80C5            - O_GLOBAL_VAR
0x00000C54: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000C5A: 0x8033            - O_EQUAL
0x00000C5C: 0x802F            - O_IF
0x00000C5E: 0xC001 0x00000c74 - O_INTOP(0x00000c74)   // 3188 (3188)
0x00000C64: 0x800D            - O_D_TO_A
0x00000C66: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000C6C: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00000C72: 0x8005            - O_CALL
0x00000C74: 0x801A            - O_POP
0x00000C76: 0xC001 0x00000283 - O_INTOP(0x00000283)   // 643 (643)
0x00000C7C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000C82: 0x80C6            - O_SET_GLOBAL_VAR
0x00000C84: 0xC001 0x00000d28 - O_INTOP(0x00000d28)   // 3368 (3368)
0x00000C8A: 0x8004            - O_JMP
0x00000C8C: 0xC001 0x00000d10 - O_INTOP(0x00000d10)   // 3344 (3344)
0x00000C92: 0xC001 0x0000028f - O_INTOP(0x0000028f)   // 655 (655)
0x00000C98: 0x80C5            - O_GLOBAL_VAR
0x00000C9A: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00000CA0: 0x8033            - O_EQUAL
0x00000CA2: 0x802F            - O_IF
0x00000CA4: 0x80BC            - O_SELF_OBJ
0x00000CA6: 0xC001 0x00004fd6 - O_INTOP(0x00004fd6)   // 20438 (20438)
0x00000CAC: 0x80BC            - O_SELF_OBJ
0x00000CAE: 0x80EC            - O_ELEVATION
0x00000CB0: 0x80FF            - O_CRITTER_ATTEMPT_PLACEMENT
0x00000CB2: 0x801A            - O_POP
0x00000CB4: 0xC001 0x00004fcf - O_INTOP(0x00004fcf)   // 20431 (20431)
0x00000CBA: 0x80BC            - O_SELF_OBJ
0x00000CBC: 0x80EC            - O_ELEVATION
0x00000CBE: 0xC001 0x0200073e - O_INTOP(0x0200073e)   // 33556286 (33556286)
0x00000CC4: 0x80A7            - O_TILE_CONTAINS_PID_OBJ
0x00000CC6: 0xC001 0x00000016 - O_INTOP(0x00000016)   // 22 (22)
0x00000CCC: 0x8013            - O_STORE_GLOBAL
0x00000CCE: 0xC001 0x00000016 - O_INTOP(0x00000016)   // 22 (22)
0x00000CD4: 0x8012            - O_FETCH_GLOBAL
0x00000CD6: 0xC001 0x00005ee4 - O_INTOP(0x00005ee4)   // 24292 (24292)
0x00000CDC: 0x80BC            - O_SELF_OBJ
0x00000CDE: 0x80EC            - O_ELEVATION
0x00000CE0: 0x80FF            - O_CRITTER_ATTEMPT_PLACEMENT
0x00000CE2: 0x801A            - O_POP
0x00000CE4: 0xC001 0x00005ee4 - O_INTOP(0x00005ee4)   // 24292 (24292)
0x00000CEA: 0x80BC            - O_SELF_OBJ
0x00000CEC: 0x80EC            - O_ELEVATION
0x00000CEE: 0xC001 0x0200073e - O_INTOP(0x0200073e)   // 33556286 (33556286)
0x00000CF4: 0x80A7            - O_TILE_CONTAINS_PID_OBJ
0x00000CF6: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x00000CFC: 0x8013            - O_STORE_GLOBAL
0x00000CFE: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x00000D04: 0x8012            - O_FETCH_GLOBAL
0x00000D06: 0x8131            - O_OBJ_OPEN
0x00000D08: 0xC001 0x00000d28 - O_INTOP(0x00000d28)   // 3368 (3368)
0x00000D0E: 0x8004            - O_JMP
0x00000D10: 0xC001 0x00000d26 - O_INTOP(0x00000d26)   // 3366 (3366)
0x00000D16: 0x800D            - O_D_TO_A
0x00000D18: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D1E: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00000D24: 0x8005            - O_CALL
0x00000D26: 0x801A            - O_POP
0x00000D28: 0x80B9            - O_SCRIPT_OVERRIDES
0x00000D2A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D30: 0x800D            - O_D_TO_A
0x00000D32: 0x8019            - O_SWAPA
0x00000D34: 0x802A            - O_POP_TO_BASE
0x00000D36: 0x8029            - O_POP_BASE
0x00000D38: 0x800C            - O_A_TO_D
0x00000D3A: 0x801C            - O_POP_RETURN
0x00000D3C: 0x802A            - O_POP_TO_BASE
0x00000D3E: 0x8029            - O_POP_BASE
0x00000D40: 0x801C            - O_POP_RETURN

4: look_at_p_proc (0x00000d42)
===============================
0x00000D42: 0x802B            - O_PUSH_BASE
0x00000D44: 0x80B9            - O_SCRIPT_OVERRIDES
0x00000D46: 0xC001 0x0000051b - O_INTOP(0x0000051b)   // 1307 (1307)
0x00000D4C: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x00000D52: 0x8105            - O_MESSAGE_STR
0x00000D54: 0x80B8            - O_DISPLAY_MSG
0x00000D56: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D5C: 0x800D            - O_D_TO_A
0x00000D5E: 0x8019            - O_SWAPA
0x00000D60: 0x802A            - O_POP_TO_BASE
0x00000D62: 0x8029            - O_POP_BASE
0x00000D64: 0x800C            - O_A_TO_D
0x00000D66: 0x801C            - O_POP_RETURN
0x00000D68: 0x802A            - O_POP_TO_BASE
0x00000D6A: 0x8029            - O_POP_BASE
0x00000D6C: 0x801C            - O_POP_RETURN

5: description_p_proc (0x00000d6e)
===============================
0x00000D6E: 0x802B            - O_PUSH_BASE
0x00000D70: 0x80B9            - O_SCRIPT_OVERRIDES
0x00000D72: 0xC001 0x0000051b - O_INTOP(0x0000051b)   // 1307 (1307)
0x00000D78: 0xC001 0x00000065 - O_INTOP(0x00000065)   // 101 (101)
0x00000D7E: 0x8105            - O_MESSAGE_STR
0x00000D80: 0x80B8            - O_DISPLAY_MSG
0x00000D82: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D88: 0x800D            - O_D_TO_A
0x00000D8A: 0x8019            - O_SWAPA
0x00000D8C: 0x802A            - O_POP_TO_BASE
0x00000D8E: 0x8029            - O_POP_BASE
0x00000D90: 0x800C            - O_A_TO_D
0x00000D92: 0x801C            - O_POP_RETURN
0x00000D94: 0x802A            - O_POP_TO_BASE
0x00000D96: 0x8029            - O_POP_BASE
0x00000D98: 0x801C            - O_POP_RETURN

6: use_skill_on_p_proc (0x00000000)
===============================

7: use_obj_on_p_proc (0x00000000)
===============================

8: damage_p_proc (0x00000000)
===============================

9: map_enter_p_proc (0x00000d9a)
===============================
0x00000D9A: 0x802B            - O_PUSH_BASE
0x00000D9C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000DA2: 0x800D            - O_D_TO_A
0x00000DA4: 0x8019            - O_SWAPA
0x00000DA6: 0x802A            - O_POP_TO_BASE
0x00000DA8: 0x8029            - O_POP_BASE
0x00000DAA: 0x800C            - O_A_TO_D
0x00000DAC: 0x801C            - O_POP_RETURN
0x00000DAE: 0x802A            - O_POP_TO_BASE
0x00000DB0: 0x8029            - O_POP_BASE
0x00000DB2: 0x801C            - O_POP_RETURN

10: map_update_p_proc (0x00000db4)
===============================
0x00000DB4: 0x802B            - O_PUSH_BASE
0x00000DB6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000DBC: 0x800D            - O_D_TO_A
0x00000DBE: 0x8019            - O_SWAPA
0x00000DC0: 0x802A            - O_POP_TO_BASE
0x00000DC2: 0x8029            - O_POP_BASE
0x00000DC4: 0x800C            - O_A_TO_D
0x00000DC6: 0x801C            - O_POP_RETURN
0x00000DC8: 0x802A            - O_POP_TO_BASE
0x00000DCA: 0x8029            - O_POP_BASE
0x00000DCC: 0x801C            - O_POP_RETURN

11: talk_p_proc (0x00000dce)
===============================
0x00000DCE: 0x802B            - O_PUSH_BASE
0x00000DD0: 0xC001 0x0000051b - O_INTOP(0x0000051b)   // 1307 (1307)
0x00000DD6: 0x80BC            - O_SELF_OBJ
0x00000DD8: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000DDE: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000DE4: 0x8046            - O_NEGATE
0x00000DE6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000DEC: 0x8046            - O_NEGATE
0x00000DEE: 0x80DE            - O_START_GDIALOG
0x00000DF0: 0x811C            - O_GSAY_START
0x00000DF2: 0xC001 0x00000e2a - O_INTOP(0x00000e2a)   // 3626 (3626)
0x00000DF8: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00000DFE: 0x80C3            - O_MAP_VAR
0x00000E00: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E06: 0x8033            - O_EQUAL
0x00000E08: 0x802F            - O_IF
0x00000E0A: 0xC001 0x00000e20 - O_INTOP(0x00000e20)   // 3616 (3616)
0x00000E10: 0x800D            - O_D_TO_A
0x00000E12: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E18: 0xC001 0x0000000d - O_INTOP(0x0000000d)   // 13 (13)
0x00000E1E: 0x8005            - O_CALL
0x00000E20: 0x801A            - O_POP
0x00000E22: 0xC001 0x00000e42 - O_INTOP(0x00000e42)   // 3650 (3650)
0x00000E28: 0x8004            - O_JMP
0x00000E2A: 0xC001 0x00000e40 - O_INTOP(0x00000e40)   // 3648 (3648)
0x00000E30: 0x800D            - O_D_TO_A
0x00000E32: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E38: 0xC001 0x00000013 - O_INTOP(0x00000013)   // 19 (19)
0x00000E3E: 0x8005            - O_CALL
0x00000E40: 0x801A            - O_POP
0x00000E42: 0x811D            - O_GSAY_END
0x00000E44: 0x80DF            - O_END_DIALOGUE
0x00000E46: 0xC001 0x00000e8a - O_INTOP(0x00000e8a)   // 3722 (3722)
0x00000E4C: 0xC001 0x00000018 - O_INTOP(0x00000018)   // 24 (24)
0x00000E52: 0x8012            - O_FETCH_GLOBAL
0x00000E54: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000E5A: 0x8033            - O_EQUAL
0x00000E5C: 0x802F            - O_IF
0x00000E5E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E64: 0xC001 0x00000018 - O_INTOP(0x00000018)   // 24 (24)
0x00000E6A: 0x8013            - O_STORE_GLOBAL
0x00000E6C: 0xC001 0x0000003c - O_INTOP(0x0000003c)   // 60 (60)
0x00000E72: 0xC001 0x0000003c - O_INTOP(0x0000003c)   // 60 (60)
0x00000E78: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00000E7E: 0x803B            - O_MUL
0x00000E80: 0x803B            - O_MUL
0x00000E82: 0x80FC            - O_GAME_TIME_ADVANCE
0x00000E84: 0x801A            - O_POP
0x00000E86: 0x801A            - O_POP
0x00000E88: 0x801A            - O_POP
0x00000E8A: 0xC001 0x00000efc - O_INTOP(0x00000efc)   // 3836 (3836)
0x00000E90: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00000E96: 0x80C3            - O_MAP_VAR
0x00000E98: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000E9E: 0x8033            - O_EQUAL
0x00000EA0: 0xC001 0x00000283 - O_INTOP(0x00000283)   // 643 (643)
0x00000EA6: 0x80C5            - O_GLOBAL_VAR
0x00000EA8: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00000EAE: 0x8034            - O_NOT_EQUAL
0x00000EB0: 0x803E            - O_AND
0x00000EB2: 0xC001 0x0000001b - O_INTOP(0x0000001b)   // 27 (27)
0x00000EB8: 0x8012            - O_FETCH_GLOBAL
0x00000EBA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000EC0: 0x8033            - O_EQUAL
0x00000EC2: 0x803E            - O_AND
0x00000EC4: 0x802F            - O_IF
0x00000EC6: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00000ECC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000ED2: 0x80C4            - O_SET_MAP_VAR
0x00000ED4: 0xC001 0x0000003c - O_INTOP(0x0000003c)   // 60 (60)
0x00000EDA: 0x8136            - O_GFADE_OUT
0x00000EDC: 0x80BF            - O_DUDE_OBJ
0x00000EDE: 0xC001 0x0000613c - O_INTOP(0x0000613c)   // 24892 (24892)
0x00000EE4: 0x80BF            - O_DUDE_OBJ
0x00000EE6: 0x80EC            - O_ELEVATION
0x00000EE8: 0x80FF            - O_CRITTER_ATTEMPT_PLACEMENT
0x00000EEA: 0x801A            - O_POP
0x00000EEC: 0xC001 0x0000003c - O_INTOP(0x0000003c)   // 60 (60)
0x00000EF2: 0x8137            - O_GFADE_IN
0x00000EF4: 0xC001 0x00000f0a - O_INTOP(0x00000f0a)   // 3850 (3850)
0x00000EFA: 0x8004            - O_JMP
0x00000EFC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F02: 0xC001 0x0000001b - O_INTOP(0x0000001b)   // 27 (27)
0x00000F08: 0x8013            - O_STORE_GLOBAL
0x00000F0A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F10: 0x800D            - O_D_TO_A
0x00000F12: 0x8019            - O_SWAPA
0x00000F14: 0x802A            - O_POP_TO_BASE
0x00000F16: 0x8029            - O_POP_BASE
0x00000F18: 0x800C            - O_A_TO_D
0x00000F1A: 0x801C            - O_POP_RETURN
0x00000F1C: 0x802A            - O_POP_TO_BASE
0x00000F1E: 0x8029            - O_POP_BASE
0x00000F20: 0x801C            - O_POP_RETURN

12: node001 (0x00000f22)
===============================
0x00000F22: 0x802B            - O_PUSH_BASE
0x00000F24: 0x80BC            - O_SELF_OBJ
0x00000F26: 0xC001 0x0000051b - O_INTOP(0x0000051b)   // 1307 (1307)
0x00000F2C: 0xC001 0x000000c8 - O_INTOP(0x000000c8)   // 200 (200)
0x00000F32: 0x8105            - O_MESSAGE_STR
0x00000F34: 0xC001 0x00000008 - O_INTOP(0x00000008)   // 8 (8)
0x00000F3A: 0x810A            - O_FLOAT_MSG
0x00000F3C: 0xC001 0x00000f52 - O_INTOP(0x00000f52)   // 3922 (3922)
0x00000F42: 0x800D            - O_D_TO_A
0x00000F44: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F4A: 0xC001 0x00000017 - O_INTOP(0x00000017)   // 23 (23)
0x00000F50: 0x8005            - O_CALL
0x00000F52: 0x801A            - O_POP
0x00000F54: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F5A: 0x800D            - O_D_TO_A
0x00000F5C: 0x8019            - O_SWAPA
0x00000F5E: 0x802A            - O_POP_TO_BASE
0x00000F60: 0x8029            - O_POP_BASE
0x00000F62: 0x800C            - O_A_TO_D
0x00000F64: 0x801C            - O_POP_RETURN
0x00000F66: 0x802A            - O_POP_TO_BASE
0x00000F68: 0x8029            - O_POP_BASE
0x00000F6A: 0x801C            - O_POP_RETURN

13: Node002 (0x00000f6c)
===============================
0x00000F6C: 0x802B            - O_PUSH_BASE
0x00000F6E: 0xC001 0x0000051b - O_INTOP(0x0000051b)   // 1307 (1307)
0x00000F74: 0xC001 0x000000c8 - O_INTOP(0x000000c8)   // 200 (200)
0x00000F7A: 0x811E            - O_GSAY_REPLY
0x00000F7C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000F82: 0xC001 0x0000051b - O_INTOP(0x0000051b)   // 1307 (1307)
0x00000F88: 0xC001 0x000000c9 - O_INTOP(0x000000c9)   // 201 (201)
0x00000F8E: 0xC001 0x00000016 - O_INTOP(0x00000016)   // 22 (22)
0x00000F94: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000F9A: 0x8121            - O_GIQ_OPTION
0x00000F9C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000FA2: 0xC001 0x0000051b - O_INTOP(0x0000051b)   // 1307 (1307)
0x00000FA8: 0xC001 0x000000ca - O_INTOP(0x000000ca)   // 202 (202)
0x00000FAE: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x00000FB4: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000FBA: 0x8121            - O_GIQ_OPTION
0x00000FBC: 0xC001 0x00000ff6 - O_INTOP(0x00000ff6)   // 4086 (4086)
0x00000FC2: 0x80BF            - O_DUDE_OBJ
0x00000FC4: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000FCA: 0x80CA            - O_GET_CRITTER_STAT
0x00000FCC: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00000FD2: 0x8038            - O_GREATER
0x00000FD4: 0x802F            - O_IF
0x00000FD6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000FDC: 0xC001 0x0000051b - O_INTOP(0x0000051b)   // 1307 (1307)
0x00000FE2: 0xC001 0x000000cc - O_INTOP(0x000000cc)   // 204 (204)
0x00000FE8: 0xC001 0x00000011 - O_INTOP(0x00000011)   // 17 (17)
0x00000FEE: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00000FF4: 0x8121            - O_GIQ_OPTION
0x00000FF6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000FFC: 0x800D            - O_D_TO_A
0x00000FFE: 0x8019            - O_SWAPA
0x00001000: 0x802A            - O_POP_TO_BASE
0x00001002: 0x8029            - O_POP_BASE
0x00001004: 0x800C            - O_A_TO_D
0x00001006: 0x801C            - O_POP_RETURN
0x00001008: 0x802A            - O_POP_TO_BASE
0x0000100A: 0x8029            - O_POP_BASE
0x0000100C: 0x801C            - O_POP_RETURN

14: Node003 (0x0000100e)
===============================
0x0000100E: 0x802B            - O_PUSH_BASE
0x00001010: 0xC001 0x0000106c - O_INTOP(0x0000106c)   // 4204 (4204)
0x00001016: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x0000101C: 0x8012            - O_FETCH_GLOBAL
0x0000101E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001024: 0x8033            - O_EQUAL
0x00001026: 0x802F            - O_IF
0x00001028: 0xC001 0x0000028f - O_INTOP(0x0000028f)   // 655 (655)
0x0000102E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001034: 0x80C6            - O_SET_GLOBAL_VAR
0x00001036: 0xC001 0x0000051b - O_INTOP(0x0000051b)   // 1307 (1307)
0x0000103C: 0xC001 0x000000da - O_INTOP(0x000000da)   // 218 (218)
0x00001042: 0x811E            - O_GSAY_REPLY
0x00001044: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000104A: 0xC001 0x0000051b - O_INTOP(0x0000051b)   // 1307 (1307)
0x00001050: 0xC001 0x000000db - O_INTOP(0x000000db)   // 219 (219)
0x00001056: 0xC001 0x00000016 - O_INTOP(0x00000016)   // 22 (22)
0x0000105C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001062: 0x8121            - O_GIQ_OPTION
0x00001064: 0xC001 0x000010de - O_INTOP(0x000010de)   // 4318 (4318)
0x0000106A: 0x8004            - O_JMP
0x0000106C: 0xC001 0x000010de - O_INTOP(0x000010de)   // 4318 (4318)
0x00001072: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x00001078: 0x8012            - O_FETCH_GLOBAL
0x0000107A: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001080: 0x8033            - O_EQUAL
0x00001082: 0x802F            - O_IF
0x00001084: 0xC001 0x0000028f - O_INTOP(0x0000028f)   // 655 (655)
0x0000108A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001090: 0x80C6            - O_SET_GLOBAL_VAR
0x00001092: 0x80BF            - O_DUDE_OBJ
0x00001094: 0xC001 0x00000059 - O_INTOP(0x00000059)   // 89 (89)
0x0000109A: 0x810D            - O_OBJ_CARRYING_PID_OBJ
0x0000109C: 0xC001 0x0000001c - O_INTOP(0x0000001c)   // 28 (28)
0x000010A2: 0x8013            - O_STORE_GLOBAL
0x000010A4: 0x80BF            - O_DUDE_OBJ
0x000010A6: 0xC001 0x0000001c - O_INTOP(0x0000001c)   // 28 (28)
0x000010AC: 0x8012            - O_FETCH_GLOBAL
0x000010AE: 0x80D9            - O_RM_OBJ_FROM_INVEN
0x000010B0: 0xC001 0x0000051b - O_INTOP(0x0000051b)   // 1307 (1307)
0x000010B6: 0xC001 0x000000df - O_INTOP(0x000000df)   // 223 (223)
0x000010BC: 0x811E            - O_GSAY_REPLY
0x000010BE: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000010C4: 0xC001 0x0000051b - O_INTOP(0x0000051b)   // 1307 (1307)
0x000010CA: 0xC001 0x000000e0 - O_INTOP(0x000000e0)   // 224 (224)
0x000010D0: 0xC001 0x00000016 - O_INTOP(0x00000016)   // 22 (22)
0x000010D6: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000010DC: 0x8121            - O_GIQ_OPTION
0x000010DE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000010E4: 0x800D            - O_D_TO_A
0x000010E6: 0x8019            - O_SWAPA
0x000010E8: 0x802A            - O_POP_TO_BASE
0x000010EA: 0x8029            - O_POP_BASE
0x000010EC: 0x800C            - O_A_TO_D
0x000010EE: 0x801C            - O_POP_RETURN
0x000010F0: 0x802A            - O_POP_TO_BASE
0x000010F2: 0x8029            - O_POP_BASE
0x000010F4: 0x801C            - O_POP_RETURN

15: Node004 (0x000010f6)
===============================
0x000010F6: 0x802B            - O_PUSH_BASE
0x000010F8: 0xC001 0x00000258 - O_INTOP(0x00000258)   // 600 (600)
0x000010FE: 0x8136            - O_GFADE_OUT
0x00001100: 0xC001 0x00000258 - O_INTOP(0x00000258)   // 600 (600)
0x00001106: 0x8137            - O_GFADE_IN
0x00001108: 0xC001 0x0000051b - O_INTOP(0x0000051b)   // 1307 (1307)
0x0000110E: 0xC001 0x000000cb - O_INTOP(0x000000cb)   // 203 (203)
0x00001114: 0x811E            - O_GSAY_REPLY
0x00001116: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000111C: 0xC001 0x0000051b - O_INTOP(0x0000051b)   // 1307 (1307)
0x00001122: 0xC001 0x000000c9 - O_INTOP(0x000000c9)   // 201 (201)
0x00001128: 0xC001 0x00000016 - O_INTOP(0x00000016)   // 22 (22)
0x0000112E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001134: 0x8121            - O_GIQ_OPTION
0x00001136: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000113C: 0x800D            - O_D_TO_A
0x0000113E: 0x8019            - O_SWAPA
0x00001140: 0x802A            - O_POP_TO_BASE
0x00001142: 0x8029            - O_POP_BASE
0x00001144: 0x800C            - O_A_TO_D
0x00001146: 0x801C            - O_POP_RETURN
0x00001148: 0x802A            - O_POP_TO_BASE
0x0000114A: 0x8029            - O_POP_BASE
0x0000114C: 0x801C            - O_POP_RETURN

16: Node005 (0x0000114e)
===============================
0x0000114E: 0x802B            - O_PUSH_BASE
0x00001150: 0xC001 0x000012e8 - O_INTOP(0x000012e8)   // 4840 (4840)
0x00001156: 0x80BF            - O_DUDE_OBJ
0x00001158: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000115E: 0x8106            - O_CRITTER_INVEN_OBJ
0x00001160: 0x8100            - O_OBJ_PID
0x00001162: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001168: 0x8034            - O_NOT_EQUAL
0x0000116A: 0x80BF            - O_DUDE_OBJ
0x0000116C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001172: 0x8106            - O_CRITTER_INVEN_OBJ
0x00001174: 0x8100            - O_OBJ_PID
0x00001176: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x0000117C: 0x8034            - O_NOT_EQUAL
0x0000117E: 0x803E            - O_AND
0x00001180: 0x80BF            - O_DUDE_OBJ
0x00001182: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001188: 0x8106            - O_CRITTER_INVEN_OBJ
0x0000118A: 0x8100            - O_OBJ_PID
0x0000118C: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001192: 0x8034            - O_NOT_EQUAL
0x00001194: 0x803E            - O_AND
0x00001196: 0x80BF            - O_DUDE_OBJ
0x00001198: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000119E: 0x8106            - O_CRITTER_INVEN_OBJ
0x000011A0: 0x8100            - O_OBJ_PID
0x000011A2: 0xC001 0x00000010 - O_INTOP(0x00000010)   // 16 (16)
0x000011A8: 0x8034            - O_NOT_EQUAL
0x000011AA: 0x803E            - O_AND
0x000011AC: 0x80BF            - O_DUDE_OBJ
0x000011AE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000011B4: 0x8106            - O_CRITTER_INVEN_OBJ
0x000011B6: 0x8100            - O_OBJ_PID
0x000011B8: 0xC001 0x000000e7 - O_INTOP(0x000000e7)   // 231 (231)
0x000011BE: 0x8034            - O_NOT_EQUAL
0x000011C0: 0x803E            - O_AND
0x000011C2: 0x80BF            - O_DUDE_OBJ
0x000011C4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000011CA: 0x8106            - O_CRITTER_INVEN_OBJ
0x000011CC: 0x8100            - O_OBJ_PID
0x000011CE: 0xC001 0x000000ee - O_INTOP(0x000000ee)   // 238 (238)
0x000011D4: 0x8034            - O_NOT_EQUAL
0x000011D6: 0x803E            - O_AND
0x000011D8: 0x80BF            - O_DUDE_OBJ
0x000011DA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000011E0: 0x8106            - O_CRITTER_INVEN_OBJ
0x000011E2: 0x8100            - O_OBJ_PID
0x000011E4: 0xC001 0x000000ef - O_INTOP(0x000000ef)   // 239 (239)
0x000011EA: 0x8034            - O_NOT_EQUAL
0x000011EC: 0x803E            - O_AND
0x000011EE: 0x80BF            - O_DUDE_OBJ
0x000011F0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000011F6: 0x8106            - O_CRITTER_INVEN_OBJ
0x000011F8: 0x8100            - O_OBJ_PID
0x000011FA: 0xC001 0x0000015b - O_INTOP(0x0000015b)   // 347 (347)
0x00001200: 0x8034            - O_NOT_EQUAL
0x00001202: 0x803E            - O_AND
0x00001204: 0x80BF            - O_DUDE_OBJ
0x00001206: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000120C: 0x8106            - O_CRITTER_INVEN_OBJ
0x0000120E: 0x8100            - O_OBJ_PID
0x00001210: 0xC001 0x0000015c - O_INTOP(0x0000015c)   // 348 (348)
0x00001216: 0x8034            - O_NOT_EQUAL
0x00001218: 0x803E            - O_AND
0x0000121A: 0x80BF            - O_DUDE_OBJ
0x0000121C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001222: 0x8106            - O_CRITTER_INVEN_OBJ
0x00001224: 0x8100            - O_OBJ_PID
0x00001226: 0xC001 0x0000017a - O_INTOP(0x0000017a)   // 378 (378)
0x0000122C: 0x8034            - O_NOT_EQUAL
0x0000122E: 0x803E            - O_AND
0x00001230: 0x80BF            - O_DUDE_OBJ
0x00001232: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001238: 0x8106            - O_CRITTER_INVEN_OBJ
0x0000123A: 0x8100            - O_OBJ_PID
0x0000123C: 0xC001 0x0000017b - O_INTOP(0x0000017b)   // 379 (379)
0x00001242: 0x8034            - O_NOT_EQUAL
0x00001244: 0x803E            - O_AND
0x00001246: 0x80BF            - O_DUDE_OBJ
0x00001248: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000124E: 0x8106            - O_CRITTER_INVEN_OBJ
0x00001250: 0x8100            - O_OBJ_PID
0x00001252: 0xC001 0x0000017c - O_INTOP(0x0000017c)   // 380 (380)
0x00001258: 0x8034            - O_NOT_EQUAL
0x0000125A: 0x803E            - O_AND
0x0000125C: 0x802F            - O_IF
0x0000125E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001264: 0xC001 0x00000017 - O_INTOP(0x00000017)   // 23 (23)
0x0000126A: 0x8013            - O_STORE_GLOBAL
0x0000126C: 0xC001 0x000012b2 - O_INTOP(0x000012b2)   // 4786 (4786)
0x00001272: 0xC001 0x00000017 - O_INTOP(0x00000017)   // 23 (23)
0x00001278: 0x8012            - O_FETCH_GLOBAL
0x0000127A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001280: 0x8033            - O_EQUAL
0x00001282: 0x802F            - O_IF
0x00001284: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x0000128A: 0xC001 0x00000017 - O_INTOP(0x00000017)   // 23 (23)
0x00001290: 0x8013            - O_STORE_GLOBAL
0x00001292: 0xC001 0x0000003c - O_INTOP(0x0000003c)   // 60 (60)
0x00001298: 0x8136            - O_GFADE_OUT
0x0000129A: 0x80BF            - O_DUDE_OBJ
0x0000129C: 0xC001 0x0000596b - O_INTOP(0x0000596b)   // 22891 (22891)
0x000012A2: 0x80BF            - O_DUDE_OBJ
0x000012A4: 0x80EC            - O_ELEVATION
0x000012A6: 0x80FF            - O_CRITTER_ATTEMPT_PLACEMENT
0x000012A8: 0x801A            - O_POP
0x000012AA: 0xC001 0x0000003c - O_INTOP(0x0000003c)   // 60 (60)
0x000012B0: 0x8137            - O_GFADE_IN
0x000012B2: 0xC001 0x0000051b - O_INTOP(0x0000051b)   // 1307 (1307)
0x000012B8: 0xC001 0x000000dc - O_INTOP(0x000000dc)   // 220 (220)
0x000012BE: 0x811E            - O_GSAY_REPLY
0x000012C0: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000012C6: 0xC001 0x0000051b - O_INTOP(0x0000051b)   // 1307 (1307)
0x000012CC: 0xC001 0x000000dd - O_INTOP(0x000000dd)   // 221 (221)
0x000012D2: 0xC001 0x00000016 - O_INTOP(0x00000016)   // 22 (22)
0x000012D8: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000012DE: 0x8121            - O_GIQ_OPTION
0x000012E0: 0xC001 0x0000134c - O_INTOP(0x0000134c)   // 4940 (4940)
0x000012E6: 0x8004            - O_JMP
0x000012E8: 0xC001 0x0000003c - O_INTOP(0x0000003c)   // 60 (60)
0x000012EE: 0x8136            - O_GFADE_OUT
0x000012F0: 0x80BD            - O_SOURCE_OBJ
0x000012F2: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x000012F8: 0xC001 0x00000010 - O_INTOP(0x00000010)   // 16 (16)
0x000012FE: 0x80B4            - O_RANDOM
0x00001300: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001306: 0x80EF            - O_CRITTER_DMG
0x00001308: 0xC001 0x0000003c - O_INTOP(0x0000003c)   // 60 (60)
0x0000130E: 0x8137            - O_GFADE_IN
0x00001310: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001316: 0xC001 0x00000018 - O_INTOP(0x00000018)   // 24 (24)
0x0000131C: 0x8013            - O_STORE_GLOBAL
0x0000131E: 0xC001 0x0000051b - O_INTOP(0x0000051b)   // 1307 (1307)
0x00001324: 0xC001 0x000000cf - O_INTOP(0x000000cf)   // 207 (207)
0x0000132A: 0x811E            - O_GSAY_REPLY
0x0000132C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001332: 0xC001 0x0000051b - O_INTOP(0x0000051b)   // 1307 (1307)
0x00001338: 0xC001 0x000000d1 - O_INTOP(0x000000d1)   // 209 (209)
0x0000133E: 0xC001 0x00000016 - O_INTOP(0x00000016)   // 22 (22)
0x00001344: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000134A: 0x8121            - O_GIQ_OPTION
0x0000134C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001352: 0x800D            - O_D_TO_A
0x00001354: 0x8019            - O_SWAPA
0x00001356: 0x802A            - O_POP_TO_BASE
0x00001358: 0x8029            - O_POP_BASE
0x0000135A: 0x800C            - O_A_TO_D
0x0000135C: 0x801C            - O_POP_RETURN
0x0000135E: 0x802A            - O_POP_TO_BASE
0x00001360: 0x8029            - O_POP_BASE
0x00001362: 0x801C            - O_POP_RETURN

17: Node006 (0x00001364)
===============================
0x00001364: 0x802B            - O_PUSH_BASE
0x00001366: 0xC001 0x0000051b - O_INTOP(0x0000051b)   // 1307 (1307)
0x0000136C: 0xC001 0x000000d2 - O_INTOP(0x000000d2)   // 210 (210)
0x00001372: 0x811E            - O_GSAY_REPLY
0x00001374: 0xC001 0x000013d8 - O_INTOP(0x000013d8)   // 5080 (5080)
0x0000137A: 0x80BF            - O_DUDE_OBJ
0x0000137C: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001382: 0x80CA            - O_GET_CRITTER_STAT
0x00001384: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x0000138A: 0x8036            - O_GREATER_EQUAL
0x0000138C: 0x80BF            - O_DUDE_OBJ
0x0000138E: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00001394: 0x80CA            - O_GET_CRITTER_STAT
0x00001396: 0xC001 0x00000007 - O_INTOP(0x00000007)   // 7 (7)
0x0000139C: 0x8036            - O_GREATER_EQUAL
0x0000139E: 0x803E            - O_AND
0x000013A0: 0x802F            - O_IF
0x000013A2: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000013A8: 0xC001 0x00000017 - O_INTOP(0x00000017)   // 23 (23)
0x000013AE: 0x8013            - O_STORE_GLOBAL
0x000013B0: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000013B6: 0xC001 0x0000051b - O_INTOP(0x0000051b)   // 1307 (1307)
0x000013BC: 0xC001 0x000000d3 - O_INTOP(0x000000d3)   // 211 (211)
0x000013C2: 0xC001 0x00000012 - O_INTOP(0x00000012)   // 18 (18)
0x000013C8: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000013CE: 0x8121            - O_GIQ_OPTION
0x000013D0: 0xC001 0x00001418 - O_INTOP(0x00001418)   // 5144 (5144)
0x000013D6: 0x8004            - O_JMP
0x000013D8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000013DE: 0xC001 0x0000051b - O_INTOP(0x0000051b)   // 1307 (1307)
0x000013E4: 0xC001 0x000000c9 - O_INTOP(0x000000c9)   // 201 (201)
0x000013EA: 0xC001 0x00000016 - O_INTOP(0x00000016)   // 22 (22)
0x000013F0: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000013F6: 0x8121            - O_GIQ_OPTION
0x000013F8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000013FE: 0xC001 0x0000051b - O_INTOP(0x0000051b)   // 1307 (1307)
0x00001404: 0xC001 0x000000d3 - O_INTOP(0x000000d3)   // 211 (211)
0x0000140A: 0xC001 0x00000010 - O_INTOP(0x00000010)   // 16 (16)
0x00001410: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001416: 0x8121            - O_GIQ_OPTION
0x00001418: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000141E: 0x800D            - O_D_TO_A
0x00001420: 0x8019            - O_SWAPA
0x00001422: 0x802A            - O_POP_TO_BASE
0x00001424: 0x8029            - O_POP_BASE
0x00001426: 0x800C            - O_A_TO_D
0x00001428: 0x801C            - O_POP_RETURN
0x0000142A: 0x802A            - O_POP_TO_BASE
0x0000142C: 0x8029            - O_POP_BASE
0x0000142E: 0x801C            - O_POP_RETURN

18: Node007 (0x00001430)
===============================
0x00001430: 0x802B            - O_PUSH_BASE
0x00001432: 0xC001 0x0000051b - O_INTOP(0x0000051b)   // 1307 (1307)
0x00001438: 0xC001 0x000000cd - O_INTOP(0x000000cd)   // 205 (205)
0x0000143E: 0x811E            - O_GSAY_REPLY
0x00001440: 0xC001 0x00001486 - O_INTOP(0x00001486)   // 5254 (5254)
0x00001446: 0xC001 0x00000017 - O_INTOP(0x00000017)   // 23 (23)
0x0000144C: 0x8012            - O_FETCH_GLOBAL
0x0000144E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001454: 0x8033            - O_EQUAL
0x00001456: 0x802F            - O_IF
0x00001458: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x0000145E: 0xC001 0x00000017 - O_INTOP(0x00000017)   // 23 (23)
0x00001464: 0x8013            - O_STORE_GLOBAL
0x00001466: 0xC001 0x0000003c - O_INTOP(0x0000003c)   // 60 (60)
0x0000146C: 0x8136            - O_GFADE_OUT
0x0000146E: 0x80BF            - O_DUDE_OBJ
0x00001470: 0xC001 0x0000596b - O_INTOP(0x0000596b)   // 22891 (22891)
0x00001476: 0x80BF            - O_DUDE_OBJ
0x00001478: 0x80EC            - O_ELEVATION
0x0000147A: 0x80FF            - O_CRITTER_ATTEMPT_PLACEMENT
0x0000147C: 0x801A            - O_POP
0x0000147E: 0xC001 0x0000003c - O_INTOP(0x0000003c)   // 60 (60)
0x00001484: 0x8137            - O_GFADE_IN
0x00001486: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000148C: 0xC001 0x0000051b - O_INTOP(0x0000051b)   // 1307 (1307)
0x00001492: 0xC001 0x000000ce - O_INTOP(0x000000ce)   // 206 (206)
0x00001498: 0xC001 0x00000016 - O_INTOP(0x00000016)   // 22 (22)
0x0000149E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000014A4: 0x8121            - O_GIQ_OPTION
0x000014A6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000014AC: 0x800D            - O_D_TO_A
0x000014AE: 0x8019            - O_SWAPA
0x000014B0: 0x802A            - O_POP_TO_BASE
0x000014B2: 0x8029            - O_POP_BASE
0x000014B4: 0x800C            - O_A_TO_D
0x000014B6: 0x801C            - O_POP_RETURN
0x000014B8: 0x802A            - O_POP_TO_BASE
0x000014BA: 0x8029            - O_POP_BASE
0x000014BC: 0x801C            - O_POP_RETURN

19: Node008 (0x000014be)
===============================
0x000014BE: 0x802B            - O_PUSH_BASE
0x000014C0: 0x80BF            - O_DUDE_OBJ
0x000014C2: 0xC001 0x0000000d - O_INTOP(0x0000000d)   // 13 (13)
0x000014C8: 0x80AA            - O_HAS_SKILL
0x000014CA: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x000014D0: 0x8013            - O_STORE_GLOBAL
0x000014D2: 0xC001 0x0000051b - O_INTOP(0x0000051b)   // 1307 (1307)
0x000014D8: 0xC001 0x000000d4 - O_INTOP(0x000000d4)   // 212 (212)
0x000014DE: 0x811E            - O_GSAY_REPLY
0x000014E0: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000014E6: 0xC001 0x0000051b - O_INTOP(0x0000051b)   // 1307 (1307)
0x000014EC: 0xC001 0x000000d5 - O_INTOP(0x000000d5)   // 213 (213)
0x000014F2: 0xC001 0x00000016 - O_INTOP(0x00000016)   // 22 (22)
0x000014F8: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000014FE: 0x8121            - O_GIQ_OPTION
0x00001500: 0xC001 0x00001538 - O_INTOP(0x00001538)   // 5432 (5432)
0x00001506: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x0000150C: 0x8012            - O_FETCH_GLOBAL
0x0000150E: 0xC001 0x00000028 - O_INTOP(0x00000028)   // 40 (40)
0x00001514: 0x8038            - O_GREATER
0x00001516: 0x802F            - O_IF
0x00001518: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000151E: 0xC001 0x0000051b - O_INTOP(0x0000051b)   // 1307 (1307)
0x00001524: 0xC001 0x000000d6 - O_INTOP(0x000000d6)   // 214 (214)
0x0000152A: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x00001530: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001536: 0x8121            - O_GIQ_OPTION
0x00001538: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000153E: 0x800D            - O_D_TO_A
0x00001540: 0x8019            - O_SWAPA
0x00001542: 0x802A            - O_POP_TO_BASE
0x00001544: 0x8029            - O_POP_BASE
0x00001546: 0x800C            - O_A_TO_D
0x00001548: 0x801C            - O_POP_RETURN
0x0000154A: 0x802A            - O_POP_TO_BASE
0x0000154C: 0x8029            - O_POP_BASE
0x0000154E: 0x801C            - O_POP_RETURN

20: Node009 (0x00001550)
===============================
0x00001550: 0x802B            - O_PUSH_BASE
0x00001552: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001558: 0xC001 0x0000001b - O_INTOP(0x0000001b)   // 27 (27)
0x0000155E: 0x8013            - O_STORE_GLOBAL
0x00001560: 0xC001 0x0000051b - O_INTOP(0x0000051b)   // 1307 (1307)
0x00001566: 0xC001 0x000000d7 - O_INTOP(0x000000d7)   // 215 (215)
0x0000156C: 0x811E            - O_GSAY_REPLY
0x0000156E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001574: 0xC001 0x0000051b - O_INTOP(0x0000051b)   // 1307 (1307)
0x0000157A: 0xC001 0x000000d8 - O_INTOP(0x000000d8)   // 216 (216)
0x00001580: 0xC001 0x00000016 - O_INTOP(0x00000016)   // 22 (22)
0x00001586: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000158C: 0x8121            - O_GIQ_OPTION
0x0000158E: 0xC001 0x000015e8 - O_INTOP(0x000015e8)   // 5608 (5608)
0x00001594: 0x80BF            - O_DUDE_OBJ
0x00001596: 0xC001 0x00000059 - O_INTOP(0x00000059)   // 89 (89)
0x0000159C: 0x80BA            - O_OBJ_IS_CARRYING_OBJ_PID
0x0000159E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000015A4: 0x8038            - O_GREATER
0x000015A6: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x000015AC: 0x8012            - O_FETCH_GLOBAL
0x000015AE: 0xC001 0x0000002d - O_INTOP(0x0000002d)   // 45 (45)
0x000015B4: 0x8038            - O_GREATER
0x000015B6: 0x803E            - O_AND
0x000015B8: 0x802F            - O_IF
0x000015BA: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000015C0: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x000015C6: 0x8013            - O_STORE_GLOBAL
0x000015C8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000015CE: 0xC001 0x0000051b - O_INTOP(0x0000051b)   // 1307 (1307)
0x000015D4: 0xC001 0x000000de - O_INTOP(0x000000de)   // 222 (222)
0x000015DA: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x000015E0: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000015E6: 0x8121            - O_GIQ_OPTION
0x000015E8: 0xC001 0x00001642 - O_INTOP(0x00001642)   // 5698 (5698)
0x000015EE: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x000015F4: 0x8012            - O_FETCH_GLOBAL
0x000015F6: 0xC001 0x000000c8 - O_INTOP(0x000000c8)   // 200 (200)
0x000015FC: 0x8038            - O_GREATER
0x000015FE: 0x80BF            - O_DUDE_OBJ
0x00001600: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001606: 0x80CA            - O_GET_CRITTER_STAT
0x00001608: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x0000160E: 0x8036            - O_GREATER_EQUAL
0x00001610: 0x803E            - O_AND
0x00001612: 0x802F            - O_IF
0x00001614: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000161A: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x00001620: 0x8013            - O_STORE_GLOBAL
0x00001622: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001628: 0xC001 0x0000051b - O_INTOP(0x0000051b)   // 1307 (1307)
0x0000162E: 0xC001 0x000000d9 - O_INTOP(0x000000d9)   // 217 (217)
0x00001634: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x0000163A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001640: 0x8121            - O_GIQ_OPTION
0x00001642: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001648: 0x800D            - O_D_TO_A
0x0000164A: 0x8019            - O_SWAPA
0x0000164C: 0x802A            - O_POP_TO_BASE
0x0000164E: 0x8029            - O_POP_BASE
0x00001650: 0x800C            - O_A_TO_D
0x00001652: 0x801C            - O_POP_RETURN
0x00001654: 0x802A            - O_POP_TO_BASE
0x00001656: 0x8029            - O_POP_BASE
0x00001658: 0x801C            - O_POP_RETURN

21: Node998 (0x00000000)
===============================

22: Node999 (0x0000165a)
===============================
0x0000165A: 0x802B            - O_PUSH_BASE
0x0000165C: 0xC001 0x000016ca - O_INTOP(0x000016ca)   // 5834 (5834)
0x00001662: 0xC001 0x0000028f - O_INTOP(0x0000028f)   // 655 (655)
0x00001668: 0x80C5            - O_GLOBAL_VAR
0x0000166A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001670: 0x8033            - O_EQUAL
0x00001672: 0x802F            - O_IF
0x00001674: 0xC001 0x0000028f - O_INTOP(0x0000028f)   // 655 (655)
0x0000167A: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001680: 0x80C6            - O_SET_GLOBAL_VAR
0x00001682: 0xC001 0x00005ee4 - O_INTOP(0x00005ee4)   // 24292 (24292)
0x00001688: 0x80BC            - O_SELF_OBJ
0x0000168A: 0x80EC            - O_ELEVATION
0x0000168C: 0xC001 0x0200073c - O_INTOP(0x0200073c)   // 33556284 (33556284)
0x00001692: 0x80A7            - O_TILE_CONTAINS_PID_OBJ
0x00001694: 0xC001 0x00000013 - O_INTOP(0x00000013)   // 19 (19)
0x0000169A: 0x8013            - O_STORE_GLOBAL
0x0000169C: 0xC001 0x00000013 - O_INTOP(0x00000013)   // 19 (19)
0x000016A2: 0x8012            - O_FETCH_GLOBAL
0x000016A4: 0x8132            - O_OBJ_CLOSE
0x000016A6: 0xC001 0x00005ee4 - O_INTOP(0x00005ee4)   // 24292 (24292)
0x000016AC: 0x80BC            - O_SELF_OBJ
0x000016AE: 0x80EC            - O_ELEVATION
0x000016B0: 0xC001 0x02000043 - O_INTOP(0x02000043)   // 33554499 (33554499)
0x000016B6: 0x80A7            - O_TILE_CONTAINS_PID_OBJ
0x000016B8: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x000016BE: 0x8013            - O_STORE_GLOBAL
0x000016C0: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x000016C6: 0x8012            - O_FETCH_GLOBAL
0x000016C8: 0x80F4            - O_DESTROY_OBJECT
0x000016CA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000016D0: 0x800D            - O_D_TO_A
0x000016D2: 0x8019            - O_SWAPA
0x000016D4: 0x802A            - O_POP_TO_BASE
0x000016D6: 0x8029            - O_POP_BASE
0x000016D8: 0x800C            - O_A_TO_D
0x000016DA: 0x801C            - O_POP_RETURN
0x000016DC: 0x802A            - O_POP_TO_BASE
0x000016DE: 0x8029            - O_POP_BASE
0x000016E0: 0x801C            - O_POP_RETURN

23: NodeOpen (0x000016e2)
===============================
0x000016E2: 0x802B            - O_PUSH_BASE
0x000016E4: 0x80BC            - O_SELF_OBJ
0x000016E6: 0x8131            - O_OBJ_OPEN
0x000016E8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000016EE: 0x800D            - O_D_TO_A
0x000016F0: 0x8019            - O_SWAPA
0x000016F2: 0x802A            - O_POP_TO_BASE
0x000016F4: 0x8029            - O_POP_BASE
0x000016F6: 0x800C            - O_A_TO_D
0x000016F8: 0x801C            - O_POP_RETURN
0x000016FA: 0x802A            - O_POP_TO_BASE
0x000016FC: 0x8029            - O_POP_BASE
0x000016FE: 0x801C            - O_POP_RETURN

24: timed_event_p_proc (0x00000000)
===============================

