Fallout script decompiler, version 8.4.6 (sfall edition)
Copyright (C) Anchorite (TeamX), 2005-2009
anchorite2001@yandex.ru
Continued by Nirran, phobos2077, Mr.Stalin (2014-2020)
Crossplatformed by alexeevdv (2015)
Loading file Mods/MegaMod/scripts/AHELDER.int...
  Read startup code
  Read procedures table
  Read namespace
  Read stringspace
  Read tail of startup code
    Check "Jump to 'start' procedure" / "Jump to end of statup code"

Warning: Omitted  "Jump to 'start' procedure" / "Jump to end of statup code"

    Check "# of argument to 'start' procedure"

Warning: Omitted expected opcode 0x8003. Opcode with # of arguments will be not analysed

    Extract "Export var" section
    Extract "Set exported var values" section
    Extract "Export procedures" section
    Extract "Global variables" section
  Read procedure's bodies
    Procedure: 0
    Procedure: 1
    Procedure: 2
    Procedure: 3
    Procedure: 4
    Procedure: 5
    Procedure: 6
    Procedure: 7
    Procedure: 8
    Procedure: 9
    Procedure: 10
    Procedure: 11
    Procedure: 12
    Procedure: 13
    Procedure: 14
    Procedure: 15
    Procedure: 16
    Procedure: 17
    Procedure: 18
    Procedure: 19
    Procedure: 20
    Procedure: 21
    Procedure: 22
    Procedure: 23
    Procedure: 24
    Procedure: 25
    Procedure: 26
    Procedure: 27
    Procedure: 28
    Procedure: 29
    Procedure: 30
    Procedure: 31
    Procedure: 32
    Procedure: 33
    Procedure: 34
    Procedure: 35
    Procedure: 36
    Procedure: 37
    Procedure: 38
    Procedure: 39
    Procedure: 40
    Procedure: 41
    Procedure: 42
    Procedure: 43
    Procedure: 44
    Procedure: 45
    Procedure: 46
    Procedure: 47
    Procedure: 48
    Procedure: 49
    Procedure: 50
    Procedure: 51
    Procedure: 52
    Procedure: 53
    Procedure: 54
    Procedure: 55
    Procedure: 56
    Procedure: 57
    Procedure: 58
    Procedure: 59
    Procedure: 60
    Procedure: 61
    Procedure: 62
    Procedure: 63
    Procedure: 64
    Procedure: 65
    Procedure: 66
    Procedure: 67
    Procedure: 68
    Procedure: 69
    Procedure: 70
    Procedure: 71
File Mods/MegaMod/scripts/AHELDER.int loaded successfuly

Decompiling...
  Init definitions
  Processing code
    Intial reducing
    Building execution tree
        Procedure: 0
        Procedure: 1
        Procedure: 2
        Procedure: 3
        Procedure: 4
        Procedure: 5
        Procedure: 6
        Procedure: 7
        Procedure: 8
        Procedure: 9
        Procedure: 10
        Procedure: 11
        Procedure: 12
        Procedure: 13
        Procedure: 14
        Procedure: 15
        Procedure: 16
        Procedure: 17
        Procedure: 18
        Procedure: 19
        Procedure: 20
        Procedure: 21
        Procedure: 22
        Procedure: 23
        Procedure: 24
        Procedure: 25
        Procedure: 26
        Procedure: 27
        Procedure: 28
        Procedure: 29
        Procedure: 30
        Procedure: 31
        Procedure: 32
        Procedure: 33
        Procedure: 34
        Procedure: 35
        Procedure: 36
        Procedure: 37
        Procedure: 38
        Procedure: 39
        Procedure: 40
        Procedure: 41
        Procedure: 42
        Procedure: 43
        Procedure: 44
        Procedure: 45
        Procedure: 46
        Procedure: 47
        Procedure: 48
        Procedure: 49
        Procedure: 50
        Procedure: 51
        Procedure: 52
        Procedure: 53
        Procedure: 54
        Procedure: 55
        Procedure: 56
        Procedure: 57
        Procedure: 58
        Procedure: 59
        Procedure: 60
        Procedure: 61
        Procedure: 62
        Procedure: 63
        Procedure: 64
        Procedure: 65
        Procedure: 66
        Procedure: 67
        Procedure: 68
        Procedure: 69
        Procedure: 70
Error: Expression required for 3D2E

============== Procedures table ==================

======== Procedure 0 ========
Name offset:       0x00000006
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000CD0
Number of args:    0x00000000  // 0

======== Procedure 1 ========
Name offset:       0x00000018
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00000CD0
Number of args:    0x00000000  // 0

======== Procedure 2 ========
Name offset:       0x00000232
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001274
Number of args:    0x00000000  // 0

======== Procedure 3 ========
Name offset:       0x00000242
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001492
Number of args:    0x00000000  // 0

======== Procedure 4 ========
Name offset:       0x0000024E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001596
Number of args:    0x00000000  // 0

======== Procedure 5 ========
Name offset:       0x00000260
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001872
Number of args:    0x00000000  // 0

======== Procedure 6 ========
Name offset:       0x00000276
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000018A0
Number of args:    0x00000000  // 0

======== Procedure 7 ========
Name offset:       0x00000286
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000018D6
Number of args:    0x00000000  // 0

======== Procedure 8 ========
Name offset:       0x00000298
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000019BA
Number of args:    0x00000000  // 0

======== Procedure 9 ========
Name offset:       0x000002AA
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000019E6
Number of args:    0x00000000  // 0

======== Procedure 10 ========
Name offset:       0x000002C0
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001A12
Number of args:    0x00000000  // 0

======== Procedure 11 ========
Name offset:       0x000002D0
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001A48
Number of args:    0x00000000  // 0

======== Procedure 12 ========
Name offset:       0x000002E4
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001AA0
Number of args:    0x00000000  // 0

======== Procedure 13 ========
Name offset:       0x000002EE
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001ABA
Number of args:    0x00000000  // 0

======== Procedure 14 ========
Name offset:       0x000002F8
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001AE2
Number of args:    0x00000000  // 0

======== Procedure 15 ========
Name offset:       0x00000302
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001BDA
Number of args:    0x00000000  // 0

======== Procedure 16 ========
Name offset:       0x0000030C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001C44
Number of args:    0x00000000  // 0

======== Procedure 17 ========
Name offset:       0x00000316
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001CAE
Number of args:    0x00000000  // 0

======== Procedure 18 ========
Name offset:       0x00000320
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001D18
Number of args:    0x00000000  // 0

======== Procedure 19 ========
Name offset:       0x0000032A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001E3A
Number of args:    0x00000000  // 0

======== Procedure 20 ========
Name offset:       0x00000334
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001F04
Number of args:    0x00000000  // 0

======== Procedure 21 ========
Name offset:       0x0000033E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00001F6E
Number of args:    0x00000000  // 0

======== Procedure 22 ========
Name offset:       0x00000348
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002012
Number of args:    0x00000000  // 0

======== Procedure 23 ========
Name offset:       0x00000352
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000211C
Number of args:    0x00000000  // 0

======== Procedure 24 ========
Name offset:       0x0000035C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002164
Number of args:    0x00000000  // 0

======== Procedure 25 ========
Name offset:       0x00000366
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002296
Number of args:    0x00000000  // 0

======== Procedure 26 ========
Name offset:       0x00000370
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000022DE
Number of args:    0x00000000  // 0

======== Procedure 27 ========
Name offset:       0x0000037A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002388
Number of args:    0x00000000  // 0

======== Procedure 28 ========
Name offset:       0x00000384
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002410
Number of args:    0x00000000  // 0

======== Procedure 29 ========
Name offset:       0x0000038E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000247A
Number of args:    0x00000000  // 0

======== Procedure 30 ========
Name offset:       0x00000398
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000024E2
Number of args:    0x00000000  // 0

======== Procedure 31 ========
Name offset:       0x000003A2
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000254C
Number of args:    0x00000000  // 0

======== Procedure 32 ========
Name offset:       0x000003AC
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002594
Number of args:    0x00000000  // 0

======== Procedure 33 ========
Name offset:       0x000003B6
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000025DC
Number of args:    0x00000000  // 0

======== Procedure 34 ========
Name offset:       0x000003C0
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002632
Number of args:    0x00000000  // 0

======== Procedure 35 ========
Name offset:       0x000003CA
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000026D6
Number of args:    0x00000000  // 0

======== Procedure 36 ========
Name offset:       0x000003D4
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000028A6
Number of args:    0x00000000  // 0

======== Procedure 37 ========
Name offset:       0x000003DE
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002964
Number of args:    0x00000000  // 0

======== Procedure 38 ========
Name offset:       0x000003E8
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000029DC
Number of args:    0x00000000  // 0

======== Procedure 39 ========
Name offset:       0x000003F2
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002A62
Number of args:    0x00000000  // 0

======== Procedure 40 ========
Name offset:       0x000003FC
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002AE8
Number of args:    0x00000000  // 0

======== Procedure 41 ========
Name offset:       0x00000406
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002B52
Number of args:    0x00000000  // 0

======== Procedure 42 ========
Name offset:       0x00000410
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002BBC
Number of args:    0x00000000  // 0

======== Procedure 43 ========
Name offset:       0x0000041A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002C26
Number of args:    0x00000000  // 0

======== Procedure 44 ========
Name offset:       0x00000424
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002C90
Number of args:    0x00000000  // 0

======== Procedure 45 ========
Name offset:       0x0000042E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002DBE
Number of args:    0x00000000  // 0

======== Procedure 46 ========
Name offset:       0x00000438
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002E06
Number of args:    0x00000000  // 0

======== Procedure 47 ========
Name offset:       0x00000442
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002E4E
Number of args:    0x00000000  // 0

======== Procedure 48 ========
Name offset:       0x0000044C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002E96
Number of args:    0x00000000  // 0

======== Procedure 49 ========
Name offset:       0x00000456
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002EDE
Number of args:    0x00000000  // 0

======== Procedure 50 ========
Name offset:       0x00000460
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00002F48
Number of args:    0x00000000  // 0

======== Procedure 51 ========
Name offset:       0x0000046A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00003040
Number of args:    0x00000000  // 0

======== Procedure 52 ========
Name offset:       0x00000474
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000030E4
Number of args:    0x00000000  // 0

======== Procedure 53 ========
Name offset:       0x0000047E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000313A
Number of args:    0x00000000  // 0

======== Procedure 54 ========
Name offset:       0x00000488
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000031B2
Number of args:    0x00000000  // 0

======== Procedure 55 ========
Name offset:       0x00000492
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000031FA
Number of args:    0x00000000  // 0

======== Procedure 56 ========
Name offset:       0x0000049C
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00003284
Number of args:    0x00000000  // 0

======== Procedure 57 ========
Name offset:       0x000004A6
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000330E
Number of args:    0x00000000  // 0

======== Procedure 58 ========
Name offset:       0x000004B0
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00003358
Number of args:    0x00000000  // 0

======== Procedure 59 ========
Name offset:       0x000004BA
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000033A0
Number of args:    0x00000000  // 0

======== Procedure 60 ========
Name offset:       0x000004C4
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000033E8
Number of args:    0x00000000  // 0

======== Procedure 61 ========
Name offset:       0x000004CE
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00003470
Number of args:    0x00000000  // 0

======== Procedure 62 ========
Name offset:       0x000004D8
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000034D8
Number of args:    0x00000000  // 0

======== Procedure 63 ========
Name offset:       0x000004E2
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00003520
Number of args:    0x00000000  // 0

======== Procedure 64 ========
Name offset:       0x000004EC
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00003568
Number of args:    0x00000000  // 0

======== Procedure 65 ========
Name offset:       0x000004F6
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000035B0
Number of args:    0x00000000  // 0

======== Procedure 66 ========
Name offset:       0x00000500
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000363A
Number of args:    0x00000000  // 0

======== Procedure 67 ========
Name offset:       0x0000050A
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00003682
Number of args:    0x00000000  // 0

======== Procedure 68 ========
Name offset:       0x00000514
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x000036CA
Number of args:    0x00000000  // 0

======== Procedure 69 ========
Name offset:       0x0000051E
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00003732
Number of args:    0x00000000  // 0

======== Procedure 70 ========
Name offset:       0x00000528
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x0000379A
Number of args:    0x00000000  // 0

======== Procedure 71 ========
Name offset:       0x00000536
Type:              0x00000000  // No special types
Time:              0x00000000  // 0
Expression offset: 0x00000000
Body offset:       0x00003D4A
Number of args:    0x00000000  // 0



============== Namespace ==================
0x00000006: ".............."
0x00000018: "checkPartyMembersNearDoor"
0x00000034: "ProtoOfItemGiven"
0x00000048: "ValueOfRollCheck"
0x0000005C: "Scenery_Creation"
0x00000070: "Scenery_Creation_Hex"
0x00000088: "Scenery_Creation_Count"
0x000000A2: "Temp_Scenery_Creation_Hex"
0x000000BE: "Scenery_Creation_Ptr"
0x000000D6: "How_Many_Party_Members_Are_Injured"
0x000000FC: "How_Many_Party_Members_Armed"
0x0000011C: "PartyHealingItem"
0x00000130: "global_temp"
0x0000013E: "dest_tile"
0x0000014A: "step_tile"
0x00000156: "in_dialog"
0x00000162: "forced_node"
0x00000170: "restock_amt"
0x0000017E: "restock_obj"
0x0000018C: "restock_trash"
0x0000019C: "removed_qty"
0x000001AA: "Static_Reaction"
0x000001BC: "Evil_Critter"
0x000001CC: "Slavery_Tolerant"
0x000001E0: "Karma_Perception"
0x000001F4: "reaction_bonus_town_rep"
0x0000020E: "reaction_bonus_karma"
0x00000226: "Only_Once"
0x00000232: "EvaluateKarma"
0x00000242: "CheckRep"
0x0000024E: "critter_p_proc"
0x00000260: "timed_event_p_proc"
0x00000276: "pickup_p_proc"
0x00000286: "destroy_p_proc"
0x00000298: "look_at_p_proc"
0x000002AA: "description_p_proc"
0x000002C0: "damage_p_proc"
0x000002D0: "map_enter_p_proc"
0x000002E4: "Node999"
0x000002EE: "Node998"
0x000002F8: "Node003"
0x00000302: "Node004"
0x0000030C: "Node005"
0x00000316: "Node006"
0x00000320: "Node007"
0x0000032A: "Node008"
0x00000334: "Node009"
0x0000033E: "Node010"
0x00000348: "Node011"
0x00000352: "Node012"
0x0000035C: "Node013"
0x00000366: "Node014"
0x00000370: "Node015"
0x0000037A: "Node016"
0x00000384: "Node017"
0x0000038E: "Node018"
0x00000398: "Node019"
0x000003A2: "Node020"
0x000003AC: "Node021"
0x000003B6: "Node022"
0x000003C0: "Node023"
0x000003CA: "Node024"
0x000003D4: "Node025"
0x000003DE: "Node026"
0x000003E8: "Node027"
0x000003F2: "Node028"
0x000003FC: "Node029"
0x00000406: "Node030"
0x00000410: "Node031"
0x0000041A: "Node032"
0x00000424: "Node033"
0x0000042E: "Node035"
0x00000438: "Node036"
0x00000442: "Node037"
0x0000044C: "Node038"
0x00000456: "Node039"
0x00000460: "Node040"
0x0000046A: "Node041"
0x00000474: "Node042"
0x0000047E: "Node043"
0x00000488: "Node044"
0x00000492: "Enc001"
0x0000049C: "Enc002"
0x000004A6: "Enc003"
0x000004B0: "Enc004"
0x000004BA: "Enc005"
0x000004C4: "Enc005a"
0x000004CE: "Enc006"
0x000004D8: "Enc007"
0x000004E2: "Enc008"
0x000004EC: "Enc009"
0x000004F6: "Enc010"
0x00000500: "Enc011"
0x0000050A: "Enc012"
0x00000514: "Enc013"
0x0000051E: "Enc013a"
0x00000528: "talk_p_proc"
0x00000536: "start"
==================
98 item(s)



============== Stringspace ==================
Empty


============== Global variables values ==================
0: O_INTOP(0x00000000)   // 0 (0)
1: O_INTOP(0x00000000)   // 0 (0)
2: O_INTOP(0x00000000)   // 0 (0)
3: O_INTOP(0x00000000)   // 0 (0)
4: O_INTOP(0x00000000)   // 0 (0)
5: O_INTOP(0x00000000)   // 0 (0)
6: O_INTOP(0x00000000)   // 0 (0)
7: O_INTOP(0x00000000)   // 0 (0)
8: O_INTOP(0x00000000)   // 0 (0)
9: O_INTOP(0x00000000)   // 0 (0)
10: O_INTOP(0x00000000)   // 0 (0)
11: O_INTOP(0x00000000)   // 0 (0)
12: O_INTOP(0x00000000)   // 0 (0)
13: O_INTOP(0x00000000)   // 0 (0)
14: O_INTOP(0x00000000)   // 0 (0)
15: O_INTOP(0x00000000)   // 0 (0)
16: O_INTOP(0x00000000)   // 0 (0)
17: O_INTOP(0x00000000)   // 0 (0)
18: O_INTOP(0x00000000)   // 0 (0)
19: O_INTOP(0x00000000)   // 0 (0)
20: O_INTOP(0x00000000)   // 0 (0)
21: O_INTOP(0x00000000)   // 0 (0)
22: O_INTOP(0x00000000)   // 0 (0)
23: O_INTOP(0x00000000)   // 0 (0)
24: O_INTOP(0x00000000)   // 0 (0)
25: O_INTOP(0x00000000)   // 0 (0)


============== Exported variables ==================
Not found


============== Procedures ==================

0: .............. (0x00000cd0)
===============================

1: checkPartyMembersNearDoor (0x00000cd0)
===============================
0x00000CD0: 0x802B            - O_PUSH_BASE
0x00000CD2: 0xC001 0x00000d18 - O_INTOP(0x00000d18)   // 3352 (3352)
0x00000CD8: 0xC001 0x0100003e - O_INTOP(0x0100003e)   // 16777278 (16777278)
0x00000CDE: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000CE0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000CE6: 0x8034            - O_NOT_EQUAL
0x00000CE8: 0x802F            - O_IF
0x00000CEA: 0xC001 0x00000d18 - O_INTOP(0x00000d18)   // 3352 (3352)
0x00000CF0: 0x80BC            - O_SELF_OBJ
0x00000CF2: 0xC001 0x0100003e - O_INTOP(0x0100003e)   // 16777278 (16777278)
0x00000CF8: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000CFA: 0x80D3            - O_TILE_DISTANCE_OBJS
0x00000CFC: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000D02: 0x8035            - O_LESS_EQUAL
0x00000D04: 0x802F            - O_IF
0x00000D06: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000D0C: 0x800D            - O_D_TO_A
0x00000D0E: 0x8019            - O_SWAPA
0x00000D10: 0x802A            - O_POP_TO_BASE
0x00000D12: 0x8029            - O_POP_BASE
0x00000D14: 0x800C            - O_A_TO_D
0x00000D16: 0x801C            - O_POP_RETURN
0x00000D18: 0xC001 0x00000d5e - O_INTOP(0x00000d5e)   // 3422 (3422)
0x00000D1E: 0xC001 0x010000a0 - O_INTOP(0x010000a0)   // 16777376 (16777376)
0x00000D24: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000D26: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D2C: 0x8034            - O_NOT_EQUAL
0x00000D2E: 0x802F            - O_IF
0x00000D30: 0xC001 0x00000d5e - O_INTOP(0x00000d5e)   // 3422 (3422)
0x00000D36: 0x80BC            - O_SELF_OBJ
0x00000D38: 0xC001 0x010000a0 - O_INTOP(0x010000a0)   // 16777376 (16777376)
0x00000D3E: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000D40: 0x80D3            - O_TILE_DISTANCE_OBJS
0x00000D42: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000D48: 0x8035            - O_LESS_EQUAL
0x00000D4A: 0x802F            - O_IF
0x00000D4C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000D52: 0x800D            - O_D_TO_A
0x00000D54: 0x8019            - O_SWAPA
0x00000D56: 0x802A            - O_POP_TO_BASE
0x00000D58: 0x8029            - O_POP_BASE
0x00000D5A: 0x800C            - O_A_TO_D
0x00000D5C: 0x801C            - O_POP_RETURN
0x00000D5E: 0xC001 0x00000da4 - O_INTOP(0x00000da4)   // 3492 (3492)
0x00000D64: 0xC001 0x010000a1 - O_INTOP(0x010000a1)   // 16777377 (16777377)
0x00000D6A: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000D6C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000D72: 0x8034            - O_NOT_EQUAL
0x00000D74: 0x802F            - O_IF
0x00000D76: 0xC001 0x00000da4 - O_INTOP(0x00000da4)   // 3492 (3492)
0x00000D7C: 0x80BC            - O_SELF_OBJ
0x00000D7E: 0xC001 0x010000a1 - O_INTOP(0x010000a1)   // 16777377 (16777377)
0x00000D84: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000D86: 0x80D3            - O_TILE_DISTANCE_OBJS
0x00000D88: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000D8E: 0x8035            - O_LESS_EQUAL
0x00000D90: 0x802F            - O_IF
0x00000D92: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000D98: 0x800D            - O_D_TO_A
0x00000D9A: 0x8019            - O_SWAPA
0x00000D9C: 0x802A            - O_POP_TO_BASE
0x00000D9E: 0x8029            - O_POP_BASE
0x00000DA0: 0x800C            - O_A_TO_D
0x00000DA2: 0x801C            - O_POP_RETURN
0x00000DA4: 0xC001 0x00000dea - O_INTOP(0x00000dea)   // 3562 (3562)
0x00000DAA: 0xC001 0x01000059 - O_INTOP(0x01000059)   // 16777305 (16777305)
0x00000DB0: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000DB2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000DB8: 0x8034            - O_NOT_EQUAL
0x00000DBA: 0x802F            - O_IF
0x00000DBC: 0xC001 0x00000dea - O_INTOP(0x00000dea)   // 3562 (3562)
0x00000DC2: 0x80BC            - O_SELF_OBJ
0x00000DC4: 0xC001 0x01000059 - O_INTOP(0x01000059)   // 16777305 (16777305)
0x00000DCA: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000DCC: 0x80D3            - O_TILE_DISTANCE_OBJS
0x00000DCE: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000DD4: 0x8035            - O_LESS_EQUAL
0x00000DD6: 0x802F            - O_IF
0x00000DD8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000DDE: 0x800D            - O_D_TO_A
0x00000DE0: 0x8019            - O_SWAPA
0x00000DE2: 0x802A            - O_POP_TO_BASE
0x00000DE4: 0x8029            - O_POP_BASE
0x00000DE6: 0x800C            - O_A_TO_D
0x00000DE8: 0x801C            - O_POP_RETURN
0x00000DEA: 0xC001 0x00000e30 - O_INTOP(0x00000e30)   // 3632 (3632)
0x00000DF0: 0xC001 0x01000061 - O_INTOP(0x01000061)   // 16777313 (16777313)
0x00000DF6: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000DF8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000DFE: 0x8034            - O_NOT_EQUAL
0x00000E00: 0x802F            - O_IF
0x00000E02: 0xC001 0x00000e30 - O_INTOP(0x00000e30)   // 3632 (3632)
0x00000E08: 0x80BC            - O_SELF_OBJ
0x00000E0A: 0xC001 0x01000061 - O_INTOP(0x01000061)   // 16777313 (16777313)
0x00000E10: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000E12: 0x80D3            - O_TILE_DISTANCE_OBJS
0x00000E14: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000E1A: 0x8035            - O_LESS_EQUAL
0x00000E1C: 0x802F            - O_IF
0x00000E1E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000E24: 0x800D            - O_D_TO_A
0x00000E26: 0x8019            - O_SWAPA
0x00000E28: 0x802A            - O_POP_TO_BASE
0x00000E2A: 0x8029            - O_POP_BASE
0x00000E2C: 0x800C            - O_A_TO_D
0x00000E2E: 0x801C            - O_POP_RETURN
0x00000E30: 0xC001 0x00000e76 - O_INTOP(0x00000e76)   // 3702 (3702)
0x00000E36: 0xC001 0x0100006b - O_INTOP(0x0100006b)   // 16777323 (16777323)
0x00000E3C: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000E3E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E44: 0x8034            - O_NOT_EQUAL
0x00000E46: 0x802F            - O_IF
0x00000E48: 0xC001 0x00000e76 - O_INTOP(0x00000e76)   // 3702 (3702)
0x00000E4E: 0x80BC            - O_SELF_OBJ
0x00000E50: 0xC001 0x0100006b - O_INTOP(0x0100006b)   // 16777323 (16777323)
0x00000E56: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000E58: 0x80D3            - O_TILE_DISTANCE_OBJS
0x00000E5A: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000E60: 0x8035            - O_LESS_EQUAL
0x00000E62: 0x802F            - O_IF
0x00000E64: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000E6A: 0x800D            - O_D_TO_A
0x00000E6C: 0x8019            - O_SWAPA
0x00000E6E: 0x802A            - O_POP_TO_BASE
0x00000E70: 0x8029            - O_POP_BASE
0x00000E72: 0x800C            - O_A_TO_D
0x00000E74: 0x801C            - O_POP_RETURN
0x00000E76: 0xC001 0x00000ebc - O_INTOP(0x00000ebc)   // 3772 (3772)
0x00000E7C: 0xC001 0x01000088 - O_INTOP(0x01000088)   // 16777352 (16777352)
0x00000E82: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000E84: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000E8A: 0x8034            - O_NOT_EQUAL
0x00000E8C: 0x802F            - O_IF
0x00000E8E: 0xC001 0x00000ebc - O_INTOP(0x00000ebc)   // 3772 (3772)
0x00000E94: 0x80BC            - O_SELF_OBJ
0x00000E96: 0xC001 0x01000088 - O_INTOP(0x01000088)   // 16777352 (16777352)
0x00000E9C: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000E9E: 0x80D3            - O_TILE_DISTANCE_OBJS
0x00000EA0: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000EA6: 0x8035            - O_LESS_EQUAL
0x00000EA8: 0x802F            - O_IF
0x00000EAA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000EB0: 0x800D            - O_D_TO_A
0x00000EB2: 0x8019            - O_SWAPA
0x00000EB4: 0x802A            - O_POP_TO_BASE
0x00000EB6: 0x8029            - O_POP_BASE
0x00000EB8: 0x800C            - O_A_TO_D
0x00000EBA: 0x801C            - O_POP_RETURN
0x00000EBC: 0xC001 0x00000f02 - O_INTOP(0x00000f02)   // 3842 (3842)
0x00000EC2: 0xC001 0x010000a2 - O_INTOP(0x010000a2)   // 16777378 (16777378)
0x00000EC8: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000ECA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000ED0: 0x8034            - O_NOT_EQUAL
0x00000ED2: 0x802F            - O_IF
0x00000ED4: 0xC001 0x00000f02 - O_INTOP(0x00000f02)   // 3842 (3842)
0x00000EDA: 0x80BC            - O_SELF_OBJ
0x00000EDC: 0xC001 0x010000a2 - O_INTOP(0x010000a2)   // 16777378 (16777378)
0x00000EE2: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000EE4: 0x80D3            - O_TILE_DISTANCE_OBJS
0x00000EE6: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000EEC: 0x8035            - O_LESS_EQUAL
0x00000EEE: 0x802F            - O_IF
0x00000EF0: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000EF6: 0x800D            - O_D_TO_A
0x00000EF8: 0x8019            - O_SWAPA
0x00000EFA: 0x802A            - O_POP_TO_BASE
0x00000EFC: 0x8029            - O_POP_BASE
0x00000EFE: 0x800C            - O_A_TO_D
0x00000F00: 0x801C            - O_POP_RETURN
0x00000F02: 0xC001 0x00000f48 - O_INTOP(0x00000f48)   // 3912 (3912)
0x00000F08: 0xC001 0x01000098 - O_INTOP(0x01000098)   // 16777368 (16777368)
0x00000F0E: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000F10: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F16: 0x8034            - O_NOT_EQUAL
0x00000F18: 0x802F            - O_IF
0x00000F1A: 0xC001 0x00000f48 - O_INTOP(0x00000f48)   // 3912 (3912)
0x00000F20: 0x80BC            - O_SELF_OBJ
0x00000F22: 0xC001 0x01000098 - O_INTOP(0x01000098)   // 16777368 (16777368)
0x00000F28: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000F2A: 0x80D3            - O_TILE_DISTANCE_OBJS
0x00000F2C: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000F32: 0x8035            - O_LESS_EQUAL
0x00000F34: 0x802F            - O_IF
0x00000F36: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000F3C: 0x800D            - O_D_TO_A
0x00000F3E: 0x8019            - O_SWAPA
0x00000F40: 0x802A            - O_POP_TO_BASE
0x00000F42: 0x8029            - O_POP_BASE
0x00000F44: 0x800C            - O_A_TO_D
0x00000F46: 0x801C            - O_POP_RETURN
0x00000F48: 0xC001 0x00000f8e - O_INTOP(0x00000f8e)   // 3982 (3982)
0x00000F4E: 0xC001 0x010000a3 - O_INTOP(0x010000a3)   // 16777379 (16777379)
0x00000F54: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000F56: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000F5C: 0x8034            - O_NOT_EQUAL
0x00000F5E: 0x802F            - O_IF
0x00000F60: 0xC001 0x00000f8e - O_INTOP(0x00000f8e)   // 3982 (3982)
0x00000F66: 0x80BC            - O_SELF_OBJ
0x00000F68: 0xC001 0x010000a3 - O_INTOP(0x010000a3)   // 16777379 (16777379)
0x00000F6E: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000F70: 0x80D3            - O_TILE_DISTANCE_OBJS
0x00000F72: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000F78: 0x8035            - O_LESS_EQUAL
0x00000F7A: 0x802F            - O_IF
0x00000F7C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000F82: 0x800D            - O_D_TO_A
0x00000F84: 0x8019            - O_SWAPA
0x00000F86: 0x802A            - O_POP_TO_BASE
0x00000F88: 0x8029            - O_POP_BASE
0x00000F8A: 0x800C            - O_A_TO_D
0x00000F8C: 0x801C            - O_POP_RETURN
0x00000F8E: 0xC001 0x00000fd4 - O_INTOP(0x00000fd4)   // 4052 (4052)
0x00000F94: 0xC001 0x010000a4 - O_INTOP(0x010000a4)   // 16777380 (16777380)
0x00000F9A: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000F9C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000FA2: 0x8034            - O_NOT_EQUAL
0x00000FA4: 0x802F            - O_IF
0x00000FA6: 0xC001 0x00000fd4 - O_INTOP(0x00000fd4)   // 4052 (4052)
0x00000FAC: 0x80BC            - O_SELF_OBJ
0x00000FAE: 0xC001 0x010000a4 - O_INTOP(0x010000a4)   // 16777380 (16777380)
0x00000FB4: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000FB6: 0x80D3            - O_TILE_DISTANCE_OBJS
0x00000FB8: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00000FBE: 0x8035            - O_LESS_EQUAL
0x00000FC0: 0x802F            - O_IF
0x00000FC2: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00000FC8: 0x800D            - O_D_TO_A
0x00000FCA: 0x8019            - O_SWAPA
0x00000FCC: 0x802A            - O_POP_TO_BASE
0x00000FCE: 0x8029            - O_POP_BASE
0x00000FD0: 0x800C            - O_A_TO_D
0x00000FD2: 0x801C            - O_POP_RETURN
0x00000FD4: 0xC001 0x0000101a - O_INTOP(0x0000101a)   // 4122 (4122)
0x00000FDA: 0xC001 0x0100004f - O_INTOP(0x0100004f)   // 16777295 (16777295)
0x00000FE0: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000FE2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00000FE8: 0x8034            - O_NOT_EQUAL
0x00000FEA: 0x802F            - O_IF
0x00000FEC: 0xC001 0x0000101a - O_INTOP(0x0000101a)   // 4122 (4122)
0x00000FF2: 0x80BC            - O_SELF_OBJ
0x00000FF4: 0xC001 0x0100004f - O_INTOP(0x0100004f)   // 16777295 (16777295)
0x00000FFA: 0x814B            - O_PARTY_MEMBER_OBJ
0x00000FFC: 0x80D3            - O_TILE_DISTANCE_OBJS
0x00000FFE: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001004: 0x8035            - O_LESS_EQUAL
0x00001006: 0x802F            - O_IF
0x00001008: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000100E: 0x800D            - O_D_TO_A
0x00001010: 0x8019            - O_SWAPA
0x00001012: 0x802A            - O_POP_TO_BASE
0x00001014: 0x8029            - O_POP_BASE
0x00001016: 0x800C            - O_A_TO_D
0x00001018: 0x801C            - O_POP_RETURN
0x0000101A: 0xC001 0x00001060 - O_INTOP(0x00001060)   // 4192 (4192)
0x00001020: 0xC001 0x010000a5 - O_INTOP(0x010000a5)   // 16777381 (16777381)
0x00001026: 0x814B            - O_PARTY_MEMBER_OBJ
0x00001028: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000102E: 0x8034            - O_NOT_EQUAL
0x00001030: 0x802F            - O_IF
0x00001032: 0xC001 0x00001060 - O_INTOP(0x00001060)   // 4192 (4192)
0x00001038: 0x80BC            - O_SELF_OBJ
0x0000103A: 0xC001 0x010000a5 - O_INTOP(0x010000a5)   // 16777381 (16777381)
0x00001040: 0x814B            - O_PARTY_MEMBER_OBJ
0x00001042: 0x80D3            - O_TILE_DISTANCE_OBJS
0x00001044: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x0000104A: 0x8035            - O_LESS_EQUAL
0x0000104C: 0x802F            - O_IF
0x0000104E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001054: 0x800D            - O_D_TO_A
0x00001056: 0x8019            - O_SWAPA
0x00001058: 0x802A            - O_POP_TO_BASE
0x0000105A: 0x8029            - O_POP_BASE
0x0000105C: 0x800C            - O_A_TO_D
0x0000105E: 0x801C            - O_POP_RETURN
0x00001060: 0xC001 0x000010a6 - O_INTOP(0x000010a6)   // 4262 (4262)
0x00001066: 0xC001 0x010000bf - O_INTOP(0x010000bf)   // 16777407 (16777407)
0x0000106C: 0x814B            - O_PARTY_MEMBER_OBJ
0x0000106E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001074: 0x8034            - O_NOT_EQUAL
0x00001076: 0x802F            - O_IF
0x00001078: 0xC001 0x000010a6 - O_INTOP(0x000010a6)   // 4262 (4262)
0x0000107E: 0x80BC            - O_SELF_OBJ
0x00001080: 0xC001 0x010000bf - O_INTOP(0x010000bf)   // 16777407 (16777407)
0x00001086: 0x814B            - O_PARTY_MEMBER_OBJ
0x00001088: 0x80D3            - O_TILE_DISTANCE_OBJS
0x0000108A: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001090: 0x8035            - O_LESS_EQUAL
0x00001092: 0x802F            - O_IF
0x00001094: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000109A: 0x800D            - O_D_TO_A
0x0000109C: 0x8019            - O_SWAPA
0x0000109E: 0x802A            - O_POP_TO_BASE
0x000010A0: 0x8029            - O_POP_BASE
0x000010A2: 0x800C            - O_A_TO_D
0x000010A4: 0x801C            - O_POP_RETURN
0x000010A6: 0xC001 0x000010ec - O_INTOP(0x000010ec)   // 4332 (4332)
0x000010AC: 0xC001 0x010000c3 - O_INTOP(0x010000c3)   // 16777411 (16777411)
0x000010B2: 0x814B            - O_PARTY_MEMBER_OBJ
0x000010B4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000010BA: 0x8034            - O_NOT_EQUAL
0x000010BC: 0x802F            - O_IF
0x000010BE: 0xC001 0x000010ec - O_INTOP(0x000010ec)   // 4332 (4332)
0x000010C4: 0x80BC            - O_SELF_OBJ
0x000010C6: 0xC001 0x010000c3 - O_INTOP(0x010000c3)   // 16777411 (16777411)
0x000010CC: 0x814B            - O_PARTY_MEMBER_OBJ
0x000010CE: 0x80D3            - O_TILE_DISTANCE_OBJS
0x000010D0: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000010D6: 0x8035            - O_LESS_EQUAL
0x000010D8: 0x802F            - O_IF
0x000010DA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000010E0: 0x800D            - O_D_TO_A
0x000010E2: 0x8019            - O_SWAPA
0x000010E4: 0x802A            - O_POP_TO_BASE
0x000010E6: 0x8029            - O_POP_BASE
0x000010E8: 0x800C            - O_A_TO_D
0x000010EA: 0x801C            - O_POP_RETURN
0x000010EC: 0xC001 0x00001132 - O_INTOP(0x00001132)   // 4402 (4402)
0x000010F2: 0xC001 0x010000c4 - O_INTOP(0x010000c4)   // 16777412 (16777412)
0x000010F8: 0x814B            - O_PARTY_MEMBER_OBJ
0x000010FA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001100: 0x8034            - O_NOT_EQUAL
0x00001102: 0x802F            - O_IF
0x00001104: 0xC001 0x00001132 - O_INTOP(0x00001132)   // 4402 (4402)
0x0000110A: 0x80BC            - O_SELF_OBJ
0x0000110C: 0xC001 0x010000c4 - O_INTOP(0x010000c4)   // 16777412 (16777412)
0x00001112: 0x814B            - O_PARTY_MEMBER_OBJ
0x00001114: 0x80D3            - O_TILE_DISTANCE_OBJS
0x00001116: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x0000111C: 0x8035            - O_LESS_EQUAL
0x0000111E: 0x802F            - O_IF
0x00001120: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001126: 0x800D            - O_D_TO_A
0x00001128: 0x8019            - O_SWAPA
0x0000112A: 0x802A            - O_POP_TO_BASE
0x0000112C: 0x8029            - O_POP_BASE
0x0000112E: 0x800C            - O_A_TO_D
0x00001130: 0x801C            - O_POP_RETURN
0x00001132: 0xC001 0x00001178 - O_INTOP(0x00001178)   // 4472 (4472)
0x00001138: 0xC001 0x010000c5 - O_INTOP(0x010000c5)   // 16777413 (16777413)
0x0000113E: 0x814B            - O_PARTY_MEMBER_OBJ
0x00001140: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001146: 0x8034            - O_NOT_EQUAL
0x00001148: 0x802F            - O_IF
0x0000114A: 0xC001 0x00001178 - O_INTOP(0x00001178)   // 4472 (4472)
0x00001150: 0x80BC            - O_SELF_OBJ
0x00001152: 0xC001 0x010000c5 - O_INTOP(0x010000c5)   // 16777413 (16777413)
0x00001158: 0x814B            - O_PARTY_MEMBER_OBJ
0x0000115A: 0x80D3            - O_TILE_DISTANCE_OBJS
0x0000115C: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001162: 0x8035            - O_LESS_EQUAL
0x00001164: 0x802F            - O_IF
0x00001166: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000116C: 0x800D            - O_D_TO_A
0x0000116E: 0x8019            - O_SWAPA
0x00001170: 0x802A            - O_POP_TO_BASE
0x00001172: 0x8029            - O_POP_BASE
0x00001174: 0x800C            - O_A_TO_D
0x00001176: 0x801C            - O_POP_RETURN
0x00001178: 0xC001 0x000011be - O_INTOP(0x000011be)   // 4542 (4542)
0x0000117E: 0xC001 0x01000109 - O_INTOP(0x01000109)   // 16777481 (16777481)
0x00001184: 0x814B            - O_PARTY_MEMBER_OBJ
0x00001186: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000118C: 0x8034            - O_NOT_EQUAL
0x0000118E: 0x802F            - O_IF
0x00001190: 0xC001 0x000011be - O_INTOP(0x000011be)   // 4542 (4542)
0x00001196: 0x80BC            - O_SELF_OBJ
0x00001198: 0xC001 0x01000109 - O_INTOP(0x01000109)   // 16777481 (16777481)
0x0000119E: 0x814B            - O_PARTY_MEMBER_OBJ
0x000011A0: 0x80D3            - O_TILE_DISTANCE_OBJS
0x000011A2: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000011A8: 0x8035            - O_LESS_EQUAL
0x000011AA: 0x802F            - O_IF
0x000011AC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000011B2: 0x800D            - O_D_TO_A
0x000011B4: 0x8019            - O_SWAPA
0x000011B6: 0x802A            - O_POP_TO_BASE
0x000011B8: 0x8029            - O_POP_BASE
0x000011BA: 0x800C            - O_A_TO_D
0x000011BC: 0x801C            - O_POP_RETURN
0x000011BE: 0xC001 0x00001204 - O_INTOP(0x00001204)   // 4612 (4612)
0x000011C4: 0xC001 0x01000156 - O_INTOP(0x01000156)   // 16777558 (16777558)
0x000011CA: 0x814B            - O_PARTY_MEMBER_OBJ
0x000011CC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000011D2: 0x8034            - O_NOT_EQUAL
0x000011D4: 0x802F            - O_IF
0x000011D6: 0xC001 0x00001204 - O_INTOP(0x00001204)   // 4612 (4612)
0x000011DC: 0x80BC            - O_SELF_OBJ
0x000011DE: 0xC001 0x01000156 - O_INTOP(0x01000156)   // 16777558 (16777558)
0x000011E4: 0x814B            - O_PARTY_MEMBER_OBJ
0x000011E6: 0x80D3            - O_TILE_DISTANCE_OBJS
0x000011E8: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000011EE: 0x8035            - O_LESS_EQUAL
0x000011F0: 0x802F            - O_IF
0x000011F2: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000011F8: 0x800D            - O_D_TO_A
0x000011FA: 0x8019            - O_SWAPA
0x000011FC: 0x802A            - O_POP_TO_BASE
0x000011FE: 0x8029            - O_POP_BASE
0x00001200: 0x800C            - O_A_TO_D
0x00001202: 0x801C            - O_POP_RETURN
0x00001204: 0xC001 0x0000124a - O_INTOP(0x0000124a)   // 4682 (4682)
0x0000120A: 0xC001 0x01000180 - O_INTOP(0x01000180)   // 16777600 (16777600)
0x00001210: 0x814B            - O_PARTY_MEMBER_OBJ
0x00001212: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001218: 0x8034            - O_NOT_EQUAL
0x0000121A: 0x802F            - O_IF
0x0000121C: 0xC001 0x0000124a - O_INTOP(0x0000124a)   // 4682 (4682)
0x00001222: 0x80BC            - O_SELF_OBJ
0x00001224: 0xC001 0x01000180 - O_INTOP(0x01000180)   // 16777600 (16777600)
0x0000122A: 0x814B            - O_PARTY_MEMBER_OBJ
0x0000122C: 0x80D3            - O_TILE_DISTANCE_OBJS
0x0000122E: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001234: 0x8035            - O_LESS_EQUAL
0x00001236: 0x802F            - O_IF
0x00001238: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000123E: 0x800D            - O_D_TO_A
0x00001240: 0x8019            - O_SWAPA
0x00001242: 0x802A            - O_POP_TO_BASE
0x00001244: 0x8029            - O_POP_BASE
0x00001246: 0x800C            - O_A_TO_D
0x00001248: 0x801C            - O_POP_RETURN
0x0000124A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001250: 0x800D            - O_D_TO_A
0x00001252: 0x8019            - O_SWAPA
0x00001254: 0x802A            - O_POP_TO_BASE
0x00001256: 0x8029            - O_POP_BASE
0x00001258: 0x800C            - O_A_TO_D
0x0000125A: 0x801C            - O_POP_RETURN
0x0000125C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001262: 0x800D            - O_D_TO_A
0x00001264: 0x8019            - O_SWAPA
0x00001266: 0x802A            - O_POP_TO_BASE
0x00001268: 0x8029            - O_POP_BASE
0x0000126A: 0x800C            - O_A_TO_D
0x0000126C: 0x801C            - O_POP_RETURN
0x0000126E: 0x802A            - O_POP_TO_BASE
0x00001270: 0x8029            - O_POP_BASE
0x00001272: 0x801C            - O_POP_RETURN

2: EvaluateKarma (0x00001274)
===============================
0x00001274: 0x802B            - O_PUSH_BASE
0x00001276: 0xC001 0x00000025 - O_INTOP(0x00000025)   // 37 (37)
0x0000127C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001282: 0x80C6            - O_SET_GLOBAL_VAR
0x00001284: 0xC001 0x00000026 - O_INTOP(0x00000026)   // 38 (38)
0x0000128A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001290: 0x80C6            - O_SET_GLOBAL_VAR
0x00001292: 0xC001 0x00000027 - O_INTOP(0x00000027)   // 39 (39)
0x00001298: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000129E: 0x80C6            - O_SET_GLOBAL_VAR
0x000012A0: 0xC001 0x00000028 - O_INTOP(0x00000028)   // 40 (40)
0x000012A6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000012AC: 0x80C6            - O_SET_GLOBAL_VAR
0x000012AE: 0xC001 0x00000029 - O_INTOP(0x00000029)   // 41 (41)
0x000012B4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000012BA: 0x80C6            - O_SET_GLOBAL_VAR
0x000012BC: 0xC001 0x0000002a - O_INTOP(0x0000002a)   // 42 (42)
0x000012C2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000012C8: 0x80C6            - O_SET_GLOBAL_VAR
0x000012CA: 0xC001 0x0000002b - O_INTOP(0x0000002b)   // 43 (43)
0x000012D0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000012D6: 0x80C6            - O_SET_GLOBAL_VAR
0x000012D8: 0xC001 0x0000002c - O_INTOP(0x0000002c)   // 44 (44)
0x000012DE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000012E4: 0x80C6            - O_SET_GLOBAL_VAR
0x000012E6: 0xC001 0x0000002d - O_INTOP(0x0000002d)   // 45 (45)
0x000012EC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000012F2: 0x80C6            - O_SET_GLOBAL_VAR
0x000012F4: 0xC001 0x00001322 - O_INTOP(0x00001322)   // 4898 (4898)
0x000012FA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001300: 0x80C5            - O_GLOBAL_VAR
0x00001302: 0xC001 0x000003e8 - O_INTOP(0x000003e8)   // 1000 (1000)
0x00001308: 0x8036            - O_GREATER_EQUAL
0x0000130A: 0x802F            - O_IF
0x0000130C: 0xC001 0x00000025 - O_INTOP(0x00000025)   // 37 (37)
0x00001312: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001318: 0x80C6            - O_SET_GLOBAL_VAR
0x0000131A: 0xC001 0x0000147a - O_INTOP(0x0000147a)   // 5242 (5242)
0x00001320: 0x8004            - O_JMP
0x00001322: 0xC001 0x00001350 - O_INTOP(0x00001350)   // 4944 (4944)
0x00001328: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000132E: 0x80C5            - O_GLOBAL_VAR
0x00001330: 0xC001 0x000002ee - O_INTOP(0x000002ee)   // 750 (750)
0x00001336: 0x8036            - O_GREATER_EQUAL
0x00001338: 0x802F            - O_IF
0x0000133A: 0xC001 0x00000026 - O_INTOP(0x00000026)   // 38 (38)
0x00001340: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001346: 0x80C6            - O_SET_GLOBAL_VAR
0x00001348: 0xC001 0x0000147a - O_INTOP(0x0000147a)   // 5242 (5242)
0x0000134E: 0x8004            - O_JMP
0x00001350: 0xC001 0x0000137e - O_INTOP(0x0000137e)   // 4990 (4990)
0x00001356: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000135C: 0x80C5            - O_GLOBAL_VAR
0x0000135E: 0xC001 0x000001f4 - O_INTOP(0x000001f4)   // 500 (500)
0x00001364: 0x8036            - O_GREATER_EQUAL
0x00001366: 0x802F            - O_IF
0x00001368: 0xC001 0x00000027 - O_INTOP(0x00000027)   // 39 (39)
0x0000136E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001374: 0x80C6            - O_SET_GLOBAL_VAR
0x00001376: 0xC001 0x0000147a - O_INTOP(0x0000147a)   // 5242 (5242)
0x0000137C: 0x8004            - O_JMP
0x0000137E: 0xC001 0x000013ac - O_INTOP(0x000013ac)   // 5036 (5036)
0x00001384: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000138A: 0x80C5            - O_GLOBAL_VAR
0x0000138C: 0xC001 0x000000fa - O_INTOP(0x000000fa)   // 250 (250)
0x00001392: 0x8036            - O_GREATER_EQUAL
0x00001394: 0x802F            - O_IF
0x00001396: 0xC001 0x00000028 - O_INTOP(0x00000028)   // 40 (40)
0x0000139C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000013A2: 0x80C6            - O_SET_GLOBAL_VAR
0x000013A4: 0xC001 0x0000147a - O_INTOP(0x0000147a)   // 5242 (5242)
0x000013AA: 0x8004            - O_JMP
0x000013AC: 0xC001 0x000013dc - O_INTOP(0x000013dc)   // 5084 (5084)
0x000013B2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000013B8: 0x80C5            - O_GLOBAL_VAR
0x000013BA: 0xC001 0x000000fa - O_INTOP(0x000000fa)   // 250 (250)
0x000013C0: 0x8046            - O_NEGATE
0x000013C2: 0x8038            - O_GREATER
0x000013C4: 0x802F            - O_IF
0x000013C6: 0xC001 0x00000029 - O_INTOP(0x00000029)   // 41 (41)
0x000013CC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000013D2: 0x80C6            - O_SET_GLOBAL_VAR
0x000013D4: 0xC001 0x0000147a - O_INTOP(0x0000147a)   // 5242 (5242)
0x000013DA: 0x8004            - O_JMP
0x000013DC: 0xC001 0x0000140c - O_INTOP(0x0000140c)   // 5132 (5132)
0x000013E2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000013E8: 0x80C5            - O_GLOBAL_VAR
0x000013EA: 0xC001 0x000001f4 - O_INTOP(0x000001f4)   // 500 (500)
0x000013F0: 0x8046            - O_NEGATE
0x000013F2: 0x8038            - O_GREATER
0x000013F4: 0x802F            - O_IF
0x000013F6: 0xC001 0x0000002a - O_INTOP(0x0000002a)   // 42 (42)
0x000013FC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001402: 0x80C6            - O_SET_GLOBAL_VAR
0x00001404: 0xC001 0x0000147a - O_INTOP(0x0000147a)   // 5242 (5242)
0x0000140A: 0x8004            - O_JMP
0x0000140C: 0xC001 0x0000143c - O_INTOP(0x0000143c)   // 5180 (5180)
0x00001412: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001418: 0x80C5            - O_GLOBAL_VAR
0x0000141A: 0xC001 0x000002ee - O_INTOP(0x000002ee)   // 750 (750)
0x00001420: 0x8046            - O_NEGATE
0x00001422: 0x8038            - O_GREATER
0x00001424: 0x802F            - O_IF
0x00001426: 0xC001 0x0000002b - O_INTOP(0x0000002b)   // 43 (43)
0x0000142C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001432: 0x80C6            - O_SET_GLOBAL_VAR
0x00001434: 0xC001 0x0000147a - O_INTOP(0x0000147a)   // 5242 (5242)
0x0000143A: 0x8004            - O_JMP
0x0000143C: 0xC001 0x0000146c - O_INTOP(0x0000146c)   // 5228 (5228)
0x00001442: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001448: 0x80C5            - O_GLOBAL_VAR
0x0000144A: 0xC001 0x000003e8 - O_INTOP(0x000003e8)   // 1000 (1000)
0x00001450: 0x8046            - O_NEGATE
0x00001452: 0x8038            - O_GREATER
0x00001454: 0x802F            - O_IF
0x00001456: 0xC001 0x0000002c - O_INTOP(0x0000002c)   // 44 (44)
0x0000145C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001462: 0x80C6            - O_SET_GLOBAL_VAR
0x00001464: 0xC001 0x0000147a - O_INTOP(0x0000147a)   // 5242 (5242)
0x0000146A: 0x8004            - O_JMP
0x0000146C: 0xC001 0x0000002d - O_INTOP(0x0000002d)   // 45 (45)
0x00001472: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001478: 0x80C6            - O_SET_GLOBAL_VAR
0x0000147A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001480: 0x800D            - O_D_TO_A
0x00001482: 0x8019            - O_SWAPA
0x00001484: 0x802A            - O_POP_TO_BASE
0x00001486: 0x8029            - O_POP_BASE
0x00001488: 0x800C            - O_A_TO_D
0x0000148A: 0x801C            - O_POP_RETURN
0x0000148C: 0x802A            - O_POP_TO_BASE
0x0000148E: 0x8029            - O_POP_BASE
0x00001490: 0x801C            - O_POP_RETURN

3: CheckRep (0x00001492)
===============================
0x00001492: 0x802B            - O_PUSH_BASE
0x00001494: 0xC001 0x00001512 - O_INTOP(0x00001512)   // 5394 (5394)
0x0000149A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000014A0: 0x80C5            - O_GLOBAL_VAR
0x000014A2: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000014A8: 0x80C5            - O_GLOBAL_VAR
0x000014AA: 0x8039            - O_ADD
0x000014AC: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x000014B2: 0x8036            - O_GREATER_EQUAL
0x000014B4: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000014BA: 0x80C5            - O_GLOBAL_VAR
0x000014BC: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000014C2: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000014C8: 0x80C5            - O_GLOBAL_VAR
0x000014CA: 0x803B            - O_MUL
0x000014CC: 0x8038            - O_GREATER
0x000014CE: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000014D4: 0x80C5            - O_GLOBAL_VAR
0x000014D6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000014DC: 0x8033            - O_EQUAL
0x000014DE: 0x803F            - O_OR
0x000014E0: 0x803E            - O_AND
0x000014E2: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000014E8: 0x80C5            - O_GLOBAL_VAR
0x000014EA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000014F0: 0x8033            - O_EQUAL
0x000014F2: 0x803E            - O_AND
0x000014F4: 0x802F            - O_IF
0x000014F6: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000014FC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001502: 0x80C6            - O_SET_GLOBAL_VAR
0x00001504: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x0000150A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001510: 0x80C6            - O_SET_GLOBAL_VAR
0x00001512: 0xC001 0x0000157e - O_INTOP(0x0000157e)   // 5502 (5502)
0x00001518: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000151E: 0x80C5            - O_GLOBAL_VAR
0x00001520: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001526: 0x80C5            - O_GLOBAL_VAR
0x00001528: 0x8039            - O_ADD
0x0000152A: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00001530: 0x8036            - O_GREATER_EQUAL
0x00001532: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001538: 0x80C5            - O_GLOBAL_VAR
0x0000153A: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001540: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001546: 0x80C5            - O_GLOBAL_VAR
0x00001548: 0x803B            - O_MUL
0x0000154A: 0x8038            - O_GREATER
0x0000154C: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001552: 0x80C5            - O_GLOBAL_VAR
0x00001554: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000155A: 0x8033            - O_EQUAL
0x0000155C: 0x803F            - O_OR
0x0000155E: 0x803E            - O_AND
0x00001560: 0x802F            - O_IF
0x00001562: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001568: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000156E: 0x80C6            - O_SET_GLOBAL_VAR
0x00001570: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001576: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000157C: 0x80C6            - O_SET_GLOBAL_VAR
0x0000157E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001584: 0x800D            - O_D_TO_A
0x00001586: 0x8019            - O_SWAPA
0x00001588: 0x802A            - O_POP_TO_BASE
0x0000158A: 0x8029            - O_POP_BASE
0x0000158C: 0x800C            - O_A_TO_D
0x0000158E: 0x801C            - O_POP_RETURN
0x00001590: 0x802A            - O_POP_TO_BASE
0x00001592: 0x8029            - O_POP_BASE
0x00001594: 0x801C            - O_POP_RETURN

4: critter_p_proc (0x00001596)
===============================
0x00001596: 0x802B            - O_PUSH_BASE
0x00001598: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000159E: 0xC001 0x0000163a - O_INTOP(0x0000163a)   // 5690 (5690)
0x000015A4: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000015AA: 0x80C1            - O_LOCAL_VAR
0x000015AC: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000015B2: 0x8033            - O_EQUAL
0x000015B4: 0x80BC            - O_SELF_OBJ
0x000015B6: 0x80BF            - O_DUDE_OBJ
0x000015B8: 0x80DC            - O_OBJ_CAN_SEE_OBJ
0x000015BA: 0x803E            - O_AND
0x000015BC: 0x802F            - O_IF
0x000015BE: 0x80BC            - O_SELF_OBJ
0x000015C0: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000015C6: 0xC001 0x00000067 - O_INTOP(0x00000067)   // 103 (103)
0x000015CC: 0x8105            - O_MESSAGE_STR
0x000015CE: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000015D4: 0x810A            - O_FLOAT_MSG
0x000015D6: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000015DC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000015E2: 0x80C2            - O_SET_LOCAL_VAR
0x000015E4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000015EA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000015F0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000015F6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000015FC: 0xC001 0x00007530 - O_INTOP(0x00007530)   // 30000 (30000)
0x00001602: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001608: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000160E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001614: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000161A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001620: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001626: 0xC001 0x00007530 - O_INTOP(0x00007530)   // 30000 (30000)
0x0000162C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001632: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001638: 0x80D0            - O_ATTACK_COMPLEX
0x0000163A: 0xC001 0x000016c8 - O_INTOP(0x000016c8)   // 5832 (5832)
0x00001640: 0xC001 0x00000007 - O_INTOP(0x00000007)   // 7 (7)
0x00001646: 0x80C5            - O_GLOBAL_VAR
0x00001648: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000164E: 0x8033            - O_EQUAL
0x00001650: 0x80BC            - O_SELF_OBJ
0x00001652: 0x80BF            - O_DUDE_OBJ
0x00001654: 0x80DC            - O_OBJ_CAN_SEE_OBJ
0x00001656: 0x803E            - O_AND
0x00001658: 0x802F            - O_IF
0x0000165A: 0x80BC            - O_SELF_OBJ
0x0000165C: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00001662: 0xC001 0x00000067 - O_INTOP(0x00000067)   // 103 (103)
0x00001668: 0x8105            - O_MESSAGE_STR
0x0000166A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001670: 0x810A            - O_FLOAT_MSG
0x00001672: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001678: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000167E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001684: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000168A: 0xC001 0x00007530 - O_INTOP(0x00007530)   // 30000 (30000)
0x00001690: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001696: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000169C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000016A2: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000016A8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000016AE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000016B4: 0xC001 0x00007530 - O_INTOP(0x00007530)   // 30000 (30000)
0x000016BA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000016C0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000016C6: 0x80D0            - O_ATTACK_COMPLEX
0x000016C8: 0xC001 0x00001712 - O_INTOP(0x00001712)   // 5906 (5906)
0x000016CE: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x000016D4: 0x80C1            - O_LOCAL_VAR
0x000016D6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000016DC: 0x8033            - O_EQUAL
0x000016DE: 0x802F            - O_IF
0x000016E0: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x000016E6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000016EC: 0x80C2            - O_SET_LOCAL_VAR
0x000016EE: 0x80BF            - O_DUDE_OBJ
0x000016F0: 0xC001 0x000003e8 - O_INTOP(0x000003e8)   // 1000 (1000)
0x000016F6: 0x80BF            - O_DUDE_OBJ
0x000016F8: 0x80D4            - O_TILE_NUM
0x000016FA: 0x80BC            - O_SELF_OBJ
0x000016FC: 0x80D4            - O_TILE_NUM
0x000016FE: 0x814C            - O_ROTATION_TO_TILE
0x00001700: 0x810C            - O_ANIM
0x00001702: 0x80BC            - O_SELF_OBJ
0x00001704: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x0000170A: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001710: 0x80F0            - O_ADD_TIMER_EVENT
0x00001712: 0xC001 0x00001780 - O_INTOP(0x00001780)   // 6016 (6016)
0x00001718: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x0000171E: 0x80C1            - O_LOCAL_VAR
0x00001720: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001726: 0x8033            - O_EQUAL
0x00001728: 0xC001 0x00000280 - O_INTOP(0x00000280)   // 640 (640)
0x0000172E: 0x80C5            - O_GLOBAL_VAR
0x00001730: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001736: 0x8033            - O_EQUAL
0x00001738: 0x803E            - O_AND
0x0000173A: 0x802F            - O_IF
0x0000173C: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x00001742: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001748: 0x80C2            - O_SET_LOCAL_VAR
0x0000174A: 0x80BF            - O_DUDE_OBJ
0x0000174C: 0xC001 0x00004b73 - O_INTOP(0x00004b73)   // 19315 (19315)
0x00001752: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001758: 0x80B6            - O_MOVE_TO
0x0000175A: 0x801A            - O_POP
0x0000175C: 0x80BF            - O_DUDE_OBJ
0x0000175E: 0xC001 0x000003e8 - O_INTOP(0x000003e8)   // 1000 (1000)
0x00001764: 0x80BF            - O_DUDE_OBJ
0x00001766: 0x80D4            - O_TILE_NUM
0x00001768: 0x80BC            - O_SELF_OBJ
0x0000176A: 0x80D4            - O_TILE_NUM
0x0000176C: 0x814C            - O_ROTATION_TO_TILE
0x0000176E: 0x810C            - O_ANIM
0x00001770: 0x80BC            - O_SELF_OBJ
0x00001772: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00001778: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x0000177E: 0x80F0            - O_ADD_TIMER_EVENT
0x00001780: 0xC001 0x0000185a - O_INTOP(0x0000185a)   // 6234 (6234)
0x00001786: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x0000178C: 0x80C1            - O_LOCAL_VAR
0x0000178E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001794: 0x8033            - O_EQUAL
0x00001796: 0x802F            - O_IF
0x00001798: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x0000179E: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000017A4: 0x80C2            - O_SET_LOCAL_VAR
0x000017A6: 0x8133            - O_GAME_UI_DISABLE
0x000017A8: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000017AE: 0x8136            - O_GFADE_OUT
0x000017B0: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x000017B6: 0xC001 0x0000003c - O_INTOP(0x0000003c)   // 60 (60)
0x000017BC: 0x803B            - O_MUL
0x000017BE: 0xC001 0x0000003c - O_INTOP(0x0000003c)   // 60 (60)
0x000017C4: 0x803B            - O_MUL
0x000017C6: 0xC001 0x00000018 - O_INTOP(0x00000018)   // 24 (24)
0x000017CC: 0x803B            - O_MUL
0x000017CE: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000017D4: 0x803B            - O_MUL
0x000017D6: 0x80FC            - O_GAME_TIME_ADVANCE
0x000017D8: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000017DE: 0x8137            - O_GFADE_IN
0x000017E0: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000017E6: 0xC001 0x00000068 - O_INTOP(0x00000068)   // 104 (104)
0x000017EC: 0x8105            - O_MESSAGE_STR
0x000017EE: 0x80B8            - O_DISPLAY_MSG
0x000017F0: 0xC001 0x000001f4 - O_INTOP(0x000001f4)   // 500 (500)
0x000017F6: 0x80A1            - O_GIVE_EXP_POINTS
0x000017F8: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x000017FE: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x00001804: 0x8105            - O_MESSAGE_STR
0x00001806: 0xC001 0x000001f4 - O_INTOP(0x000001f4)   // 500 (500)
0x0000180C: 0x8039            - O_ADD
0x0000180E: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x00001814: 0xC001 0x00000065 - O_INTOP(0x00000065)   // 101 (101)
0x0000181A: 0x8105            - O_MESSAGE_STR
0x0000181C: 0x8039            - O_ADD
0x0000181E: 0x80B8            - O_DISPLAY_MSG
0x00001820: 0x80BF            - O_DUDE_OBJ
0x00001822: 0xC001 0x00000007 - O_INTOP(0x00000007)   // 7 (7)
0x00001828: 0x80CA            - O_GET_CRITTER_STAT
0x0000182A: 0x80BF            - O_DUDE_OBJ
0x0000182C: 0xC001 0x00000023 - O_INTOP(0x00000023)   // 35 (35)
0x00001832: 0x80CA            - O_GET_CRITTER_STAT
0x00001834: 0x803A            - O_SUB
0x00001836: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000183C: 0x8031            - O_STORE
0x0000183E: 0x80BF            - O_DUDE_OBJ
0x00001840: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001846: 0x8032            - O_FETCH
0x00001848: 0x80E8            - O_CRITTER_HEAL
0x0000184A: 0xC001 0x00000284 - O_INTOP(0x00000284)   // 644 (644)
0x00001850: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x00001856: 0x80C6            - O_SET_GLOBAL_VAR
0x00001858: 0x8134            - O_GAME_UI_ENABLE
0x0000185A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001860: 0x800D            - O_D_TO_A
0x00001862: 0x8019            - O_SWAPA
0x00001864: 0x802A            - O_POP_TO_BASE
0x00001866: 0x8029            - O_POP_BASE
0x00001868: 0x800C            - O_A_TO_D
0x0000186A: 0x801C            - O_POP_RETURN
0x0000186C: 0x802A            - O_POP_TO_BASE
0x0000186E: 0x8029            - O_POP_BASE
0x00001870: 0x801C            - O_POP_RETURN

5: timed_event_p_proc (0x00001872)
===============================
0x00001872: 0x802B            - O_PUSH_BASE
0x00001874: 0xC001 0x00001888 - O_INTOP(0x00001888)   // 6280 (6280)
0x0000187A: 0x80F7            - O_FIXED_PARAM
0x0000187C: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001882: 0x8033            - O_EQUAL
0x00001884: 0x802F            - O_IF
0x00001886: 0x80F9            - O_DIALOGUE_SYSTEM_ENTER
0x00001888: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000188E: 0x800D            - O_D_TO_A
0x00001890: 0x8019            - O_SWAPA
0x00001892: 0x802A            - O_POP_TO_BASE
0x00001894: 0x8029            - O_POP_BASE
0x00001896: 0x800C            - O_A_TO_D
0x00001898: 0x801C            - O_POP_RETURN
0x0000189A: 0x802A            - O_POP_TO_BASE
0x0000189C: 0x8029            - O_POP_BASE
0x0000189E: 0x801C            - O_POP_RETURN

6: pickup_p_proc (0x000018a0)
===============================
0x000018A0: 0x802B            - O_PUSH_BASE
0x000018A2: 0xC001 0x000018be - O_INTOP(0x000018be)   // 6334 (6334)
0x000018A8: 0x80BD            - O_SOURCE_OBJ
0x000018AA: 0x80BF            - O_DUDE_OBJ
0x000018AC: 0x8033            - O_EQUAL
0x000018AE: 0x802F            - O_IF
0x000018B0: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x000018B6: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000018BC: 0x80C2            - O_SET_LOCAL_VAR
0x000018BE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000018C4: 0x800D            - O_D_TO_A
0x000018C6: 0x8019            - O_SWAPA
0x000018C8: 0x802A            - O_POP_TO_BASE
0x000018CA: 0x8029            - O_POP_BASE
0x000018CC: 0x800C            - O_A_TO_D
0x000018CE: 0x801C            - O_POP_RETURN
0x000018D0: 0x802A            - O_POP_TO_BASE
0x000018D2: 0x8029            - O_POP_BASE
0x000018D4: 0x801C            - O_POP_RETURN

7: destroy_p_proc (0x000018d6)
===============================
0x000018D6: 0x802B            - O_PUSH_BASE
0x000018D8: 0xC001 0x000018fe - O_INTOP(0x000018fe)   // 6398 (6398)
0x000018DE: 0xC001 0x00000284 - O_INTOP(0x00000284)   // 644 (644)
0x000018E4: 0x80C5            - O_GLOBAL_VAR
0x000018E6: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x000018EC: 0x8033            - O_EQUAL
0x000018EE: 0x802F            - O_IF
0x000018F0: 0xC001 0x00000284 - O_INTOP(0x00000284)   // 644 (644)
0x000018F6: 0xC001 0x0000001e - O_INTOP(0x0000001e)   // 30 (30)
0x000018FC: 0x80C6            - O_SET_GLOBAL_VAR
0x000018FE: 0xC001 0x000002c1 - O_INTOP(0x000002c1)   // 705 (705)
0x00001904: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000190A: 0x8046            - O_NEGATE
0x0000190C: 0x80C6            - O_SET_GLOBAL_VAR
0x0000190E: 0xC001 0x0000197c - O_INTOP(0x0000197c)   // 6524 (6524)
0x00001914: 0x80BD            - O_SOURCE_OBJ
0x00001916: 0x80BF            - O_DUDE_OBJ
0x00001918: 0x8033            - O_EQUAL
0x0000191A: 0x802F            - O_IF
0x0000191C: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001922: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001928: 0x80C5            - O_GLOBAL_VAR
0x0000192A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001930: 0x8039            - O_ADD
0x00001932: 0x80C6            - O_SET_GLOBAL_VAR
0x00001934: 0xC001 0x0000194a - O_INTOP(0x0000194a)   // 6474 (6474)
0x0000193A: 0x800D            - O_D_TO_A
0x0000193C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001942: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001948: 0x8005            - O_CALL
0x0000194A: 0x801A            - O_POP
0x0000194C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001952: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001958: 0x80C5            - O_GLOBAL_VAR
0x0000195A: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00001960: 0x803A            - O_SUB
0x00001962: 0x80C6            - O_SET_GLOBAL_VAR
0x00001964: 0xC001 0x0000197a - O_INTOP(0x0000197a)   // 6522 (6522)
0x0000196A: 0x800D            - O_D_TO_A
0x0000196C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001972: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001978: 0x8005            - O_CALL
0x0000197A: 0x801A            - O_POP
0x0000197C: 0xC001 0x0000002f - O_INTOP(0x0000002f)   // 47 (47)
0x00001982: 0xC001 0x0000002f - O_INTOP(0x0000002f)   // 47 (47)
0x00001988: 0x80C5            - O_GLOBAL_VAR
0x0000198A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001990: 0x803A            - O_SUB
0x00001992: 0x80C6            - O_SET_GLOBAL_VAR
0x00001994: 0xC001 0x00000007 - O_INTOP(0x00000007)   // 7 (7)
0x0000199A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000019A0: 0x80C6            - O_SET_GLOBAL_VAR
0x000019A2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000019A8: 0x800D            - O_D_TO_A
0x000019AA: 0x8019            - O_SWAPA
0x000019AC: 0x802A            - O_POP_TO_BASE
0x000019AE: 0x8029            - O_POP_BASE
0x000019B0: 0x800C            - O_A_TO_D
0x000019B2: 0x801C            - O_POP_RETURN
0x000019B4: 0x802A            - O_POP_TO_BASE
0x000019B6: 0x8029            - O_POP_BASE
0x000019B8: 0x801C            - O_POP_RETURN

8: look_at_p_proc (0x000019ba)
===============================
0x000019BA: 0x802B            - O_PUSH_BASE
0x000019BC: 0x80B9            - O_SCRIPT_OVERRIDES
0x000019BE: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000019C4: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x000019CA: 0x8105            - O_MESSAGE_STR
0x000019CC: 0x80B8            - O_DISPLAY_MSG
0x000019CE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000019D4: 0x800D            - O_D_TO_A
0x000019D6: 0x8019            - O_SWAPA
0x000019D8: 0x802A            - O_POP_TO_BASE
0x000019DA: 0x8029            - O_POP_BASE
0x000019DC: 0x800C            - O_A_TO_D
0x000019DE: 0x801C            - O_POP_RETURN
0x000019E0: 0x802A            - O_POP_TO_BASE
0x000019E2: 0x8029            - O_POP_BASE
0x000019E4: 0x801C            - O_POP_RETURN

9: description_p_proc (0x000019e6)
===============================
0x000019E6: 0x802B            - O_PUSH_BASE
0x000019E8: 0x80B9            - O_SCRIPT_OVERRIDES
0x000019EA: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000019F0: 0xC001 0x00000066 - O_INTOP(0x00000066)   // 102 (102)
0x000019F6: 0x8105            - O_MESSAGE_STR
0x000019F8: 0x80B8            - O_DISPLAY_MSG
0x000019FA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001A00: 0x800D            - O_D_TO_A
0x00001A02: 0x8019            - O_SWAPA
0x00001A04: 0x802A            - O_POP_TO_BASE
0x00001A06: 0x8029            - O_POP_BASE
0x00001A08: 0x800C            - O_A_TO_D
0x00001A0A: 0x801C            - O_POP_RETURN
0x00001A0C: 0x802A            - O_POP_TO_BASE
0x00001A0E: 0x8029            - O_POP_BASE
0x00001A10: 0x801C            - O_POP_RETURN

10: damage_p_proc (0x00001a12)
===============================
0x00001A12: 0x802B            - O_PUSH_BASE
0x00001A14: 0xC001 0x00001a30 - O_INTOP(0x00001a30)   // 6704 (6704)
0x00001A1A: 0x80BD            - O_SOURCE_OBJ
0x00001A1C: 0x80BF            - O_DUDE_OBJ
0x00001A1E: 0x8033            - O_EQUAL
0x00001A20: 0x802F            - O_IF
0x00001A22: 0xC001 0x00000007 - O_INTOP(0x00000007)   // 7 (7)
0x00001A28: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001A2E: 0x80C6            - O_SET_GLOBAL_VAR
0x00001A30: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001A36: 0x800D            - O_D_TO_A
0x00001A38: 0x8019            - O_SWAPA
0x00001A3A: 0x802A            - O_POP_TO_BASE
0x00001A3C: 0x8029            - O_POP_BASE
0x00001A3E: 0x800C            - O_A_TO_D
0x00001A40: 0x801C            - O_POP_RETURN
0x00001A42: 0x802A            - O_POP_TO_BASE
0x00001A44: 0x8029            - O_POP_BASE
0x00001A46: 0x801C            - O_POP_RETURN

11: map_enter_p_proc (0x00001a48)
===============================
0x00001A48: 0x802B            - O_PUSH_BASE
0x00001A4A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001A50: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x00001A56: 0x8013            - O_STORE_GLOBAL
0x00001A58: 0x80BC            - O_SELF_OBJ
0x00001A5A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001A60: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00001A66: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001A6C: 0x8102            - O_CRITTER_ADD_TRAIT
0x00001A6E: 0x801A            - O_POP
0x00001A70: 0x80BC            - O_SELF_OBJ
0x00001A72: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001A78: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001A7E: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001A84: 0x8102            - O_CRITTER_ADD_TRAIT
0x00001A86: 0x801A            - O_POP
0x00001A88: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001A8E: 0x800D            - O_D_TO_A
0x00001A90: 0x8019            - O_SWAPA
0x00001A92: 0x802A            - O_POP_TO_BASE
0x00001A94: 0x8029            - O_POP_BASE
0x00001A96: 0x800C            - O_A_TO_D
0x00001A98: 0x801C            - O_POP_RETURN
0x00001A9A: 0x802A            - O_POP_TO_BASE
0x00001A9C: 0x8029            - O_POP_BASE
0x00001A9E: 0x801C            - O_POP_RETURN

12: Node999 (0x00001aa0)
===============================
0x00001AA0: 0x802B            - O_PUSH_BASE
0x00001AA2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001AA8: 0x800D            - O_D_TO_A
0x00001AAA: 0x8019            - O_SWAPA
0x00001AAC: 0x802A            - O_POP_TO_BASE
0x00001AAE: 0x8029            - O_POP_BASE
0x00001AB0: 0x800C            - O_A_TO_D
0x00001AB2: 0x801C            - O_POP_RETURN
0x00001AB4: 0x802A            - O_POP_TO_BASE
0x00001AB6: 0x8029            - O_POP_BASE
0x00001AB8: 0x801C            - O_POP_RETURN

13: Node998 (0x00001aba)
===============================
0x00001ABA: 0x802B            - O_PUSH_BASE
0x00001ABC: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001AC2: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001AC8: 0x80C2            - O_SET_LOCAL_VAR
0x00001ACA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001AD0: 0x800D            - O_D_TO_A
0x00001AD2: 0x8019            - O_SWAPA
0x00001AD4: 0x802A            - O_POP_TO_BASE
0x00001AD6: 0x8029            - O_POP_BASE
0x00001AD8: 0x800C            - O_A_TO_D
0x00001ADA: 0x801C            - O_POP_RETURN
0x00001ADC: 0x802A            - O_POP_TO_BASE
0x00001ADE: 0x8029            - O_POP_BASE
0x00001AE0: 0x801C            - O_POP_RETURN

14: Node003 (0x00001ae2)
===============================
0x00001AE2: 0x802B            - O_PUSH_BASE
0x00001AE4: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00001AEA: 0xC001 0x0000006a - O_INTOP(0x0000006a)   // 106 (106)
0x00001AF0: 0x811E            - O_GSAY_REPLY
0x00001AF2: 0xC001 0x00001b2c - O_INTOP(0x00001b2c)   // 6956 (6956)
0x00001AF8: 0x80BF            - O_DUDE_OBJ
0x00001AFA: 0xC001 0x00000022 - O_INTOP(0x00000022)   // 34 (34)
0x00001B00: 0x80CA            - O_GET_CRITTER_STAT
0x00001B02: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001B08: 0x8033            - O_EQUAL
0x00001B0A: 0x802F            - O_IF
0x00001B0C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001B12: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00001B18: 0xC001 0x0000006c - O_INTOP(0x0000006c)   // 108 (108)
0x00001B1E: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x00001B24: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001B2A: 0x8121            - O_GIQ_OPTION
0x00001B2C: 0xC001 0x00001b66 - O_INTOP(0x00001b66)   // 7014 (7014)
0x00001B32: 0x80BF            - O_DUDE_OBJ
0x00001B34: 0xC001 0x00000022 - O_INTOP(0x00000022)   // 34 (34)
0x00001B3A: 0x80CA            - O_GET_CRITTER_STAT
0x00001B3C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001B42: 0x8033            - O_EQUAL
0x00001B44: 0x802F            - O_IF
0x00001B46: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001B4C: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00001B52: 0xC001 0x0000006e - O_INTOP(0x0000006e)   // 110 (110)
0x00001B58: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x00001B5E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001B64: 0x8121            - O_GIQ_OPTION
0x00001B66: 0xC001 0x00001ba0 - O_INTOP(0x00001ba0)   // 7072 (7072)
0x00001B6C: 0x80BF            - O_DUDE_OBJ
0x00001B6E: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001B74: 0x80CA            - O_GET_CRITTER_STAT
0x00001B76: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001B7C: 0x8035            - O_LESS_EQUAL
0x00001B7E: 0x802F            - O_IF
0x00001B80: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001B86: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00001B8C: 0xC001 0x00000070 - O_INTOP(0x00000070)   // 112 (112)
0x00001B92: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x00001B98: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001B9E: 0x8121            - O_GIQ_OPTION
0x00001BA0: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001BA6: 0x8046            - O_NEGATE
0x00001BA8: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00001BAE: 0xC001 0x00000072 - O_INTOP(0x00000072)   // 114 (114)
0x00001BB4: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x00001BBA: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001BC0: 0x8121            - O_GIQ_OPTION
0x00001BC2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001BC8: 0x800D            - O_D_TO_A
0x00001BCA: 0x8019            - O_SWAPA
0x00001BCC: 0x802A            - O_POP_TO_BASE
0x00001BCE: 0x8029            - O_POP_BASE
0x00001BD0: 0x800C            - O_A_TO_D
0x00001BD2: 0x801C            - O_POP_RETURN
0x00001BD4: 0x802A            - O_POP_TO_BASE
0x00001BD6: 0x8029            - O_POP_BASE
0x00001BD8: 0x801C            - O_POP_RETURN

15: Node004 (0x00001bda)
===============================
0x00001BDA: 0x802B            - O_PUSH_BASE
0x00001BDC: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00001BE2: 0xC001 0x00000074 - O_INTOP(0x00000074)   // 116 (116)
0x00001BE8: 0x811E            - O_GSAY_REPLY
0x00001BEA: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001BF0: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00001BF6: 0xC001 0x00000076 - O_INTOP(0x00000076)   // 118 (118)
0x00001BFC: 0xC001 0x00000010 - O_INTOP(0x00000010)   // 16 (16)
0x00001C02: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001C08: 0x8121            - O_GIQ_OPTION
0x00001C0A: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001C10: 0x8046            - O_NEGATE
0x00001C12: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00001C18: 0xC001 0x00000078 - O_INTOP(0x00000078)   // 120 (120)
0x00001C1E: 0xC001 0x00000010 - O_INTOP(0x00000010)   // 16 (16)
0x00001C24: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001C2A: 0x8121            - O_GIQ_OPTION
0x00001C2C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001C32: 0x800D            - O_D_TO_A
0x00001C34: 0x8019            - O_SWAPA
0x00001C36: 0x802A            - O_POP_TO_BASE
0x00001C38: 0x8029            - O_POP_BASE
0x00001C3A: 0x800C            - O_A_TO_D
0x00001C3C: 0x801C            - O_POP_RETURN
0x00001C3E: 0x802A            - O_POP_TO_BASE
0x00001C40: 0x8029            - O_POP_BASE
0x00001C42: 0x801C            - O_POP_RETURN

16: Node005 (0x00001c44)
===============================
0x00001C44: 0x802B            - O_PUSH_BASE
0x00001C46: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00001C4C: 0xC001 0x0000007a - O_INTOP(0x0000007a)   // 122 (122)
0x00001C52: 0x811E            - O_GSAY_REPLY
0x00001C54: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001C5A: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00001C60: 0xC001 0x0000007c - O_INTOP(0x0000007c)   // 124 (124)
0x00001C66: 0xC001 0x00000011 - O_INTOP(0x00000011)   // 17 (17)
0x00001C6C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001C72: 0x8121            - O_GIQ_OPTION
0x00001C74: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001C7A: 0x8046            - O_NEGATE
0x00001C7C: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00001C82: 0xC001 0x0000007e - O_INTOP(0x0000007e)   // 126 (126)
0x00001C88: 0xC001 0x00000011 - O_INTOP(0x00000011)   // 17 (17)
0x00001C8E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001C94: 0x8121            - O_GIQ_OPTION
0x00001C96: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001C9C: 0x800D            - O_D_TO_A
0x00001C9E: 0x8019            - O_SWAPA
0x00001CA0: 0x802A            - O_POP_TO_BASE
0x00001CA2: 0x8029            - O_POP_BASE
0x00001CA4: 0x800C            - O_A_TO_D
0x00001CA6: 0x801C            - O_POP_RETURN
0x00001CA8: 0x802A            - O_POP_TO_BASE
0x00001CAA: 0x8029            - O_POP_BASE
0x00001CAC: 0x801C            - O_POP_RETURN

17: Node006 (0x00001cae)
===============================
0x00001CAE: 0x802B            - O_PUSH_BASE
0x00001CB0: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00001CB6: 0xC001 0x00000080 - O_INTOP(0x00000080)   // 128 (128)
0x00001CBC: 0x811E            - O_GSAY_REPLY
0x00001CBE: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001CC4: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00001CCA: 0xC001 0x00000082 - O_INTOP(0x00000082)   // 130 (130)
0x00001CD0: 0xC001 0x00000012 - O_INTOP(0x00000012)   // 18 (18)
0x00001CD6: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001CDC: 0x8121            - O_GIQ_OPTION
0x00001CDE: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001CE4: 0x8046            - O_NEGATE
0x00001CE6: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00001CEC: 0xC001 0x00000084 - O_INTOP(0x00000084)   // 132 (132)
0x00001CF2: 0xC001 0x00000012 - O_INTOP(0x00000012)   // 18 (18)
0x00001CF8: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001CFE: 0x8121            - O_GIQ_OPTION
0x00001D00: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001D06: 0x800D            - O_D_TO_A
0x00001D08: 0x8019            - O_SWAPA
0x00001D0A: 0x802A            - O_POP_TO_BASE
0x00001D0C: 0x8029            - O_POP_BASE
0x00001D0E: 0x800C            - O_A_TO_D
0x00001D10: 0x801C            - O_POP_RETURN
0x00001D12: 0x802A            - O_POP_TO_BASE
0x00001D14: 0x8029            - O_POP_BASE
0x00001D16: 0x801C            - O_POP_RETURN

18: Node007 (0x00001d18)
===============================
0x00001D18: 0x802B            - O_PUSH_BASE
0x00001D1A: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00001D20: 0xC001 0x00000086 - O_INTOP(0x00000086)   // 134 (134)
0x00001D26: 0x811E            - O_GSAY_REPLY
0x00001D28: 0xC001 0x00001de0 - O_INTOP(0x00001de0)   // 7648 (7648)
0x00001D2E: 0x80BF            - O_DUDE_OBJ
0x00001D30: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001D36: 0x80CA            - O_GET_CRITTER_STAT
0x00001D38: 0x80BF            - O_DUDE_OBJ
0x00001D3A: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001D40: 0x80CA            - O_GET_CRITTER_STAT
0x00001D42: 0x8039            - O_ADD
0x00001D44: 0x80BF            - O_DUDE_OBJ
0x00001D46: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001D4C: 0x80CA            - O_GET_CRITTER_STAT
0x00001D4E: 0x8039            - O_ADD
0x00001D50: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x00001D56: 0x8036            - O_GREATER_EQUAL
0x00001D58: 0x80BF            - O_DUDE_OBJ
0x00001D5A: 0xC001 0x00000022 - O_INTOP(0x00000022)   // 34 (34)
0x00001D60: 0x80CA            - O_GET_CRITTER_STAT
0x00001D62: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001D68: 0x8033            - O_EQUAL
0x00001D6A: 0x803E            - O_AND
0x00001D6C: 0x80BF            - O_DUDE_OBJ
0x00001D6E: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001D74: 0x80CA            - O_GET_CRITTER_STAT
0x00001D76: 0xC001 0x00000005 - O_INTOP(0x00000005)   // 5 (5)
0x00001D7C: 0x8036            - O_GREATER_EQUAL
0x00001D7E: 0x80BF            - O_DUDE_OBJ
0x00001D80: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001D86: 0x80CA            - O_GET_CRITTER_STAT
0x00001D88: 0xC001 0x00000006 - O_INTOP(0x00000006)   // 6 (6)
0x00001D8E: 0x8036            - O_GREATER_EQUAL
0x00001D90: 0x803E            - O_AND
0x00001D92: 0x803F            - O_OR
0x00001D94: 0x802F            - O_IF
0x00001D96: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001D9C: 0x8046            - O_NEGATE
0x00001D9E: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00001DA4: 0xC001 0x00000088 - O_INTOP(0x00000088)   // 136 (136)
0x00001DAA: 0xC001 0x00000013 - O_INTOP(0x00000013)   // 19 (19)
0x00001DB0: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001DB6: 0x8121            - O_GIQ_OPTION
0x00001DB8: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001DBE: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00001DC4: 0xC001 0x0000008a - O_INTOP(0x0000008a)   // 138 (138)
0x00001DCA: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x00001DD0: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001DD6: 0x8121            - O_GIQ_OPTION
0x00001DD8: 0xC001 0x00001e22 - O_INTOP(0x00001e22)   // 7714 (7714)
0x00001DDE: 0x8004            - O_JMP
0x00001DE0: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001DE6: 0x8046            - O_NEGATE
0x00001DE8: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00001DEE: 0xC001 0x00000088 - O_INTOP(0x00000088)   // 136 (136)
0x00001DF4: 0xC001 0x00000013 - O_INTOP(0x00000013)   // 19 (19)
0x00001DFA: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001E00: 0x8121            - O_GIQ_OPTION
0x00001E02: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001E08: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00001E0E: 0xC001 0x0000008a - O_INTOP(0x0000008a)   // 138 (138)
0x00001E14: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x00001E1A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001E20: 0x8121            - O_GIQ_OPTION
0x00001E22: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001E28: 0x800D            - O_D_TO_A
0x00001E2A: 0x8019            - O_SWAPA
0x00001E2C: 0x802A            - O_POP_TO_BASE
0x00001E2E: 0x8029            - O_POP_BASE
0x00001E30: 0x800C            - O_A_TO_D
0x00001E32: 0x801C            - O_POP_RETURN
0x00001E34: 0x802A            - O_POP_TO_BASE
0x00001E36: 0x8029            - O_POP_BASE
0x00001E38: 0x801C            - O_POP_RETURN

19: Node008 (0x00001e3a)
===============================
0x00001E3A: 0x802B            - O_PUSH_BASE
0x00001E3C: 0xC001 0x00001e9c - O_INTOP(0x00001e9c)   // 7836 (7836)
0x00001E42: 0x80BF            - O_DUDE_OBJ
0x00001E44: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001E4A: 0x80CA            - O_GET_CRITTER_STAT
0x00001E4C: 0x80BF            - O_DUDE_OBJ
0x00001E4E: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001E54: 0x80CA            - O_GET_CRITTER_STAT
0x00001E56: 0x8039            - O_ADD
0x00001E58: 0x80BF            - O_DUDE_OBJ
0x00001E5A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001E60: 0x80CA            - O_GET_CRITTER_STAT
0x00001E62: 0x80BF            - O_DUDE_OBJ
0x00001E64: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001E6A: 0x80CA            - O_GET_CRITTER_STAT
0x00001E6C: 0x8039            - O_ADD
0x00001E6E: 0x8036            - O_GREATER_EQUAL
0x00001E70: 0x80BF            - O_DUDE_OBJ
0x00001E72: 0xC001 0x00000022 - O_INTOP(0x00000022)   // 34 (34)
0x00001E78: 0x80CA            - O_GET_CRITTER_STAT
0x00001E7A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001E80: 0x8033            - O_EQUAL
0x00001E82: 0x803E            - O_AND
0x00001E84: 0x802F            - O_IF
0x00001E86: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00001E8C: 0xC001 0x0000008c - O_INTOP(0x0000008c)   // 140 (140)
0x00001E92: 0x811E            - O_GSAY_REPLY
0x00001E94: 0xC001 0x00001eaa - O_INTOP(0x00001eaa)   // 7850 (7850)
0x00001E9A: 0x8004            - O_JMP
0x00001E9C: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00001EA2: 0xC001 0x0000008e - O_INTOP(0x0000008e)   // 142 (142)
0x00001EA8: 0x811E            - O_GSAY_REPLY
0x00001EAA: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001EB0: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00001EB6: 0xC001 0x00000090 - O_INTOP(0x00000090)   // 144 (144)
0x00001EBC: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x00001EC2: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001EC8: 0x8121            - O_GIQ_OPTION
0x00001ECA: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001ED0: 0x8046            - O_NEGATE
0x00001ED2: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00001ED8: 0xC001 0x00000092 - O_INTOP(0x00000092)   // 146 (146)
0x00001EDE: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x00001EE4: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001EEA: 0x8121            - O_GIQ_OPTION
0x00001EEC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001EF2: 0x800D            - O_D_TO_A
0x00001EF4: 0x8019            - O_SWAPA
0x00001EF6: 0x802A            - O_POP_TO_BASE
0x00001EF8: 0x8029            - O_POP_BASE
0x00001EFA: 0x800C            - O_A_TO_D
0x00001EFC: 0x801C            - O_POP_RETURN
0x00001EFE: 0x802A            - O_POP_TO_BASE
0x00001F00: 0x8029            - O_POP_BASE
0x00001F02: 0x801C            - O_POP_RETURN

20: Node009 (0x00001f04)
===============================
0x00001F04: 0x802B            - O_PUSH_BASE
0x00001F06: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00001F0C: 0xC001 0x00000094 - O_INTOP(0x00000094)   // 148 (148)
0x00001F12: 0x811E            - O_GSAY_REPLY
0x00001F14: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001F1A: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00001F20: 0xC001 0x00000096 - O_INTOP(0x00000096)   // 150 (150)
0x00001F26: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x00001F2C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001F32: 0x8121            - O_GIQ_OPTION
0x00001F34: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001F3A: 0x8046            - O_NEGATE
0x00001F3C: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00001F42: 0xC001 0x00000098 - O_INTOP(0x00000098)   // 152 (152)
0x00001F48: 0xC001 0x00000015 - O_INTOP(0x00000015)   // 21 (21)
0x00001F4E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001F54: 0x8121            - O_GIQ_OPTION
0x00001F56: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00001F5C: 0x800D            - O_D_TO_A
0x00001F5E: 0x8019            - O_SWAPA
0x00001F60: 0x802A            - O_POP_TO_BASE
0x00001F62: 0x8029            - O_POP_BASE
0x00001F64: 0x800C            - O_A_TO_D
0x00001F66: 0x801C            - O_POP_RETURN
0x00001F68: 0x802A            - O_POP_TO_BASE
0x00001F6A: 0x8029            - O_POP_BASE
0x00001F6C: 0x801C            - O_POP_RETURN

21: Node010 (0x00001f6e)
===============================
0x00001F6E: 0x802B            - O_PUSH_BASE
0x00001F70: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00001F76: 0xC001 0x0000009a - O_INTOP(0x0000009a)   // 154 (154)
0x00001F7C: 0x811E            - O_GSAY_REPLY
0x00001F7E: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001F84: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00001F8A: 0xC001 0x0000009c - O_INTOP(0x0000009c)   // 156 (156)
0x00001F90: 0xC001 0x00000016 - O_INTOP(0x00000016)   // 22 (22)
0x00001F96: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001F9C: 0x8121            - O_GIQ_OPTION
0x00001F9E: 0xC001 0x00001fd8 - O_INTOP(0x00001fd8)   // 8152 (8152)
0x00001FA4: 0x80BF            - O_DUDE_OBJ
0x00001FA6: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00001FAC: 0x80CA            - O_GET_CRITTER_STAT
0x00001FAE: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00001FB4: 0x8035            - O_LESS_EQUAL
0x00001FB6: 0x802F            - O_IF
0x00001FB8: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00001FBE: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00001FC4: 0xC001 0x0000009e - O_INTOP(0x0000009e)   // 158 (158)
0x00001FCA: 0xC001 0x00000016 - O_INTOP(0x00000016)   // 22 (22)
0x00001FD0: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001FD6: 0x8121            - O_GIQ_OPTION
0x00001FD8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00001FDE: 0x8046            - O_NEGATE
0x00001FE0: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00001FE6: 0xC001 0x000000a0 - O_INTOP(0x000000a0)   // 160 (160)
0x00001FEC: 0xC001 0x00000016 - O_INTOP(0x00000016)   // 22 (22)
0x00001FF2: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00001FF8: 0x8121            - O_GIQ_OPTION
0x00001FFA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002000: 0x800D            - O_D_TO_A
0x00002002: 0x8019            - O_SWAPA
0x00002004: 0x802A            - O_POP_TO_BASE
0x00002006: 0x8029            - O_POP_BASE
0x00002008: 0x800C            - O_A_TO_D
0x0000200A: 0x801C            - O_POP_RETURN
0x0000200C: 0x802A            - O_POP_TO_BASE
0x0000200E: 0x8029            - O_POP_BASE
0x00002010: 0x801C            - O_POP_RETURN

22: Node011 (0x00002012)
===============================
0x00002012: 0x802B            - O_PUSH_BASE
0x00002014: 0x80BF            - O_DUDE_OBJ
0x00002016: 0xC001 0x00000046 - O_INTOP(0x00000046)   // 70 (70)
0x0000201C: 0x8139            - O_ITEM_CAPS_ADJUST
0x0000201E: 0x801A            - O_POP
0x00002020: 0x80BF            - O_DUDE_OBJ
0x00002022: 0xC001 0x00000007 - O_INTOP(0x00000007)   // 7 (7)
0x00002028: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000202E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002034: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000203A: 0x8046            - O_NEGATE
0x0000203C: 0x80B7            - O_CREATE_OBJECT_SID
0x0000203E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002044: 0x8116            - O_ADD_MULT_OBJS_TO_INVEN
0x00002046: 0x80BF            - O_DUDE_OBJ
0x00002048: 0xC001 0x00000114 - O_INTOP(0x00000114)   // 276 (276)
0x0000204E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002054: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000205A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002060: 0x8046            - O_NEGATE
0x00002062: 0x80B7            - O_CREATE_OBJECT_SID
0x00002064: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x0000206A: 0x8116            - O_ADD_MULT_OBJS_TO_INVEN
0x0000206C: 0xC001 0x00000284 - O_INTOP(0x00000284)   // 644 (644)
0x00002072: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00002078: 0x80C6            - O_SET_GLOBAL_VAR
0x0000207A: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002080: 0xC001 0x000000a2 - O_INTOP(0x000000a2)   // 162 (162)
0x00002086: 0x811E            - O_GSAY_REPLY
0x00002088: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000208E: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002094: 0xC001 0x000000a4 - O_INTOP(0x000000a4)   // 164 (164)
0x0000209A: 0xC001 0x00000017 - O_INTOP(0x00000017)   // 23 (23)
0x000020A0: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000020A6: 0x8121            - O_GIQ_OPTION
0x000020A8: 0xC001 0x000020e2 - O_INTOP(0x000020e2)   // 8418 (8418)
0x000020AE: 0x80BF            - O_DUDE_OBJ
0x000020B0: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000020B6: 0x80CA            - O_GET_CRITTER_STAT
0x000020B8: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000020BE: 0x8035            - O_LESS_EQUAL
0x000020C0: 0x802F            - O_IF
0x000020C2: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000020C8: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000020CE: 0xC001 0x000000a6 - O_INTOP(0x000000a6)   // 166 (166)
0x000020D4: 0xC001 0x00000017 - O_INTOP(0x00000017)   // 23 (23)
0x000020DA: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000020E0: 0x8121            - O_GIQ_OPTION
0x000020E2: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000020E8: 0x8046            - O_NEGATE
0x000020EA: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000020F0: 0xC001 0x000000a8 - O_INTOP(0x000000a8)   // 168 (168)
0x000020F6: 0xC001 0x00000017 - O_INTOP(0x00000017)   // 23 (23)
0x000020FC: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002102: 0x8121            - O_GIQ_OPTION
0x00002104: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000210A: 0x800D            - O_D_TO_A
0x0000210C: 0x8019            - O_SWAPA
0x0000210E: 0x802A            - O_POP_TO_BASE
0x00002110: 0x8029            - O_POP_BASE
0x00002112: 0x800C            - O_A_TO_D
0x00002114: 0x801C            - O_POP_RETURN
0x00002116: 0x802A            - O_POP_TO_BASE
0x00002118: 0x8029            - O_POP_BASE
0x0000211A: 0x801C            - O_POP_RETURN

23: Node012 (0x0000211c)
===============================
0x0000211C: 0x802B            - O_PUSH_BASE
0x0000211E: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002124: 0xC001 0x000000aa - O_INTOP(0x000000aa)   // 170 (170)
0x0000212A: 0x811E            - O_GSAY_REPLY
0x0000212C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002132: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002138: 0xC001 0x000000ac - O_INTOP(0x000000ac)   // 172 (172)
0x0000213E: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00002144: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000214A: 0x8121            - O_GIQ_OPTION
0x0000214C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002152: 0x800D            - O_D_TO_A
0x00002154: 0x8019            - O_SWAPA
0x00002156: 0x802A            - O_POP_TO_BASE
0x00002158: 0x8029            - O_POP_BASE
0x0000215A: 0x800C            - O_A_TO_D
0x0000215C: 0x801C            - O_POP_RETURN
0x0000215E: 0x802A            - O_POP_TO_BASE
0x00002160: 0x8029            - O_POP_BASE
0x00002162: 0x801C            - O_POP_RETURN

24: Node013 (0x00002164)
===============================
0x00002164: 0x802B            - O_PUSH_BASE
0x00002166: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x0000216C: 0xC001 0x000000ae - O_INTOP(0x000000ae)   // 174 (174)
0x00002172: 0x811E            - O_GSAY_REPLY
0x00002174: 0xC001 0x000021b0 - O_INTOP(0x000021b0)   // 8624 (8624)
0x0000217A: 0x80BF            - O_DUDE_OBJ
0x0000217C: 0xC001 0x0000021e - O_INTOP(0x0000021e)   // 542 (542)
0x00002182: 0x80BA            - O_OBJ_IS_CARRYING_OBJ_PID
0x00002184: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000218A: 0x8033            - O_EQUAL
0x0000218C: 0x802F            - O_IF
0x0000218E: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00002194: 0x8046            - O_NEGATE
0x00002196: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x0000219C: 0xC001 0x000000b0 - O_INTOP(0x000000b0)   // 176 (176)
0x000021A2: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x000021A8: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000021AE: 0x8121            - O_GIQ_OPTION
0x000021B0: 0xC001 0x000021ea - O_INTOP(0x000021ea)   // 8682 (8682)
0x000021B6: 0x80BF            - O_DUDE_OBJ
0x000021B8: 0xC001 0x0000021e - O_INTOP(0x0000021e)   // 542 (542)
0x000021BE: 0x80BA            - O_OBJ_IS_CARRYING_OBJ_PID
0x000021C0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000021C6: 0x8033            - O_EQUAL
0x000021C8: 0x802F            - O_IF
0x000021CA: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000021D0: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000021D6: 0xC001 0x000000b2 - O_INTOP(0x000000b2)   // 178 (178)
0x000021DC: 0xC001 0x00000019 - O_INTOP(0x00000019)   // 25 (25)
0x000021E2: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000021E8: 0x8121            - O_GIQ_OPTION
0x000021EA: 0xC001 0x00002224 - O_INTOP(0x00002224)   // 8740 (8740)
0x000021F0: 0x80BF            - O_DUDE_OBJ
0x000021F2: 0xC001 0x0000021e - O_INTOP(0x0000021e)   // 542 (542)
0x000021F8: 0x80BA            - O_OBJ_IS_CARRYING_OBJ_PID
0x000021FA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002200: 0x8036            - O_GREATER_EQUAL
0x00002202: 0x802F            - O_IF
0x00002204: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000220A: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002210: 0xC001 0x000000b4 - O_INTOP(0x000000b4)   // 180 (180)
0x00002216: 0xC001 0x0000001e - O_INTOP(0x0000001e)   // 30 (30)
0x0000221C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002222: 0x8121            - O_GIQ_OPTION
0x00002224: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000222A: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002230: 0xC001 0x000000b6 - O_INTOP(0x000000b6)   // 182 (182)
0x00002236: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x0000223C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002242: 0x8121            - O_GIQ_OPTION
0x00002244: 0xC001 0x0000227e - O_INTOP(0x0000227e)   // 8830 (8830)
0x0000224A: 0x80BF            - O_DUDE_OBJ
0x0000224C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002252: 0x80CA            - O_GET_CRITTER_STAT
0x00002254: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x0000225A: 0x8035            - O_LESS_EQUAL
0x0000225C: 0x802F            - O_IF
0x0000225E: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00002264: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x0000226A: 0xC001 0x000000b8 - O_INTOP(0x000000b8)   // 184 (184)
0x00002270: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x00002276: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000227C: 0x8121            - O_GIQ_OPTION
0x0000227E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002284: 0x800D            - O_D_TO_A
0x00002286: 0x8019            - O_SWAPA
0x00002288: 0x802A            - O_POP_TO_BASE
0x0000228A: 0x8029            - O_POP_BASE
0x0000228C: 0x800C            - O_A_TO_D
0x0000228E: 0x801C            - O_POP_RETURN
0x00002290: 0x802A            - O_POP_TO_BASE
0x00002292: 0x8029            - O_POP_BASE
0x00002294: 0x801C            - O_POP_RETURN

25: Node014 (0x00002296)
===============================
0x00002296: 0x802B            - O_PUSH_BASE
0x00002298: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x0000229E: 0xC001 0x000000ba - O_INTOP(0x000000ba)   // 186 (186)
0x000022A4: 0x811E            - O_GSAY_REPLY
0x000022A6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000022AC: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000022B2: 0xC001 0x000000bc - O_INTOP(0x000000bc)   // 188 (188)
0x000022B8: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x000022BE: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000022C4: 0x8121            - O_GIQ_OPTION
0x000022C6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000022CC: 0x800D            - O_D_TO_A
0x000022CE: 0x8019            - O_SWAPA
0x000022D0: 0x802A            - O_POP_TO_BASE
0x000022D2: 0x8029            - O_POP_BASE
0x000022D4: 0x800C            - O_A_TO_D
0x000022D6: 0x801C            - O_POP_RETURN
0x000022D8: 0x802A            - O_POP_TO_BASE
0x000022DA: 0x8029            - O_POP_BASE
0x000022DC: 0x801C            - O_POP_RETURN

26: Node015 (0x000022de)
===============================
0x000022DE: 0x802B            - O_PUSH_BASE
0x000022E0: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000022E6: 0xC001 0x000000be - O_INTOP(0x000000be)   // 190 (190)
0x000022EC: 0x811E            - O_GSAY_REPLY
0x000022EE: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000022F4: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000022FA: 0xC001 0x000000c0 - O_INTOP(0x000000c0)   // 192 (192)
0x00002300: 0xC001 0x0000001c - O_INTOP(0x0000001c)   // 28 (28)
0x00002306: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000230C: 0x8121            - O_GIQ_OPTION
0x0000230E: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00002314: 0x8046            - O_NEGATE
0x00002316: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x0000231C: 0xC001 0x000000c2 - O_INTOP(0x000000c2)   // 194 (194)
0x00002322: 0xC001 0x0000001c - O_INTOP(0x0000001c)   // 28 (28)
0x00002328: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000232E: 0x8121            - O_GIQ_OPTION
0x00002330: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002336: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x0000233C: 0xC001 0x000000c4 - O_INTOP(0x000000c4)   // 196 (196)
0x00002342: 0xC001 0x0000001b - O_INTOP(0x0000001b)   // 27 (27)
0x00002348: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000234E: 0x8121            - O_GIQ_OPTION
0x00002350: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002356: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x0000235C: 0xC001 0x000000c6 - O_INTOP(0x000000c6)   // 198 (198)
0x00002362: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00002368: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000236E: 0x8121            - O_GIQ_OPTION
0x00002370: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002376: 0x800D            - O_D_TO_A
0x00002378: 0x8019            - O_SWAPA
0x0000237A: 0x802A            - O_POP_TO_BASE
0x0000237C: 0x8029            - O_POP_BASE
0x0000237E: 0x800C            - O_A_TO_D
0x00002380: 0x801C            - O_POP_RETURN
0x00002382: 0x802A            - O_POP_TO_BASE
0x00002384: 0x8029            - O_POP_BASE
0x00002386: 0x801C            - O_POP_RETURN

27: Node016 (0x00002388)
===============================
0x00002388: 0x802B            - O_PUSH_BASE
0x0000238A: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002390: 0xC001 0x000000c8 - O_INTOP(0x000000c8)   // 200 (200)
0x00002396: 0x811E            - O_GSAY_REPLY
0x00002398: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000239E: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000023A4: 0xC001 0x000000ca - O_INTOP(0x000000ca)   // 202 (202)
0x000023AA: 0xC001 0x0000001a - O_INTOP(0x0000001a)   // 26 (26)
0x000023B0: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000023B6: 0x8121            - O_GIQ_OPTION
0x000023B8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000023BE: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000023C4: 0xC001 0x000000cc - O_INTOP(0x000000cc)   // 204 (204)
0x000023CA: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x000023D0: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000023D6: 0x8121            - O_GIQ_OPTION
0x000023D8: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000023DE: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000023E4: 0xC001 0x000000ce - O_INTOP(0x000000ce)   // 206 (206)
0x000023EA: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x000023F0: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000023F6: 0x8121            - O_GIQ_OPTION
0x000023F8: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000023FE: 0x800D            - O_D_TO_A
0x00002400: 0x8019            - O_SWAPA
0x00002402: 0x802A            - O_POP_TO_BASE
0x00002404: 0x8029            - O_POP_BASE
0x00002406: 0x800C            - O_A_TO_D
0x00002408: 0x801C            - O_POP_RETURN
0x0000240A: 0x802A            - O_POP_TO_BASE
0x0000240C: 0x8029            - O_POP_BASE
0x0000240E: 0x801C            - O_POP_RETURN

28: Node017 (0x00002410)
===============================
0x00002410: 0x802B            - O_PUSH_BASE
0x00002412: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002418: 0xC001 0x000000d0 - O_INTOP(0x000000d0)   // 208 (208)
0x0000241E: 0x811E            - O_GSAY_REPLY
0x00002420: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002426: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x0000242C: 0xC001 0x000000d2 - O_INTOP(0x000000d2)   // 210 (210)
0x00002432: 0xC001 0x0000001d - O_INTOP(0x0000001d)   // 29 (29)
0x00002438: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000243E: 0x8121            - O_GIQ_OPTION
0x00002440: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00002446: 0x8046            - O_NEGATE
0x00002448: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x0000244E: 0xC001 0x000000d4 - O_INTOP(0x000000d4)   // 212 (212)
0x00002454: 0xC001 0x0000001d - O_INTOP(0x0000001d)   // 29 (29)
0x0000245A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002460: 0x8121            - O_GIQ_OPTION
0x00002462: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002468: 0x800D            - O_D_TO_A
0x0000246A: 0x8019            - O_SWAPA
0x0000246C: 0x802A            - O_POP_TO_BASE
0x0000246E: 0x8029            - O_POP_BASE
0x00002470: 0x800C            - O_A_TO_D
0x00002472: 0x801C            - O_POP_RETURN
0x00002474: 0x802A            - O_POP_TO_BASE
0x00002476: 0x8029            - O_POP_BASE
0x00002478: 0x801C            - O_POP_RETURN

29: Node018 (0x0000247a)
===============================
0x0000247A: 0x802B            - O_PUSH_BASE
0x0000247C: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002482: 0xC001 0x000000d6 - O_INTOP(0x000000d6)   // 214 (214)
0x00002488: 0x811E            - O_GSAY_REPLY
0x0000248A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002490: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002496: 0xC001 0x000000d8 - O_INTOP(0x000000d8)   // 216 (216)
0x0000249C: 0xC001 0x0000001b - O_INTOP(0x0000001b)   // 27 (27)
0x000024A2: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000024A8: 0x8121            - O_GIQ_OPTION
0x000024AA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000024B0: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000024B6: 0xC001 0x000000da - O_INTOP(0x000000da)   // 218 (218)
0x000024BC: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x000024C2: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000024C8: 0x8121            - O_GIQ_OPTION
0x000024CA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000024D0: 0x800D            - O_D_TO_A
0x000024D2: 0x8019            - O_SWAPA
0x000024D4: 0x802A            - O_POP_TO_BASE
0x000024D6: 0x8029            - O_POP_BASE
0x000024D8: 0x800C            - O_A_TO_D
0x000024DA: 0x801C            - O_POP_RETURN
0x000024DC: 0x802A            - O_POP_TO_BASE
0x000024DE: 0x8029            - O_POP_BASE
0x000024E0: 0x801C            - O_POP_RETURN

30: Node019 (0x000024e2)
===============================
0x000024E2: 0x802B            - O_PUSH_BASE
0x000024E4: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000024EA: 0xC001 0x000000dc - O_INTOP(0x000000dc)   // 220 (220)
0x000024F0: 0x811E            - O_GSAY_REPLY
0x000024F2: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000024F8: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000024FE: 0xC001 0x000000de - O_INTOP(0x000000de)   // 222 (222)
0x00002504: 0xC001 0x00000020 - O_INTOP(0x00000020)   // 32 (32)
0x0000250A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002510: 0x8121            - O_GIQ_OPTION
0x00002512: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00002518: 0x8046            - O_NEGATE
0x0000251A: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002520: 0xC001 0x000000e0 - O_INTOP(0x000000e0)   // 224 (224)
0x00002526: 0xC001 0x0000001f - O_INTOP(0x0000001f)   // 31 (31)
0x0000252C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002532: 0x8121            - O_GIQ_OPTION
0x00002534: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000253A: 0x800D            - O_D_TO_A
0x0000253C: 0x8019            - O_SWAPA
0x0000253E: 0x802A            - O_POP_TO_BASE
0x00002540: 0x8029            - O_POP_BASE
0x00002542: 0x800C            - O_A_TO_D
0x00002544: 0x801C            - O_POP_RETURN
0x00002546: 0x802A            - O_POP_TO_BASE
0x00002548: 0x8029            - O_POP_BASE
0x0000254A: 0x801C            - O_POP_RETURN

31: Node020 (0x0000254c)
===============================
0x0000254C: 0x802B            - O_PUSH_BASE
0x0000254E: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002554: 0xC001 0x000000e2 - O_INTOP(0x000000e2)   // 226 (226)
0x0000255A: 0x811E            - O_GSAY_REPLY
0x0000255C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002562: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002568: 0xC001 0x000000e4 - O_INTOP(0x000000e4)   // 228 (228)
0x0000256E: 0xC001 0x00000021 - O_INTOP(0x00000021)   // 33 (33)
0x00002574: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000257A: 0x8121            - O_GIQ_OPTION
0x0000257C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002582: 0x800D            - O_D_TO_A
0x00002584: 0x8019            - O_SWAPA
0x00002586: 0x802A            - O_POP_TO_BASE
0x00002588: 0x8029            - O_POP_BASE
0x0000258A: 0x800C            - O_A_TO_D
0x0000258C: 0x801C            - O_POP_RETURN
0x0000258E: 0x802A            - O_POP_TO_BASE
0x00002590: 0x8029            - O_POP_BASE
0x00002592: 0x801C            - O_POP_RETURN

32: Node021 (0x00002594)
===============================
0x00002594: 0x802B            - O_PUSH_BASE
0x00002596: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x0000259C: 0xC001 0x000000e6 - O_INTOP(0x000000e6)   // 230 (230)
0x000025A2: 0x811E            - O_GSAY_REPLY
0x000025A4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000025AA: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000025B0: 0xC001 0x000000e8 - O_INTOP(0x000000e8)   // 232 (232)
0x000025B6: 0xC001 0x00000021 - O_INTOP(0x00000021)   // 33 (33)
0x000025BC: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000025C2: 0x8121            - O_GIQ_OPTION
0x000025C4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000025CA: 0x800D            - O_D_TO_A
0x000025CC: 0x8019            - O_SWAPA
0x000025CE: 0x802A            - O_POP_TO_BASE
0x000025D0: 0x8029            - O_POP_BASE
0x000025D2: 0x800C            - O_A_TO_D
0x000025D4: 0x801C            - O_POP_RETURN
0x000025D6: 0x802A            - O_POP_TO_BASE
0x000025D8: 0x8029            - O_POP_BASE
0x000025DA: 0x801C            - O_POP_RETURN

33: Node022 (0x000025dc)
===============================
0x000025DC: 0x802B            - O_PUSH_BASE
0x000025DE: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x000025E4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000025EA: 0x80C2            - O_SET_LOCAL_VAR
0x000025EC: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000025F2: 0xC001 0x000000ea - O_INTOP(0x000000ea)   // 234 (234)
0x000025F8: 0x811E            - O_GSAY_REPLY
0x000025FA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002600: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002606: 0xC001 0x000000ec - O_INTOP(0x000000ec)   // 236 (236)
0x0000260C: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00002612: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002618: 0x8121            - O_GIQ_OPTION
0x0000261A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002620: 0x800D            - O_D_TO_A
0x00002622: 0x8019            - O_SWAPA
0x00002624: 0x802A            - O_POP_TO_BASE
0x00002626: 0x8029            - O_POP_BASE
0x00002628: 0x800C            - O_A_TO_D
0x0000262A: 0x801C            - O_POP_RETURN
0x0000262C: 0x802A            - O_POP_TO_BASE
0x0000262E: 0x8029            - O_POP_BASE
0x00002630: 0x801C            - O_POP_RETURN

34: Node023 (0x00002632)
===============================
0x00002632: 0x802B            - O_PUSH_BASE
0x00002634: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x0000263A: 0xC001 0x000000ee - O_INTOP(0x000000ee)   // 238 (238)
0x00002640: 0x811E            - O_GSAY_REPLY
0x00002642: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002648: 0x8046            - O_NEGATE
0x0000264A: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002650: 0xC001 0x000000f0 - O_INTOP(0x000000f0)   // 240 (240)
0x00002656: 0xC001 0x00000023 - O_INTOP(0x00000023)   // 35 (35)
0x0000265C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002662: 0x8121            - O_GIQ_OPTION
0x00002664: 0xC001 0x0000269e - O_INTOP(0x0000269e)   // 9886 (9886)
0x0000266A: 0x80BF            - O_DUDE_OBJ
0x0000266C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002672: 0x80CA            - O_GET_CRITTER_STAT
0x00002674: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x0000267A: 0x8035            - O_LESS_EQUAL
0x0000267C: 0x802F            - O_IF
0x0000267E: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00002684: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x0000268A: 0xC001 0x000000f2 - O_INTOP(0x000000f2)   // 242 (242)
0x00002690: 0xC001 0x00000023 - O_INTOP(0x00000023)   // 35 (35)
0x00002696: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000269C: 0x8121            - O_GIQ_OPTION
0x0000269E: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000026A4: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000026AA: 0xC001 0x000000f4 - O_INTOP(0x000000f4)   // 244 (244)
0x000026B0: 0xC001 0x00000023 - O_INTOP(0x00000023)   // 35 (35)
0x000026B6: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000026BC: 0x8121            - O_GIQ_OPTION
0x000026BE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000026C4: 0x800D            - O_D_TO_A
0x000026C6: 0x8019            - O_SWAPA
0x000026C8: 0x802A            - O_POP_TO_BASE
0x000026CA: 0x8029            - O_POP_BASE
0x000026CC: 0x800C            - O_A_TO_D
0x000026CE: 0x801C            - O_POP_RETURN
0x000026D0: 0x802A            - O_POP_TO_BASE
0x000026D2: 0x8029            - O_POP_BASE
0x000026D4: 0x801C            - O_POP_RETURN

35: Node024 (0x000026d6)
===============================
0x000026D6: 0x802B            - O_PUSH_BASE
0x000026D8: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000026DE: 0xC001 0x000000f6 - O_INTOP(0x000000f6)   // 246 (246)
0x000026E4: 0x811E            - O_GSAY_REPLY
0x000026E6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000026EC: 0x8046            - O_NEGATE
0x000026EE: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000026F4: 0xC001 0x000000f8 - O_INTOP(0x000000f8)   // 248 (248)
0x000026FA: 0xC001 0x00000025 - O_INTOP(0x00000025)   // 37 (37)
0x00002700: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002706: 0x8121            - O_GIQ_OPTION
0x00002708: 0xC001 0x0000276a - O_INTOP(0x0000276a)   // 10090 (10090)
0x0000270E: 0x80BF            - O_DUDE_OBJ
0x00002710: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002716: 0x80CA            - O_GET_CRITTER_STAT
0x00002718: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x0000271E: 0x8035            - O_LESS_EQUAL
0x00002720: 0x80BF            - O_DUDE_OBJ
0x00002722: 0xC001 0x00000022 - O_INTOP(0x00000022)   // 34 (34)
0x00002728: 0x80CA            - O_GET_CRITTER_STAT
0x0000272A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002730: 0x8033            - O_EQUAL
0x00002732: 0x803E            - O_AND
0x00002734: 0x80BF            - O_DUDE_OBJ
0x00002736: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000273C: 0x80CA            - O_GET_CRITTER_STAT
0x0000273E: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x00002744: 0x8036            - O_GREATER_EQUAL
0x00002746: 0x803E            - O_AND
0x00002748: 0x802F            - O_IF
0x0000274A: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00002750: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002756: 0xC001 0x000000fa - O_INTOP(0x000000fa)   // 250 (250)
0x0000275C: 0xC001 0x00000024 - O_INTOP(0x00000024)   // 36 (36)
0x00002762: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002768: 0x8121            - O_GIQ_OPTION
0x0000276A: 0xC001 0x000027cc - O_INTOP(0x000027cc)   // 10188 (10188)
0x00002770: 0x80BF            - O_DUDE_OBJ
0x00002772: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002778: 0x80CA            - O_GET_CRITTER_STAT
0x0000277A: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00002780: 0x8035            - O_LESS_EQUAL
0x00002782: 0x80BF            - O_DUDE_OBJ
0x00002784: 0xC001 0x00000022 - O_INTOP(0x00000022)   // 34 (34)
0x0000278A: 0x80CA            - O_GET_CRITTER_STAT
0x0000278C: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002792: 0x8033            - O_EQUAL
0x00002794: 0x803E            - O_AND
0x00002796: 0x80BF            - O_DUDE_OBJ
0x00002798: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000279E: 0x80CA            - O_GET_CRITTER_STAT
0x000027A0: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x000027A6: 0x8036            - O_GREATER_EQUAL
0x000027A8: 0x803E            - O_AND
0x000027AA: 0x802F            - O_IF
0x000027AC: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x000027B2: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000027B8: 0xC001 0x000000fc - O_INTOP(0x000000fc)   // 252 (252)
0x000027BE: 0xC001 0x00000024 - O_INTOP(0x00000024)   // 36 (36)
0x000027C4: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000027CA: 0x8121            - O_GIQ_OPTION
0x000027CC: 0xC001 0x0000281a - O_INTOP(0x0000281a)   // 10266 (10266)
0x000027D2: 0x80BF            - O_DUDE_OBJ
0x000027D4: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000027DA: 0x80CA            - O_GET_CRITTER_STAT
0x000027DC: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000027E2: 0x8035            - O_LESS_EQUAL
0x000027E4: 0x80BF            - O_DUDE_OBJ
0x000027E6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000027EC: 0x80CA            - O_GET_CRITTER_STAT
0x000027EE: 0xC001 0x00000009 - O_INTOP(0x00000009)   // 9 (9)
0x000027F4: 0x8037            - O_LESS
0x000027F6: 0x803E            - O_AND
0x000027F8: 0x802F            - O_IF
0x000027FA: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00002800: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002806: 0xC001 0x000000fe - O_INTOP(0x000000fe)   // 254 (254)
0x0000280C: 0xC001 0x00000025 - O_INTOP(0x00000025)   // 37 (37)
0x00002812: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002818: 0x8121            - O_GIQ_OPTION
0x0000281A: 0xC001 0x00002854 - O_INTOP(0x00002854)   // 10324 (10324)
0x00002820: 0x80BF            - O_DUDE_OBJ
0x00002822: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x00002828: 0x80AA            - O_HAS_SKILL
0x0000282A: 0xC001 0x0000003c - O_INTOP(0x0000003c)   // 60 (60)
0x00002830: 0x8036            - O_GREATER_EQUAL
0x00002832: 0x802F            - O_IF
0x00002834: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000283A: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002840: 0xC001 0x00000100 - O_INTOP(0x00000100)   // 256 (256)
0x00002846: 0xC001 0x00000024 - O_INTOP(0x00000024)   // 36 (36)
0x0000284C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002852: 0x8121            - O_GIQ_OPTION
0x00002854: 0xC001 0x0000288e - O_INTOP(0x0000288e)   // 10382 (10382)
0x0000285A: 0x80BF            - O_DUDE_OBJ
0x0000285C: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x00002862: 0x80AA            - O_HAS_SKILL
0x00002864: 0xC001 0x0000003c - O_INTOP(0x0000003c)   // 60 (60)
0x0000286A: 0x8037            - O_LESS
0x0000286C: 0x802F            - O_IF
0x0000286E: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002874: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x0000287A: 0xC001 0x00000102 - O_INTOP(0x00000102)   // 258 (258)
0x00002880: 0xC001 0x00000025 - O_INTOP(0x00000025)   // 37 (37)
0x00002886: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000288C: 0x8121            - O_GIQ_OPTION
0x0000288E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002894: 0x800D            - O_D_TO_A
0x00002896: 0x8019            - O_SWAPA
0x00002898: 0x802A            - O_POP_TO_BASE
0x0000289A: 0x8029            - O_POP_BASE
0x0000289C: 0x800C            - O_A_TO_D
0x0000289E: 0x801C            - O_POP_RETURN
0x000028A0: 0x802A            - O_POP_TO_BASE
0x000028A2: 0x8029            - O_POP_BASE
0x000028A4: 0x801C            - O_POP_RETURN

36: Node025 (0x000028a6)
===============================
0x000028A6: 0x802B            - O_PUSH_BASE
0x000028A8: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000028AE: 0xC001 0x00000104 - O_INTOP(0x00000104)   // 260 (260)
0x000028B4: 0x811E            - O_GSAY_REPLY
0x000028B6: 0xC001 0x000028f0 - O_INTOP(0x000028f0)   // 10480 (10480)
0x000028BC: 0x80BF            - O_DUDE_OBJ
0x000028BE: 0xC001 0x00000011 - O_INTOP(0x00000011)   // 17 (17)
0x000028C4: 0x80AA            - O_HAS_SKILL
0x000028C6: 0xC001 0x0000003c - O_INTOP(0x0000003c)   // 60 (60)
0x000028CC: 0x8036            - O_GREATER_EQUAL
0x000028CE: 0x802F            - O_IF
0x000028D0: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000028D6: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000028DC: 0xC001 0x00000106 - O_INTOP(0x00000106)   // 262 (262)
0x000028E2: 0xC001 0x00000027 - O_INTOP(0x00000027)   // 39 (39)
0x000028E8: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000028EE: 0x8121            - O_GIQ_OPTION
0x000028F0: 0xC001 0x0000292a - O_INTOP(0x0000292a)   // 10538 (10538)
0x000028F6: 0x80BF            - O_DUDE_OBJ
0x000028F8: 0xC001 0x00000011 - O_INTOP(0x00000011)   // 17 (17)
0x000028FE: 0x80AA            - O_HAS_SKILL
0x00002900: 0xC001 0x0000003c - O_INTOP(0x0000003c)   // 60 (60)
0x00002906: 0x8037            - O_LESS
0x00002908: 0x802F            - O_IF
0x0000290A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002910: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002916: 0xC001 0x00000108 - O_INTOP(0x00000108)   // 264 (264)
0x0000291C: 0xC001 0x00000026 - O_INTOP(0x00000026)   // 38 (38)
0x00002922: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002928: 0x8121            - O_GIQ_OPTION
0x0000292A: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00002930: 0x8046            - O_NEGATE
0x00002932: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002938: 0xC001 0x0000010a - O_INTOP(0x0000010a)   // 266 (266)
0x0000293E: 0xC001 0x00000026 - O_INTOP(0x00000026)   // 38 (38)
0x00002944: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000294A: 0x8121            - O_GIQ_OPTION
0x0000294C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002952: 0x800D            - O_D_TO_A
0x00002954: 0x8019            - O_SWAPA
0x00002956: 0x802A            - O_POP_TO_BASE
0x00002958: 0x8029            - O_POP_BASE
0x0000295A: 0x800C            - O_A_TO_D
0x0000295C: 0x801C            - O_POP_RETURN
0x0000295E: 0x802A            - O_POP_TO_BASE
0x00002960: 0x8029            - O_POP_BASE
0x00002962: 0x801C            - O_POP_RETURN

37: Node026 (0x00002964)
===============================
0x00002964: 0x802B            - O_PUSH_BASE
0x00002966: 0xC001 0x00002996 - O_INTOP(0x00002996)   // 10646 (10646)
0x0000296C: 0x80BF            - O_DUDE_OBJ
0x0000296E: 0xC001 0x00000022 - O_INTOP(0x00000022)   // 34 (34)
0x00002974: 0x80CA            - O_GET_CRITTER_STAT
0x00002976: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000297C: 0x8033            - O_EQUAL
0x0000297E: 0x802F            - O_IF
0x00002980: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002986: 0xC001 0x0000010c - O_INTOP(0x0000010c)   // 268 (268)
0x0000298C: 0x811E            - O_GSAY_REPLY
0x0000298E: 0xC001 0x000029a4 - O_INTOP(0x000029a4)   // 10660 (10660)
0x00002994: 0x8004            - O_JMP
0x00002996: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x0000299C: 0xC001 0x0000010e - O_INTOP(0x0000010e)   // 270 (270)
0x000029A2: 0x811E            - O_GSAY_REPLY
0x000029A4: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000029AA: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000029B0: 0xC001 0x00000110 - O_INTOP(0x00000110)   // 272 (272)
0x000029B6: 0xC001 0x00000028 - O_INTOP(0x00000028)   // 40 (40)
0x000029BC: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000029C2: 0x8121            - O_GIQ_OPTION
0x000029C4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000029CA: 0x800D            - O_D_TO_A
0x000029CC: 0x8019            - O_SWAPA
0x000029CE: 0x802A            - O_POP_TO_BASE
0x000029D0: 0x8029            - O_POP_BASE
0x000029D2: 0x800C            - O_A_TO_D
0x000029D4: 0x801C            - O_POP_RETURN
0x000029D6: 0x802A            - O_POP_TO_BASE
0x000029D8: 0x8029            - O_POP_BASE
0x000029DA: 0x801C            - O_POP_RETURN

38: Node027 (0x000029dc)
===============================
0x000029DC: 0x802B            - O_PUSH_BASE
0x000029DE: 0xC001 0x00002a0e - O_INTOP(0x00002a0e)   // 10766 (10766)
0x000029E4: 0x80BF            - O_DUDE_OBJ
0x000029E6: 0xC001 0x00000022 - O_INTOP(0x00000022)   // 34 (34)
0x000029EC: 0x80CA            - O_GET_CRITTER_STAT
0x000029EE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000029F4: 0x8033            - O_EQUAL
0x000029F6: 0x802F            - O_IF
0x000029F8: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000029FE: 0xC001 0x00000112 - O_INTOP(0x00000112)   // 274 (274)
0x00002A04: 0x811E            - O_GSAY_REPLY
0x00002A06: 0xC001 0x00002a1c - O_INTOP(0x00002a1c)   // 10780 (10780)
0x00002A0C: 0x8004            - O_JMP
0x00002A0E: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002A14: 0xC001 0x00000114 - O_INTOP(0x00000114)   // 276 (276)
0x00002A1A: 0x811E            - O_GSAY_REPLY
0x00002A1C: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00002A22: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002A28: 0x80C2            - O_SET_LOCAL_VAR
0x00002A2A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002A30: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002A36: 0xC001 0x00000116 - O_INTOP(0x00000116)   // 278 (278)
0x00002A3C: 0xC001 0x00000028 - O_INTOP(0x00000028)   // 40 (40)
0x00002A42: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002A48: 0x8121            - O_GIQ_OPTION
0x00002A4A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002A50: 0x800D            - O_D_TO_A
0x00002A52: 0x8019            - O_SWAPA
0x00002A54: 0x802A            - O_POP_TO_BASE
0x00002A56: 0x8029            - O_POP_BASE
0x00002A58: 0x800C            - O_A_TO_D
0x00002A5A: 0x801C            - O_POP_RETURN
0x00002A5C: 0x802A            - O_POP_TO_BASE
0x00002A5E: 0x8029            - O_POP_BASE
0x00002A60: 0x801C            - O_POP_RETURN

39: Node028 (0x00002a62)
===============================
0x00002A62: 0x802B            - O_PUSH_BASE
0x00002A64: 0xC001 0x00002a94 - O_INTOP(0x00002a94)   // 10900 (10900)
0x00002A6A: 0x80BF            - O_DUDE_OBJ
0x00002A6C: 0xC001 0x00000022 - O_INTOP(0x00000022)   // 34 (34)
0x00002A72: 0x80CA            - O_GET_CRITTER_STAT
0x00002A74: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002A7A: 0x8033            - O_EQUAL
0x00002A7C: 0x802F            - O_IF
0x00002A7E: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002A84: 0xC001 0x00000118 - O_INTOP(0x00000118)   // 280 (280)
0x00002A8A: 0x811E            - O_GSAY_REPLY
0x00002A8C: 0xC001 0x00002aa2 - O_INTOP(0x00002aa2)   // 10914 (10914)
0x00002A92: 0x8004            - O_JMP
0x00002A94: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002A9A: 0xC001 0x0000011a - O_INTOP(0x0000011a)   // 282 (282)
0x00002AA0: 0x811E            - O_GSAY_REPLY
0x00002AA2: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00002AA8: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x00002AAE: 0x80C2            - O_SET_LOCAL_VAR
0x00002AB0: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002AB6: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002ABC: 0xC001 0x0000011c - O_INTOP(0x0000011c)   // 284 (284)
0x00002AC2: 0xC001 0x00000028 - O_INTOP(0x00000028)   // 40 (40)
0x00002AC8: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002ACE: 0x8121            - O_GIQ_OPTION
0x00002AD0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002AD6: 0x800D            - O_D_TO_A
0x00002AD8: 0x8019            - O_SWAPA
0x00002ADA: 0x802A            - O_POP_TO_BASE
0x00002ADC: 0x8029            - O_POP_BASE
0x00002ADE: 0x800C            - O_A_TO_D
0x00002AE0: 0x801C            - O_POP_RETURN
0x00002AE2: 0x802A            - O_POP_TO_BASE
0x00002AE4: 0x8029            - O_POP_BASE
0x00002AE6: 0x801C            - O_POP_RETURN

40: Node029 (0x00002ae8)
===============================
0x00002AE8: 0x802B            - O_PUSH_BASE
0x00002AEA: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002AF0: 0xC001 0x0000011e - O_INTOP(0x0000011e)   // 286 (286)
0x00002AF6: 0x811E            - O_GSAY_REPLY
0x00002AF8: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00002AFE: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002B04: 0xC001 0x00000120 - O_INTOP(0x00000120)   // 288 (288)
0x00002B0A: 0xC001 0x00000029 - O_INTOP(0x00000029)   // 41 (41)
0x00002B10: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002B16: 0x8121            - O_GIQ_OPTION
0x00002B18: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002B1E: 0x8046            - O_NEGATE
0x00002B20: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002B26: 0xC001 0x00000122 - O_INTOP(0x00000122)   // 290 (290)
0x00002B2C: 0xC001 0x00000029 - O_INTOP(0x00000029)   // 41 (41)
0x00002B32: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002B38: 0x8121            - O_GIQ_OPTION
0x00002B3A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002B40: 0x800D            - O_D_TO_A
0x00002B42: 0x8019            - O_SWAPA
0x00002B44: 0x802A            - O_POP_TO_BASE
0x00002B46: 0x8029            - O_POP_BASE
0x00002B48: 0x800C            - O_A_TO_D
0x00002B4A: 0x801C            - O_POP_RETURN
0x00002B4C: 0x802A            - O_POP_TO_BASE
0x00002B4E: 0x8029            - O_POP_BASE
0x00002B50: 0x801C            - O_POP_RETURN

41: Node030 (0x00002b52)
===============================
0x00002B52: 0x802B            - O_PUSH_BASE
0x00002B54: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002B5A: 0xC001 0x00000124 - O_INTOP(0x00000124)   // 292 (292)
0x00002B60: 0x811E            - O_GSAY_REPLY
0x00002B62: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00002B68: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002B6E: 0xC001 0x00000126 - O_INTOP(0x00000126)   // 294 (294)
0x00002B74: 0xC001 0x0000002a - O_INTOP(0x0000002a)   // 42 (42)
0x00002B7A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002B80: 0x8121            - O_GIQ_OPTION
0x00002B82: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002B88: 0x8046            - O_NEGATE
0x00002B8A: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002B90: 0xC001 0x00000128 - O_INTOP(0x00000128)   // 296 (296)
0x00002B96: 0xC001 0x0000002a - O_INTOP(0x0000002a)   // 42 (42)
0x00002B9C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002BA2: 0x8121            - O_GIQ_OPTION
0x00002BA4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002BAA: 0x800D            - O_D_TO_A
0x00002BAC: 0x8019            - O_SWAPA
0x00002BAE: 0x802A            - O_POP_TO_BASE
0x00002BB0: 0x8029            - O_POP_BASE
0x00002BB2: 0x800C            - O_A_TO_D
0x00002BB4: 0x801C            - O_POP_RETURN
0x00002BB6: 0x802A            - O_POP_TO_BASE
0x00002BB8: 0x8029            - O_POP_BASE
0x00002BBA: 0x801C            - O_POP_RETURN

42: Node031 (0x00002bbc)
===============================
0x00002BBC: 0x802B            - O_PUSH_BASE
0x00002BBE: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002BC4: 0xC001 0x0000012a - O_INTOP(0x0000012a)   // 298 (298)
0x00002BCA: 0x811E            - O_GSAY_REPLY
0x00002BCC: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002BD2: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002BD8: 0xC001 0x0000012c - O_INTOP(0x0000012c)   // 300 (300)
0x00002BDE: 0xC001 0x0000002b - O_INTOP(0x0000002b)   // 43 (43)
0x00002BE4: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002BEA: 0x8121            - O_GIQ_OPTION
0x00002BEC: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00002BF2: 0x8046            - O_NEGATE
0x00002BF4: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002BFA: 0xC001 0x0000012e - O_INTOP(0x0000012e)   // 302 (302)
0x00002C00: 0xC001 0x0000002b - O_INTOP(0x0000002b)   // 43 (43)
0x00002C06: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002C0C: 0x8121            - O_GIQ_OPTION
0x00002C0E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002C14: 0x800D            - O_D_TO_A
0x00002C16: 0x8019            - O_SWAPA
0x00002C18: 0x802A            - O_POP_TO_BASE
0x00002C1A: 0x8029            - O_POP_BASE
0x00002C1C: 0x800C            - O_A_TO_D
0x00002C1E: 0x801C            - O_POP_RETURN
0x00002C20: 0x802A            - O_POP_TO_BASE
0x00002C22: 0x8029            - O_POP_BASE
0x00002C24: 0x801C            - O_POP_RETURN

43: Node032 (0x00002c26)
===============================
0x00002C26: 0x802B            - O_PUSH_BASE
0x00002C28: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002C2E: 0xC001 0x00000130 - O_INTOP(0x00000130)   // 304 (304)
0x00002C34: 0x811E            - O_GSAY_REPLY
0x00002C36: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00002C3C: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002C42: 0xC001 0x00000132 - O_INTOP(0x00000132)   // 306 (306)
0x00002C48: 0xC001 0x0000002c - O_INTOP(0x0000002c)   // 44 (44)
0x00002C4E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002C54: 0x8121            - O_GIQ_OPTION
0x00002C56: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002C5C: 0x8046            - O_NEGATE
0x00002C5E: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002C64: 0xC001 0x00000134 - O_INTOP(0x00000134)   // 308 (308)
0x00002C6A: 0xC001 0x0000002c - O_INTOP(0x0000002c)   // 44 (44)
0x00002C70: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002C76: 0x8121            - O_GIQ_OPTION
0x00002C78: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002C7E: 0x800D            - O_D_TO_A
0x00002C80: 0x8019            - O_SWAPA
0x00002C82: 0x802A            - O_POP_TO_BASE
0x00002C84: 0x8029            - O_POP_BASE
0x00002C86: 0x800C            - O_A_TO_D
0x00002C88: 0x801C            - O_POP_RETURN
0x00002C8A: 0x802A            - O_POP_TO_BASE
0x00002C8C: 0x8029            - O_POP_BASE
0x00002C8E: 0x801C            - O_POP_RETURN

44: Node033 (0x00002c90)
===============================
0x00002C90: 0x802B            - O_PUSH_BASE
0x00002C92: 0x80BF            - O_DUDE_OBJ
0x00002C94: 0xC001 0x0000010b - O_INTOP(0x0000010b)   // 267 (267)
0x00002C9A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002CA0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002CA6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002CAC: 0x8046            - O_NEGATE
0x00002CAE: 0x80B7            - O_CREATE_OBJECT_SID
0x00002CB0: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002CB6: 0x8116            - O_ADD_MULT_OBJS_TO_INVEN
0x00002CB8: 0xC001 0x000001e0 - O_INTOP(0x000001e0)   // 480 (480)
0x00002CBE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002CC4: 0x80C6            - O_SET_GLOBAL_VAR
0x00002CC6: 0xC001 0x0000026b - O_INTOP(0x0000026b)   // 619 (619)
0x00002CCC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002CD2: 0x80C6            - O_SET_GLOBAL_VAR
0x00002CD4: 0xC001 0x00002cfa - O_INTOP(0x00002cfa)   // 11514 (11514)
0x00002CDA: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00002CE0: 0xC001 0x000001c4 - O_INTOP(0x000001c4)   // 452 (452)
0x00002CE6: 0x80C5            - O_GLOBAL_VAR
0x00002CE8: 0x8038            - O_GREATER
0x00002CEA: 0x802F            - O_IF
0x00002CEC: 0xC001 0x000001c4 - O_INTOP(0x000001c4)   // 452 (452)
0x00002CF2: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00002CF8: 0x80C6            - O_SET_GLOBAL_VAR
0x00002CFA: 0xC001 0x00002d56 - O_INTOP(0x00002d56)   // 11606 (11606)
0x00002D00: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00002D06: 0x80C1            - O_LOCAL_VAR
0x00002D08: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002D0E: 0x8038            - O_GREATER
0x00002D10: 0x802F            - O_IF
0x00002D12: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002D18: 0xC001 0x00000065 - O_INTOP(0x00000065)   // 101 (101)
0x00002D1E: 0x8105            - O_MESSAGE_STR
0x00002D20: 0x80B8            - O_DISPLAY_MSG
0x00002D22: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00002D28: 0x80C1            - O_LOCAL_VAR
0x00002D2A: 0x80A1            - O_GIVE_EXP_POINTS
0x00002D2C: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x00002D32: 0xC001 0x00000064 - O_INTOP(0x00000064)   // 100 (100)
0x00002D38: 0x8105            - O_MESSAGE_STR
0x00002D3A: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00002D40: 0x80C1            - O_LOCAL_VAR
0x00002D42: 0x8039            - O_ADD
0x00002D44: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x00002D4A: 0xC001 0x00000065 - O_INTOP(0x00000065)   // 101 (101)
0x00002D50: 0x8105            - O_MESSAGE_STR
0x00002D52: 0x8039            - O_ADD
0x00002D54: 0x80B8            - O_DISPLAY_MSG
0x00002D56: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002D5C: 0xC001 0x00000136 - O_INTOP(0x00000136)   // 310 (310)
0x00002D62: 0x811E            - O_GSAY_REPLY
0x00002D64: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002D6A: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002D70: 0xC001 0x00000138 - O_INTOP(0x00000138)   // 312 (312)
0x00002D76: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00002D7C: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002D82: 0x8121            - O_GIQ_OPTION
0x00002D84: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00002D8A: 0x8046            - O_NEGATE
0x00002D8C: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002D92: 0xC001 0x0000013a - O_INTOP(0x0000013a)   // 314 (314)
0x00002D98: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00002D9E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002DA4: 0x8121            - O_GIQ_OPTION
0x00002DA6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002DAC: 0x800D            - O_D_TO_A
0x00002DAE: 0x8019            - O_SWAPA
0x00002DB0: 0x802A            - O_POP_TO_BASE
0x00002DB2: 0x8029            - O_POP_BASE
0x00002DB4: 0x800C            - O_A_TO_D
0x00002DB6: 0x801C            - O_POP_RETURN
0x00002DB8: 0x802A            - O_POP_TO_BASE
0x00002DBA: 0x8029            - O_POP_BASE
0x00002DBC: 0x801C            - O_POP_RETURN

45: Node035 (0x00002dbe)
===============================
0x00002DBE: 0x802B            - O_PUSH_BASE
0x00002DC0: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002DC6: 0xC001 0x0000013e - O_INTOP(0x0000013e)   // 318 (318)
0x00002DCC: 0x811E            - O_GSAY_REPLY
0x00002DCE: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002DD4: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002DDA: 0xC001 0x00000140 - O_INTOP(0x00000140)   // 320 (320)
0x00002DE0: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00002DE6: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002DEC: 0x8121            - O_GIQ_OPTION
0x00002DEE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002DF4: 0x800D            - O_D_TO_A
0x00002DF6: 0x8019            - O_SWAPA
0x00002DF8: 0x802A            - O_POP_TO_BASE
0x00002DFA: 0x8029            - O_POP_BASE
0x00002DFC: 0x800C            - O_A_TO_D
0x00002DFE: 0x801C            - O_POP_RETURN
0x00002E00: 0x802A            - O_POP_TO_BASE
0x00002E02: 0x8029            - O_POP_BASE
0x00002E04: 0x801C            - O_POP_RETURN

46: Node036 (0x00002e06)
===============================
0x00002E06: 0x802B            - O_PUSH_BASE
0x00002E08: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002E0E: 0xC001 0x00000142 - O_INTOP(0x00000142)   // 322 (322)
0x00002E14: 0x811E            - O_GSAY_REPLY
0x00002E16: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002E1C: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002E22: 0xC001 0x00000144 - O_INTOP(0x00000144)   // 324 (324)
0x00002E28: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00002E2E: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002E34: 0x8121            - O_GIQ_OPTION
0x00002E36: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002E3C: 0x800D            - O_D_TO_A
0x00002E3E: 0x8019            - O_SWAPA
0x00002E40: 0x802A            - O_POP_TO_BASE
0x00002E42: 0x8029            - O_POP_BASE
0x00002E44: 0x800C            - O_A_TO_D
0x00002E46: 0x801C            - O_POP_RETURN
0x00002E48: 0x802A            - O_POP_TO_BASE
0x00002E4A: 0x8029            - O_POP_BASE
0x00002E4C: 0x801C            - O_POP_RETURN

47: Node037 (0x00002e4e)
===============================
0x00002E4E: 0x802B            - O_PUSH_BASE
0x00002E50: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002E56: 0xC001 0x00000146 - O_INTOP(0x00000146)   // 326 (326)
0x00002E5C: 0x811E            - O_GSAY_REPLY
0x00002E5E: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002E64: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002E6A: 0xC001 0x00000148 - O_INTOP(0x00000148)   // 328 (328)
0x00002E70: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00002E76: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002E7C: 0x8121            - O_GIQ_OPTION
0x00002E7E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002E84: 0x800D            - O_D_TO_A
0x00002E86: 0x8019            - O_SWAPA
0x00002E88: 0x802A            - O_POP_TO_BASE
0x00002E8A: 0x8029            - O_POP_BASE
0x00002E8C: 0x800C            - O_A_TO_D
0x00002E8E: 0x801C            - O_POP_RETURN
0x00002E90: 0x802A            - O_POP_TO_BASE
0x00002E92: 0x8029            - O_POP_BASE
0x00002E94: 0x801C            - O_POP_RETURN

48: Node038 (0x00002e96)
===============================
0x00002E96: 0x802B            - O_PUSH_BASE
0x00002E98: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002E9E: 0xC001 0x0000014a - O_INTOP(0x0000014a)   // 330 (330)
0x00002EA4: 0x811E            - O_GSAY_REPLY
0x00002EA6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002EAC: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002EB2: 0xC001 0x0000014c - O_INTOP(0x0000014c)   // 332 (332)
0x00002EB8: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00002EBE: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002EC4: 0x8121            - O_GIQ_OPTION
0x00002EC6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002ECC: 0x800D            - O_D_TO_A
0x00002ECE: 0x8019            - O_SWAPA
0x00002ED0: 0x802A            - O_POP_TO_BASE
0x00002ED2: 0x8029            - O_POP_BASE
0x00002ED4: 0x800C            - O_A_TO_D
0x00002ED6: 0x801C            - O_POP_RETURN
0x00002ED8: 0x802A            - O_POP_TO_BASE
0x00002EDA: 0x8029            - O_POP_BASE
0x00002EDC: 0x801C            - O_POP_RETURN

49: Node039 (0x00002ede)
===============================
0x00002EDE: 0x802B            - O_PUSH_BASE
0x00002EE0: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002EE6: 0xC001 0x0000014e - O_INTOP(0x0000014e)   // 334 (334)
0x00002EEC: 0x811E            - O_GSAY_REPLY
0x00002EEE: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002EF4: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002EFA: 0xC001 0x00000150 - O_INTOP(0x00000150)   // 336 (336)
0x00002F00: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002F06: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002F0C: 0x8121            - O_GIQ_OPTION
0x00002F0E: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00002F14: 0x8046            - O_NEGATE
0x00002F16: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002F1C: 0xC001 0x00000152 - O_INTOP(0x00000152)   // 338 (338)
0x00002F22: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002F28: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002F2E: 0x8121            - O_GIQ_OPTION
0x00002F30: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002F36: 0x800D            - O_D_TO_A
0x00002F38: 0x8019            - O_SWAPA
0x00002F3A: 0x802A            - O_POP_TO_BASE
0x00002F3C: 0x8029            - O_POP_BASE
0x00002F3E: 0x800C            - O_A_TO_D
0x00002F40: 0x801C            - O_POP_RETURN
0x00002F42: 0x802A            - O_POP_TO_BASE
0x00002F44: 0x8029            - O_POP_BASE
0x00002F46: 0x801C            - O_POP_RETURN

50: Node040 (0x00002f48)
===============================
0x00002F48: 0x802B            - O_PUSH_BASE
0x00002F4A: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002F50: 0xC001 0x00000154 - O_INTOP(0x00000154)   // 340 (340)
0x00002F56: 0x811E            - O_GSAY_REPLY
0x00002F58: 0xC001 0x00002f92 - O_INTOP(0x00002f92)   // 12178 (12178)
0x00002F5E: 0x80BF            - O_DUDE_OBJ
0x00002F60: 0xC001 0x00000022 - O_INTOP(0x00000022)   // 34 (34)
0x00002F66: 0x80CA            - O_GET_CRITTER_STAT
0x00002F68: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00002F6E: 0x8033            - O_EQUAL
0x00002F70: 0x802F            - O_IF
0x00002F72: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002F78: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002F7E: 0xC001 0x00000156 - O_INTOP(0x00000156)   // 342 (342)
0x00002F84: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x00002F8A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002F90: 0x8121            - O_GIQ_OPTION
0x00002F92: 0xC001 0x00002fcc - O_INTOP(0x00002fcc)   // 12236 (12236)
0x00002F98: 0x80BF            - O_DUDE_OBJ
0x00002F9A: 0xC001 0x00000022 - O_INTOP(0x00000022)   // 34 (34)
0x00002FA0: 0x80CA            - O_GET_CRITTER_STAT
0x00002FA2: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00002FA8: 0x8033            - O_EQUAL
0x00002FAA: 0x802F            - O_IF
0x00002FAC: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002FB2: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002FB8: 0xC001 0x00000158 - O_INTOP(0x00000158)   // 344 (344)
0x00002FBE: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x00002FC4: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00002FCA: 0x8121            - O_GIQ_OPTION
0x00002FCC: 0xC001 0x00003006 - O_INTOP(0x00003006)   // 12294 (12294)
0x00002FD2: 0x80BF            - O_DUDE_OBJ
0x00002FD4: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00002FDA: 0x80CA            - O_GET_CRITTER_STAT
0x00002FDC: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00002FE2: 0x8035            - O_LESS_EQUAL
0x00002FE4: 0x802F            - O_IF
0x00002FE6: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00002FEC: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00002FF2: 0xC001 0x0000015a - O_INTOP(0x0000015a)   // 346 (346)
0x00002FF8: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x00002FFE: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00003004: 0x8121            - O_GIQ_OPTION
0x00003006: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000300C: 0x8046            - O_NEGATE
0x0000300E: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00003014: 0xC001 0x0000015c - O_INTOP(0x0000015c)   // 348 (348)
0x0000301A: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x00003020: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00003026: 0x8121            - O_GIQ_OPTION
0x00003028: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000302E: 0x800D            - O_D_TO_A
0x00003030: 0x8019            - O_SWAPA
0x00003032: 0x802A            - O_POP_TO_BASE
0x00003034: 0x8029            - O_POP_BASE
0x00003036: 0x800C            - O_A_TO_D
0x00003038: 0x801C            - O_POP_RETURN
0x0000303A: 0x802A            - O_POP_TO_BASE
0x0000303C: 0x8029            - O_POP_BASE
0x0000303E: 0x801C            - O_POP_RETURN

51: Node041 (0x00003040)
===============================
0x00003040: 0x802B            - O_PUSH_BASE
0x00003042: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00003048: 0xC001 0x0000015e - O_INTOP(0x0000015e)   // 350 (350)
0x0000304E: 0x811E            - O_GSAY_REPLY
0x00003050: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00003056: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x0000305C: 0xC001 0x00000160 - O_INTOP(0x00000160)   // 352 (352)
0x00003062: 0xC001 0x00000034 - O_INTOP(0x00000034)   // 52 (52)
0x00003068: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000306E: 0x8121            - O_GIQ_OPTION
0x00003070: 0xC001 0x000030aa - O_INTOP(0x000030aa)   // 12458 (12458)
0x00003076: 0x80BF            - O_DUDE_OBJ
0x00003078: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000307E: 0x80CA            - O_GET_CRITTER_STAT
0x00003080: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00003086: 0x8035            - O_LESS_EQUAL
0x00003088: 0x802F            - O_IF
0x0000308A: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00003090: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00003096: 0xC001 0x00000162 - O_INTOP(0x00000162)   // 354 (354)
0x0000309C: 0xC001 0x00000034 - O_INTOP(0x00000034)   // 52 (52)
0x000030A2: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000030A8: 0x8121            - O_GIQ_OPTION
0x000030AA: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000030B0: 0x8046            - O_NEGATE
0x000030B2: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000030B8: 0xC001 0x00000164 - O_INTOP(0x00000164)   // 356 (356)
0x000030BE: 0xC001 0x00000034 - O_INTOP(0x00000034)   // 52 (52)
0x000030C4: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000030CA: 0x8121            - O_GIQ_OPTION
0x000030CC: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000030D2: 0x800D            - O_D_TO_A
0x000030D4: 0x8019            - O_SWAPA
0x000030D6: 0x802A            - O_POP_TO_BASE
0x000030D8: 0x8029            - O_POP_BASE
0x000030DA: 0x800C            - O_A_TO_D
0x000030DC: 0x801C            - O_POP_RETURN
0x000030DE: 0x802A            - O_POP_TO_BASE
0x000030E0: 0x8029            - O_POP_BASE
0x000030E2: 0x801C            - O_POP_RETURN

52: Node042 (0x000030e4)
===============================
0x000030E4: 0x802B            - O_PUSH_BASE
0x000030E6: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000030EC: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000030F2: 0x80C2            - O_SET_LOCAL_VAR
0x000030F4: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000030FA: 0xC001 0x00000166 - O_INTOP(0x00000166)   // 358 (358)
0x00003100: 0x811E            - O_GSAY_REPLY
0x00003102: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00003108: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x0000310E: 0xC001 0x00000168 - O_INTOP(0x00000168)   // 360 (360)
0x00003114: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x0000311A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00003120: 0x8121            - O_GIQ_OPTION
0x00003122: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003128: 0x800D            - O_D_TO_A
0x0000312A: 0x8019            - O_SWAPA
0x0000312C: 0x802A            - O_POP_TO_BASE
0x0000312E: 0x8029            - O_POP_BASE
0x00003130: 0x800C            - O_A_TO_D
0x00003132: 0x801C            - O_POP_RETURN
0x00003134: 0x802A            - O_POP_TO_BASE
0x00003136: 0x8029            - O_POP_BASE
0x00003138: 0x801C            - O_POP_RETURN

53: Node043 (0x0000313a)
===============================
0x0000313A: 0x802B            - O_PUSH_BASE
0x0000313C: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00003142: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00003148: 0x80C2            - O_SET_LOCAL_VAR
0x0000314A: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00003150: 0xC001 0x0000016a - O_INTOP(0x0000016a)   // 362 (362)
0x00003156: 0x811E            - O_GSAY_REPLY
0x00003158: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000315E: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00003164: 0xC001 0x0000016c - O_INTOP(0x0000016c)   // 364 (364)
0x0000316A: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00003170: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00003176: 0x8121            - O_GIQ_OPTION
0x00003178: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x0000317E: 0x8046            - O_NEGATE
0x00003180: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00003186: 0xC001 0x0000016e - O_INTOP(0x0000016e)   // 366 (366)
0x0000318C: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00003192: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00003198: 0x8121            - O_GIQ_OPTION
0x0000319A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000031A0: 0x800D            - O_D_TO_A
0x000031A2: 0x8019            - O_SWAPA
0x000031A4: 0x802A            - O_POP_TO_BASE
0x000031A6: 0x8029            - O_POP_BASE
0x000031A8: 0x800C            - O_A_TO_D
0x000031AA: 0x801C            - O_POP_RETURN
0x000031AC: 0x802A            - O_POP_TO_BASE
0x000031AE: 0x8029            - O_POP_BASE
0x000031B0: 0x801C            - O_POP_RETURN

54: Node044 (0x000031b2)
===============================
0x000031B2: 0x802B            - O_PUSH_BASE
0x000031B4: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000031BA: 0xC001 0x00000170 - O_INTOP(0x00000170)   // 368 (368)
0x000031C0: 0x811E            - O_GSAY_REPLY
0x000031C2: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000031C8: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000031CE: 0xC001 0x00000172 - O_INTOP(0x00000172)   // 370 (370)
0x000031D4: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x000031DA: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000031E0: 0x8121            - O_GIQ_OPTION
0x000031E2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000031E8: 0x800D            - O_D_TO_A
0x000031EA: 0x8019            - O_SWAPA
0x000031EC: 0x802A            - O_POP_TO_BASE
0x000031EE: 0x8029            - O_POP_BASE
0x000031F0: 0x800C            - O_A_TO_D
0x000031F2: 0x801C            - O_POP_RETURN
0x000031F4: 0x802A            - O_POP_TO_BASE
0x000031F6: 0x8029            - O_POP_BASE
0x000031F8: 0x801C            - O_POP_RETURN

55: Enc001 (0x000031fa)
===============================
0x000031FA: 0x802B            - O_PUSH_BASE
0x000031FC: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00003202: 0xC001 0x00000190 - O_INTOP(0x00000190)   // 400 (400)
0x00003208: 0x811E            - O_GSAY_REPLY
0x0000320A: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00003210: 0x8046            - O_NEGATE
0x00003212: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00003218: 0xC001 0x00000191 - O_INTOP(0x00000191)   // 401 (401)
0x0000321E: 0xC001 0x00000039 - O_INTOP(0x00000039)   // 57 (57)
0x00003224: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000322A: 0x8121            - O_GIQ_OPTION
0x0000322C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00003232: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00003238: 0xC001 0x00000192 - O_INTOP(0x00000192)   // 402 (402)
0x0000323E: 0xC001 0x0000003a - O_INTOP(0x0000003a)   // 58 (58)
0x00003244: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000324A: 0x8121            - O_GIQ_OPTION
0x0000324C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00003252: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00003258: 0xC001 0x00000193 - O_INTOP(0x00000193)   // 403 (403)
0x0000325E: 0xC001 0x0000003b - O_INTOP(0x0000003b)   // 59 (59)
0x00003264: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000326A: 0x8121            - O_GIQ_OPTION
0x0000326C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003272: 0x800D            - O_D_TO_A
0x00003274: 0x8019            - O_SWAPA
0x00003276: 0x802A            - O_POP_TO_BASE
0x00003278: 0x8029            - O_POP_BASE
0x0000327A: 0x800C            - O_A_TO_D
0x0000327C: 0x801C            - O_POP_RETURN
0x0000327E: 0x802A            - O_POP_TO_BASE
0x00003280: 0x8029            - O_POP_BASE
0x00003282: 0x801C            - O_POP_RETURN

56: Enc002 (0x00003284)
===============================
0x00003284: 0x802B            - O_PUSH_BASE
0x00003286: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x0000328C: 0xC001 0x00000194 - O_INTOP(0x00000194)   // 404 (404)
0x00003292: 0x811E            - O_GSAY_REPLY
0x00003294: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x0000329A: 0x8046            - O_NEGATE
0x0000329C: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000032A2: 0xC001 0x00000195 - O_INTOP(0x00000195)   // 405 (405)
0x000032A8: 0xC001 0x00000037 - O_INTOP(0x00000037)   // 55 (55)
0x000032AE: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000032B4: 0x8121            - O_GIQ_OPTION
0x000032B6: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000032BC: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000032C2: 0xC001 0x00000196 - O_INTOP(0x00000196)   // 406 (406)
0x000032C8: 0xC001 0x00000037 - O_INTOP(0x00000037)   // 55 (55)
0x000032CE: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000032D4: 0x8121            - O_GIQ_OPTION
0x000032D6: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000032DC: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000032E2: 0xC001 0x00000197 - O_INTOP(0x00000197)   // 407 (407)
0x000032E8: 0xC001 0x0000003f - O_INTOP(0x0000003f)   // 63 (63)
0x000032EE: 0xC001 0x00000033 - O_INTOP(0x00000033)   // 51 (51)
0x000032F4: 0x8121            - O_GIQ_OPTION
0x000032F6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000032FC: 0x800D            - O_D_TO_A
0x000032FE: 0x8019            - O_SWAPA
0x00003300: 0x802A            - O_POP_TO_BASE
0x00003302: 0x8029            - O_POP_BASE
0x00003304: 0x800C            - O_A_TO_D
0x00003306: 0x801C            - O_POP_RETURN
0x00003308: 0x802A            - O_POP_TO_BASE
0x0000330A: 0x8029            - O_POP_BASE
0x0000330C: 0x801C            - O_POP_RETURN

57: Enc003 (0x0000330e)
===============================
0x0000330E: 0x802B            - O_PUSH_BASE
0x00003310: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00003316: 0xC001 0x00000198 - O_INTOP(0x00000198)   // 408 (408)
0x0000331C: 0x811E            - O_GSAY_REPLY
0x0000331E: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00003324: 0x8046            - O_NEGATE
0x00003326: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x0000332C: 0xC001 0x00000199 - O_INTOP(0x00000199)   // 409 (409)
0x00003332: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00003338: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000333E: 0x8121            - O_GIQ_OPTION
0x00003340: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003346: 0x800D            - O_D_TO_A
0x00003348: 0x8019            - O_SWAPA
0x0000334A: 0x802A            - O_POP_TO_BASE
0x0000334C: 0x8029            - O_POP_BASE
0x0000334E: 0x800C            - O_A_TO_D
0x00003350: 0x801C            - O_POP_RETURN
0x00003352: 0x802A            - O_POP_TO_BASE
0x00003354: 0x8029            - O_POP_BASE
0x00003356: 0x801C            - O_POP_RETURN

58: Enc004 (0x00003358)
===============================
0x00003358: 0x802B            - O_PUSH_BASE
0x0000335A: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00003360: 0xC001 0x0000019a - O_INTOP(0x0000019a)   // 410 (410)
0x00003366: 0x811E            - O_GSAY_REPLY
0x00003368: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000336E: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00003374: 0xC001 0x0000019b - O_INTOP(0x0000019b)   // 411 (411)
0x0000337A: 0xC001 0x0000003d - O_INTOP(0x0000003d)   // 61 (61)
0x00003380: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00003386: 0x8121            - O_GIQ_OPTION
0x00003388: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000338E: 0x800D            - O_D_TO_A
0x00003390: 0x8019            - O_SWAPA
0x00003392: 0x802A            - O_POP_TO_BASE
0x00003394: 0x8029            - O_POP_BASE
0x00003396: 0x800C            - O_A_TO_D
0x00003398: 0x801C            - O_POP_RETURN
0x0000339A: 0x802A            - O_POP_TO_BASE
0x0000339C: 0x8029            - O_POP_BASE
0x0000339E: 0x801C            - O_POP_RETURN

59: Enc005 (0x000033a0)
===============================
0x000033A0: 0x802B            - O_PUSH_BASE
0x000033A2: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000033A8: 0xC001 0x0000019c - O_INTOP(0x0000019c)   // 412 (412)
0x000033AE: 0x811E            - O_GSAY_REPLY
0x000033B0: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000033B6: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000033BC: 0xC001 0x0000019d - O_INTOP(0x0000019d)   // 413 (413)
0x000033C2: 0xC001 0x0000003c - O_INTOP(0x0000003c)   // 60 (60)
0x000033C8: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000033CE: 0x8121            - O_GIQ_OPTION
0x000033D0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000033D6: 0x800D            - O_D_TO_A
0x000033D8: 0x8019            - O_SWAPA
0x000033DA: 0x802A            - O_POP_TO_BASE
0x000033DC: 0x8029            - O_POP_BASE
0x000033DE: 0x800C            - O_A_TO_D
0x000033E0: 0x801C            - O_POP_RETURN
0x000033E2: 0x802A            - O_POP_TO_BASE
0x000033E4: 0x8029            - O_POP_BASE
0x000033E6: 0x801C            - O_POP_RETURN

60: Enc005a (0x000033e8)
===============================
0x000033E8: 0x802B            - O_PUSH_BASE
0x000033EA: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000033F0: 0xC001 0x0000019e - O_INTOP(0x0000019e)   // 414 (414)
0x000033F6: 0x811E            - O_GSAY_REPLY
0x000033F8: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000033FE: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00003404: 0xC001 0x0000019f - O_INTOP(0x0000019f)   // 415 (415)
0x0000340A: 0xC001 0x00000044 - O_INTOP(0x00000044)   // 68 (68)
0x00003410: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00003416: 0x8121            - O_GIQ_OPTION
0x00003418: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000341E: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00003424: 0xC001 0x000001a0 - O_INTOP(0x000001a0)   // 416 (416)
0x0000342A: 0xC001 0x0000003e - O_INTOP(0x0000003e)   // 62 (62)
0x00003430: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00003436: 0x8121            - O_GIQ_OPTION
0x00003438: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000343E: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00003444: 0xC001 0x000001a1 - O_INTOP(0x000001a1)   // 417 (417)
0x0000344A: 0xC001 0x0000003e - O_INTOP(0x0000003e)   // 62 (62)
0x00003450: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00003456: 0x8121            - O_GIQ_OPTION
0x00003458: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000345E: 0x800D            - O_D_TO_A
0x00003460: 0x8019            - O_SWAPA
0x00003462: 0x802A            - O_POP_TO_BASE
0x00003464: 0x8029            - O_POP_BASE
0x00003466: 0x800C            - O_A_TO_D
0x00003468: 0x801C            - O_POP_RETURN
0x0000346A: 0x802A            - O_POP_TO_BASE
0x0000346C: 0x8029            - O_POP_BASE
0x0000346E: 0x801C            - O_POP_RETURN

61: Enc006 (0x00003470)
===============================
0x00003470: 0x802B            - O_PUSH_BASE
0x00003472: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00003478: 0xC001 0x000001a2 - O_INTOP(0x000001a2)   // 418 (418)
0x0000347E: 0x811E            - O_GSAY_REPLY
0x00003480: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00003486: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x0000348C: 0xC001 0x000001a3 - O_INTOP(0x000001a3)   // 419 (419)
0x00003492: 0xC001 0x0000003b - O_INTOP(0x0000003b)   // 59 (59)
0x00003498: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000349E: 0x8121            - O_GIQ_OPTION
0x000034A0: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000034A6: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000034AC: 0xC001 0x000001a4 - O_INTOP(0x000001a4)   // 420 (420)
0x000034B2: 0xC001 0x0000003e - O_INTOP(0x0000003e)   // 62 (62)
0x000034B8: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000034BE: 0x8121            - O_GIQ_OPTION
0x000034C0: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000034C6: 0x800D            - O_D_TO_A
0x000034C8: 0x8019            - O_SWAPA
0x000034CA: 0x802A            - O_POP_TO_BASE
0x000034CC: 0x8029            - O_POP_BASE
0x000034CE: 0x800C            - O_A_TO_D
0x000034D0: 0x801C            - O_POP_RETURN
0x000034D2: 0x802A            - O_POP_TO_BASE
0x000034D4: 0x8029            - O_POP_BASE
0x000034D6: 0x801C            - O_POP_RETURN

62: Enc007 (0x000034d8)
===============================
0x000034D8: 0x802B            - O_PUSH_BASE
0x000034DA: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000034E0: 0xC001 0x000001a5 - O_INTOP(0x000001a5)   // 421 (421)
0x000034E6: 0x811E            - O_GSAY_REPLY
0x000034E8: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000034EE: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000034F4: 0xC001 0x000001a6 - O_INTOP(0x000001a6)   // 422 (422)
0x000034FA: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00003500: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00003506: 0x8121            - O_GIQ_OPTION
0x00003508: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000350E: 0x800D            - O_D_TO_A
0x00003510: 0x8019            - O_SWAPA
0x00003512: 0x802A            - O_POP_TO_BASE
0x00003514: 0x8029            - O_POP_BASE
0x00003516: 0x800C            - O_A_TO_D
0x00003518: 0x801C            - O_POP_RETURN
0x0000351A: 0x802A            - O_POP_TO_BASE
0x0000351C: 0x8029            - O_POP_BASE
0x0000351E: 0x801C            - O_POP_RETURN

63: Enc008 (0x00003520)
===============================
0x00003520: 0x802B            - O_PUSH_BASE
0x00003522: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00003528: 0xC001 0x000001a7 - O_INTOP(0x000001a7)   // 423 (423)
0x0000352E: 0x811E            - O_GSAY_REPLY
0x00003530: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00003536: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x0000353C: 0xC001 0x000001a8 - O_INTOP(0x000001a8)   // 424 (424)
0x00003542: 0xC001 0x0000003b - O_INTOP(0x0000003b)   // 59 (59)
0x00003548: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x0000354E: 0x8121            - O_GIQ_OPTION
0x00003550: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003556: 0x800D            - O_D_TO_A
0x00003558: 0x8019            - O_SWAPA
0x0000355A: 0x802A            - O_POP_TO_BASE
0x0000355C: 0x8029            - O_POP_BASE
0x0000355E: 0x800C            - O_A_TO_D
0x00003560: 0x801C            - O_POP_RETURN
0x00003562: 0x802A            - O_POP_TO_BASE
0x00003564: 0x8029            - O_POP_BASE
0x00003566: 0x801C            - O_POP_RETURN

64: Enc009 (0x00003568)
===============================
0x00003568: 0x802B            - O_PUSH_BASE
0x0000356A: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00003570: 0xC001 0x000001aa - O_INTOP(0x000001aa)   // 426 (426)
0x00003576: 0x811E            - O_GSAY_REPLY
0x00003578: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000357E: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00003584: 0xC001 0x0000015e - O_INTOP(0x0000015e)   // 350 (350)
0x0000358A: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00003590: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00003596: 0x8121            - O_GIQ_OPTION
0x00003598: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000359E: 0x800D            - O_D_TO_A
0x000035A0: 0x8019            - O_SWAPA
0x000035A2: 0x802A            - O_POP_TO_BASE
0x000035A4: 0x8029            - O_POP_BASE
0x000035A6: 0x800C            - O_A_TO_D
0x000035A8: 0x801C            - O_POP_RETURN
0x000035AA: 0x802A            - O_POP_TO_BASE
0x000035AC: 0x8029            - O_POP_BASE
0x000035AE: 0x801C            - O_POP_RETURN

65: Enc010 (0x000035b0)
===============================
0x000035B0: 0x802B            - O_PUSH_BASE
0x000035B2: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000035B8: 0xC001 0x000001ab - O_INTOP(0x000001ab)   // 427 (427)
0x000035BE: 0x811E            - O_GSAY_REPLY
0x000035C0: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000035C6: 0x8046            - O_NEGATE
0x000035C8: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000035CE: 0xC001 0x000001ac - O_INTOP(0x000001ac)   // 428 (428)
0x000035D4: 0xC001 0x00000042 - O_INTOP(0x00000042)   // 66 (66)
0x000035DA: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000035E0: 0x8121            - O_GIQ_OPTION
0x000035E2: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000035E8: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000035EE: 0xC001 0x000001ad - O_INTOP(0x000001ad)   // 429 (429)
0x000035F4: 0xC001 0x00000043 - O_INTOP(0x00000043)   // 67 (67)
0x000035FA: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00003600: 0x8121            - O_GIQ_OPTION
0x00003602: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00003608: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x0000360E: 0xC001 0x000001ae - O_INTOP(0x000001ae)   // 430 (430)
0x00003614: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x0000361A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00003620: 0x8121            - O_GIQ_OPTION
0x00003622: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003628: 0x800D            - O_D_TO_A
0x0000362A: 0x8019            - O_SWAPA
0x0000362C: 0x802A            - O_POP_TO_BASE
0x0000362E: 0x8029            - O_POP_BASE
0x00003630: 0x800C            - O_A_TO_D
0x00003632: 0x801C            - O_POP_RETURN
0x00003634: 0x802A            - O_POP_TO_BASE
0x00003636: 0x8029            - O_POP_BASE
0x00003638: 0x801C            - O_POP_RETURN

66: Enc011 (0x0000363a)
===============================
0x0000363A: 0x802B            - O_PUSH_BASE
0x0000363C: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00003642: 0xC001 0x000001af - O_INTOP(0x000001af)   // 431 (431)
0x00003648: 0x811E            - O_GSAY_REPLY
0x0000364A: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00003650: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00003656: 0xC001 0x0000015e - O_INTOP(0x0000015e)   // 350 (350)
0x0000365C: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x00003662: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00003668: 0x8121            - O_GIQ_OPTION
0x0000366A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003670: 0x800D            - O_D_TO_A
0x00003672: 0x8019            - O_SWAPA
0x00003674: 0x802A            - O_POP_TO_BASE
0x00003676: 0x8029            - O_POP_BASE
0x00003678: 0x800C            - O_A_TO_D
0x0000367A: 0x801C            - O_POP_RETURN
0x0000367C: 0x802A            - O_POP_TO_BASE
0x0000367E: 0x8029            - O_POP_BASE
0x00003680: 0x801C            - O_POP_RETURN

67: Enc012 (0x00003682)
===============================
0x00003682: 0x802B            - O_PUSH_BASE
0x00003684: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x0000368A: 0xC001 0x000001b0 - O_INTOP(0x000001b0)   // 432 (432)
0x00003690: 0x811E            - O_GSAY_REPLY
0x00003692: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00003698: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x0000369E: 0xC001 0x000001b1 - O_INTOP(0x000001b1)   // 433 (433)
0x000036A4: 0xC001 0x0000000c - O_INTOP(0x0000000c)   // 12 (12)
0x000036AA: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000036B0: 0x8121            - O_GIQ_OPTION
0x000036B2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000036B8: 0x800D            - O_D_TO_A
0x000036BA: 0x8019            - O_SWAPA
0x000036BC: 0x802A            - O_POP_TO_BASE
0x000036BE: 0x8029            - O_POP_BASE
0x000036C0: 0x800C            - O_A_TO_D
0x000036C2: 0x801C            - O_POP_RETURN
0x000036C4: 0x802A            - O_POP_TO_BASE
0x000036C6: 0x8029            - O_POP_BASE
0x000036C8: 0x801C            - O_POP_RETURN

68: Enc013 (0x000036ca)
===============================
0x000036CA: 0x802B            - O_PUSH_BASE
0x000036CC: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000036D2: 0xC001 0x000001b2 - O_INTOP(0x000001b2)   // 434 (434)
0x000036D8: 0x811E            - O_GSAY_REPLY
0x000036DA: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000036E0: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000036E6: 0xC001 0x000001b3 - O_INTOP(0x000001b3)   // 435 (435)
0x000036EC: 0xC001 0x00000045 - O_INTOP(0x00000045)   // 69 (69)
0x000036F2: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x000036F8: 0x8121            - O_GIQ_OPTION
0x000036FA: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00003700: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00003706: 0xC001 0x000001b4 - O_INTOP(0x000001b4)   // 436 (436)
0x0000370C: 0xC001 0x00000045 - O_INTOP(0x00000045)   // 69 (69)
0x00003712: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00003718: 0x8121            - O_GIQ_OPTION
0x0000371A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003720: 0x800D            - O_D_TO_A
0x00003722: 0x8019            - O_SWAPA
0x00003724: 0x802A            - O_POP_TO_BASE
0x00003726: 0x8029            - O_POP_BASE
0x00003728: 0x800C            - O_A_TO_D
0x0000372A: 0x801C            - O_POP_RETURN
0x0000372C: 0x802A            - O_POP_TO_BASE
0x0000372E: 0x8029            - O_POP_BASE
0x00003730: 0x801C            - O_POP_RETURN

69: Enc013a (0x00003732)
===============================
0x00003732: 0x802B            - O_PUSH_BASE
0x00003734: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x0000373A: 0xC001 0x000001b5 - O_INTOP(0x000001b5)   // 437 (437)
0x00003740: 0x811E            - O_GSAY_REPLY
0x00003742: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00003748: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x0000374E: 0xC001 0x000001b6 - O_INTOP(0x000001b6)   // 438 (438)
0x00003754: 0xC001 0x0000003e - O_INTOP(0x0000003e)   // 62 (62)
0x0000375A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00003760: 0x8121            - O_GIQ_OPTION
0x00003762: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00003768: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x0000376E: 0xC001 0x000001b7 - O_INTOP(0x000001b7)   // 439 (439)
0x00003774: 0xC001 0x0000003a - O_INTOP(0x0000003a)   // 58 (58)
0x0000377A: 0xC001 0x00000032 - O_INTOP(0x00000032)   // 50 (50)
0x00003780: 0x8121            - O_GIQ_OPTION
0x00003782: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003788: 0x800D            - O_D_TO_A
0x0000378A: 0x8019            - O_SWAPA
0x0000378C: 0x802A            - O_POP_TO_BASE
0x0000378E: 0x8029            - O_POP_BASE
0x00003790: 0x800C            - O_A_TO_D
0x00003792: 0x801C            - O_POP_RETURN
0x00003794: 0x802A            - O_POP_TO_BASE
0x00003796: 0x8029            - O_POP_BASE
0x00003798: 0x801C            - O_POP_RETURN

70: talk_p_proc (0x0000379a)
===============================
0x0000379A: 0x802B            - O_PUSH_BASE
0x0000379C: 0xC001 0x00000213 - O_INTOP(0x00000213)   // 531 (531)
0x000037A2: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000037A8: 0x80C6            - O_SET_GLOBAL_VAR
0x000037AA: 0xC001 0x00003bc0 - O_INTOP(0x00003bc0)   // 15296 (15296)
0x000037B0: 0x8101            - O_CUR_MAP_INDEX
0x000037B2: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000037B8: 0x8033            - O_EQUAL
0x000037BA: 0x802F            - O_IF
0x000037BC: 0xC001 0x00003816 - O_INTOP(0x00003816)   // 14358 (14358)
0x000037C2: 0xC001 0x00000284 - O_INTOP(0x00000284)   // 644 (644)
0x000037C8: 0x80C5            - O_GLOBAL_VAR
0x000037CA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000037D0: 0x8033            - O_EQUAL
0x000037D2: 0x802F            - O_IF
0x000037D4: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000037DA: 0x80BC            - O_SELF_OBJ
0x000037DC: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000037E2: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000037E8: 0xC001 0x00000013 - O_INTOP(0x00000013)   // 19 (19)
0x000037EE: 0x80DE            - O_START_GDIALOG
0x000037F0: 0x811C            - O_GSAY_START
0x000037F2: 0xC001 0x00003808 - O_INTOP(0x00003808)   // 14344 (14344)
0x000037F8: 0x800D            - O_D_TO_A
0x000037FA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003800: 0xC001 0x0000000e - O_INTOP(0x0000000e)   // 14 (14)
0x00003806: 0x8005            - O_CALL
0x00003808: 0x801A            - O_POP
0x0000380A: 0x811D            - O_GSAY_END
0x0000380C: 0x80DF            - O_END_DIALOGUE
0x0000380E: 0xC001 0x00003bb8 - O_INTOP(0x00003bb8)   // 15288 (15288)
0x00003814: 0x8004            - O_JMP
0x00003816: 0xC001 0x00003882 - O_INTOP(0x00003882)   // 14466 (14466)
0x0000381C: 0xC001 0x00000280 - O_INTOP(0x00000280)   // 640 (640)
0x00003822: 0x80C5            - O_GLOBAL_VAR
0x00003824: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x0000382A: 0x8033            - O_EQUAL
0x0000382C: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00003832: 0x80C1            - O_LOCAL_VAR
0x00003834: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000383A: 0x8033            - O_EQUAL
0x0000383C: 0x803E            - O_AND
0x0000383E: 0x802F            - O_IF
0x00003840: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00003846: 0x80BC            - O_SELF_OBJ
0x00003848: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x0000384E: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00003854: 0xC001 0x00000013 - O_INTOP(0x00000013)   // 19 (19)
0x0000385A: 0x80DE            - O_START_GDIALOG
0x0000385C: 0x811C            - O_GSAY_START
0x0000385E: 0xC001 0x00003874 - O_INTOP(0x00003874)   // 14452 (14452)
0x00003864: 0x800D            - O_D_TO_A
0x00003866: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000386C: 0xC001 0x00000031 - O_INTOP(0x00000031)   // 49 (49)
0x00003872: 0x8005            - O_CALL
0x00003874: 0x801A            - O_POP
0x00003876: 0x811D            - O_GSAY_END
0x00003878: 0x80DF            - O_END_DIALOGUE
0x0000387A: 0xC001 0x00003bb8 - O_INTOP(0x00003bb8)   // 15288 (15288)
0x00003880: 0x8004            - O_JMP
0x00003882: 0xC001 0x000038ee - O_INTOP(0x000038ee)   // 14574 (14574)
0x00003888: 0xC001 0x00000280 - O_INTOP(0x00000280)   // 640 (640)
0x0000388E: 0x80C5            - O_GLOBAL_VAR
0x00003890: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00003896: 0x8033            - O_EQUAL
0x00003898: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x0000389E: 0x80C1            - O_LOCAL_VAR
0x000038A0: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000038A6: 0x8033            - O_EQUAL
0x000038A8: 0x803E            - O_AND
0x000038AA: 0x802F            - O_IF
0x000038AC: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000038B2: 0x80BC            - O_SELF_OBJ
0x000038B4: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000038BA: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000038C0: 0xC001 0x00000013 - O_INTOP(0x00000013)   // 19 (19)
0x000038C6: 0x80DE            - O_START_GDIALOG
0x000038C8: 0x811C            - O_GSAY_START
0x000038CA: 0xC001 0x000038e0 - O_INTOP(0x000038e0)   // 14560 (14560)
0x000038D0: 0x800D            - O_D_TO_A
0x000038D2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x000038D8: 0xC001 0x00000036 - O_INTOP(0x00000036)   // 54 (54)
0x000038DE: 0x8005            - O_CALL
0x000038E0: 0x801A            - O_POP
0x000038E2: 0x811D            - O_GSAY_END
0x000038E4: 0x80DF            - O_END_DIALOGUE
0x000038E6: 0xC001 0x00003bb8 - O_INTOP(0x00003bb8)   // 15288 (15288)
0x000038EC: 0x8004            - O_JMP
0x000038EE: 0xC001 0x0000395a - O_INTOP(0x0000395a)   // 14682 (14682)
0x000038F4: 0xC001 0x00000280 - O_INTOP(0x00000280)   // 640 (640)
0x000038FA: 0x80C5            - O_GLOBAL_VAR
0x000038FC: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00003902: 0x8033            - O_EQUAL
0x00003904: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x0000390A: 0x80C1            - O_LOCAL_VAR
0x0000390C: 0xC001 0x00000002 - O_INTOP(0x00000002)   // 2 (2)
0x00003912: 0x8034            - O_NOT_EQUAL
0x00003914: 0x803E            - O_AND
0x00003916: 0x802F            - O_IF
0x00003918: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x0000391E: 0x80BC            - O_SELF_OBJ
0x00003920: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00003926: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x0000392C: 0xC001 0x00000013 - O_INTOP(0x00000013)   // 19 (19)
0x00003932: 0x80DE            - O_START_GDIALOG
0x00003934: 0x811C            - O_GSAY_START
0x00003936: 0xC001 0x0000394c - O_INTOP(0x0000394c)   // 14668 (14668)
0x0000393C: 0x800D            - O_D_TO_A
0x0000393E: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003944: 0xC001 0x00000035 - O_INTOP(0x00000035)   // 53 (53)
0x0000394A: 0x8005            - O_CALL
0x0000394C: 0x801A            - O_POP
0x0000394E: 0x811D            - O_GSAY_END
0x00003950: 0x80DF            - O_END_DIALOGUE
0x00003952: 0xC001 0x00003bb8 - O_INTOP(0x00003bb8)   // 15288 (15288)
0x00003958: 0x8004            - O_JMP
0x0000395A: 0xC001 0x000039b4 - O_INTOP(0x000039b4)   // 14772 (14772)
0x00003960: 0xC001 0x00000284 - O_INTOP(0x00000284)   // 644 (644)
0x00003966: 0x80C5            - O_GLOBAL_VAR
0x00003968: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x0000396E: 0x8037            - O_LESS
0x00003970: 0x802F            - O_IF
0x00003972: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00003978: 0x80BC            - O_SELF_OBJ
0x0000397A: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00003980: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00003986: 0xC001 0x00000013 - O_INTOP(0x00000013)   // 19 (19)
0x0000398C: 0x80DE            - O_START_GDIALOG
0x0000398E: 0x811C            - O_GSAY_START
0x00003990: 0xC001 0x000039a6 - O_INTOP(0x000039a6)   // 14758 (14758)
0x00003996: 0x800D            - O_D_TO_A
0x00003998: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x0000399E: 0xC001 0x00000018 - O_INTOP(0x00000018)   // 24 (24)
0x000039A4: 0x8005            - O_CALL
0x000039A6: 0x801A            - O_POP
0x000039A8: 0x811D            - O_GSAY_END
0x000039AA: 0x80DF            - O_END_DIALOGUE
0x000039AC: 0xC001 0x00003bb8 - O_INTOP(0x00003bb8)   // 15288 (15288)
0x000039B2: 0x8004            - O_JMP
0x000039B4: 0xC001 0x00003a22 - O_INTOP(0x00003a22)   // 14882 (14882)
0x000039BA: 0xC001 0x00000284 - O_INTOP(0x00000284)   // 644 (644)
0x000039C0: 0x80C5            - O_GLOBAL_VAR
0x000039C2: 0xC001 0x00000014 - O_INTOP(0x00000014)   // 20 (20)
0x000039C8: 0x8033            - O_EQUAL
0x000039CA: 0xC001 0x000001e0 - O_INTOP(0x000001e0)   // 480 (480)
0x000039D0: 0x80C5            - O_GLOBAL_VAR
0x000039D2: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x000039D8: 0x8046            - O_NEGATE
0x000039DA: 0x8033            - O_EQUAL
0x000039DC: 0x803E            - O_AND
0x000039DE: 0x802F            - O_IF
0x000039E0: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x000039E6: 0x80BC            - O_SELF_OBJ
0x000039E8: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x000039EE: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x000039F4: 0xC001 0x00000013 - O_INTOP(0x00000013)   // 19 (19)
0x000039FA: 0x80DE            - O_START_GDIALOG
0x000039FC: 0x811C            - O_GSAY_START
0x000039FE: 0xC001 0x00003a14 - O_INTOP(0x00003a14)   // 14868 (14868)
0x00003A04: 0x800D            - O_D_TO_A
0x00003A06: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003A0C: 0xC001 0x00000022 - O_INTOP(0x00000022)   // 34 (34)
0x00003A12: 0x8005            - O_CALL
0x00003A14: 0x801A            - O_POP
0x00003A16: 0x811D            - O_GSAY_END
0x00003A18: 0x80DF            - O_END_DIALOGUE
0x00003A1A: 0xC001 0x00003bb8 - O_INTOP(0x00003bb8)   // 15288 (15288)
0x00003A20: 0x8004            - O_JMP
0x00003A22: 0xC001 0x00003a96 - O_INTOP(0x00003a96)   // 14998 (14998)
0x00003A28: 0x80EA            - O_GAME_TIME
0x00003A2A: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00003A30: 0xC001 0x0000003c - O_INTOP(0x0000003c)   // 60 (60)
0x00003A36: 0x803B            - O_MUL
0x00003A38: 0xC001 0x0000003c - O_INTOP(0x0000003c)   // 60 (60)
0x00003A3E: 0x803B            - O_MUL
0x00003A40: 0xC001 0x00000018 - O_INTOP(0x00000018)   // 24 (24)
0x00003A46: 0x803B            - O_MUL
0x00003A48: 0x803C            - O_DIV
0x00003A4A: 0xC001 0x00000168 - O_INTOP(0x00000168)   // 360 (360)
0x00003A50: 0x8038            - O_GREATER
0x00003A52: 0x802F            - O_IF
0x00003A54: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00003A5A: 0x80BC            - O_SELF_OBJ
0x00003A5C: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00003A62: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00003A68: 0xC001 0x00000013 - O_INTOP(0x00000013)   // 19 (19)
0x00003A6E: 0x80DE            - O_START_GDIALOG
0x00003A70: 0x811C            - O_GSAY_START
0x00003A72: 0xC001 0x00003a88 - O_INTOP(0x00003a88)   // 14984 (14984)
0x00003A78: 0x800D            - O_D_TO_A
0x00003A7A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003A80: 0xC001 0x00000030 - O_INTOP(0x00000030)   // 48 (48)
0x00003A86: 0x8005            - O_CALL
0x00003A88: 0x801A            - O_POP
0x00003A8A: 0x811D            - O_GSAY_END
0x00003A8C: 0x80DF            - O_END_DIALOGUE
0x00003A8E: 0xC001 0x00003bb8 - O_INTOP(0x00003bb8)   // 15288 (15288)
0x00003A94: 0x8004            - O_JMP
0x00003A96: 0xC001 0x00003b0a - O_INTOP(0x00003b0a)   // 15114 (15114)
0x00003A9C: 0x80EA            - O_GAME_TIME
0x00003A9E: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00003AA4: 0xC001 0x0000003c - O_INTOP(0x0000003c)   // 60 (60)
0x00003AAA: 0x803B            - O_MUL
0x00003AAC: 0xC001 0x0000003c - O_INTOP(0x0000003c)   // 60 (60)
0x00003AB2: 0x803B            - O_MUL
0x00003AB4: 0xC001 0x00000018 - O_INTOP(0x00000018)   // 24 (24)
0x00003ABA: 0x803B            - O_MUL
0x00003ABC: 0x803C            - O_DIV
0x00003ABE: 0xC001 0x0000010e - O_INTOP(0x0000010e)   // 270 (270)
0x00003AC4: 0x8038            - O_GREATER
0x00003AC6: 0x802F            - O_IF
0x00003AC8: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00003ACE: 0x80BC            - O_SELF_OBJ
0x00003AD0: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00003AD6: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00003ADC: 0xC001 0x00000013 - O_INTOP(0x00000013)   // 19 (19)
0x00003AE2: 0x80DE            - O_START_GDIALOG
0x00003AE4: 0x811C            - O_GSAY_START
0x00003AE6: 0xC001 0x00003afc - O_INTOP(0x00003afc)   // 15100 (15100)
0x00003AEC: 0x800D            - O_D_TO_A
0x00003AEE: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003AF4: 0xC001 0x0000002f - O_INTOP(0x0000002f)   // 47 (47)
0x00003AFA: 0x8005            - O_CALL
0x00003AFC: 0x801A            - O_POP
0x00003AFE: 0x811D            - O_GSAY_END
0x00003B00: 0x80DF            - O_END_DIALOGUE
0x00003B02: 0xC001 0x00003bb8 - O_INTOP(0x00003bb8)   // 15288 (15288)
0x00003B08: 0x8004            - O_JMP
0x00003B0A: 0xC001 0x00003b7e - O_INTOP(0x00003b7e)   // 15230 (15230)
0x00003B10: 0x80EA            - O_GAME_TIME
0x00003B12: 0xC001 0x0000000a - O_INTOP(0x0000000a)   // 10 (10)
0x00003B18: 0xC001 0x0000003c - O_INTOP(0x0000003c)   // 60 (60)
0x00003B1E: 0x803B            - O_MUL
0x00003B20: 0xC001 0x0000003c - O_INTOP(0x0000003c)   // 60 (60)
0x00003B26: 0x803B            - O_MUL
0x00003B28: 0xC001 0x00000018 - O_INTOP(0x00000018)   // 24 (24)
0x00003B2E: 0x803B            - O_MUL
0x00003B30: 0x803C            - O_DIV
0x00003B32: 0xC001 0x000000b4 - O_INTOP(0x000000b4)   // 180 (180)
0x00003B38: 0x8038            - O_GREATER
0x00003B3A: 0x802F            - O_IF
0x00003B3C: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00003B42: 0x80BC            - O_SELF_OBJ
0x00003B44: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00003B4A: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00003B50: 0xC001 0x00000013 - O_INTOP(0x00000013)   // 19 (19)
0x00003B56: 0x80DE            - O_START_GDIALOG
0x00003B58: 0x811C            - O_GSAY_START
0x00003B5A: 0xC001 0x00003b70 - O_INTOP(0x00003b70)   // 15216 (15216)
0x00003B60: 0x800D            - O_D_TO_A
0x00003B62: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003B68: 0xC001 0x0000002e - O_INTOP(0x0000002e)   // 46 (46)
0x00003B6E: 0x8005            - O_CALL
0x00003B70: 0x801A            - O_POP
0x00003B72: 0x811D            - O_GSAY_END
0x00003B74: 0x80DF            - O_END_DIALOGUE
0x00003B76: 0xC001 0x00003bb8 - O_INTOP(0x00003bb8)   // 15288 (15288)
0x00003B7C: 0x8004            - O_JMP
0x00003B7E: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00003B84: 0x80BC            - O_SELF_OBJ
0x00003B86: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00003B8C: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00003B92: 0xC001 0x00000013 - O_INTOP(0x00000013)   // 19 (19)
0x00003B98: 0x80DE            - O_START_GDIALOG
0x00003B9A: 0x811C            - O_GSAY_START
0x00003B9C: 0xC001 0x00003bb2 - O_INTOP(0x00003bb2)   // 15282 (15282)
0x00003BA2: 0x800D            - O_D_TO_A
0x00003BA4: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003BAA: 0xC001 0x0000002d - O_INTOP(0x0000002d)   // 45 (45)
0x00003BB0: 0x8005            - O_CALL
0x00003BB2: 0x801A            - O_POP
0x00003BB4: 0x811D            - O_GSAY_END
0x00003BB6: 0x80DF            - O_END_DIALOGUE
0x00003BB8: 0xC001 0x00003d18 - O_INTOP(0x00003d18)   // 15640 (15640)
0x00003BBE: 0x8004            - O_JMP
0x00003BC0: 0xC001 0x000001ba - O_INTOP(0x000001ba)   // 442 (442)
0x00003BC6: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00003BCC: 0x80C6            - O_SET_GLOBAL_VAR
0x00003BCE: 0xC001 0x00003c6c - O_INTOP(0x00003c6c)   // 15468 (15468)
0x00003BD4: 0x80BF            - O_DUDE_OBJ
0x00003BD6: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003BDC: 0x8106            - O_CRITTER_INVEN_OBJ
0x00003BDE: 0x8100            - O_OBJ_PID
0x00003BE0: 0xC001 0x0000015d - O_INTOP(0x0000015d)   // 349 (349)
0x00003BE6: 0x8033            - O_EQUAL
0x00003BE8: 0x80BF            - O_DUDE_OBJ
0x00003BEA: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003BF0: 0x8106            - O_CRITTER_INVEN_OBJ
0x00003BF2: 0x8100            - O_OBJ_PID
0x00003BF4: 0xC001 0x000000e8 - O_INTOP(0x000000e8)   // 232 (232)
0x00003BFA: 0x8033            - O_EQUAL
0x00003BFC: 0x803F            - O_OR
0x00003BFE: 0xC001 0x0000000d - O_INTOP(0x0000000d)   // 13 (13)
0x00003C04: 0x80C1            - O_LOCAL_VAR
0x00003C06: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003C0C: 0x8033            - O_EQUAL
0x00003C0E: 0x803E            - O_AND
0x00003C10: 0x802F            - O_IF
0x00003C12: 0xC001 0x0000000d - O_INTOP(0x0000000d)   // 13 (13)
0x00003C18: 0xC001 0x0000000d - O_INTOP(0x0000000d)   // 13 (13)
0x00003C1E: 0x80C1            - O_LOCAL_VAR
0x00003C20: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00003C26: 0x8039            - O_ADD
0x00003C28: 0x80C2            - O_SET_LOCAL_VAR
0x00003C2A: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00003C30: 0x80BC            - O_SELF_OBJ
0x00003C32: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00003C38: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00003C3E: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x00003C44: 0x80DE            - O_START_GDIALOG
0x00003C46: 0x811C            - O_GSAY_START
0x00003C48: 0xC001 0x00003c5e - O_INTOP(0x00003c5e)   // 15454 (15454)
0x00003C4E: 0x800D            - O_D_TO_A
0x00003C50: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003C56: 0xC001 0x00000038 - O_INTOP(0x00000038)   // 56 (56)
0x00003C5C: 0x8005            - O_CALL
0x00003C5E: 0x801A            - O_POP
0x00003C60: 0x811D            - O_GSAY_END
0x00003C62: 0x80DF            - O_END_DIALOGUE
0x00003C64: 0xC001 0x00003d18 - O_INTOP(0x00003d18)   // 15640 (15640)
0x00003C6A: 0x8004            - O_JMP
0x00003C6C: 0xC001 0x00003cde - O_INTOP(0x00003cde)   // 15582 (15582)
0x00003C72: 0xC001 0x0000000d - O_INTOP(0x0000000d)   // 13 (13)
0x00003C78: 0x80C1            - O_LOCAL_VAR
0x00003C7A: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003C80: 0x8033            - O_EQUAL
0x00003C82: 0x802F            - O_IF
0x00003C84: 0xC001 0x0000000d - O_INTOP(0x0000000d)   // 13 (13)
0x00003C8A: 0xC001 0x0000000d - O_INTOP(0x0000000d)   // 13 (13)
0x00003C90: 0x80C1            - O_LOCAL_VAR
0x00003C92: 0xC001 0x00000001 - O_INTOP(0x00000001)   // 1 (1)
0x00003C98: 0x8039            - O_ADD
0x00003C9A: 0x80C2            - O_SET_LOCAL_VAR
0x00003C9C: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00003CA2: 0x80BC            - O_SELF_OBJ
0x00003CA4: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00003CAA: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00003CB0: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x00003CB6: 0x80DE            - O_START_GDIALOG
0x00003CB8: 0x811C            - O_GSAY_START
0x00003CBA: 0xC001 0x00003cd0 - O_INTOP(0x00003cd0)   // 15568 (15568)
0x00003CC0: 0x800D            - O_D_TO_A
0x00003CC2: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003CC8: 0xC001 0x00000037 - O_INTOP(0x00000037)   // 55 (55)
0x00003CCE: 0x8005            - O_CALL
0x00003CD0: 0x801A            - O_POP
0x00003CD2: 0x811D            - O_GSAY_END
0x00003CD4: 0x80DF            - O_END_DIALOGUE
0x00003CD6: 0xC001 0x00003d18 - O_INTOP(0x00003d18)   // 15640 (15640)
0x00003CDC: 0x8004            - O_JMP
0x00003CDE: 0xC001 0x0000000b - O_INTOP(0x0000000b)   // 11 (11)
0x00003CE4: 0x80BC            - O_SELF_OBJ
0x00003CE6: 0xC001 0x00000004 - O_INTOP(0x00000004)   // 4 (4)
0x00003CEC: 0xC001 0x00000003 - O_INTOP(0x00000003)   // 3 (3)
0x00003CF2: 0xC001 0x0000000f - O_INTOP(0x0000000f)   // 15 (15)
0x00003CF8: 0x80DE            - O_START_GDIALOG
0x00003CFA: 0x811C            - O_GSAY_START
0x00003CFC: 0xC001 0x00003d12 - O_INTOP(0x00003d12)   // 15634 (15634)
0x00003D02: 0x800D            - O_D_TO_A
0x00003D04: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003D0A: 0xC001 0x00000041 - O_INTOP(0x00000041)   // 65 (65)
0x00003D10: 0x8005            - O_CALL
0x00003D12: 0x801A            - O_POP
0x00003D14: 0x811D            - O_GSAY_END
0x00003D16: 0x80DF            - O_END_DIALOGUE
0x00003D18: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003D1E: 0x800D            - O_D_TO_A
0x00003D20: 0x8019            - O_SWAPA
0x00003D22: 0x802A            - O_POP_TO_BASE
0x00003D24: 0x8029            - O_POP_BASE
0x00003D26: 0x800C            - O_A_TO_D
0x00003D28: 0x801C            - O_POP_RETURN
0x00003D2A: 0x802A            - O_POP_TO_BASE
0x00003D2C: 0x8029            - O_POP_BASE
0x00003D2E: 0x801C            - O_POP_RETURN
0x00003D30: 0x802B            - O_PUSH_BASE
0x00003D32: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003D38: 0x800D            - O_D_TO_A
0x00003D3A: 0x8019            - O_SWAPA
0x00003D3C: 0x802A            - O_POP_TO_BASE
0x00003D3E: 0x8029            - O_POP_BASE
0x00003D40: 0x800C            - O_A_TO_D
0x00003D42: 0x801C            - O_POP_RETURN
0x00003D44: 0x802A            - O_POP_TO_BASE
0x00003D46: 0x8029            - O_POP_BASE
0x00003D48: 0x801C            - O_POP_RETURN

71: start (0x00003d4a)
===============================
0x00003D4A: 0x802B            - O_PUSH_BASE
0x00003D4C: 0xC001 0x00000000 - O_INTOP(0x00000000)   // 0 (0)
0x00003D52: 0x800D            - O_D_TO_A
0x00003D54: 0x8019            - O_SWAPA
0x00003D56: 0x802A            - O_POP_TO_BASE
0x00003D58: 0x8029            - O_POP_BASE
0x00003D5A: 0x800C            - O_A_TO_D
0x00003D5C: 0x801C            - O_POP_RETURN
0x00003D5E: 0x802A            - O_POP_TO_BASE
0x00003D60: 0x8029            - O_POP_BASE
0x00003D62: 0x801C            - O_POP_RETURN

