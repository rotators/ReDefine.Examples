diff --git a/Mods/MegaMod/Original/FCSUBHAT.ssl b/Mods/MegaMod/ReDefine/FCSUBHAT.ssl
index 216d6d6..7c4aced 100644
--- a/Mods/MegaMod/Original/FCSUBHAT.ssl
+++ b/Mods/MegaMod/ReDefine/FCSUBHAT.ssl
@@ -19,7 +19,7 @@ end
 
 procedure map_enter_p_proc
 begin
-    if (global_var(362) == 2) then begin
+    if (global_var(GVAR_SAN_FRAN_SUB) == 2) then begin
         call close_hatch();
     end
     else begin
@@ -30,20 +30,20 @@ end
 procedure use_p_proc
 begin
     if (local_var(1) == 0) then begin
-        if (get_critter_stat(dude_obj, 0) >= 8) then begin
+        if (dude_strength >= 8) then begin
             script_overrides;
-            display_msg(message_str(2484, 200));
+            display_mstr(200);
             call open_hatch();
         end
         else begin
             script_overrides;
             if (party_member_obj(16777377) != 0) then begin
-                display_msg(message_str(2484, 202));
+                display_mstr(202);
                 sequence := 1;
                 add_timer_event(self_obj, game_ticks(1), 1);
             end
             else begin
-                display_msg(message_str(2484, 201));
+                display_mstr(201);
             end
         end
     end
@@ -56,13 +56,13 @@ procedure timed_event_p_proc
 begin
     if (fixed_param == 1) then begin
         if (sequence == 1) then begin
-            float_msg(dude_obj, message_str(2484, 210), 3);
+            float_msg(dude_obj, mstr(210), FLOAT_MSG_GREEN);
             sequence := sequence + 1;
             add_timer_event(self_obj, game_ticks(2), 1);
         end
         else begin
             if (sequence == 2) then begin
-                float_msg(party_member_obj(16777377), message_str(2484, 211), 3);
+                float_msg(party_member_obj(16777377), mstr(211), FLOAT_MSG_GREEN);
                 sequence := sequence + 1;
                 animate_move_obj_to_tile(self_obj, 20094, 0);
                 add_timer_event(self_obj, game_ticks(2), 1);
@@ -79,14 +79,14 @@ begin
                         reg_anim_func(1, 1);
                         reg_anim_animate(party_member_obj(16777377), 10, -1);
                         reg_anim_func(3, 0);
-                        float_msg(party_member_obj(16777377), message_str(2484, 212), 8);
+                        float_msg(party_member_obj(16777377), mstr(212), FLOAT_MSG_YELLOW);
                         add_timer_event(self_obj, game_ticks(1), 1);
                         sequence := sequence + 1;
                     end
                 end
                 else begin
                     if (sequence == 4) then begin
-                        display_msg(message_str(2484, 213));
+                        display_mstr(213);
                         call open_hatch();
                     end
                 end
@@ -98,7 +98,7 @@ end
 procedure look_at_p_proc
 begin
     script_overrides;
-    display_msg(message_str(2484, 100));
+    display_mstr(100);
 end
 
 procedure use_skill_on_p_proc
@@ -111,19 +111,19 @@ begin
         if (is_success(Locks_Roll)) then begin
             if (obj_is_locked(self_obj)) then begin
                 call open_hatch();
-                display_msg(message_str(2484, 220));
+                display_mstr(220);
             end
             else begin
                 call close_hatch();
-                display_msg(message_str(2484, 240));
+                display_mstr(240);
             end
         end
         else begin
             if (obj_is_locked(self_obj)) then begin
-                display_msg(message_str(2484, 221));
+                display_mstr(221);
             end
             else begin
-                display_msg(message_str(2484, 241));
+                display_mstr(241);
             end
         end
     end
@@ -141,20 +141,20 @@ begin
         if (is_success(Locks_Roll)) then begin
             if (obj_is_locked(self_obj)) then begin
                 call open_hatch();
-                display_msg(message_str(2484, 220));
+                display_mstr(220);
             end
             else begin
                 call close_hatch();
-                display_msg(message_str(2484, 240));
+                display_mstr(240);
             end
         end
         else begin
             call close_hatch();
             if (obj_is_locked(self_obj)) then begin
-                display_msg(message_str(2484, 221));
+                display_mstr(221);
             end
             else begin
-                display_msg(message_str(2484, 241));
+                display_mstr(241);
             end
         end
     end
@@ -165,19 +165,19 @@ begin
             if (is_success(Locks_Roll)) then begin
                 if (obj_is_locked(self_obj)) then begin
                     call open_hatch();
-                    display_msg(message_str(2484, 220));
+                    display_mstr(220);
                 end
                 else begin
                     call close_hatch();
-                    display_msg(message_str(2484, 240));
+                    display_mstr(240);
                 end
             end
             else begin
                 if (obj_is_locked(self_obj)) then begin
-                    display_msg(message_str(2484, 221));
+                    display_mstr(221);
                 end
                 else begin
-                    display_msg(message_str(2484, 241));
+                    display_mstr(241);
                 end
             end
         end
@@ -188,7 +188,7 @@ end
 
 procedure damage_p_proc
 begin
-    if (metarule(49, target_obj) == 6) then begin
+    if (weapon_dmg_type(target_obj) == 6) then begin
         destroy_object(self_obj);
     end
 end
@@ -205,4 +205,3 @@ begin
     obj_close(self_obj);
     obj_lock(self_obj);
 end
-
