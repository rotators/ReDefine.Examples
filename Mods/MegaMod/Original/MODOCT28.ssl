variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;
variable PartyMemberBackground := -1;

procedure Check_Next_Third_Of_Areas;
procedure Check_Second_Third_Of_Areas;
procedure Check_Final_Third_Of_Areas;
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure push_p_proc;
procedure Attempted_Theft;
procedure Node998;
procedure Node999;

variable Trying_To_Steal;
variable inven_value;
variable inven_num;
variable temp_owner;
variable temp_box;
variable item;

import variable flick_obj;
import variable tubby_obj;
import variable den_flick_box_obj;
import variable den_tubby_box_obj;

procedure timed_event_p_proc;
procedure map_exit_p_proc;
procedure use_obj_on_p_proc;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure Check_Next_Third_Of_Areas
begin
    if (metarule(46, 0) == 16) then begin
        PartyMemberBackground := 15;
    end
    else begin
        if (metarule(46, 0) == 17) then begin
            PartyMemberBackground := 16;
        end
        else begin
            if (metarule(46, 0) == 18) then begin
                PartyMemberBackground := 16;
            end
            else begin
                if (metarule(46, 0) == 19) then begin
                    PartyMemberBackground := 16;
                end
                else begin
                    if (metarule(46, 0) == 20) then begin
                    end
                    else begin
                        if (metarule(46, 0) == 21) then begin
                            PartyMemberBackground := 16;
                        end
                        else begin
                            if (metarule(46, 0) == 22) then begin
                                PartyMemberBackground := 16;
                            end
                            else begin
                                if (metarule(46, 0) == 23) then begin
                                    PartyMemberBackground := 14;
                                end
                                else begin
                                    if (metarule(46, 0) == 24) then begin
                                        PartyMemberBackground := 16;
                                    end
                                    else begin
                                        if (metarule(46, 0) == 25) then begin
                                            if (cur_map_index == 92) then begin
                                                if (elevation(self_obj) == 0) then begin
                                                    PartyMemberBackground := 16;
                                                end
                                                else begin
                                                    PartyMemberBackground := 4;
                                                end
                                            end
                                            else begin
                                                PartyMemberBackground := 14;
                                            end
                                        end
                                        else begin
                                            if (metarule(46, 0) == 26) then begin
                                                PartyMemberBackground := 16;
                                            end
                                            else begin
                                                if (metarule(46, 0) == 27) then begin
                                                    if (elevation(self_obj) == 1) then begin
                                                        PartyMemberBackground := 14;
                                                    end
                                                    else begin
                                                        PartyMemberBackground := 16;
                                                    end
                                                end
                                                else begin
                                                    if (metarule(46, 0) == 28) then begin
                                                        PartyMemberBackground := 4;
                                                    end
                                                    else begin
                                                        if (metarule(46, 0) == 29) then begin
                                                            if (elevation(self_obj) == 1) then begin
                                                                PartyMemberBackground := 14;
                                                            end
                                                            else begin
                                                                PartyMemberBackground := 16;
                                                            end
                                                        end
                                                        else begin
                                                            if (metarule(46, 0) == 30) then begin
                                                                if (elevation(self_obj) == 1) then begin
                                                                    PartyMemberBackground := 14;
                                                                end
                                                                else begin
                                                                    PartyMemberBackground := 16;
                                                                end
                                                            end
                                                            else begin
                                                                call Check_Second_Third_Of_Areas();
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure Check_Second_Third_Of_Areas
begin
    if (metarule(46, 0) == 31) then begin
        PartyMemberBackground := 16;
    end
    else begin
        if (metarule(46, 0) == 32) then begin
            PartyMemberBackground := 16;
        end
        else begin
            if (metarule(46, 0) == 33) then begin
                PartyMemberBackground := 16;
            end
            else begin
                if (metarule(46, 0) == 34) then begin
                    PartyMemberBackground := 16;
                end
                else begin
                    if (metarule(46, 0) == 35) then begin
                        PartyMemberBackground := 16;
                    end
                    else begin
                        if (metarule(46, 0) == 36) then begin
                            PartyMemberBackground := 16;
                        end
                        else begin
                            if (metarule(46, 0) == 37) then begin
                                PartyMemberBackground := 16;
                            end
                            else begin
                                if (metarule(46, 0) == 38) then begin
                                    PartyMemberBackground := 16;
                                end
                                else begin
                                    if (metarule(46, 0) == 39) then begin
                                        PartyMemberBackground := 16;
                                    end
                                    else begin
                                        if (metarule(46, 0) == 40) then begin
                                            PartyMemberBackground := 16;
                                        end
                                        else begin
                                            if (metarule(46, 0) == 18) then begin
                                                PartyMemberBackground := 16;
                                            end
                                            else begin
                                                if (metarule(46, 0) == 41) then begin
                                                    PartyMemberBackground := 16;
                                                end
                                                else begin
                                                    if (metarule(46, 0) == 42) then begin
                                                        PartyMemberBackground := 16;
                                                    end
                                                    else begin
                                                        if (metarule(46, 0) == 43) then begin
                                                            PartyMemberBackground := 16;
                                                        end
                                                        else begin
                                                            if (metarule(46, 0) == 44) then begin
                                                                PartyMemberBackground := 16;
                                                            end
                                                            else begin
                                                                call Check_Final_Third_Of_Areas();
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure Check_Final_Third_Of_Areas
begin
    if (metarule(46, 0) == 45) then begin
        if (elevation(self_obj) == 1) then begin
            PartyMemberBackground := 14;
        end
        else begin
            PartyMemberBackground := 16;
        end
    end
    else begin
        if (metarule(46, 0) == 46) then begin
            if (elevation(self_obj) == 1) then begin
                PartyMemberBackground := 14;
            end
            else begin
                PartyMemberBackground := 16;
            end
        end
        else begin
            if (metarule(46, 0) == 47) then begin
                if (elevation(self_obj) == 1) then begin
                    PartyMemberBackground := 14;
                end
                else begin
                    PartyMemberBackground := 16;
                end
            end
            else begin
                if (metarule(46, 0) == 48) then begin
                    PartyMemberBackground := 3;
                end
            end
        end
    end
end

procedure start
begin
end

procedure critter_p_proc
begin
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(9) bwand 2) != 0) then begin
            if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                if (anim_busy(self_obj) == 0) then begin
                    global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                    global_temp := (global_temp + 1) % 6;
                    while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                        debug_msg("flee loop: rot == " + global_temp);
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                        global_temp := (global_temp + 1) % 6;
                    end
                end
            end
        end
        else begin
            if (local_var(5) < game_time) then begin
                if ((tile_distance(tile_num(self_obj), tile_num(dude_obj)) <= 1) and (obj_is_carrying_obj_pid(dude_obj, 567) > 0)) then begin
                    if (Trying_To_Steal == 0) then begin
                        Trying_To_Steal := 1;
                        call Attempted_Theft();
                    end
                end
            end
        end
    end
    else begin
        if (critter_inven_obj(self_obj, -2) > 0) then begin
            if ((tile_distance_objs(self_obj, dude_obj) > 8) or (tile_num(self_obj) != local_var(4))) then begin
                temp_owner := 0;
                temp_box := 0;
                if (cur_map_index == 6) then begin
                    if (tubby_obj != 0) then begin
                        if (temp_owner != 0) then begin
                            if (tile_distance_objs(self_obj, tubby_obj) < tile_distance_objs(self_obj, temp_owner)) then begin
                                temp_owner := tubby_obj;
                                temp_box := den_tubby_box_obj;
                            end
                        end
                        else begin
                            temp_owner := tubby_obj;
                            temp_box := den_tubby_box_obj;
                        end
                    end
                    if (flick_obj != 0) then begin
                        if (temp_owner != 0) then begin
                            if (tile_distance_objs(self_obj, flick_obj) < tile_distance_objs(self_obj, temp_owner)) then begin
                                temp_owner := flick_obj;
                                temp_box := den_flick_box_obj;
                            end
                        end
                        else begin
                            temp_owner := flick_obj;
                            temp_box := den_flick_box_obj;
                        end
                    end
                end
                if ((temp_owner != 0) and (anim_busy(self_obj) == 0)) then begin
                    if (tile_distance_objs(self_obj, temp_owner) <= 4) then begin
                        inven_value := 0;
                        inven_num := 0;
                        while (inven_num < critter_inven_obj(self_obj, -2)) do begin
                            inven_value := inven_value + (proto_data(obj_pid(inven_cmds(self_obj, 13, inven_num)), 14) * obj_is_carrying_obj_pid(self_obj, obj_pid(inven_cmds(self_obj, 13, inven_num))));
                            inven_num := inven_num + 1;
                        end
                        inven_value := 25 * inven_value / 100;
                        move_obj_inven_to_obj(self_obj, temp_box);
                        set_local_var(6, local_var(6) + inven_value);
                        debug_msg("the kid just sold his inventory for " + inven_value);
                    end
                    else begin
                        if (tile_distance_objs(self_obj, temp_owner) > 1) then begin
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(temp_owner), rotation_to_tile(tile_num(temp_owner), tile_num(self_obj)), 1), 1);
                        end
                        else begin
                            if (rotation_to_tile(tile_num(self_obj), tile_num(temp_owner)) != has_trait(1, self_obj, 10)) then begin
                                if (anim_busy(self_obj) == 0) then begin
                                    anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(temp_owner)));
                                end
                            end
                        end
                    end
                end
            end
        end
        else begin
            if (tile_num(self_obj) != local_var(4)) then begin
                if ((tile_num(self_obj) != local_var(4)) and (local_var(4) != 0)) then begin
                    if ((dest_tile == local_var(4)) and (step_tile < 0)) then begin
                        step_tile := step_tile + 1;
                    end
                    else begin
                        if (anim_busy(self_obj) == 0) then begin
                            dest_tile := local_var(4);
                            step_tile := local_var(4);
                            animate_move_obj_to_tile(self_obj, step_tile, 0);
                            while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), local_var(4)) >= tile_distance(step_tile, local_var(4)))) do begin
                                step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), (2 % tile_distance(step_tile, tile_num(self_obj))) + 1);
                                animate_move_obj_to_tile(self_obj, step_tile, 0);
                            end
                            if (anim_busy(self_obj) == 0) then begin
                                if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
                                    if (anim_busy(self_obj) == 0) then begin
                                        global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                        global_temp := (global_temp + 1) % 6;
                                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                            debug_msg("flee loop: rot == " + global_temp);
                                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                            global_temp := (global_temp + 1) % 6;
                                        end
                                    end
                                end
                                else begin
                                    step_tile := -10;
                                end
                            end
                        end
                        else begin
                            if (tile_distance(tile_num(self_obj), local_var(4)) < tile_distance(dest_tile, local_var(4))) then begin
                                reg_anim_func(2, self_obj);
                            end
                        end
                    end
                end
            end
            else begin
                if (has_trait(1, self_obj, 10) != local_var(7)) then begin
                    anim(self_obj, 1000, local_var(7));
                end
            end
        end
    end
    if (obj_is_carrying_obj_pid(self_obj, 567) == 1) then begin
        if (local_var(11) == 0) then begin
            add_timer_event(self_obj, 15, 4);
            set_global_var(996, 2);
            set_local_var(11, 1);
        end
    end
    if (local_var(11) == 2) then begin
        removed_qty := obj_is_carrying_obj_pid(self_obj, 567);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(self_obj, 567);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(self_obj, 567);
                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                        restock_obj := critter_inven_obj(self_obj, 0);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(self_obj, restock_obj);
                        add_obj_to_inven(self_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                        metarule(43, self_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
        end
        restock_obj := 0;
        restock_amt := 0;
        critter_dmg(self_obj, 1000, 0);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        critter_set_flee_state(self_obj, 1);
    end
end

procedure talk_p_proc
begin
    if (local_var(2) == 0) then begin
        set_local_var(2, 1);
        set_local_var(3, (get_critter_stat(dude_obj, 3) - get_critter_stat(self_obj, 3)) * 5);
        debug_msg("Base Reaction == " + local_var(3));
    end
    Static_Reaction := 0;
    set_local_var(0, 0);
    debug_msg("Start Reaction == " + local_var(0));
    if (reaction_bonus_karma >= 0) then begin
        reaction_bonus_karma := reaction_bonus_karma / 1000;
    end
    else begin
        reaction_bonus_karma := -1 * (-1 * reaction_bonus_karma / 1000);
    end
    if (global_var(49) >= 0) then begin
        reaction_bonus_town_rep := global_var(49) / 2;
    end
    else begin
        reaction_bonus_town_rep := -1 * (-1 * global_var(49) / 2);
    end
    if (has_trait(2, dude_obj, 13)) then begin
        if (get_critter_stat(dude_obj, 34) == get_critter_stat(self_obj, 34)) then begin
            Static_Reaction := Static_Reaction + -20;
        end
        else begin
            Static_Reaction := Static_Reaction + 20;
        end
        debug_msg("Sex Appeal Bonus == " + Static_Reaction);
    end
    else begin
        debug_msg("Sex Appeal Bonus == 0");
    end
    if (Evil_Critter == 1) then begin
        Static_Reaction := Static_Reaction - reaction_bonus_karma;
        debug_msg("Karma Reaction Bonus == " + Static_Reaction);
        Static_Reaction := Static_Reaction - reaction_bonus_town_rep;
        debug_msg("Town Rep Bonus == " + Static_Reaction);
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (global_var(37) == 1) then begin
            Static_Reaction := Static_Reaction - 20;
        end
        else begin
            if (global_var(38) == 1) then begin
                Static_Reaction := Static_Reaction - 15;
            end
            else begin
                if (global_var(39) == 1) then begin
                    Static_Reaction := Static_Reaction - 10;
                end
                else begin
                    if (global_var(40) == 1) then begin
                        Static_Reaction := Static_Reaction - 5;
                    end
                    else begin
                        if (global_var(41) == 1) then begin
                            Static_Reaction := Static_Reaction - 0;
                        end
                        else begin
                            if (global_var(42) == 1) then begin
                                Static_Reaction := Static_Reaction - -5;
                            end
                            else begin
                                if (global_var(43) == 1) then begin
                                    Static_Reaction := Static_Reaction - -10;
                                end
                                else begin
                                    if (global_var(44) == 1) then begin
                                        Static_Reaction := Static_Reaction - -15;
                                    end
                                    else begin
                                        Static_Reaction := Static_Reaction - -20;
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        debug_msg("Bad Person Reaction Bonus == " + Static_Reaction);
    end
    else begin
        Static_Reaction := Static_Reaction + reaction_bonus_karma;
        debug_msg("Karma Reaction Bonus == " + Static_Reaction);
        Static_Reaction := Static_Reaction + reaction_bonus_town_rep;
        debug_msg("Town Rep Bonus == " + Static_Reaction);
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (global_var(37) == 1) then begin
            Static_Reaction := Static_Reaction + 20;
        end
        else begin
            if (global_var(38) == 1) then begin
                Static_Reaction := Static_Reaction + 15;
            end
            else begin
                if (global_var(39) == 1) then begin
                    Static_Reaction := Static_Reaction + 10;
                end
                else begin
                    if (global_var(40) == 1) then begin
                        Static_Reaction := Static_Reaction + 5;
                    end
                    else begin
                        if (global_var(41) == 1) then begin
                            Static_Reaction := Static_Reaction + 0;
                        end
                        else begin
                            if (global_var(42) == 1) then begin
                                Static_Reaction := Static_Reaction + -5;
                            end
                            else begin
                                if (global_var(43) == 1) then begin
                                    Static_Reaction := Static_Reaction + -10;
                                end
                                else begin
                                    if (global_var(44) == 1) then begin
                                        Static_Reaction := Static_Reaction + -15;
                                    end
                                    else begin
                                        Static_Reaction := Static_Reaction + -20;
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        debug_msg("Good Person Reaction Bonus == " + Static_Reaction);
    end
    if (Slavery_Tolerant == 0) then begin
        if (global_var(11) == 1) then begin
            Static_Reaction := Static_Reaction + (2 * -25);
        end
    end
    else begin
        if (Slavery_Tolerant == 1) then begin
            if (global_var(11) == 1) then begin
                Static_Reaction := Static_Reaction + -25;
            end
        end
        else begin
            if (Slavery_Tolerant == 3) then begin
                if (global_var(11) == 1) then begin
                    Static_Reaction := Static_Reaction - -25;
                end
            end
        end
    end
    debug_msg("Slaver + Aligned Reaction == " + Static_Reaction);
    Static_Reaction := Static_Reaction + (10 * has_trait(0, dude_obj, 10));
    debug_msg("Presence Reaction == " + Static_Reaction);
    if (global_var(1) >= 2) then begin
        Static_Reaction := Static_Reaction + -30;
    end
    debug_msg("Childkiller Reaction == " + Static_Reaction);
    set_local_var(0, local_var(3) + Static_Reaction);
    debug_msg("Initial Reaction == " + local_var(0));
    if ((local_var(8) == 1) and (((global_var(445) bwand 4) != 0) == 0)) then begin
        float_msg(self_obj, message_str(40, random(210, 213)), 8);
    end
    else begin
        if ((local_var(8) == 3) and (((global_var(445) bwand 8) != 0) == 0)) then begin
            float_msg(self_obj, message_str(40, random(220, 223)), 8);
        end
        else begin
            if ((local_var(8) == 4) and (((global_var(445) bwand 2) != 0) == 0)) then begin
                float_msg(self_obj, message_str(40, random(230, 233)), 8);
            end
            else begin
                if ((local_var(8) == 2) and (((global_var(445) bwand 16) != 0) == 0)) then begin
                    float_msg(self_obj, message_str(40, random(240, 245)), 8);
                end
                else begin
                    float_msg(self_obj, message_str(40, random(200, 202)), 8);
                end
            end
        end
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(2, 0);
        set_global_var(1, global_var(1) + 1);
        set_global_var(0, global_var(0) + -15);
        debug_msg("Player gains " + -15 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(49, global_var(49) + -8);
        debug_msg("Added " + -8 + " to Town Rep");
    end
    item_caps_adjust(self_obj, local_var(6));
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(40, 100));
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(40, 150));
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        critter_set_flee_state(self_obj, 1);
        set_local_var(9, local_var(9) bwor 8);
        set_local_var(9, local_var(9) bwor 2);
    end
end

procedure map_enter_p_proc
begin
    if (metarule(22, 0) == 0) then begin
        if (metarule(14, 0)) then begin
            set_local_var(4, tile_num(self_obj));
            set_local_var(7, has_trait(1, self_obj, 10));
            if (cur_map_index == 6) then begin
                if (tile_distance(tile_num(self_obj), 17709) <= 15) then begin
                    if (local_var(8) == 0) then begin
                        set_local_var(8, 1);
                    end
                    else begin
                        if (tile_distance(tile_num(self_obj), 17709) < tile_distance(tile_num(self_obj), local_var(8))) then begin
                            set_local_var(8, 1);
                        end
                    end
                end
                if (tile_distance(tile_num(self_obj), 17468) <= 15) then begin
                    if (local_var(8) == 0) then begin
                        set_local_var(8, 2);
                    end
                    else begin
                        if (tile_distance(tile_num(self_obj), 17468) < tile_distance(tile_num(self_obj), local_var(8))) then begin
                            set_local_var(8, 2);
                        end
                    end
                end
                if (tile_distance(tile_num(self_obj), 25681) <= 15) then begin
                    if (local_var(8) == 0) then begin
                        set_local_var(8, 3);
                    end
                    else begin
                        if (tile_distance(tile_num(self_obj), 25681) < tile_distance(tile_num(self_obj), local_var(8))) then begin
                            set_local_var(8, 3);
                        end
                    end
                end
            end
            else begin
                if (cur_map_index == 7) then begin
                    if (tile_distance(tile_num(self_obj), 14508) <= 15) then begin
                        if (local_var(8) == 0) then begin
                            set_local_var(8, 4);
                        end
                        else begin
                            if (tile_distance(tile_num(self_obj), 14508) < tile_distance(tile_num(self_obj), local_var(8))) then begin
                                set_local_var(8, 4);
                            end
                        end
                    end
                end
            end
            critter_add_trait(self_obj, 1, 6, 17);
            critter_add_trait(self_obj, 1, 5, 15);
        end
        set_local_var(6, random(25, 75));
        if ((local_var(8) == 1) and ((global_var(445) bwand 4) != 0) or ((local_var(8) == 2) and ((global_var(445) bwand 16) != 0)) or ((local_var(8) == 3) and ((global_var(445) bwand 8) != 0)) or ((local_var(8) == 4) and ((global_var(445) bwand 2) != 0))) then begin
        end
        else begin
            if (has_trait(1, self_obj, 666) == 0) then begin
                set_obj_visibility(self_obj, 0);
            end
        end
        metarule3(100, self_obj, 0, 0);
        add_timer_event(self_obj, game_ticks(random(15, 60)), 0);
    end
end

procedure push_p_proc
begin
    if (local_var(4) == tile_num(self_obj)) then begin
        script_overrides;
    end
end

procedure Attempted_Theft
begin
    variable LVar0 := 0;
    LVar0 := roll_vs_skill(self_obj, 10, 0);
    if (is_success(LVar0)) then begin
        item := obj_carrying_pid_obj(dude_obj, 567);
        rm_obj_from_inven(dude_obj, item);
        add_obj_to_inven(self_obj, item);
    end
    anim(self_obj, 11, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
    animate_stand_obj(self_obj);
    set_local_var(5, game_time + (random(1, 5) * (60 * 10)));
    Trying_To_Steal := 0;
    return 0;
    LVar0 := 0;
end

procedure Node998
begin
    set_local_var(9, local_var(9) bwor 2);
    critter_set_flee_state(self_obj, 1);
end

procedure Node999
begin
end

procedure timed_event_p_proc
begin
    if (fixed_param == 0) then begin
        if (combat_is_initialized == 0) then begin
            if (obj_can_see_obj(self_obj, dude_obj)) then begin
                if (critter_is_fleeing(self_obj)) then begin
                    float_msg(self_obj, message_str(40, random(310, 319)), 8);
                end
                else begin
                    if ((local_var(8) == 1) and (((global_var(445) bwand 4) != 0) == 0)) then begin
                        float_msg(self_obj, message_str(40, random(271 - (tile_distance(tile_num(self_obj), tile_num(dude_obj)) <= 1), 272 + ((tile_distance(tile_num(self_obj), tile_num(dude_obj)) <= 6) == 0))), 8);
                    end
                    else begin
                        if ((local_var(8) == 2) and (((global_var(445) bwand 16) != 0) == 0)) then begin
                            if (tile_distance(tile_num(self_obj), tile_num(dude_obj)) <= 6) then begin
                                float_msg(self_obj, message_str(40, random(303 - ((get_critter_stat(dude_obj, 34) == 1) * (get_critter_stat(dude_obj, 3) >= 8)), 304 + ((get_critter_stat(dude_obj, 34) == 0) * (get_critter_stat(dude_obj, 3) >= 8)))), 8);
                            end
                            else begin
                                if (tile_distance(tile_num(self_obj), tile_num(dude_obj)) <= 1) then begin
                                    float_msg(self_obj, message_str(40, random(300, 301)), 8);
                                end
                                else begin
                                    float_msg(self_obj, message_str(40, 306), 8);
                                end
                            end
                        end
                        else begin
                            if ((local_var(8) == 3) and (((global_var(445) bwand 8) != 0) == 0)) then begin
                                float_msg(self_obj, message_str(40, random(281 - (tile_distance(tile_num(self_obj), tile_num(dude_obj)) <= 1), 282 + ((tile_distance(tile_num(self_obj), tile_num(dude_obj)) <= 6) == 0))), 8);
                            end
                            else begin
                                if ((local_var(8) == 4) and (((global_var(445) bwand 2) != 0) == 0)) then begin
                                    float_msg(self_obj, message_str(40, random(291 - (tile_distance(tile_num(self_obj), tile_num(dude_obj)) <= 1), 292 + ((tile_distance(tile_num(self_obj), tile_num(dude_obj)) <= 6) == 0))), 8);
                                end
                                else begin
                                    float_msg(self_obj, message_str(40, 250 + (get_critter_stat(dude_obj, 34) == 0)), 8);
                                end
                            end
                        end
                    end
                end
            end
        end
        metarule3(100, self_obj, 0, 0);
        add_timer_event(self_obj, game_ticks(random(15, 60)), 0);
    end
    else begin
        if (fixed_param == 4) then begin
            float_msg(self_obj, message_str(1784, 100), 8);
            set_local_var(11, 2);
        end
    end
end

procedure map_exit_p_proc
begin
    if (critter_inven_obj(self_obj, -2) > 0) then begin
        temp_owner := 0;
        temp_box := 0;
        if (cur_map_index == 6) then begin
            if (tubby_obj != 0) then begin
                if (temp_owner != 0) then begin
                    if (tile_distance_objs(self_obj, tubby_obj) < tile_distance_objs(self_obj, temp_owner)) then begin
                        temp_owner := tubby_obj;
                        temp_box := den_tubby_box_obj;
                    end
                end
                else begin
                    temp_owner := tubby_obj;
                    temp_box := den_tubby_box_obj;
                end
            end
            if (flick_obj != 0) then begin
                if (temp_owner != 0) then begin
                    if (tile_distance_objs(self_obj, flick_obj) < tile_distance_objs(self_obj, temp_owner)) then begin
                        temp_owner := flick_obj;
                        temp_box := den_flick_box_obj;
                    end
                end
                else begin
                    temp_owner := flick_obj;
                    temp_box := den_flick_box_obj;
                end
            end
        end
        if (temp_owner != 0) then begin
            move_obj_inven_to_obj(self_obj, temp_box);
        end
        else begin
            temp_box := create_object_sid(130, 0, 0, -1);
            move_obj_inven_to_obj(self_obj, temp_box);
            destroy_object(temp_box);
        end
    end
end

procedure use_obj_on_p_proc
begin
end

