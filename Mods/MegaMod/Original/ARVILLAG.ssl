/*******************************************************
*      Some unreferenced imported varables found.      *
*      Because of it it is impossible to specify       *
*      the real names of global variables.             *
*******************************************************/

variable GVar0;
variable GVar1;
variable GVar2;
variable GVar3;
variable GVar4;
variable GVar5;
variable GVar6;
variable GVar7;
variable GVar8;
variable GVar9;
variable GVar10;
variable GVar11;
variable GVar12;
variable GVar13;
variable GVar14;
variable GVar15;
variable GVar16;
variable GVar17;
variable GVar18;
variable GVar19;
variable GVar20;

/* ?import? variable ProtoOfItemGiven; */
/* ?import? variable ValueOfRollCheck; */
/* ?import? variable Scenery_Creation; */
/* ?import? variable Scenery_Creation_Hex; */
/* ?import? variable Scenery_Creation_Count; */
/* ?import? variable Temp_Scenery_Creation_Hex; */
/* ?import? variable Scenery_Creation_Ptr; */
/* ?import? variable How_Many_Party_Members_Are_Injured; */
/* ?import? variable How_Many_Party_Members_Armed; */
/* ?import? variable PartyHealingItem; */

procedure checkPartyMembersNearDoor;

/* ?import? variable global_temp; */
/* ?import? variable dest_tile; */
/* ?import? variable step_tile; */
/* ?import? variable in_dialog; */
/* ?import? variable forced_node; */
/* ?import? variable restock_amt; */
/* ?import? variable restock_obj; */
/* ?import? variable restock_trash; */
/* ?import? variable removed_qty; */

procedure EvaluateKarma;
procedure CheckRep;
procedure Lightning;

/* ?import? variable Nagor_Tile; */

export variable Nagor_Tile;

procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure start;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure EvaluateKarma
begin
    set_global_var(37, 0);
    set_global_var(38, 0);
    set_global_var(39, 0);
    set_global_var(40, 0);
    set_global_var(41, 0);
    set_global_var(42, 0);
    set_global_var(43, 0);
    set_global_var(44, 0);
    set_global_var(45, 0);
    if (global_var(0) >= 1000) then begin
        set_global_var(37, 1);
    end
    else begin
        if (global_var(0) >= 750) then begin
            set_global_var(38, 1);
        end
        else begin
            if (global_var(0) >= 500) then begin
                set_global_var(39, 1);
            end
            else begin
                if (global_var(0) >= 250) then begin
                    set_global_var(40, 1);
                end
                else begin
                    if (global_var(0) > -250) then begin
                        set_global_var(41, 1);
                    end
                    else begin
                        if (global_var(0) > -500) then begin
                            set_global_var(42, 1);
                        end
                        else begin
                            if (global_var(0) > -750) then begin
                                set_global_var(43, 1);
                            end
                            else begin
                                if (global_var(0) > -1000) then begin
                                    set_global_var(44, 1);
                                end
                                else begin
                                    set_global_var(45, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure CheckRep
begin
    if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
        set_global_var(2, 1);
        set_global_var(3, 0);
    end
    if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
        set_global_var(3, 1);
        set_global_var(2, 0);
    end
end

procedure Lightning
begin
    if ((get_month >= 3) and (get_month < 5)) then begin
        if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
            set_light_level(game_time_hour - 600 + 40);
        end
        else begin
            if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                set_light_level(100);
            end
            else begin
                if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                    set_light_level(100 - game_time_hour + 1800);
                end
                else begin
                    set_light_level(40);
                end
            end
        end
    end
    else begin
        if ((get_month >= 5) and (get_month < 9)) then begin
            if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                set_light_level(game_time_hour - 500 + 40);
            end
            else begin
                if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                        set_light_level(100 - game_time_hour + 1900);
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 9) and (get_month < 11)) then begin
                if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                    set_light_level(game_time_hour - 600 + 40);
                end
                else begin
                    if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                            set_light_level(100 - game_time_hour + 1800);
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                    set_light_level(game_time_hour - 700 + 40);
                end
                else begin
                    if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                            set_light_level(100 - game_time_hour + 1700);
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
        end
    end
end

procedure map_enter_p_proc
begin
    variable LVar0 := 0;
    if (metarule(14, 0)) then begin
        play_gmovie(3);
        set_global_var(0, global_var(0) + 15);
        debug_msg("Player gains " + 15 + " Karma Points.");
        call EvaluateKarma();
        if (global_var(10) == 0) then begin
            set_global_var(10, 2);
        end
    end
    call Lightning();
    set_global_var(27, 0);
end

procedure map_update_p_proc
begin
    if (global_var(7) == 1) then begin
        set_global_var(47, -50);
    end
    else begin
        if (global_var(644) == 20) then begin
            set_global_var(47, 50);
        end
    end
    if ((map_var(6) == 0) and (global_var(640) == 2)) then begin
        set_map_var(6, 1);
        display_msg(message_str(27, 100));
        give_exp_points(150);
        display_msg(message_str(14, 100) + 150 + message_str(14, 101));
    end
    call Lightning();
end

procedure start
begin
end

