procedure start;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure playerStepBack;

variable n1count;
variable n2count;
variable n3count;
variable n4count;
variable n5count;
variable n6count;
variable n7count;
variable n8count;
variable talking;

procedure timed_event_p_proc;


procedure start
begin
end

procedure use_p_proc
begin
    script_overrides;
    if (not(talking)) then begin
        if (local_var(1) == 1) then begin
            call Node007();
        end
        else begin
            if ((game_time_hour > 600) and (game_time_hour < 1800)) then begin
                call Node005();
            end
            else begin
                call Node004();
            end
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(0) == 0) then begin
        display_msg(message_str(704, 100));
    end
    else begin
        display_msg(message_str(704, 102));
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(704, 103));
end

procedure use_skill_on_p_proc
begin
    if (talking == 0) then begin
        if (action_being_used == 10) then begin
            if (not(metarule(40, 10))) then begin
                if (has_skill(dude_obj, 10) < 95) then begin
                    call Node008();
                end
            end
        end
    end
    else begin
        script_overrides;
    end
end

procedure use_obj_on_p_proc
begin
    call use_p_proc();
end

procedure damage_p_proc
begin
end

procedure map_enter_p_proc
begin
    add_timer_event(self_obj, game_ticks(random(3, 5)), 7);
end

procedure map_update_p_proc
begin
end

procedure talk_p_proc
begin
end

procedure Node001
begin
    float_msg(self_obj, message_str(704, 104 + n1count), 3);
    n1count := n1count + 1;
    if (n1count > 3) then begin
        n1count := 0;
    end
end

procedure Node002
begin
    float_msg(self_obj, message_str(704, 107 + n2count), 3);
    n2count := n2count + 1;
    if (n2count > 5) then begin
        n2count := 0;
    end
end

procedure Node003
begin
    float_msg(self_obj, message_str(704, 112 + n3count), 3);
    n3count := n3count + 1;
    if (n3count > 9) then begin
        n3count := 0;
    end
end

procedure Node004
begin
    talking := 1;
    float_msg(self_obj, message_str(704, 121 + n4count), 3);
    n4count := n4count + 1;
    if (n4count > 2) then begin
        n4count := 0;
        call Node005();
    end
    else begin
        add_timer_event(self_obj, game_ticks(3), 1);
    end
end

procedure Node005
begin
    talking := 1;
    if (n5count != 2) then begin
        float_msg(self_obj, message_str(704, 124 + n5count), 3);
    end
    else begin
        add_timer_event(self_obj, 0, 6);
    end
    n5count := n5count + 1;
    if (n5count > 4) then begin
        n5count := 0;
        add_timer_event(self_obj, game_ticks(5), 3);
    end
    else begin
        add_timer_event(self_obj, game_ticks(3), 2);
    end
end

procedure Node006
begin
    talking := 1;
    if (n6count == 0) then begin
        float_msg(dude_obj, message_str(704, 129 + n6count), 0);
    end
    else begin
        if ((n6count > 0) and (n6count < 5)) then begin
            float_msg(self_obj, message_str(704, 129 + n6count), 3);
        end
        else begin
            if (n6count == 5) then begin
                float_msg(dude_obj, message_str(704, 129 + n6count), 0);
            end
            else begin
                if (n6count == 6) then begin
                    float_msg(self_obj, message_str(704, 129 + n6count), 3);
                end
                else begin
                    if (n6count == 7) then begin
                        float_msg(dude_obj, message_str(704, 129 + n6count), 0);
                    end
                    else begin
                        if (n6count == 8) then begin
                            float_msg(self_obj, message_str(704, 129 + n6count), 3);
                        end
                        else begin
                            if (n6count == 9) then begin
                                float_msg(dude_obj, message_str(704, 129 + n6count), 0);
                            end
                            else begin
                                if (n6count == 10) then begin
                                    float_msg(self_obj, message_str(704, 129 + n6count), 3);
                                end
                                else begin
                                    if (n6count == 11) then begin
                                        float_msg(dude_obj, message_str(704, 129 + n6count), 0);
                                        gfade_out(1);
                                        game_time_advance(60 * (60 * 10) * 12);
                                        gfade_in(10);
                                        display_msg(message_str(704, 200));
                                    end
                                    else begin
                                        if (n6count == 12) then begin
                                            float_msg(self_obj, message_str(704, 129 + n6count), 3);
                                        end
                                        else begin
                                            if (n6count == 13) then begin
                                                float_msg(dude_obj, message_str(704, 129 + n6count), 0);
                                            end
                                            else begin
                                                if ((n6count > 13) and (n6count < 19)) then begin
                                                    float_msg(self_obj, message_str(704, 129 + n6count), 3);
                                                end
                                                else begin
                                                    if (n6count == 19) then begin
                                                        float_msg(dude_obj, message_str(704, 129 + n6count), 0);
                                                        set_local_var(1, 1);
                                                        add_obj_to_inven(dude_obj, create_object_sid(424, tile_num(self_obj), 0, -1));
                                                    end
                                                    else begin
                                                        if ((n6count > 19) and (n6count < 22)) then begin
                                                            float_msg(self_obj, message_str(704, 129 + n6count), 3);
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    n6count := n6count + 1;
    if (n6count > 21) then begin
        n6count := 0;
        talking := 0;
    end
    else begin
        add_timer_event(self_obj, game_ticks(3), 3);
    end
end

procedure Node007
begin
    talking := 1;
    float_msg(self_obj, message_str(704, 151 + n7count), 3);
    n7count := n7count + 1;
    if (n7count > 2) then begin
        n7count := 0;
        talking := 0;
    end
    else begin
        add_timer_event(self_obj, game_ticks(3), 4);
    end
end

procedure Node008
begin
    talking := 1;
    float_msg(self_obj, message_str(704, 154 + n7count), 2);
    n8count := n8count + 1;
    if (n8count > 1) then begin
        n8count := 0;
        talking := 0;
        critter_dmg(dude_obj, 40000, 3);
    end
    else begin
        add_timer_event(self_obj, game_ticks(3), 5);
    end
end

procedure Node009
begin
end

procedure playerStepBack
begin
    reg_anim_func(2, dude_obj);
    reg_anim_func(1, 1);
    animate_move_obj_to_tile(self_obj, 22318, 0);
    anim(self_obj, 1000, 5);
    reg_anim_func(3, 0);
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        call Node004();
    end
    else begin
        if (fixed_param == 2) then begin
            call Node005();
        end
        else begin
            if (fixed_param == 3) then begin
                call Node006();
            end
            else begin
                if (fixed_param == 4) then begin
                    call Node007();
                end
                else begin
                    if (fixed_param == 5) then begin
                        call Node008();
                    end
                    else begin
                        if (fixed_param == 6) then begin
                            call playerStepBack();
                        end
                        else begin
                            if (fixed_param == 7) then begin
                                if (talking == 0) then begin
                                    if ((game_time_hour > 600) and (game_time_hour < 1800)) then begin
                                        if (local_var(1) == 1) then begin
                                            call Node001();
                                        end
                                        else begin
                                            call Node003();
                                        end
                                    end
                                    else begin
                                        call Node002();
                                    end
                                end
                                add_timer_event(self_obj, game_ticks(random(7, 10)), 7);
                            end
                        end
                    end
                end
            end
        end
    end
end

