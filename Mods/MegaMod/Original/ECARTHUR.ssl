variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure Node998;
procedure Node999;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure cycleTalk;
procedure checkAllInPos;

variable Node2count;
variable Node3count;

import variable i_arthur_obj;
import variable i_vorpal_obj;

variable Only_Once;
variable cycleNum;

procedure timed_event_p_proc;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
    i_arthur_obj := self_obj;
    if ((Only_Once == 0) and not(metarule(22, 0))) then begin
        Only_Once := 1;
        debug_msg("ECARTHUR: 1 and_spec_flag(ENC_ARTHUR_ONE): " + ((global_var(323) bwand 1) != 0));
        if (not((global_var(323) bwand 1) != 0)) then begin
            set_global_var(323, global_var(323) bwor 1);
        end
        else begin
            if (not((global_var(323) bwand 2) != 0)) then begin
                set_global_var(323, global_var(323) bwor 2);
            end
        end
    end
end

procedure critter_p_proc
begin
    if ((local_var(5) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
    if (not((global_var(323) bwand 2) != 0)) then begin
        if (((map_var(0) bwand 1) != 0) and not((map_var(0) bwand 2) != 0)) then begin
            set_map_var(0, map_var(0) bwor 2);
            float_msg(self_obj, message_str(683, 207), 0);
            add_timer_event(self_obj, 0, 2);
            debug_msg("ECARTHUR: moving to pos a");
        end
        if (checkAllInPos() and not((map_var(0) bwand 128) != 0)) then begin
            set_map_var(0, map_var(0) bwor 128);
            add_timer_event(self_obj, 0, 3);
            debug_msg("ECARTHUR: moving to exit");
        end
    end
    else begin
        if ((i_vorpal_obj != -1) and (elevation(dude_obj) == elevation(self_obj))) then begin
            attack_complex(i_vorpal_obj, 0, 1, 0, 0, 30000, 0, 0);
        end
    end
end

procedure pickup_p_proc
begin
    if (Node3count < 3) then begin
        call Node003();
        if (Node3count == 3) then begin
            set_map_var(0, map_var(0) bwor 1);
        end
    end
end

procedure talk_p_proc
begin
    Evil_Critter := 0;
    Slavery_Tolerant := 2;
    Karma_Perception := 10;
    debug_msg("ECARTHUR: Arthur_encounter_one: " + not((global_var(323) bwand 2) != 0));
    if (not((global_var(323) bwand 2) != 0)) then begin
        if (local_var(4) == 0) then begin
            start_gdialog(683, self_obj, 4, -1, -1);
            gsay_start;
            call Node001();
            gsay_end;
            end_dialogue;
        end
        else begin
            call Node002();
        end
    end
    set_local_var(4, 1);
end

procedure destroy_p_proc
begin
    variable LVar0 := 0;
    LVar0 := obj_carrying_pid_obj(self_obj, 15);
    if (LVar0) then begin
        destroy_object(LVar0);
    end
    if (global_var(606) == 0) then begin
        set_global_var(606, 1);
    end
    if (source_obj == dude_obj) then begin
        set_global_var(5, global_var(5) + 1);
        if (metarule(51, self_obj) == 2) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(2, 0);
                set_global_var(1, global_var(1) + 1);
                set_global_var(0, global_var(0) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(37, 0);
                set_global_var(38, 0);
                set_global_var(39, 0);
                set_global_var(40, 0);
                set_global_var(41, 0);
                set_global_var(42, 0);
                set_global_var(43, 0);
                set_global_var(44, 0);
                set_global_var(45, 0);
                if (global_var(0) >= 1000) then begin
                    set_global_var(37, 1);
                end
                else begin
                    if (global_var(0) >= 750) then begin
                        set_global_var(38, 1);
                    end
                    else begin
                        if (global_var(0) >= 500) then begin
                            set_global_var(39, 1);
                        end
                        else begin
                            if (global_var(0) >= 250) then begin
                                set_global_var(40, 1);
                            end
                            else begin
                                if (global_var(0) > -250) then begin
                                    set_global_var(41, 1);
                                end
                                else begin
                                    if (global_var(0) > -500) then begin
                                        set_global_var(42, 1);
                                    end
                                    else begin
                                        if (global_var(0) > -750) then begin
                                            set_global_var(43, 1);
                                        end
                                        else begin
                                            if (global_var(0) > -1000) then begin
                                                set_global_var(44, 1);
                                            end
                                            else begin
                                                set_global_var(45, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
            set_global_var(2, 1);
            set_global_var(3, 0);
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
            set_global_var(3, 1);
            set_global_var(2, 0);
        end
        set_global_var(0, global_var(0) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    i_arthur_obj := -1;
    return 0;
    LVar0 := 0;
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(683, 100));
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(4) == 0) then begin
        display_msg(message_str(683, 101));
    end
    else begin
        display_msg(message_str(683, 102));
    end
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(6, 1);
    end
end

procedure map_enter_p_proc
begin
    Only_Once := 0;
    critter_add_trait(self_obj, 1, 6, 151);
    critter_add_trait(self_obj, 1, 5, 22);
    if (not((global_var(323) bwand 2) != 0)) then begin
        move_to(self_obj, 19713, 0);
        reg_anim_func(2, self_obj);
        reg_anim_func(1, 1);
        anim(self_obj, 1000, 4);
        reg_anim_func(3, 0);
        add_timer_event(self_obj, game_ticks(random(2, 5)), 1);
    end
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
end

procedure Node001
begin
    gsay_reply(683, 103);
    giq_option(4, 683, 104, Node010, 50);
    giq_option(-3, 683, 106, Node018, 50);
end

procedure Node002
begin
    float_msg(self_obj, message_str(683, 107 + Node2count), 0);
    Node2count := Node2count + 1;
    if (Node2count == 4) then begin
        Node2count := 0;
    end
end

procedure Node003
begin
    if (Node3count == 3) then begin
        Node3count := 0;
    end
    float_msg(self_obj, message_str(683, 111 + Node3count), 2);
    Node3count := Node3count + 1;
end

procedure Node010
begin
    gsay_reply(683, 114);
    giq_option(4, 683, 115, Node011, 50);
end

procedure Node011
begin
    gsay_reply(683, 116);
    giq_option(4, 683, 117, Node012, 50);
end

procedure Node012
begin
    gsay_reply(683, 118);
    giq_option(4, 683, 119, Node013, 50);
end

procedure Node013
begin
    gsay_reply(683, 120);
    giq_option(4, 683, 121, Node014, 50);
end

procedure Node014
begin
    gsay_reply(683, 122);
    giq_option(4, 683, 123, Node015, 50);
    giq_option(4, 683, 124, Node017, 50);
end

procedure Node015
begin
    gsay_reply(683, 125);
    giq_option(4, 683, 126, Node016, 50);
end

procedure Node016
begin
    item_caps_adjust(dude_obj, 500);
    gsay_reply(683, 127);
    giq_option(4, 683, 128, Node019, 50);
end

procedure Node017
begin
    set_map_var(0, 1);
    gsay_reply(683, 129);
    giq_option(0, 683, message_str(14, 350), Node999, 50);
end

procedure Node018
begin
    set_map_var(0, 1);
    gsay_reply(683, 131);
    giq_option(0, 683, message_str(14, 350), Node999, 50);
end

procedure Node019
begin
    gsay_reply(683, 133);
    giq_option(4, 683, 134, Node020, 50);
end

procedure Node020
begin
    set_map_var(0, 1);
    gsay_reply(683, 135);
    giq_option(0, 683, message_str(14, 350), Node999, 50);
end

procedure cycleTalk
begin
    float_msg(self_obj, message_str(683, 200 + cycleNum), 0);
    cycleNum := cycleNum + 1;
    if (cycleNum > 6) then begin
        cycleNum := 0;
    end
end

procedure checkAllInPos
begin
    if (((map_var(0) bwand 4) != 0) and ((map_var(0) bwand 8) != 0) and ((map_var(0) bwand 16) != 0) and ((map_var(0) bwand 32) != 0) and ((map_var(0) bwand 64) != 0)) then begin
        return 1;
    end
    return 0;
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if ((local_var(4) == 0) and not((map_var(0) bwand 1) != 0)) then begin
            call cycleTalk();
            add_timer_event(self_obj, game_ticks(random(2, 5)), 1);
        end
    end
    else begin
        if (fixed_param == 2) then begin
            if (not(combat_is_initialized)) then begin
                if (not(anim_busy(self_obj)) and (tile_num(self_obj) != 20307)) then begin
                    debug_msg("ECARTHUR: told to animate");
                    reg_anim_func(2, self_obj);
                    reg_anim_func(1, 1);
                    animate_move_obj_to_tile(self_obj, 20307, 0);
                    reg_anim_func(3, 0);
                    add_timer_event(self_obj, 10, 2);
                end
                else begin
                    if (tile_num(self_obj) == 20307) then begin
                        debug_msg("ECARTHUR: umm should set arthur in pos");
                        set_map_var(0, map_var(0) bwor 4);
                    end
                    else begin
                        add_timer_event(self_obj, 10, 2);
                    end
                end
            end
            else begin
                add_timer_event(self_obj, 10, 2);
            end
        end
        else begin
            if (fixed_param == 3) then begin
                if (not(combat_is_initialized)) then begin
                    if (not(anim_busy(self_obj)) and (tile_num(self_obj) != 21494)) then begin
                        reg_anim_func(2, self_obj);
                        reg_anim_func(1, 1);
                        animate_move_obj_to_tile(self_obj, 21494, 0);
                        reg_anim_func(3, 0);
                        add_timer_event(self_obj, 10, 3);
                    end
                    else begin
                        if (tile_num(self_obj) == 21494) then begin
                            i_arthur_obj := -2;
                            destroy_object(self_obj);
                        end
                        else begin
                            add_timer_event(self_obj, 10, 3);
                        end
                    end
                end
                else begin
                    add_timer_event(self_obj, 10, 3);
                end
            end
        end
    end
end

