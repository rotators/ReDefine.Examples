/*******************************************************
*      Some unreferenced imported varables found.      *
*      Because of it it is impossible to specify       *
*      the real names of global variables.             *
*******************************************************/

variable GVar0;
variable GVar1;
variable GVar2;
variable GVar3;
variable GVar4;
variable GVar5;
variable GVar6;
variable GVar7;
variable GVar8;
variable GVar9;
variable GVar10;
variable GVar11;
variable GVar12;
variable GVar13;
variable GVar14;
variable GVar15;
variable GVar16 := 9;
variable GVar17;
variable GVar18 := 50;
variable GVar19 := 2;
variable GVar20;
variable GVar21;
variable GVar22;
variable GVar23;
variable GVar24;

/* ?import? variable SVar01; */
/* ?import? variable SVar02; */
/* ?import? variable SVar03; */
/* ?import? variable SVar04; */
/* ?import? variable SVar05; */
/* ?import? variable SVar06; */
/* ?import? variable SVar07; */
/* ?import? variable SVar08; */
/* ?import? variable SVar09; */
/* ?import? variable SVar10; */
/* ?import? variable SVar11; */
/* ?import? variable SVar12; */
/* ?import? variable SVar13; */
/* ?import? variable SVar14; */
/* ?import? variable SVar15; */
/* ?import? variable SVar16; */
/* ?import? variable SVar17; */
/* ?import? variable SVar18; */
/* ?import? variable SVar19; */
/* ?import? variable SVar20; */
/* ?import? variable SVar21; */
/* ?import? variable SVar22; */
/* ?import? variable SVar23; */
/* ?import? variable SVar24; */
/* ?import? variable SVar25; */

procedure start;
procedure talk_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure damage_p_proc;
procedure critter_p_proc;
procedure timed_event_p_proc;
procedure destroy_p_proc;
procedure do_dialogue;
procedure timeforwhat;
procedure Critter_Action;
procedure Start_War;

/* ?import? variable shout_once; */
/* ?import? variable complain; */
/* ?import? variable Fool_Counter; */
/* ?import? variable Crypt_Counter; */
/* ?import? variable is_fool; */
/* ?import? variable broken_gen; */

import variable Fool_Pointer;
import variable Crypt_Pointer;
import variable Phrax_Pointer;
import variable Rock_Pointer;
import variable Know_Crypts;
import variable Fool_Taunt;
import variable Crypt_Taunt;

/* ?import? variable Known; */
/* ?import? variable line; */
/* ?import? variable my_tile; */
/* ?import? variable Only_Once; */
/* ?import? variable Hostile; */
/* ?import? variable knowstart; */
/* ?import? variable prev_tile; */
/* ?import? variable new_tile; */
/* ?import? variable loopcount; */
/* ?import? variable noevent; */
/* ?import? variable rndx; */
/* ?import? variable rndy; */
/* ?import? variable rndz; */
/* ?import? variable dist; */
/* ?import? variable MAXLEASH; */

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;

/* ?import? variable ai_do_once; */
/* ?import? variable reaction; */
/* ?import? variable reaction_level; */
/* ?import? variable got_reaction; */
/* ?import? variable badguy; */
/* ?import? variable exit_line; */
/* ?import? variable This_Once; */
/* ?import? variable team_do_once; */


procedure start
begin
    set_local_var(2, 1);
    Fool_Pointer := self_obj;
    if (local_var(0) == 0) then begin
        critter_add_trait(self_obj, 1, 6, 135);
        critter_add_trait(self_obj, 1, 5, 22);
        set_map_var(6, map_var(6) + 1);
        set_local_var(0, 1);
        set_local_var(1, tile_num(self_obj));
    end
end

procedure talk_p_proc
begin
    call do_dialogue();
end

procedure look_at_p_proc
begin
    script_overrides;
    if (Know_Crypts) then begin
        display_msg(message_str(1497, 100));
    end
    else begin
        display_msg(message_str(1497, 101));
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(1497, 100));
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        party_remove(self_obj);
        critter_add_trait(self_obj, 1, 6, 135);
        set_map_var(11, 1);
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
end

procedure critter_p_proc
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    if (map_var(11) == 1) then begin
        if (has_trait(1, self_obj, 6) == 0) then begin
            party_remove(self_obj);
        end
        critter_add_trait(self_obj, 1, 6, 135);
        critter_add_trait(self_obj, 1, 5, 22);
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
    if ((local_var(2) == 1) and (map_var(11) == 1)) then begin
        critter_add_trait(self_obj, 1, 6, 135);
        critter_add_trait(self_obj, 1, 5, 22);
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
    if (map_var(5) == 3) then begin
        attack_complex(Crypt_Pointer, 0, 1, 0, 0, 30000, 0, 0);
    end
    Fool_Pointer := self_obj;
    LVar0 := (self_obj == Fool_Pointer) or (self_obj == Crypt_Pointer) or (self_obj == Phrax_Pointer) or (self_obj == Rock_Pointer);
    if ((local_var(2) == 1) and Crypt_Taunt) then begin
        Crypt_Taunt := 0;
        if (random(1, 5) == 1) then begin
            float_msg(self_obj, message_str(964, random(10100, 10113)), -1);
            add_timer_event(self_obj, game_ticks(random(15, 15)), 1);
        end
    end
    else begin
        if ((map_var(5) == 1) and (tile_num(self_obj) != 20725)) then begin
            if (global_var(805) == 1) then begin
                critter_add_trait(self_obj, 1, 6, 0);
            end
            animate_move_obj_to_tile(self_obj, 20725, 0);
            if (GVar0 == 0) then begin
                add_timer_event(self_obj, game_ticks(20), 1);
                GVar0 := 1;
            end
        end
        else begin
            if ((tile_num(self_obj) == 20725) and (GVar0 == 0)) then begin
                GVar0 := 1;
            end
            else begin
                if (GVar6) then begin
                    GVar6 := 0;
                    attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
                end
            end
        end
    end
    if ((map_var(5) == 2) and (map_var(2) < 1)) then begin
        party_remove(self_obj);
        critter_add_trait(self_obj, 1, 6, 135);
        if (local_var(1) == 14103) then begin
            animate_move_obj_to_tile(self_obj, 19085, 0);
        end
        else begin
            if (local_var(1) == 14699) then begin
                animate_move_obj_to_tile(self_obj, 19893, 0);
            end
        end
    end
    else begin
        if ((map_var(2) >= 1) and (tile_num(self_obj) != 27504)) then begin
            if (GVar1 == 0) then begin
                GVar1 := 1;
                float_msg(self_obj, message_str(964, random(10300, 1310)), 6);
            end
            animate_move_obj_to_tile(self_obj, 27504, 0);
        end
        else begin
            if ((map_var(2) >= 1) and (tile_num(self_obj) == 27504)) then begin
                set_obj_visibility(self_obj, 1);
            end
        end
    end
    return 0;
    LVar0 := 0;
    LVar1 := 0;
end

procedure timed_event_p_proc
begin
    variable LVar0 := 0;
    if (fixed_param == 1) then begin
        Fool_Taunt := 1;
        float_msg(self_obj, message_str(964, random(10100, 10115)), -1);
        if (LVar0 == 0) then begin
            add_timer_event(self_obj, 100, 2);
        end
    end
    else begin
        if (fixed_param == 2) then begin
            if (map_var(5) == 1) then begin
                set_map_var(5, 3);
            end
        end
    end
    return 0;
    LVar0 := 0;
end

procedure destroy_p_proc
begin
    set_map_var(6, map_var(6) - 1);
    if ((map_var(6) == 0) or (map_var(7) == 0)) then begin
        set_map_var(5, 2);
    end
    if (source_obj == dude_obj) then begin
        set_global_var(4, global_var(4) + 1);
        if (metarule(51, self_obj) == 2) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(2, 0);
                set_global_var(1, global_var(1) + 1);
                set_global_var(0, global_var(0) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(37, 0);
                set_global_var(38, 0);
                set_global_var(39, 0);
                set_global_var(40, 0);
                set_global_var(41, 0);
                set_global_var(42, 0);
                set_global_var(43, 0);
                set_global_var(44, 0);
                set_global_var(45, 0);
                if (global_var(0) >= 1000) then begin
                    set_global_var(37, 1);
                end
                else begin
                    if (global_var(0) >= 750) then begin
                        set_global_var(38, 1);
                    end
                    else begin
                        if (global_var(0) >= 500) then begin
                            set_global_var(39, 1);
                        end
                        else begin
                            if (global_var(0) >= 250) then begin
                                set_global_var(40, 1);
                            end
                            else begin
                                if (global_var(0) > -250) then begin
                                    set_global_var(41, 1);
                                end
                                else begin
                                    if (global_var(0) > -500) then begin
                                        set_global_var(42, 1);
                                    end
                                    else begin
                                        if (global_var(0) > -750) then begin
                                            set_global_var(43, 1);
                                        end
                                        else begin
                                            if (global_var(0) > -1000) then begin
                                                set_global_var(44, 1);
                                            end
                                            else begin
                                                set_global_var(45, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(808, global_var(808) + -5);
                debug_msg("Added " + -5 + " to Town Rep");
            end
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
            set_global_var(2, 1);
            set_global_var(3, 0);
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
            set_global_var(3, 1);
            set_global_var(2, 0);
        end
        set_global_var(0, global_var(0) + 5);
        debug_msg("Player gains " + 5 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(808, global_var(808) + 3);
        debug_msg("Added " + 3 + " to Town Rep");
    end
end

procedure do_dialogue
begin
    if (map_var(7) != 0) then begin
        if (map_var(13)) then begin
            GVar3 := message_str(1497, random(107, 111));
        end
        else begin
            if (map_var(12)) then begin
                GVar3 := message_str(1497, random(102, 106));
            end
            else begin
                GVar3 := message_str(1497, random(112, 116));
            end
        end
        float_msg(self_obj, GVar3, 0);
    end
    else begin
        float_msg(self_obj, message_str(1497, random(122, 124)), 0);
    end
end

procedure timeforwhat
begin
    GVar11 := 0;
    GVar13 := random(1, 6);
    if (GVar13 > 1) then begin
        GVar15 := 2;
    end
    if (GVar13 > 5) then begin
        GVar15 := 3;
    end
    GVar14 := random(0, 5);
    GVar8 := tile_num(self_obj);
    GVar9 := tile_num_in_direction(GVar8, GVar14, GVar15);
    if (tile_distance(local_var(1), GVar9) < GVar16) then begin
        animate_move_obj_to_tile(self_obj, GVar9, 0);
    end
end

procedure Critter_Action
begin
end

procedure Start_War
begin
    if (fixed_param == 1) then begin
        Fool_Taunt := 1;
        float_msg(self_obj, message_str(964, random(10100, 10115)), -1);
        add_timer_event(self_obj, 200, 2);
    end
    else begin
        if (fixed_param == 2) then begin
            attack_complex(Crypt_Pointer, 0, 1, 0, 0, 30000, 0, 0);
        end
    end
end

procedure get_reaction
begin
    if (not(GVar20)) then begin
        GVar20 := 1;
        GVar18 := GVar18 + ((get_critter_stat(dude_obj, 3) - 5) * 5);
        if (GVar21) then begin
            GVar18 := GVar18 - map_var(8);
        end
        else begin
            GVar18 := GVar18 + map_var(8);
        end
        if (global_var(1) > 2) then begin
            GVar18 := GVar18 - 30;
        end
        if ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) then begin
            GVar18 := GVar18 + 20;
        end
        if ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1)) then begin
            GVar18 := GVar18 - 20;
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (GVar18 < 24) then begin
        GVar19 := 1;
    end
    else begin
        if (GVar18 < 74) then begin
            GVar19 := 2;
        end
        else begin
            GVar19 := 3;
        end
    end
end

procedure LevelToReact
begin
    if (GVar19 == 1) then begin
        GVar18 := random(1, 24);
    end
    else begin
        if (GVar19 == 2) then begin
            GVar18 := random(25, 74);
        end
        else begin
            GVar18 := random(75, 100);
        end
    end
end

procedure UpReact
begin
    GVar18 := GVar18 + 10;
    call ReactToLevel();
end

procedure DownReact
begin
    GVar18 := GVar18 - 10;
    call ReactToLevel();
end

procedure BottomReact
begin
    GVar19 := 1;
    GVar18 := 1;
end

procedure TopReact
begin
    GVar18 := 100;
    GVar19 := 3;
end

procedure BigUpReact
begin
    GVar18 := GVar18 + 25;
    call ReactToLevel();
end

procedure BigDownReact
begin
    GVar18 := GVar18 - 25;
    call ReactToLevel();
end

procedure UpReactLevel
begin
    GVar19 := GVar19 + 1;
    if (GVar19 > 3) then begin
        GVar19 := 3;
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    GVar19 := GVar19 - 1;
    if (GVar19 < 1) then begin
        GVar19 := 1;
    end
    call LevelToReact();
end

