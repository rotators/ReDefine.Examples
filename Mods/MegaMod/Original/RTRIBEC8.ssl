variable tmp_gen_rep;
variable global_temp;

procedure start;
procedure combat_p_proc;
procedure destroy_p_proc;
procedure critter_p_proc;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;
procedure wield_spear_p_proc;
procedure Node995;
procedure Node996;
procedure Node997;
procedure Node999;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;

variable step := 1;
variable STEAL_Once;
variable WIELD_Once;

procedure timed_event_p_proc;
procedure pickup_p_proc;


procedure start
begin
    if (local_var(7) == 0) then begin
        set_local_var(7, tile_num(self_obj));
    end
end

procedure combat_p_proc
begin
    if (global_var(1121) == 1) then begin
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(5, global_var(5) + 1);
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
            set_global_var(2, 1);
            set_global_var(3, 0);
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
            set_global_var(3, 1);
            set_global_var(2, 0);
        end
        set_global_var(0, global_var(0) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        tmp_gen_rep := global_var(0);
        if (has_trait(0, dude_obj, 95)) then begin
            tmp_gen_rep := global_var(0) * 2;
        end
        if (tmp_gen_rep >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (tmp_gen_rep >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (tmp_gen_rep >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (tmp_gen_rep >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(65, global_var(65) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
    set_global_var(65, global_var(65) - 10);
    set_global_var(1121, 1);
end

procedure critter_p_proc
begin
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if (global_var(11) == 1) then begin
            float_msg(self_obj, message_str(2293, 500), 8);
            attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
        end
        else begin
            if (global_var(1121) == 1) then begin
                attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
            end
        end
    end
end

procedure use_p_proc
begin
end

procedure look_at_p_proc
begin
    script_overrides;
    if (get_critter_stat(self_obj, 34) == 0) then begin
        display_msg(message_str(2293, 100));
    end
    else begin
        display_msg(message_str(2293, 101));
    end
end

procedure description_p_proc
begin
    script_overrides;
    if (get_critter_stat(self_obj, 34) == 0) then begin
        display_msg(message_str(2293, 102));
    end
    else begin
        display_msg(message_str(2293, 103));
    end
end

procedure use_skill_on_p_proc
begin
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    set_global_var(1121, 1);
    attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
end

procedure map_enter_p_proc
begin
    call wield_spear_p_proc();
    add_timer_event(self_obj, game_ticks(random(5, 9)), 1);
    critter_add_trait(self_obj, 1, 6, 214);
end

procedure map_update_p_proc
begin
end

procedure talk_p_proc
begin
    if ((global_var(860) > 1) or (global_var(1120) == 2) or (global_var(1124) == 3) or (global_var(1123) >= 3)) then begin
        if ((get_critter_stat(self_obj, 34) == 1) and (global_var(1140) < 4)) then begin
            if (global_var(1140) == 2) then begin
                start_gdialog(2293, self_obj, 4, -1, -1);
                gsay_start;
                call Node006();
                gsay_end;
                end_dialogue;
            end
            else begin
                if (global_var(1140) == 1) then begin
                    call Node007();
                end
                else begin
                    if (global_var(1140) == 3) then begin
                        start_gdialog(2293, self_obj, 4, -1, -1);
                        gsay_start;
                        call Node008();
                        gsay_end;
                        end_dialogue;
                    end
                    else begin
                        start_gdialog(2293, self_obj, 4, -1, -1);
                        gsay_start;
                        call Node001();
                        gsay_end;
                        end_dialogue;
                    end
                end
            end
        end
        else begin
            float_msg(self_obj, message_str(2293, random(204, 208)), 9);
        end
    end
    else begin
        float_msg(self_obj, message_str(2293, random(200, 203)), 2);
    end
end

procedure wield_spear_p_proc
begin
    if ((WIELD_Once == 0) and (get_critter_stat(self_obj, 34) == 0)) then begin
        wield_obj_critter(self_obj, obj_carrying_pid_obj(self_obj, 320));
        WIELD_Once := 1;
    end
end

procedure Node995
begin
    give_exp_points(200);
    display_msg(message_str(14, 100) + 200 + message_str(14, 101));
    set_global_var(65, global_var(65) + 5);
end

procedure Node996
begin
    set_global_var(1140, 2);
end

procedure Node997
begin
    set_global_var(1140, 1);
    set_global_var(65, global_var(65) - 5);
end

procedure Node999
begin
end

procedure Node001
begin
    gsay_reply(2293, 300);
    giq_option(-3, 2293, 400, Node002, 50);
    giq_option(-3, 2293, 401, Node002, 50);
    giq_option(4, 2293, 301, Node002, 50);
    giq_option(4, 2293, 302, Node996, 50);
    giq_option(4, 2293, 303, Node997, 51);
end

procedure Node002
begin
    gsay_reply(2293, 304);
    if (obj_is_carrying_obj_pid(dude_obj, 286) >= 3) then begin
        giq_option(4, 2293, 306, Node004, 50);
        giq_option(-3, 2293, 411, Node004, 50);
    end
    else begin
        giq_option(4, 2293, 305, Node003, 50);
        giq_option(-3, 2293, 410, Node003, 50);
    end
end

procedure Node003
begin
    set_global_var(1140, 3);
    gsay_reply(2293, 307);
    giq_option(1, 2293, 313, Node999, 50);
end

procedure Node004
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    set_global_var(1140, 4);
    LVar0 := obj_carrying_pid_obj(dude_obj, 286);
    LVar1 := rm_mult_objs_from_inven(dude_obj, LVar0, 3);
    destroy_object(LVar0);
    gsay_reply(2293, 308);
    giq_option(-3, 2293, 420, Node995, 50);
    giq_option(4, 2293, 309, Node995, 50);
    giq_option(4, 2293, 310, Node005, 51);
    return 0;
    LVar0 := 0;
    LVar1 := 0;
end

procedure Node005
begin
    set_global_var(65, global_var(65) + 1);
    item_caps_adjust(dude_obj, 75);
    give_exp_points(125);
    display_msg(message_str(14, 100) + 125 + message_str(14, 101));
    gsay_reply(2293, 311);
    giq_option(4, 2293, 312, Node999, 51);
    giq_option(4, 2293, 330, Node999, 51);
end

procedure Node006
begin
    gsay_reply(2293, 318);
    giq_option(4, 2293, 319, Node002, 51);
    giq_option(4, 2293, 320, Node999, 51);
    giq_option(4, 2293, 321, Node997, 51);
end

procedure Node007
begin
    float_msg(self_obj, message_str(2293, 314), 2);
end

procedure Node008
begin
    gsay_reply(2293, 315);
    if (obj_is_carrying_obj_pid(dude_obj, 286) >= 3) then begin
        giq_option(-3, 2293, 411, Node004, 50);
        giq_option(4, 2293, 316, Node004, 50);
    end
    else begin
        giq_option(-3, 2293, 410, Node999, 50);
        giq_option(4, 2293, 317, Node999, 50);
    end
end

procedure timed_event_p_proc
begin
    if (combat_is_initialized) then begin
        add_timer_event(self_obj, game_ticks(random(5, 9)), 1);
    end
    else begin
        if (fixed_param == 1) then begin
            if (local_var(7) == 21902) then begin
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(3, 7)), 0);
                add_timer_event(self_obj, game_ticks(random(15, 25)), 1);
            end
            else begin
                if (local_var(7) == 19494) then begin
                    if (step == 1) then begin
                        step := 2;
                        reg_anim_func(2, self_obj);
                        anim(self_obj, 10, 0);
                        metarule3(100, self_obj, fixed_param, 0);
                        add_timer_event(self_obj, game_ticks(1), 1);
                    end
                    else begin
                        if (step == 2) then begin
                            step := 1;
                            reg_anim_func(2, self_obj);
                            anim(self_obj, 0, 0);
                            add_timer_event(self_obj, game_ticks(random(15, 30)), 1);
                        end
                    end
                end
                else begin
                    if (random(1, 2) == 1) then begin
                        animate_move_obj_to_tile(self_obj, 24921, 0);
                    end
                    else begin
                        animate_move_obj_to_tile(self_obj, 21121, 0);
                    end
                    add_timer_event(self_obj, game_ticks(random(15, 20)), 1);
                end
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(1121, 1);
    end
end

