procedure pickup_p_proc;

variable tmp_gen_rep;
variable global_temp;

procedure start;
procedure critter_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure push_p_proc;
procedure timed_event_p_proc;
procedure Node998;
procedure Node999;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;

variable Node3Rep;
variable q2;
variable q3;
variable q4;
variable warpOutPlayer;
variable moveGuards;

procedure Node004a;
procedure Node005a;
procedure Node007a;
procedure Node008a;
procedure Node100;
procedure Node101;
procedure Node150;
procedure Node151;
procedure Node152;


procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure start
begin
    if ((global_var(582) bwand 1) != 0) then begin
        global_temp := create_object_sid(128, 0, 0, -1);
        move_obj_inven_to_obj(self_obj, global_temp);
        destroy_object(global_temp);
        kill_critter(self_obj, 63);
    end
end

procedure critter_p_proc
begin
    if ((local_var(5) == 2) or map_var(5) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        set_map_var(5, 1);
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
end

procedure talk_p_proc
begin
    if (local_var(5) > 0) then begin
        call Node010();
    end
    else begin
        if (local_var(7) == 3) then begin
            start_gdialog(528, self_obj, 4, -1, -1);
            gsay_start;
            call Node011();
            gsay_end;
            end_dialogue;
        end
        else begin
            if (local_var(4) == 0) then begin
                start_gdialog(528, self_obj, 4, -1, -1);
                gsay_start;
                call Node001();
                gsay_end;
                end_dialogue;
            end
            else begin
                start_gdialog(528, self_obj, 4, -1, -1);
                gsay_start;
                call Node012();
                gsay_end;
                end_dialogue;
            end
        end
    end
    set_local_var(4, 1);
    if (warpOutPlayer == 1) then begin
        warpOutPlayer := 0;
        gfade_out(600);
        move_to(dude_obj, 22504, elevation(self_obj));
        gfade_in(600);
    end
    if (moveGuards == 1) then begin
        moveGuards := 0;
    end
end

procedure destroy_p_proc
begin
    variable LVar0 := 0;
    LVar0 := create_object_sid(113, 0, 0, -1);
    add_obj_to_inven(self_obj, LVar0);
    if (source_obj == dude_obj) then begin
        set_global_var(5, global_var(5) + 1);
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
            set_global_var(2, 1);
            set_global_var(3, 0);
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
            set_global_var(3, 1);
            set_global_var(2, 0);
        end
        set_global_var(0, global_var(0) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        tmp_gen_rep := global_var(0);
        if (has_trait(0, dude_obj, 95)) then begin
            tmp_gen_rep := global_var(0) * 2;
        end
        if (tmp_gen_rep >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (tmp_gen_rep >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (tmp_gen_rep >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (tmp_gen_rep >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(59, global_var(59) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 0) then begin
        display_msg(message_str(528, 100));
    end
    else begin
        display_msg(message_str(528, 101));
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(528, 102));
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
        set_map_var(5, 1);
    end
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, 1, 6, 114);
    critter_add_trait(self_obj, 1, 5, 24);
end

procedure push_p_proc
begin
end

procedure timed_event_p_proc
begin
    if (fixed_param == 10) then begin
        metarule3(100, self_obj, 10, 0);
        gfade_in(60);
    end
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
end

procedure Node001
begin
    gsay_reply(528, 103);
    giq_option(-3, 528, 104, Node002, 50);
    giq_option(-3, 528, 105, Node003, 50);
    giq_option(-3, 528, 106, Node999, 50);
    giq_option(4, 528, message_str(528, 107) + " " + obj_name(dude_obj) + message_str(528, 177), Node003, 49);
    giq_option(4, 528, 108, Node009, 51);
    giq_option(4, 528, 109, Node999, 50);
end

procedure Node002
begin
    gsay_reply(528, 110);
    giq_option(-3, 528, 111, Node003, 50);
    giq_option(-3, 528, 112, Node999, 50);
end

procedure Node003
begin
    Node3Rep := Node3Rep + 1;
    if (Node3Rep == 1) then begin
        gsay_reply(528, 113);
    end
    else begin
        gsay_reply(528, 114);
    end
    if (local_var(9) == 0) then begin
        giq_option(-3, 528, 115, Node004a, 50);
        giq_option(4, 528, 120, Node004a, 50);
    end
    else begin
        giq_option(4, 528, 212, Node100, 50);
    end
    if (q2 == 0) then begin
        giq_option(-3, 528, 116, Node005a, 50);
        giq_option(4, 528, 121, Node005a, 50);
    end
    if (q3 == 0) then begin
        giq_option(-3, 528, 117, Node007a, 50);
        giq_option(4, 528, 122, Node007a, 50);
    end
    if (q4 == 0) then begin
        giq_option(-3, 528, 118, Node008a, 50);
        giq_option(4, 528, 123, Node008a, 50);
    end
    giq_option(-3, 528, 119, Node999, 50);
    giq_option(4, 528, 124, Node999, 50);
end

procedure Node004
begin
    gsay_reply(528, 125);
    giq_option(-3, 528, 126, Node003, 50);
    giq_option(-3, 528, 127, Node999, 50);
    giq_option(4, 528, 128, Node009, 51);
    giq_option(4, 528, 129, Node003, 50);
    giq_option(4, 528, 130, Node003, 49);
    if (local_var(6) == 0) then begin
        giq_option(5, 528, 200, Node150, 49);
    end
end

procedure Node005
begin
    gsay_reply(528, 131);
    giq_option(-3, 528, 132, Node006, 50);
    giq_option(-3, 528, 133, Node003, 50);
    giq_option(-3, 528, 134, Node999, 50);
    giq_option(4, 528, 135, Node003, 49);
    giq_option(4, 528, 136, Node003, 50);
    giq_option(4, 528, 137, Node009, 51);
    giq_option(4, 528, 138, Node006, 50);
end

procedure Node006
begin
    set_global_var(488, 1);
    gsay_reply(528, 139);
    giq_option(-3, 528, 140, Node003, 50);
    giq_option(-3, 528, 141, Node999, 50);
    giq_option(4, 528, 142, Node003, 50);
    giq_option(4, 528, 143, Node009, 51);
    giq_option(4, 528, 144, Node003, 49);
end

procedure Node007
begin
    gsay_reply(528, 145);
    giq_option(-3, 528, 146, Node003, 50);
    giq_option(-3, 528, 147, Node999, 50);
    giq_option(4, 528, 148, Node003, 49);
    giq_option(4, 528, 149, Node009, 51);
    giq_option(4, 528, 150, Node003, 50);
end

procedure Node008
begin
    gsay_reply(528, 151);
    giq_option(-3, 528, 152, Node003, 50);
    giq_option(-3, 528, 153, Node999, 50);
    giq_option(4, 528, 154, Node003, 50);
    giq_option(4, 528, 155, Node009, 51);
    giq_option(4, 528, 156, Node003, 49);
end

procedure Node009
begin
    if (local_var(7) == 0) then begin
        set_local_var(7, 1);
        gsay_reply(528, 157);
        giq_option(4, 528, 160, Node998, 51);
        giq_option(4, 528, 161, Node003, 50);
        giq_option(4, 528, 162, Node003, 49);
    end
    else begin
        if (local_var(7) == 1) then begin
            set_local_var(7, 2);
            moveGuards := 1;
            gsay_reply(528, 158);
            giq_option(4, 528, 163, Node003, 49);
            giq_option(4, 528, 164, Node003, 50);
            giq_option(4, 528, 165, Node998, 51);
        end
        else begin
            if (local_var(7) == 2) then begin
                set_local_var(7, 3);
                warpOutPlayer := 1;
                gsay_reply(528, 159);
            end
        end
    end
end

procedure Node010
begin
    float_msg(self_obj, message_str(528, 166), 0);
end

procedure Node011
begin
    warpOutPlayer := 1;
    gsay_reply(528, 169);
    giq_option(0, 528, message_str(14, 350), Node999, 50);
end

procedure Node012
begin
    gsay_reply(528, 172);
    giq_option(-3, 528, 173, Node003, 50);
    giq_option(-3, 528, 174, Node999, 50);
    giq_option(4, 528, 175, Node003, 50);
    if (local_var(9) > 0) then begin
        giq_option(4, 528, 213, Node100, 50);
    end
    giq_option(4, 528, 176, Node999, 50);
end

procedure Node004a
begin
    set_local_var(9, 1);
    call Node004();
end

procedure Node005a
begin
    q2 := 1;
    call Node005();
end

procedure Node007a
begin
    q3 := 1;
    call Node007();
end

procedure Node008a
begin
    q4 := 1;
    call Node008();
end

procedure Node100
begin
    gsay_reply(528, 215);
    giq_option(4, 528, 216, Node101, 50);
    giq_option(4, 528, 217, Node999, 50);
end

procedure Node101
begin
    gfade_out(60);
    if (local_var(8) < 11) then begin
        set_global_var(0, global_var(0) + 1);
        set_local_var(8, local_var(8) + 1);
    end
    game_time_advance(9000);
    add_timer_event(self_obj, game_ticks(5), 10);
    call Node999();
end

procedure Node150
begin
    gsay_reply(528, 205);
    giq_option(4, 528, 206, Node151, 50);
    giq_option(4, 528, 207, Node003, 50);
end

procedure Node151
begin
    gfade_out(60);
    give_exp_points(250);
    display_msg(message_str(528, 220));
    set_local_var(6, 1);
    call Node152();
end

procedure Node152
begin
    gfade_in(60);
    gsay_reply(528, 210);
    giq_option(4, 528, 211, Node003, 50);
    giq_option(4, 528, 212, Node100, 50);
end

