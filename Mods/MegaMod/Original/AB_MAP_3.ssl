variable picked;
variable Critter_Hex;
variable Script;
variable Elev;
variable critter_ptr;

procedure Pick_Gecko_PID;
procedure Pick_Alien_PID;
procedure Spawn_Critter(variable arg0, variable arg1, variable arg2, variable arg3);
procedure Pick_Tough_Ant_PID;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure Make_Plants(variable arg0);
procedure Make_Aliens(variable arg0);
procedure Make;
procedure Next_Hex;
procedure Next_Hex_0;


procedure Pick_Gecko_PID
begin
    if ((get_pc_stat(1) >= 1) and (get_pc_stat(1) <= 4)) then begin
        picked := 16777296;
    end
    else begin
        if ((get_pc_stat(1) >= 5) and (get_pc_stat(1) <= 9)) then begin
            picked := 16777297;
        end
        else begin
            if ((get_pc_stat(1) >= 10) and (get_pc_stat(1) <= 14)) then begin
                picked := 16777299;
            end
            else begin
                if ((get_pc_stat(1) >= 15) and (get_pc_stat(1) <= 19)) then begin
                    picked := 16777302;
                end
                else begin
                    if ((get_pc_stat(1) >= 20) and (get_pc_stat(1) <= 24)) then begin
                        picked := 16777456;
                    end
                    else begin
                        if (get_pc_stat(1) >= 25) then begin
                            picked := 16777457;
                        end
                    end
                end
            end
        end
    end
    return picked;
end

procedure Pick_Alien_PID
begin
    if ((get_pc_stat(1) >= 1) and (get_pc_stat(1) <= 25)) then begin
        picked := 16777458;
    end
    else begin
        if ((get_pc_stat(1) >= 26) and (get_pc_stat(1) <= 30)) then begin
            picked := 16777459;
        end
        else begin
            if ((get_pc_stat(1) >= 31) and (get_pc_stat(1) <= 35)) then begin
                picked := 16777464;
            end
            else begin
                if ((get_pc_stat(1) >= 36) and (get_pc_stat(1) <= 40)) then begin
                    picked := 16777462;
                end
                else begin
                    if ((get_pc_stat(1) >= 41) and (get_pc_stat(1) <= 45)) then begin
                        picked := 16777465;
                    end
                    else begin
                        if (get_pc_stat(1) >= 46) then begin
                            picked := 16777463;
                        end
                    end
                end
            end
        end
    end
    return picked;
end

procedure Spawn_Critter(variable arg0, variable arg1, variable arg2, variable arg3)
begin
    critter_ptr := create_object_sid(arg0, 0, 0, arg2);
    critter_attempt_placement(critter_ptr, arg1, arg3);
    if (cur_map_index == 79) then begin
        if (arg3 == 1) then begin
            set_map_var(30, map_var(30) + 1);
        end
        else begin
            if (arg3 == 2) then begin
                set_map_var(29, map_var(29) + 1);
            end
        end
    end
    else begin
        if (cur_map_index == 135) then begin
            set_global_var(1623, global_var(1623) + 1);
        end
        else begin
            if (cur_map_index == 21) then begin
                set_global_var(1605, global_var(1605) + 1);
            end
            else begin
                if (cur_map_index == 66) then begin
                    set_global_var(1613, global_var(1613) + 1);
                end
                else begin
                    if (cur_map_index == 67) then begin
                        set_global_var(1614, global_var(1614) + 1);
                    end
                    else begin
                        if (cur_map_index == 63) then begin
                            set_global_var(1612, global_var(1612) + 1);
                        end
                        else begin
                            if (cur_map_index == 250) then begin
                                if (arg3 == 0) then begin
                                    set_map_var(0, map_var(0) + 1);
                                end
                                else begin
                                    if (arg3 == 1) then begin
                                        set_map_var(1, map_var(1) + 1);
                                    end
                                end
                            end
                            else begin
                                if (cur_map_index == 251) then begin
                                    if (arg3 == 0) then begin
                                        set_map_var(0, map_var(0) + 1);
                                    end
                                    else begin
                                        if (arg3 == 1) then begin
                                            set_map_var(1, map_var(1) + 1);
                                        end
                                    end
                                end
                                else begin
                                    if (cur_map_index == 252) then begin
                                        if (arg3 == 0) then begin
                                            set_map_var(6, map_var(6) + 1);
                                        end
                                        else begin
                                            if (arg3 == 1) then begin
                                                set_map_var(7, map_var(7) + 1);
                                            end
                                            else begin
                                                if (arg3 == 2) then begin
                                                    set_map_var(8, map_var(8) + 1);
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    if (tile_num(critter_ptr) != arg1) then begin
        critter_heal(critter_ptr, -2000);
        set_obj_visibility(critter_ptr, 1);
        if (cur_map_index == 79) then begin
            if (elevation(critter_ptr) == 1) then begin
                set_map_var(30, map_var(30) - 1);
            end
            else begin
                if (elevation(critter_ptr) == 2) then begin
                    set_map_var(29, map_var(29) - 1);
                end
            end
        end
        else begin
            if (cur_map_index == 135) then begin
                set_global_var(1623, global_var(1623) - 1);
            end
            else begin
                if (cur_map_index == 21) then begin
                    set_global_var(1605, global_var(1605) - 1);
                end
                else begin
                    if (cur_map_index == 66) then begin
                        set_global_var(1613, global_var(1613) - 1);
                    end
                    else begin
                        if (cur_map_index == 67) then begin
                            set_global_var(1614, global_var(1614) - 1);
                        end
                        else begin
                            if (cur_map_index == 63) then begin
                                set_global_var(1612, global_var(1612) - 1);
                            end
                            else begin
                                if (cur_map_index == 250) then begin
                                    if (elevation(critter_ptr) == 0) then begin
                                        set_map_var(0, map_var(0) - 1);
                                    end
                                    else begin
                                        if (elevation(critter_ptr) == 1) then begin
                                            set_map_var(1, map_var(1) - 1);
                                        end
                                    end
                                end
                                else begin
                                    if (cur_map_index == 251) then begin
                                        if (elevation(critter_ptr) == 0) then begin
                                            set_map_var(0, map_var(0) - 1);
                                        end
                                        else begin
                                            if (elevation(critter_ptr) == 1) then begin
                                                set_map_var(1, map_var(1) - 1);
                                            end
                                        end
                                    end
                                    else begin
                                        if (cur_map_index == 252) then begin
                                            if (elevation(critter_ptr) == 0) then begin
                                                set_map_var(6, map_var(6) - 1);
                                            end
                                            else begin
                                                if (elevation(critter_ptr) == 1) then begin
                                                    set_map_var(7, map_var(7) - 1);
                                                end
                                                else begin
                                                    if (elevation(critter_ptr) == 2) then begin
                                                        set_map_var(8, map_var(8) - 1);
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure Pick_Tough_Ant_PID
begin
    variable LVar0 := 0;
    LVar0 := random(1, 3);
    if (LVar0 == 1) then begin
        picked := 16777864;
    end
    else begin
        if (LVar0 == 2) then begin
            picked := 16777865;
        end
        else begin
            if (LVar0 == 3) then begin
                picked := 16777599;
            end
        end
    end
    return picked;
end

procedure map_enter_p_proc
begin
    override_map_start(23143 % 200, 23143 / 200, 0, 0);
    if (metarule(14, 0)) then begin
        display_msg(message_str(964, 10000));
        kill_critter_type(16777458, 0);
        kill_critter_type(16777459, 0);
        kill_critter_type(16777464, 0);
        kill_critter_type(16777462, 0);
        kill_critter_type(16777465, 0);
        kill_critter_type(16777463, 0);
        call Make();
    end
    else begin
        if ((((7 * (24 * (60 * (60 * 10)))) + global_var(1652)) <= game_time) and (global_var(1649) == 0) and (map_var(6) == 0) and (map_var(7) == 0) and (map_var(8) == 0)) then begin
            kill_critter_type(16777458, 0);
            kill_critter_type(16777459, 0);
            kill_critter_type(16777464, 0);
            kill_critter_type(16777462, 0);
            kill_critter_type(16777465, 0);
            kill_critter_type(16777463, 0);
            call Make();
        end
    end
    if ((get_month >= 3) and (get_month < 5)) then begin
        if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
            set_light_level(game_time_hour - 600 + 40);
        end
        else begin
            if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                set_light_level(100);
            end
            else begin
                if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                    set_light_level(100 - (game_time_hour - 1800));
                end
                else begin
                    set_light_level(40);
                end
            end
        end
    end
    else begin
        if ((get_month >= 5) and (get_month < 9)) then begin
            if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                set_light_level(game_time_hour - 500 + 40);
            end
            else begin
                if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1900));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 9) and (get_month < 11)) then begin
                if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                    set_light_level(game_time_hour - 600 + 40);
                end
                else begin
                    if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1800));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                    set_light_level(game_time_hour - 700 + 40);
                end
                else begin
                    if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1700));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
        end
    end
end

procedure map_update_p_proc
begin
    if ((get_month >= 3) and (get_month < 5)) then begin
        if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
            set_light_level(game_time_hour - 600 + 40);
        end
        else begin
            if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                set_light_level(100);
            end
            else begin
                if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                    set_light_level(100 - (game_time_hour - 1800));
                end
                else begin
                    set_light_level(40);
                end
            end
        end
    end
    else begin
        if ((get_month >= 5) and (get_month < 9)) then begin
            if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                set_light_level(game_time_hour - 500 + 40);
            end
            else begin
                if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1900));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 9) and (get_month < 11)) then begin
                if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                    set_light_level(game_time_hour - 600 + 40);
                end
                else begin
                    if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1800));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                    set_light_level(game_time_hour - 700 + 40);
                end
                else begin
                    if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1700));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
        end
    end
end

procedure Make_Plants(variable arg0)
begin
    variable LVar1 := 0;
    variable LVar2 := 0;
    variable LVar3 := 0;
    variable LVar4 := 0;
    variable LVar5 := 0;
    variable LVar6 := 0;
    variable LVar7 := 0;
    variable LVar8 := 0;
    variable LVar9 := 0;
    variable LVar10 := 0;
    variable LVar11 := 0;
    variable LVar12 := 0;
    variable LVar13 := 0;
    variable LVar14 := 0;
    variable LVar15 := 0;
    variable LVar16 := 0;
    variable LVar17 := 0;
    variable LVar18 := 0;
    variable LVar19 := 0;
    variable LVar20 := 0;
    variable LVar21 := 0;
    variable LVar22 := 0;
    variable LVar23 := 0;
    variable LVar24 := 0;
    LVar1 := random(15, 15);
    if (LVar2 < LVar1) then begin
        while (LVar2 < LVar1) do begin
            if ((arg0 == 1) or (arg0 == 2)) then begin
                call Next_Hex();
            end
            else begin
                call Next_Hex_0();
            end
            LVar23 := create_object_sid(272, 0, 0, -1);
            LVar24 := tile_num_in_direction(map_var(0), random(0, 5), random(0, 5));
            move_to(LVar23, LVar24, arg0);
            LVar2 := LVar2 + 1;
        end
    end
    LVar3 := random(15, 15);
    if (LVar4 < LVar3) then begin
        while (LVar4 < LVar3) do begin
            if ((arg0 == 1) or (arg0 == 2)) then begin
                call Next_Hex();
            end
            else begin
                call Next_Hex_0();
            end
            LVar23 := create_object_sid(271, 0, 0, -1);
            LVar24 := tile_num_in_direction(map_var(0), random(0, 5), random(0, 5));
            move_to(LVar23, LVar24, arg0);
            LVar4 := LVar4 + 1;
        end
    end
    LVar5 := random(15, 15);
    if (LVar6 < LVar5) then begin
        while (LVar6 < LVar5) do begin
            if ((arg0 == 1) or (arg0 == 2)) then begin
                call Next_Hex();
            end
            else begin
                call Next_Hex_0();
            end
            LVar23 := create_object_sid(544, 0, 0, -1);
            LVar24 := tile_num_in_direction(map_var(0), random(0, 5), random(0, 5));
            move_to(LVar23, LVar24, arg0);
            LVar6 := LVar6 + 1;
        end
    end
    LVar7 := random(15, 15);
    if (LVar8 < LVar7) then begin
        while (LVar8 < LVar7) do begin
            if ((arg0 == 1) or (arg0 == 2)) then begin
                call Next_Hex();
            end
            else begin
                call Next_Hex_0();
            end
            LVar23 := create_object_sid(548, 0, 0, -1);
            LVar24 := tile_num_in_direction(map_var(0), random(0, 5), random(0, 5));
            move_to(LVar23, LVar24, arg0);
            LVar8 := LVar8 + 1;
        end
    end
    LVar9 := random(15, 15);
    if (LVar10 < LVar9) then begin
        while (LVar10 < LVar9) do begin
            if ((arg0 == 1) or (arg0 == 2)) then begin
                call Next_Hex();
            end
            else begin
                call Next_Hex_0();
            end
            LVar23 := create_object_sid(759, 0, 0, -1);
            LVar24 := tile_num_in_direction(map_var(0), random(0, 5), random(0, 5));
            move_to(LVar23, LVar24, arg0);
            LVar10 := LVar10 + 1;
        end
    end
    LVar17 := random(15, 15);
    if (LVar18 < LVar17) then begin
        while (LVar18 < LVar17) do begin
            if ((arg0 == 1) or (arg0 == 2)) then begin
                call Next_Hex();
            end
            else begin
                call Next_Hex_0();
            end
            LVar23 := create_object_sid(755, 0, 0, -1);
            LVar24 := tile_num_in_direction(map_var(0), random(0, 5), random(0, 5));
            move_to(LVar23, LVar24, arg0);
            LVar18 := LVar18 + 1;
        end
    end
    LVar15 := random(15, 15);
    if (LVar16 < LVar15) then begin
        while (LVar16 < LVar15) do begin
            if ((arg0 == 1) or (arg0 == 2)) then begin
                call Next_Hex();
            end
            else begin
                call Next_Hex_0();
            end
            LVar23 := create_object_sid(796, 0, 0, -1);
            LVar24 := tile_num_in_direction(map_var(0), random(0, 5), random(0, 5));
            move_to(LVar23, LVar24, arg0);
            LVar16 := LVar16 + 1;
        end
    end
    LVar13 := random(15, 15);
    if (LVar14 < LVar13) then begin
        while (LVar14 < LVar13) do begin
            if ((arg0 == 1) or (arg0 == 2)) then begin
                call Next_Hex();
            end
            else begin
                call Next_Hex_0();
            end
            LVar23 := create_object_sid(799, 0, 0, -1);
            LVar24 := tile_num_in_direction(map_var(0), random(0, 5), random(0, 5));
            move_to(LVar23, LVar24, arg0);
            LVar14 := LVar14 + 1;
        end
    end
    LVar11 := random(15, 15);
    if (LVar12 < LVar11) then begin
        while (LVar12 < LVar11) do begin
            if ((arg0 == 1) or (arg0 == 2)) then begin
                call Next_Hex();
            end
            else begin
                call Next_Hex_0();
            end
            LVar23 := create_object_sid(798, 0, 0, -1);
            LVar24 := tile_num_in_direction(map_var(0), random(0, 5), random(0, 5));
            move_to(LVar23, LVar24, arg0);
            LVar12 := LVar12 + 1;
        end
    end
    LVar19 := random(15, 15);
    if (LVar20 < LVar19) then begin
        while (LVar20 < LVar19) do begin
            if ((arg0 == 1) or (arg0 == 2)) then begin
                call Next_Hex();
            end
            else begin
                call Next_Hex_0();
            end
            LVar23 := create_object_sid(797, 0, 0, -1);
            LVar24 := tile_num_in_direction(map_var(0), random(0, 5), random(0, 5));
            move_to(LVar23, LVar24, arg0);
            LVar20 := LVar20 + 1;
        end
    end
    LVar21 := random(15, 15);
    if (LVar22 < LVar21) then begin
        while (LVar22 < LVar21) do begin
            if ((arg0 == 1) or (arg0 == 2)) then begin
                call Next_Hex();
            end
            else begin
                call Next_Hex_0();
            end
            LVar23 := create_object_sid(807, 0, 0, -1);
            LVar24 := tile_num_in_direction(map_var(0), random(0, 5), random(0, 5));
            move_to(LVar23, LVar24, arg0);
            LVar22 := LVar22 + 1;
        end
    end
end

procedure Make_Aliens(variable arg0)
begin
    variable LVar1 := 0;
    variable LVar2 := 0;
    variable LVar3 := 0;
    variable LVar4 := 0;
    LVar2 := random(45, 45);
    while (LVar1 < LVar2) do begin
        if ((arg0 == 1) or (arg0 == 2)) then begin
            call Next_Hex();
        end
        else begin
            call Next_Hex_0();
        end
        for (LVar4 := tile_num_in_direction(map_var(0), random(0, 5), random(0, 5)); LVar4 == -1; LVar4 := tile_num_in_direction(map_var(0), random(0, 5), random(0, 5))) begin
            if ((arg0 == 1) or (arg0 == 2)) then begin
                call Next_Hex();
                continue;
            end
            call Next_Hex_0();
        end
        picked := Pick_Alien_PID();
        call Spawn_Critter(picked, LVar4, 790, arg0);
        LVar1 := LVar1 + 1;
    end
end

procedure Make
begin
    call Make_Aliens(0);
    call Make_Aliens(1);
    call Make_Aliens(2);
    call Make_Plants(0);
    call Make_Plants(1);
    call Make_Plants(2);
end

procedure Next_Hex
begin
    if (map_var(0) == 10706) then begin
        set_map_var(0, 12887);
    end
    else begin
        if (map_var(0) == 12887) then begin
            set_map_var(0, 15661);
        end
        else begin
            if (map_var(0) == 15661) then begin
                set_map_var(0, 20679);
            end
            else begin
                if (map_var(0) == 20679) then begin
                    set_map_var(0, 18104);
                end
                else begin
                    if (map_var(0) == 18104) then begin
                        set_map_var(0, 16525);
                    end
                    else begin
                        if (map_var(0) == 16525) then begin
                            set_map_var(0, 21326);
                        end
                        else begin
                            if (map_var(0) == 21326) then begin
                                set_map_var(0, 23502);
                            end
                            else begin
                                if (map_var(0) == 23502) then begin
                                    set_map_var(0, 25290);
                                end
                                else begin
                                    if (map_var(0) == 25290) then begin
                                        set_map_var(0, 10706);
                                    end
                                    else begin
                                        set_map_var(0, 10706);
                                        set_map_var(0, 10706);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure Next_Hex_0
begin
    if (map_var(0) == 12715) then begin
        set_map_var(0, 11892);
    end
    else begin
        if (map_var(0) == 11892) then begin
            set_map_var(0, 15493);
        end
        else begin
            if (map_var(0) == 15493) then begin
                set_map_var(0, 15708);
            end
            else begin
                if (map_var(0) == 15708) then begin
                    set_map_var(0, 17529);
                end
                else begin
                    if (map_var(0) == 17529) then begin
                        set_map_var(0, 25927);
                    end
                    else begin
                        if (map_var(0) == 25927) then begin
                            set_map_var(0, 23904);
                        end
                        else begin
                            if (map_var(0) == 23904) then begin
                                set_map_var(0, 26702);
                            end
                            else begin
                                if (map_var(0) == 26702) then begin
                                    set_map_var(0, 22285);
                                end
                                else begin
                                    if (map_var(0) == 22285) then begin
                                        set_map_var(0, 26288);
                                    end
                                    else begin
                                        if (map_var(0) == 26288) then begin
                                            set_map_var(0, 12715);
                                        end
                                        else begin
                                            set_map_var(0, 10706);
                                            set_map_var(0, 12715);
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

