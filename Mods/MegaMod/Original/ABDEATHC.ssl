variable global_temp;

procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;

variable starttile;

procedure timed_event_p_proc;
procedure use_p_proc;
procedure use_obj_on_p_proc;
procedure map_update_p_proc;


procedure start
begin
end

procedure critter_p_proc
begin
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
    if (not(anim_busy(self_obj))) then begin
        reg_anim_func(2, self_obj);
        reg_anim_func(1, 1);
        animate_move_obj_to_tile(self_obj, tile_num_in_direction(starttile, random(0, 5), random(3, 10)), 0);
        reg_anim_func(3, 0);
    end
end

procedure destroy_p_proc
begin
    give_exp_points(500);
    display_msg(message_str(2252, 102));
    set_global_var(1115, 2);
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(2252, 100));
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(2252, 101));
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        script_overrides;
    end
end

procedure damage_p_proc
begin
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, 1, 6, 187);
    critter_add_trait(self_obj, 1, 5, 10);
    starttile := tile_num(self_obj);
end

procedure timed_event_p_proc
begin
end

procedure use_p_proc
begin
end

procedure use_obj_on_p_proc
begin
end

procedure map_update_p_proc
begin
end

