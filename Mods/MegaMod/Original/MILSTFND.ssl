variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure map_enter_p_proc;
procedure pickup_p_proc;
procedure use_p_proc;
procedure damage_p_proc;
procedure map_exit_p_proc;
procedure map_update_p_proc;
procedure use_obj_on_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;

import variable modoc_rose_obj;

variable caught_tamper;
variable user_obj;
variable temp_roll;

procedure timed_event_p_proc;
procedure use_skill_on_p_proc;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure map_enter_p_proc
begin
    if ((cur_map_index == 19) and (elevation(self_obj) != ((global_var(297) bwand 1) != 0))) then begin
        move_to(self_obj, tile_num(self_obj), (global_var(297) bwand 1) != 0);
    end
    if (metarule(22, 0) == 0) then begin
        if ((global_var(52) <= -1000) == 0) then begin
            restock_amt := random(0, 1);
            if (obj_is_carrying_obj_pid(self_obj, 9) < restock_amt) then begin
                if (1 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 9) < restock_amt) then begin
                        restock_obj := create_object_sid(9, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 9));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 9) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 9);
                            if ((obj_is_carrying_obj_pid(self_obj, 9) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 9) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 9);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 9);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 9) < restock_amt) then begin
                    restock_obj := create_object_sid(9, 0, 0, -1);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 9));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 9) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 9);
                        if ((obj_is_carrying_obj_pid(self_obj, 9) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 9) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 9);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 9);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        metarule(43, self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            destroy_object(restock_obj);
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(0, 3);
            if (obj_is_carrying_obj_pid(self_obj, 45) < restock_amt) then begin
                if (40 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 45) < restock_amt) then begin
                        restock_obj := create_object_sid(45, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 45));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 45) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 45);
                            if ((obj_is_carrying_obj_pid(self_obj, 45) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 45) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 45);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 45);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 45) < restock_amt) then begin
                    restock_obj := create_object_sid(45, 0, 0, -1);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 45));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 45) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 45);
                        if ((obj_is_carrying_obj_pid(self_obj, 45) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 45) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 45);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 45);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        metarule(43, self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            destroy_object(restock_obj);
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(0, 5);
            if (obj_is_carrying_obj_pid(self_obj, 4) < restock_amt) then begin
                if (40 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 4) < restock_amt) then begin
                        restock_obj := create_object_sid(4, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 4));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 4) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 4);
                            if ((obj_is_carrying_obj_pid(self_obj, 4) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 4) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 4);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 4);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 4) < restock_amt) then begin
                    restock_obj := create_object_sid(4, 0, 0, -1);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 4));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 4) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 4);
                        if ((obj_is_carrying_obj_pid(self_obj, 4) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 4) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 4);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 4);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        metarule(43, self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            destroy_object(restock_obj);
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(0, 1);
            if (obj_is_carrying_obj_pid(self_obj, 8) < restock_amt) then begin
                if (15 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 8) < restock_amt) then begin
                        restock_obj := create_object_sid(8, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 8));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 8) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 8);
                            if ((obj_is_carrying_obj_pid(self_obj, 8) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 8) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 8);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 8);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 8) < restock_amt) then begin
                    restock_obj := create_object_sid(8, 0, 0, -1);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 8));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 8) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 8);
                        if ((obj_is_carrying_obj_pid(self_obj, 8) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 8) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 8);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 8);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        metarule(43, self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            destroy_object(restock_obj);
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(0, 2);
            if (obj_is_carrying_obj_pid(self_obj, 30) < restock_amt) then begin
                if (15 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 30) < restock_amt) then begin
                        restock_obj := create_object_sid(30, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 30));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 30) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 30);
                            if ((obj_is_carrying_obj_pid(self_obj, 30) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 30) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 30);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 30);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 30) < restock_amt) then begin
                    restock_obj := create_object_sid(30, 0, 0, -1);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 30));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 30) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 30);
                        if ((obj_is_carrying_obj_pid(self_obj, 30) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 30) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 30);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 30);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        metarule(43, self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            destroy_object(restock_obj);
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(0, 1);
            if (obj_is_carrying_obj_pid(self_obj, 74) < restock_amt) then begin
                if (10 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 74) < restock_amt) then begin
                        restock_obj := create_object_sid(74, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 74));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 74) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 74);
                            if ((obj_is_carrying_obj_pid(self_obj, 74) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 74) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 74);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 74);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 74) < restock_amt) then begin
                    restock_obj := create_object_sid(74, 0, 0, -1);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 74));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 74) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 74);
                        if ((obj_is_carrying_obj_pid(self_obj, 74) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 74) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 74);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 74);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        metarule(43, self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            destroy_object(restock_obj);
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(0, 1);
            if (obj_is_carrying_obj_pid(self_obj, 40) < restock_amt) then begin
                if (10 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 40) < restock_amt) then begin
                        restock_obj := create_object_sid(40, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 40));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 40) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 40);
                            if ((obj_is_carrying_obj_pid(self_obj, 40) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 40) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 40);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 40);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 40) < restock_amt) then begin
                    restock_obj := create_object_sid(40, 0, 0, -1);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 40));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 40) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 40);
                        if ((obj_is_carrying_obj_pid(self_obj, 40) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 40) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 40);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 40);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        metarule(43, self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            destroy_object(restock_obj);
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
        end
    end
    if (metarule(22, 0) == 0) then begin
        if (0) then begin
            obj_close(self_obj);
        end
        if (0 and 0) then begin
            obj_lock(self_obj);
        end
    end
end

procedure pickup_p_proc
begin
end

procedure use_p_proc
begin
    caught_tamper := 0;
    user_obj := source_obj;
    if (user_obj != 0) then begin
        if (caught_tamper == 0) then begin
            if (((global_var(402) bwand 262144) != 0) == 0) then begin
                if (modoc_rose_obj != 0) then begin
                    if (has_trait(1, modoc_rose_obj, 666) and ((critter_state(modoc_rose_obj) bwand 1) == 0)) then begin
                        if (obj_can_see_obj(modoc_rose_obj, user_obj)) then begin
                            caught_tamper := 1;
                        end
                    end
                end
            end
        end
        if (caught_tamper) then begin
            if (caught_tamper) then begin
                script_overrides;
                add_timer_event(modoc_rose_obj, 0, 1);
            end
        end
    end
end

procedure damage_p_proc
begin
    if (obj_is_locked(self_obj)) then begin
        if (target_obj != 0) then begin
            if (metarule(49, target_obj) == 6) then begin
                if (1) then begin
                    display_msg(message_str(1189, 300));
                    obj_unlock(self_obj);
                end
                else begin
                    display_msg(message_str(1189, 301));
                end
            end
        end
    end
    user_obj := source_obj;
    if (user_obj != 0) then begin
        if (caught_tamper) then begin
            script_overrides;
            add_timer_event(modoc_rose_obj, 0, 1);
        end
    end
end

procedure map_exit_p_proc
begin
    set_local_var(0, local_var(0) bwand (-1 - 1024));
end

procedure map_update_p_proc
begin
    if (0) then begin
        obj_close(self_obj);
    end
    if (0 and 0) then begin
        obj_lock(self_obj);
    end
end

procedure use_obj_on_p_proc
begin
    caught_tamper := 0;
    user_obj := source_obj;
    if (user_obj != 0) then begin
        if (caught_tamper == 0) then begin
            if (((global_var(402) bwand 262144) != 0) == 0) then begin
                if (modoc_rose_obj != 0) then begin
                    if (has_trait(1, modoc_rose_obj, 666) and ((critter_state(modoc_rose_obj) bwand 1) == 0)) then begin
                        if (obj_can_see_obj(modoc_rose_obj, user_obj)) then begin
                            caught_tamper := 1;
                        end
                    end
                end
            end
        end
        if (caught_tamper) then begin
            if (caught_tamper) then begin
                script_overrides;
                add_timer_event(modoc_rose_obj, 0, 1);
            end
        end
        else begin
            if (obj_is_locked(self_obj)) then begin
                if (obj_pid(obj_being_used_with) == 84) then begin
                    script_overrides;
                    if (0) then begin
                        if (is_success(roll_vs_skill(user_obj, 9, -20 + 20))) then begin
                            script_overrides;
                            if (user_obj == dude_obj) then begin
                                display_msg(message_str(1189, 100));
                                if (((local_var(0) bwand 512) != 0) == 0) then begin
                                    give_exp_points(25);
                                    display_msg(message_str(14, 100) + 25 + message_str(14, 101));
                                end
                                set_local_var(0, local_var(0) bwor 512);
                            end
                            else begin
                                if (user_obj != 0) then begin
                                    display_msg(obj_name(user_obj) + message_str(1189, 200));
                                    if (((local_var(0) bwand 512) != 0) == 0) then begin
                                        give_exp_points(25);
                                        display_msg(message_str(14, 100) + 25 + message_str(14, 101));
                                    end
                                    set_local_var(0, local_var(0) bwor 512);
                                end
                            end
                            debug_msg("unlock_success_msg");
                            obj_unlock(self_obj);
                        end
                        else begin
                            script_overrides;
                            if (user_obj == dude_obj) then begin
                                display_msg(message_str(1189, 101));
                            end
                            else begin
                                if (user_obj != 0) then begin
                                    display_msg(obj_name(user_obj) + message_str(1189, 201));
                                end
                            end
                            debug_msg("unlock_fail_msg");
                        end
                    end
                end
                else begin
                    if (obj_pid(obj_being_used_with) == 410) then begin
                        script_overrides;
                        if (0) then begin
                            if (is_success(roll_vs_skill(user_obj, 9, -20 + 20))) then begin
                                script_overrides;
                                if (user_obj == dude_obj) then begin
                                    display_msg(message_str(1189, 100));
                                    if (((local_var(0) bwand 512) != 0) == 0) then begin
                                        give_exp_points(25);
                                        display_msg(message_str(14, 100) + 25 + message_str(14, 101));
                                    end
                                    set_local_var(0, local_var(0) bwor 512);
                                end
                                else begin
                                    if (user_obj != 0) then begin
                                        display_msg(obj_name(user_obj) + message_str(1189, 200));
                                        if (((local_var(0) bwand 512) != 0) == 0) then begin
                                            give_exp_points(25);
                                            display_msg(message_str(14, 100) + 25 + message_str(14, 101));
                                        end
                                        set_local_var(0, local_var(0) bwor 512);
                                    end
                                end
                                debug_msg("unlock_success_msg");
                                obj_unlock(self_obj);
                            end
                            else begin
                                script_overrides;
                                if (user_obj == dude_obj) then begin
                                    display_msg(message_str(1189, 101));
                                end
                                else begin
                                    if (user_obj != 0) then begin
                                        display_msg(obj_name(user_obj) + message_str(1189, 201));
                                    end
                                end
                                debug_msg("unlock_fail_msg");
                            end
                        end
                    end
                    else begin
                        if (obj_pid(obj_being_used_with) == 20) then begin
                            script_overrides;
                            if (is_success(do_check(user_obj, 0, 0))) then begin
                                if (user_obj == dude_obj) then begin
                                    display_msg(message_str(1189, 400));
                                    if (((local_var(0) bwand 512) != 0) == 0) then begin
                                        give_exp_points(25);
                                        display_msg(message_str(14, 100) + 25 + message_str(14, 101));
                                    end
                                    set_local_var(0, local_var(0) bwor 512);
                                end
                                else begin
                                    if (user_obj != 0) then begin
                                        display_msg(obj_name(user_obj) + message_str(1189, 500));
                                        if (((local_var(0) bwand 512) != 0) == 0) then begin
                                            give_exp_points(25);
                                            display_msg(message_str(14, 100) + 25 + message_str(14, 101));
                                        end
                                        set_local_var(0, local_var(0) bwor 512);
                                    end
                                end
                                debug_msg("pry_success_msg");
                                obj_unlock(self_obj);
                            end
                            else begin
                                if (user_obj == dude_obj) then begin
                                    display_msg(message_str(1189, 401));
                                end
                                else begin
                                    if (user_obj != 0) then begin
                                        display_msg(obj_name(user_obj) + message_str(1189, 501));
                                    end
                                end
                                debug_msg("pry_fail_msg");
                            end
                        end
                    end
                end
            end
            else begin
                if (obj_pid(obj_being_used_with) == 84) then begin
                    script_overrides;
                    if (0) then begin
                        if (is_success(roll_vs_skill(user_obj, 9, -20 + 40))) then begin
                            script_overrides;
                            if (user_obj == dude_obj) then begin
                                display_msg(message_str(1189, 102));
                                if (((local_var(0) bwand 512) != 0) == 0) then begin
                                    give_exp_points(25);
                                    display_msg(message_str(14, 100) + 25 + message_str(14, 101));
                                end
                                set_local_var(0, local_var(0) bwor 512);
                            end
                            else begin
                                if (user_obj != 0) then begin
                                    display_msg(obj_name(user_obj) + message_str(1189, 202));
                                    if (((local_var(0) bwand 512) != 0) == 0) then begin
                                        give_exp_points(25);
                                        display_msg(message_str(14, 100) + 25 + message_str(14, 101));
                                    end
                                    set_local_var(0, local_var(0) bwor 512);
                                end
                            end
                            debug_msg("lock_success_msg");
                            obj_lock(self_obj);
                        end
                        else begin
                            script_overrides;
                            if (user_obj == dude_obj) then begin
                                display_msg(message_str(1189, 103));
                            end
                            else begin
                                if (user_obj != 0) then begin
                                    display_msg(obj_name(user_obj) + message_str(1189, 203));
                                end
                            end
                            debug_msg("lock_fail_msg");
                        end
                    end
                end
                else begin
                    if (obj_pid(obj_being_used_with) == 410) then begin
                        script_overrides;
                        if (0) then begin
                            if (is_success(roll_vs_skill(user_obj, 9, -20 + 40))) then begin
                                script_overrides;
                                if (user_obj == dude_obj) then begin
                                    display_msg(message_str(1189, 102));
                                    if (((local_var(0) bwand 512) != 0) == 0) then begin
                                        give_exp_points(25);
                                        display_msg(message_str(14, 100) + 25 + message_str(14, 101));
                                    end
                                    set_local_var(0, local_var(0) bwor 512);
                                end
                                else begin
                                    if (user_obj != 0) then begin
                                        display_msg(obj_name(user_obj) + message_str(1189, 202));
                                        if (((local_var(0) bwand 512) != 0) == 0) then begin
                                            give_exp_points(25);
                                            display_msg(message_str(14, 100) + 25 + message_str(14, 101));
                                        end
                                        set_local_var(0, local_var(0) bwor 512);
                                    end
                                end
                                debug_msg("lock_success_msg");
                                obj_lock(self_obj);
                            end
                            else begin
                                script_overrides;
                                if (user_obj == dude_obj) then begin
                                    display_msg(message_str(1189, 103));
                                end
                                else begin
                                    if (user_obj != 0) then begin
                                        display_msg(obj_name(user_obj) + message_str(1189, 203));
                                    end
                                end
                                debug_msg("lock_fail_msg");
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(212, 100));
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(212, 110));
end

procedure timed_event_p_proc
begin
end

procedure use_skill_on_p_proc
begin
    caught_tamper := 0;
    user_obj := source_obj;
    if (user_obj != 0) then begin
        if (caught_tamper == 0) then begin
            if (((global_var(402) bwand 262144) != 0) == 0) then begin
                if (modoc_rose_obj != 0) then begin
                    if (has_trait(1, modoc_rose_obj, 666) and ((critter_state(modoc_rose_obj) bwand 1) == 0)) then begin
                        if (obj_can_see_obj(modoc_rose_obj, user_obj)) then begin
                            caught_tamper := 1;
                        end
                    end
                end
            end
        end
        if (caught_tamper) then begin
            if (caught_tamper) then begin
                script_overrides;
                add_timer_event(modoc_rose_obj, 0, 1);
            end
        end
        else begin
            if (action_being_used == 9) then begin
                script_overrides;
                if (obj_is_locked(self_obj)) then begin
                    if (0) then begin
                        if (is_success(roll_vs_skill(user_obj, 9, -20))) then begin
                            script_overrides;
                            if (user_obj == dude_obj) then begin
                                display_msg(message_str(1189, 100));
                                if (((local_var(0) bwand 512) != 0) == 0) then begin
                                    give_exp_points(25);
                                    display_msg(message_str(14, 100) + 25 + message_str(14, 101));
                                end
                                set_local_var(0, local_var(0) bwor 512);
                            end
                            else begin
                                if (user_obj != 0) then begin
                                    display_msg(obj_name(user_obj) + message_str(1189, 200));
                                    if (((local_var(0) bwand 512) != 0) == 0) then begin
                                        give_exp_points(25);
                                        display_msg(message_str(14, 100) + 25 + message_str(14, 101));
                                    end
                                    set_local_var(0, local_var(0) bwor 512);
                                end
                            end
                            debug_msg("unlock_success_msg");
                            obj_unlock(self_obj);
                        end
                        else begin
                            script_overrides;
                            if (user_obj == dude_obj) then begin
                                display_msg(message_str(1189, 101));
                            end
                            else begin
                                if (user_obj != 0) then begin
                                    display_msg(obj_name(user_obj) + message_str(1189, 201));
                                end
                            end
                            debug_msg("unlock_fail_msg");
                        end
                    end
                end
                else begin
                    if (0) then begin
                        if (is_success(roll_vs_skill(user_obj, 9, -20))) then begin
                            script_overrides;
                            if (user_obj == dude_obj) then begin
                                display_msg(message_str(1189, 102));
                                if (((local_var(0) bwand 512) != 0) == 0) then begin
                                    give_exp_points(25);
                                    display_msg(message_str(14, 100) + 25 + message_str(14, 101));
                                end
                                set_local_var(0, local_var(0) bwor 512);
                            end
                            else begin
                                if (user_obj != 0) then begin
                                    display_msg(obj_name(user_obj) + message_str(1189, 202));
                                    if (((local_var(0) bwand 512) != 0) == 0) then begin
                                        give_exp_points(25);
                                        display_msg(message_str(14, 100) + 25 + message_str(14, 101));
                                    end
                                    set_local_var(0, local_var(0) bwor 512);
                                end
                            end
                            debug_msg("lock_success_msg");
                            obj_lock(self_obj);
                        end
                        else begin
                            script_overrides;
                            if (user_obj == dude_obj) then begin
                                display_msg(message_str(1189, 103));
                            end
                            else begin
                                if (user_obj != 0) then begin
                                    display_msg(obj_name(user_obj) + message_str(1189, 203));
                                end
                            end
                            debug_msg("lock_fail_msg");
                        end
                    end
                end
            end
        end
    end
end

