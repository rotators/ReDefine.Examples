/*******************************************************
*      Some unreferenced imported varables found.      *
*      Because of it it is impossible to specify       *
*      the real names of global variables.             *
*******************************************************/

variable GVar0;
variable GVar1;
variable GVar2;
variable GVar3;
variable GVar4;
variable GVar5;
variable GVar6;
variable GVar7;
variable GVar8;
variable GVar9;
variable GVar10;
variable GVar11;
variable GVar12;
variable GVar13;
variable GVar14 := 50;
variable GVar15 := 2;
variable GVar16;
variable GVar17;
variable GVar18;

/* ?import? variable SVar01; */
/* ?import? variable SVar02; */
/* ?import? variable SVar03; */
/* ?import? variable SVar04; */
/* ?import? variable SVar05; */
/* ?import? variable SVar06; */
/* ?import? variable SVar07; */
/* ?import? variable SVar08; */
/* ?import? variable SVar09; */
/* ?import? variable SVar10; */
/* ?import? variable SVar11; */
/* ?import? variable SVar12; */
/* ?import? variable SVar13; */
/* ?import? variable SVar14; */
/* ?import? variable SVar15; */
/* ?import? variable SVar16; */
/* ?import? variable SVar17; */
/* ?import? variable SVar18; */
/* ?import? variable SVar19; */

procedure start;
procedure talk_p_proc;
procedure description_p_proc;
procedure look_at_proc;
procedure destroy_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure do_dialogue;
procedure pez00;
procedure pez01;
procedure pez02;
procedure pez03;
procedure pez04;
procedure pez05;
procedure pezdone;
procedure pezend;
procedure timeforwhat;

/* ?import? variable my_tile; */
/* ?import? variable knowstart; */
/* ?import? variable prev_tile; */
/* ?import? variable new_tile; */
/* ?import? variable loopcount; */
/* ?import? variable noevent; */
/* ?import? variable rndx; */
/* ?import? variable rndy; */
/* ?import? variable rndz; */
/* ?import? variable dist; */
/* ?import? variable critter_tile; */
/* ?import? variable HEREBEFORE; */
/* ?import? variable PICK; */
/* ?import? variable init_teams; */
/* ?import? variable is_fool; */

import variable broken_gen;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

/* ?import? variable reaction; */
/* ?import? variable reaction_level; */
/* ?import? variable got_reaction; */
/* ?import? variable badguy; */
/* ?import? variable exit_line; */


procedure start
begin
    if (local_var(0) == 0) then begin
        critter_add_trait(self_obj, 1, 6, 184);
        set_local_var(0, 1);
        set_local_var(1, tile_num(self_obj));
    end
end

procedure talk_p_proc
begin
    call do_dialogue();
end

procedure description_p_proc
begin
    script_overrides;
    if (obj_pid(self_obj) == 16777846) then begin
        display_msg("You see a Scraptown child.");
    end
    else begin
        display_msg(message_str(1500, 100));
    end
end

procedure look_at_proc
begin
    script_overrides;
    if (obj_pid(self_obj) == 16777846) then begin
        display_msg("You see a Scraptown child.");
    end
    else begin
        display_msg(message_str(1500, 100));
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(5, global_var(5) + 1);
        if (metarule(51, self_obj) == 2) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(2, 0);
                set_global_var(1, global_var(1) + 1);
                set_global_var(0, global_var(0) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(37, 0);
                set_global_var(38, 0);
                set_global_var(39, 0);
                set_global_var(40, 0);
                set_global_var(41, 0);
                set_global_var(42, 0);
                set_global_var(43, 0);
                set_global_var(44, 0);
                set_global_var(45, 0);
                if (global_var(0) >= 1000) then begin
                    set_global_var(37, 1);
                end
                else begin
                    if (global_var(0) >= 750) then begin
                        set_global_var(38, 1);
                    end
                    else begin
                        if (global_var(0) >= 500) then begin
                            set_global_var(39, 1);
                        end
                        else begin
                            if (global_var(0) >= 250) then begin
                                set_global_var(40, 1);
                            end
                            else begin
                                if (global_var(0) > -250) then begin
                                    set_global_var(41, 1);
                                end
                                else begin
                                    if (global_var(0) > -500) then begin
                                        set_global_var(42, 1);
                                    end
                                    else begin
                                        if (global_var(0) > -750) then begin
                                            set_global_var(43, 1);
                                        end
                                        else begin
                                            if (global_var(0) > -1000) then begin
                                                set_global_var(44, 1);
                                            end
                                            else begin
                                                set_global_var(45, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(808, global_var(808) + -5);
                debug_msg("Added " + -5 + " to Town Rep");
            end
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
            set_global_var(2, 1);
            set_global_var(3, 0);
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
            set_global_var(3, 1);
            set_global_var(2, 0);
        end
        set_global_var(0, global_var(0) + -5);
        debug_msg("Player gains " + -5 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(808, global_var(808) + -3);
        debug_msg("Added " + -3 + " to Town Rep");
    end
end

procedure timed_event_p_proc
begin
    GVar5 := 0;
    GVar7 := random(1, 6);
    if (GVar7 > 1) then begin
        GVar9 := 2;
    end
    if (GVar7 > 5) then begin
        GVar9 := 3;
    end
    GVar8 := random(0, 5);
    GVar2 := tile_num(self_obj);
    GVar3 := tile_num_in_direction(GVar2, GVar8, GVar9);
    animate_move_obj_to_tile(self_obj, GVar3, 0);
    GVar4 := GVar4 + 1;
    if (GVar4 > 40) then begin
        GVar4 := 0;
        if (GVar5 == 0) then begin
            GVar5 := 1;
            GVar6 := 5 + random(1, 10);
            add_timer_event(self_obj, game_ticks(GVar6), 0);
        end
    end
end

procedure critter_p_proc
begin
    if (map_var(5) == 1) then begin
        animate_move_obj_to_tile(self_obj, 19495, 0);
    end
    else begin
        if (map_var(5) == 2) then begin
            animate_move_obj_to_tile(self_obj, local_var(1), 0);
        end
    end
end

procedure do_dialogue
begin
    if (broken_gen == 1) then begin
        call pez00();
    end
    else begin
        if (map_var(1) == 1) then begin
            call pez01();
        end
        else begin
            if (map_var(12) == 1) then begin
                call pez02();
            end
            else begin
                if (map_var(13) == 1) then begin
                    call pez03();
                end
                else begin
                    call pez04();
                end
            end
        end
    end
end

procedure pez00
begin
    float_msg(self_obj, message_str(1500, random(101, 104)), 8);
end

procedure pez01
begin
    float_msg(self_obj, message_str(1500, random(105, 109)), 8);
end

procedure pez02
begin
    float_msg(self_obj, message_str(1500, random(110, 113)), 7);
end

procedure pez03
begin
    float_msg(self_obj, message_str(1500, random(114, 118)), 7);
end

procedure pez04
begin
    GVar12 := random(1, 3);
    if (GVar12 == 1) then begin
        float_msg(self_obj, message_str(1500, random(119, 123)), 0);
    end
    else begin
        if (GVar12 == 2) then begin
            call pez05();
        end
        else begin
            if (GVar12 == 3) then begin
                float_msg(self_obj, message_str(1500, 124), 0);
            end
        end
    end
end

procedure pez05
begin
    GVar12 := random(1, 10);
    if (GVar12 < 3) then begin
        float_msg(self_obj, message_str(1500, 125), 3);
    end
    else begin
        float_msg(self_obj, message_str(1500, 126), 0);
    end
end

procedure pezdone
begin
    sayOption(message_str(1500, 127), pezend);
    sayOption("", pezend);
end

procedure pezend
begin
end

procedure timeforwhat
begin
    GVar5 := 0;
    GVar7 := random(1, 6);
    if (GVar7 > 1) then begin
        GVar9 := 2;
    end
    if (GVar7 > 5) then begin
        GVar9 := 3;
    end
    GVar8 := random(0, 5);
    GVar2 := tile_num(self_obj);
    GVar3 := tile_num_in_direction(GVar2, GVar8, GVar9);
    animate_move_obj_to_tile(self_obj, GVar3, 0);
end

procedure get_reaction
begin
    if (not(GVar16)) then begin
        GVar16 := 1;
        GVar14 := GVar14 + ((get_critter_stat(dude_obj, 3) - 5) * 5);
        if (GVar17) then begin
            GVar14 := GVar14 - map_var(8);
        end
        else begin
            GVar14 := GVar14 + map_var(8);
        end
        if (global_var(1) > 2) then begin
            GVar14 := GVar14 - 30;
        end
        if ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) then begin
            GVar14 := GVar14 + 20;
        end
        if ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1)) then begin
            GVar14 := GVar14 - 20;
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (GVar14 < 24) then begin
        GVar15 := 1;
    end
    else begin
        if (GVar14 < 74) then begin
            GVar15 := 2;
        end
        else begin
            GVar15 := 3;
        end
    end
end

procedure LevelToReact
begin
    if (GVar15 == 1) then begin
        GVar14 := random(1, 24);
    end
    else begin
        if (GVar15 == 2) then begin
            GVar14 := random(25, 74);
        end
        else begin
            GVar14 := random(75, 100);
        end
    end
end

procedure UpReact
begin
    GVar14 := GVar14 + 10;
    call ReactToLevel();
end

procedure DownReact
begin
    GVar14 := GVar14 - 10;
    call ReactToLevel();
end

procedure BottomReact
begin
    GVar15 := 1;
    GVar14 := 1;
end

procedure TopReact
begin
    GVar14 := 100;
    GVar15 := 3;
end

procedure BigUpReact
begin
    GVar14 := GVar14 + 25;
    call ReactToLevel();
end

procedure BigDownReact
begin
    GVar14 := GVar14 - 25;
    call ReactToLevel();
end

procedure UpReactLevel
begin
    GVar15 := GVar15 + 1;
    if (GVar15 > 3) then begin
        GVar15 := 3;
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    GVar15 := GVar15 - 1;
    if (GVar15 < 1) then begin
        GVar15 := 1;
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    variable LVar0 := 0;
    LVar0 := random(1, 6);
    if (LVar0 == 1) then begin
        GVar18 := "Thanks, bye.";
    end
    if (LVar0 == 2) then begin
        GVar18 := "Okay, thanks.";
    end
    if (LVar0 == 3) then begin
        GVar18 := "Hmm. Bye.";
    end
    if (LVar0 == 4) then begin
        GVar18 := "See ya.";
    end
    if (LVar0 == 5) then begin
        GVar18 := "Thanks.";
    end
    if (LVar0 == 6) then begin
        GVar18 := "Okay, bye.";
    end
    return 0;
    LVar0 := 0;
end

