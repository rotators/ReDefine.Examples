procedure start;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure map_exit_p_proc;

export variable modoc_grisham_box_obj;
export variable modoc_jo_box_obj;
export variable modoc_balthas_box_obj;
export variable generic_temp_box;
export variable modoc_jo_obj;
export variable brahmin_1_object;
export variable modoc_jerky_box_obj;
export variable jonny_obj;


procedure start
begin
end

procedure map_enter_p_proc
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    variable LVar3 := 0;
    debug_msg("start: map_enter_p_proc for MODOC");
    debug_msg("global_var(GVAR_LOAD_MAP_INDEX) == " + global_var(27));
    set_global_var(27, 0);
    if ((global_var(402) bwand 512) != 0) then begin
        override_map_start(15121 % 200, 15121 / 200, 0, 5);
    end
    else begin
        override_map_start(23533 % 200, 23533 / 200, 0, 5);
    end
    set_global_var(46, 27950);
    set_global_var(67, 9061);
    if (global_var(388) == 0) then begin
        if (global_var(388) < 1) then begin
            set_global_var(388, 1);
        end
        debug_msg("set_modoc_ending_default");
    end
    if (metarule(14, 0)) then begin
        display_msg(message_str(195, 100));
    end
    if (metarule(22, 0) == 0) then begin
        if (global_var(112) == 1) then begin
            set_global_var(112, 2);
        end
        if ((global_var(297) bwand 256) != 0) then begin
            set_global_var(297, global_var(297) bwand (-1 - 256));
        end
        LVar0 := random(15, 20);
        while (LVar0 > 0) do begin
            LVar0 := LVar0 - 1;
            LVar1 := create_object_sid(random(33555731, 33555736), 0, 0, 575);
            if (random(1, 2) == 1) then begin
                LVar3 := 20075;
            end
            else begin
                LVar3 := 20068;
            end
            LVar2 := tile_num_in_direction(LVar3, random(0, 5), random(1, 8));
            while (tile_in_tile_rect(19485, 19461, 21485, 21461, LVar2) == 0) do begin
                LVar2 := tile_num_in_direction(LVar3, random(0, 5), random(1, 8));
            end
            move_to(LVar1, LVar2, 0);
        end
        LVar0 := random(15, 20);
        while (LVar0 > 0) do begin
            LVar0 := LVar0 - 1;
            LVar1 := create_object_sid(random(33555753, 33555761), 0, 0, 575);
            if (random(1, 2) == 1) then begin
                LVar3 := 20075;
            end
            else begin
                LVar3 := 20068;
            end
            LVar2 := tile_num_in_direction(LVar3, random(0, 5), random(1, 8));
            while (tile_in_tile_rect(19485, 19461, 21485, 21461, LVar2) == 0) do begin
                LVar2 := tile_num_in_direction(LVar3, random(0, 5), random(1, 8));
            end
            move_to(LVar1, LVar2, 0);
        end
    end
    if ((get_month >= 3) and (get_month < 5)) then begin
        if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
            set_light_level(game_time_hour - 600 + 40);
        end
        else begin
            if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                set_light_level(100);
            end
            else begin
                if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                    set_light_level(100 - (game_time_hour - 1800));
                end
                else begin
                    set_light_level(40);
                end
            end
        end
    end
    else begin
        if ((get_month >= 5) and (get_month < 9)) then begin
            if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                set_light_level(game_time_hour - 500 + 40);
            end
            else begin
                if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1900));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 9) and (get_month < 11)) then begin
                if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                    set_light_level(game_time_hour - 600 + 40);
                end
                else begin
                    if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1800));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                    set_light_level(game_time_hour - 700 + 40);
                end
                else begin
                    if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1700));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
        end
    end
    debug_msg("end: map_enter_p_proc for MODOC");
    return 0;
    LVar0 := 0;
    LVar1 := 0;
    LVar2 := 0;
    LVar3 := 0;
end

procedure map_update_p_proc
begin
    if ((get_month >= 3) and (get_month < 5)) then begin
        if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
            set_light_level(game_time_hour - 600 + 40);
        end
        else begin
            if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                set_light_level(100);
            end
            else begin
                if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                    set_light_level(100 - (game_time_hour - 1800));
                end
                else begin
                    set_light_level(40);
                end
            end
        end
    end
    else begin
        if ((get_month >= 5) and (get_month < 9)) then begin
            if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                set_light_level(game_time_hour - 500 + 40);
            end
            else begin
                if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1900));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 9) and (get_month < 11)) then begin
                if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                    set_light_level(game_time_hour - 600 + 40);
                end
                else begin
                    if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1800));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                    set_light_level(game_time_hour - 700 + 40);
                end
                else begin
                    if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1700));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
        end
    end
end

procedure map_exit_p_proc
begin
    if ((((global_var(402) bwand 4) != 0) or (global_var(388) == 4)) == 0) then begin
        if (((global_var(402) bwand 1024) != 0) and (global_var(310) <= 0) or ((global_var(112) == 2) or (((global_var(403) - (game_time / (10 * 60 * 60 * 24))) <= 0) or ((global_var(403) - (game_time / (10 * 60 * 60 * 24))) > 31) and (global_var(403) > 0)))) then begin
            set_global_var(402, global_var(402) bwor 4);
        end
    end
    set_global_var(402, global_var(402) bwand (-1 - 512));
end

