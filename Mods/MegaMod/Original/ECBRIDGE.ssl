variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure map_exit_p_proc;
procedure Node998;
procedure Node999;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure killPlayer;
procedure killSelf;
procedure selfLeave;
procedure Do_cow;

variable Only_Once;
variable talkCount;
variable doWhat;
variable makeCow;
variable leaveCount;

procedure NodeRand;


procedure start
begin
    debug_msg("ECBRIDGE: in the start");
end

procedure critter_p_proc
begin
end

procedure combat_p_proc
begin
    script_overrides;
    if (critter_state(local_var(7)) == 1) then begin
        call Do_cow();
        terminate_combat;
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure talk_p_proc
begin
    Evil_Critter := 0;
    Slavery_Tolerant := 2;
    Karma_Perception := 10;
    if (not(local_var(8))) then begin
        start_gdialog(729, self_obj, 4, -1, -1);
        gsay_start;
        call Node001();
        gsay_end;
        end_dialogue;
        set_local_var(4, 0);
        if (doWhat == 1) then begin
            call killPlayer();
        end
        else begin
            if (doWhat == 2) then begin
                call killSelf();
            end
            else begin
                if (doWhat == 3) then begin
                    set_local_var(8, 20105);
                    call selfLeave();
                end
            end
        end
        talkCount := 50;
        doWhat := 0;
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(5, global_var(5) + 1);
        if (metarule(51, self_obj) == 2) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(2, 0);
                set_global_var(1, global_var(1) + 1);
                set_global_var(0, global_var(0) - -15);
                set_global_var(37, 0);
                set_global_var(38, 0);
                set_global_var(39, 0);
                set_global_var(40, 0);
                set_global_var(41, 0);
                set_global_var(42, 0);
                set_global_var(43, 0);
                set_global_var(44, 0);
                set_global_var(45, 0);
                if (global_var(0) >= 1000) then begin
                    set_global_var(37, 1);
                end
                else begin
                    if (global_var(0) >= 750) then begin
                        set_global_var(38, 1);
                    end
                    else begin
                        if (global_var(0) >= 500) then begin
                            set_global_var(39, 1);
                        end
                        else begin
                            if (global_var(0) >= 250) then begin
                                set_global_var(40, 1);
                            end
                            else begin
                                if (global_var(0) > -250) then begin
                                    set_global_var(41, 1);
                                end
                                else begin
                                    if (global_var(0) > -500) then begin
                                        set_global_var(42, 1);
                                    end
                                    else begin
                                        if (global_var(0) > -750) then begin
                                            set_global_var(43, 1);
                                        end
                                        else begin
                                            if (global_var(0) > -1000) then begin
                                                set_global_var(44, 1);
                                            end
                                            else begin
                                                set_global_var(45, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
            set_global_var(2, 1);
            set_global_var(3, 0);
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
            set_global_var(3, 1);
            set_global_var(2, 0);
        end
        set_global_var(0, global_var(0) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(729, 100));
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(4) == 0) then begin
        display_msg(message_str(729, 101));
    end
    else begin
        display_msg(message_str(729, 102));
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        script_overrides;
        float_msg(self_obj, message_str(729, random(201, 205)), 8);
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(6, 1);
    end
end

procedure map_enter_p_proc
begin
    Only_Once := 0;
    critter_add_trait(self_obj, 1, 6, 159);
    critter_add_trait(self_obj, 1, 5, 14);
    add_timer_event(self_obj, 0, 1);
    debug_msg("ECBRIDGE: in the map enter");
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        call Node011();
    end
    else begin
        if (fixed_param == 2) then begin
            call selfLeave();
        end
    end
end

procedure map_exit_p_proc
begin
    if (doWhat == 3) then begin
        destroy_object(self_obj);
    end
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
end

procedure Node001
begin
    gsay_reply(729, 104);
    giq_option(-3, 729, 105, Node002, 50);
    giq_option(-3, 729, 106, Node999, 50);
    giq_option(4, 729, 107, Node002, 50);
    giq_option(4, 729, 108, Node002, 50);
    giq_option(4, 729, 109, Node999, 50);
end

procedure Node002
begin
    gsay_reply(729, 110);
    giq_option(-3, 729, 111, Node009, 50);
    giq_option(-3, 729, obj_name(dude_obj) + message_str(729, 112), Node004, 50);
    giq_option(-3, 729, message_str(729, 113) + " " + obj_name(dude_obj) + " " + message_str(729, 172), Node008, 50);
    giq_option(-3, 729, 114, Node999, 50);
    giq_option(4, 729, obj_name(dude_obj) + " " + message_str(729, 115), Node003, 50);
    giq_option(4, 729, 116, Node009, 50);
    giq_option(4, 729, 117, Node009, 50);
    giq_option(4, 729, 118, Node009, 50);
    giq_option(4, 729, 119, Node009, 50);
    giq_option(4, 729, 120, Node009, 50);
    giq_option(4, 729, 121, Node003, 50);
    giq_option(4, 729, 122, Node999, 50);
end

procedure Node003
begin
    gsay_reply(729, 123);
    giq_option(-3, 729, 124, Node009, 50);
    giq_option(-3, 729, 125, Node004, 50);
    giq_option(-3, 729, 126, Node999, 50);
    if (not(global_var(233))) then begin
        giq_option(4, 729, 127, NodeRand, 50);
    end
    if (not(global_var(494) == 4)) then begin
        giq_option(4, 729, 128, NodeRand, 50);
    end
    if (global_var(494) == 4) then begin
        giq_option(4, 729, 129, NodeRand, 50);
    end
    if (global_var(494) == 5) then begin
        giq_option(4, 729, 130, NodeRand, 50);
    end
    giq_option(4, 729, 131, Node009, 50);
    giq_option(4, 729, 132, Node999, 50);
end

procedure Node004
begin
    if (get_critter_stat(dude_obj, 4) < 4) then begin
        gsay_reply(729, 133);
    end
    else begin
        gsay_reply(729, 134);
    end
    giq_option(-3, 729, 135, Node007, 50);
    giq_option(-3, 729, 136, Node009, 50);
    giq_option(-3, 729, 137, Node999, 50);
    giq_option(4, 729, 138, Node009, 50);
    giq_option(4, 729, 139, Node009, 50);
    giq_option(4, 729, 140, Node007, 50);
    giq_option(4, 729, 141, Node007, 50);
    giq_option(4, 729, 142, Node009, 50);
    giq_option(4, 729, 143, Node007, 50);
    if (get_critter_stat(dude_obj, 6) == 10) then begin
        giq_option(7, 729, 144, Node008, 50);
    end
    else begin
        giq_option(7, 729, 145, Node008, 50);
    end
end

procedure Node005
begin
    gsay_reply(729, 146);
    giq_option(4, 729, 147, Node009, 50);
    giq_option(4, 729, 148, Node009, 50);
    giq_option(4, 729, 149, Node007, 50);
    giq_option(4, 729, 150, Node009, 50);
    giq_option(4, 729, 151, Node009, 50);
    giq_option(4, 729, 152, Node009, 50);
    giq_option(4, 729, 153, Node009, 50);
    giq_option(7, 729, 154, Node008, 50);
end

procedure Node006
begin
    gsay_reply(729, 155);
    giq_option(4, 729, 156, Node009, 50);
    giq_option(4, 729, 157, Node009, 50);
    giq_option(4, 729, 158, Node007, 50);
    giq_option(4, 729, 159, Node009, 50);
    giq_option(4, 729, 160, Node007, 50);
    giq_option(4, 729, 161, Node009, 50);
    giq_option(4, 729, 162, Node009, 50);
    giq_option(4, 729, 163, Node008, 50);
end

procedure Node007
begin
    doWhat := 3;
    gsay_reply(729, 164);
    giq_option(-3, 729, 165, Node999, 50);
    giq_option(-3, 729, 166, Node999, 50);
    giq_option(4, 729, 167, Node999, 50);
end

procedure Node008
begin
    give_exp_points(500);
    display_msg(message_str(14, 100) + 500 + message_str(14, 101));
    doWhat := 2;
    call Node999();
end

procedure Node009
begin
    doWhat := 1;
    call Node999();
end

procedure Node010
begin
end

procedure Node011
begin
    float_msg(dude_obj, message_str(729, 171), 0);
end

procedure killPlayer
begin
    float_msg(self_obj, message_str(729, 170), 0);
    float_msg(dude_obj, message_str(729, 200), 2);
    critter_dmg(dude_obj, 10000, 0);
end

procedure killSelf
begin
    float_msg(self_obj, message_str(729, 200), 2);
    critter_dmg(self_obj, 10000, 0);
end

procedure selfLeave
begin
    debug_msg("ECBRIDGE: should be leaving going to tile: " + local_var(8));
    if ((local_var(8) == 20105) and (tile_num(self_obj) == 20105)) then begin
        set_local_var(8, 15693);
    end
    if (tile_num(self_obj) != local_var(8)) then begin
        if (not(anim_busy(self_obj))) then begin
            reg_anim_func(1, 1);
            animate_move_obj_to_tile(self_obj, local_var(8), 0);
            reg_anim_func(3, 0);
        end
        else begin
            if (game_time > talkCount) then begin
                float_msg(self_obj, message_str(729, 173 + leaveCount), 0);
                leaveCount := leaveCount + 1;
                if (leaveCount > 5) then begin
                    leaveCount := 1;
                end
                talkCount := game_time + (10 * 3);
            end
        end
    end
    else begin
        destroy_object(self_obj);
    end
    add_timer_event(self_obj, game_ticks(2), 2);
end

procedure Do_cow
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    LVar1 := tile_num_in_direction(tile_num(self_obj), 2, 1);
    LVar0 := create_object_sid(16777226, LVar1, 0, 733);
    critter_attempt_placement(LVar0, LVar1, 0);
    set_local_var(7, LVar0);
    return 0;
    LVar0 := 0;
    LVar1 := 0;
end

procedure NodeRand
begin
    variable LVar0 := 0;
    LVar0 := random(1, 3);
    if (LVar0 == 1) then begin
        call Node004();
    end
    else begin
        if (LVar0 == 2) then begin
            call Node005();
        end
        else begin
            if (LVar0 == 3) then begin
                call Node006();
            end
        end
    end
    return 0;
    LVar0 := 0;
end

