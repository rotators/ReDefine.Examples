variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node998;
procedure Node999;
procedure Node001;

import variable brahmin_1_object;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if (has_trait(1, self_obj, 666)) then begin
            if ((local_var(6) > 0) or (global_var(52) <= -1000)) then begin
                set_local_var(6, 1);
                if (critter_is_fleeing(self_obj)) then begin
                    if (anim_busy(self_obj) == 0) then begin
                        if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                            if (anim_busy(self_obj) == 0) then begin
                                global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                global_temp := (global_temp + 1) % 6;
                                while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                                    debug_msg("flee loop: rot == " + global_temp);
                                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                    global_temp := (global_temp + 1) % 6;
                                end
                            end
                        end
                    end
                end
                else begin
                    attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
                end
            end
        end
    end
    if ((game_time > map_var(2)) and (tile_num(self_obj) != local_var(5))) then begin
        set_map_var(2, game_time + (random(1, 5) * (60 * 10)));
    end
    else begin
        if (anim_busy(self_obj) == 0) then begin
            if ((game_time_hour <= 600) or (game_time_hour >= 1800)) then begin
                if (tile_distance(tile_num(self_obj), global_var(67)) > 1) then begin
                    if ((tile_num(self_obj) != global_var(67)) and (global_var(67) != 0)) then begin
                        if ((dest_tile == global_var(67)) and (step_tile < 0)) then begin
                            step_tile := step_tile + 1;
                        end
                        else begin
                            if (anim_busy(self_obj) == 0) then begin
                                dest_tile := global_var(67);
                                step_tile := global_var(67);
                                animate_move_obj_to_tile(self_obj, step_tile, 0);
                                while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), global_var(67)) >= tile_distance(step_tile, global_var(67)))) do begin
                                    step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), (1 % tile_distance(step_tile, tile_num(self_obj))) + 1);
                                    animate_move_obj_to_tile(self_obj, step_tile, 0);
                                end
                                if (anim_busy(self_obj) == 0) then begin
                                    if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
                                        if (anim_busy(self_obj) == 0) then begin
                                            global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                            global_temp := (global_temp + 1) % 6;
                                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                debug_msg("flee loop: rot == " + global_temp);
                                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                global_temp := (global_temp + 1) % 6;
                                            end
                                        end
                                    end
                                    else begin
                                        step_tile := -10;
                                    end
                                end
                            end
                            else begin
                                if (tile_distance(tile_num(self_obj), global_var(67)) < tile_distance(dest_tile, global_var(67))) then begin
                                    reg_anim_func(2, self_obj);
                                end
                            end
                        end
                    end
                    if (((global_var(297) bwand 128) != 0) == 0) then begin
                        set_global_var(297, global_var(297) bwor 128);
                        float_msg(self_obj, message_str(554, random(280, 282)), 8);
                    end
                end
                else begin
                    if (has_trait(1, self_obj, 666) == 1) then begin
                        set_obj_visibility(self_obj, 1);
                    end
                end
            end
            else begin
                if ((global_var(297) bwand 128) != 0) then begin
                    if (has_trait(1, self_obj, 666) == 0) then begin
                        set_obj_visibility(self_obj, 0);
                    end
                    set_global_var(297, global_var(297) bwand (-1 - 128));
                end
                else begin
                    if (tile_num(self_obj) != local_var(5)) then begin
                        if (tile_distance(tile_num(self_obj), local_var(5)) > 10) then begin
                            if ((tile_num(self_obj) != tile_num_in_direction(local_var(5), rotation_to_tile(local_var(5), tile_num(self_obj)), 1)) and (tile_num_in_direction(local_var(5), rotation_to_tile(local_var(5), tile_num(self_obj)), 1) != 0)) then begin
                                if ((dest_tile == tile_num_in_direction(local_var(5), rotation_to_tile(local_var(5), tile_num(self_obj)), 1)) and (step_tile < 0)) then begin
                                    step_tile := step_tile + 1;
                                end
                                else begin
                                    if (anim_busy(self_obj) == 0) then begin
                                        dest_tile := tile_num_in_direction(local_var(5), rotation_to_tile(local_var(5), tile_num(self_obj)), 1);
                                        step_tile := tile_num_in_direction(local_var(5), rotation_to_tile(local_var(5), tile_num(self_obj)), 1);
                                        animate_move_obj_to_tile(self_obj, step_tile, 0);
                                        while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), tile_num_in_direction(local_var(5), rotation_to_tile(local_var(5), tile_num(self_obj)), 1)) >= tile_distance(step_tile, tile_num_in_direction(local_var(5), rotation_to_tile(local_var(5), tile_num(self_obj)), 1)))) do begin
                                            step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), (1 % tile_distance(step_tile, tile_num(self_obj))) + 1);
                                            animate_move_obj_to_tile(self_obj, step_tile, 0);
                                        end
                                        if (anim_busy(self_obj) == 0) then begin
                                            if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
                                                if (anim_busy(self_obj) == 0) then begin
                                                    global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                    global_temp := (global_temp + 1) % 6;
                                                    while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                        debug_msg("flee loop: rot == " + global_temp);
                                                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                        global_temp := (global_temp + 1) % 6;
                                                    end
                                                end
                                            end
                                            else begin
                                                step_tile := -10;
                                            end
                                        end
                                    end
                                    else begin
                                        if (tile_distance(tile_num(self_obj), tile_num_in_direction(local_var(5), rotation_to_tile(local_var(5), tile_num(self_obj)), 1)) < tile_distance(dest_tile, tile_num_in_direction(local_var(5), rotation_to_tile(local_var(5), tile_num(self_obj)), 1))) then begin
                                            reg_anim_func(2, self_obj);
                                        end
                                    end
                                end
                            end
                        end
                        else begin
                            if (tile_num(self_obj) != local_var(5)) then begin
                                if ((tile_num(self_obj) != tile_num_in_direction(local_var(5), rotation_to_tile(local_var(5), tile_num(self_obj)), 1)) and (tile_num_in_direction(local_var(5), rotation_to_tile(local_var(5), tile_num(self_obj)), 1) != 0)) then begin
                                    if ((dest_tile == tile_num_in_direction(local_var(5), rotation_to_tile(local_var(5), tile_num(self_obj)), 1)) and (step_tile < 0)) then begin
                                        step_tile := step_tile + 1;
                                    end
                                    else begin
                                        if (anim_busy(self_obj) == 0) then begin
                                            dest_tile := tile_num_in_direction(local_var(5), rotation_to_tile(local_var(5), tile_num(self_obj)), 1);
                                            step_tile := tile_num_in_direction(local_var(5), rotation_to_tile(local_var(5), tile_num(self_obj)), 1);
                                            animate_move_obj_to_tile(self_obj, step_tile, 0);
                                            while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), tile_num_in_direction(local_var(5), rotation_to_tile(local_var(5), tile_num(self_obj)), 1)) >= tile_distance(step_tile, tile_num_in_direction(local_var(5), rotation_to_tile(local_var(5), tile_num(self_obj)), 1)))) do begin
                                                step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), (1 % tile_distance(step_tile, tile_num(self_obj))) + 1);
                                                animate_move_obj_to_tile(self_obj, step_tile, 0);
                                            end
                                            if (anim_busy(self_obj) == 0) then begin
                                                if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
                                                    if (anim_busy(self_obj) == 0) then begin
                                                        global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                        global_temp := (global_temp + 1) % 6;
                                                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                            debug_msg("flee loop: rot == " + global_temp);
                                                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                            global_temp := (global_temp + 1) % 6;
                                                        end
                                                    end
                                                end
                                                else begin
                                                    step_tile := -10;
                                                end
                                            end
                                        end
                                        else begin
                                            if (tile_distance(tile_num(self_obj), tile_num_in_direction(local_var(5), rotation_to_tile(local_var(5), tile_num(self_obj)), 1)) < tile_distance(dest_tile, tile_num_in_direction(local_var(5), rotation_to_tile(local_var(5), tile_num(self_obj)), 1))) then begin
                                                reg_anim_func(2, self_obj);
                                            end
                                        end
                                    end
                                end
                            end
                            else begin
                                if ((tile_num(self_obj) != tile_num_in_direction(local_var(5), rotation_to_tile(20075, local_var(5)), 1)) and (tile_num_in_direction(local_var(5), rotation_to_tile(20075, local_var(5)), 1) != 0)) then begin
                                    if ((dest_tile == tile_num_in_direction(local_var(5), rotation_to_tile(20075, local_var(5)), 1)) and (step_tile < 0)) then begin
                                        step_tile := step_tile + 1;
                                    end
                                    else begin
                                        if (anim_busy(self_obj) == 0) then begin
                                            dest_tile := tile_num_in_direction(local_var(5), rotation_to_tile(20075, local_var(5)), 1);
                                            step_tile := tile_num_in_direction(local_var(5), rotation_to_tile(20075, local_var(5)), 1);
                                            animate_move_obj_to_tile(self_obj, step_tile, 0);
                                            while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), tile_num_in_direction(local_var(5), rotation_to_tile(20075, local_var(5)), 1)) >= tile_distance(step_tile, tile_num_in_direction(local_var(5), rotation_to_tile(20075, local_var(5)), 1)))) do begin
                                                step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), (1 % tile_distance(step_tile, tile_num(self_obj))) + 1);
                                                animate_move_obj_to_tile(self_obj, step_tile, 0);
                                            end
                                            if (anim_busy(self_obj) == 0) then begin
                                                if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
                                                    if (anim_busy(self_obj) == 0) then begin
                                                        global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                        global_temp := (global_temp + 1) % 6;
                                                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                            debug_msg("flee loop: rot == " + global_temp);
                                                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                            global_temp := (global_temp + 1) % 6;
                                                        end
                                                    end
                                                end
                                                else begin
                                                    step_tile := -10;
                                                end
                                            end
                                        end
                                        else begin
                                            if (tile_distance(tile_num(self_obj), tile_num_in_direction(local_var(5), rotation_to_tile(20075, local_var(5)), 1)) < tile_distance(dest_tile, tile_num_in_direction(local_var(5), rotation_to_tile(20075, local_var(5)), 1))) then begin
                                                reg_anim_func(2, self_obj);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                    else begin
                        if (has_trait(1, self_obj, 10) == rotation_to_tile(tile_num(self_obj), local_var(5))) then begin
                            if ((game_time > map_var(2)) and (brahmin_1_object != 0) and ((((global_var(291) - (global_var(291) % 100)) == 200) or ((global_var(291) - (global_var(291) % 100)) == 300)) == 0)) then begin
                                if (tile_num(dude_obj) == 20075) then begin
                                    if (local_var(4) == 0) then begin
                                        float_msg(self_obj, message_str(554, random(201 - (get_critter_stat(dude_obj, 34) == 0), 202 + (get_critter_stat(dude_obj, 34) == 1))), 8);
                                        set_local_var(4, game_time + (15 * 10));
                                    end
                                    else begin
                                        if (game_time >= local_var(4)) then begin
                                            call Node998();
                                        end
                                    end
                                end
                                else begin
                                    if (local_var(4) != 0) then begin
                                        set_local_var(4, 0);
                                    end
                                    else begin
                                        if (tile_num(brahmin_1_object) == 20075) then begin
                                            use_obj(brahmin_1_object);
                                            set_local_var(7, local_var(7) - 1);
                                            set_map_var(2, game_time + (random(5, 10) * 10));
                                            if (critter_state(brahmin_1_object) == 1) then begin
                                                if ((random(1, 5 + local_var(7)) <= 1) or (local_var(7) <= -5)) then begin
                                                    set_map_var(2, game_time + (random(5, 15) * (60 * 10)));
                                                    brahmin_1_object := 0;
                                                    set_local_var(7, random(3, 7));
                                                end
                                            end
                                            else begin
                                                if (local_var(7) <= 0) then begin
                                                    if (obj_pid(brahmin_1_object) != 16777407) then begin
                                                        float_msg(self_obj, message_str(554, random(100, 105)), 8);
                                                    end
                                                    else begin
                                                        float_msg(self_obj, message_str(554, 120), 8);
                                                    end
                                                    critter_dmg(brahmin_1_object, 100, 0);
                                                end
                                                else begin
                                                    add_timer_event(brahmin_1_object, 7, 666);
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                        else begin
                            anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), local_var(5)));
                        end
                    end
                end
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        call Node998();
    end
end

procedure talk_p_proc
begin
    debug_msg(" my tile == " + tile_num(self_obj));
    call Node001();
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(5, global_var(5) + 1);
        if (metarule(51, self_obj) == 2) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(2, 0);
                set_global_var(1, global_var(1) + 1);
                set_global_var(0, global_var(0) - -15);
                set_global_var(37, 0);
                set_global_var(38, 0);
                set_global_var(39, 0);
                set_global_var(40, 0);
                set_global_var(41, 0);
                set_global_var(42, 0);
                set_global_var(43, 0);
                set_global_var(44, 0);
                set_global_var(45, 0);
                if (global_var(0) >= 1000) then begin
                    set_global_var(37, 1);
                end
                else begin
                    if (global_var(0) >= 750) then begin
                        set_global_var(38, 1);
                    end
                    else begin
                        if (global_var(0) >= 500) then begin
                            set_global_var(39, 1);
                        end
                        else begin
                            if (global_var(0) >= 250) then begin
                                set_global_var(40, 1);
                            end
                            else begin
                                if (global_var(0) > -250) then begin
                                    set_global_var(41, 1);
                                end
                                else begin
                                    if (global_var(0) > -500) then begin
                                        set_global_var(42, 1);
                                    end
                                    else begin
                                        if (global_var(0) > -750) then begin
                                            set_global_var(43, 1);
                                        end
                                        else begin
                                            if (global_var(0) > -1000) then begin
                                                set_global_var(44, 1);
                                            end
                                            else begin
                                                set_global_var(45, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
            set_global_var(2, 1);
            set_global_var(3, 0);
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
            set_global_var(3, 1);
            set_global_var(2, 0);
        end
        set_global_var(0, global_var(0) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(554, 250));
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(554, random(251, 252 + (tile_distance(tile_num(dude_obj), tile_num(self_obj)) > 5))));
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(6, 2);
    end
end

procedure map_enter_p_proc
begin
    if ((cur_map_index == 19) and (elevation(self_obj) != ((global_var(297) bwand 1) != 0))) then begin
        move_to(self_obj, tile_num(self_obj), (global_var(297) bwand 1) != 0);
    end
    if (metarule(22, 0) == 0) then begin
        if (metarule(14, 0)) then begin
            set_local_var(5, tile_num(self_obj));
        end
        if (local_var(7) <= 0) then begin
            set_local_var(7, random(3, 7));
        end
        set_map_var(2, game_time + (random(0, 10) * (60 * 10)));
        if ((game_time_hour <= 600) or (game_time_hour >= 1800)) then begin
            critter_attempt_placement(self_obj, global_var(67), elevation(self_obj));
        end
        else begin
            critter_attempt_placement(self_obj, local_var(5), elevation(self_obj));
        end
    end
    critter_add_trait(self_obj, 1, 6, 28);
    critter_add_trait(self_obj, 1, 5, 14);
end

procedure timed_event_p_proc
begin
end

procedure Node998
begin
    if (local_var(6) == 0) then begin
        set_local_var(6, 2);
    end
end

procedure Node999
begin
end

procedure Node001
begin
    float_msg(self_obj, message_str(554, random(300, 312)), 8);
end

