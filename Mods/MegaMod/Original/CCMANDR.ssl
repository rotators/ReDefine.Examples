variable tmp_gen_rep;
variable global_temp;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure timed_event_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node998;
procedure Node999;

import variable commander_ptr;
import variable Commander_Locker_Ptr;

variable Only_Once;


procedure start
begin
    commander_ptr := self_obj;
end

procedure critter_p_proc
begin
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if (local_var(5) == 2) then begin
            set_local_var(5, 1);
            attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
        end
        else begin
            if (global_var(1151) == 2) then begin
                metarule3(108, tile_num(dude_obj), 0, 0);
                set_global_var(1151, 3);
                dialogue_system_enter;
            end
            else begin
                if ((global_var(511) > 0) and (local_var(11) == 0)) then begin
                    dialogue_system_enter;
                end
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(511, 1);
        set_local_var(11, 1);
        float_msg(self_obj, message_str(721, 105), 8);
    end
end

procedure talk_p_proc
begin
    start_gdialog(721, self_obj, 4, -1, -1);
    gsay_start;
    if (global_var(1151) == 3) then begin
        metarule3(108, tile_num(dude_obj), 0, 0);
        call Node009();
    end
    else begin
        if (global_var(511) > 0) then begin
            call Node006();
        end
        else begin
            if (map_var(5) == 1) then begin
                call Node004();
            end
            else begin
                if (map_var(6) == 1) then begin
                    call Node003();
                end
                else begin
                    if (local_var(4) == 0) then begin
                        set_local_var(4, 1);
                        call Node001();
                    end
                    else begin
                        call Node002();
                    end
                end
            end
        end
    end
    gsay_end;
    end_dialogue;
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(4, global_var(4) + 1);
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
            set_global_var(3, 1);
            set_global_var(2, 0);
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
            set_global_var(2, 1);
            set_global_var(3, 0);
        end
        set_global_var(0, global_var(0) + 5);
        debug_msg("Player gains " + 5 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        tmp_gen_rep := global_var(0);
        if (has_trait(0, dude_obj, 95)) then begin
            tmp_gen_rep := global_var(0) * 2;
        end
        if (tmp_gen_rep >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (tmp_gen_rep >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (tmp_gen_rep >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (tmp_gen_rep >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(628, global_var(628) + 2);
        debug_msg("Added " + 2 + " to Town Rep");
    end
    commander_ptr := 0;
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        set_local_var(7, 1);
        display_msg(message_str(721, 100));
    end
    else begin
        display_msg(message_str(721, 101));
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(721, 102));
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        call Node998();
    end
end

procedure map_enter_p_proc
begin
    commander_ptr := self_obj;
    Only_Once := 0;
    critter_add_trait(self_obj, 1, 6, 153);
    critter_add_trait(self_obj, 1, 5, 175);
end

procedure map_update_p_proc
begin
    commander_ptr := self_obj;
end

procedure timed_event_p_proc
begin
    if (fixed_param == 0) then begin
        float_msg(self_obj, message_str(721, 124), 8);
    end
    else begin
        if (fixed_param == 1) then begin
            float_msg(self_obj, message_str(721, 125), 8);
        end
    end
end

procedure Node001
begin
    if ((metarule(16, 0) - 1 - (party_member_obj(16777687) != 0)) >= 1) then begin
        gsay_reply(721, 103);
        giq_option(1, 721, 105, Node998, 51);
    end
    else begin
        gsay_reply(721, 104);
        giq_option(1, 721, 106, Node999, 50);
    end
end

procedure Node002
begin
    if (local_var(8) == 0) then begin
        set_local_var(8, 1);
        gsay_reply(721, 107);
        giq_option(1, 721, 109, Node999, 50);
    end
    else begin
        gsay_reply(721, 108);
        giq_option(1, 721, 110, Node998, 51);
    end
end

procedure Node003
begin
    set_local_var(10, 1);
    set_map_var(8, 1);
    obj_unlock(Commander_Locker_Ptr);
    gsay_reply(721, 111);
    giq_option(1, 721, 112, Node999, 50);
end

procedure Node004
begin
    gsay_reply(721, 113);
    giq_option(1, 721, 114, Node999, 50);
end

procedure Node005
begin
end

procedure Node006
begin
    set_local_var(11, 1);
    gsay_reply(721, 117);
    giq_option(-3, 721, 118, Node007, 51);
    giq_option(-3, 721, 119, Node998, 51);
    giq_option(4, 721, 120, Node007, 51);
    giq_option(4, 721, 121, Node998, 51);
end

procedure Node007
begin
    gsay_reply(721, 122);
    giq_option(1, 721, 123, Node998, 51);
end

procedure Node008
begin
end

procedure Node009
begin
    gsay_reply(721, 200);
    giq_option(4, 721, 201, Node010, 51);
    giq_option(4, 721, 202, Node011, 50);
    giq_option(4, 721, 203, Node014, 50);
    giq_option(4, 721, 204, Node014, 50);
    giq_option(4, 721, 205, Node017, 50);
end

procedure Node010
begin
    gsay_reply(721, 210);
    giq_option(4, 721, message_str(14, 350), Node998, 50);
end

procedure Node011
begin
    gsay_reply(721, 220);
    giq_option(4, 721, 221, Node012, 50);
    giq_option(4, 721, 222, Node012, 50);
    giq_option(4, 721, 223, Node013, 50);
end

procedure Node012
begin
    gsay_reply(721, 230);
    giq_option(4, 721, message_str(14, 350), Node998, 50);
end

procedure Node013
begin
    gsay_reply(721, 240);
    giq_option(4, 721, message_str(14, 350), Node998, 50);
end

procedure Node014
begin
    gsay_reply(721, 250);
    giq_option(4, 721, 251, Node015, 50);
    giq_option(4, 721, 252, Node016, 50);
    giq_option(4, 721, 253, Node016, 50);
    giq_option(4, 721, 254, Node017, 50);
end

procedure Node015
begin
    gsay_reply(721, 260);
    giq_option(4, 721, message_str(14, 350), Node998, 50);
end

procedure Node016
begin
    gsay_reply(721, 270);
    giq_option(4, 721, message_str(14, 350), Node998, 50);
end

procedure Node017
begin
    gsay_reply(721, 280);
    giq_option(4, 721, 281, Node018, 50);
    giq_option(4, 721, 282, Node019, 50);
    giq_option(4, 721, 283, Node020, 50);
    giq_option(4, 721, 284, Node021, 50);
    giq_option(4, 721, 285, Node022, 50);
end

procedure Node018
begin
    gsay_reply(721, 290);
    giq_option(4, 721, 282, Node019, 50);
    giq_option(4, 721, 283, Node020, 50);
    giq_option(4, 721, 284, Node021, 50);
    giq_option(4, 721, 285, Node022, 50);
end

procedure Node019
begin
    gsay_reply(721, 300);
    giq_option(4, 721, 281, Node018, 50);
    giq_option(4, 721, 283, Node020, 50);
    giq_option(4, 721, 284, Node021, 50);
    giq_option(4, 721, 285, Node022, 50);
end

procedure Node020
begin
    gsay_reply(721, 310);
    giq_option(4, 721, 281, Node018, 50);
    giq_option(4, 721, 282, Node019, 50);
    giq_option(4, 721, 284, Node021, 50);
    giq_option(4, 721, 285, Node022, 50);
end

procedure Node021
begin
    gsay_reply(721, 320);
    giq_option(4, 721, 281, Node018, 50);
    giq_option(4, 721, 282, Node019, 50);
    giq_option(4, 721, 283, Node020, 50);
    giq_option(4, 721, 285, Node022, 50);
end

procedure Node022
begin
    gsay_reply(721, 330);
    giq_option(4, 721, message_str(14, 350), Node998, 50);
end

procedure Node998
begin
    set_local_var(5, 2);
    set_global_var(511, 1);
end

procedure Node999
begin
end

