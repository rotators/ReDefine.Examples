variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure push_p_proc;
procedure timed_event_p_proc;
procedure map_update_p_proc;
procedure bob_is_drunk;
procedure NodeBarter;
procedure Node990;
procedure Node998;
procedure Node999;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;

variable Only_Once;
variable mybooze;
variable num_of_bottles;
variable stored_node;
variable drinking;
variable drunk;

procedure move_to_still;
procedure move_to_dwntwn1;
procedure move_to_dwntwn2;
procedure bob_booze;
procedure bob_it_aint_free;
procedure bob_spares;
procedure bob_coil_pipe;
procedure bob_valve;
procedure drink;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if ((local_var(5) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
    if ((global_var(203) <= -1) and obj_can_see_obj(self_obj, dude_obj)) then begin
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
    if ((has_trait(1, self_obj, 10) != 2) and (anim_busy(self_obj) == 0)) then begin
        anim(self_obj, 1000, 2);
    end
    if ((drinking == 1) and (anim_busy(self_obj) == 0)) then begin
        if (tile_num(self_obj) != local_var(10)) then begin
            if ((tile_num(self_obj) != local_var(10)) and (local_var(10) != 0)) then begin
                if ((dest_tile == local_var(10)) and (step_tile < 0)) then begin
                    step_tile := step_tile + 1;
                end
                else begin
                    if (anim_busy(self_obj) == 0) then begin
                        dest_tile := local_var(10);
                        step_tile := local_var(10);
                        animate_move_obj_to_tile(self_obj, step_tile, 0);
                        debug_msg("move_to_point: self_tile == " + tile_num(self_obj));
                        while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), local_var(10)) >= tile_distance(step_tile, local_var(10)))) do begin
                            step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), 1 % tile_distance(step_tile, tile_num(self_obj)));
                            debug_msg("move_to_point: step_tile == " + step_tile);
                            animate_move_obj_to_tile(self_obj, step_tile, 0);
                        end
                        if (anim_busy(self_obj) == 0) then begin
                            if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
                                if (anim_busy(self_obj) == 0) then begin
                                    global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                    global_temp := (global_temp + 1) % 6;
                                    while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                        debug_msg("flee loop: rot == " + global_temp);
                                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                        global_temp := (global_temp + 1) % 6;
                                    end
                                end
                            end
                            else begin
                                step_tile := -10;
                            end
                        end
                    end
                    else begin
                        if (tile_distance(tile_num(self_obj), local_var(10)) < tile_distance(dest_tile, local_var(10))) then begin
                            reg_anim_func(2, self_obj);
                        end
                    end
                end
            end
        end
        else begin
            game_ui_enable;
            dialogue_system_enter;
        end
    end
    if (cur_map_index == 13) then begin
        if (global_var(661) == 1) then begin
            dialogue_system_enter;
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure talk_p_proc
begin
    in_dialog := 1;
    if (drunk == 0) then begin
        if (local_var(6) == 1) then begin
            float_msg(self_obj, message_str(74, 106), 2);
        end
        else begin
            if (drinking == 1) then begin
                drinking := 0;
                start_gdialog(74, self_obj, 4, -1, -1);
                gsay_start;
                call stored_node();
                gsay_end;
                end_dialogue;
            end
            else begin
                if ((global_var(661) == 1) and (cur_map_index == 13)) then begin
                    start_gdialog(74, self_obj, 4, -1, -1);
                    gsay_start;
                    call Node016();
                    gsay_end;
                    end_dialogue;
                end
                else begin
                    if (local_var(4) == 0) then begin
                        start_gdialog(74, self_obj, 4, -1, -1);
                        gsay_start;
                        call Node001();
                        gsay_end;
                        end_dialogue;
                    end
                    else begin
                        if (local_var(4) > 0) then begin
                            start_gdialog(74, self_obj, 4, -1, -1);
                            gsay_start;
                            call Node012();
                            gsay_end;
                            end_dialogue;
                        end
                    end
                end
            end
        end
    end
    else begin
        display_msg(message_str(74, 616));
    end
    in_dialog := 0;
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(5, global_var(5) + 1);
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
            set_global_var(2, 1);
            set_global_var(3, 0);
        end
        if (metarule(51, self_obj) == 2) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(2, 0);
                set_global_var(1, global_var(1) + 1);
                set_global_var(0, global_var(0) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(37, 0);
                set_global_var(38, 0);
                set_global_var(39, 0);
                set_global_var(40, 0);
                set_global_var(41, 0);
                set_global_var(42, 0);
                set_global_var(43, 0);
                set_global_var(44, 0);
                set_global_var(45, 0);
                if (global_var(0) >= 1000) then begin
                    set_global_var(37, 1);
                end
                else begin
                    if (global_var(0) >= 750) then begin
                        set_global_var(38, 1);
                    end
                    else begin
                        if (global_var(0) >= 500) then begin
                            set_global_var(39, 1);
                        end
                        else begin
                            if (global_var(0) >= 250) then begin
                                set_global_var(40, 1);
                            end
                            else begin
                                if (global_var(0) > -250) then begin
                                    set_global_var(41, 1);
                                end
                                else begin
                                    if (global_var(0) > -500) then begin
                                        set_global_var(42, 1);
                                    end
                                    else begin
                                        if (global_var(0) > -750) then begin
                                            set_global_var(43, 1);
                                        end
                                        else begin
                                            if (global_var(0) > -1000) then begin
                                                set_global_var(44, 1);
                                            end
                                            else begin
                                                set_global_var(45, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(48, global_var(48) + -8);
                debug_msg("Added " + -8 + " to Town Rep");
            end
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
            set_global_var(3, 1);
            set_global_var(2, 0);
        end
        set_global_var(0, global_var(0) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(48, global_var(48) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(74, 100));
end

procedure description_p_proc
begin
    script_overrides;
    if (get_critter_stat(dude_obj, 1) <= 8) then begin
        display_msg(message_str(74, 102));
    end
    else begin
        display_msg(message_str(74, 104));
    end
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(6, 1);
    end
end

procedure map_enter_p_proc
begin
    Only_Once := 0;
    critter_add_trait(self_obj, 1, 6, 215);
    critter_add_trait(self_obj, 1, 5, 24);
    if (metarule(14, 0)) then begin
        set_local_var(10, tile_num(self_obj));
    end
    if (cur_map_index == 13) then begin
        if (global_var(661) == 1) then begin
            set_obj_visibility(self_obj, 0);
        end
        else begin
            set_obj_visibility(self_obj, 1);
        end
    end
    if (global_var(661) == 3) then begin
        set_local_var(6, 1);
    end
    if ((game_time - local_var(9)) >= (24 * (60 * (60 * 10)))) then begin
        set_local_var(9, game_time);
        num_of_bottles := obj_is_carrying_obj_pid(self_obj, 125);
        if (num_of_bottles < 2) then begin
            mybooze := create_object_sid(125, 0, 0, -1);
            add_mult_objs_to_inven(self_obj, mybooze, 2 - num_of_bottles);
        end
    end
end

procedure push_p_proc
begin
    script_overrides;
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        float_msg(self_obj, " ", 8);
        float_msg(self_obj, message_str(74, 610), 8);
        add_timer_event(self_obj, 5 * 10, 2);
    end
    else begin
        if (fixed_param == 2) then begin
            float_msg(self_obj, " ", 8);
            float_msg(self_obj, message_str(74, 611), 8);
            add_timer_event(self_obj, 5 * 10, 3);
        end
        else begin
            if (fixed_param == 3) then begin
                float_msg(self_obj, " ", 8);
                float_msg(self_obj, message_str(74, 612), 8);
                add_timer_event(self_obj, 5 * 10, 4);
            end
            else begin
                if (fixed_param == 4) then begin
                    float_msg(self_obj, " ", 8);
                    float_msg(self_obj, message_str(74, 613), 8);
                    add_timer_event(self_obj, 5 * 10, 5);
                end
                else begin
                    if (fixed_param == 5) then begin
                        float_msg(self_obj, " ", 8);
                        float_msg(self_obj, message_str(74, 614), 8);
                        add_timer_event(self_obj, 5 * 10, 6);
                    end
                    else begin
                        if (fixed_param == 6) then begin
                            reg_anim_func(2, self_obj);
                            reg_anim_func(1, 1);
                            reg_anim_animate(self_obj, 37, -1);
                            reg_anim_func(3, 0);
                            add_timer_event(self_obj, 5 * 10, 7);
                        end
                        else begin
                            if (fixed_param == 7) then begin
                                float_msg(self_obj, " ", 8);
                                float_msg(self_obj, message_str(74, 615), 8);
                                drunk := 0;
                            end
                        end
                    end
                end
            end
        end
    end
    if (fixed_param == 100) then begin
        mybooze := create_object_sid(125, 0, 0, -1);
        use_obj_on_obj(mybooze, dude_obj);
        add_timer_event(self_obj, 10, 101);
    end
    else begin
        if (fixed_param == 101) then begin
            drinking := 1;
        end
    end
end

procedure map_update_p_proc
begin
    if ((game_time - local_var(9)) >= (24 * (60 * (60 * 10)))) then begin
        set_local_var(9, game_time);
        num_of_bottles := obj_is_carrying_obj_pid(self_obj, 125);
        if (num_of_bottles < 2) then begin
            mybooze := create_object_sid(125, 0, 0, -1);
            add_mult_objs_to_inven(self_obj, mybooze, 2 - num_of_bottles);
        end
    end
end

procedure bob_is_drunk
begin
    variable LVar0 := 0;
    LVar0 := sfx_build_char_name(self_obj, 20, 1);
    reg_anim_func(2, self_obj);
    reg_anim_func(1, 1);
    reg_anim_animate(self_obj, 20, -1);
    reg_anim_play_sfx(self_obj, LVar0, 0);
    reg_anim_func(3, 0);
    drunk := 1;
    add_timer_event(self_obj, 5 * 10, 1);
end

procedure NodeBarter
begin
    gsay_reply(74, 600);
    giq_option(1, 74, 601, Node999, 50);
end

procedure Node990
begin
    if (local_var(7) == 0) then begin
        set_local_var(7, 1);
    end
    gdialog_mod_barter(0);
    gsay_reply(74, 602);
    giq_option(1, 74, 603, NodeBarter, 50);
end

procedure Node998
begin
    set_local_var(4, local_var(4) + 1);
    set_local_var(5, 2);
end

procedure Node999
begin
    set_local_var(4, local_var(4) + 1);
end

procedure Node001
begin
    stored_node := "Node002";
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        gsay_reply(74, 108);
    end
    else begin
        gsay_reply(74, 110);
    end
    if (get_critter_stat(dude_obj, 3) >= 8) then begin
        giq_option(4, 74, 112, drink, 49);
        giq_option(4, 74, 117, Node011, 50);
    end
    giq_option(4, 74, 114, drink, 49);
    giq_option(-3, 74, 116, drink, 49);
    giq_option(4, 74, 118, Node011, 50);
    giq_option(-3, 74, 119, Node011, 50);
end

procedure Node002
begin
    if (get_critter_stat(dude_obj, 2) > 4) then begin
        gsay_reply(74, 120);
    end
    else begin
        gsay_reply(74, 122);
    end
    if (get_critter_stat(dude_obj, 3) >= 8) then begin
        giq_option(4, 74, 124, Node003, 50);
        giq_option(4, 74, 128, Node007, 50);
    end
    else begin
        giq_option(4, 74, 126, Node003, 50);
        giq_option(4, 74, 130, Node007, 50);
    end
    if (get_critter_stat(dude_obj, 4) > 1) then begin
        giq_option(-3, 74, 132, Node003, 50);
        giq_option(-3, 74, 134, Node007, 50);
        giq_option(-3, 74, 139, Node019, 51);
        giq_option(-3, 74, 143, Node999, 50);
    end
    else begin
        giq_option(-1, 74, 136, Node999, 50);
    end
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        giq_option(4, 74, 138, Node019, 51);
    end
    else begin
        giq_option(4, 74, 140, Node019, 51);
    end
    giq_option(4, 74, 142, Node999, 50);
end

procedure Node003
begin
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        gsay_reply(74, 144);
    end
    else begin
        gsay_reply(74, 146);
    end
    if (get_critter_stat(dude_obj, 3) >= 8) then begin
        giq_option(4, 74, 148, Node005, 49);
        giq_option(4, 74, 150, Node006, 50);
        if (get_critter_stat(dude_obj, 34) == 0) then begin
            giq_option(4, 74, 152, Node004, 50);
        end
        else begin
            giq_option(4, 74, 154, Node004, 50);
        end
    end
    else begin
        giq_option(4, 74, 164, Node005, 49);
        giq_option(4, 74, 166, Node006, 50);
        if (get_critter_stat(dude_obj, 34) == 0) then begin
            giq_option(4, 74, 168, Node004, 50);
        end
        else begin
            giq_option(4, 74, 170, Node004, 50);
        end
    end
    giq_option(-3, 74, 156, Node005, 49);
    giq_option(-3, 74, 158, Node006, 50);
    giq_option(-3, 74, 160, Node004, 50);
    if (get_critter_stat(dude_obj, 34) == 1) then begin
        giq_option(4, 74, 162, Node004, 50);
    end
    giq_option(1, 74, 171, Node999, 50);
end

procedure Node004
begin
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        gsay_reply(74, 172);
    end
    else begin
        gsay_reply(74, 174);
    end
    giq_option(4, 74, 175, Node007, 50);
    giq_option(-3, 74, 176, Node007, 50);
    giq_option(1, 74, 177, Node020, 50);
    giq_option(4, 74, 178, Node999, 50);
    giq_option(-3, 74, 180, Node999, 50);
end

procedure Node005
begin
    if (local_var(8) == 0) then begin
        set_local_var(8, 1);
    end
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        gsay_reply(74, 182);
    end
    else begin
        gsay_reply(74, 183);
    end
    giq_option(4, 74, 184, Node007, 50);
    giq_option(-3, 74, 185, Node007, 50);
    giq_option(1, 74, 186, Node020, 50);
    giq_option(4, 74, 187, Node990, 50);
    giq_option(-3, 74, 188, Node990, 50);
    giq_option(1, 74, 189, Node999, 50);
end

procedure Node006
begin
    gsay_reply(74, 190);
    giq_option(4, 74, 191, Node007, 50);
    giq_option(-3, 74, 192, Node007, 50);
    giq_option(8, 74, 193, Node999, 50);
    giq_option(4, 74, 194, Node020, 50);
    giq_option(-3, 74, 196, Node020, 50);
    giq_option(1, 74, 197, Node999, 50);
end

procedure Node007
begin
    if (local_var(8) == 0) then begin
        set_local_var(8, 1);
    end
    num_of_bottles := obj_is_carrying_obj_pid(dude_obj, 540);
    if (global_var(690) == 0) then begin
        set_global_var(690, 1);
        gsay_reply(74, 198);
        giq_option(4, 74, 212, Node012, 50);
        giq_option(-3, 74, 214, Node999, 50);
        giq_option(4, 74, 216, Node019, 51);
        giq_option(4, 74, 217, Node022, 50);
        giq_option(-3, 74, 218, Node022, 50);
        giq_option(-3, 74, 219, Node019, 51);
    end
    else begin
        gsay_reply(74, 199);
        if (num_of_bottles > 0) then begin
            giq_option(8, 74, 200, Node009, 50);
            if (get_critter_stat(dude_obj, 4) < 8) then begin
                giq_option(4, 74, 202, Node009, 50);
            end
            giq_option(-3, 74, 204, Node009, 50);
            giq_option(8, 74, 206, Node999, 50);
            if (get_critter_stat(dude_obj, 4) < 8) then begin
                giq_option(4, 74, 208, Node999, 50);
            end
            giq_option(-3, 74, message_str(74, 210) + obj_name(dude_obj) + message_str(74, 211), Node999, 50);
        end
        else begin
            giq_option(4, 74, 220, Node999, 50);
            giq_option(-3, 74, 221, Node999, 50);
        end
    end
end

procedure Node009
begin
    num_of_bottles := obj_is_carrying_obj_pid(dude_obj, 540);
    if (num_of_bottles <= 5) then begin
        gsay_reply(74, 222);
        giq_option(1, 74, 224, bob_booze, 50);
        giq_option(8, 74, 226, bob_booze, 50);
    end
    else begin
        gsay_reply(74, 223);
        giq_option(8, 74, 227, bob_booze, 50);
        if (get_critter_stat(dude_obj, 4) < 8) then begin
            giq_option(4, 74, 228, bob_booze, 50);
        end
        giq_option(-3, 74, 230, bob_booze, 50);
        giq_option(8, 74, 232, bob_it_aint_free, 50);
        if (get_critter_stat(dude_obj, 4) < 8) then begin
            giq_option(4, 74, 234, Node010, 50);
        end
        giq_option(-3, 74, 236, Node010, 50);
    end
end

procedure Node010
begin
    gsay_reply(74, 237);
    giq_option(4, 74, 238, bob_booze, 50);
    giq_option(-3, 74, 239, bob_booze, 50);
end

procedure Node011
begin
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        gsay_reply(74, 240);
    end
    else begin
        gsay_reply(74, 241);
    end
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        giq_option(4, 74, 242, Node019, 51);
        giq_option(4, 74, 244, Node999, 50);
        giq_option(4, 74, 246, Node002, 49);
        giq_option(-3, 74, 248, Node019, 51);
        giq_option(-3, 74, 250, Node999, 50);
        giq_option(-3, 74, 252, Node002, 49);
    end
    else begin
        giq_option(4, 74, message_str(74, 256) + obj_name(dude_obj) + message_str(74, 257), Node999, 50);
        giq_option(4, 74, 258, Node002, 49);
        giq_option(-3, 74, 262, Node999, 50);
        giq_option(-3, 74, 264, Node002, 49);
    end
end

procedure Node012
begin
    stored_node := "Node023";
    gsay_reply(74, 266);
    giq_option(4, 74, 287, Node003, 50);
    if (get_critter_stat(dude_obj, 4) > 1) then begin
        giq_option(-3, 74, 288, Node003, 50);
    end
    if (local_var(8) == 1) then begin
        giq_option(8, 74, 289, Node990, 50);
        if (get_critter_stat(dude_obj, 4) < 8) then begin
            giq_option(4, 74, 290, Node990, 50);
        end
        if ((local_var(5) == 0) and (get_critter_stat(dude_obj, 2) > 4)) then begin
            giq_option(8, 74, 291, drink, 50);
            if (get_critter_stat(dude_obj, 4) < 8) then begin
                giq_option(4, 74, 292, drink, 50);
            end
        end
    end
    if ((global_var(690) == 1) and (obj_is_carrying_obj_pid(dude_obj, 540) > 0)) then begin
        giq_option(8, 74, 267, Node009, 50);
        if (get_critter_stat(dude_obj, 4) < 8) then begin
            giq_option(4, 74, 272, Node009, 50);
        end
        if (get_critter_stat(dude_obj, 4) > 1) then begin
            giq_option(-3, 74, 277, Node009, 50);
        end
    end
    if ((obj_is_carrying_obj_pid(dude_obj, 547) > 0) and (obj_is_carrying_obj_pid(dude_obj, 539) > 0) and (global_var(661) < 2)) then begin
        giq_option(8, 74, 268, Node013, 50);
        if (get_critter_stat(dude_obj, 4) < 8) then begin
            giq_option(4, 74, 273, Node013, 50);
        end
        if (get_critter_stat(dude_obj, 4) > 1) then begin
            giq_option(-3, 74, 278, Node013, 50);
        end
        giq_option(-1, 74, 282, Node013, 50);
    end
    else begin
        if (obj_is_carrying_obj_pid(dude_obj, 539) > 0) then begin
            giq_option(8, 74, 269, Node014, 50);
            if (get_critter_stat(dude_obj, 4) < 8) then begin
                giq_option(4, 74, 274, Node014, 50);
            end
            if (get_critter_stat(dude_obj, 4) > 1) then begin
                giq_option(-3, 74, 279, Node014, 50);
            end
            giq_option(-1, 74, 283, Node014, 50);
        end
        else begin
            if ((obj_is_carrying_obj_pid(dude_obj, 547) > 0) and (global_var(661) < 2)) then begin
                giq_option(8, 74, 270, Node015, 50);
                if (get_critter_stat(dude_obj, 4) < 8) then begin
                    giq_option(4, 74, 275, Node015, 50);
                end
                if (get_critter_stat(dude_obj, 4) > 1) then begin
                    giq_option(-3, 74, 280, Node015, 50);
                end
                giq_option(-1, 74, 284, Node015, 50);
            end
        end
    end
    giq_option(8, 74, 271, Node007, 50);
    if (get_critter_stat(dude_obj, 4) < 8) then begin
        giq_option(4, 74, 276, Node007, 50);
    end
    if (get_critter_stat(dude_obj, 4) > 1) then begin
        giq_option(-3, 74, 281, Node007, 50);
    end
    giq_option(-1, 74, 285, Node999, 50);
    giq_option(2, 74, 286, Node999, 50);
end

procedure Node013
begin
    gsay_reply(74, 317);
    giq_option(8, 74, 318, bob_spares, 50);
    if (get_critter_stat(dude_obj, 4) < 8) then begin
        giq_option(4, 74, 320, bob_spares, 50);
    end
    if (get_critter_stat(dude_obj, 4) > 1) then begin
        giq_option(-3, 74, 322, bob_spares, 50);
    end
    giq_option(-1, 74, 324, bob_spares, 50);
    if (has_skill(dude_obj, 13) >= 30) then begin
        giq_option(8, 74, 326, Node021, 50);
        if (get_critter_stat(dude_obj, 4) < 8) then begin
            giq_option(2, 74, 328, Node021, 50);
        end
    end
    giq_option(8, 74, 330, Node999, 50);
    if (get_critter_stat(dude_obj, 4) < 8) then begin
        giq_option(4, 74, 332, Node999, 50);
    end
    if (get_critter_stat(dude_obj, 4) > 1) then begin
        giq_option(-3, 74, 334, Node999, 50);
    end
end

procedure Node014
begin
    gsay_reply(74, 336);
    giq_option(8, 74, 338, bob_coil_pipe, 50);
    if (get_critter_stat(dude_obj, 4) < 8) then begin
        giq_option(4, 74, 340, bob_coil_pipe, 50);
    end
    if (get_critter_stat(dude_obj, 4) > 1) then begin
        giq_option(-3, 74, 342, bob_coil_pipe, 50);
    end
    giq_option(-1, 74, 344, bob_coil_pipe, 50);
    giq_option(8, 74, 346, Node999, 50);
    if (get_critter_stat(dude_obj, 4) < 8) then begin
        giq_option(4, 74, 348, Node999, 50);
    end
    if (get_critter_stat(dude_obj, 4) > 1) then begin
        giq_option(-3, 74, 350, Node999, 50);
    end
end

procedure Node015
begin
    gsay_reply(74, 352);
    if (has_skill(dude_obj, 13) >= 30) then begin
        giq_option(8, 74, 354, Node021, 50);
        if (get_critter_stat(dude_obj, 4) < 8) then begin
            giq_option(2, 74, 356, Node021, 50);
        end
    end
    giq_option(8, 74, 358, bob_valve, 50);
    if (get_critter_stat(dude_obj, 4) < 8) then begin
        giq_option(4, 74, 360, bob_valve, 50);
    end
    if (get_critter_stat(dude_obj, 4) > 1) then begin
        giq_option(-3, 74, 362, bob_valve, 50);
    end
    giq_option(-1, 74, 364, bob_valve, 50);
    giq_option(8, 74, 366, Node999, 50);
    if (get_critter_stat(dude_obj, 4) < 8) then begin
        giq_option(4, 74, 368, Node999, 50);
    end
    if (get_critter_stat(dude_obj, 4) > 1) then begin
        giq_option(-3, 74, 370, Node999, 50);
    end
end

procedure Node016
begin
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 547);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 547);
        if (obj_type(dude_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 547);
            if (critter_inven_obj(dude_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    metarule(43, dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        destroy_object(restock_obj);
    end
    restock_obj := 0;
    restock_amt := 0;
    gsay_reply(74, 372);
    if (has_skill(dude_obj, 13) >= 35) then begin
        giq_option(8, 74, 374, Node017, 50);
        if (get_critter_stat(dude_obj, 4) < 8) then begin
            giq_option(4, 74, 376, Node017, 50);
        end
        giq_option(-3, 74, 378, Node017, 50);
    end
    else begin
        giq_option(8, 74, 380, Node018, 50);
        if (get_critter_stat(dude_obj, 4) < 8) then begin
            giq_option(4, 74, 382, Node018, 50);
        end
        giq_option(-3, 74, 384, Node018, 50);
    end
end

procedure Node017
begin
    item_caps_adjust(dude_obj, 100);
    critter_mod_skill(dude_obj, 13, 2);
    display_msg(message_str(74, 500));
    gsay_reply(74, 386);
    giq_option(8, 74, 388, move_to_dwntwn1, 50);
    if (get_critter_stat(dude_obj, 4) < 8) then begin
        giq_option(4, 74, 390, move_to_dwntwn1, 50);
    end
    giq_option(-3, 74, 392, move_to_dwntwn1, 50);
end

procedure Node018
begin
    gsay_reply(74, 394);
    giq_option(1, 74, 396, move_to_dwntwn2, 50);
end

procedure Node019
begin
    set_local_var(6, 1);
    gsay_reply(74, 400);
    giq_option(4, 74, 402, Node999, 50);
    giq_option(4, 74, 404, Node999, 50);
    giq_option(-3, 74, 406, Node999, 50);
    giq_option(-3, 74, 408, Node999, 50);
end

procedure Node020
begin
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        gsay_reply(74, 410);
    end
    else begin
        gsay_reply(74, 412);
    end
    if (get_critter_stat(dude_obj, 3) >= 8) then begin
        giq_option(4, 74, 414, Node005, 49);
        giq_option(4, 74, 415, Node006, 50);
        if (get_critter_stat(dude_obj, 34) == 0) then begin
            giq_option(4, 74, 416, Node004, 50);
        end
        else begin
            giq_option(4, 74, 417, Node004, 50);
        end
    end
    else begin
        giq_option(4, 74, 422, Node005, 49);
        giq_option(4, 74, 423, Node006, 50);
        giq_option(4, 74, 424, Node004, 50);
        if (get_critter_stat(dude_obj, 34) == 1) then begin
            giq_option(4, 74, 425, Node004, 50);
        end
    end
    if (get_critter_stat(dude_obj, 4) > 1) then begin
        giq_option(-3, 74, 418, Node005, 49);
        giq_option(-3, 74, 419, Node006, 50);
        if (get_critter_stat(dude_obj, 34) == 0) then begin
            giq_option(-3, 74, 420, Node004, 50);
        end
        else begin
            giq_option(-3, 74, 421, Node004, 50);
        end
    end
    giq_option(1, 74, 426, Node999, 50);
end

procedure Node021
begin
    gsay_reply(74, 430);
    giq_option(1, 74, 432, move_to_still, 50);
end

procedure Node022
begin
    gsay_reply(74, 440);
    giq_option(4, 74, 441, Node012, 50);
    giq_option(-3, 74, 442, Node012, 50);
    giq_option(4, 74, 443, Node019, 51);
    giq_option(-3, 74, 444, Node019, 51);
end

procedure Node023
begin
    stored_node := "Node024";
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        gsay_reply(74, 445);
    end
    else begin
        gsay_reply(74, 446);
    end
    if (get_critter_stat(dude_obj, 2) > 4) then begin
        giq_option(4, 74, 447, drink, 50);
    end
    else begin
        giq_option(4, 74, 448, Node999, 50);
    end
end

procedure Node024
begin
    stored_node := "Node025";
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        gsay_reply(74, 450);
    end
    else begin
        gsay_reply(74, 451);
    end
    if (get_critter_stat(dude_obj, 2) > 6) then begin
        giq_option(4, 74, 452, drink, 50);
    end
    else begin
        giq_option(4, 74, 453, Node999, 50);
    end
end

procedure Node025
begin
    gsay_reply(74, 460);
    giq_option(4, 74, 461, bob_is_drunk, 50);
end

procedure move_to_still
begin
    set_global_var(661, 1);
    load_map("klatrap.map", 1);
end

procedure move_to_dwntwn1
begin
    set_global_var(661, 2);
    load_map("kladwtwn.map", 2);
end

procedure move_to_dwntwn2
begin
    set_global_var(661, 3);
    load_map("kladwtwn.map", 2);
end

procedure bob_booze
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    num_of_bottles := obj_is_carrying_obj_pid(dude_obj, 540);
    if (num_of_bottles <= 5) then begin
        if ((obj_pid(critter_inven_obj(dude_obj, 2)) == 540) or (obj_pid(critter_inven_obj(dude_obj, 1)) == 540)) then begin
            metarule(43, dude_obj);
        end
        num_of_bottles := obj_is_carrying_obj_pid(dude_obj, 540);
        while (LVar0 < num_of_bottles) do begin
            LVar1 := obj_carrying_pid_obj(dude_obj, 540);
            rm_obj_from_inven(dude_obj, LVar1);
            item_caps_adjust(dude_obj, 2);
            LVar0 := LVar0 + 1;
        end
    end
    else begin
        mybooze := create_object_sid(125, 0, 0, -1);
        add_obj_to_inven(dude_obj, mybooze);
        item_caps_adjust(dude_obj, (num_of_bottles - 5) * 2);
        if ((obj_pid(critter_inven_obj(dude_obj, 2)) == 540) or (obj_pid(critter_inven_obj(dude_obj, 1)) == 540)) then begin
            metarule(43, dude_obj);
        end
        num_of_bottles := obj_is_carrying_obj_pid(dude_obj, 540);
        while (LVar0 < num_of_bottles) do begin
            LVar1 := obj_carrying_pid_obj(dude_obj, 540);
            rm_obj_from_inven(dude_obj, LVar1);
            LVar0 := LVar0 + 1;
        end
    end
    call Node012();
end

procedure bob_it_aint_free
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    num_of_bottles := obj_is_carrying_obj_pid(dude_obj, 540);
    if ((obj_pid(critter_inven_obj(dude_obj, 2)) == 540) or (obj_pid(critter_inven_obj(dude_obj, 1)) == 540)) then begin
        metarule(43, dude_obj);
    end
    num_of_bottles := obj_is_carrying_obj_pid(dude_obj, 540);
    while (LVar0 < num_of_bottles) do begin
        LVar1 := obj_carrying_pid_obj(dude_obj, 540);
        rm_obj_from_inven(dude_obj, LVar1);
        item_caps_adjust(dude_obj, 2);
        LVar0 := LVar0 + 1;
    end
    call Node012();
end

procedure bob_spares
begin
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 547);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 547);
        if (obj_type(dude_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 547);
            if (critter_inven_obj(dude_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    metarule(43, dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        destroy_object(restock_obj);
    end
    restock_obj := 0;
    restock_amt := 0;
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 539);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 539);
        if (obj_type(dude_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 539);
            if (critter_inven_obj(dude_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    metarule(43, dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        destroy_object(restock_obj);
    end
    restock_obj := 0;
    restock_amt := 0;
    item_caps_adjust(dude_obj, 100);
    mybooze := create_object_sid(125, 0, 0, -1);
    add_obj_to_inven(dude_obj, mybooze);
    call Node012();
end

procedure bob_coil_pipe
begin
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 539);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 539);
        if (obj_type(dude_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 539);
            if (critter_inven_obj(dude_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    metarule(43, dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        destroy_object(restock_obj);
    end
    restock_obj := 0;
    restock_amt := 0;
    item_caps_adjust(dude_obj, 100);
    call Node012();
end

procedure bob_valve
begin
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 547);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 547);
        if (obj_type(dude_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 547);
            if (critter_inven_obj(dude_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    metarule(43, dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        destroy_object(restock_obj);
    end
    restock_obj := 0;
    restock_amt := 0;
    mybooze := create_object_sid(125, 0, 0, -1);
    add_obj_to_inven(dude_obj, mybooze);
    call Node012();
end

procedure drink
begin
    game_ui_disable;
    add_timer_event(self_obj, 10, 100);
    call Node999();
end

