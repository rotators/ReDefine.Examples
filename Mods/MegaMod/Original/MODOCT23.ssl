variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure pickup_p_proc;
procedure critter_p_proc;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node013a;
procedure Node013b;
procedure Node013c;
procedure Node013d;
procedure Node013e;
procedure Node013f;
procedure Node013g;
procedure Node013h;
procedure Node013i;
procedure Node013j;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node018a;
procedure Node019;
procedure Node020;
procedure Node998;
procedure Node999;

variable In_Timed_Event;

procedure timed_event_p_proc;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
    if (local_var(7) == 0) then begin
        set_local_var(7, tile_num(self_obj));
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        if ((global_var(52) <= -1000) == 0) then begin
            set_global_var(52, -1000);
        end
        call Node998();
    end
end

procedure critter_p_proc
begin
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if (global_var(52) <= -1000) then begin
            if (critter_is_fleeing(self_obj)) then begin
                if (anim_busy(self_obj) == 0) then begin
                    if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                        if (anim_busy(self_obj) == 0) then begin
                            global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                                debug_msg("flee loop: rot == " + global_temp);
                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                global_temp := (global_temp + 1) % 6;
                            end
                        end
                    end
                end
            end
            else begin
                attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
            end
        end
    end
    if ((random(0, 100) == 1) and (In_Timed_Event == 0)) then begin
        In_Timed_Event := 1;
        add_timer_event(self_obj, game_ticks(random(5, 9)), 1);
    end
    if (local_var(8) > 0) then begin
        set_local_var(4, 2);
    end
end

procedure use_p_proc
begin
end

procedure look_at_p_proc
begin
end

procedure description_p_proc
begin
end

procedure use_skill_on_p_proc
begin
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        if ((global_var(52) <= -1000) == 0) then begin
            set_global_var(52, -1000);
        end
        call Node998();
    end
end

procedure map_enter_p_proc
begin
    if ((cur_map_index == 19) and (elevation(self_obj) != ((global_var(297) bwand 1) != 0))) then begin
        move_to(self_obj, tile_num(self_obj), (global_var(297) bwand 1) != 0);
    end
end

procedure map_update_p_proc
begin
end

procedure talk_p_proc
begin
    if (local_var(4) == 0) then begin
        start_gdialog(1780, self_obj, 4, -1, -1);
        gsay_start;
        call Node001();
        gsay_end;
        end_dialogue;
    end
    else begin
        if (local_var(4) == 1) then begin
            start_gdialog(1780, self_obj, 4, -1, -1);
            gsay_start;
            call Node012();
            gsay_end;
            end_dialogue;
        end
        else begin
            if (local_var(4) == 2) then begin
                if ((game_time - local_var(9)) < (2 * (24 * (60 * (60 * 10))))) then begin
                    start_gdialog(1780, self_obj, 4, -1, -1);
                    gsay_start;
                    call Node019();
                    gsay_end;
                    end_dialogue;
                end
                else begin
                    start_gdialog(1780, self_obj, 4, -1, -1);
                    gsay_start;
                    call Node018();
                    gsay_end;
                    end_dialogue;
                end
            end
        end
    end
end

procedure Node001
begin
    gsay_reply(1780, 103);
    giq_option(4, 1780, message_str(1780, 104) + obj_name(dude_obj) + message_str(1780, 105), Node002, 50);
    giq_option(4, 1780, 106, Node003, 50);
end

procedure Node002
begin
    gsay_reply(1780, 107);
    giq_option(4, 1780, 108, Node004, 50);
    giq_option(4, 1780, 109, Node005, 50);
    giq_option(4, 1780, 110, Node006, 50);
end

procedure Node003
begin
    gsay_reply(1780, 111);
    giq_option(4, 1780, 108, Node004, 50);
    giq_option(4, 1780, 109, Node005, 50);
    giq_option(4, 1780, 110, Node006, 50);
end

procedure Node004
begin
    gsay_reply(1780, 112);
    giq_option(4, 1780, 113, Node005, 50);
    giq_option(4, 1780, 114, Node006, 50);
end

procedure Node005
begin
    gsay_reply(1780, 115);
    giq_option(4, 1780, 116, Node006, 50);
end

procedure Node006
begin
    gsay_reply(1780, 117);
    giq_option(4, 1780, 118, Node007, 50);
end

procedure Node007
begin
    gsay_reply(1780, 119);
    giq_option(4, 1780, 120, Node008, 50);
    giq_option(4, 1780, 121, Node009, 50);
end

procedure Node008
begin
    gsay_reply(1780, 122);
    giq_option(4, 1780, 121, Node009, 50);
end

procedure Node009
begin
    gsay_reply(1780, 123);
    giq_option(4, 1780, 124, Node010, 50);
end

procedure Node010
begin
    gsay_reply(1780, 125);
    giq_option(4, 1780, 126, Node011, 50);
end

procedure Node011
begin
    gsay_reply(1780, 127);
    giq_option(4, 1780, 128, Node999, 50);
    set_local_var(4, 1);
    restock_obj := create_object_sid(536, 0, 0, -1);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
end

procedure Node012
begin
    gsay_reply(1780, 129);
    if (obj_is_carrying_obj_pid(dude_obj, 566) > 0) then begin
        giq_option(4, 1780, 130, Node013, 50);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 566) == 0) then begin
        giq_option(4, 1780, 131, Node999, 50);
    end
    giq_option(4, 1780, 132, Node999, 50);
end

procedure Node013
begin
    gsay_reply(1780, 133);
    giq_option(4, 1780, 134, Node013a, 50);
    giq_option(4, 1780, 135, Node013b, 50);
    giq_option(4, 1780, 136, Node013c, 50);
    giq_option(4, 1780, 137, Node013d, 50);
    giq_option(4, 1780, 144, Node014, 50);
    giq_option(4, 1780, 146, Node999, 50);
end

procedure Node013a
begin
    if (obj_is_carrying_obj_pid(dude_obj, 566) >= 2) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 566);
        if (2 < removed_qty) then begin
            removed_qty := 2;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 566);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 566);
                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, 0);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                        metarule(43, dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
        end
        restock_obj := 0;
        restock_amt := 0;
        set_local_var(8, 1);
        set_local_var(9, game_time);
        call Node016();
    end
    else begin
        call Node017();
    end
end

procedure Node013b
begin
    if (obj_is_carrying_obj_pid(dude_obj, 566) >= 3) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 566);
        if (3 < removed_qty) then begin
            removed_qty := 3;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 566);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 566);
                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, 0);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                        metarule(43, dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
        end
        restock_obj := 0;
        restock_amt := 0;
        set_local_var(8, 2);
        set_local_var(9, game_time);
        call Node016();
    end
    else begin
        call Node017();
    end
end

procedure Node013c
begin
    if (obj_is_carrying_obj_pid(dude_obj, 566) >= 4) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 566);
        if (4 < removed_qty) then begin
            removed_qty := 4;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 566);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 566);
                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, 0);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                        metarule(43, dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
        end
        restock_obj := 0;
        restock_amt := 0;
        set_local_var(8, 3);
        set_local_var(9, game_time);
        call Node016();
    end
    else begin
        call Node017();
    end
end

procedure Node013d
begin
    if (obj_is_carrying_obj_pid(dude_obj, 566) >= 2) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 566);
        if (2 < removed_qty) then begin
            removed_qty := 2;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 566);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 566);
                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, 0);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                        metarule(43, dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
        end
        restock_obj := 0;
        restock_amt := 0;
        set_local_var(8, 4);
        set_local_var(9, game_time);
        call Node016();
    end
    else begin
        call Node017();
    end
end

procedure Node013e
begin
    if (obj_is_carrying_obj_pid(dude_obj, 566) >= 1) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 566);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 566);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 566);
                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, 0);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                        metarule(43, dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
        end
        restock_obj := 0;
        restock_amt := 0;
        set_local_var(8, 5);
        set_local_var(9, game_time);
        call Node016();
    end
    else begin
        call Node017();
    end
end

procedure Node013f
begin
    if (obj_is_carrying_obj_pid(dude_obj, 566) >= 1) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 566);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 566);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 566);
                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, 0);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                        metarule(43, dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
        end
        restock_obj := 0;
        restock_amt := 0;
        set_local_var(8, 6);
        set_local_var(9, game_time);
        call Node016();
    end
    else begin
        call Node017();
    end
end

procedure Node013g
begin
    if (obj_is_carrying_obj_pid(dude_obj, 566) >= 2) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 566);
        if (2 < removed_qty) then begin
            removed_qty := 2;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 566);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 566);
                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, 0);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                        metarule(43, dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
        end
        restock_obj := 0;
        restock_amt := 0;
        set_local_var(8, 7);
        set_local_var(9, game_time);
        call Node016();
    end
    else begin
        call Node017();
    end
end

procedure Node013h
begin
    if (obj_is_carrying_obj_pid(dude_obj, 566) >= 3) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 566);
        if (3 < removed_qty) then begin
            removed_qty := 3;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 566);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 566);
                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, 0);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                        metarule(43, dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
        end
        restock_obj := 0;
        restock_amt := 0;
        set_local_var(8, 8);
        set_local_var(9, game_time);
        call Node016();
    end
    else begin
        call Node017();
    end
end

procedure Node013i
begin
    if (obj_is_carrying_obj_pid(dude_obj, 566) >= 6) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 566);
        if (6 < removed_qty) then begin
            removed_qty := 6;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 566);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 566);
                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, 0);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                        metarule(43, dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
        end
        restock_obj := 0;
        restock_amt := 0;
        set_local_var(8, 9);
        set_local_var(9, game_time);
        call Node016();
    end
    else begin
        call Node017();
    end
end

procedure Node013j
begin
    if (obj_is_carrying_obj_pid(dude_obj, 566) >= 4) then begin
        if (obj_is_carrying_obj_pid(dude_obj, 2) >= 1) then begin
            removed_qty := obj_is_carrying_obj_pid(dude_obj, 2);
            if (4 < removed_qty) then begin
                removed_qty := 4;
            end
            if (removed_qty > 0) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 2);
                if (obj_type(self_obj) == 1) then begin
                    restock_obj := obj_carrying_pid_obj(dude_obj, 2);
                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                        if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                            restock_obj := critter_inven_obj(dude_obj, 0);
                            debug_msg("armour pid == " + obj_pid(restock_obj));
                            rm_obj_from_inven(dude_obj, restock_obj);
                            add_obj_to_inven(dude_obj, restock_obj);
                        end
                    end
                    else begin
                        if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                            metarule(43, dude_obj);
                        end
                    end
                end
                restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
                destroy_object(restock_obj);
            end
            restock_obj := 0;
            restock_amt := 0;
            removed_qty := obj_is_carrying_obj_pid(dude_obj, 566);
            if (4 < removed_qty) then begin
                removed_qty := 4;
            end
            if (removed_qty > 0) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 566);
                if (obj_type(self_obj) == 1) then begin
                    restock_obj := obj_carrying_pid_obj(dude_obj, 566);
                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                        if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                            restock_obj := critter_inven_obj(dude_obj, 0);
                            debug_msg("armour pid == " + obj_pid(restock_obj));
                            rm_obj_from_inven(dude_obj, restock_obj);
                            add_obj_to_inven(dude_obj, restock_obj);
                        end
                    end
                    else begin
                        if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                            metarule(43, dude_obj);
                        end
                    end
                end
                restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
                destroy_object(restock_obj);
            end
            restock_obj := 0;
            restock_amt := 0;
            set_local_var(8, 10);
            set_local_var(9, game_time);
            call Node016();
        end
        else begin
            call Node020();
        end
    end
    else begin
        call Node017();
    end
end

procedure Node014
begin
    gsay_reply(1780, 133);
    giq_option(4, 1780, 138, Node013e, 50);
    giq_option(4, 1780, 139, Node013f, 50);
    giq_option(4, 1780, 140, Node013g, 50);
    giq_option(4, 1780, 141, Node013h, 50);
    giq_option(4, 1780, 144, Node015, 50);
    giq_option(4, 1780, 145, Node013, 50);
    giq_option(4, 1780, 146, Node999, 50);
end

procedure Node015
begin
    gsay_reply(1780, 133);
    giq_option(4, 1780, 142, Node013i, 50);
    giq_option(4, 1780, 143, Node013j, 50);
    giq_option(4, 1780, 145, Node014, 50);
    giq_option(4, 1780, 146, Node999, 50);
end

procedure Node016
begin
    gsay_reply(1780, 149);
    giq_option(4, 1780, 148, Node999, 50);
end

procedure Node017
begin
    gsay_reply(1780, 147);
    giq_option(4, 1780, 148, Node999, 50);
end

procedure Node018
begin
    gsay_reply(1780, 150);
    giq_option(4, 1780, 151, Node018a, 50);
end

procedure Node018a
begin
    if (local_var(8) == 1) then begin
        restock_obj := create_object_sid(384, 0, 0, -1);
        add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    end
    else begin
        if (local_var(8) == 2) then begin
            restock_obj := create_object_sid(20, 0, 0, -1);
            add_mult_objs_to_inven(dude_obj, restock_obj, 1);
        end
        else begin
            if (local_var(8) == 3) then begin
                restock_obj := create_object_sid(6, 0, 0, -1);
                add_mult_objs_to_inven(dude_obj, restock_obj, 1);
            end
            else begin
                if (local_var(8) == 4) then begin
                    restock_obj := create_object_sid(75, 0, 0, -1);
                    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
                end
                else begin
                    if (local_var(8) == 5) then begin
                        restock_obj := create_object_sid(234, 0, 0, -1);
                        add_mult_objs_to_inven(dude_obj, restock_obj, 1);
                    end
                    else begin
                        if (local_var(8) == 6) then begin
                            restock_obj := create_object_sid(4, 0, 0, -1);
                            add_mult_objs_to_inven(dude_obj, restock_obj, 1);
                        end
                        else begin
                            if (local_var(8) == 7) then begin
                                restock_obj := create_object_sid(7, 0, 0, -1);
                                add_mult_objs_to_inven(dude_obj, restock_obj, 1);
                            end
                            else begin
                                if (local_var(8) == 8) then begin
                                    restock_obj := create_object_sid(84, 0, 0, -1);
                                    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
                                end
                                else begin
                                    if (local_var(8) == 9) then begin
                                        restock_obj := create_object_sid(2, 0, 0, -1);
                                        add_mult_objs_to_inven(dude_obj, restock_obj, 1);
                                    end
                                    else begin
                                        if (local_var(8) == 10) then begin
                                            restock_obj := create_object_sid(380, 0, 0, -1);
                                            add_mult_objs_to_inven(dude_obj, restock_obj, 1);
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    set_local_var(9, 0);
    set_local_var(8, 0);
    set_local_var(4, 1);
end

procedure Node019
begin
    gsay_reply(1780, 152);
    giq_option(4, 1780, 153, Node999, 50);
end

procedure Node020
begin
    gsay_reply(1780, 154);
    giq_option(4, 1780, 155, Node999, 50);
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
    debug_msg("LVAR_Herebefore == " + local_var(4));
    if (local_var(4) == 0) then begin
        set_local_var(4, 1);
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if (tile_distance(tile_num(self_obj), local_var(7)) < 10) then begin
            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(3, 7)), 0);
        end
        else begin
            animate_move_obj_to_tile(self_obj, tile_num_in_direction(local_var(7), random(0, 5), random(3, 7)), 0);
        end
        In_Timed_Event := 0;
    end
end

