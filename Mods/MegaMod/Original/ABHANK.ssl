variable tmp_gen_rep;
variable restock_amt;
variable restock_obj;
variable removed_qty;

procedure start;
procedure destroy_p_proc;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node005a;
procedure Node901;
procedure Node997;
procedure Node998;
procedure Node999;

variable drinks_this_conversation;

procedure timed_event_p_proc;
procedure pickup_p_proc;
procedure critter_p_proc;


procedure start
begin
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(5, global_var(5) + 1);
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
            set_global_var(2, 1);
            set_global_var(3, 0);
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
            set_global_var(3, 1);
            set_global_var(2, 0);
        end
        set_global_var(0, global_var(0) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        tmp_gen_rep := global_var(0);
        if (has_trait(0, dude_obj, 95)) then begin
            tmp_gen_rep := global_var(0) * 2;
        end
        if (tmp_gen_rep >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (tmp_gen_rep >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (tmp_gen_rep >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (tmp_gen_rep >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(63, global_var(63) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
end

procedure use_p_proc
begin
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 0) then begin
        display_msg(message_str(2256, 100));
    end
    else begin
        display_msg(message_str(2256, 101));
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(2256, 102));
end

procedure use_skill_on_p_proc
begin
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(0, local_var(0) bwor 8);
        set_local_var(0, local_var(0) bwor 2);
        if (global_var(63) > -30) then begin
            set_global_var(63, -30);
        end
    end
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, 1, 6, 211);
    add_timer_event(self_obj, random(25, 50), 3);
    set_local_var(4, tile_num(self_obj));
    set_local_var(5, has_trait(1, self_obj, 10));
end

procedure map_update_p_proc
begin
end

procedure talk_p_proc
begin
    if (global_var(1139) < 3) then begin
        start_gdialog(2256, self_obj, 4, -1, -1);
        gsay_start;
        call Node001();
        gsay_end;
        end_dialogue;
    end
    else begin
        start_gdialog(2256, self_obj, 4, -1, -1);
        gsay_start;
        call Node013();
        gsay_end;
        end_dialogue;
    end
end

procedure Node001
begin
    if (global_var(1139) == 0) then begin
        gsay_reply(2256, 200);
    end
    else begin
        gsay_reply(2256, 220);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 101)) then begin
        giq_option(4, 2256, 201, Node002, 49);
        giq_option(-3, 2256, 800, Node015, 50);
    end
    if (global_var(1139) == 0) then begin
        giq_option(4, 2256, 212, Node010, 50);
    end
    else begin
        giq_option(4, 2256, 212, Node999, 50);
    end
end

procedure Node002
begin
    set_local_var(1, 1);
    set_global_var(1139, 3);
    if (obj_is_carrying_obj_pid(dude_obj, 101)) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 101);
    end
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 101);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 101);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    metarule(43, dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        destroy_object(restock_obj);
    end
    restock_obj := 0;
    restock_amt := 0;
    gsay_reply(2256, 202);
    giq_option(4, 2256, 203, Node009, 50);
end

procedure Node003
begin
    gsay_reply(2256, 204);
    giq_option(4, 2256, 205, Node005, 50);
    giq_option(4, 2256, 253, Node005a, 50);
    giq_option(4, 2256, 206, Node999, 50);
end

procedure Node004
begin
    gsay_reply(2256, 207);
    giq_option(4, 2256, 208, Node011, 50);
    giq_option(4, 2256, 209, Node999, 50);
end

procedure Node005
begin
    if (global_var(1138) == 0) then begin
        set_global_var(1138, 1);
    end
    set_local_var(3, local_var(3) + 1);
    drinks_this_conversation := drinks_this_conversation + 1;
    if ((local_var(3) > 3) and (get_critter_stat(dude_obj, 5) < 7)) then begin
        call Node006();
    end
    else begin
        call Node004();
    end
end

procedure Node006
begin
    set_global_var(26, 1);
    gsay_reply(2256, 210);
    giq_option(4, 2256, 211, Node997, 50);
end

procedure Node007
begin
    gsay_reply(2256, 213);
    giq_option(4, 2256, 214, Node999, 50);
end

procedure Node008
begin
    float_msg(self_obj, message_str(2256, random(500, 502)), 8);
end

procedure Node009
begin
    gsay_reply(2256, 600);
    giq_option(4, 2256, 601, Node003, 50);
    giq_option(4, 2256, 602, Node999, 50);
end

procedure Node010
begin
    gsay_reply(2256, 700);
    giq_option(4, 2256, 701, Node901, 50);
    giq_option(4, 2256, 702, Node999, 50);
end

procedure Node011
begin
    gsay_reply(2256, 215);
    if (item_caps_total(dude_obj) >= 20) then begin
        giq_option(4, 2256, 216, Node012, 50);
    end
    else begin
        giq_option(4, 2256, 219, Node999, 50);
    end
    giq_option(4, 2256, 217, Node999, 50);
end

procedure Node012
begin
    item_caps_adjust(dude_obj, -20);
    gsay_reply(2256, 218);
    giq_option(4, 2256, 205, Node005, 50);
    giq_option(4, 2256, 253, Node005a, 50);
end

procedure Node013
begin
    if (local_var(7) == 0) then begin
        gsay_reply(2256, 500);
        set_local_var(7, 1);
    end
    else begin
        gsay_reply(2256, 501);
    end
    giq_option(4, 2256, 250, Node014, 50);
    giq_option(4, 2256, 251, Node999, 50);
end

procedure Node014
begin
    gsay_reply(2256, 252);
    if (item_caps_total(dude_obj) >= 20) then begin
        giq_option(4, 2256, 216, Node012, 50);
    end
    else begin
        giq_option(4, 2256, 219, Node999, 50);
    end
    giq_option(4, 2256, 206, Node999, 50);
end

procedure Node015
begin
    gsay_reply(2256, 810);
    giq_option(1, 2256, 811, Node016, 50);
    giq_option(1, 2256, 812, Node999, 50);
end

procedure Node016
begin
    set_local_var(1, 1);
    set_global_var(1139, 3);
    if (obj_is_carrying_obj_pid(dude_obj, 101)) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 101);
    end
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 101);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 101);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    metarule(43, dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        destroy_object(restock_obj);
    end
    restock_obj := 0;
    restock_amt := 0;
    gsay_reply(2256, 202);
    giq_option(1, 2256, 820, Node009, 50);
end

procedure Node005a
begin
    variable LVar0 := 0;
    if (global_var(1138) == 0) then begin
        set_global_var(1138, 1);
    end
    LVar0 := create_object_sid(662, 0, 0, -1);
    add_obj_to_inven(dude_obj, LVar0);
    if (global_var(1138) == 2) then begin
        set_global_var(1138, 3);
    end
    return 0;
    LVar0 := 0;
end

procedure Node901
begin
    set_global_var(1139, 1);
end

procedure Node997
begin
    float_msg(dude_obj, message_str(2256, 400), 3);
    reg_anim_func(2, dude_obj);
    reg_anim_func(1, 1);
    reg_anim_animate(dude_obj, 14, -1);
    reg_anim_animate(dude_obj, 20, 5);
    reg_anim_animate(dude_obj, 48, -1);
    reg_anim_func(3, 0);
end

procedure Node998
begin
    set_global_var(63, -30);
end

procedure Node999
begin
    if (drinks_this_conversation > 0) then begin
        metarule3(100, self_obj, 999, 0);
        add_timer_event(self_obj, game_ticks(0), 999);
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 3) then begin
        if (local_var(1) == 0) then begin
            float_msg(self_obj, message_str(2256, random(300, 302)), 8);
            add_timer_event(self_obj, random(75, 100), 3);
        end
    end
    else begin
        if (fixed_param == 999) then begin
            if (drinks_this_conversation > 0) then begin
                drinks_this_conversation := drinks_this_conversation - 1;
                use_obj_on_obj(create_object_sid(662, 0, 0, -1), dude_obj);
                metarule3(100, self_obj, 999, 0);
                add_timer_event(self_obj, game_ticks(1), 999);
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        call Node998();
    end
end

procedure critter_p_proc
begin
    if ((global_var(63) <= -30) and obj_can_see_obj(self_obj, dude_obj)) then begin
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
    else begin
        if ((tile_num(self_obj) != local_var(4)) and (drinks_this_conversation == 0)) then begin
            animate_move_obj_to_tile(self_obj, local_var(4), 0);
        end
        else begin
            if ((has_trait(1, self_obj, 10) != local_var(5)) and (drinks_this_conversation == 0)) then begin
                anim(self_obj, 1000, local_var(5));
            end
        end
    end
end

