variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure Node997;
procedure Node998;
procedure Node999;
procedure NodeBarter;
procedure BarterDrug;
procedure BarterWeapon;
procedure BarterMisc;
procedure NodeRiddle;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure Node035;
procedure Node036;
procedure Node037;
procedure Node038;
procedure Node039;
procedure Node040;
procedure Node041;
procedure Node042;
procedure Node043;
procedure Node044;
procedure Node045;
procedure Node046;
procedure Node047;
procedure Node048;
procedure Node049;
procedure Node050;
procedure Node051;
procedure Node052;
procedure SelectBag;
procedure SelectFirst;
procedure SelectSecond;
procedure SelectThird;
procedure SelectCaps;
procedure Select1;
procedure Select2;
procedure Select3;
procedure Select4;
procedure Select5;
procedure SelectWeigh;
procedure Answer1;
procedure Answer2;
procedure Answer3;
procedure CheckAnswer;
procedure NodeAngry1;
procedure NodeAngry2;
procedure NodeFailed;
procedure NodeSuccess;
procedure NodeSuccessA;
procedure NodeSuccessB;

variable Only_Once;
variable do_replace;
variable fake_num;
variable cur_num;
variable cur_weight;
variable cur_caps1;
variable cur_caps2;
variable cur_caps3;

import variable arroyo_slik_box_drug;
import variable arroyo_slik_box_weapon;
import variable arroyo_slik_box_misc;


procedure start
begin
end

procedure critter_p_proc
begin
    variable LVar0 := 0;
    if ((local_var(5) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
    LVar0 := game_time_hour;
    if ((LVar0 >= 800) and (LVar0 < 2000)) then begin
        if ((tile_num(self_obj) != 18684) and not(in_dialog)) then begin
            if ((tile_num(self_obj) != 18684) and (18684 != 0)) then begin
                if ((dest_tile == 18684) and (step_tile < 0)) then begin
                    step_tile := step_tile + 1;
                end
                else begin
                    if (anim_busy(self_obj) == 0) then begin
                        dest_tile := 18684;
                        step_tile := 18684;
                        animate_move_obj_to_tile(self_obj, step_tile, 0);
                        debug_msg("move_to_point: self_tile == " + tile_num(self_obj));
                        while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), 18684) >= tile_distance(step_tile, 18684))) do begin
                            step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), 1 % tile_distance(step_tile, tile_num(self_obj)));
                            debug_msg("move_to_point: step_tile == " + step_tile);
                            animate_move_obj_to_tile(self_obj, step_tile, 0);
                        end
                        if (anim_busy(self_obj) == 0) then begin
                            if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
                                if (anim_busy(self_obj) == 0) then begin
                                    global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                    global_temp := (global_temp + 1) % 6;
                                    while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                        debug_msg("flee loop: rot == " + global_temp);
                                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                        global_temp := (global_temp + 1) % 6;
                                    end
                                end
                            end
                            else begin
                                step_tile := -10;
                            end
                        end
                    end
                    else begin
                        if (tile_distance(tile_num(self_obj), 18684) < tile_distance(dest_tile, 18684)) then begin
                            reg_anim_func(2, self_obj);
                        end
                    end
                end
            end
        end
    end
    else begin
        if ((tile_num(self_obj) != 16480) and not(in_dialog)) then begin
            if ((tile_num(self_obj) != 16480) and (16480 != 0)) then begin
                if ((dest_tile == 16480) and (step_tile < 0)) then begin
                    step_tile := step_tile + 1;
                end
                else begin
                    if (anim_busy(self_obj) == 0) then begin
                        dest_tile := 16480;
                        step_tile := 16480;
                        animate_move_obj_to_tile(self_obj, step_tile, 0);
                        debug_msg("move_to_point: self_tile == " + tile_num(self_obj));
                        while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), 16480) >= tile_distance(step_tile, 16480))) do begin
                            step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), 1 % tile_distance(step_tile, tile_num(self_obj)));
                            debug_msg("move_to_point: step_tile == " + step_tile);
                            animate_move_obj_to_tile(self_obj, step_tile, 0);
                        end
                        if (anim_busy(self_obj) == 0) then begin
                            if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
                                if (anim_busy(self_obj) == 0) then begin
                                    global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                    global_temp := (global_temp + 1) % 6;
                                    while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                        debug_msg("flee loop: rot == " + global_temp);
                                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                        global_temp := (global_temp + 1) % 6;
                                    end
                                end
                            end
                            else begin
                                step_tile := -10;
                            end
                        end
                    end
                    else begin
                        if (tile_distance(tile_num(self_obj), 16480) < tile_distance(dest_tile, 16480)) then begin
                            reg_anim_func(2, self_obj);
                        end
                    end
                end
            end
        end
    end
    if ((anim_busy(self_obj) == 0) and (has_trait(1, self_obj, 10) != 3)) then begin
        anim(self_obj, 1000, 3);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure talk_p_proc
begin
    variable LVar0 := 0;
    LVar0 := game_time_hour;
    Evil_Critter := 0;
    Slavery_Tolerant := 1;
    Karma_Perception := 10;
    if (local_var(2) == 0) then begin
        set_local_var(2, 1);
        set_local_var(3, (get_critter_stat(dude_obj, 3) - get_critter_stat(self_obj, 3)) * 5);
        debug_msg("Base Reaction == " + local_var(3));
    end
    Static_Reaction := 0;
    set_local_var(0, 0);
    debug_msg("Start Reaction == " + local_var(0));
    if (reaction_bonus_karma >= 0) then begin
        reaction_bonus_karma := reaction_bonus_karma / 1000;
    end
    else begin
        reaction_bonus_karma := -1 * (-1 * reaction_bonus_karma / 1000);
    end
    if (global_var(47) >= 0) then begin
        reaction_bonus_town_rep := global_var(47) / 2;
    end
    else begin
        reaction_bonus_town_rep := -1 * (-1 * global_var(47) / 2);
    end
    if (has_trait(2, dude_obj, 13)) then begin
        if (get_critter_stat(dude_obj, 34) == get_critter_stat(self_obj, 34)) then begin
            Static_Reaction := Static_Reaction + -20;
        end
        else begin
            Static_Reaction := Static_Reaction + 20;
        end
        debug_msg("Sex Appeal Bonus == " + Static_Reaction);
    end
    else begin
        debug_msg("Sex Appeal Bonus == 0");
    end
    if (Evil_Critter == 1) then begin
        Static_Reaction := Static_Reaction - reaction_bonus_karma;
        debug_msg("Karma Reaction Bonus == " + Static_Reaction);
        Static_Reaction := Static_Reaction - reaction_bonus_town_rep;
        debug_msg("Town Rep Bonus == " + Static_Reaction);
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (global_var(37) == 1) then begin
            Static_Reaction := Static_Reaction - 20;
        end
        else begin
            if (global_var(38) == 1) then begin
                Static_Reaction := Static_Reaction - 15;
            end
            else begin
                if (global_var(39) == 1) then begin
                    Static_Reaction := Static_Reaction - 10;
                end
                else begin
                    if (global_var(40) == 1) then begin
                        Static_Reaction := Static_Reaction - 5;
                    end
                    else begin
                        if (global_var(41) == 1) then begin
                            Static_Reaction := Static_Reaction - 0;
                        end
                        else begin
                            if (global_var(42) == 1) then begin
                                Static_Reaction := Static_Reaction - -5;
                            end
                            else begin
                                if (global_var(43) == 1) then begin
                                    Static_Reaction := Static_Reaction - -10;
                                end
                                else begin
                                    if (global_var(44) == 1) then begin
                                        Static_Reaction := Static_Reaction - -15;
                                    end
                                    else begin
                                        Static_Reaction := Static_Reaction - -20;
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        debug_msg("Bad Person Reaction Bonus == " + Static_Reaction);
    end
    else begin
        Static_Reaction := Static_Reaction + reaction_bonus_karma;
        debug_msg("Karma Reaction Bonus == " + Static_Reaction);
        Static_Reaction := Static_Reaction + reaction_bonus_town_rep;
        debug_msg("Town Rep Bonus == " + Static_Reaction);
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (global_var(37) == 1) then begin
            Static_Reaction := Static_Reaction + 20;
        end
        else begin
            if (global_var(38) == 1) then begin
                Static_Reaction := Static_Reaction + 15;
            end
            else begin
                if (global_var(39) == 1) then begin
                    Static_Reaction := Static_Reaction + 10;
                end
                else begin
                    if (global_var(40) == 1) then begin
                        Static_Reaction := Static_Reaction + 5;
                    end
                    else begin
                        if (global_var(41) == 1) then begin
                            Static_Reaction := Static_Reaction + 0;
                        end
                        else begin
                            if (global_var(42) == 1) then begin
                                Static_Reaction := Static_Reaction + -5;
                            end
                            else begin
                                if (global_var(43) == 1) then begin
                                    Static_Reaction := Static_Reaction + -10;
                                end
                                else begin
                                    if (global_var(44) == 1) then begin
                                        Static_Reaction := Static_Reaction + -15;
                                    end
                                    else begin
                                        Static_Reaction := Static_Reaction + -20;
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        debug_msg("Good Person Reaction Bonus == " + Static_Reaction);
    end
    if (Slavery_Tolerant == 0) then begin
        if (global_var(11) == 1) then begin
            Static_Reaction := Static_Reaction + (2 * -25);
        end
    end
    else begin
        if (Slavery_Tolerant == 1) then begin
            if (global_var(11) == 1) then begin
                Static_Reaction := Static_Reaction + -25;
            end
        end
        else begin
            if (Slavery_Tolerant == 3) then begin
                if (global_var(11) == 1) then begin
                    Static_Reaction := Static_Reaction - -25;
                end
            end
        end
    end
    debug_msg("Slaver + Aligned Reaction == " + Static_Reaction);
    Static_Reaction := Static_Reaction + (10 * has_trait(0, dude_obj, 10));
    debug_msg("Presence Reaction == " + Static_Reaction);
    if (global_var(1) >= 2) then begin
        Static_Reaction := Static_Reaction + -30;
    end
    debug_msg("Childkiller Reaction == " + Static_Reaction);
    set_local_var(0, local_var(3) + Static_Reaction);
    debug_msg("Initial Reaction == " + local_var(0));
    in_dialog := 1;
    if (local_var(6) == 1) then begin
        float_msg(self_obj, message_str(1349, 105), 8 + ((2 - 8) * has_trait(0, dude_obj, 22)));
    end
    else begin
        if (local_var(4) == 0) then begin
            start_gdialog(1349, self_obj, 4, -1, -1);
            gsay_start;
            if (get_critter_stat(dude_obj, 4) == 1) then begin
                if (local_var(1) <= -2) then begin
                    call Node001();
                end
                else begin
                    call Node004();
                end
            end
            else begin
                if (local_var(1) <= -2) then begin
                    call Node008();
                end
                else begin
                    call Node015();
                end
            end
            gsay_end;
            end_dialogue;
            set_local_var(4, 1);
        end
        else begin
            if ((LVar0 >= 2000) or (LVar0 < 800)) then begin
                start_gdialog(1349, self_obj, 4, -1, -1);
                gsay_start;
                if ((local_var(1) <= -2) or (get_critter_stat(dude_obj, 4) == 1)) then begin
                    call Node014();
                end
                else begin
                    call Node050();
                end
                gsay_end;
                end_dialogue;
            end
            else begin
                if (local_var(1) <= -2) then begin
                    start_gdialog(1349, self_obj, 4, -1, -1);
                    gsay_start;
                    if (get_critter_stat(dude_obj, 4) == 1) then begin
                        call Node003();
                    end
                    else begin
                        call Node013();
                    end
                    gsay_end;
                    end_dialogue;
                end
                else begin
                    start_gdialog(1349, self_obj, 4, -1, -1);
                    gsay_start;
                    if (get_critter_stat(dude_obj, 4) == 1) then begin
                        call Node007();
                    end
                    else begin
                        call Node048();
                    end
                    gsay_end;
                    end_dialogue;
                end
            end
        end
    end
    if (do_replace == 1) then begin
        do_replace := 0;
        move_obj_inven_to_obj(self_obj, arroyo_slik_box_drug);
    end
    else begin
        if (do_replace == 2) then begin
            do_replace := 0;
            move_obj_inven_to_obj(self_obj, arroyo_slik_box_weapon);
        end
        else begin
            if (do_replace == 3) then begin
                do_replace := 0;
                move_obj_inven_to_obj(self_obj, arroyo_slik_box_misc);
            end
        end
    end
    in_dialog := 0;
end

procedure destroy_p_proc
begin
    move_obj_inven_to_obj(arroyo_slik_box_drug, self_obj);
    move_obj_inven_to_obj(arroyo_slik_box_weapon, self_obj);
    move_obj_inven_to_obj(arroyo_slik_box_misc, self_obj);
    if (source_obj == dude_obj) then begin
        set_global_var(5, global_var(5) + 1);
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
            set_global_var(2, 1);
            set_global_var(3, 0);
        end
        if (metarule(51, self_obj) == 2) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(2, 0);
                set_global_var(1, global_var(1) + 1);
                set_global_var(0, global_var(0) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(37, 0);
                set_global_var(38, 0);
                set_global_var(39, 0);
                set_global_var(40, 0);
                set_global_var(41, 0);
                set_global_var(42, 0);
                set_global_var(43, 0);
                set_global_var(44, 0);
                set_global_var(45, 0);
                if (global_var(0) >= 1000) then begin
                    set_global_var(37, 1);
                end
                else begin
                    if (global_var(0) >= 750) then begin
                        set_global_var(38, 1);
                    end
                    else begin
                        if (global_var(0) >= 500) then begin
                            set_global_var(39, 1);
                        end
                        else begin
                            if (global_var(0) >= 250) then begin
                                set_global_var(40, 1);
                            end
                            else begin
                                if (global_var(0) > -250) then begin
                                    set_global_var(41, 1);
                                end
                                else begin
                                    if (global_var(0) > -500) then begin
                                        set_global_var(42, 1);
                                    end
                                    else begin
                                        if (global_var(0) > -750) then begin
                                            set_global_var(43, 1);
                                        end
                                        else begin
                                            if (global_var(0) > -1000) then begin
                                                set_global_var(44, 1);
                                            end
                                            else begin
                                                set_global_var(45, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(47, global_var(47) + -8);
                debug_msg("Added " + -8 + " to Town Rep");
            end
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
            set_global_var(3, 1);
            set_global_var(2, 0);
        end
        set_global_var(0, global_var(0) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(47, global_var(47) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(1349, 100));
end

procedure description_p_proc
begin
    script_overrides;
    if ((get_critter_stat(dude_obj, 4) >= 4) and (get_critter_stat(dude_obj, 1) < 8)) then begin
        display_msg(message_str(1349, 101));
    end
    else begin
        if ((get_critter_stat(dude_obj, 4) >= 4) and (get_critter_stat(dude_obj, 1) >= 8)) then begin
            display_msg(message_str(1349, 102));
        end
        else begin
            if (get_critter_stat(dude_obj, 4) <= 3) then begin
                display_msg(message_str(1349, 103));
            end
        end
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(6, 1);
        set_global_var(7, 1);
    end
end

procedure map_enter_p_proc
begin
    variable LVar0 := 0;
    Only_Once := 0;
    critter_add_trait(self_obj, 1, 6, 1);
    critter_add_trait(self_obj, 1, 5, 2);
    LVar0 := game_time_hour;
    if ((LVar0 >= 800) and (LVar0 < 2000)) then begin
        move_to(self_obj, 18684, 0);
        anim(self_obj, 1000, 3);
    end
    else begin
        move_to(self_obj, 16480, 0);
        anim(self_obj, 1000, 3);
    end
end

procedure Node997
begin
    set_local_var(1, -4);
    set_local_var(3, -100);
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
end

procedure NodeBarter
begin
    gsay_reply(1349, 492);
    giq_option(4, 1349, 494, BarterDrug, 50);
    giq_option(-3, 1349, 496, BarterDrug, 50);
    giq_option(4, 1349, 498, BarterWeapon, 50);
    giq_option(-3, 1349, 500, BarterWeapon, 50);
    giq_option(4, 1349, 502, BarterMisc, 50);
    giq_option(-3, 1349, 504, BarterMisc, 50);
    giq_option(4, 1349, 506, Node999, 50);
    giq_option(-3, 1349, 508, Node999, 50);
end

procedure BarterDrug
begin
    do_replace := 1;
    move_obj_inven_to_obj(arroyo_slik_box_drug, self_obj);
    gdialog_mod_barter(0);
    gsay_message(1349, " ", 50);
end

procedure BarterWeapon
begin
    do_replace := 2;
    move_obj_inven_to_obj(arroyo_slik_box_weapon, self_obj);
    gdialog_mod_barter(0);
    gsay_message(1349, " ", 50);
end

procedure BarterMisc
begin
    do_replace := 3;
    move_obj_inven_to_obj(arroyo_slik_box_misc, self_obj);
    gdialog_mod_barter(0);
    gsay_message(1349, " ", 50);
end

procedure NodeRiddle
begin
    set_local_var(7, 1);
    fake_num := random(1, 3);
    cur_num := 0;
    cur_weight := 0;
    cur_caps1 := 5;
    cur_caps2 := 5;
    cur_caps3 := 5;
    call SelectBag();
end

procedure Node001
begin
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        gsay_reply(1349, 110);
    end
    else begin
        gsay_reply(1349, 111);
    end
    giq_option(1, 1349, 112, Node002, 50);
    giq_option(1, 1349, 114, Node002, 50);
    giq_option(1, 1349, 116, Node999, 50);
end

procedure Node002
begin
    gsay_reply(1349, 118);
    giq_option(1, 1349, 120, Node999, 50);
end

procedure Node003
begin
    gsay_message(1349, 122, 50);
end

procedure Node004
begin
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        gsay_reply(1349, 124);
    end
    else begin
        gsay_reply(1349, 125);
    end
    giq_option(1, 1349, 126, Node005, 50);
    giq_option(1, 1349, 128, Node005, 50);
    giq_option(1, 1349, 130, Node999, 50);
end

procedure Node005
begin
    gsay_reply(1349, 132);
    giq_option(1, 1349, 134, Node006, 50);
    giq_option(1, 1349, 136, Node999, 50);
end

procedure Node006
begin
    if (metarule(17, 2) == 0) then begin
        debug_msg("  mark_on_map(" + 2 + ")");
        mark_area_known(0, 2, 1);
    end
    gsay_message(1349, 138, 50);
end

procedure Node007
begin
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        gsay_reply(1349, 140);
    end
    else begin
        gsay_reply(1349, 142);
    end
    giq_option(1, 1349, 144, Node005, 50);
    giq_option(1, 1349, 146, Node999, 50);
end

procedure Node008
begin
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        gsay_reply(1349, 148);
    end
    else begin
        gsay_reply(1349, 150);
    end
    giq_option(4, 1349, 152, Node010, 50);
    giq_option(-3, 1349, 154, Node010, 50);
    giq_option(4, 1349, 156, Node009, 51);
    giq_option(-3, 1349, 158, Node009, 51);
    giq_option(4, 1349, 160, Node999, 50);
    giq_option(-3, 1349, 162, Node999, 50);
end

procedure Node009
begin
    set_local_var(1, -4);
    set_local_var(3, -100);
    gsay_reply(1349, 164);
    giq_option(4, 1349, 166, Node999, 50);
    giq_option(-3, 1349, 168, Node999, 50);
end

procedure Node010
begin
    gsay_reply(1349, 170);
    giq_option(4, 1349, 172, Node011, 50);
    giq_option(-3, 1349, 174, Node011, 50);
    giq_option(4, 1349, 176, Node012, 51);
    giq_option(-3, 1349, 178, Node012, 51);
    giq_option(4, 1349, 180, Node999, 50);
    giq_option(-3, 1349, 182, Node999, 50);
end

procedure Node011
begin
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        gsay_reply(1349, 184);
    end
    else begin
        gsay_reply(1349, 186);
    end
    giq_option(4, 1349, 188, Node012, 50);
    giq_option(-3, 1349, 190, Node012, 50);
    giq_option(4, 1349, 192, Node997, 51);
    giq_option(-3, 1349, 194, Node997, 51);
    giq_option(4, 1349, 196, Node999, 50);
    giq_option(-3, 1349, 198, Node999, 50);
end

procedure Node012
begin
    gsay_reply(1349, 200);
    giq_option(4, 1349, 202, Node997, 51);
    giq_option(-3, 1349, 204, Node997, 51);
    giq_option(4, 1349, 206, Node999, 50);
    giq_option(-3, 1349, 208, Node999, 50);
end

procedure Node013
begin
    gsay_message(1349, 210, 50);
end

procedure Node014
begin
    gsay_message(1349, 212, 50);
end

procedure Node015
begin
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        gsay_reply(1349, 214);
    end
    else begin
        gsay_reply(1349, 216);
    end
    giq_option(4, 1349, 218, Node016, 50);
    giq_option(-3, 1349, 220, Node016, 50);
    giq_option(4, 1349, 222, Node999, 50);
    giq_option(-3, 1349, 224, Node999, 50);
end

procedure Node016
begin
    gsay_reply(1349, 226);
    giq_option(4, 1349, 228, Node018, 50);
    giq_option(-3, 1349, 230, Node018, 50);
    giq_option(4, 1349, 232, Node018, 50);
    giq_option(-3, 1349, 234, Node018, 50);
    giq_option(4, 1349, 236, Node017, 51);
    giq_option(-3, 1349, 238, Node017, 51);
end

procedure Node017
begin
    set_local_var(1, -4);
    set_local_var(3, -100);
    gsay_message(1349, 240, 50);
end

procedure Node018
begin
    gsay_reply(1349, 242);
    giq_option(8, 1349, 244, Node019, 50);
    giq_option(4, 1349, 246, Node020, 50);
    giq_option(-3, 1349, 248, Node020, 50);
    giq_option(4, 1349, 250, Node999, 50);
    giq_option(-3, 1349, 252, Node999, 50);
end

procedure Node019
begin
    gsay_reply(1349, 254);
    giq_option(8, 1349, 256, Node020, 50);
    giq_option(8, 1349, 260, Node999, 50);
end

procedure Node020
begin
    gsay_reply(1349, 264);
    giq_option(-3, 1349, 266, Node025, 50);
    giq_option(4, 1349, 278, Node021, 50);
    giq_option(4, 1349, 280, Node022, 50);
    giq_option(4, 1349, 282, Node023, 50);
    giq_option(4, 1349, 284, Node024, 50);
end

procedure Node021
begin
    gsay_reply(1349, 268);
    giq_option(4, 1349, 280, Node022, 50);
    giq_option(4, 1349, 282, Node023, 50);
    giq_option(4, 1349, 284, Node024, 50);
    giq_option(4, 1349, 286, Node026, 50);
    giq_option(4, 1349, 288, Node999, 50);
end

procedure Node022
begin
    gsay_reply(1349, 270);
    giq_option(4, 1349, 278, Node021, 50);
    giq_option(4, 1349, 282, Node023, 50);
    giq_option(4, 1349, 284, Node024, 50);
    giq_option(4, 1349, 286, Node026, 50);
    giq_option(4, 1349, 288, Node999, 50);
end

procedure Node023
begin
    gsay_reply(1349, 272);
    giq_option(4, 1349, 278, Node021, 50);
    giq_option(4, 1349, 280, Node022, 50);
    giq_option(4, 1349, 284, Node024, 50);
    giq_option(4, 1349, 286, Node026, 50);
    giq_option(4, 1349, 288, Node999, 50);
end

procedure Node024
begin
    if (metarule(17, 2) == 0) then begin
        debug_msg("  mark_on_map(" + 2 + ")");
        mark_area_known(0, 2, 1);
    end
    gsay_reply(1349, 274);
    giq_option(4, 1349, 278, Node021, 50);
    giq_option(4, 1349, 280, Node022, 50);
    giq_option(4, 1349, 282, Node023, 50);
    giq_option(4, 1349, 286, Node026, 50);
    giq_option(4, 1349, 288, Node999, 50);
end

procedure Node025
begin
    if (metarule(17, 2) == 0) then begin
        debug_msg("  mark_on_map(" + 2 + ")");
        mark_area_known(0, 2, 1);
    end
    gsay_reply(1349, 290);
    giq_option(-3, 1349, 292, Node026, 50);
    giq_option(-3, 1349, 294, Node999, 50);
end

procedure Node026
begin
    gsay_reply(1349, 296);
    giq_option(4, 1349, 298, Node020, 50);
    giq_option(-3, 1349, 300, Node020, 50);
    giq_option(4, 1349, 302, Node027, 50);
    giq_option(-3, 1349, 304, Node027, 50);
    if (global_var(183) == 2) then begin
        giq_option(4, 1349, 306, Node049, 50);
        giq_option(-3, 1349, 308, Node049, 50);
    end
    giq_option(4, 1349, 310, Node999, 50);
    giq_option(-3, 1349, 312, Node999, 50);
end

procedure Node027
begin
    gsay_reply(1349, 314);
    giq_option(4, 1349, 316, Node028, 50);
    giq_option(-3, 1349, 318, Node028, 50);
    giq_option(4, 1349, 320, Node029, 50);
    giq_option(-3, 1349, 322, Node029, 50);
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        giq_option(4, 1349, 324, Node030, 50);
        giq_option(-3, 1349, 326, Node030, 50);
    end
    giq_option(4, 1349, 328, Node031, 50);
    giq_option(-3, 1349, 330, Node031, 50);
    giq_option(4, 1349, 332, Node026, 50);
    giq_option(-3, 1349, 334, Node026, 50);
    giq_option(4, 1349, 336, Node999, 50);
    giq_option(-3, 1349, 338, Node999, 50);
end

procedure Node028
begin
    gsay_reply(1349, 340);
    giq_option(4, 1349, 352, Node027, 50);
    giq_option(-3, 1349, 354, Node027, 50);
    giq_option(4, 1349, 356, Node026, 50);
    giq_option(-3, 1349, 358, Node026, 50);
    giq_option(4, 1349, 360, Node999, 50);
    giq_option(-3, 1349, 362, Node999, 50);
end

procedure Node029
begin
    gsay_reply(1349, 342);
    giq_option(4, 1349, 352, Node027, 50);
    giq_option(-3, 1349, 354, Node027, 50);
    giq_option(4, 1349, 356, Node026, 50);
    giq_option(-3, 1349, 358, Node026, 50);
    giq_option(4, 1349, 360, Node999, 50);
    giq_option(-3, 1349, 362, Node999, 50);
end

procedure Node030
begin
    gsay_reply(1349, 344);
    giq_option(4, 1349, 352, Node027, 50);
    giq_option(-3, 1349, 354, Node027, 50);
    giq_option(4, 1349, 356, Node026, 50);
    giq_option(-3, 1349, 358, Node026, 50);
    giq_option(4, 1349, 360, Node999, 50);
    giq_option(-3, 1349, 362, Node999, 50);
end

procedure Node031
begin
    gsay_reply(1349, 346);
    giq_option(4, 1349, 348, Node032, 50);
    giq_option(4, 1349, 350, NodeBarter, 50);
    giq_option(-3, 1349, 351, NodeBarter, 50);
    giq_option(4, 1349, 352, Node027, 50);
    giq_option(-3, 1349, 354, Node027, 50);
    giq_option(4, 1349, 356, Node026, 50);
    giq_option(-3, 1349, 358, Node026, 50);
    giq_option(4, 1349, 360, Node999, 50);
    giq_option(-3, 1349, 362, Node999, 50);
end

procedure Node032
begin
    gsay_reply(1349, 364);
    giq_option(4, 1349, 366, Node033, 50);
    giq_option(4, 1349, 368, Node999, 50);
end

procedure Node033
begin
    gsay_reply(1349, 370);
    giq_option(4, 1349, 372, Node034, 50);
end

procedure Node034
begin
    gsay_reply(1349, 374);
    giq_option(4, 1349, 378, Node035, 50);
end

procedure Node035
begin
    gsay_reply(1349, 380);
    giq_option(4, 1349, 382, Node036, 50);
    giq_option(4, 1349, 384, Node026, 50);
end

procedure Node036
begin
    gsay_reply(1349, 386);
    giq_option(4, 1349, 388, Node037, 50);
end

procedure Node037
begin
    gsay_reply(1349, 390);
    giq_option(4, 1349, 392, Node038, 50);
    giq_option(4, 1349, 394, Node026, 50);
end

procedure Node038
begin
    gsay_reply(1349, 396);
    if ((local_var(7) == 0) and (has_skill(dude_obj, 15) <= 60) and (get_critter_stat(dude_obj, 3) >= 8)) then begin
        giq_option(4, 1349, 398, Node039, 50);
    end
    giq_option(4, 1349, 399, Node052, 50);
    giq_option(4, 1349, 400, Node026, 50);
    giq_option(4, 1349, 402, Node999, 50);
end

procedure Node039
begin
    gsay_reply(1349, 404);
    giq_option(4, 1349, 406, Node040, 50);
    giq_option(4, 1349, 408, Node999, 50);
end

procedure Node040
begin
    gsay_reply(1349, 410);
    giq_option(4, 1349, 412, Node041, 50);
    giq_option(4, 1349, 414, Node999, 50);
end

procedure Node041
begin
    gsay_reply(1349, 416);
    giq_option(4, 1349, 418, Node042, 50);
    giq_option(4, 1349, 420, Node999, 50);
end

procedure Node042
begin
    gsay_reply(1349, 422);
    giq_option(4, 1349, 424, Node043, 50);
    giq_option(4, 1349, 426, Node999, 50);
end

procedure Node043
begin
    gsay_reply(1349, 428);
    giq_option(4, 1349, 430, Node044, 50);
end

procedure Node044
begin
    gsay_reply(1349, 432);
    giq_option(4, 1349, 434, Node045, 50);
end

procedure Node045
begin
    gsay_reply(1349, 436);
    giq_option(4, 1349, 438, Node046, 50);
end

procedure Node046
begin
    gsay_reply(1349, 440);
    giq_option(4, 1349, 442, Node047, 50);
end

procedure Node047
begin
    gsay_reply(1349, 444);
    giq_option(4, 1349, 446, NodeRiddle, 50);
    giq_option(4, 1349, 448, Node999, 50);
end

procedure Node048
begin
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        gsay_reply(1349, 450);
    end
    else begin
        gsay_reply(1349, 452);
    end
    giq_option(4, 1349, 476, Node026, 50);
    giq_option(-3, 1349, 478, Node026, 50);
    giq_option(4, 1349, 480, NodeBarter, 50);
    giq_option(-3, 1349, 482, NodeBarter, 50);
    giq_option(4, 1349, 484, Node999, 50);
    giq_option(-3, 1349, 486, Node999, 50);
end

procedure Node049
begin
    set_global_var(697, 1);
    gsay_reply(1349, 454);
    giq_option(4, 1349, 456, Node026, 50);
    giq_option(-3, 1349, 458, Node026, 50);
end

procedure Node050
begin
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        gsay_reply(1349, 460);
    end
    else begin
        gsay_reply(1349, 462);
    end
    giq_option(4, 1349, 464, Node051, 50);
    giq_option(-3, 1349, 468, Node051, 50);
    giq_option(4, 1349, 470, Node999, 50);
    giq_option(-3, 1349, 472, Node999, 50);
end

procedure Node051
begin
    gsay_reply(1349, 474);
    giq_option(4, 1349, 476, Node026, 50);
    giq_option(-3, 1349, 478, Node026, 50);
    giq_option(4, 1349, 480, NodeBarter, 50);
    giq_option(-3, 1349, 482, NodeBarter, 50);
    giq_option(4, 1349, 484, Node999, 50);
    giq_option(-3, 1349, 486, Node999, 50);
end

procedure Node052
begin
    if (metarule(17, 18) == 0) then begin
        debug_msg("  mark_on_map(" + 18 + ")");
        mark_area_known(0, 18, 1);
    end
    gsay_reply(1349, 700);
    giq_option(4, 1349, 702, Node026, 50);
    giq_option(4, 1349, 704, Node999, 50);
end

procedure SelectBag
begin
    gsay_reply(1349, 600);
    giq_option(4, 1349, 601, SelectFirst, 50);
    giq_option(4, 1349, 602, SelectSecond, 50);
    giq_option(4, 1349, 603, SelectThird, 50);
    giq_option(4, 1349, 604, SelectWeigh, 50);
    giq_option(4, 1349, 605, Node999, 50);
end

procedure SelectFirst
begin
    cur_num := 1;
    call SelectCaps();
end

procedure SelectSecond
begin
    cur_num := 2;
    call SelectCaps();
end

procedure SelectThird
begin
    cur_num := 3;
    call SelectCaps();
end

procedure SelectCaps
begin
    gsay_reply(1349, 606);
    if ((cur_num == 1) and (cur_caps1 >= 1) or ((cur_num == 2) and (cur_caps2 >= 1)) or ((cur_num == 3) and (cur_caps3 >= 1))) then begin
        giq_option(4, 1349, 607, Select1, 50);
    end
    if ((cur_num == 1) and (cur_caps1 >= 2) or ((cur_num == 2) and (cur_caps2 >= 2)) or ((cur_num == 3) and (cur_caps3 >= 2))) then begin
        giq_option(4, 1349, 608, Select2, 50);
    end
    if ((cur_num == 1) and (cur_caps1 >= 3) or ((cur_num == 2) and (cur_caps2 >= 3)) or ((cur_num == 3) and (cur_caps3 >= 3))) then begin
        giq_option(4, 1349, 609, Select3, 50);
    end
    if ((cur_num == 1) and (cur_caps1 >= 4) or ((cur_num == 2) and (cur_caps2 >= 4)) or ((cur_num == 3) and (cur_caps3 >= 4))) then begin
        giq_option(4, 1349, 610, Select4, 50);
    end
    if ((cur_num == 1) and (cur_caps1 >= 5) or ((cur_num == 2) and (cur_caps2 >= 5)) or ((cur_num == 3) and (cur_caps3 >= 5))) then begin
        giq_option(4, 1349, 611, Select5, 50);
    end
    giq_option(4, 1349, 612, SelectBag, 50);
    giq_option(4, 1349, 613, SelectWeigh, 50);
    giq_option(4, 1349, 614, NodeRiddle, 50);
    giq_option(4, 1349, 615, Node999, 50);
end

procedure Select1
begin
    if (cur_num == 1) then begin
        cur_caps1 := cur_caps1 - 1;
    end
    else begin
        if (cur_num == 2) then begin
            cur_caps2 := cur_caps2 - 1;
        end
        else begin
            if (cur_num == 3) then begin
                cur_caps3 := cur_caps3 - 1;
            end
        end
    end
    cur_weight := cur_weight + (2 + (cur_num != fake_num));
    call SelectBag();
end

procedure Select2
begin
    if (cur_num == 1) then begin
        cur_caps1 := cur_caps1 - 2;
    end
    else begin
        if (cur_num == 2) then begin
            cur_caps2 := cur_caps2 - 2;
        end
        else begin
            if (cur_num == 3) then begin
                cur_caps3 := cur_caps3 - 2;
            end
        end
    end
    cur_weight := cur_weight + (2 * (2 + (cur_num != fake_num)));
    call SelectBag();
end

procedure Select3
begin
    if (cur_num == 1) then begin
        cur_caps1 := cur_caps1 - 3;
    end
    else begin
        if (cur_num == 2) then begin
            cur_caps2 := cur_caps2 - 3;
        end
        else begin
            if (cur_num == 3) then begin
                cur_caps3 := cur_caps3 - 3;
            end
        end
    end
    cur_weight := cur_weight + (3 * (2 + (cur_num != fake_num)));
    call SelectBag();
end

procedure Select4
begin
    if (cur_num == 1) then begin
        cur_caps1 := cur_caps1 - 4;
    end
    else begin
        if (cur_num == 2) then begin
            cur_caps2 := cur_caps2 - 4;
        end
        else begin
            if (cur_num == 3) then begin
                cur_caps3 := cur_caps3 - 4;
            end
        end
    end
    cur_weight := cur_weight + (4 * (2 + (cur_num != fake_num)));
    call SelectBag();
end

procedure Select5
begin
    if (cur_num == 1) then begin
        cur_caps1 := cur_caps1 - 5;
    end
    else begin
        if (cur_num == 2) then begin
            cur_caps2 := cur_caps2 - 5;
        end
        else begin
            if (cur_num == 3) then begin
                cur_caps3 := cur_caps3 - 5;
            end
        end
    end
    cur_weight := cur_weight + (5 * (2 + (cur_num != fake_num)));
    call SelectBag();
end

procedure SelectWeigh
begin
    gsay_reply(1349, message_str(1349, 616) + cur_weight + message_str(1349, 617));
    giq_option(4, 1349, 618, Answer1, 50);
    giq_option(4, 1349, 619, Answer2, 50);
    giq_option(4, 1349, 620, Answer3, 50);
    giq_option(4, 1349, 621, Node999, 50);
    giq_option(4, 1349, 622, Node999, 50);
end

procedure Answer1
begin
    cur_num := 1;
    call CheckAnswer();
end

procedure Answer2
begin
    cur_num := 2;
    call CheckAnswer();
end

procedure Answer3
begin
    cur_num := 3;
    call CheckAnswer();
end

procedure CheckAnswer
begin
    if (cur_weight == 0) then begin
        call NodeAngry1();
    end
    else begin
        if ((cur_num == fake_num) and ((cur_caps1 == cur_caps2) or (cur_caps1 == cur_caps3) or (cur_caps2 == cur_caps3))) then begin
            call NodeAngry2();
        end
        else begin
            if (cur_num != fake_num) then begin
                call NodeFailed();
            end
            else begin
                if (cur_num == fake_num) then begin
                    call NodeSuccess();
                end
            end
        end
    end
end

procedure NodeAngry1
begin
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        gsay_message(1349, 630, 50);
    end
    else begin
        gsay_message(1349, 631, 50);
    end
end

procedure NodeAngry2
begin
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        gsay_message(1349, 632, 50);
    end
    else begin
        gsay_message(1349, 633, 50);
    end
end

procedure NodeFailed
begin
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        gsay_message(1349, message_str(1349, 634) + message_str(1349, 635 + fake_num) + message_str(1349, 639), 50);
    end
    else begin
        gsay_message(1349, message_str(1349, 635) + message_str(1349, 635 + fake_num) + message_str(1349, 639), 50);
    end
end

procedure NodeSuccess
begin
    gsay_reply(1349, 640);
    giq_option(4, 1349, 650, NodeSuccessA, 50);
end

procedure NodeSuccessA
begin
    variable LVar0 := 0;
    game_time_advance(8 * (60 * (60 * 10)));
    LVar0 := has_skill(dude_obj, 15);
    critter_mod_skill(dude_obj, 15, random(10, 20));
    LVar0 := has_skill(dude_obj, 15) - LVar0;
    display_msg(message_str(14, 500) + LVar0 + message_str(14, 501) + message_str(14, 615));
    gsay_reply(1349, 641);
    giq_option(4, 1349, 650, NodeSuccessB, 50);
end

procedure NodeSuccessB
begin
    gsay_reply(1349, 642);
    giq_option(4, 1349, 643, Node999, 50);
end

