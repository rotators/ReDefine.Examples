variable tmp_gen_rep;
variable global_temp;
variable in_dialog;
variable caught_thief;
variable the_follow_obj;

procedure start;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure timed_event_p_proc;
procedure pickup_p_proc;


procedure start
begin
end

procedure use_p_proc
begin
end

procedure look_at_p_proc
begin
    script_overrides;
    if (get_critter_stat(self_obj, 34) == 0) then begin
        display_msg(message_str(2071, 100));
    end
    else begin
        display_msg(message_str(2071, 101));
    end
end

procedure description_p_proc
begin
    script_overrides;
    if (get_critter_stat(self_obj, 34) == 0) then begin
        display_msg(message_str(2071, 102));
    end
    else begin
        display_msg(message_str(2071, 103));
    end
end

procedure use_skill_on_p_proc
begin
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(4, local_var(4) bwor 8);
        set_local_var(4, local_var(4) bwor 2);
    end
end

procedure map_enter_p_proc
begin
    variable LVar0 := 0;
    if (global_var(195) == 2) then begin
        kill_critter(self_obj, random(62, 63));
    end
    if (metarule(14, 0)) then begin
        LVar0 := create_object_sid(23, 0, 0, -1);
        add_obj_to_inven(self_obj, LVar0);
        wield_obj_critter(self_obj, LVar0);
        LVar0 := create_object_sid(35, 0, 0, -1);
        add_obj_to_inven(self_obj, LVar0);
        LVar0 := create_object_sid(40, 0, 0, -1);
        add_obj_to_inven(self_obj, LVar0);
        if (cur_map_index == 168) then begin
            set_map_var(0, map_var(0) + 1);
        end
        else begin
            if (cur_map_index == 169) then begin
                set_map_var(0, map_var(0) + 1);
            end
            else begin
                if (cur_map_index == 170) then begin
                    set_map_var(0, map_var(0) + 1);
                end
            end
        end
        LVar0 := create_object_sid(342, 0, 0, -1);
        add_mult_objs_to_inven(self_obj, LVar0, 1);
    end
    critter_add_trait(self_obj, 1, 6, 84);
    critter_add_trait(self_obj, 1, 5, 22);
    return 0;
    LVar0 := 0;
end

procedure map_update_p_proc
begin
end

procedure talk_p_proc
begin
    if (global_var(241)) then begin
        call Node001();
    end
    else begin
        call Node003();
    end
end

procedure critter_p_proc
begin
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if (((local_var(4) bwand 2) != 0) or (global_var(11) == 1)) then begin
            call Node002();
            if (critter_is_fleeing(self_obj)) then begin
                if (anim_busy(self_obj) == 0) then begin
                    if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                        if (anim_busy(self_obj) == 0) then begin
                            global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                                debug_msg("flee loop: rot == " + global_temp);
                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                global_temp := (global_temp + 1) % 6;
                            end
                        end
                    end
                end
            end
            else begin
                attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
            end
        end
        else begin
            if (cur_map_index == 168) then begin
                if (map_var(2) == 1) then begin
                    if (tile_num(self_obj) == 18890) then begin
                        set_map_var(2, 2);
                        if (in_dialog == 0) then begin
                            in_dialog := 1;
                            start_gdialog(2071, self_obj, 4, -1, -1);
                            gsay_start;
                            call Node004();
                            gsay_end;
                            end_dialogue;
                            in_dialog := 0;
                        end
                        else begin
                            call Node004();
                        end
                    end
                    else begin
                        if (map_var(3)) then begin
                            call Node002();
                            if (critter_is_fleeing(self_obj)) then begin
                                if (anim_busy(self_obj) == 0) then begin
                                    if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                                        if (anim_busy(self_obj) == 0) then begin
                                            global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
                                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                            global_temp := (global_temp + 1) % 6;
                                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                                                debug_msg("flee loop: rot == " + global_temp);
                                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                                global_temp := (global_temp + 1) % 6;
                                            end
                                        end
                                    end
                                end
                            end
                            else begin
                                attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
                            end
                        end
                    end
                end
                else begin
                    if (map_var(3)) then begin
                        call Node002();
                        if (critter_is_fleeing(self_obj)) then begin
                            if (anim_busy(self_obj) == 0) then begin
                                if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                                    if (anim_busy(self_obj) == 0) then begin
                                        global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
                                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                        global_temp := (global_temp + 1) % 6;
                                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                                            debug_msg("flee loop: rot == " + global_temp);
                                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                            global_temp := (global_temp + 1) % 6;
                                        end
                                    end
                                end
                            end
                        end
                        else begin
                            attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
                        end
                    end
                end
            end
            else begin
                if (cur_map_index == 169) then begin
                    if (map_var(3)) then begin
                        call Node002();
                        if (critter_is_fleeing(self_obj)) then begin
                            if (anim_busy(self_obj) == 0) then begin
                                if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                                    if (anim_busy(self_obj) == 0) then begin
                                        global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
                                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                        global_temp := (global_temp + 1) % 6;
                                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                                            debug_msg("flee loop: rot == " + global_temp);
                                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                            global_temp := (global_temp + 1) % 6;
                                        end
                                    end
                                end
                            end
                        end
                        else begin
                            attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
                        end
                    end
                end
                else begin
                    if (cur_map_index == 170) then begin
                        if (map_var(3)) then begin
                            call Node002();
                            if (critter_is_fleeing(self_obj)) then begin
                                if (anim_busy(self_obj) == 0) then begin
                                    if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                                        if (anim_busy(self_obj) == 0) then begin
                                            global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
                                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                            global_temp := (global_temp + 1) % 6;
                                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                                                debug_msg("flee loop: rot == " + global_temp);
                                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                                global_temp := (global_temp + 1) % 6;
                                            end
                                        end
                                    end
                                end
                            end
                            else begin
                                attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure destroy_p_proc
begin
    if (cur_map_index == 168) then begin
        set_map_var(0, map_var(0) - 1);
        if (map_var(0) <= 0) then begin
            display_msg(message_str(2071, 600));
            set_global_var(1129, global_var(1129) + 1);
            if (global_var(27) == 5) then begin
                set_exit_grids(0, 164, 0, 19694, 0);
            end
        end
    end
    else begin
        if (cur_map_index == 169) then begin
            set_map_var(0, map_var(0) - 1);
            if (map_var(0) <= 0) then begin
                display_msg(message_str(2071, 600));
                set_global_var(1129, global_var(1129) + 1);
                if (global_var(27) == 5) then begin
                    set_exit_grids(0, 165, 0, 19290, 0);
                end
            end
        end
        else begin
            if (cur_map_index == 170) then begin
                set_map_var(0, map_var(0) - 1);
                if (map_var(0) <= 0) then begin
                    display_msg(message_str(2071, 600));
                    set_global_var(1129, global_var(1129) + 1);
                end
            end
        end
    end
    if (source_obj == dude_obj) then begin
        set_global_var(5, global_var(5) + 1);
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
            set_global_var(2, 1);
            set_global_var(3, 0);
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
            set_global_var(3, 1);
            set_global_var(2, 0);
        end
        set_global_var(0, global_var(0) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        tmp_gen_rep := global_var(0);
        if (has_trait(0, dude_obj, 95)) then begin
            tmp_gen_rep := global_var(0) * 2;
        end
        if (tmp_gen_rep >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (tmp_gen_rep >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (tmp_gen_rep >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (tmp_gen_rep >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure Node001
begin
    float_msg(self_obj, message_str(2071, random(200, 204 + ((global_var(445) bwand 1) != 0))), 3);
end

procedure Node002
begin
    if (global_var(11) == 1) then begin
        float_msg(self_obj, message_str(2071, 300), 2);
    end
    else begin
        float_msg(self_obj, message_str(2071, 301), 2);
    end
end

procedure Node003
begin
    float_msg(self_obj, message_str(2071, random(400, 402)), 8);
end

procedure Node004
begin
    gsay_reply(2071, 500);
    giq_option(4, 2071, 501, Node005, 50);
    giq_option(4, 2071, 502, Node006, 50);
end

procedure Node005
begin
    variable LVar0 := 0;
    destroy_object(tile_contains_pid_obj(18298, elevation(dude_obj), 16777433));
    destroy_object(tile_contains_pid_obj(20497, elevation(dude_obj), 16777433));
    LVar0 := create_object_sid(16777433, 18298, elevation(dude_obj), 2076);
    critter_add_trait(LVar0, 1, 6, 110);
    LVar0 := create_object_sid(16777433, 20497, elevation(dude_obj), 2076);
    critter_add_trait(LVar0, 1, 6, 110);
    attack_setup(LVar0, self_obj);
    return 0;
    LVar0 := 0;
end

procedure Node006
begin
    if (cur_map_index == 168) then begin
        set_map_var(3, 1);
    end
    else begin
        if (cur_map_index == 169) then begin
            set_map_var(3, 1);
        end
        else begin
            if (cur_map_index == 170) then begin
                set_map_var(3, 1);
            end
        end
    end
end

procedure timed_event_p_proc
begin
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(4, local_var(4) bwor 2);
    end
end

