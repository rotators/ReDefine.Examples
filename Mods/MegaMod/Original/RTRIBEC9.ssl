variable tmp_gen_rep;
variable global_temp;
variable dest_tile;
variable step_tile;

procedure start;
procedure critter_p_proc;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;
procedure Node999;
procedure Node990;
procedure Node991;
procedure Node992;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;

import variable WARRIOR_obj;
import variable GECKO_obj;

procedure timed_event_p_proc;
procedure destroy_p_proc;
procedure combat_p_proc;
procedure pickup_p_proc;


procedure start
begin
    WARRIOR_obj := self_obj;
end

procedure critter_p_proc
begin
    if ((global_var(1127) < 3) and not(combat_is_initialized) and (tile_distance(tile_num(self_obj), tile_num(dude_obj)) <= 2)) then begin
        call talk_p_proc();
    end
    if ((global_var(1121) == 1) and obj_can_see_obj(self_obj, dude_obj)) then begin
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
    else begin
        if ((tile_num(self_obj) != 22727) and (local_var(8) == 1)) then begin
            if ((tile_num(self_obj) != 22727) and (22727 != 0)) then begin
                if ((dest_tile == 22727) and (step_tile < 0)) then begin
                    step_tile := step_tile + 1;
                    debug_msg("step_tile: " + step_tile);
                end
                else begin
                    if (anim_busy(self_obj) == 0) then begin
                        dest_tile := 22727;
                        step_tile := 22727;
                        animate_move_obj_to_tile(self_obj, step_tile, 0);
                        while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), 22727) >= tile_distance(step_tile, 22727))) do begin
                            debug_msg("rot: " + rotation_to_tile(step_tile, tile_num(self_obj)));
                            step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), 1 % tile_distance(step_tile, tile_num(self_obj)));
                            debug_msg("step_var: " + step_tile);
                            animate_move_obj_to_tile(self_obj, step_tile, 0);
                        end
                        if (anim_busy(self_obj) == 0) then begin
                            if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
                                if (anim_busy(self_obj) == 0) then begin
                                    global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                    global_temp := (global_temp + 1) % 6;
                                    while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                        debug_msg("flee loop: rot == " + global_temp);
                                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                        global_temp := (global_temp + 1) % 6;
                                    end
                                end
                            end
                            else begin
                                step_tile := -10;
                            end
                        end
                    end
                    else begin
                        if (tile_distance(tile_num(self_obj), 22727) < tile_distance(dest_tile, 22727)) then begin
                            reg_anim_func(2, self_obj);
                        end
                    end
                end
            end
        end
        else begin
            if ((tile_num(self_obj) == 22727) and (local_var(8) == 1)) then begin
                set_local_var(8, 2);
            end
        end
    end
end

procedure use_p_proc
begin
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 0) then begin
        display_msg(message_str(2294, 100));
    end
    else begin
        display_msg(message_str(2294, 101));
    end
end

procedure description_p_proc
begin
    script_overrides;
    if (global_var(1127) > 6) then begin
        display_msg(message_str(2294, 106));
    end
    else begin
        if ((global_var(1127) == 5) or (global_var(1127) == 6)) then begin
            display_msg(message_str(2294, 105));
        end
        else begin
            if (local_var(4) == 0) then begin
                display_msg(message_str(2294, 102));
            end
            else begin
                if (local_var(7) == 1) then begin
                    display_msg(message_str(2294, 103));
                end
                else begin
                    if (local_var(7) == 0) then begin
                        display_msg(message_str(2294, 104));
                    end
                end
            end
        end
    end
end

procedure use_skill_on_p_proc
begin
    if ((action_being_used == 7) or (action_being_used == 6)) then begin
        script_overrides;
        float_msg(self_obj, message_str(2294, 700), 8);
    end
end

procedure use_obj_on_p_proc
begin
    if ((obj_pid(obj_being_used_with) == 91) or (obj_pid(obj_being_used_with) == 47) or (obj_pid(obj_being_used_with) == 409)) then begin
        script_overrides;
        float_msg(self_obj, message_str(2294, 700), 8);
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(1121, 1);
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, 1, 6, 214);
    if (global_var(1127) == 1) then begin
        critter_add_trait(self_obj, 1, 6, 0);
        if (local_var(9) == 0) then begin
            set_local_var(9, 1);
            critter_injure(self_obj, 8);
            set_local_var(7, 1);
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            reg_anim_animate(self_obj, 48, -1);
            reg_anim_func(3, 0);
            critter_injure(self_obj, 2);
        end
    end
    if (cur_map_index == 163) then begin
        if (global_var(1127) == 4) then begin
            move_to(self_obj, 18517, 1);
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            reg_anim_animate(self_obj, 48, 0);
            reg_anim_func(3, 0);
            anim(self_obj, 1000, 3);
            set_global_var(1127, 5);
            set_local_var(12, game_time);
        end
        else begin
            if (((game_time - local_var(12)) >= (2 * (24 * (60 * (60 * 10))))) and ((global_var(1127) == 5) or (global_var(1127) == 6))) then begin
                set_global_var(1127, 7);
                reg_anim_func(2, self_obj);
                reg_anim_func(1, 1);
                reg_anim_animate(self_obj, 0, 0);
                reg_anim_func(3, 0);
                move_to(self_obj, 21890, 1);
                anim(self_obj, 1000, 3);
            end
        end
    end
    if ((global_var(1127) >= 5) and (cur_map_index == 253)) then begin
        destroy_object(self_obj);
    end
end

procedure map_update_p_proc
begin
    if ((global_var(1121) == 1) and (cur_map_index == 253)) then begin
        destroy_object(self_obj);
    end
end

procedure talk_p_proc
begin
    set_local_var(4, 1);
    if (local_var(7) == 1) then begin
        start_gdialog(2294, self_obj, 4, -1, -1);
        gsay_start;
        call Node001();
        gsay_end;
        end_dialogue;
    end
    else begin
        if (global_var(1127) == 4) then begin
            float_msg(self_obj, message_str(2294, 300), 8);
        end
        else begin
            if ((global_var(1127) == 5) or (global_var(1127) == 6)) then begin
                float_msg(self_obj, message_str(2294, random(500, 501)), 5);
            end
            else begin
                if (global_var(1127) == 7) then begin
                    if (global_var(494) == 8) then begin
                        float_msg(self_obj, message_str(2294, random(1000, 1001)), 8);
                    end
                    else begin
                        float_msg(self_obj, message_str(2294, 400), 8);
                    end
                end
            end
        end
    end
end

procedure Node999
begin
end

procedure Node990
begin
    anim(self_obj, 0, 2);
    set_local_var(8, 1);
    call Node991();
end

procedure Node991
begin
    set_local_var(7, 0);
    set_global_var(1127, 4);
end

procedure Node992
begin
    set_local_var(7, 0);
    set_global_var(1127, 3);
end

procedure Node001
begin
    gsay_reply(2294, 200);
    giq_option(4, 2294, 201, Node002, 50);
end

procedure Node002
begin
    gsay_reply(2294, 202);
    giq_option(4, 2294, 203, Node003, 50);
end

procedure Node003
begin
    gsay_reply(2294, 204);
    giq_option(4, 2294, 205, Node004, 50);
end

procedure Node004
begin
    gsay_reply(2294, 206);
    giq_option(4, 2294, 207, Node005, 50);
end

procedure Node005
begin
    gsay_reply(2294, 208);
    giq_option(4, 2294, 209, Node006, 50);
end

procedure Node006
begin
    gsay_reply(2294, 210);
    giq_option(4, 2294, 211, Node007, 50);
end

procedure Node007
begin
    gsay_reply(2294, 212);
    if (has_skill(dude_obj, 7) > 90) then begin
        giq_option(4, 2294, 213, Node008, 50);
    end
    else begin
        if (get_critter_stat(dude_obj, 0) > 5) then begin
            giq_option(4, 2294, 214, Node011, 50);
        end
        else begin
            if (party_member_obj(16777377) != 0) then begin
                giq_option(4, 2294, 217, Node011, 50);
            end
            else begin
                if (party_member_obj(16777313) != 0) then begin
                    giq_option(4, 2294, 216, Node011, 50);
                end
                else begin
                    giq_option(4, 2294, 215, Node012, 50);
                end
            end
        end
    end
end

procedure Node008
begin
    critter_injure(self_obj, 8 bwor 8388608);
    display_msg(message_str(2294, 600));
    give_exp_points(25);
    display_msg(message_str(14, 100) + 25 + message_str(14, 101));
    gsay_reply(2294, 218);
    giq_option(4, 2294, 209, Node009, 50);
end

procedure Node009
begin
    critter_injure(self_obj, 8 bwor 8388608);
    critter_heal(self_obj, 10);
    game_time_advance(60 * 10 * 15);
    gsay_reply(2294, 219);
    giq_option(4, 2294, 220, Node010, 50);
end

procedure Node010
begin
    gfade_out(600);
    gfade_in(600);
    game_time_advance(60 * 10 * 15);
    gsay_reply(2294, 221);
    giq_option(4, 2294, 222, Node990, 50);
end

procedure Node011
begin
    call Node991();
    move_to(self_obj, 18517, 1);
    load_map(163, 0);
end

procedure Node012
begin
    call Node992();
end

procedure timed_event_p_proc
begin
end

procedure destroy_p_proc
begin
    WARRIOR_obj := -1;
    if (global_var(1127) < 4) then begin
        set_global_var(1127, 2);
    end
end

procedure combat_p_proc
begin
    script_overrides;
    if ((GECKO_obj == -1) and (local_var(11) == 0)) then begin
        set_local_var(11, 1);
        terminate_combat;
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(1121, 1);
    end
end

