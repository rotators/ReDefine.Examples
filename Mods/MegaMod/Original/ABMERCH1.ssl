variable tmp_gen_rep;
variable global_temp;
variable dest_tile;
variable step_tile;

procedure start;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node998;
procedure Node999;

variable From_Node;
variable install_part := 12;
variable step;
variable installing_part;

procedure timed_event_p_proc;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure Node990;


procedure start
begin
end

procedure use_p_proc
begin
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(2260, 100));
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(2260, 102));
end

procedure use_skill_on_p_proc
begin
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(4, local_var(4) bwor 8);
        set_local_var(4, local_var(4) bwor 2);
        if (global_var(63) != -30) then begin
            set_global_var(63, -30);
        end
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(5, global_var(5) + 1);
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
            set_global_var(2, 1);
            set_global_var(3, 0);
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
            set_global_var(3, 1);
            set_global_var(2, 0);
        end
        set_global_var(0, global_var(0) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        tmp_gen_rep := global_var(0);
        if (has_trait(0, dude_obj, 95)) then begin
            tmp_gen_rep := global_var(0) * 2;
        end
        if (tmp_gen_rep >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (tmp_gen_rep >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (tmp_gen_rep >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (tmp_gen_rep >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(63, global_var(63) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
end

procedure map_enter_p_proc
begin
    if (metarule(14, 0)) then begin
        set_local_var(7, tile_num(self_obj));
    end
    add_timer_event(self_obj, game_ticks(5), 5);
end

procedure map_update_p_proc
begin
end

procedure talk_p_proc
begin
    if (not(installing_part)) then begin
        if ((game_time_hour >= 1900) or (game_time_hour < 600) and (global_var(1117) < 4)) then begin
            float_msg(self_obj, message_str(2260, 330), 8);
        end
        else begin
            if (global_var(1117) < 4) then begin
                start_gdialog(2260, self_obj, 4, -1, -1);
                gsay_start;
                if (global_var(1117) < 1) then begin
                    call Node001();
                end
                else begin
                    if (local_var(9) == 1) then begin
                        call Node009();
                    end
                    else begin
                        if (local_var(10) == 0) then begin
                            call Node012();
                        end
                        else begin
                            call Node007();
                        end
                    end
                end
                gsay_end;
                end_dialogue;
            end
            else begin
                call Node002();
            end
        end
    end
end

procedure Node001
begin
    gsay_reply(2260, 300);
    if (global_var(1117) == 1) then begin
        giq_option(4, 2260, 301, Node004, 50);
        giq_option(4, 2260, 313, Node013, 50);
    end
    else begin
        giq_option(4, 2260, 305, Node005, 50);
        giq_option(4, 2260, 312, Node013, 50);
    end
    giq_option(4, 2260, 310, Node999, 50);
end

procedure Node002
begin
    if (global_var(1117) != 5) then begin
        float_msg(self_obj, message_str(2260, random(109, 110)), 8);
    end
    else begin
        float_msg(self_obj, message_str(2260, 200), 8);
    end
end

procedure Node003
begin
    float_msg(self_obj, message_str(2260, random(103, 104)), 8);
end

procedure Node004
begin
    gsay_reply(2260, 302);
    giq_option(4, 2260, 303, Node006, 50);
    From_Node := 4;
end

procedure Node005
begin
    set_global_var(1117, 1);
    set_local_var(10, 1);
    gsay_reply(2260, 306);
    if (has_skill(dude_obj, 13) > 60) then begin
        giq_option(4, 2260, 307, Node006, 50);
    end
    else begin
        giq_option(4, 2260, 308, Node006, 50);
    end
    From_Node := 5;
end

procedure Node006
begin
    if (From_Node == 4) then begin
        gsay_reply(2260, 304);
    end
    else begin
        if (From_Node == 5) then begin
            gsay_reply(2260, 309);
        end
    end
    giq_option(4, 2260, 311, Node999, 50);
end

procedure Node007
begin
    gsay_reply(2260, 400);
    if (global_var(1117) == 2) then begin
        giq_option(4, 2260, 402, Node008, 50);
    end
    giq_option(4, 2260, 401, Node999, 50);
end

procedure Node008
begin
    gsay_reply(2260, 500);
    giq_option(4, 2260, 501, Node990, 50);
    giq_option(4, 2260, 502, Node014, 50);
    giq_option(4, 2260, 503, Node999, 51);
end

procedure Node009
begin
    gsay_reply(2260, 600);
    if (obj_is_carrying_obj_pid(dude_obj, 89)) then begin
        giq_option(4, 2260, 602, Node010, 50);
    end
    else begin
        giq_option(4, 2260, 601, Node999, 50);
    end
end

procedure Node010
begin
    gsay_reply(2260, 700);
    giq_option(4, 2260, 701, Node999, 50);
    giq_option(4, 2260, 702, Node011, 50);
end

procedure Node011
begin
    variable LVar0 := 0;
    gsay_reply(2260, 800);
    giq_option(4, 2260, 801, Node999, 50);
    LVar0 := obj_carrying_pid_obj(dude_obj, 89);
    rm_obj_from_inven(dude_obj, LVar0);
    destroy_object(LVar0);
    metarule3(100, self_obj, fixed_param, 0);
    add_timer_event(self_obj, game_ticks(1), install_part);
    installing_part := 1;
end

procedure Node012
begin
    gsay_reply(2260, 910);
    if (global_var(1117) == 2) then begin
        giq_option(4, 2260, 913, Node008, 50);
    end
    else begin
        giq_option(4, 2260, 911, Node005, 50);
    end
    giq_option(4, 2260, 912, Node999, 50);
end

procedure Node013
begin
    gsay_reply(2260, 320);
    giq_option(4, 2260, 321, Node005, 50);
    giq_option(4, 2260, 322, Node999, 50);
end

procedure Node014
begin
    set_local_var(11, 1);
    item_caps_adjust(dude_obj, 600);
    gsay_reply(2260, 510);
    giq_option(4, 2260, 511, Node990, 50);
end

procedure Node998
begin
    set_global_var(63, -30);
end

procedure Node999
begin
end

procedure timed_event_p_proc
begin
    if (combat_is_initialized) then begin
        add_timer_event(self_obj, game_ticks(5), 5);
    end
    else begin
        if (not((game_time_hour >= 1900) or (game_time_hour < 600))) then begin
            if (global_var(1117) < 4) then begin
                if (fixed_param == install_part) then begin
                    if (step == 0) then begin
                        step := 1;
                        if ((tile_num(self_obj) != 11708) and (11708 != 0)) then begin
                            if ((dest_tile == 11708) and (step_tile < 0)) then begin
                                step_tile := step_tile + 1;
                                debug_msg("step_tile: " + step_tile);
                            end
                            else begin
                                if (anim_busy(self_obj) == 0) then begin
                                    dest_tile := 11708;
                                    step_tile := 11708;
                                    animate_move_obj_to_tile(self_obj, step_tile, 0);
                                    while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), 11708) >= tile_distance(step_tile, 11708))) do begin
                                        debug_msg("rot: " + rotation_to_tile(step_tile, tile_num(self_obj)));
                                        step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), 5 % tile_distance(step_tile, tile_num(self_obj)));
                                        debug_msg("step_var: " + step_tile);
                                        animate_move_obj_to_tile(self_obj, step_tile, 0);
                                    end
                                    if (anim_busy(self_obj) == 0) then begin
                                        if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
                                            if (anim_busy(self_obj) == 0) then begin
                                                global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                global_temp := (global_temp + 1) % 6;
                                                while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                    debug_msg("flee loop: rot == " + global_temp);
                                                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                    global_temp := (global_temp + 1) % 6;
                                                end
                                            end
                                        end
                                        else begin
                                            step_tile := -10;
                                        end
                                    end
                                end
                                else begin
                                    if (tile_distance(tile_num(self_obj), 11708) < tile_distance(dest_tile, 11708)) then begin
                                        reg_anim_func(2, self_obj);
                                    end
                                end
                            end
                        end
                        metarule3(100, self_obj, fixed_param, 0);
                        add_timer_event(self_obj, game_ticks(2), install_part);
                    end
                    if (step == 1) then begin
                        step := 2;
                        reg_anim_func(2, self_obj);
                        anim(self_obj, 1000, 0);
                        metarule3(100, self_obj, fixed_param, 0);
                        add_timer_event(self_obj, game_ticks(1), install_part);
                    end
                    else begin
                        if (step == 2) then begin
                            step := 3;
                            reg_anim_func(2, self_obj);
                            anim(self_obj, random(10, 11), 0);
                            metarule3(100, self_obj, fixed_param, 0);
                            add_timer_event(self_obj, game_ticks(1), install_part);
                        end
                        else begin
                            if (step == 3) then begin
                                reg_anim_func(2, self_obj);
                                anim(self_obj, 0, 0);
                                float_msg(self_obj, message_str(2260, 900), 8);
                                display_msg(message_str(2260, 901));
                                set_global_var(1117, 4);
                                if (local_var(11) == 1) then begin
                                    give_exp_points(150);
                                    display_msg(message_str(14, 100) + 150 + message_str(14, 101));
                                end
                                else begin
                                    give_exp_points(300);
                                    display_msg(message_str(14, 100) + 300 + message_str(14, 101));
                                    set_global_var(63, global_var(63) + 5);
                                end
                                metarule3(100, self_obj, fixed_param, 0);
                                add_timer_event(self_obj, game_ticks(4), 1);
                                installing_part := 0;
                            end
                        end
                    end
                end
                else begin
                    if (fixed_param == 1) then begin
                        float_msg(self_obj, message_str(2260, random(103, 106)), 8);
                        metarule3(100, self_obj, 1, 0);
                        add_timer_event(self_obj, game_ticks(random(10, 15)), 5);
                    end
                    else begin
                        if (fixed_param == 2) then begin
                            reg_anim_func(2, self_obj);
                            anim(self_obj, random(10, 11), 0);
                            metarule3(100, self_obj, 3, 0);
                            add_timer_event(self_obj, game_ticks(1), 3);
                        end
                        else begin
                            if (fixed_param == 3) then begin
                                reg_anim_func(2, self_obj);
                                anim(self_obj, 0, 0);
                                metarule3(100, self_obj, 3, 0);
                                add_timer_event(self_obj, game_ticks(2), 1);
                            end
                            else begin
                                if (fixed_param == 4) then begin
                                    if ((tile_num(self_obj) != 12505) and (12505 != 0)) then begin
                                        if ((dest_tile == 12505) and (step_tile < 0)) then begin
                                            step_tile := step_tile + 1;
                                            debug_msg("step_tile: " + step_tile);
                                        end
                                        else begin
                                            if (anim_busy(self_obj) == 0) then begin
                                                dest_tile := 12505;
                                                step_tile := 12505;
                                                animate_move_obj_to_tile(self_obj, step_tile, 0);
                                                while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), 12505) >= tile_distance(step_tile, 12505))) do begin
                                                    debug_msg("rot: " + rotation_to_tile(step_tile, tile_num(self_obj)));
                                                    step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), 5 % tile_distance(step_tile, tile_num(self_obj)));
                                                    debug_msg("step_var: " + step_tile);
                                                    animate_move_obj_to_tile(self_obj, step_tile, 0);
                                                end
                                                if (anim_busy(self_obj) == 0) then begin
                                                    if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
                                                        if (anim_busy(self_obj) == 0) then begin
                                                            global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                            global_temp := (global_temp + 1) % 6;
                                                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                                debug_msg("flee loop: rot == " + global_temp);
                                                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                                global_temp := (global_temp + 1) % 6;
                                                            end
                                                        end
                                                    end
                                                    else begin
                                                        step_tile := -10;
                                                    end
                                                end
                                            end
                                            else begin
                                                if (tile_distance(tile_num(self_obj), 12505) < tile_distance(dest_tile, 12505)) then begin
                                                    reg_anim_func(2, self_obj);
                                                end
                                            end
                                        end
                                    end
                                    metarule3(100, self_obj, 4, 0);
                                end
                                else begin
                                    if (fixed_param == 5) then begin
                                        if (random(1, 3) == 1) then begin
                                            debug_msg("self_title:" + tile_num(self_obj) + " home_tile:" + local_var(7));
                                            if (tile_num(self_obj) == local_var(7)) then begin
                                                if ((tile_num(self_obj) != 11708) and (11708 != 0)) then begin
                                                    if ((dest_tile == 11708) and (step_tile < 0)) then begin
                                                        step_tile := step_tile + 1;
                                                        debug_msg("step_tile: " + step_tile);
                                                    end
                                                    else begin
                                                        if (anim_busy(self_obj) == 0) then begin
                                                            dest_tile := 11708;
                                                            step_tile := 11708;
                                                            animate_move_obj_to_tile(self_obj, step_tile, 0);
                                                            while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), 11708) >= tile_distance(step_tile, 11708))) do begin
                                                                debug_msg("rot: " + rotation_to_tile(step_tile, tile_num(self_obj)));
                                                                step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), 5 % tile_distance(step_tile, tile_num(self_obj)));
                                                                debug_msg("step_var: " + step_tile);
                                                                animate_move_obj_to_tile(self_obj, step_tile, 0);
                                                            end
                                                            if (anim_busy(self_obj) == 0) then begin
                                                                if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
                                                                    if (anim_busy(self_obj) == 0) then begin
                                                                        global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                                                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                                        global_temp := (global_temp + 1) % 6;
                                                                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                                            debug_msg("flee loop: rot == " + global_temp);
                                                                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                                            global_temp := (global_temp + 1) % 6;
                                                                        end
                                                                    end
                                                                end
                                                                else begin
                                                                    step_tile := -10;
                                                                end
                                                            end
                                                        end
                                                        else begin
                                                            if (tile_distance(tile_num(self_obj), 11708) < tile_distance(dest_tile, 11708)) then begin
                                                                reg_anim_func(2, self_obj);
                                                            end
                                                        end
                                                    end
                                                end
                                                metarule3(100, self_obj, 5, 0);
                                                add_timer_event(self_obj, game_ticks(2), 6);
                                            end
                                            else begin
                                                if ((tile_num(self_obj) != local_var(7)) and (local_var(7) != 0)) then begin
                                                    if ((dest_tile == local_var(7)) and (step_tile < 0)) then begin
                                                        step_tile := step_tile + 1;
                                                        debug_msg("step_tile: " + step_tile);
                                                    end
                                                    else begin
                                                        if (anim_busy(self_obj) == 0) then begin
                                                            dest_tile := local_var(7);
                                                            step_tile := local_var(7);
                                                            animate_move_obj_to_tile(self_obj, step_tile, 0);
                                                            while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), local_var(7)) >= tile_distance(step_tile, local_var(7)))) do begin
                                                                debug_msg("rot: " + rotation_to_tile(step_tile, tile_num(self_obj)));
                                                                step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), 5 % tile_distance(step_tile, tile_num(self_obj)));
                                                                debug_msg("step_var: " + step_tile);
                                                                animate_move_obj_to_tile(self_obj, step_tile, 0);
                                                            end
                                                            if (anim_busy(self_obj) == 0) then begin
                                                                if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
                                                                    if (anim_busy(self_obj) == 0) then begin
                                                                        global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                                                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                                        global_temp := (global_temp + 1) % 6;
                                                                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                                            debug_msg("flee loop: rot == " + global_temp);
                                                                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                                            global_temp := (global_temp + 1) % 6;
                                                                        end
                                                                    end
                                                                end
                                                                else begin
                                                                    step_tile := -10;
                                                                end
                                                            end
                                                        end
                                                        else begin
                                                            if (tile_distance(tile_num(self_obj), local_var(7)) < tile_distance(dest_tile, local_var(7))) then begin
                                                                reg_anim_func(2, self_obj);
                                                            end
                                                        end
                                                    end
                                                end
                                                metarule3(100, self_obj, 5, 0);
                                                add_timer_event(self_obj, game_ticks(2), 7);
                                            end
                                        end
                                        else begin
                                            metarule3(100, self_obj, 5, 0);
                                            add_timer_event(self_obj, game_ticks(2), 2);
                                        end
                                    end
                                    else begin
                                        if (fixed_param == 6) then begin
                                            reg_anim_func(2, self_obj);
                                            anim(self_obj, 1000, 0);
                                            add_timer_event(self_obj, game_ticks(1), 2);
                                        end
                                        else begin
                                            if (fixed_param == 7) then begin
                                                reg_anim_func(2, self_obj);
                                                anim(self_obj, 1000, 5);
                                                add_timer_event(self_obj, game_ticks(0), 2);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            else begin
                if (fixed_param == 8) then begin
                    metarule3(100, self_obj, 8, 0);
                    float_msg(self_obj, message_str(2260, 110), 8);
                    add_timer_event(self_obj, game_ticks(3), 9);
                end
                else begin
                    if (fixed_param == 9) then begin
                        metarule3(100, self_obj, fixed_param, 0);
                        if ((tile_num(self_obj) != 12504) and (12504 != 0)) then begin
                            if ((dest_tile == 12504) and (step_tile < 0)) then begin
                                step_tile := step_tile + 1;
                                debug_msg("step_tile: " + step_tile);
                            end
                            else begin
                                if (anim_busy(self_obj) == 0) then begin
                                    dest_tile := 12504;
                                    step_tile := 12504;
                                    animate_move_obj_to_tile(self_obj, step_tile, 0);
                                    while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), 12504) >= tile_distance(step_tile, 12504))) do begin
                                        debug_msg("rot: " + rotation_to_tile(step_tile, tile_num(self_obj)));
                                        step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), 5 % tile_distance(step_tile, tile_num(self_obj)));
                                        debug_msg("step_var: " + step_tile);
                                        animate_move_obj_to_tile(self_obj, step_tile, 0);
                                    end
                                    if (anim_busy(self_obj) == 0) then begin
                                        if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
                                            if (anim_busy(self_obj) == 0) then begin
                                                global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                global_temp := (global_temp + 1) % 6;
                                                while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                    debug_msg("flee loop: rot == " + global_temp);
                                                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                    global_temp := (global_temp + 1) % 6;
                                                end
                                            end
                                        end
                                        else begin
                                            step_tile := -10;
                                        end
                                    end
                                end
                                else begin
                                    if (tile_distance(tile_num(self_obj), 12504) < tile_distance(dest_tile, 12504)) then begin
                                        reg_anim_func(2, self_obj);
                                    end
                                end
                            end
                        end
                        add_timer_event(self_obj, game_ticks(2), 10);
                    end
                    else begin
                        if (fixed_param == 10) then begin
                            metarule3(100, self_obj, 10, 0);
                            if (tile_num(self_obj) == 12504) then begin
                                metarule3(100, self_obj, 10, 0);
                                reg_anim_func(2, self_obj);
                                anim(self_obj, 1000, 0);
                                add_timer_event(self_obj, game_ticks(1), 11);
                            end
                            else begin
                                add_timer_event(self_obj, game_ticks(1), 10);
                            end
                        end
                        else begin
                            if (fixed_param == 11) then begin
                                reg_anim_func(2, self_obj);
                                anim(self_obj, 0, 0);
                                metarule3(100, self_obj, 11, 0);
                            end
                        end
                    end
                end
            end
        end
        else begin
            if (tile_num(self_obj) != 12504) then begin
                animate_move_obj_to_tile(self_obj, 12504, 0);
            end
            else begin
                reg_anim_func(2, self_obj);
                anim(self_obj, 0, 0);
            end
            metarule3(100, self_obj, fixed_param, 0);
            add_timer_event(self_obj, game_ticks(1), 5);
        end
    end
end

procedure critter_p_proc
begin
    if ((global_var(63) == -30) or ((local_var(4) bwand 2) != 0) and obj_can_see_obj(self_obj, dude_obj)) then begin
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
    else begin
        if ((global_var(1117) >= 4) and (local_var(8) != 1)) then begin
            metarule3(100, self_obj, fixed_param, 0);
            set_local_var(8, 1);
            add_timer_event(self_obj, game_ticks(1), 8);
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        call Node998();
    end
end

procedure Node990
begin
    set_global_var(1117, 3);
    set_local_var(9, 1);
end

