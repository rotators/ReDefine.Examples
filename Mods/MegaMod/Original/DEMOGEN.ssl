procedure start;
procedure look_p_proc;
procedure description_p_proc;
procedure use_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure cantfix;

variable Science_Check;
variable Repair_Check;
variable repair_attempt;

import variable Broken_Gen;
import variable Phrax_Pointer;


procedure start
begin
end

procedure look_p_proc
begin
    script_overrides;
    if (Broken_Gen) then begin
        display_msg(message_str(1495, 100));
    end
    else begin
        display_msg(message_str(1495, 101));
    end
end

procedure description_p_proc
begin
    script_overrides;
    if (Broken_Gen) then begin
        display_msg(message_str(1495, 100));
    end
    else begin
        display_msg(message_str(1495, 101));
    end
end

procedure use_p_proc
begin
    script_overrides;
    if (map_var(7) > 0) then begin
        if (is_success(roll_vs_skill(dude_obj, 8, -10))) then begin
            display_msg(message_str(1495, 123));
            if (map_var(2) == 0) then begin
                display_msg(message_str(1495, 118));
            end
            if (map_var(2) == 1) then begin
                display_msg(message_str(1495, 119));
            end
            if (map_var(2) == 2) then begin
                display_msg(message_str(1495, 118));
            end
        end
        else begin
            display_msg(message_str(1495, 122));
            set_map_var(3, map_var(3) + 1);
            if (map_var(3) == 1) then begin
                float_msg(Phrax_Pointer, message_str(1494, 131), 0);
            end
            if (map_var(3) == 2) then begin
                float_msg(Phrax_Pointer, message_str(1494, 132), 0);
            end
            if (map_var(3) == 3) then begin
                float_msg(Phrax_Pointer, message_str(1494, 133), 0);
            end
            if (map_var(3) == 4) then begin
                float_msg(Phrax_Pointer, message_str(1494, 134), 0);
                set_map_var(10, 1);
            end
        end
    end
    else begin
        if (map_var(2) == 0) then begin
            display_msg(message_str(1495, 118));
        end
        if (map_var(2) == 1) then begin
            display_msg(message_str(1495, 119));
        end
        if (map_var(2) == 2) then begin
            display_msg(message_str(1495, 118));
        end
    end
end

procedure use_obj_on_p_proc
begin
    variable LVar0 := 0;
    script_overrides;
    if (map_var(15) == 1) then begin
        if ((obj_pid(obj_being_used_with) == 75) or (obj_pid(obj_being_used_with) == 308)) then begin
            if ((map_var(7) == 0) and (map_var(6) == 0)) then begin
                if (not(Broken_Gen)) then begin
                    set_map_var(2, 1);
                    give_exp_points(100);
                    display_msg(message_str(1495, 120));
                    set_global_var(0, global_var(0) - 50);
                    Broken_Gen := 1;
                end
                else begin
                    display_msg(message_str(1495, 103));
                end
            end
            if (source_obj == dude_obj) then begin
                LVar0 := roll_vs_skill(source_obj, 8, -10);
                if (is_success(LVar0)) then begin
                    display_msg(message_str(1495, 123));
                    if ((map_var(7) > 0) and (map_var(6) > 0)) then begin
                        if (not(Broken_Gen)) then begin
                            set_map_var(2, 1);
                            give_exp_points(250);
                            display_msg(message_str(964, 10400));
                            Broken_Gen := 1;
                        end
                        else begin
                            display_msg(message_str(1495, 103));
                        end
                    end
                    else begin
                        if ((map_var(7) == 0) and (map_var(6) == 0)) then begin
                            if (not(Broken_Gen)) then begin
                                set_map_var(2, 1);
                                give_exp_points(100);
                                display_msg(message_str(1495, 120));
                                set_global_var(0, global_var(0) - 50);
                                Broken_Gen := 1;
                            end
                            else begin
                                display_msg(message_str(1495, 103));
                            end
                        end
                    end
                end
                else begin
                    if (map_var(7) > 0) then begin
                        set_map_var(3, map_var(3) + 1);
                        if (map_var(3) == 1) then begin
                            float_msg(Phrax_Pointer, message_str(1494, 131), 0);
                        end
                        if (map_var(3) == 2) then begin
                            float_msg(Phrax_Pointer, message_str(1494, 132), 0);
                        end
                        if (map_var(3) == 3) then begin
                            float_msg(Phrax_Pointer, message_str(1494, 133), 0);
                        end
                        if (map_var(3) == 4) then begin
                            float_msg(Phrax_Pointer, message_str(1494, 134), 0);
                            set_map_var(10, 1);
                        end
                    end
                end
            end
        end
        else begin
            display_msg(message_str(1495, 104));
        end
    end
    if ((map_var(15) == 0) and (map_var(7) > 0)) then begin
        display_msg(message_str(1495, 124));
        set_map_var(3, map_var(3) + 1);
        if (map_var(3) == 1) then begin
            float_msg(Phrax_Pointer, message_str(1494, 131), 0);
        end
        if (map_var(3) == 2) then begin
            float_msg(Phrax_Pointer, message_str(1494, 132), 0);
        end
        if (map_var(3) == 3) then begin
            float_msg(Phrax_Pointer, message_str(1494, 133), 0);
        end
        if (map_var(3) == 4) then begin
            float_msg(Phrax_Pointer, message_str(1494, 134), 0);
            set_map_var(10, 1);
        end
    end
    if ((map_var(15) == 0) and (map_var(7) == 0)) then begin
        display_msg(message_str(1495, 126));
    end
    return 0;
    LVar0 := 0;
end

procedure use_skill_on_p_proc
begin
    variable LVar0 := 0;
    script_overrides;
    if (action_being_used == 12) then begin
        if (map_var(15) == 0) then begin
            LVar0 := roll_vs_skill(source_obj, 12, 0);
            if (is_success(LVar0)) then begin
                display_msg(message_str(1495, 106));
                set_map_var(15, 1);
            end
            else begin
                display_msg(message_str(1495, 107));
            end
        end
        else begin
            if ((map_var(15) == 1) and (map_var(2) == 0)) then begin
                display_msg(message_str(1495, 108));
            end
            else begin
                if (map_var(2) == 1) then begin
                    LVar0 := roll_vs_skill(source_obj, 12, 0);
                    if (is_success(LVar0)) then begin
                        display_msg(message_str(1495, 109));
                    end
                    else begin
                        display_msg(message_str(1495, 110));
                    end
                end
            end
        end
    end
    if (action_being_used == 13) then begin
        if (map_var(7) > 0) then begin
            if (has_skill(dude_obj, 8) >= 60) then begin
                display_msg(message_str(1495, 123));
                if (map_var(2) == 0) then begin
                    display_msg(message_str(1495, 118));
                end
                if (map_var(2) == 1) then begin
                    display_msg(message_str(1495, 119));
                end
                if (map_var(2) == 2) then begin
                    display_msg(message_str(1495, 118));
                end
            end
            else begin
                display_msg(message_str(1495, 122));
                set_map_var(3, map_var(3) + 1);
                if (map_var(3) == 1) then begin
                    float_msg(Phrax_Pointer, message_str(1494, 131), 0);
                end
                if (map_var(3) == 2) then begin
                    float_msg(Phrax_Pointer, message_str(1494, 132), 0);
                end
                if (map_var(3) == 3) then begin
                    float_msg(Phrax_Pointer, message_str(1494, 133), 0);
                end
                if (map_var(3) == 4) then begin
                    float_msg(Phrax_Pointer, message_str(1494, 134), 0);
                    set_map_var(10, 1);
                end
            end
        end
        if (map_var(2) == 2) then begin
            display_msg(message_str(1495, 112));
        end
        if (map_var(2) == 1) then begin
            if (repair_attempt > 3) then begin
                display_msg(message_str(1495, 127));
                call cantfix();
            end
            else begin
                if (is_success(roll_vs_skill(dude_obj, 13, -10))) then begin
                    gfade_out(600);
                    game_time_advance(200000);
                    Broken_Gen := 0;
                    set_map_var(2, 2);
                    display_msg(message_str(1495, 114));
                    set_global_var(0, global_var(0) + 25);
                    give_exp_points(1000);
                    gfade_in(600);
                end
                else begin
                    display_msg(message_str(1495, 116));
                    repair_attempt := repair_attempt + 1;
                end
            end
        end
        if ((map_var(2) == 0) and (map_var(7) == 0)) then begin
            set_map_var(2, 1);
            give_exp_points(100);
            display_msg(message_str(1495, 120));
            set_global_var(0, global_var(0) - 25);
            Broken_Gen := 1;
        end
    end
    else begin
        if ((action_being_used != 12) or (action_being_used != 13)) then begin
            display_msg(message_str(1495, 117));
        end
    end
    return 0;
    LVar0 := 0;
end

procedure cantfix
begin
end

