procedure start;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;
procedure pickup_p_proc;
procedure critter_p_proc;


procedure start
begin
end

procedure use_p_proc
begin
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(2485, 101));
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(2485, 101));
end

procedure use_skill_on_p_proc
begin
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
        set_global_var(361, global_var(361) bwor 1);
        set_map_var(0, 1);
    end
end

procedure map_enter_p_proc
begin
    if (global_var(362) == 2) then begin
        destroy_object(self_obj);
    end
end

procedure map_update_p_proc
begin
end

procedure talk_p_proc
begin
    float_msg(self_obj, message_str(2485, random(200, 201)), 8);
end

procedure timed_event_p_proc
begin
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure critter_p_proc
begin
    if ((local_var(5) == 2) or map_var(0) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
    else begin
        if ((local_var(7) == 1) and obj_can_see_obj(self_obj, dude_obj) and using_skill(dude_obj, 8)) then begin
            set_local_var(7, 1);
            float_msg(self_obj, message_str(2485, random(150, 151)), 8);
        end
    end
end

