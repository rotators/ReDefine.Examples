variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure combat_p_proc;
procedure Node998;
procedure Node999;
procedure Node001A;
procedure Node002A;
procedure Node003A;
procedure Node004A;
procedure Node005A;
procedure Node001D;
procedure Node002D;
procedure Node003D;
procedure Node004D;
procedure Node005D;
procedure Node006D;
procedure NodeFleeing;
procedure NodeFighting;
procedure checkProp;
procedure chooseType;

variable Only_Once;
variable doSex;
variable starttile;

procedure timed_event_p_proc;
procedure NodeDoSexD;
procedure Node62Da;
procedure Node63Da;
procedure Node65Da;
procedure NodeDoSexA;
procedure Node32Aa;
procedure Node32Ab;
procedure Node32Ac;
procedure Node005Aa;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if ((local_var(5) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (do_check(self_obj, 1, -2)) then begin
            set_local_var(5, 2);
        end
        else begin
            call checkProp();
        end
    end
end

procedure talk_p_proc
begin
    if (local_var(7)) then begin
        start_gdialog(629, self_obj, 4, -1, -1);
        gsay_start;
        call Node001A();
        gsay_end;
        end_dialogue;
        set_local_var(4, 1);
    end
    else begin
        start_gdialog(629, self_obj, 4, -1, -1);
        gsay_start;
        call Node001D();
        gsay_end;
        end_dialogue;
        set_local_var(4, 1);
    end
    if (doSex == 1) then begin
        doSex := 0;
        gfade_out(1);
        game_time_advance(get_critter_stat(dude_obj, 2) * random(4, 8) * (60 * 10));
        set_global_var(194, global_var(194) + (((((get_critter_stat(dude_obj, 3) * 50) + (get_critter_stat(dude_obj, 2) * 25) + (get_critter_stat(dude_obj, 5) * 13) + (get_critter_stat(dude_obj, 0) * 12)) / 100) + (has_trait(0, dude_obj, 94) * 2) + has_trait(2, dude_obj, 13) + (((global_var(194) >= 100) or (global_var(232) > 0)) * 2 * (dude_obj == dude_obj))) * 1));
        if (global_var(358) >= 9) then begin
            set_global_var(588, 1);
        end
        if (((((get_critter_stat(dude_obj, 3) * 50) + (get_critter_stat(dude_obj, 2) * 25) + (get_critter_stat(dude_obj, 5) * 13) + (get_critter_stat(dude_obj, 0) * 12)) / 100) + (has_trait(0, dude_obj, 94) * 2) + has_trait(2, dude_obj, 13) + (((global_var(194) >= 100) or (global_var(232) > 0)) * 2 * (dude_obj == dude_obj))) >= 9) then begin
            set_global_var(589, 1);
        end
        if (global_var(590) == 1) then begin
            set_global_var(590, 0);
        end
        set_global_var(358, global_var(358) + 1);
        set_local_var(8, 2);
        gfade_in(1);
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(5, global_var(5) + 1);
        if (metarule(51, self_obj) == 2) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(2, 0);
                set_global_var(1, global_var(1) + 1);
                set_global_var(0, global_var(0) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(37, 0);
                set_global_var(38, 0);
                set_global_var(39, 0);
                set_global_var(40, 0);
                set_global_var(41, 0);
                set_global_var(42, 0);
                set_global_var(43, 0);
                set_global_var(44, 0);
                set_global_var(45, 0);
                if (global_var(0) >= 1000) then begin
                    set_global_var(37, 1);
                end
                else begin
                    if (global_var(0) >= 750) then begin
                        set_global_var(38, 1);
                    end
                    else begin
                        if (global_var(0) >= 500) then begin
                            set_global_var(39, 1);
                        end
                        else begin
                            if (global_var(0) >= 250) then begin
                                set_global_var(40, 1);
                            end
                            else begin
                                if (global_var(0) > -250) then begin
                                    set_global_var(41, 1);
                                end
                                else begin
                                    if (global_var(0) > -500) then begin
                                        set_global_var(42, 1);
                                    end
                                    else begin
                                        if (global_var(0) > -750) then begin
                                            set_global_var(43, 1);
                                        end
                                        else begin
                                            if (global_var(0) > -1000) then begin
                                                set_global_var(44, 1);
                                            end
                                            else begin
                                                set_global_var(45, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
            set_global_var(2, 1);
            set_global_var(3, 0);
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
            set_global_var(3, 1);
            set_global_var(2, 0);
        end
        set_global_var(0, global_var(0) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 0) then begin
        if (local_var(7)) then begin
            display_msg(message_str(629, 119));
        end
        else begin
            display_msg(message_str(629, 100));
        end
    end
    else begin
        if (local_var(7)) then begin
            display_msg(message_str(629, 120));
        end
        else begin
            display_msg(message_str(629, 101));
        end
    end
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(7)) then begin
        display_msg(message_str(629, 121));
    end
    else begin
        if (get_critter_stat(self_obj, 34) == 0) then begin
            display_msg(message_str(629, 102));
        end
        else begin
            display_msg(message_str(629, 210));
        end
    end
end

procedure use_skill_on_p_proc
begin
    call checkProp();
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(6, 1);
    end
end

procedure map_enter_p_proc
begin
    Only_Once := 0;
    starttile := tile_num(self_obj);
    critter_add_trait(self_obj, 1, 6, 169);
    if (not(metarule(22, 0))) then begin
        call chooseType();
    end
    if (local_var(7) == 1) then begin
        critter_add_trait(self_obj, 1, 5, 11);
    end
    else begin
        critter_add_trait(self_obj, 1, 5, 11);
    end
    add_timer_event(self_obj, 0, 1);
end

procedure combat_p_proc
begin
    if (critter_is_fleeing(self_obj)) then begin
        if (random(1, 100) <= 20) then begin
            call NodeFleeing();
        end
        else begin
            if (random(1, 100) <= 20) then begin
                call NodeFighting();
            end
        end
    end
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
end

procedure Node001A
begin
    gsay_reply(629, 122);
    giq_option(4, 629, 123, Node32Aa, 50);
    giq_option(4, 629, 124, Node32Ab, 50);
    giq_option(4, 629, 125, Node32Ac, 50);
    giq_option(4, 629, 126, Node999, 50);
    giq_option(-3, 629, 127, Node004D, 50);
    if (not(metarule(47, 0)) and (local_var(8) == 1)) then begin
        giq_option(4, 629, 178, NodeDoSexA, 50);
        giq_option(-3, 629, 179, NodeDoSexA, 50);
    end
end

procedure Node002A
begin
    gsay_reply(629, 128);
    giq_option(0, 629, message_str(14, 350), Node999, 50);
end

procedure Node003A
begin
    gsay_reply(629, 130);
    giq_option(0, 629, message_str(14, 350), Node999, 50);
end

procedure Node004A
begin
    gsay_reply(629, 131);
    if (item_caps_total(dude_obj) >= 1000) then begin
        giq_option(-3, 629, 132, Node005Aa, 50);
    end
    giq_option(-3, 629, 133, Node999, 50);
end

procedure Node005A
begin
    gsay_reply(629, 134);
    giq_option(0, 629, message_str(14, 350), Node999, 50);
end

procedure Node001D
begin
    gsay_reply(629, 103);
    giq_option(4, 629, 104, Node62Da, 50);
    giq_option(4, 629, 105, Node63Da, 50);
    giq_option(4, 629, 106, Node65Da, 50);
    giq_option(4, 629, 107, Node999, 50);
    giq_option(-3, 629, 108, Node005D, 50);
    if (not(metarule(47, 0)) and (local_var(8) == 1)) then begin
        giq_option(4, 629, 158, NodeDoSexD, 50);
        giq_option(-3, 629, 159, NodeDoSexD, 50);
    end
end

procedure Node002D
begin
    gsay_reply(629, 109);
    giq_option(4, 629, 110, Node999, 50);
end

procedure Node003D
begin
    gsay_reply(629, 111);
    giq_option(4, 629, 112, Node999, 50);
end

procedure Node004D
begin
    gsay_reply(629, 113);
    giq_option(4, 629, 114, Node999, 50);
end

procedure Node005D
begin
    gsay_reply(629, 115);
    giq_option(0, 629, message_str(14, 350), Node999, 50);
end

procedure Node006D
begin
    gsay_reply(629, 117);
    giq_option(0, 629, message_str(14, 350), Node999, 50);
end

procedure NodeFleeing
begin
    float_msg(self_obj, message_str(629, 203 + random(0, 2)), 8);
end

procedure NodeFighting
begin
    float_msg(self_obj, message_str(629, 200 + random(0, 2)), 2);
end

procedure checkProp
begin
    if (local_var(7)) then begin
        if (not(metarule(47, 0))) then begin
            if (local_var(8) != 2) then begin
                float_msg(self_obj, message_str(629, 170 + random(0, 4)), 3);
                set_local_var(8, 1);
            end
            else begin
                float_msg(self_obj, message_str(629, 175 + random(0, 2)), random(0, 12));
            end
        end
        else begin
            float_msg(self_obj, message_str(629, 175), random(0, 12));
        end
    end
    else begin
        if (not(metarule(47, 0))) then begin
            if (local_var(8) != 2) then begin
                float_msg(self_obj, message_str(629, 150 + random(0, 4)), 3);
                set_local_var(8, 1);
            end
            else begin
                float_msg(self_obj, message_str(629, 155 + random(0, 2)), 5);
            end
        end
        else begin
            float_msg(self_obj, message_str(629, 156), 5);
        end
    end
end

procedure chooseType
begin
    if (random(0, 1) == 0) then begin
        debug_msg("ECRAVPTY: making addict");
        set_local_var(7, 1);
    end
    else begin
        debug_msg("ECRAVPTY: making drunk");
        set_local_var(7, 0);
    end
    debug_msg("ECRAVPTY: ADDICT: " + local_var(7));
end

procedure timed_event_p_proc
begin
    variable LVar0 := 0;
    if (fixed_param == 1) then begin
        if (not(anim_busy(self_obj))) then begin
            if (local_var(7)) then begin
                reg_anim_func(2, self_obj);
                reg_anim_func(1, 1);
                LVar0 := tile_num_in_direction(starttile, random(0, 5), random(1, 11));
                animate_move_obj_to_tile(self_obj, LVar0, 1);
                reg_anim_func(3, 0);
            end
            else begin
                reg_anim_func(2, self_obj);
                reg_anim_func(1, 1);
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(starttile, random(0, 5), random(1, 11)), 0);
                reg_anim_func(3, 0);
            end
        end
        if (local_var(7)) then begin
            add_timer_event(self_obj, game_ticks(random(1, 4)), 1);
        end
        else begin
            add_timer_event(self_obj, game_ticks(random(60, 120)), 1);
        end
    end
end

procedure NodeDoSexD
begin
    if ((((((get_critter_stat(dude_obj, 3) * 50) + (get_critter_stat(dude_obj, 2) * 25) + (get_critter_stat(dude_obj, 5) * 13) + (get_critter_stat(dude_obj, 0) * 12)) / 100) + (has_trait(0, dude_obj, 94) * 2) + has_trait(2, dude_obj, 13) + (((global_var(194) >= 100) or (global_var(232) > 0)) * 2 * (dude_obj == dude_obj))) > ((((get_critter_stat(self_obj, 3) * 50) + (get_critter_stat(self_obj, 2) * 25) + (get_critter_stat(self_obj, 5) * 13) + (get_critter_stat(self_obj, 0) * 12)) / 100) + (has_trait(0, self_obj, 94) * 2) + has_trait(2, self_obj, 13) + (((global_var(194) >= 100) or (global_var(232) > 0)) * 2 * (self_obj == dude_obj)))) or (random(1, 100) <= (10 * get_critter_stat(dude_obj, 3)))) then begin
        doSex := 1;
        gsay_reply(629, 161);
    end
    else begin
        gsay_reply(629, 160);
    end
    giq_option(0, 629, message_str(14, 350), Node999, 50);
end

procedure Node62Da
begin
    if (item_caps_total(dude_obj) >= 6) then begin
        item_caps_adjust(dude_obj, -6);
        item_caps_adjust(self_obj, 6);
        add_obj_to_inven(dude_obj, create_object_sid(106, tile_num(self_obj), 0, -1));
        call Node002D();
    end
    else begin
        call Node006D();
    end
end

procedure Node63Da
begin
    if (item_caps_total(dude_obj) >= 15) then begin
        item_caps_adjust(dude_obj, -15);
        item_caps_adjust(self_obj, 15);
        add_obj_to_inven(dude_obj, create_object_sid(124, tile_num(self_obj), 0, -1));
        call Node003D();
    end
    else begin
        call Node006D();
    end
end

procedure Node65Da
begin
    if (item_caps_total(dude_obj) >= 30) then begin
        item_caps_adjust(dude_obj, -30);
        item_caps_adjust(self_obj, 30);
        add_obj_to_inven(dude_obj, create_object_sid(125, tile_num(self_obj), 0, -1));
        call Node005D();
    end
    else begin
        call Node006D();
    end
end

procedure NodeDoSexA
begin
    if ((((((get_critter_stat(dude_obj, 3) * 50) + (get_critter_stat(dude_obj, 2) * 25) + (get_critter_stat(dude_obj, 5) * 13) + (get_critter_stat(dude_obj, 0) * 12)) / 100) + (has_trait(0, dude_obj, 94) * 2) + has_trait(2, dude_obj, 13) + (((global_var(194) >= 100) or (global_var(232) > 0)) * 2 * (dude_obj == dude_obj))) > ((((get_critter_stat(self_obj, 3) * 50) + (get_critter_stat(self_obj, 2) * 25) + (get_critter_stat(self_obj, 5) * 13) + (get_critter_stat(self_obj, 0) * 12)) / 100) + (has_trait(0, self_obj, 94) * 2) + has_trait(2, self_obj, 13) + (((global_var(194) >= 100) or (global_var(232) > 0)) * 2 * (self_obj == dude_obj)))) or (random(1, 100) <= (10 * get_critter_stat(dude_obj, 3)))) then begin
        doSex := 1;
        gsay_reply(629, 181);
    end
    else begin
        gsay_reply(629, 180);
    end
    giq_option(0, 629, message_str(14, 350), Node999, 50);
end

procedure Node32Aa
begin
    variable LVar0 := 0;
    if (item_caps_total(dude_obj) >= 560) then begin
        item_caps_adjust(dude_obj, -560);
        item_caps_adjust(self_obj, 560);
        LVar0 := create_object_sid(53, tile_num(self_obj), 0, -1);
        if (LVar0) then begin
            use_obj_on_obj(LVar0, dude_obj);
        end
        call Node002A();
    end
    else begin
        call Node003A();
    end
end

procedure Node32Ab
begin
    variable LVar0 := 0;
    if (item_caps_total(dude_obj) >= 400) then begin
        item_caps_adjust(dude_obj, -400);
        item_caps_adjust(self_obj, 400);
        LVar0 := create_object_sid(87, tile_num(self_obj), 0, -1);
        if (LVar0) then begin
            use_obj_on_obj(LVar0, dude_obj);
        end
        call Node002A();
    end
    else begin
        call Node003A();
    end
end

procedure Node32Ac
begin
    variable LVar0 := 0;
    if (item_caps_total(dude_obj) >= 800) then begin
        item_caps_adjust(dude_obj, -800);
        item_caps_adjust(self_obj, 800);
        LVar0 := create_object_sid(110, tile_num(self_obj), 0, -1);
        if (LVar0) then begin
            use_obj_on_obj(LVar0, dude_obj);
        end
        call Node002A();
    end
    else begin
        call Node003A();
    end
end

procedure Node005Aa
begin
    variable LVar0 := 0;
    item_caps_adjust(dude_obj, -1000);
    item_caps_adjust(self_obj, 1000);
    LVar0 := create_object_sid(53, tile_num(self_obj), 0, -1);
    if (LVar0) then begin
        use_obj_on_obj(LVar0, dude_obj);
    end
    call Node005A();
end

