variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable last_timed_obj;
variable last_timed_param;
variable check_still_kill;
variable stored_msg;
variable stored_node;
variable top_msg;
variable var_num;

procedure ChooseFromList;
procedure CLICK_PREV;
procedure CLICK_0;
procedure CLICK_1;
procedure CLICK_2;
procedure CLICK_3;
procedure CLICK_4;
procedure CLICK_MORE;

variable floater_patch_msg;
variable hs_temp;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node998;
procedure Node999;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node990;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure ChooseFromList
begin
    variable LVar0 := 0;
    gsay_reply(442, stored_msg);
    if (message_str(353, top_msg - 1) != "") then begin
        giq_option(1, 442, message_str(353, 150), CLICK_PREV, 50);
    end
    if (LVar0 == 0) then begin
        if (message_str(353, top_msg + 0) != "") then begin
            giq_option(1, 442, message_str(353, top_msg + 0), CLICK_0, 50);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(353, top_msg + 1) != "") then begin
            giq_option(1, 442, message_str(353, top_msg + 1), CLICK_1, 50);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(353, top_msg + 2) != "") then begin
            giq_option(1, 442, message_str(353, top_msg + 2), CLICK_2, 50);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(353, top_msg + 3) != "") then begin
            giq_option(1, 442, message_str(353, top_msg + 3), CLICK_3, 50);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(353, top_msg + 4) != "") then begin
            giq_option(1, 442, message_str(353, top_msg + 4), CLICK_4, 50);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(353, top_msg + 5) != "") then begin
            giq_option(1, 442, message_str(353, 151), CLICK_MORE, 50);
        end
    end
end

procedure CLICK_PREV
begin
    top_msg := top_msg - 5;
    call ChooseFromList();
end

procedure CLICK_0
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + (top_msg % 100));
    call stored_node();
end

procedure CLICK_1
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + ((top_msg + 1) % 100));
    call stored_node();
end

procedure CLICK_2
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + ((top_msg + 2) % 100));
    call stored_node();
end

procedure CLICK_3
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + ((top_msg + 3) % 100));
    call stored_node();
end

procedure CLICK_4
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + ((top_msg + 4) % 100));
    call stored_node();
end

procedure CLICK_MORE
begin
    top_msg := top_msg + 5;
    call ChooseFromList();
end

procedure start
begin
end

procedure critter_p_proc
begin
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(5) bwand 2) != 0) then begin
            critter_set_flee_state(self_obj, 1);
            if (critter_is_fleeing(self_obj)) then begin
                if (anim_busy(self_obj) == 0) then begin
                    if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                        if (anim_busy(self_obj) == 0) then begin
                            global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                                debug_msg("flee loop: rot == " + global_temp);
                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                global_temp := (global_temp + 1) % 6;
                            end
                        end
                    end
                end
            end
            else begin
                attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
            end
            if (((global_var(314) bwand 2) != 0) == 0) then begin
                set_global_var(314, global_var(314) bwor 2);
                last_timed_obj := self_obj;
                last_timed_param := last_timed_param;
                metarule3(100, self_obj, 19, 0);
                add_timer_event(self_obj, game_ticks(0), 19);
                last_timed_obj := self_obj;
                last_timed_param := last_timed_param;
                metarule3(100, self_obj, 1, 0);
                add_timer_event(self_obj, game_ticks(5), 1);
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        call Node998();
    end
end

procedure talk_p_proc
begin
    if (obj_can_see_obj(self_obj, party_member_obj(16777376))) then begin
        call Node003();
    end
    else begin
        if ((global_var(284) bwand 1024) != 0) then begin
            call Node002();
        end
        else begin
            start_gdialog(442, self_obj, 4, -1, -1);
            gsay_start;
            call Node004();
            gsay_end;
            end_dialogue;
        end
    end
    last_timed_obj := self_obj;
    last_timed_param := last_timed_param;
    metarule3(100, self_obj, 1, 0);
    add_timer_event(self_obj, game_ticks(25) + random(0, game_ticks(35 - 25)), 1);
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(4, global_var(4) + 1);
        if (metarule(51, self_obj) == 2) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(2, 0);
                set_global_var(1, global_var(1) + 1);
                set_global_var(0, global_var(0) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(37, 0);
                set_global_var(38, 0);
                set_global_var(39, 0);
                set_global_var(40, 0);
                set_global_var(41, 0);
                set_global_var(42, 0);
                set_global_var(43, 0);
                set_global_var(44, 0);
                set_global_var(45, 0);
                if (global_var(0) >= 1000) then begin
                    set_global_var(37, 1);
                end
                else begin
                    if (global_var(0) >= 750) then begin
                        set_global_var(38, 1);
                    end
                    else begin
                        if (global_var(0) >= 500) then begin
                            set_global_var(39, 1);
                        end
                        else begin
                            if (global_var(0) >= 250) then begin
                                set_global_var(40, 1);
                            end
                            else begin
                                if (global_var(0) > -250) then begin
                                    set_global_var(41, 1);
                                end
                                else begin
                                    if (global_var(0) > -500) then begin
                                        set_global_var(42, 1);
                                    end
                                    else begin
                                        if (global_var(0) > -750) then begin
                                            set_global_var(43, 1);
                                        end
                                        else begin
                                            if (global_var(0) > -1000) then begin
                                                set_global_var(44, 1);
                                            end
                                            else begin
                                                set_global_var(45, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(55, global_var(55) + -8);
                debug_msg("Added " + -8 + " to Town Rep");
            end
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
            set_global_var(3, 1);
            set_global_var(2, 0);
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
            set_global_var(2, 1);
            set_global_var(3, 0);
        end
        set_global_var(0, global_var(0) + 5);
        debug_msg("Player gains " + 5 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(55, global_var(55) + 2);
        debug_msg("Added " + 2 + " to Town Rep");
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(442, 100));
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(442, 150 + ((local_var(5) bwand 4) != 0)));
    set_local_var(5, local_var(5) bwor 4);
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        call Node998();
    end
end

procedure map_enter_p_proc
begin
    if (metarule(22, 0) == 0) then begin
        if (metarule(14, 0)) then begin
            critter_add_trait(self_obj, 1, 6, 58);
            critter_add_trait(self_obj, 1, 5, 33);
        end
        if (((global_var(284) bwand 8) != 0) or critter_is_fleeing(self_obj)) then begin
            if (has_trait(1, self_obj, 666) == 0) then begin
                set_obj_visibility(self_obj, 0);
            end
        end
        last_timed_obj := self_obj;
        last_timed_param := last_timed_param;
        metarule3(100, self_obj, 1, 0);
        add_timer_event(self_obj, game_ticks(25) + random(0, game_ticks(35 - 25)), 1);
    end
end

procedure timed_event_p_proc
begin
    variable LVar0 := 0;
    if (fixed_param == 19) then begin
        call Node008();
    end
    else begin
        if ((global_var(314) bwand 2) != 0) then begin
            set_global_var(314, global_var(314) bwand (-1 - 2));
        end
        else begin
            if (combat_is_initialized == 0) then begin
                if (obj_can_see_obj(self_obj, dude_obj)) then begin
                    if (obj_can_see_obj(self_obj, party_member_obj(16777376))) then begin
                        call Node001();
                    end
                    else begin
                        call Node002();
                    end
                end
            end
            last_timed_obj := self_obj;
            last_timed_param := last_timed_param;
            metarule3(100, self_obj, 1, 0);
            add_timer_event(self_obj, game_ticks(25) + random(0, game_ticks(35 - 25)), 1);
        end
    end
end

procedure Node998
begin
    set_local_var(5, local_var(5) bwor 2);
end

procedure Node999
begin
end

procedure Node001
begin
    float_msg(self_obj, message_str(442, random(200, 204)), 8);
end

procedure Node002
begin
    float_msg(self_obj, message_str(442, random(215, 228)), 8);
end

procedure Node003
begin
    float_msg(self_obj, message_str(442, random(235, 246)), 8);
end

procedure Node004
begin
    gsay_reply(442, 250);
    giq_option(-3, 442, 251, Node005, 51);
    giq_option(-3, 442, 252, Node005, 51);
    giq_option(-3, 442, 253, Node005, 51);
    giq_option(-3, 442, 254, Node005, 51);
    giq_option(-3, 442, 255, Node999, 50);
    giq_option(4, 442, 256, Node006, 50);
    giq_option(4, 442, 257, Node999, 50);
end

procedure Node005
begin
    gsay_reply(442, 265);
    giq_option(-3, 442, 266, Node998, 50);
    giq_option(-3, 442, 255, Node998, 50);
end

procedure Node006
begin
    if ((local_var(5) bwand 512) != 0) then begin
        gsay_reply(442, 276);
    end
    else begin
        gsay_reply(442, 275);
        giq_option(4, 442, 277, Node998, 51);
    end
    if (get_critter_stat(dude_obj, 3) > 5) then begin
        giq_option(4, 442, 278, Node009, 51);
    end
    if ((global_var(284) bwand 1) != 0) then begin
        giq_option(4, 442, 279, Node026, 50);
    end
    if ((get_critter_stat(dude_obj, 4) < 7) and ((has_skill(dude_obj, 7) > 95) or (has_skill(dude_obj, 12) > 95)) or ((get_critter_stat(dude_obj, 4) >= 7) and ((has_skill(dude_obj, 7) > 75) or (has_skill(dude_obj, 12) > 75)))) then begin
        giq_option(4, 442, 280, Node010, 49);
    end
    giq_option(4, 442, 282, Node999, 49);
    set_local_var(5, local_var(5) bwor 512);
end

procedure Node007
begin
    gsay_reply(442, 295);
    giq_option(4, 442, 296, Node998, 51);
    if (get_critter_stat(dude_obj, 3) > 5) then begin
        giq_option(4, 442, 278, Node009, 51);
    end
    if ((get_critter_stat(dude_obj, 4) < 7) and ((has_skill(dude_obj, 7) > 95) or (has_skill(dude_obj, 12) > 95)) or ((get_critter_stat(dude_obj, 4) >= 7) and ((has_skill(dude_obj, 7) > 75) or (has_skill(dude_obj, 12) > 75)))) then begin
        giq_option(4, 442, 280, Node010, 49);
    end
    giq_option(4, 442, 300, Node999, 50);
end

procedure Node008
begin
    float_msg(self_obj, message_str(442, 310), 8);
end

procedure Node009
begin
    gsay_reply(442, 315);
    giq_option(5, 442, 316, Node010, 50);
    if ((get_critter_stat(dude_obj, 3) > 6) or (has_skill(dude_obj, 14) > 65) or has_trait(0, dude_obj, 49)) then begin
        giq_option(4, 442, 317, Node990, 50);
    end
    giq_option(4, 442, 318, Node999, 50);
end

procedure Node010
begin
    gsay_reply(442, 325);
    giq_option(4, 442, 326, Node011, 50);
    if (has_skill(dude_obj, 12) > 75) then begin
        giq_option(7, 442, 327, Node012, 50);
    end
    giq_option(4, 442, 328, Node999, 50);
end

procedure Node011
begin
    gsay_reply(442, 335);
    giq_option(4, 442, 336 + (global_var(0) < 0), Node999, 50);
end

procedure Node012
begin
    gsay_reply(442, 345);
    giq_option(4, 442, 346, Node013, 50);
    giq_option(4, 442, 347, Node999, 50);
end

procedure Node013
begin
    gsay_reply(442, 355);
    giq_option(4, 442, 356, Node015, 50);
    giq_option(4, 442, 357, Node014, 50);
    giq_option(4, 442, 358, Node999, 50);
end

procedure Node014
begin
    if (global_var(84) < 2) then begin
        set_global_var(84, 2);
    end
    gsay_reply(442, 365);
    giq_option(4, 442, 366, Node016, 50);
    giq_option(4, 442, 367, Node999, 50);
end

procedure Node015
begin
    gsay_reply(442, 375);
    giq_option(4, 442, 366, Node014, 50);
    giq_option(4, 442, 377, Node999, 50);
end

procedure Node016
begin
    gsay_reply(442, 385);
    giq_option(4, 442, 386, Node017, 50);
    giq_option(4, 442, 377, Node999, 50);
end

procedure Node017
begin
    set_global_var(314, global_var(314) bwor 8);
    set_global_var(284, global_var(284) bwor 1);
    gsay_reply(442, 395);
    giq_option(4, 442, 396, Node018, 50);
    giq_option(4, 442, 377, Node999, 50);
end

procedure Node018
begin
    set_global_var(284, global_var(284) bwor 2);
    gsay_reply(442, 405);
    if ((obj_is_carrying_obj_pid(self_obj, 413) > 0) and (((global_var(284) bwand 1024) != 0) == 0)) then begin
        giq_option(4, 442, 406, Node019, 50);
    end
    giq_option(4, 442, 407, Node999, 50);
end

procedure Node019
begin
    set_global_var(284, global_var(284) bwor 1024);
    restock_obj := create_object_sid(413, 0, 0, -1);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    display_msg(message_str(442, 1000));
    give_exp_points(500);
    display_msg(message_str(14, 100) + 500 + message_str(14, 101));
    gsay_reply(442, 415 + ((get_critter_stat(dude_obj, 34) == 1) and (get_critter_stat(dude_obj, 3) > 5)));
    giq_option(4, 442, 417, Node999, 50);
end

procedure Node020
begin
    gsay_reply(442, 425 + (get_critter_stat(dude_obj, 34) == 1));
    giq_option(4, 442, 427, Node999, 50);
    giq_option(4, 442, 428 + (global_var(0) < 0), Node999, 50);
end

procedure Node021
begin
    gsay_reply(442, 435);
    if ((get_critter_stat(dude_obj, 3) > 6) or (has_skill(dude_obj, 14) > 75) or has_trait(0, dude_obj, 49)) then begin
        giq_option(4, 442, 436, Node022, 50);
    end
    giq_option(4, 442, 437, Node999, 50);
end

procedure Node022
begin
    gsay_reply(442, 445);
    giq_option(4, 442, 446, Node023, 51);
    giq_option(4, 442, 447, Node025, 49);
    giq_option(4, 442, 448, Node013, 50);
    giq_option(4, 442, 449, Node999, 50);
end

procedure Node023
begin
    gsay_reply(442, 455);
    giq_option(4, 442, 456, Node024, 51);
    giq_option(4, 442, 457, Node999, 50);
end

procedure Node024
begin
    gsay_reply(442, 465);
    giq_option(4, 442, 466, Node998, 51);
    giq_option(4, 442, 467, Node999, 50);
end

procedure Node025
begin
    gsay_reply(442, 475);
    giq_option(4, 442, 476, Node013, 50);
    giq_option(4, 442, 477, Node999, 50);
end

procedure Node026
begin
    gsay_reply(442, 485);
    giq_option(4, 442, 318, Node999, 50);
end

procedure Node990
begin
    if ((get_critter_stat(dude_obj, 34) == 1) or (get_critter_stat(dude_obj, 3) < 6)) then begin
        call Node020();
    end
    else begin
        call Node021();
    end
end

