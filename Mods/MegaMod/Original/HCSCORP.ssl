procedure pickup_p_proc;

variable tmp_gen_rep;
variable global_temp;

procedure start;
procedure critter_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure timed_event_p_proc;
procedure Node998;
procedure Node999;

import variable professor_obj;
import variable scorpion_obj;


procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure start
begin
    scorpion_obj := self_obj;
end

procedure critter_p_proc
begin
    if ((local_var(5) != 0) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        if (critter_is_fleeing(self_obj)) then begin
            if (anim_busy(self_obj) == 0) then begin
                if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                    if (anim_busy(self_obj) == 0) then begin
                        global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                        global_temp := (global_temp + 1) % 6;
                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                            debug_msg("flee loop: rot == " + global_temp);
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                        end
                    end
                end
            end
        end
        else begin
            attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
        end
    end
end

procedure talk_p_proc
begin
    variable LVar0 := 0;
    float_msg(self_obj, " ", 8);
    float_msg(scorpion_obj, " ", 8);
    float_msg(self_obj, 0, 0);
    float_msg(scorpion_obj, 0, 0);
    LVar0 := random(0, 7);
    if (LVar0 == 0) then begin
        float_msg(self_obj, message_str(1173, 102), 8);
        add_timer_event(self_obj, game_ticks(5), 0);
    end
    else begin
        if (LVar0 == 1) then begin
            float_msg(self_obj, message_str(1173, 104), 8);
            add_timer_event(self_obj, game_ticks(5), 1);
        end
        else begin
            if (LVar0 == 2) then begin
                float_msg(self_obj, message_str(1173, 106), 8);
                add_timer_event(self_obj, game_ticks(5), 2);
            end
            else begin
                if (LVar0 == 3) then begin
                    float_msg(self_obj, message_str(1173, 108), 8);
                end
                else begin
                    if (LVar0 == 4) then begin
                        float_msg(self_obj, message_str(1173, 109), 8);
                    end
                    else begin
                        if (LVar0 == 5) then begin
                            float_msg(self_obj, message_str(1173, 110), 8);
                        end
                        else begin
                            if (LVar0 == 6) then begin
                                float_msg(professor_obj, message_str(1173, 111), 0);
                            end
                            else begin
                                if (LVar0 == 7) then begin
                                    float_msg(professor_obj, message_str(1173, 112), 0);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    return 0;
    LVar0 := 0;
end

procedure destroy_p_proc
begin
    variable LVar0 := 0;
    set_map_var(19, 1);
    LVar0 := create_object_sid(963, 0, 0, -1);
    add_obj_to_inven(self_obj, LVar0);
    if (source_obj == dude_obj) then begin
        set_global_var(5, global_var(5) + 1);
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
            set_global_var(2, 1);
            set_global_var(3, 0);
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
            set_global_var(3, 1);
            set_global_var(2, 0);
        end
        set_global_var(0, global_var(0) + -4);
        debug_msg("Player gains " + -4 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        tmp_gen_rep := global_var(0);
        if (has_trait(0, dude_obj, 95)) then begin
            tmp_gen_rep := global_var(0) * 2;
        end
        if (tmp_gen_rep >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (tmp_gen_rep >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (tmp_gen_rep >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (tmp_gen_rep >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(54, global_var(54) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
    return 0;
    LVar0 := 0;
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(1173, 100));
end

procedure description_p_proc
begin
    script_overrides;
    if (obj_is_carrying_obj_pid(self_obj, 415) > 0) then begin
        display_msg(message_str(1173, 101));
    end
    else begin
        display_msg(message_str(1173, 117));
    end
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (party_member_obj(obj_pid(source_obj)) != 0) then begin
        set_local_var(5, 2);
    end
end

procedure map_enter_p_proc
begin
    scorpion_obj := self_obj;
    critter_add_trait(self_obj, 1, 6, 4);
    critter_add_trait(self_obj, 1, 5, 8);
    if (map_var(19) == 0) then begin
        add_timer_event(self_obj, game_ticks(1), 3);
    end
end

procedure map_update_p_proc
begin
    scorpion_obj := self_obj;
end

procedure timed_event_p_proc
begin
    if (fixed_param == 0) then begin
        metarule3(100, self_obj, 0, 0);
        if (professor_obj > 0) then begin
            if (critter_state(professor_obj) == 0) then begin
                float_msg(professor_obj, message_str(1173, 103), 0);
            end
        end
    end
    else begin
        if (fixed_param == 1) then begin
            metarule3(100, self_obj, 1, 0);
            if (professor_obj > 0) then begin
                if (critter_state(professor_obj) == 0) then begin
                    float_msg(professor_obj, message_str(1173, 105), 0);
                end
            end
        end
        else begin
            if (fixed_param == 2) then begin
                metarule3(100, self_obj, 2, 0);
                if (professor_obj > 0) then begin
                    if (critter_state(professor_obj) == 0) then begin
                        float_msg(professor_obj, message_str(1173, 107), 0);
                    end
                end
            end
            else begin
                if (fixed_param == 3) then begin
                    metarule3(100, self_obj, 3, 0);
                    if (map_var(21) == 0) then begin
                        float_msg(self_obj, message_str(1173, random(113, 116)), 8);
                    end
                    add_timer_event(self_obj, game_ticks(random(10, 20)), 3);
                end
            end
        end
    end
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
end

