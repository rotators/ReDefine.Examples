variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;
variable trunk_tile;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure timed_event_p_proc;
procedure map_exit_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure bos_enc_dialogue;

variable w1;
variable w2;
variable w3;
variable w0;

export variable BoSCommander_obj;
export variable EncCommander_obj;
export variable BoSWarrior1;
export variable BoSWarrior2;
export variable BoSWarrior3;
export variable BoSWarrior4;
export variable rock1;
export variable rock2;
export variable rock3;

variable Complex_Float_Stage;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure timed_event_p_proc
begin
    if (fixed_param == 2) then begin
        set_map_var(0, 1);
    end
    if (fixed_param == 3) then begin
        call bos_enc_dialogue();
    end
    if (fixed_param == 8) then begin
        float_msg(w1, message_str(1158, 500), 2);
        add_timer_event(self_obj, game_ticks(10), 10);
    end
    if (fixed_param == 10) then begin
        gfade_out(600);
        destroy_object(w1);
        destroy_object(w2);
        destroy_object(w3);
        gfade_in(600);
        game_ui_enable;
    end
end

procedure map_exit_p_proc
begin
    if (global_var(1081) == 7) then begin
        set_global_var(1081, 8 + map_var(4));
    end
end

procedure map_enter_p_proc
begin
    if (metarule(14, 0)) then begin
        display_msg(message_str(1660, 510));
    end
    else begin
        display_msg(message_str(1660, 520));
    end
    if ((get_month >= 3) and (get_month < 5)) then begin
        if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
            set_light_level(game_time_hour - 600 + 40);
        end
        else begin
            if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                set_light_level(100);
            end
            else begin
                if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                    set_light_level(100 - (game_time_hour - 1800));
                end
                else begin
                    set_light_level(40);
                end
            end
        end
    end
    else begin
        if ((get_month >= 5) and (get_month < 9)) then begin
            if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                set_light_level(game_time_hour - 500 + 40);
            end
            else begin
                if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1900));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 9) and (get_month < 11)) then begin
                if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                    set_light_level(game_time_hour - 600 + 40);
                end
                else begin
                    if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1800));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                    set_light_level(game_time_hour - 700 + 40);
                end
                else begin
                    if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1700));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
        end
    end
    set_global_var(27, 0);
    if (global_var(1081) < 2) then begin
        set_global_var(1081, 2);
        set_map_var(1, game_time / (10 * 60 * 60));
        call bos_enc_dialogue();
    end
    if (not(metarule(22, 0)) and (global_var(1081) == 5) and (map_var(6) == 0)) then begin
        w0 := create_object_sid(16777792, 21101, elevation(dude_obj), -1);
        w0 := create_object_sid(16777792, 21105, elevation(dude_obj), -1);
        w0 := create_object_sid(16777792, 21109, elevation(dude_obj), -1);
        kill_critter_type(16777792, 51);
        game_ui_disable;
        add_timer_event(self_obj, game_ticks(5), 8);
        w1 := create_object_sid(16777256, 22313, elevation(dude_obj), 1689);
        w2 := create_object_sid(16777792, 23117, elevation(dude_obj), 1689);
        w3 := create_object_sid(16777792, 23114, elevation(dude_obj), 1690);
        set_map_var(6, 1);
        mark_area_known(0, 82, -66);
    end
    if (not(metarule(22, 0)) and ((global_var(1081) == 2) or (global_var(1081) == 6)) and (((game_time / (10 * 60 * 60)) - map_var(1)) > 24)) then begin
        w0 := create_object_sid(16777792, 21101, elevation(dude_obj), -1);
        w0 := create_object_sid(16777792, 21105, elevation(dude_obj), -1);
        w0 := create_object_sid(16777792, 21109, elevation(dude_obj), -1);
        kill_critter_type(16777792, 51);
        set_global_var(1081, 3);
    end
end

procedure map_update_p_proc
begin
    if ((get_month >= 3) and (get_month < 5)) then begin
        if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
            set_light_level(game_time_hour - 600 + 40);
        end
        else begin
            if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                set_light_level(100);
            end
            else begin
                if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                    set_light_level(100 - (game_time_hour - 1800));
                end
                else begin
                    set_light_level(40);
                end
            end
        end
    end
    else begin
        if ((get_month >= 5) and (get_month < 9)) then begin
            if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                set_light_level(game_time_hour - 500 + 40);
            end
            else begin
                if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1900));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 9) and (get_month < 11)) then begin
                if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                    set_light_level(game_time_hour - 600 + 40);
                end
                else begin
                    if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1800));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                    set_light_level(game_time_hour - 700 + 40);
                end
                else begin
                    if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1700));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
        end
    end
end

procedure bos_enc_dialogue
begin
    float_msg(EncCommander_obj, " ", 8);
    float_msg(dude_obj, " ", 8);
    float_msg(BoSCommander_obj, " ", 8);
    float_msg(EncCommander_obj, 0, 0);
    float_msg(dude_obj, " ", 0);
    float_msg(BoSCommander_obj, 0, 0);
    if (Complex_Float_Stage == 0) then begin
        game_ui_disable;
        float_msg(EncCommander_obj, "", 2);
        Complex_Float_Stage := Complex_Float_Stage + 1;
        add_timer_event(self_obj, game_ticks(3), 3);
    end
    else begin
        if (Complex_Float_Stage == 1) then begin
            float_msg(EncCommander_obj, message_str(1660, 100), 2);
            Complex_Float_Stage := Complex_Float_Stage + 1;
            add_timer_event(self_obj, 70, 3);
        end
        else begin
            if (Complex_Float_Stage == 2) then begin
                float_msg(BoSCommander_obj, message_str(1660, 101), 4);
                Complex_Float_Stage := Complex_Float_Stage + 1;
                add_timer_event(self_obj, 70, 3);
            end
            else begin
                if (Complex_Float_Stage == 3) then begin
                    float_msg(EncCommander_obj, message_str(1660, 102), 2);
                    Complex_Float_Stage := Complex_Float_Stage + 1;
                    add_timer_event(self_obj, 70, 3);
                end
                else begin
                    if (Complex_Float_Stage == 4) then begin
                        float_msg(BoSCommander_obj, message_str(1660, 103), 4);
                        Complex_Float_Stage := Complex_Float_Stage + 1;
                        add_timer_event(self_obj, 70, 3);
                    end
                    else begin
                        if (Complex_Float_Stage == 5) then begin
                            float_msg(EncCommander_obj, message_str(1660, 104), 2);
                            Complex_Float_Stage := Complex_Float_Stage + 1;
                            add_timer_event(self_obj, 70, 3);
                        end
                        else begin
                            if (Complex_Float_Stage == 6) then begin
                                float_msg(BoSCommander_obj, message_str(1660, 105), 4);
                                Complex_Float_Stage := Complex_Float_Stage + 1;
                                add_timer_event(self_obj, 70, 3);
                            end
                            else begin
                                if (Complex_Float_Stage == 7) then begin
                                    float_msg(EncCommander_obj, message_str(1660, 106), 2);
                                    Complex_Float_Stage := Complex_Float_Stage + 1;
                                    add_timer_event(self_obj, 70, 3);
                                end
                                else begin
                                    if (Complex_Float_Stage == 8) then begin
                                        float_msg(BoSCommander_obj, message_str(1660, 107), 4);
                                        Complex_Float_Stage := Complex_Float_Stage + 1;
                                        add_timer_event(self_obj, 70, 3);
                                    end
                                    else begin
                                        if (Complex_Float_Stage == 9) then begin
                                            float_msg(EncCommander_obj, message_str(1660, 108), 2);
                                            Complex_Float_Stage := Complex_Float_Stage + 1;
                                            add_timer_event(self_obj, 70, 3);
                                        end
                                        else begin
                                            if (Complex_Float_Stage == 10) then begin
                                                float_msg(BoSCommander_obj, message_str(1660, 109), 4);
                                                Complex_Float_Stage := Complex_Float_Stage + 1;
                                                add_timer_event(self_obj, 70, 3);
                                            end
                                            else begin
                                                if (Complex_Float_Stage == 11) then begin
                                                    anim(EncCommander_obj, 1000, 5);
                                                    float_msg(EncCommander_obj, message_str(1660, 110), 2);
                                                    Complex_Float_Stage := Complex_Float_Stage + 1;
                                                    add_timer_event(self_obj, 70, 3);
                                                end
                                                else begin
                                                    if (Complex_Float_Stage == 12) then begin
                                                        float_msg(dude_obj, message_str(1660, 400), 0);
                                                        Complex_Float_Stage := Complex_Float_Stage + 1;
                                                        add_timer_event(self_obj, 70, 3);
                                                    end
                                                    else begin
                                                        if (Complex_Float_Stage == 13) then begin
                                                            gfade_out(600);
                                                            gfade_in(600);
                                                            Complex_Float_Stage := 0;
                                                            game_ui_enable;
                                                            EncCommander_obj := 666;
                                                            add_timer_event(self_obj, game_ticks(3), 2);
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

