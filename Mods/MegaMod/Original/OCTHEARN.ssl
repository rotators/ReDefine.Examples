procedure pickup_p_proc;

variable tmp_gen_rep;
variable global_temp;

procedure start;
procedure critter_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure push_p_proc;
procedure timed_event_p_proc;
procedure Node998;
procedure Node999;
procedure Node001;
procedure Node001a;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;

import variable i_matt_obj;
import variable i_thearn_obj;

variable q1;
variable q2;
variable q3;
variable Node1Rep;

procedure Node002a;
procedure Node003a;
procedure Node005a;


procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure start
begin
    if ((global_var(582) bwand 1) != 0) then begin
        global_temp := create_object_sid(128, 0, 0, -1);
        move_obj_inven_to_obj(self_obj, global_temp);
        destroy_object(global_temp);
        kill_critter(self_obj, 63);
    end
    else begin
        i_thearn_obj := self_obj;
    end
end

procedure critter_p_proc
begin
    if ((local_var(5) == 2) or map_var(5) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_map_var(5, 1);
        set_local_var(5, 1);
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
    if (i_matt_obj != -1) then begin
        if (obj_can_see_obj(self_obj, i_matt_obj)) then begin
            if ((elevation(i_matt_obj) == 0) and (elevation(self_obj) == 0)) then begin
                attack_complex(i_matt_obj, 0, 1, 0, 0, 30000, 0, 0);
            end
        end
    end
    if (tile_num(self_obj) != 15107) then begin
        if (not(anim_busy(self_obj))) then begin
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            animate_move_obj_to_tile(self_obj, 15107, 0);
            reg_anim_func(3, 0);
        end
    end
end

procedure talk_p_proc
begin
    if (local_var(5) > 0) then begin
        call Node007();
    end
    else begin
        if (local_var(4) == 0) then begin
            start_gdialog(539, self_obj, 4, -1, -1);
            gsay_start;
            call Node001();
            gsay_end;
            end_dialogue;
        end
        else begin
            call Node006();
        end
    end
    set_local_var(4, 1);
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(5, global_var(5) + 1);
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
            set_global_var(2, 1);
            set_global_var(3, 0);
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
            set_global_var(3, 1);
            set_global_var(2, 0);
        end
        set_global_var(0, global_var(0) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        tmp_gen_rep := global_var(0);
        if (has_trait(0, dude_obj, 95)) then begin
            tmp_gen_rep := global_var(0) * 2;
        end
        if (tmp_gen_rep >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (tmp_gen_rep >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (tmp_gen_rep >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (tmp_gen_rep >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(59, global_var(59) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
    i_thearn_obj := -1;
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 0) then begin
        display_msg(message_str(539, 100));
    end
    else begin
        display_msg(message_str(539, 101));
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(539, 102));
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
        set_map_var(5, 1);
    end
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, 1, 6, 114);
    critter_add_trait(self_obj, 1, 5, 29);
    if (map_var(4) == 0) then begin
        set_obj_visibility(self_obj, 1);
    end
end

procedure push_p_proc
begin
    script_overrides;
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        set_obj_visibility(self_obj, 0);
    end
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
end

procedure Node001
begin
    Node1Rep := Node1Rep + 1;
    if (Node1Rep == 1) then begin
        gsay_reply(539, 103);
    end
    else begin
        gsay_reply(539, 104);
    end
    if (q1 == 0) then begin
        giq_option(-3, 539, 105, Node002a, 50);
        giq_option(4, 539, 109, Node002a, 50);
    end
    if (q2 == 0) then begin
        giq_option(-3, 539, 106, Node003a, 50);
        giq_option(4, 539, 110, Node003a, 50);
    end
    if (q3 == 0) then begin
        giq_option(-3, 539, 107, Node005a, 50);
        giq_option(4, 539, 111, Node005a, 50);
    end
    giq_option(-3, 539, 108, Node999, 50);
    giq_option(4, 539, 112, Node999, 50);
end

procedure Node001a
begin
    set_local_var(6, local_var(6) + 1);
    call Node001();
end

procedure Node002
begin
    gsay_reply(539, 113);
    giq_option(-3, 539, message_str(539, 114) + " " + obj_name(dude_obj) + message_str(539, 143), Node001, 50);
    giq_option(-3, 539, 115, Node999, 50);
    giq_option(4, 539, 116, Node999, 50);
    giq_option(4, 539, message_str(539, 117) + " " + obj_name(dude_obj) + message_str(539, 143), Node001, 49);
    giq_option(4, 539, 118, Node001, 50);
    giq_option(4, 539, 119, Node001a, 51);
end

procedure Node003
begin
    gsay_reply(539, 120);
    giq_option(-3, 539, 121, Node001, 50);
    giq_option(-3, 539, 122, Node004, 50);
    giq_option(-3, 539, 123, Node999, 50);
    giq_option(4, 539, 124, Node999, 50);
    giq_option(4, 539, 125, Node001, 49);
    giq_option(4, 539, 126, Node001a, 51);
    giq_option(4, 539, 127, Node004, 50);
end

procedure Node004
begin
    gsay_reply(539, 128);
    giq_option(-3, 539, 129, Node001, 50);
    giq_option(4, 539, 130, Node001, 50);
    giq_option(4, 539, 131, Node001a, 51);
    giq_option(4, 539, 132, Node001, 49);
    giq_option(4, 539, 133, Node999, 50);
end

procedure Node005
begin
    gsay_reply(539, 134);
    giq_option(-3, 539, 135, Node001, 50);
    giq_option(4, 539, 136, Node001, 49);
    giq_option(4, 539, 137, Node001, 50);
    giq_option(4, 539, 138, Node001a, 51);
end

procedure Node006
begin
    if (global_var(350) == 7) then begin
        float_msg(self_obj, message_str(539, 139), 0);
    end
    else begin
        if (local_var(6) > 1) then begin
            float_msg(self_obj, message_str(539, 145), 2);
        end
        else begin
            float_msg(self_obj, message_str(539, 140), 0);
        end
    end
end

procedure Node007
begin
    float_msg(self_obj, message_str(539, 142), 2);
    set_local_var(5, 2);
end

procedure Node002a
begin
    q1 := 1;
    call Node002();
end

procedure Node003a
begin
    q2 := 1;
    call Node003();
end

procedure Node005a
begin
    q3 := 1;
    call Node005();
end

