procedure start;
procedure spatial_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;

variable door_ptr;


procedure start
begin
    if (obj_pid(self_obj) != 33555383) then begin
        door_ptr := tile_contains_pid_obj(14322, elevation(self_obj), 33555366);
    end
end

procedure spatial_p_proc
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    LVar1 := tile_contains_obj_pid(tile_num(self_obj), elevation(self_obj), 638);
    if (LVar1 and (local_var(3) == 0)) then begin
        set_local_var(3, 1);
        reg_anim_func(2, source_obj);
        obj_open(door_ptr);
        display_msg(message_str(185, 104));
    end
    else begin
        if ((obj_type(source_obj) == 1) and (proto_data(obj_pid(source_obj), 11) == 0)) then begin
            if (local_var(0) == 0) then begin
                LVar0 := get_critter_stat(source_obj, 1) + 0;
                if (tile_distance_objs(self_obj, source_obj) == 0) then begin
                    set_local_var(0, 1);
                    reg_anim_func(2, source_obj);
                    create_object_sid(33555383, tile_num(self_obj), elevation(self_obj), 185);
                    if (local_var(3) == 0) then begin
                        set_local_var(3, 1);
                        reg_anim_func(2, source_obj);
                        obj_open(door_ptr);
                        display_msg(message_str(185, 104));
                    end
                end
                else begin
                    if (tile_distance_objs(self_obj, source_obj) <= LVar0) then begin
                        set_local_var(0, 1);
                        reg_anim_func(2, source_obj);
                        create_object_sid(33555383, tile_num(self_obj), elevation(self_obj), 185);
                        if (source_obj == dude_obj) then begin
                            display_msg(message_str(185, 100));
                        end
                        else begin
                            if ((proto_data(obj_pid(source_obj), 11) == 0) and obj_can_see_obj(source_obj, dude_obj)) then begin
                                display_msg(obj_name(source_obj) + message_str(185, 101));
                            end
                        end
                    end
                end
            end
            if ((local_var(3) == 0) and (tile_distance_objs(self_obj, source_obj) == 0)) then begin
                set_local_var(3, 1);
                reg_anim_func(2, door_ptr);
                reg_anim_func(2, source_obj);
                obj_open(door_ptr);
                display_msg(message_str(185, 104));
            end
            else begin
                if ((local_var(3) == 1) and not(LVar1) and (tile_distance_objs(self_obj, source_obj) != 0)) then begin
                    set_local_var(3, 0);
                    reg_anim_func(2, door_ptr);
                    reg_anim_func(2, source_obj);
                    obj_close(door_ptr);
                    display_msg(message_str(185, 105));
                end
            end
        end
    end
    return 0;
    LVar0 := 0;
    LVar1 := 0;
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(185, 100));
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(185, 100));
end

