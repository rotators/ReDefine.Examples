procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable last_timed_obj;
variable last_timed_param;
variable check_still_kill;
variable stored_msg;
variable stored_node;
variable top_msg;
variable var_num;

procedure ChooseFromList;
procedure CLICK_PREV;
procedure CLICK_0;
procedure CLICK_1;
procedure CLICK_2;
procedure CLICK_3;
procedure CLICK_4;
procedure CLICK_MORE;

variable floater_patch_msg;
variable hs_temp;
variable item;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_exit_p_proc;
procedure timed_event_p_proc;
procedure Node998;
procedure Node999;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;

variable current_box;

import variable new_reno_barking_dog_obj;
import variable new_reno_temp_box;
import variable new_reno_eldridge_box;
import variable new_reno_eldridge_box_2;
import variable new_reno_eldridge_obj;

variable prev_node;
variable return_node;
variable investigated_barking;

procedure Node990;
procedure Node989;
procedure Node988;
procedure Node987;
procedure Node986;
procedure Node985;
procedure Node984;
procedure Node983;
procedure Node982;
procedure Node981;
procedure Node980;
procedure Node979;
procedure Node978;
procedure Node977;
procedure Node975;
procedure Node974;
procedure Node973;
procedure Node1000;
procedure Node1001;
procedure Node1002;
procedure Node1003;
procedure Node1004;
procedure Node1005;
procedure Node1006;
procedure Node1007;
procedure Node1008;
procedure Node1009;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure ChooseFromList
begin
    variable LVar0 := 0;
    gsay_reply(426, stored_msg);
    if (message_str(353, top_msg - 1) != "") then begin
        giq_option(1, 426, message_str(353, 150), CLICK_PREV, 50);
    end
    if (LVar0 == 0) then begin
        if (message_str(353, top_msg + 0) != "") then begin
            giq_option(1, 426, message_str(353, top_msg + 0), CLICK_0, 50);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(353, top_msg + 1) != "") then begin
            giq_option(1, 426, message_str(353, top_msg + 1), CLICK_1, 50);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(353, top_msg + 2) != "") then begin
            giq_option(1, 426, message_str(353, top_msg + 2), CLICK_2, 50);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(353, top_msg + 3) != "") then begin
            giq_option(1, 426, message_str(353, top_msg + 3), CLICK_3, 50);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(353, top_msg + 4) != "") then begin
            giq_option(1, 426, message_str(353, top_msg + 4), CLICK_4, 50);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(353, top_msg + 5) != "") then begin
            giq_option(1, 426, message_str(353, 151), CLICK_MORE, 50);
        end
    end
end

procedure CLICK_PREV
begin
    top_msg := top_msg - 5;
    call ChooseFromList();
end

procedure CLICK_0
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + (top_msg % 100));
    call stored_node();
end

procedure CLICK_1
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + ((top_msg + 1) % 100));
    call stored_node();
end

procedure CLICK_2
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + ((top_msg + 2) % 100));
    call stored_node();
end

procedure CLICK_3
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + ((top_msg + 3) % 100));
    call stored_node();
end

procedure CLICK_4
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + ((top_msg + 4) % 100));
    call stored_node();
end

procedure CLICK_MORE
begin
    top_msg := top_msg + 5;
    call ChooseFromList();
end

procedure start
begin
    new_reno_eldridge_obj := self_obj;
end

procedure critter_p_proc
begin
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if (anim_busy(self_obj) == 0) then begin
            anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
        end
        if ((local_var(4) bwand 2) != 0) then begin
            if (critter_is_fleeing(self_obj)) then begin
                if (anim_busy(self_obj) == 0) then begin
                    if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                        if (anim_busy(self_obj) == 0) then begin
                            global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                                debug_msg("flee loop: rot == " + global_temp);
                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                global_temp := (global_temp + 1) % 6;
                            end
                        end
                    end
                end
            end
            else begin
                attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
            end
        end
        else begin
            if (tile_in_tile_rect(22334, 22306, 29534, 29506, tile_num(dude_obj)) and (cur_map_index == 56) and ((elevation(dude_obj) == 0) or (-1 == 0))) then begin
                if ((game_time_hour <= 600) or (game_time_hour >= 1800) and ((global_var(495) bwand 134217728) != 0)) then begin
                    if (((local_var(4) bwand 65536) != 0) == 0) then begin
                        set_local_var(4, local_var(4) bwor 65536);
                        call Node030();
                        set_global_var(219, game_time + 60);
                    end
                    else begin
                        if (global_var(219) <= game_time) then begin
                            call Node998();
                        end
                    end
                end
                else begin
                    if ((tile_in_tile_rect(26125, 26115, 29725, 29715, tile_num(dude_obj)) and (cur_map_index == 56) and ((elevation(dude_obj) == 0) or (-1 == 0))) == 0) then begin
                        if (((local_var(4) bwand 32768) != 0) == 0) then begin
                            set_local_var(4, local_var(4) bwor 32768);
                            call Node029();
                            set_global_var(219, game_time + 60);
                        end
                        else begin
                            if (global_var(219) <= game_time) then begin
                                call Node998();
                            end
                        end
                    end
                end
            end
        end
    end
    else begin
        if (anim_busy(self_obj) == 0) then begin
            if ((game_time_hour >= 600) and (game_time_hour <= 2100)) then begin
                set_global_var(495, global_var(495) bwand (-1 - 134217728));
                if (local_var(6) >= 3) then begin
                    if (new_reno_barking_dog_obj != 0) then begin
                        if ((tile_num(self_obj) != 23110) and (23110 != 0)) then begin
                            if ((dest_tile == 23110) and (step_tile < 0)) then begin
                                step_tile := step_tile + 1;
                                debug_msg("step_tile: " + step_tile);
                            end
                            else begin
                                if (anim_busy(self_obj) == 0) then begin
                                    dest_tile := 23110;
                                    step_tile := 23110;
                                    animate_move_obj_to_tile(self_obj, step_tile, 0);
                                    while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), 23110) >= tile_distance(step_tile, 23110))) do begin
                                        debug_msg("rot: " + rotation_to_tile(step_tile, tile_num(self_obj)));
                                        step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), 2 % tile_distance(step_tile, tile_num(self_obj)));
                                        debug_msg("step_var: " + step_tile);
                                        animate_move_obj_to_tile(self_obj, step_tile, 0);
                                    end
                                    if (anim_busy(self_obj) == 0) then begin
                                        if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
                                            if (anim_busy(self_obj) == 0) then begin
                                                global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                global_temp := (global_temp + 1) % 6;
                                                while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                    debug_msg("flee loop: rot == " + global_temp);
                                                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                    global_temp := (global_temp + 1) % 6;
                                                end
                                            end
                                        end
                                        else begin
                                            step_tile := -10;
                                        end
                                    end
                                end
                                else begin
                                    if (tile_distance(tile_num(self_obj), 23110) < tile_distance(dest_tile, 23110)) then begin
                                        reg_anim_func(2, self_obj);
                                    end
                                end
                            end
                        end
                        else begin
                            if ((tile_num(self_obj) == 23110) and (investigated_barking == 0)) then begin
                                anim(self_obj, 1000, 3);
                                investigated_barking := 1;
                                float_msg(self_obj, message_str(426, random(701, 702)), 8);
                                metarule3(100, self_obj, 1, 0);
                                add_timer_event(self_obj, game_ticks(5 + random(0, 5)), 1);
                            end
                        end
                    end
                end
                else begin
                    if (tile_num(self_obj) != 26719) then begin
                        if ((tile_num(self_obj) != 26719) and (26719 != 0)) then begin
                            if ((dest_tile == 26719) and (step_tile < 0)) then begin
                                step_tile := step_tile + 1;
                                debug_msg("step_tile: " + step_tile);
                            end
                            else begin
                                if (anim_busy(self_obj) == 0) then begin
                                    dest_tile := 26719;
                                    step_tile := 26719;
                                    animate_move_obj_to_tile(self_obj, step_tile, 0);
                                    while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), 26719) >= tile_distance(step_tile, 26719))) do begin
                                        debug_msg("rot: " + rotation_to_tile(step_tile, tile_num(self_obj)));
                                        step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), 2 % tile_distance(step_tile, tile_num(self_obj)));
                                        debug_msg("step_var: " + step_tile);
                                        animate_move_obj_to_tile(self_obj, step_tile, 0);
                                    end
                                    if (anim_busy(self_obj) == 0) then begin
                                        if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
                                            if (anim_busy(self_obj) == 0) then begin
                                                global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                global_temp := (global_temp + 1) % 6;
                                                while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                    debug_msg("flee loop: rot == " + global_temp);
                                                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                    global_temp := (global_temp + 1) % 6;
                                                end
                                            end
                                        end
                                        else begin
                                            step_tile := -10;
                                        end
                                    end
                                end
                                else begin
                                    if (tile_distance(tile_num(self_obj), 26719) < tile_distance(dest_tile, 26719)) then begin
                                        reg_anim_func(2, self_obj);
                                    end
                                end
                            end
                        end
                    end
                end
            end
            else begin
                if ((tile_in_tile_rect(22519, 22507, 24319, 24307, tile_num(self_obj)) and (cur_map_index == 56) and ((elevation(self_obj) == 0) or (-1 == 0))) == 0) then begin
                    set_global_var(495, global_var(495) bwor 134217728);
                    if ((tile_num(self_obj) != 23110) and (23110 != 0)) then begin
                        if ((dest_tile == 23110) and (step_tile < 0)) then begin
                            step_tile := step_tile + 1;
                            debug_msg("step_tile: " + step_tile);
                        end
                        else begin
                            if (anim_busy(self_obj) == 0) then begin
                                dest_tile := 23110;
                                step_tile := 23110;
                                animate_move_obj_to_tile(self_obj, step_tile, 0);
                                while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), 23110) >= tile_distance(step_tile, 23110))) do begin
                                    debug_msg("rot: " + rotation_to_tile(step_tile, tile_num(self_obj)));
                                    step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), 2 % tile_distance(step_tile, tile_num(self_obj)));
                                    debug_msg("step_var: " + step_tile);
                                    animate_move_obj_to_tile(self_obj, step_tile, 0);
                                end
                                if (anim_busy(self_obj) == 0) then begin
                                    if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
                                        if (anim_busy(self_obj) == 0) then begin
                                            global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                            global_temp := (global_temp + 1) % 6;
                                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                debug_msg("flee loop: rot == " + global_temp);
                                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                global_temp := (global_temp + 1) % 6;
                                            end
                                        end
                                    end
                                    else begin
                                        step_tile := -10;
                                    end
                                end
                            end
                            else begin
                                if (tile_distance(tile_num(self_obj), 23110) < tile_distance(dest_tile, 23110)) then begin
                                    reg_anim_func(2, self_obj);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        call Node998();
    end
end

procedure talk_p_proc
begin
    if (global_var(494) == 8) then begin
        gdialog_set_barter_mod(-200);
    end
    else begin
        if ((local_var(4) bwand 1024) != 0) then begin
            gdialog_set_barter_mod(-20);
        end
        else begin
            if (global_var(349) == 2) then begin
                gdialog_set_barter_mod(-10);
            end
        end
    end
    if ((global_var(495) bwand 134217728) != 0) then begin
        call Node030();
    end
    else begin
        prev_node := 0;
        if (new_reno_eldridge_box != current_box) then begin
            if (current_box != 0) then begin
                move_obj_inven_to_obj(self_obj, current_box);
            end
            else begin
                move_obj_inven_to_obj(self_obj, new_reno_temp_box);
            end
            move_obj_inven_to_obj(new_reno_eldridge_box, self_obj);
            if (new_reno_eldridge_box != new_reno_temp_box) then begin
                current_box := new_reno_eldridge_box;
            end
            else begin
                current_box := 0;
            end
        end
        start_gdialog(426, self_obj, 4, -1, -1);
        gsay_start;
        if ((local_var(4) bwand 4096) != 0) then begin
            if (global_var(494) == 8) then begin
                call Node005();
            end
            else begin
                call Node006();
            end
        end
        else begin
            call Node004();
        end
        gsay_end;
        end_dialogue;
        if (new_reno_temp_box != current_box) then begin
            if (current_box != 0) then begin
                move_obj_inven_to_obj(self_obj, current_box);
            end
            else begin
                move_obj_inven_to_obj(self_obj, new_reno_temp_box);
            end
            move_obj_inven_to_obj(new_reno_temp_box, self_obj);
            if (new_reno_temp_box != new_reno_temp_box) then begin
                current_box := new_reno_temp_box;
            end
            else begin
                current_box := 0;
            end
        end
        set_local_var(4, local_var(4) bwor 1);
    end
    last_timed_obj := self_obj;
    last_timed_param := last_timed_param;
    metarule3(100, self_obj, 1, 0);
    add_timer_event(self_obj, game_ticks(25) + random(0, game_ticks(35 - 25)), 1);
end

procedure destroy_p_proc
begin
    new_reno_eldridge_obj := 0;
    move_obj_inven_to_obj(new_reno_eldridge_box, self_obj);
    move_obj_inven_to_obj(new_reno_eldridge_box_2, self_obj);
    if (((local_var(4) bwand 512) != 0) == 0) then begin
        set_local_var(4, local_var(4) bwor 512);
        restock_obj := create_object_sid(356, 0, 0, -1);
        add_mult_objs_to_inven(self_obj, restock_obj, 1);
    end
    set_global_var(345, global_var(345) bwor 4194304);
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(426, 100));
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(426, 150 + (((local_var(4) bwand 1) != 0) * ((local_var(4) bwand 4) != 0))));
    set_local_var(4, local_var(4) bwor 4);
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(4, local_var(4) bwor 8);
        set_local_var(4, local_var(4) bwor 2);
    end
end

procedure map_enter_p_proc
begin
    new_reno_eldridge_obj := self_obj;
    if (metarule(22, 0) == 0) then begin
        if (metarule(14, 0)) then begin
            critter_add_trait(self_obj, 1, 6, 157);
            critter_add_trait(self_obj, 1, 5, 22);
            last_timed_obj := self_obj;
            last_timed_param := last_timed_param;
            metarule3(100, self_obj, 1, 0);
            add_timer_event(self_obj, game_ticks(25 + random(0, 10)), 1);
        end
    end
end

procedure map_exit_p_proc
begin
    set_local_var(6, 0);
end

procedure timed_event_p_proc
begin
    if (fixed_param == 13) then begin
        if (combat_is_initialized == 0) then begin
            call Node027();
            set_local_var(6, local_var(6) + 1);
            debug_msg("heard bark count == " + local_var(6));
        end
    end
    else begin
        if (fixed_param == 3) then begin
            if ((local_var(4) bwand 16384) != 0) then begin
                call Node998();
            end
            else begin
                set_local_var(4, local_var(4) bwor 16384);
                call Node028();
            end
        end
        else begin
            if ((game_time_hour >= 600) and (game_time_hour <= 2100)) then begin
                set_local_var(6, 0);
                if ((combat_is_initialized == 0) and (global_var(219) <= game_time)) then begin
                    if (obj_can_see_obj(self_obj, dude_obj)) then begin
                        if (global_var(494) == 8) then begin
                            call Node001();
                        end
                        else begin
                            if ((obj_pid(critter_inven_obj(dude_obj, 0)) == 3) or (obj_pid(critter_inven_obj(dude_obj, 0)) == 348) or (obj_pid(critter_inven_obj(dude_obj, 0)) == 349) or (obj_pid(critter_inven_obj(dude_obj, 0)) == 232)) then begin
                                call Node002();
                            end
                            else begin
                                call Node003();
                            end
                        end
                    end
                end
            end
        end
    end
    last_timed_obj := self_obj;
    last_timed_param := last_timed_param;
    metarule3(100, self_obj, 1, 0);
    add_timer_event(self_obj, game_ticks(25 + random(0, 10)), 1);
end

procedure Node998
begin
    if (((local_var(4) bwand 2) != 0) == 0) then begin
        set_local_var(4, local_var(4) bwor 2);
    end
end

procedure Node999
begin
end

procedure Node001
begin
    float_msg(self_obj, message_str(426, random(200, 204)), 8);
end

procedure Node002
begin
    float_msg(self_obj, message_str(426, random(210, 214)), 8);
end

procedure Node003
begin
    float_msg(self_obj, message_str(426, random(220, 234)), 8);
end

procedure Node004
begin
    if (global_var(494) == 8) then begin
        gsay_reply(426, 240);
    end
    else begin
        gsay_reply(426, 241 + (get_critter_stat(dude_obj, 34) == 1));
    end
    set_local_var(4, local_var(4) bwor 4096);
    giq_option(1, 426, 243 + ((get_critter_stat(dude_obj, 4) <= 3) == 0), Node990, 50);
end

procedure Node005
begin
    return_node := "Node005";
    if (prev_node == 0) then begin
        gsay_reply(426, message_str(426, 250) + message_str(426, 251));
    end
    else begin
        gsay_reply(426, 251);
    end
    set_local_var(5, local_var(5) + -200);
    set_local_var(5, local_var(5) - (local_var(5) % 200));
    gdialog_set_barter_mod(local_var(5));
    giq_option(-3, 426, 252, Node007, 50);
    giq_option(-3, 426, 253, Node999, 50);
    giq_option(4, 426, 254, Node974, 50);
    if (((local_var(4) bwand 512) != 0) == 0) then begin
        giq_option(4, 426, 255, Node018, 50);
    end
    if (global_var(230) > 0) then begin
        if ((local_var(4) bwand 1024) != 0) then begin
            giq_option(4, 426, 262, Node975, 50);
        end
        else begin
            giq_option(4, 426, message_str(426, 256) + message_str(353, 200 + (global_var(230) / 100)) + message_str(426, 5256), Node026, 50);
        end
    end
    else begin
        if (global_var(349) == 1) then begin
            giq_option(4, 426, 257, Node989, 50);
        end
    end
    if (global_var(549) == 0) then begin
        if (((global_var(314) bwand 16384) != 0) and ((global_var(230) / 100) != 1)) then begin
            giq_option(4, 426, 258, Node023, 50);
        end
    end
    else begin
        if (global_var(549) == 1) then begin
            if (obj_is_carrying_obj_pid(dude_obj, 16)) then begin
                giq_option(4, 426, 259, Node025, 50);
            end
        end
    end
    giq_option(4, 426, 260, Node998, 50);
    giq_option(4, 426, 261, Node999, 51);
    prev_node := 5;
end

procedure Node006
begin
    return_node := "Node006";
    if (((local_var(4) bwand 8192) != 0) == 0) then begin
        gsay_reply(426, 270);
    end
    else begin
        gsay_reply(426, 272 + (prev_node != 0));
    end
    if (global_var(759) == 0) then begin
        giq_option(4, 426, 900, Node1000, 50);
    end
    if ((global_var(759) == 1) or (global_var(759) == 2)) then begin
        giq_option(4, 426, 923, Node1005, 50);
    end
    giq_option(-3, 426, 274, Node007, 50);
    giq_option(-3, 426, 253, Node999, 50);
    giq_option(4, 426, 276 + ((local_var(4) bwand 8192) != 0), Node974, 50);
    if (((local_var(4) bwand 512) != 0) == 0) then begin
        giq_option(4, 426, 255, Node018, 50);
    end
    if (global_var(230) > 0) then begin
        if ((local_var(4) bwand 1024) != 0) then begin
            giq_option(4, 426, 286, Node975, 50);
        end
        else begin
            giq_option(4, 426, message_str(426, 256) + message_str(353, 200 + (global_var(230) / 100)) + message_str(426, 5256), Node026, 50);
        end
    end
    else begin
        if (global_var(349) == 1) then begin
            giq_option(4, 426, 257, Node989, 50);
        end
    end
    if (global_var(549) == 0) then begin
        if (((global_var(314) bwand 16384) != 0) and ((global_var(230) / 100) != 1)) then begin
            giq_option(4, 426, 258, Node023, 50);
        end
    end
    else begin
        if (global_var(549) == 1) then begin
            if (obj_is_carrying_obj_pid(dude_obj, 16)) then begin
                giq_option(4, 426, 259, Node025, 50);
            end
        end
    end
    giq_option(4, 426, 283, Node988, 50);
    giq_option(4, 426, 284 + ((local_var(4) bwand 8192) != 0), Node999, 51);
    set_local_var(4, local_var(4) bwor 8192);
end

procedure Node007
begin
    return_node := "Node007";
    gsay_reply(426, 300 + ((global_var(494) == 8) == 0));
    giq_option(-3, 426, 302, Node974, 50);
    if (((local_var(4) bwand 512) != 0) == 0) then begin
        giq_option(-3, 426, 303, Node018, 50);
    end
    giq_option(-3, 426, 304, Node999, 50);
    prev_node := 7;
end

procedure Node008
begin
    return_node := "Node008";
    if (global_var(349) == 1) then begin
        set_global_var(349, 2);
        set_local_var(5, local_var(5) + -10);
        set_local_var(5, local_var(5) - (local_var(5) % 200));
        gdialog_set_barter_mod(local_var(5));
    end
    gsay_reply(426, message_str(426, 310) + message_str(426, 311 + (get_critter_stat(dude_obj, 34) == 1)));
    giq_option(4, 426, 277, Node974, 50);
    if (((local_var(4) bwand 512) != 0) == 0) then begin
        giq_option(4, 426, 255, Node018, 50);
    end
    if (global_var(230) > 0) then begin
        if ((local_var(4) bwand 1024) != 0) then begin
            giq_option(4, 426, 286, Node975, 50);
        end
        else begin
            giq_option(4, 426, message_str(426, 256) + message_str(353, 200 + (global_var(230) / 100)) + message_str(426, 5256), Node026, 50);
        end
    end
    if (global_var(549) == 0) then begin
        if (((global_var(314) bwand 16384) != 0) and ((global_var(230) / 100) != 1)) then begin
            giq_option(4, 426, 258, Node023, 50);
        end
    end
    else begin
        if (global_var(549) == 1) then begin
            if (obj_is_carrying_obj_pid(dude_obj, 16)) then begin
                giq_option(4, 426, 259, Node025, 50);
            end
        end
    end
    giq_option(4, 426, 283, Node988, 50);
    giq_option(4, 426, 285, Node999, 51);
    prev_node := 8;
end

procedure Node009
begin
    gsay_reply(426, 330);
    giq_option(4, 426, 331, Node006, 50);
    giq_option(4, 426, 285, Node999, 50);
    prev_node := 9;
end

procedure Node010
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    if (obj_is_carrying_obj_pid(dude_obj, 18) or obj_is_carrying_obj_pid(dude_obj, 313)) then begin
        LVar0 := 1;
    end
    if (obj_is_carrying_obj_pid(dude_obj, 10) or obj_is_carrying_obj_pid(dude_obj, 23) or obj_is_carrying_obj_pid(dude_obj, 351)) then begin
        LVar1 := 1;
    end
    if (obj_is_carrying_obj_pid(dude_obj, 160)) then begin
        LVar2 := 1;
    end
    if (LVar0 or LVar1 or LVar2) then begin
        gsay_reply(426, 340);
        if (LVar0) then begin
            giq_option(4, 426, 341, Node011, 50);
        end
        if (LVar1) then begin
            giq_option(4, 426, 342, Node012, 50);
        end
        if (LVar2) then begin
            giq_option(4, 426, 343, Node013, 50);
        end
        giq_option(4, 426, 344, Node006, 50);
        giq_option(4, 426, 345, Node999, 50);
    end
    else begin
        gsay_reply(426, 1340);
        giq_option(4, 426, 1345, Node006, 50);
        giq_option(4, 426, 1346, Node999, 50);
    end
    prev_node := 10;
end

procedure Node011
begin
    variable LVar0 := "";
    variable LVar1 := 0;
    if (obj_is_carrying_obj_pid(dude_obj, 313)) then begin
        LVar0 := LVar0 + (message_str(426, 350) + (400 * (25000 / (160 + has_skill(dude_obj, 15))) / 100) + message_str(426, 5500) + " ");
    end
    if (obj_is_carrying_obj_pid(dude_obj, 18)) then begin
        LVar0 := LVar0 + (message_str(426, 351) + (1500 * (25000 / (160 + has_skill(dude_obj, 15))) / 100) + message_str(426, 5500));
    end
    gsay_reply(426, LVar0);
    if (obj_is_carrying_obj_pid(dude_obj, 313) and (item_caps_total(dude_obj) >= (400 * (25000 / (160 + has_skill(dude_obj, 15))) / 100))) then begin
        giq_option(4, 426, 352, Node987, 50);
        LVar1 := 1;
    end
    if (obj_is_carrying_obj_pid(dude_obj, 18) and (item_caps_total(dude_obj) >= (1500 * (25000 / (160 + has_skill(dude_obj, 15))) / 100))) then begin
        giq_option(4, 426, 353, Node986, 50);
        LVar1 := 1;
    end
    if (LVar1 == 0) then begin
        giq_option(4, 426, 357, Node999, 50);
    end
    giq_option(4, 426, 354, Node010, 50);
    giq_option(4, 426, 355, Node006, 50);
    giq_option(4, 426, 356, Node999, 50);
    prev_node := 11;
end

procedure Node012
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    LVar0 := message_str(426, 365);
    if (obj_is_carrying_obj_pid(dude_obj, 10)) then begin
        LVar0 := LVar0 + (message_str(426, 366) + (1750 * (25000 / (160 + has_skill(dude_obj, 15))) / 100) + message_str(426, 5500) + " ");
    end
    if (obj_is_carrying_obj_pid(dude_obj, 23)) then begin
        LVar0 := LVar0 + (message_str(426, 367) + (2000 * (25000 / (160 + has_skill(dude_obj, 15))) / 100) + message_str(426, 5500) + " ");
    end
    if (obj_is_carrying_obj_pid(dude_obj, 351)) then begin
        LVar0 := LVar0 + (message_str(426, 368) + (4000 * (25000 / (160 + has_skill(dude_obj, 15))) / 100) + message_str(426, 5500));
    end
    gsay_reply(426, LVar0);
    if (obj_is_carrying_obj_pid(dude_obj, 10) and (item_caps_total(dude_obj) >= (1750 * (25000 / (160 + has_skill(dude_obj, 15))) / 100))) then begin
        giq_option(4, 426, 369, Node985, 50);
        LVar1 := 1;
    end
    if (obj_is_carrying_obj_pid(dude_obj, 23) and (item_caps_total(dude_obj) >= (2000 * (25000 / (160 + has_skill(dude_obj, 15))) / 100))) then begin
        giq_option(4, 426, 370, Node984, 50);
        LVar1 := 1;
    end
    if (obj_is_carrying_obj_pid(dude_obj, 351) and (item_caps_total(dude_obj) >= (4000 * (25000 / (160 + has_skill(dude_obj, 15))) / 100))) then begin
        giq_option(4, 426, 371, Node983, 50);
        LVar1 := 1;
    end
    if (LVar1 == 0) then begin
        giq_option(4, 426, 357, Node999, 50);
    end
    giq_option(4, 426, 354, Node010, 50);
    giq_option(4, 426, 355, Node006, 50);
    giq_option(4, 426, 356, Node999, 50);
    prev_node := 12;
end

procedure Node013
begin
    gsay_reply(426, message_str(426, 385) + (1500 * (25000 / (160 + has_skill(dude_obj, 15)) / 100)) + message_str(426, 5500));
    if (item_caps_total(dude_obj) >= (1500 * (25000 / (160 + has_skill(dude_obj, 15))) / 100)) then begin
        giq_option(4, 426, 386, Node982, 50);
    end
    else begin
        giq_option(4, 426, 357, Node999, 50);
    end
    giq_option(4, 426, 354, Node010, 50);
    giq_option(4, 426, 355, Node006, 50);
    giq_option(4, 426, 356, Node999, 50);
    prev_node := 13;
end

procedure Node014
begin
    gsay_reply(426, 395);
    giq_option(4, 426, 396, Node017, 50);
    prev_node := 14;
end

procedure Node015
begin
    gfade_out(5);
    game_time_advance(60 * (60 * 10));
    gsay_reply(426, 400);
    gfade_in(5);
    giq_option(4, 426, 401, Node016, 50);
    prev_node := 15;
end

procedure Node016
begin
    gfade_out(5);
    game_time_advance(60 * (60 * 10));
    gsay_reply(426, 405);
    gfade_in(5);
    giq_option(4, 426, 406, Node017, 50);
    prev_node := 16;
end

procedure Node017
begin
    gfade_out(5);
    game_time_advance(60 * (60 * 10));
    gsay_reply(426, 410);
    gfade_in(5);
    giq_option(4, 426, 411, Node010, 50);
    giq_option(4, 426, 412, Node006, 50);
    giq_option(4, 426, 413, Node999, 50);
    prev_node := 17;
end

procedure Node018
begin
    gsay_reply(426, 420);
    giq_option(-3, 426, 302, Node019, 50);
    giq_option(-3, 426, 304, Node019, 50);
    giq_option(4, 426, 423, Node019, 50);
    giq_option(4, 426, 424, Node006, 50);
    giq_option(4, 426, 425, Node999, 50);
    prev_node := 18;
end

procedure Node019
begin
    gsay_reply(426, 430 + (get_critter_stat(dude_obj, 4) > 3) + (get_critter_stat(dude_obj, 4) > 6));
    giq_option(-3, 426, 433, Node020, 50);
    giq_option(-3, 426, 434, Node007, 50);
    giq_option(-3, 426, 435, Node999, 50);
    giq_option(4, 426, 436 + (global_var(350) == 1), Node020, 50);
    giq_option(4, 426, 438, Node006, 50);
    giq_option(4, 426, 439, Node999, 51);
    prev_node := 19;
end

procedure Node020
begin
    gsay_reply(426, 450 + (prev_node != 19));
    if (item_caps_total(dude_obj) >= 3000) then begin
        giq_option(-3, 426, 452, Node973, 50);
        giq_option(4, 426, 386, Node973, 50);
    end
    giq_option(-3, 426, 434, Node007, 50);
    giq_option(-3, 426, 454, Node981, 50);
    giq_option(-3, 426, 455, Node999, 50);
    if ((prev_node == 19) and (item_caps_total(dude_obj) >= 1500)) then begin
        giq_option(4, 426, 457, Node980, 51);
    end
    giq_option(4, 426, 458, Node006, 50);
    giq_option(4, 426, 459, Node999, 50);
end

procedure Node021
begin
    gsay_reply(426, 470);
    if (item_caps_total(dude_obj) >= 2500) then begin
        giq_option(4, 426, 471, Node979, 50);
    end
    else begin
        giq_option(4, 426, 474, Node999, 50);
    end
    giq_option(4, 426, 472, Node006, 50);
    giq_option(4, 426, 473, Node999, 50);
    prev_node := 21;
end

procedure Node022
begin
    return_node := "Node022";
    if (((local_var(4) bwand 512) != 0) == 0) then begin
        set_local_var(4, local_var(4) bwor 512);
        restock_obj := create_object_sid(356, 0, 0, -1);
        add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    end
    gsay_reply(426, message_str(426, 480 + ((local_var(4) bwand 2048) != 0)) + message_str(426, 482));
    giq_option(-3, 426, 302, Node974, 50);
    giq_option(-3, 426, 304, Node999, 50);
    giq_option(4, 426, 485, Node006, 50);
    giq_option(4, 426, 486, Node999, 51);
    prev_node := 22;
end

procedure Node023
begin
    gsay_reply(426, 495);
    giq_option(4, 426, 496, Node024, 50);
    giq_option(4, 426, 497, Node006, 50);
    giq_option(4, 426, 498, Node999, 50);
    prev_node := 23;
end

procedure Node024
begin
    gsay_reply(426, 505);
    if (obj_is_carrying_obj_pid(dude_obj, 16)) then begin
        giq_option(4, 426, 506, Node025, 49);
    end
    giq_option(4, 426, 507, Node978, 50);
    giq_option(4, 426, 508, Node006, 50);
    giq_option(4, 426, 509, Node977, 50);
    giq_option(4, 426, 510, Node999, 50);
    prev_node := 24;
end

procedure Node025
begin
    restock_amt := 1;
    if (obj_is_carrying_obj_pid(dude_obj, 16) < 1) then begin
        restock_amt := obj_is_carrying_obj_pid(dude_obj, 16);
    end
    if (restock_amt > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 16);
        restock_trash := rm_mult_objs_from_inven(dude_obj, restock_obj, restock_amt);
        add_mult_objs_to_inven(new_reno_temp_box, restock_obj, restock_amt);
    end
    item_caps_adjust(dude_obj, 1500);
    display_msg(message_str(426, 800));
    give_exp_points(500);
    display_msg(message_str(14, 100) + 500 + message_str(14, 101));
    set_global_var(55, global_var(55) + 1);
    set_global_var(549, 2);
    gsay_reply(426, message_str(426, 520 + (prev_node != 24)) + message_str(426, 522));
    giq_option(4, 426, 523, Node006, 50);
    giq_option(4, 426, 524, Node999, 50);
    prev_node := 25;
end

procedure Node026
begin
    return_node := "Node026";
    if (((local_var(4) bwand 1024) != 0) == 0) then begin
        set_local_var(5, local_var(5) + -20);
        set_local_var(5, local_var(5) - (local_var(5) % 200));
        gdialog_set_barter_mod(local_var(5));
        set_local_var(4, local_var(4) bwor 1024);
    end
    gsay_reply(426, 530);
    giq_option(4, 426, 386, Node975, 50);
    giq_option(4, 426, 532, Node006, 50);
    giq_option(4, 426, 533, Node999, 50);
    prev_node := 26;
end

procedure Node027
begin
    if (local_var(6) < 3) then begin
        float_msg(self_obj, message_str(426, random(545, 547)), 8 + ((2 - 8) * has_trait(0, dude_obj, 22)));
    end
    else begin
        if (local_var(6) == 3) then begin
            float_msg(self_obj, message_str(426, random(548, 549)), 8 + ((2 - 8) * has_trait(0, dude_obj, 22)));
        end
        else begin
            if (local_var(6) > 3) then begin
                float_msg(self_obj, message_str(426, random(550, 550)), 8 + ((2 - 8) * has_trait(0, dude_obj, 22)));
            end
        end
    end
end

procedure Node028
begin
    float_msg(self_obj, message_str(426, random(560, 564)), 8 + ((2 - 8) * has_trait(0, dude_obj, 22)));
end

procedure Node029
begin
    float_msg(self_obj, message_str(426, random(575, 578)), 8 + ((2 - 8) * has_trait(0, dude_obj, 22)));
end

procedure Node030
begin
    animate_stand_obj(self_obj);
    float_msg(self_obj, message_str(426, 600 + (get_critter_stat(dude_obj, 34) == 1)) + message_str(426, 610), 8);
end

procedure Node990
begin
    if (global_var(494) == 8) then begin
        call Node005();
    end
    else begin
        if (get_critter_stat(dude_obj, 4) <= 3) then begin
            call Node007();
        end
        else begin
            call Node006();
        end
    end
end

procedure Node989
begin
    call Node008();
end

procedure Node988
begin
    if ((global_var(345) bwand 1048576) != 0) then begin
        call Node009();
    end
    else begin
        call Node010();
    end
end

procedure Node987
begin
    if (obj_is_carrying_obj_pid(dude_obj, 313) and (item_caps_total(dude_obj) >= (400 * (25000 / (160 + has_skill(dude_obj, 15))) / 100))) then begin
        item_caps_adjust(dude_obj, -400);
        item_caps_adjust(self_obj, 400);
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 313);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 313);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 313);
                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, 0);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                        metarule(43, dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
        end
        restock_obj := 0;
        restock_amt := 0;
        restock_obj := create_object_sid(398, 0, 0, -1);
        add_mult_objs_to_inven(dude_obj, restock_obj, 1);
        call Node014();
    end
    else begin
        if (item_caps_total(dude_obj) < (400 * (25000 / (160 + has_skill(dude_obj, 15))) / 100)) then begin
            gsay_reply(426, 802);
            giq_option(4, 426, 1346, Node999, 50);
        end
        else begin
            if (not(obj_is_carrying_obj_pid(dude_obj, 313))) then begin
                gsay_reply(426, 801);
                giq_option(4, 426, 1346, Node999, 50);
            end
        end
    end
end

procedure Node986
begin
    if (obj_is_carrying_obj_pid(dude_obj, 18) and (item_caps_total(dude_obj) >= (1500 * (25000 / (160 + has_skill(dude_obj, 15))) / 100))) then begin
        item_caps_adjust(dude_obj, -1500);
        item_caps_adjust(self_obj, 1500);
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 18);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 18);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 18);
                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, 0);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                        metarule(43, dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
        end
        restock_obj := 0;
        restock_amt := 0;
        restock_obj := create_object_sid(404, 0, 0, -1);
        add_mult_objs_to_inven(dude_obj, restock_obj, 1);
        call Node014();
    end
    else begin
        if (item_caps_total(dude_obj) < (1500 * (25000 / (160 + has_skill(dude_obj, 15))) / 100)) then begin
            gsay_reply(426, 802);
            giq_option(4, 426, 1346, Node999, 50);
        end
        else begin
            if (not(obj_is_carrying_obj_pid(dude_obj, 18))) then begin
                gsay_reply(426, 801);
                giq_option(4, 426, 1346, Node999, 50);
            end
        end
    end
end

procedure Node985
begin
    if (obj_is_carrying_obj_pid(dude_obj, 10) and (item_caps_total(dude_obj) >= (1750 * (25000 / (160 + has_skill(dude_obj, 15))) / 100))) then begin
        item_caps_adjust(dude_obj, -1750);
        item_caps_adjust(self_obj, 1750);
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 10);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 10);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 10);
                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, 0);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                        metarule(43, dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
        end
        restock_obj := 0;
        restock_amt := 0;
        restock_obj := create_object_sid(287, 0, 0, -1);
        add_mult_objs_to_inven(dude_obj, restock_obj, 1);
        call Node014();
    end
    else begin
        if (item_caps_total(dude_obj) < (1750 * (25000 / (160 + has_skill(dude_obj, 15))) / 100)) then begin
            gsay_reply(426, 802);
            giq_option(4, 426, 1346, Node999, 50);
        end
        else begin
            if (not(obj_is_carrying_obj_pid(dude_obj, 10))) then begin
                gsay_reply(426, 801);
                giq_option(4, 426, 1346, Node999, 50);
            end
        end
    end
end

procedure Node984
begin
    if (obj_is_carrying_obj_pid(dude_obj, 23) and (item_caps_total(dude_obj) >= (2000 * (25000 / (160 + has_skill(dude_obj, 15))) / 100))) then begin
        item_caps_adjust(dude_obj, -2000);
        item_caps_adjust(self_obj, 2000);
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 23);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 23);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 23);
                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, 0);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                        metarule(43, dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
        end
        restock_obj := 0;
        restock_amt := 0;
        restock_obj := create_object_sid(405, 0, 0, -1);
        add_mult_objs_to_inven(dude_obj, restock_obj, 1);
        call Node014();
    end
    else begin
        if (item_caps_total(dude_obj) < (2000 * (25000 / (160 + has_skill(dude_obj, 15))) / 100)) then begin
            gsay_reply(426, 802);
            giq_option(4, 426, 1346, Node999, 50);
        end
        else begin
            if (not(obj_is_carrying_obj_pid(dude_obj, 23))) then begin
                gsay_reply(426, 801);
                giq_option(4, 426, 1346, Node999, 50);
            end
        end
    end
end

procedure Node983
begin
    if (obj_is_carrying_obj_pid(dude_obj, 351) and (item_caps_total(dude_obj) >= (4000 * (25000 / (160 + has_skill(dude_obj, 15))) / 100))) then begin
        item_caps_adjust(dude_obj, -4000);
        item_caps_adjust(self_obj, 4000);
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 351);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 351);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 351);
                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, 0);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                        metarule(43, dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
        end
        restock_obj := 0;
        restock_amt := 0;
        restock_obj := create_object_sid(403, 0, 0, -1);
        add_mult_objs_to_inven(dude_obj, restock_obj, 1);
        call Node014();
    end
    else begin
        if (item_caps_total(dude_obj) < (4000 * (25000 / (160 + has_skill(dude_obj, 15))) / 100)) then begin
            gsay_reply(426, 802);
            giq_option(4, 426, 1346, Node999, 50);
        end
        else begin
            if (not(obj_is_carrying_obj_pid(dude_obj, 351))) then begin
                gsay_reply(426, 801);
                giq_option(4, 426, 1346, Node999, 50);
            end
        end
    end
end

procedure Node982
begin
    if (obj_is_carrying_obj_pid(dude_obj, 160) and (item_caps_total(dude_obj) >= (1500 * (25000 / (160 + has_skill(dude_obj, 15))) / 100))) then begin
        item_caps_adjust(dude_obj, -1500);
        item_caps_adjust(self_obj, 1500);
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 160);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 160);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 160);
                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, 0);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                        metarule(43, dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
        end
        restock_obj := 0;
        restock_amt := 0;
        restock_obj := create_object_sid(399, 0, 0, -1);
        add_mult_objs_to_inven(dude_obj, restock_obj, 1);
        call Node014();
    end
    else begin
        if (item_caps_total(dude_obj) < (1500 * (25000 / (160 + has_skill(dude_obj, 15))) / 100)) then begin
            gsay_reply(426, 802);
            giq_option(4, 426, 1346, Node999, 50);
        end
        else begin
            if (not(obj_is_carrying_obj_pid(dude_obj, 160))) then begin
                gsay_reply(426, 801);
                giq_option(4, 426, 1346, Node999, 50);
            end
        end
    end
end

procedure Node981
begin
    if (((local_var(4) bwand 512) != 0) == 0) then begin
        set_local_var(4, local_var(4) bwor 512);
        restock_obj := create_object_sid(356, 0, 0, -1);
        add_mult_objs_to_inven(self_obj, restock_obj, 1);
    end
    drop_obj(restock_obj);
    call Node998();
end

procedure Node980
begin
    variable LVar0 := 0;
    LVar0 := roll_vs_skill(dude_obj, 15, 0);
    if ((get_critter_stat(dude_obj, 3) > 8) or (is_success(LVar0) and is_critical(LVar0))) then begin
        set_local_var(4, local_var(4) bwor 2048);
        item_caps_adjust(dude_obj, -1500);
        item_caps_adjust(self_obj, 1500);
        call Node022();
    end
    else begin
        if (is_success(LVar0)) then begin
            call Node021();
        end
        else begin
            call Node020();
        end
    end
end

procedure Node979
begin
    item_caps_adjust(dude_obj, -2500);
    item_caps_adjust(self_obj, 2500);
    call Node022();
end

procedure Node978
begin
    set_global_var(549, 1);
    call Node006();
end

procedure Node977
begin
    set_global_var(549, 1);
end

procedure Node975
begin
    if (new_reno_eldridge_box_2 != current_box) then begin
        if (current_box != 0) then begin
            move_obj_inven_to_obj(self_obj, current_box);
        end
        else begin
            move_obj_inven_to_obj(self_obj, new_reno_temp_box);
        end
        move_obj_inven_to_obj(new_reno_eldridge_box_2, self_obj);
        if (new_reno_eldridge_box_2 != new_reno_temp_box) then begin
            current_box := new_reno_eldridge_box_2;
        end
        else begin
            current_box := 0;
        end
    end
    if (global_var(494) == 8) then begin
        gdialog_mod_barter(-200);
    end
    else begin
        if ((local_var(4) bwand 1024) != 0) then begin
            gdialog_mod_barter(-20);
        end
        else begin
            if (global_var(349) == 2) then begin
                gdialog_mod_barter(-10);
            end
            else begin
                gdialog_mod_barter(0);
            end
        end
    end
    call return_node();
end

procedure Node974
begin
    if (new_reno_eldridge_box != current_box) then begin
        if (current_box != 0) then begin
            move_obj_inven_to_obj(self_obj, current_box);
        end
        else begin
            move_obj_inven_to_obj(self_obj, new_reno_temp_box);
        end
        move_obj_inven_to_obj(new_reno_eldridge_box, self_obj);
        if (new_reno_eldridge_box != new_reno_temp_box) then begin
            current_box := new_reno_eldridge_box;
        end
        else begin
            current_box := 0;
        end
    end
    if (global_var(494) == 8) then begin
        gdialog_mod_barter(-200);
    end
    else begin
        if ((local_var(4) bwand 1024) != 0) then begin
            gdialog_mod_barter(-20);
        end
        else begin
            if (global_var(349) == 2) then begin
                gdialog_mod_barter(-10);
            end
            else begin
                gdialog_mod_barter(0);
            end
        end
    end
    call return_node();
end

procedure Node973
begin
    item_caps_adjust(dude_obj, -3000);
    item_caps_adjust(self_obj, 3000);
    call Node022();
end

procedure Node1000
begin
    gsay_reply(426, 901);
    giq_option(4, 426, 902, Node1001, 50);
end

procedure Node1001
begin
    gsay_reply(426, 903);
    giq_option(4, 426, 904, Node1002, 50);
end

procedure Node1002
begin
    gsay_reply(426, 905);
    giq_option(4, 426, 906, Node1003, 50);
    giq_option(4, 426, 907, Node999, 50);
end

procedure Node1003
begin
    gsay_reply(426, 913);
    giq_option(4, 426, 919, Node1009, 50);
    if (obj_is_carrying_obj_pid(dude_obj, 392)) then begin
        giq_option(4, 426, 920, Node1006, 50);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 394)) then begin
        giq_option(4, 426, 921, Node1007, 50);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 626)) then begin
        giq_option(4, 426, 922, Node1008, 50);
    end
    giq_option(4, 426, 925, Node1004, 50);
end

procedure Node1004
begin
    gsay_reply(426, 926);
    giq_option(4, 426, 928, Node999, 50);
    set_global_var(759, 2);
end

procedure Node1005
begin
    if (global_var(759) == 1) then begin
        gsay_reply(426, 924);
    end
    if (global_var(759) == 2) then begin
        gsay_reply(426, 908);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 392)) then begin
        giq_option(4, 426, 920, Node1006, 50);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 394)) then begin
        giq_option(4, 426, 921, Node1007, 50);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 626)) then begin
        giq_option(4, 426, 922, Node1008, 50);
    end
    giq_option(4, 426, 925, Node1004, 50);
end

procedure Node1006
begin
    item := obj_carrying_pid_obj(dude_obj, 392);
    rm_obj_from_inven(dude_obj, item);
    destroy_object(item);
    gsay_reply(426, 929);
    display_msg(message_str(426, 927));
    give_exp_points(500);
    debug_msg("  mark_on_map(" + 51 + ")");
    mark_area_known(0, 51, 1);
    set_global_var(759, 3);
    giq_option(4, 426, 928, Node999, 50);
end

procedure Node1007
begin
    item := obj_carrying_pid_obj(dude_obj, 394);
    rm_obj_from_inven(dude_obj, item);
    destroy_object(item);
    gsay_reply(426, 929);
    display_msg(message_str(426, 927));
    give_exp_points(500);
    debug_msg("  mark_on_map(" + 51 + ")");
    mark_area_known(0, 51, 1);
    set_global_var(759, 3);
    giq_option(4, 426, 928, Node999, 50);
end

procedure Node1008
begin
    item := obj_carrying_pid_obj(dude_obj, 626);
    rm_obj_from_inven(dude_obj, item);
    destroy_object(item);
    gsay_reply(426, 929);
    display_msg(message_str(426, 927));
    give_exp_points(500);
    debug_msg("  mark_on_map(" + 51 + ")");
    mark_area_known(0, 51, 1);
    set_global_var(759, 3);
    giq_option(4, 426, 928, Node999, 50);
end

procedure Node1009
begin
    set_global_var(759, 1);
    gsay_reply(426, 930);
    giq_option(4, 426, 928, Node999, 50);
end

