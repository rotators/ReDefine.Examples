variable ValueOfRollCheck := 1;
variable global_temp;
variable restock_amt;
variable restock_obj;
variable removed_qty;

procedure start;
procedure critter_p_proc;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;
procedure kill_me_p_proc;
procedure Node998;
procedure Node999;
procedure Node001;
procedure Node001a;
procedure Node002;
procedure Node003;
procedure Node003a;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure timed_event_p_proc;


procedure start
begin
end

procedure critter_p_proc
begin
    if (local_var(7) == 1) then begin
        set_local_var(7, 2);
        float_msg(self_obj, message_str(1554, 112), 9);
        add_timer_event(self_obj, 5, 1);
    end
    if (elevation(dude_obj) == 1) then begin
        if (local_var(8) == 0) then begin
            dialogue_system_enter;
            set_local_var(8, 1);
        end
    end
end

procedure use_p_proc
begin
end

procedure look_at_p_proc
begin
end

procedure description_p_proc
begin
end

procedure use_skill_on_p_proc
begin
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
end

procedure map_enter_p_proc
begin
end

procedure map_update_p_proc
begin
end

procedure talk_p_proc
begin
    if (global_var(997) == 1) then begin
        start_gdialog(1554, self_obj, 4, -1, -1);
        gsay_start;
        call Node001();
        gsay_end;
        end_dialogue;
    end
    else begin
        if (global_var(997) == 2) then begin
            start_gdialog(1554, self_obj, 4, -1, -1);
            gsay_start;
            call Node004();
            gsay_end;
            end_dialogue;
        end
        else begin
            float_msg(self_obj, message_str(1554, random(116, 119)), 9);
        end
    end
end

procedure kill_me_p_proc
begin
    game_ui_enable;
    set_global_var(997, 3);
    critter_dmg(self_obj, 500, 3);
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
    debug_msg("LVAR_Herebefore == " + local_var(4));
    if (local_var(4) == 0) then begin
        set_local_var(4, 1);
    end
end

procedure Node001
begin
    set_global_var(997, 2);
    gsay_reply(1554, 100);
    giq_option(4, 1554, 101, Node001a, 50);
end

procedure Node001a
begin
    gsay_reply(1554, 120);
    giq_option(4, 1554, 121, Node002, 50);
end

procedure Node002
begin
    gsay_reply(1554, 102);
    giq_option(4, 1554, 103, Node003, 50);
end

procedure Node003
begin
    gsay_reply(1554, 104);
    giq_option(4, 1554, 105, Node003a, 50);
end

procedure Node003a
begin
    game_ui_disable;
    gfade_out(10 * 6);
    move_to(self_obj, 13476, 1);
    move_to(dude_obj, 13073, 1);
    anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
    anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
    gfade_in(10 * 6);
    game_ui_enable;
end

procedure Node004
begin
    gsay_reply(1554, 106);
    giq_option(4, 1554, 107, Node005, 50);
end

procedure Node005
begin
    gsay_reply(1554, 108);
    giq_option(4, 1554, 109, Node006, 50);
end

procedure Node006
begin
    gsay_reply(1554, 110);
    giq_option(4, 1554, 111, Node007, 50);
end

procedure Node007
begin
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 570);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 570);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 570);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    metarule(43, dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        destroy_object(restock_obj);
    end
    restock_obj := 0;
    restock_amt := 0;
    game_ui_disable;
    set_local_var(7, 1);
    add_timer_event(self_obj, 10, 1);
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        float_msg(self_obj, message_str(1554, 113), 9);
        add_timer_event(self_obj, 30, 2);
    end
    else begin
        if (fixed_param == 2) then begin
            float_msg(self_obj, message_str(1554, 114), 9);
            add_timer_event(self_obj, 30, 3);
        end
        else begin
            if (fixed_param == 3) then begin
                float_msg(self_obj, message_str(1554, 115), 9);
                call kill_me_p_proc();
            end
        end
    end
end

