variable global_temp;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure Make_Inven;
procedure Node998;
procedure Node999;
procedure Node001;
procedure Node002;
procedure Node003;
procedure NodeBarter;

variable Only_Once;


procedure start
begin
end

procedure critter_p_proc
begin
    if (obj_can_see_obj(self_obj, dude_obj) and (local_var(0) == 0)) then begin
        set_local_var(0, 1);
        float_msg(self_obj, message_str(258, random(102, 105)), 8);
        debug_msg("Need to set up shop");
    end
end

procedure pickup_p_proc
begin
    attack_complex(source_obj, 0, 1, 0, 0, 30000, 0, 0);
end

procedure talk_p_proc
begin
    if (local_var(1) == 0) then begin
        set_local_var(1, 1);
        start_gdialog(258, self_obj, 4, -1, -1);
        gsay_start;
        call Node001();
        gsay_end;
        end_dialogue;
    end
    else begin
        start_gdialog(258, self_obj, 4, -1, -1);
        gsay_start;
        call Node003();
        gsay_end;
        end_dialogue;
    end
end

procedure destroy_p_proc
begin
    variable LVar0 := 0;
    if ((obj_pid(self_obj) >= 16777358) and (obj_pid(self_obj) <= 16777359)) then begin
        LVar0 := create_object_sid(1, 0, 0, -1);
        add_obj_to_inven(self_obj, LVar0);
    end
    if (source_obj == dude_obj) then begin
        set_global_var(5, global_var(5) + 1);
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
            set_global_var(2, 1);
            set_global_var(3, 0);
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
            set_global_var(3, 1);
            set_global_var(2, 0);
        end
        set_global_var(0, global_var(0) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    set_map_var(0, map_var(0) + 1);
    set_map_var(2, map_var(2) + 1);
    return 0;
    LVar0 := 0;
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(258, 100));
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(258, 101));
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    attack_complex(source_obj, 0, 1, 0, 0, 30000, 0, 0);
end

procedure map_enter_p_proc
begin
    Only_Once := 0;
    critter_add_trait(self_obj, 1, 6, 92);
    critter_add_trait(self_obj, 1, 5, 17);
    if (local_var(2) == 0) then begin
        set_local_var(2, 1);
        call Make_Inven();
    end
end

procedure Make_Inven
begin
    variable LVar0 := 0;
    if (random(1, 20) <= 15) then begin
        LVar0 := create_object_sid(71, 0, 0, -1);
        add_mult_objs_to_inven(self_obj, LVar0, random(2, 5));
    end
    if (random(1, 20) <= 10) then begin
        LVar0 := create_object_sid(273, 0, 0, -1);
        add_mult_objs_to_inven(self_obj, LVar0, random(1, 3));
    end
    if (random(1, 20) <= 3) then begin
        LVar0 := create_object_sid(40, 0, 0, -1);
        add_mult_objs_to_inven(self_obj, LVar0, random(1, 2));
    end
    if (random(1, 20) <= 5) then begin
        LVar0 := create_object_sid(8, 0, 0, -1);
        add_mult_objs_to_inven(self_obj, LVar0, random(1, 2));
    end
    if (random(1, 20) <= 7) then begin
        LVar0 := create_object_sid(29, 0, 0, -1);
        add_mult_objs_to_inven(self_obj, LVar0, random(2, 3));
    end
    if (random(1, 20) <= 1) then begin
        LVar0 := create_object_sid(1, 0, 0, -1);
        add_mult_objs_to_inven(self_obj, LVar0, 1);
    end
    if (random(1, 20) <= 2) then begin
        LVar0 := create_object_sid(94, 0, 0, -1);
        add_mult_objs_to_inven(self_obj, LVar0, 1);
    end
    if (random(1, 20) <= 3) then begin
        LVar0 := create_object_sid(95, 0, 0, -1);
        add_mult_objs_to_inven(self_obj, LVar0, random(1, 2));
    end
    if (random(1, 20) <= 5) then begin
        LVar0 := create_object_sid(21, 0, 0, -1);
        add_mult_objs_to_inven(self_obj, LVar0, random(1, 2));
    end
    if (random(1, 20) <= 10) then begin
        LVar0 := create_object_sid(127, 0, 0, -1);
        add_mult_objs_to_inven(self_obj, LVar0, random(2, 3));
    end
    if (random(1, 20) <= 3) then begin
        LVar0 := create_object_sid(18, 0, 0, -1);
        add_mult_objs_to_inven(self_obj, LVar0, random(1, 2));
    end
    if (random(1, 20) <= 4) then begin
        LVar0 := create_object_sid(111, 0, 0, -1);
        add_mult_objs_to_inven(self_obj, LVar0, random(1, 2));
    end
    if (random(1, 20) <= 15) then begin
        LVar0 := create_object_sid(106, 0, 0, -1);
        add_mult_objs_to_inven(self_obj, LVar0, random(2, 5));
    end
    if (random(1, 20) <= 10) then begin
        LVar0 := create_object_sid(4, 0, 0, -1);
        add_mult_objs_to_inven(self_obj, LVar0, random(2, 3));
    end
    if (random(1, 20) <= 6) then begin
        LVar0 := create_object_sid(45, 0, 0, -1);
        add_mult_objs_to_inven(self_obj, LVar0, random(3, 5));
    end
    return 0;
    LVar0 := 0;
end

procedure Node998
begin
end

procedure Node999
begin
end

procedure Node001
begin
    gsay_reply(258, random(200, 202));
    giq_option(4, 258, 250, NodeBarter, 50);
    giq_option(4, 258, 251, Node999, 50);
    giq_option(-3, 258, 252, NodeBarter, 50);
    giq_option(-3, 258, 253, Node999, 50);
end

procedure Node002
begin
    gsay_reply(258, 260);
    giq_option(0, 258, 261, Node999, 50);
end

procedure Node003
begin
    gsay_reply(258, 270);
    giq_option(4, 258, 250, NodeBarter, 50);
    giq_option(4, 258, 251, Node999, 50);
    giq_option(-3, 258, 252, NodeBarter, 50);
    giq_option(-3, 258, 253, Node999, 50);
end

procedure NodeBarter
begin
    gdialog_mod_barter(0);
    call Node002();
end

