variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure critter_p_proc;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;
procedure timed_event_p_proc;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
    if (cur_map_index == 151) then begin
        add_timer_event(self_obj, game_ticks(5), 1);
    end
    else begin
        if (cur_map_index == 153) then begin
            if (elevation(self_obj) == 0) then begin
                add_timer_event(self_obj, game_ticks(5), 5);
            end
            else begin
                if (elevation(self_obj) == 2) then begin
                    add_timer_event(self_obj, game_ticks(5), 9);
                end
            end
        end
    end
end

procedure critter_p_proc
begin
    if (global_var(733) == 5) then begin
        destroy_object(self_obj);
    end
end

procedure use_p_proc
begin
end

procedure look_at_p_proc
begin
end

procedure description_p_proc
begin
end

procedure use_skill_on_p_proc
begin
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
end

procedure map_enter_p_proc
begin
end

procedure map_update_p_proc
begin
end

procedure talk_p_proc
begin
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if (((critter_state(self_obj) bwand 2) == 0) and not(combat_is_initialized)) then begin
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            animate_move_obj_to_tile(self_obj, 16083, 0);
            reg_anim_func(3, 0);
        end
        add_timer_event(self_obj, game_ticks(20), 2);
    end
    if (fixed_param == 2) then begin
        if (((critter_state(self_obj) bwand 2) == 0) and not(combat_is_initialized)) then begin
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            animate_move_obj_to_tile(self_obj, 16132, 0);
            reg_anim_func(3, 0);
        end
        add_timer_event(self_obj, game_ticks(20), 3);
    end
    if (fixed_param == 3) then begin
        if (((critter_state(self_obj) bwand 2) == 0) and not(combat_is_initialized)) then begin
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            animate_move_obj_to_tile(self_obj, 20933, 0);
            reg_anim_func(3, 0);
        end
        add_timer_event(self_obj, game_ticks(20), 4);
    end
    if (fixed_param == 4) then begin
        if (((critter_state(self_obj) bwand 2) == 0) and not(combat_is_initialized)) then begin
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            animate_move_obj_to_tile(self_obj, 20683, 0);
            reg_anim_func(3, 0);
        end
        add_timer_event(self_obj, game_ticks(20), 1);
    end
    if (fixed_param == 5) then begin
        if (((critter_state(self_obj) bwand 2) == 0) and not(combat_is_initialized)) then begin
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            animate_move_obj_to_tile(self_obj, 16066, 0);
            reg_anim_func(3, 0);
        end
        add_timer_event(self_obj, game_ticks(20), 6);
    end
    if (fixed_param == 6) then begin
        if (((critter_state(self_obj) bwand 2) == 0) and not(combat_is_initialized)) then begin
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            animate_move_obj_to_tile(self_obj, 18479, 0);
            reg_anim_func(3, 0);
        end
        add_timer_event(self_obj, game_ticks(20), 7);
    end
    if (fixed_param == 7) then begin
        if (((critter_state(self_obj) bwand 2) == 0) and not(combat_is_initialized)) then begin
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            animate_move_obj_to_tile(self_obj, 26682, 0);
            reg_anim_func(3, 0);
        end
        add_timer_event(self_obj, game_ticks(20), 8);
    end
    if (fixed_param == 8) then begin
        if (((critter_state(self_obj) bwand 2) == 0) and not(combat_is_initialized)) then begin
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            animate_move_obj_to_tile(self_obj, 26067, 0);
            reg_anim_func(3, 0);
        end
        add_timer_event(self_obj, game_ticks(20), 5);
    end
    if (fixed_param == 9) then begin
        if (((critter_state(self_obj) bwand 2) == 0) and not(combat_is_initialized)) then begin
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            animate_move_obj_to_tile(self_obj, 22515, 0);
            reg_anim_func(3, 0);
        end
        add_timer_event(self_obj, game_ticks(20), 10);
    end
    if (fixed_param == 10) then begin
        if (((critter_state(self_obj) bwand 2) == 0) and not(combat_is_initialized)) then begin
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            animate_move_obj_to_tile(self_obj, 18714, 0);
            reg_anim_func(3, 0);
        end
        add_timer_event(self_obj, game_ticks(20), 11);
    end
    if (fixed_param == 11) then begin
        if (((critter_state(self_obj) bwand 2) == 0) and not(combat_is_initialized)) then begin
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            animate_move_obj_to_tile(self_obj, 19126, 0);
            reg_anim_func(3, 0);
        end
        add_timer_event(self_obj, game_ticks(20), 12);
    end
    if (fixed_param == 12) then begin
        if (((critter_state(self_obj) bwand 2) == 0) and not(combat_is_initialized)) then begin
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            animate_move_obj_to_tile(self_obj, 22126, 0);
            reg_anim_func(3, 0);
        end
        add_timer_event(self_obj, game_ticks(20), 13);
    end
    if (fixed_param == 13) then begin
        if (((critter_state(self_obj) bwand 2) == 0) and not(combat_is_initialized)) then begin
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            animate_move_obj_to_tile(self_obj, 22298, 0);
            reg_anim_func(3, 0);
        end
        add_timer_event(self_obj, game_ticks(20), 9);
    end
end

