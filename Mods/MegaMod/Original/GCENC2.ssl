variable tmp_gen_rep;
variable global_temp;

procedure start;
procedure timed_event_p_proc;
procedure talk_p_proc;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure destroy_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node006a;
procedure Node007;
procedure Node008;
procedure Node998;
procedure Node999;

variable count;
variable Only_Once;


procedure start
begin
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if (not(combat_is_initialized)) then begin
            if (not(anim_busy(self_obj)) and obj_on_screen(self_obj)) then begin
                if (obj_can_see_obj(self_obj, dude_obj)) then begin
                    reg_anim_func(1, 1);
                    anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
                    reg_anim_func(3, 0);
                end
            end
            if ((local_var(7) == 0) and (tile_distance_objs(dude_obj, self_obj) < 10)) then begin
                dialogue_system_enter;
            end
        end
        add_timer_event(self_obj, 10, 1);
    end
end

procedure talk_p_proc
begin
    if (local_var(7) == 0) then begin
        start_gdialog(2320, self_obj, 4, -1, -1);
        gsay_start;
        call Node001();
        gsay_end;
        end_dialogue;
    end
    else begin
        if (count < 6) then begin
            float_msg(self_obj, message_str(2320, random(150, 159)), 2);
            count := count + 1;
        end
        if (count > 5) then begin
            float_msg(self_obj, message_str(2320, 160), 2);
            set_local_var(5, 2);
        end
    end
end

procedure critter_p_proc
begin
    if (local_var(5) == 2) then begin
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
end

procedure pickup_p_proc
begin
    attack_complex(source_obj, 0, 1, 0, 0, 30000, 0, 0);
    set_map_var(11, 1);
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(4, global_var(4) + 1);
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
            set_global_var(3, 1);
            set_global_var(2, 0);
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
            set_global_var(2, 1);
            set_global_var(3, 0);
        end
        set_global_var(0, global_var(0) + 5);
        debug_msg("Player gains " + 5 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        tmp_gen_rep := global_var(0);
        if (has_trait(0, dude_obj, 95)) then begin
            tmp_gen_rep := global_var(0) * 2;
        end
        if (tmp_gen_rep >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (tmp_gen_rep >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (tmp_gen_rep >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (tmp_gen_rep >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure damage_p_proc
begin
    attack_complex(source_obj, 0, 1, 0, 0, 30000, 0, 0);
    set_map_var(11, 1);
end

procedure map_enter_p_proc
begin
    variable LVar0 := 0;
    Only_Once := 0;
    LVar0 := create_object_sid(394, 0, 0, -1);
    add_obj_to_inven(self_obj, LVar0);
    wield_obj_critter(self_obj, LVar0);
    LVar0 := create_object_sid(305, 0, 0, -1);
    add_obj_to_inven(self_obj, LVar0);
    critter_add_trait(self_obj, 1, 6, 190);
    critter_add_trait(self_obj, 1, 5, 134);
    add_timer_event(self_obj, 10, 1);
    anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
    return 0;
    LVar0 := 0;
end

procedure description_p_proc
begin
end

procedure look_at_p_proc
begin
end

procedure Node001
begin
    gsay_reply(2320, 100);
    giq_option(4, 2320, 101, Node003, 51);
    giq_option(4, 2320, 102, Node002, 50);
    giq_option(-3, 2320, 201, Node003, 50);
    set_local_var(7, 1);
end

procedure Node002
begin
    gsay_reply(2320, 105);
    giq_option(4, 2320, 106, Node004, 50);
    giq_option(4, 2320, 107, Node003, 51);
    if (has_skill(dude_obj, 14) > 85) then begin
        giq_option(4, 2320, 114, Node008, 50);
    end
end

procedure Node003
begin
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        gsay_reply(2320, 103);
    end
    else begin
        gsay_reply(2320, 120);
    end
    giq_option(4, 2320, 104, Node998, 51);
    giq_option(-3, 2320, 202, Node998, 51);
end

procedure Node004
begin
    gsay_reply(2320, 108);
    giq_option(4, 2320, 109, Node003, 51);
    giq_option(4, 2320, 110, Node005, 50);
    if (party_member_obj(16777323) != 0) then begin
        giq_option(4, 2320, 200, Node005, 50);
    end
end

procedure Node005
begin
    variable LVar0 := 0;
    LVar0 := do_check(dude_obj, 6, 0);
    if (is_success(LVar0)) then begin
        call Node006();
    end
    else begin
        call Node007();
    end
    return 0;
    LVar0 := 0;
end

procedure Node006
begin
    gsay_reply(2320, 111);
    giq_option(4, 2320, 125, Node006a, 50);
    giq_option(4, 2320, 126, Node006a, 50);
    giq_option(4, 2320, 127, Node006a, 50);
end

procedure Node006a
begin
    set_global_var(758, 1);
end

procedure Node007
begin
    gsay_reply(2320, 112 + (get_critter_stat(dude_obj, 34) == 1));
    giq_option(4, 2320, 128, Node998, 51);
    giq_option(4, 2320, 129, Node998, 51);
    giq_option(4, 2320, 130, Node998, 51);
end

procedure Node008
begin
    gsay_reply(2320, 115);
    giq_option(4, 2320, 116, Node006, 50);
end

procedure Node998
begin
    set_local_var(5, 2);
    set_map_var(11, 1);
end

procedure Node999
begin
    debug_msg("LVAR_Herebefore == " + local_var(4));
    if (local_var(4) == 0) then begin
        set_local_var(4, 1);
    end
end

