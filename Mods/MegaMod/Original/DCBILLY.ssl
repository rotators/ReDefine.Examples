variable caught_thief;
variable the_follow_obj;
variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure push_p_proc;
procedure timed_event_p_proc;
procedure Node000;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node998;
procedure Node996;
procedure Node995;
procedure Node994;
procedure Node993;
procedure Node992;

variable sex_money;
variable sex_partner;

import variable frankie_obj;

procedure Node999;
procedure Node;


procedure start
begin
end

procedure critter_p_proc
begin
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(0) bwand 2) != 0) then begin
            if (critter_is_fleeing(self_obj)) then begin
                if (anim_busy(self_obj) == 0) then begin
                    if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                        if (anim_busy(self_obj) == 0) then begin
                            global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                                debug_msg("flee loop: rot == " + global_temp);
                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                global_temp := (global_temp + 1) % 6;
                            end
                        end
                    end
                end
            end
            else begin
                attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
            end
        end
        else begin
            if (local_var(3) > 0) then begin
                set_local_var(0, local_var(0) bwor 1024);
                call Node014();
            end
        end
    end
    else begin
        if (local_var(3) > 0) then begin
            set_local_var(0, local_var(0) bwand (-1 - 1024));
        end
        else begin
            if (((game_time_hour >= 800) or (game_time_hour <= 300)) == 0) then begin
                if (tile_num(self_obj) != 15136) then begin
                    if ((tile_num(self_obj) != 15136) and (15136 != 0)) then begin
                        if ((dest_tile == 15136) and (step_tile < 0)) then begin
                            step_tile := step_tile + 1;
                            debug_msg("step_tile: " + step_tile);
                        end
                        else begin
                            if (anim_busy(self_obj) == 0) then begin
                                dest_tile := 15136;
                                step_tile := 15136;
                                animate_move_obj_to_tile(self_obj, step_tile, 0);
                                while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), 15136) >= tile_distance(step_tile, 15136))) do begin
                                    debug_msg("rot: " + rotation_to_tile(step_tile, tile_num(self_obj)));
                                    step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), 1 % tile_distance(step_tile, tile_num(self_obj)));
                                    debug_msg("step_var: " + step_tile);
                                    animate_move_obj_to_tile(self_obj, step_tile, 0);
                                end
                                if (anim_busy(self_obj) == 0) then begin
                                    if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
                                        if (anim_busy(self_obj) == 0) then begin
                                            global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                            global_temp := (global_temp + 1) % 6;
                                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                debug_msg("flee loop: rot == " + global_temp);
                                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                global_temp := (global_temp + 1) % 6;
                                            end
                                        end
                                    end
                                    else begin
                                        step_tile := -10;
                                    end
                                end
                            end
                            else begin
                                if (tile_distance(tile_num(self_obj), 15136) < tile_distance(dest_tile, 15136)) then begin
                                    reg_anim_func(2, self_obj);
                                end
                            end
                        end
                    end
                end
                else begin
                    if (has_trait(1, self_obj, 666)) then begin
                        if (has_trait(1, self_obj, 666) == 1) then begin
                            set_obj_visibility(self_obj, 1);
                        end
                    end
                end
            end
            else begin
                if (tile_num(self_obj) != local_var(2)) then begin
                    if (has_trait(1, self_obj, 666) == 0) then begin
                        if (has_trait(1, self_obj, 666) == 0) then begin
                            set_obj_visibility(self_obj, 0);
                        end
                    end
                    else begin
                        if ((tile_num(self_obj) != local_var(2)) and (local_var(2) != 0)) then begin
                            if ((dest_tile == local_var(2)) and (step_tile < 0)) then begin
                                step_tile := step_tile + 1;
                                debug_msg("step_tile: " + step_tile);
                            end
                            else begin
                                if (anim_busy(self_obj) == 0) then begin
                                    dest_tile := local_var(2);
                                    step_tile := local_var(2);
                                    animate_move_obj_to_tile(self_obj, step_tile, 0);
                                    while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), local_var(2)) >= tile_distance(step_tile, local_var(2)))) do begin
                                        debug_msg("rot: " + rotation_to_tile(step_tile, tile_num(self_obj)));
                                        step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), 1 % tile_distance(step_tile, tile_num(self_obj)));
                                        debug_msg("step_var: " + step_tile);
                                        animate_move_obj_to_tile(self_obj, step_tile, 0);
                                    end
                                    if (anim_busy(self_obj) == 0) then begin
                                        if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
                                            if (anim_busy(self_obj) == 0) then begin
                                                global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                global_temp := (global_temp + 1) % 6;
                                                while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                    debug_msg("flee loop: rot == " + global_temp);
                                                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                    global_temp := (global_temp + 1) % 6;
                                                end
                                            end
                                        end
                                        else begin
                                            step_tile := -10;
                                        end
                                    end
                                end
                                else begin
                                    if (tile_distance(tile_num(self_obj), local_var(2)) < tile_distance(dest_tile, local_var(2))) then begin
                                        reg_anim_func(2, self_obj);
                                    end
                                end
                            end
                        end
                    end
                end
                else begin
                    if ((local_var(0) bwand 512) != 0) then begin
                        if (frankie_obj == 0) then begin
                            set_local_var(0, local_var(0) bwand (-1 - 512));
                        end
                        else begin
                            if (obj_can_see_obj(frankie_obj, self_obj)) then begin
                                set_local_var(0, local_var(0) bwand (-1 - 512));
                                if (combat_is_initialized == 0) then begin
                                    float_msg(frankie_obj, message_str(53, random(400, 404)), 8);
                                end
                            end
                        end
                    end
                    else begin
                        if (has_trait(1, self_obj, 10) != local_var(4)) then begin
                            anim(self_obj, 1000, local_var(4));
                        end
                    end
                end
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        call Node998();
    end
end

procedure talk_p_proc
begin
    script_overrides;
    if (local_var(3) > 0) then begin
        call Node013();
    end
    else begin
        if (((game_time_hour >= 800) or (game_time_hour <= 300)) == 0) then begin
            call Node016();
        end
        else begin
            if (tile_in_tile_rect(14315, 14305, 16315, 16305, tile_num(self_obj)) == 0) then begin
                call Node015();
            end
            else begin
                sex_partner := dude_obj;
                if ((local_var(1) != 0) and (game_time >= local_var(1))) then begin
                    set_local_var(1, 0);
                    set_local_var(0, local_var(0) bwor 2048);
                end
                if (local_var(1) != 0) then begin
                    if (in_dialog == 0) then begin
                        in_dialog := 1;
                        start_gdialog(53, self_obj, 4, -1, -1);
                        gsay_start;
                        call Node005();
                        gsay_end;
                        end_dialogue;
                        in_dialog := 0;
                    end
                    else begin
                        call Node005();
                    end
                end
                else begin
                    if (in_dialog == 0) then begin
                        in_dialog := 1;
                        start_gdialog(53, self_obj, 4, -1, -1);
                        gsay_start;
                        call Node000();
                        gsay_end;
                        end_dialogue;
                        in_dialog := 0;
                    end
                    else begin
                        call Node000();
                    end
                end
                set_local_var(0, local_var(0) bwor 1);
            end
        end
    end
end

procedure destroy_p_proc
begin
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(53, 100));
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(53, 150 + ((local_var(0) bwand 1) != 0)));
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        call Node998();
        set_local_var(3, 0);
    end
end

procedure map_enter_p_proc
begin
    if (metarule(22, 0) == 0) then begin
        if (metarule(14, 0)) then begin
            set_local_var(2, tile_num(self_obj));
        end
        if ((global_var(445) bwand 2) != 0) then begin
            debug_msg("KILLING BILLY, SINCE FRANKIE'S DEAD");
            destroy_object(self_obj);
        end
        critter_add_trait(self_obj, 1, 6, 16);
        critter_add_trait(self_obj, 1, 5, 14);
        set_local_var(3, 0);
        set_local_var(0, local_var(0) bwand (-1 - 1024));
        set_local_var(0, local_var(0) bwand (-1 - 512));
    end
end

procedure push_p_proc
begin
    if (local_var(3) > 0) then begin
        script_overrides;
        call Node013();
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 0) then begin
        if (combat_is_initialized == 0) then begin
            float_msg(self_obj, message_str(53, random(410, 414)), 8);
        end
    end
    else begin
        if (fixed_param == 4) then begin
            set_local_var(0, local_var(0) bwor 512);
            if (combat_is_initialized == 0) then begin
                if (sex_partner == dude_obj) then begin
                    if (((((get_critter_stat(dude_obj, 3) * 50) + (get_critter_stat(dude_obj, 2) * 25) + (get_critter_stat(dude_obj, 5) * 13) + (get_critter_stat(dude_obj, 0) * 12)) / 100) + (has_trait(0, dude_obj, 94) * 2) + has_trait(2, dude_obj, 13) + (((global_var(194) >= 100) or (global_var(232) > 0)) * 2 * (dude_obj == dude_obj))) >= 9) then begin
                        call Node010();
                        set_local_var(0, local_var(0) bwand (-1 - 4096));
                    end
                    else begin
                        if (((((get_critter_stat(dude_obj, 3) * 50) + (get_critter_stat(dude_obj, 2) * 25) + (get_critter_stat(dude_obj, 5) * 13) + (get_critter_stat(dude_obj, 0) * 12)) / 100) + (has_trait(0, dude_obj, 94) * 2) + has_trait(2, dude_obj, 13) + (((global_var(194) >= 100) or (global_var(232) > 0)) * 2 * (dude_obj == dude_obj))) >= 5) then begin
                            call Node011();
                            set_local_var(0, local_var(0) bwand (-1 - 4096));
                        end
                        else begin
                            set_local_var(0, local_var(0) bwor 4096);
                            call Node012();
                            set_local_var(3, random(3, 10));
                            metarule3(100, self_obj, 10, 0);
                            add_timer_event(self_obj, game_ticks(random(5, 15)), 10);
                            set_local_var(0, local_var(0) bwor 1024);
                        end
                    end
                end
                else begin
                    if (sex_partner != 0) then begin
                        float_msg(sex_partner, message_str(53, 500), 8);
                        call Node011();
                    end
                end
            end
        end
        else begin
            if (fixed_param == 10) then begin
                set_local_var(3, local_var(3) - 1);
                if (local_var(3) > 0) then begin
                    call Node013();
                    metarule3(100, self_obj, 10, 0);
                    add_timer_event(self_obj, game_ticks(random(5, 15)), 10);
                end
            end
        end
    end
end

procedure Node000
begin
    call Node994();
end

procedure Node001
begin
    gsay_reply(53, 153);
    giq_option(4, 53, 154, Node004, 50);
    giq_option(4, 53, 155, Node002, 50);
    giq_option(4, 53, 156, Node002, 50);
    giq_option(-3, 53, 157, Node002, 50);
end

procedure Node002
begin
    sex_partner := party_member_obj(16777380);
    sex_money := 0;
    gsay_reply(53, 158);
    giq_option(4, 53, 159, Node993, 50);
    giq_option(4, 53, 160, Node996, 50);
    if ((local_var(0) bwand 2048) != 0) then begin
        giq_option(4, 53, 161, Node995, 50);
    end
    giq_option(4, 53, 162, Node004, 50);
    giq_option(-3, 53, 163, Node993, 50);
    giq_option(-3, 53, 164, Node004, 50);
end

procedure Node003
begin
    gsay_reply(53, 202);
    giq_option(4, 53, 166, Node004, 50);
    giq_option(4, 53, 167, Node999, 50);
    giq_option(-3, 53, 168, Node999, 50);
end

procedure Node004
begin
    gsay_reply(53, 169);
    giq_option(1, 53, 170, Node999, 50);
end

procedure Node005
begin
    gsay_reply(53, 171);
    giq_option(4, 53, 172, Node999, 50);
    giq_option(-3, 53, 173, Node999, 50);
end

procedure Node006
begin
    sex_partner := dude_obj;
    if ((local_var(0) bwand 4096) != 0) then begin
        gsay_reply(53, 530);
        set_local_var(0, local_var(0) bwand (-1 - 4096));
    end
    else begin
        gsay_reply(53, 174);
    end
    giq_option(4, 53, 175, Node004, 50);
    giq_option(4, 53, 176, Node995, 50);
    giq_option(4, 53, 177, Node996, 50);
    giq_option(-3, 53, 178, Node999, 50);
end

procedure Node007
begin
    gsay_reply(53, 179);
    giq_option(4, 53, 180, Node996, 50);
    giq_option(4, 53, 181, Node004, 50);
    giq_option(4, 53, 182, Node999, 50);
end

procedure Node008
begin
    if ((local_var(0) bwand 4096) != 0) then begin
        gsay_reply(53, 530);
    end
    else begin
        gsay_reply(53, 183);
    end
    giq_option(4, 53, 184, Node004, 50);
    if (get_critter_stat(dude_obj, 34) == 1) then begin
        giq_option(4, 53, 185, Node009, 50);
    end
    giq_option(4, 53, 186, Node999, 50);
    giq_option(-3, 53, 187, Node999, 50);
end

procedure Node009
begin
    gsay_reply(53, 188);
    giq_option(4, 53, 189, Node999, 50);
    giq_option(4, 53, 190, Node999, 50);
    giq_option(4, 53, 191, Node004, 50);
end

procedure Node010
begin
    float_msg(self_obj, message_str(53, random(300, 305)), 8);
end

procedure Node011
begin
    float_msg(self_obj, message_str(53, random(320, 324)), 8);
end

procedure Node012
begin
    float_msg(self_obj, message_str(53, random(350, 352)), 8);
end

procedure Node013
begin
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        call Node014();
    end
    else begin
        float_msg(self_obj, message_str(53, random(370, 377)), 8);
    end
end

procedure Node014
begin
    float_msg(self_obj, message_str(53, random(390, 393)), 8);
end

procedure Node015
begin
    variable LVar0 := 0;
    if (party_member_obj(16777380) != 0) then begin
        if (obj_can_see_obj(self_obj, party_member_obj(16777380))) then begin
            LVar0 := 1;
        end
    end
    float_msg(self_obj, message_str(53, random(511 - ((get_critter_stat(dude_obj, 34) == 0) and LVar0), 512 + ((get_critter_stat(dude_obj, 34) == 1) and (get_critter_stat(dude_obj, 3) > 5)))), 8);
    return 0;
    LVar0 := 0;
end

procedure Node016
begin
    float_msg(self_obj, message_str(53, random(520, 522)), 8);
end

procedure Node998
begin
    set_local_var(0, local_var(0) bwor 2);
end

procedure Node996
begin
    sex_money := 50;
    call Node993();
end

procedure Node995
begin
    sex_money := 200;
    if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
        call Node993();
    end
    else begin
        call Node007();
    end
end

procedure Node994
begin
    variable LVar0 := 0;
    if (party_member_obj(16777380) != 0) then begin
        if (obj_can_see_obj(self_obj, party_member_obj(16777380))) then begin
            LVar0 := 1;
        end
    end
    if ((get_critter_stat(dude_obj, 34) == 0) and LVar0) then begin
        call Node001();
    end
    else begin
        if (((local_var(0) bwand 4096) != 0) and (((((get_critter_stat(dude_obj, 3) * 50) + (get_critter_stat(dude_obj, 2) * 25) + (get_critter_stat(dude_obj, 5) * 13) + (get_critter_stat(dude_obj, 0) * 12)) / 100) + (has_trait(0, dude_obj, 94) * 2) + has_trait(2, dude_obj, 13) + (((global_var(194) >= 100) or (global_var(232) > 0)) * 2 * (dude_obj == dude_obj))) < 5) or (get_critter_stat(dude_obj, 34) == 0) or (get_critter_stat(dude_obj, 3) <= 5)) then begin
            call Node008();
        end
        else begin
            call Node006();
        end
    end
    return 0;
    LVar0 := 0;
end

procedure Node993
begin
    gfade_out(10);
    item_caps_adjust(dude_obj, sex_money);
    set_local_var(1, game_time + (24 * (60 * (60 * 10))));
    critter_attempt_placement(self_obj, 15699, elevation(self_obj));
    critter_attempt_placement(sex_partner, 15900, elevation(self_obj));
    anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(sex_partner)));
    anim(sex_partner, 1000, rotation_to_tile(tile_num(sex_partner), tile_num(self_obj)));
    metarule3(100, self_obj, 4, 0);
    add_timer_event(self_obj, 0, 4);
    if (sex_partner == dude_obj) then begin
        game_time_advance(get_critter_stat(dude_obj, 2) * random(4, 8) * (60 * 10));
        set_global_var(194, global_var(194) + (((((get_critter_stat(dude_obj, 3) * 50) + (get_critter_stat(dude_obj, 2) * 25) + (get_critter_stat(dude_obj, 5) * 13) + (get_critter_stat(dude_obj, 0) * 12)) / 100) + (has_trait(0, dude_obj, 94) * 2) + has_trait(2, dude_obj, 13) + (((global_var(194) >= 100) or (global_var(232) > 0)) * 2 * (dude_obj == dude_obj))) * 1));
        if (global_var(358) >= 9) then begin
            set_global_var(589, 1);
        end
        if (((((get_critter_stat(dude_obj, 3) * 50) + (get_critter_stat(dude_obj, 2) * 25) + (get_critter_stat(dude_obj, 5) * 13) + (get_critter_stat(dude_obj, 0) * 12)) / 100) + (has_trait(0, dude_obj, 94) * 2) + has_trait(2, dude_obj, 13) + (((global_var(194) >= 100) or (global_var(232) > 0)) * 2 * (dude_obj == dude_obj))) >= 9) then begin
            set_global_var(588, 1);
        end
        if (global_var(590) == 1) then begin
            set_global_var(590, 0);
        end
        set_global_var(358, global_var(358) + 1);
        reg_anim_func(2, self_obj);
        reg_anim_func(1, 1);
        reg_anim_animate(self_obj, 48, -1);
        reg_anim_func(3, 0);
    end
    else begin
        game_time_advance(get_critter_stat(self_obj, 2) * random(4, 8) * (60 * 10));
    end
    gfade_in(10);
end

procedure Node992
begin
end

procedure Node999
begin
end

procedure Node
begin
end

