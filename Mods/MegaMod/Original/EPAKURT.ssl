variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure timed_event_p_proc;
procedure pickup_p_proc;
procedure critter_p_proc;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node998;
procedure Node999;


procedure start
begin
end

procedure timed_event_p_proc
begin
    if (fixed_param == 9) then begin
        set_map_var(2, 1);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure critter_p_proc
begin
    if ((map_var(2) == 1) and (elevation(dude_obj) == 1)) then begin
        float_msg(self_obj, message_str(1701, 600), 2);
        set_local_var(5, 2);
    end
    if ((local_var(5) == 2) or (global_var(1098) == 1) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
    if ((tile_num(dude_obj) == 17315) or (tile_num(dude_obj) == 17515) or (tile_num(dude_obj) == 17715) and (elevation(dude_obj) == 1)) then begin
        if (map_var(17) == 2) then begin
            float_msg(self_obj, 600, 2);
            call Node998();
        end
        else begin
            if ((map_var(15) == 0) and (global_var(1081) < 5)) then begin
                move_to(dude_obj, 17525, elevation(self_obj));
                start_gdialog(1701, self_obj, -1, -1, -1);
                gsay_start;
                call Node001();
                gsay_end;
                end_dialogue;
            end
            else begin
                if ((map_var(15) == 1) and ((game_time - map_var(16)) > (12 * (60 * (60 * 10))))) then begin
                    add_timer_event(self_obj, 30 * 10, 9);
                    float_msg(self_obj, message_str(1701, 500), 8);
                end
            end
        end
    end
end

procedure use_p_proc
begin
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 0) then begin
        display_msg(message_str(1701, 100));
    end
    else begin
        display_msg(message_str(1701, 101));
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(1701, 102));
end

procedure use_skill_on_p_proc
begin
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    set_global_var(1098, 1);
end

procedure map_enter_p_proc
begin
    set_local_var(0, tile_num(self_obj));
    set_local_var(1, has_trait(1, self_obj, 10));
end

procedure map_update_p_proc
begin
end

procedure talk_p_proc
begin
    if ((map_var(15) == 0) and (global_var(1081) < 5)) then begin
        start_gdialog(1701, self_obj, -1, -1, -1);
        gsay_start;
        call Node001();
        gsay_end;
        end_dialogue;
    end
    else begin
        float_msg(self_obj, message_str(1701, 400), 8);
    end
end

procedure Node001
begin
    gsay_reply(1701, 200);
    gsay_option(1701, 210, Node002, -1);
    if (has_skill(dude_obj, 14) > 120) then begin
        gsay_option(1701, 211, Node003, -1);
    end
end

procedure Node002
begin
    set_map_var(15, 1);
    set_map_var(16, game_time);
    gsay_message(1701, 400, 49);
end

procedure Node003
begin
    set_map_var(15, 5);
    gsay_message(1701, 300, 49);
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
end

