variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;
variable caught_thief;
variable the_follow_obj;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure map_exit_p_proc;
procedure timed_event_p_proc;
procedure Node998;
procedure Node999;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node007b;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure Node035;
procedure Node036;
procedure Node037;
procedure Node990;
procedure Node989;
procedure Node988;
procedure Node987;
procedure Node986;
procedure Node985;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(4) bwand 2) != 0) then begin
            if (critter_is_fleeing(self_obj)) then begin
                if (anim_busy(self_obj) == 0) then begin
                    if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                        if (anim_busy(self_obj) == 0) then begin
                            global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                                debug_msg("flee loop: rot == " + global_temp);
                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                global_temp := (global_temp + 1) % 6;
                            end
                        end
                    end
                end
            end
            else begin
                attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
            end
        end
        else begin
            if (obj_pid(self_obj) == 16777310) then begin
                if (((local_var(4) bwand 1024) != 0) == 0) then begin
                    dialogue_system_enter;
                end
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        call Node998();
    end
end

procedure talk_p_proc
begin
    if (obj_pid(self_obj) == 16777310) then begin
        if ((local_var(4) bwand 1024) != 0) then begin
            call Node007b();
        end
        else begin
            if (in_dialog == 0) then begin
                in_dialog := 1;
                start_gdialog(916, self_obj, 4, -1, -1);
                gsay_start;
                call Node007();
                gsay_end;
                end_dialogue;
                in_dialog := 0;
            end
            else begin
                call Node007();
            end
        end
    end
    else begin
        if ((game_time_hour <= 800) and tile_in_tile_rect(16513, 16302, 19513, 19502, tile_num(self_obj))) then begin
            call Node002();
        end
        else begin
            if (global_var(719) == 1) then begin
                call Node003();
            end
            else begin
                if (global_var(720) == 1) then begin
                    call Node004();
                end
                else begin
                    if (global_var(721) == 1) then begin
                        call Node005();
                    end
                    else begin
                        if ((global_var(371) == 1) and ((global_var(446) bwand 256) != 0)) then begin
                            if ((global_var(446) bwand 16384) != 0) then begin
                                if (in_dialog == 0) then begin
                                    in_dialog := 1;
                                    start_gdialog(916, self_obj, 4, -1, -1);
                                    gsay_start;
                                    call Node037();
                                    gsay_end;
                                    end_dialogue;
                                    in_dialog := 0;
                                end
                                else begin
                                    call Node037();
                                end
                            end
                            else begin
                                if (in_dialog == 0) then begin
                                    in_dialog := 1;
                                    start_gdialog(916, self_obj, 4, -1, -1);
                                    gsay_start;
                                    call Node006();
                                    gsay_end;
                                    end_dialogue;
                                    in_dialog := 0;
                                end
                                else begin
                                    call Node006();
                                end
                            end
                        end
                        else begin
                            call Node001();
                        end
                    end
                end
            end
        end
    end
    set_local_var(4, local_var(4) bwor 1);
end

procedure destroy_p_proc
begin
    set_global_var(445, global_var(445) bwor 1024);
    item_caps_adjust(self_obj, global_var(464));
    if (source_obj == dude_obj) then begin
        set_global_var(5, global_var(5) + 1);
        if (metarule(51, self_obj) == 2) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(2, 0);
                set_global_var(1, global_var(1) + 1);
                set_global_var(0, global_var(0) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(37, 0);
                set_global_var(38, 0);
                set_global_var(39, 0);
                set_global_var(40, 0);
                set_global_var(41, 0);
                set_global_var(42, 0);
                set_global_var(43, 0);
                set_global_var(44, 0);
                set_global_var(45, 0);
                if (global_var(0) >= 1000) then begin
                    set_global_var(37, 1);
                end
                else begin
                    if (global_var(0) >= 750) then begin
                        set_global_var(38, 1);
                    end
                    else begin
                        if (global_var(0) >= 500) then begin
                            set_global_var(39, 1);
                        end
                        else begin
                            if (global_var(0) >= 250) then begin
                                set_global_var(40, 1);
                            end
                            else begin
                                if (global_var(0) > -250) then begin
                                    set_global_var(41, 1);
                                end
                                else begin
                                    if (global_var(0) > -500) then begin
                                        set_global_var(42, 1);
                                    end
                                    else begin
                                        if (global_var(0) > -750) then begin
                                            set_global_var(43, 1);
                                        end
                                        else begin
                                            if (global_var(0) > -1000) then begin
                                                set_global_var(44, 1);
                                            end
                                            else begin
                                                set_global_var(45, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
            set_global_var(2, 1);
            set_global_var(3, 0);
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
            set_global_var(3, 1);
            set_global_var(2, 0);
        end
        set_global_var(0, global_var(0) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(916, 100 + ((local_var(4) bwand 1) != 0) + (obj_pid(self_obj) == 16777310)));
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(916, 150 + (obj_pid(self_obj) == 16777310)));
    set_local_var(4, local_var(4) bwor 4);
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(4, local_var(4) bwor 8);
        set_local_var(4, local_var(4) bwor 2);
    end
end

procedure map_enter_p_proc
begin
    variable LVar0 := 0;
    if (local_var(5) == 0) then begin
        set_local_var(5, tile_num(self_obj));
    end
    if (metarule(22, 0) == 0) then begin
        if (obj_pid(self_obj) != 16777310) then begin
            if ((game_time >= local_var(6)) and (local_var(6) != 0)) then begin
                if ((global_var(447) bwand 8) != 0) then begin
                    set_global_var(464, 2000);
                end
                set_global_var(447, global_var(447) bwor 8);
                if (has_trait(1, self_obj, 666) == 1) then begin
                    set_obj_visibility(self_obj, 1);
                end
                critter_attempt_placement(self_obj, global_var(46), elevation(self_obj));
                LVar0 := create_object_sid(16777310, 0, 0, 916);
                critter_attempt_placement(LVar0, local_var(5), elevation(self_obj));
                destroy_object(self_obj);
            end
        end
        metarule3(100, self_obj, 1, 0);
        add_timer_event(self_obj, game_ticks(random(15, 90)), 1);
        anim(self_obj, 1000, 3);
    end
    critter_add_trait(self_obj, 1, 6, 9);
    critter_add_trait(self_obj, 1, 5, 33);
end

procedure map_update_p_proc
begin
    if (local_var(5) == 0) then begin
        set_local_var(5, tile_num(self_obj));
    end
end

procedure map_exit_p_proc
begin
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if (combat_is_initialized == 0) then begin
            if (game_time_hour <= 800) then begin
                if ((tile_num(self_obj) != local_var(5)) and (local_var(5) != 0)) then begin
                    if ((dest_tile == local_var(5)) and (step_tile < 0)) then begin
                        step_tile := step_tile + 1;
                        debug_msg("step_tile: " + step_tile);
                    end
                    else begin
                        if (anim_busy(self_obj) == 0) then begin
                            dest_tile := local_var(5);
                            step_tile := local_var(5);
                            animate_move_obj_to_tile(self_obj, step_tile, 0);
                            while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), local_var(5)) >= tile_distance(step_tile, local_var(5)))) do begin
                                debug_msg("rot: " + rotation_to_tile(step_tile, tile_num(self_obj)));
                                step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), 8 % tile_distance(step_tile, tile_num(self_obj)));
                                debug_msg("step_var: " + step_tile);
                                animate_move_obj_to_tile(self_obj, step_tile, 0);
                            end
                            if (anim_busy(self_obj) == 0) then begin
                                if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
                                    if (anim_busy(self_obj) == 0) then begin
                                        global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                        global_temp := (global_temp + 1) % 6;
                                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                            debug_msg("flee loop: rot == " + global_temp);
                                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                            global_temp := (global_temp + 1) % 6;
                                        end
                                    end
                                end
                                else begin
                                    step_tile := -10;
                                end
                            end
                        end
                        else begin
                            if (tile_distance(tile_num(self_obj), local_var(5)) < tile_distance(dest_tile, local_var(5))) then begin
                                reg_anim_func(2, self_obj);
                            end
                        end
                    end
                end
            end
            else begin
                if (anim_busy(self_obj) == 0) then begin
                    global_temp := 16679;
                    while (tile_distance(global_temp, 19467) > (tile_distance(16679, 19467) / 2)) do begin
                        global_temp := tile_num_in_direction(global_temp, rotation_to_tile(global_temp, 19467), 1);
                    end
                    global_temp := tile_num_in_direction(global_temp, random(0, 5), random(0, tile_distance(16679, 19467) / 2));
                    if (tile_in_tile_rect(16679, 16667, 19479, 19467, global_temp) == 0) then begin
                        global_temp := 0;
                    end
                    if (global_temp != 0) then begin
                        if ((tile_num(self_obj) != global_temp) and (global_temp != 0)) then begin
                            if ((dest_tile == global_temp) and (step_tile < 0)) then begin
                                step_tile := step_tile + 1;
                                debug_msg("step_tile: " + step_tile);
                            end
                            else begin
                                if (anim_busy(self_obj) == 0) then begin
                                    dest_tile := global_temp;
                                    step_tile := global_temp;
                                    animate_move_obj_to_tile(self_obj, step_tile, 0);
                                    while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), global_temp) >= tile_distance(step_tile, global_temp))) do begin
                                        debug_msg("rot: " + rotation_to_tile(step_tile, tile_num(self_obj)));
                                        step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), 8 % tile_distance(step_tile, tile_num(self_obj)));
                                        debug_msg("step_var: " + step_tile);
                                        animate_move_obj_to_tile(self_obj, step_tile, 0);
                                    end
                                    if (anim_busy(self_obj) == 0) then begin
                                        if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
                                            if (anim_busy(self_obj) == 0) then begin
                                                global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                global_temp := (global_temp + 1) % 6;
                                                while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                    debug_msg("flee loop: rot == " + global_temp);
                                                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                    global_temp := (global_temp + 1) % 6;
                                                end
                                            end
                                        end
                                        else begin
                                            step_tile := -10;
                                        end
                                    end
                                end
                                else begin
                                    if (tile_distance(tile_num(self_obj), global_temp) < tile_distance(dest_tile, global_temp)) then begin
                                        reg_anim_func(2, self_obj);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        metarule3(100, self_obj, 1, 0);
        add_timer_event(self_obj, game_ticks(random(15, 90)), 1);
    end
end

procedure Node998
begin
    set_local_var(4, local_var(4) bwor 2);
end

procedure Node999
begin
end

procedure Node001
begin
    float_msg(self_obj, message_str(916, random(200, 207)), 8);
end

procedure Node002
begin
    float_msg(self_obj, message_str(916, random(221 - (get_critter_stat(dude_obj, 34) == 0), 227 + (get_critter_stat(dude_obj, 34) == 1))), 8);
end

procedure Node003
begin
    float_msg(self_obj, message_str(916, random(240, 247)), 8);
end

procedure Node004
begin
    float_msg(self_obj, message_str(916, random(260, 264)), 8);
end

procedure Node005
begin
    float_msg(self_obj, message_str(916, random(275, 281)), 8);
end

procedure Node006
begin
    set_global_var(446, global_var(446) bwor 32768);
    gsay_reply(916, 295 + ((local_var(4) bwand 512) != 0));
    set_local_var(4, local_var(4) bwor 512);
    giq_option(4, 916, 297, Node018, 50);
    giq_option(4, 916, 298, Node999, 50);
    giq_option(-3, 916, 299, Node017, 50);
    giq_option(-3, 916, 300, Node999, 50);
end

procedure Node007
begin
    gsay_reply(916, 310);
    set_local_var(4, local_var(4) bwor 1024);
    giq_option(4, 916, 312, Node008, 49);
    giq_option(4, 916, 313, Node009, 50);
    giq_option(-3, 916, 314, Node009, 50);
    giq_option(-3, 916, 315, Node009, 50);
end

procedure Node007b
begin
    float_msg(self_obj, message_str(916, 311), 8);
end

procedure Node008
begin
    gsay_reply(916, 320);
    giq_option(4, 916, 321, Node990, 50);
    giq_option(4, 916, 322, Node010, 50);
end

procedure Node009
begin
    gsay_reply(916, 330);
    giq_option(4, 916, 331, Node990, 50);
    giq_option(4, 916, 332, Node010, 51);
    giq_option(-3, 916, 333, Node990, 50);
end

procedure Node010
begin
    gsay_reply(916, 340);
    giq_option(4, 916, 341, Node990, 49);
    if (global_var(720) == 1) then begin
        giq_option(4, 916, 342, Node011, 51);
    end
    else begin
        if (global_var(721) == 1) then begin
            giq_option(4, 916, 343, Node011, 51);
        end
    end
end

procedure Node011
begin
    item_caps_adjust(dude_obj, 500);
    gsay_reply(916, 350);
    giq_option(4, 916, 351, Node990, 49);
    giq_option(4, 916, 352, Node990, 51);
end

procedure Node012
begin
    gsay_reply(916, 360);
    giq_option(4, 916, 361, Node014, 50);
    giq_option(4, 916, 362, Node014, 50);
    giq_option(-3, 916, 363, Node014, 50);
end

procedure Node013
begin
    gsay_reply(916, 370);
    giq_option(4, 916, 371, Node015, 50);
    giq_option(4, 916, 372, Node015, 50);
    giq_option(-3, 916, 373, Node015, 50);
end

procedure Node014
begin
    gsay_reply(916, 380);
    giq_option(4, 916, 381, Node016, 49);
    giq_option(4, 916, 382, Node989, 50);
    giq_option(4, 916, 383, Node989, 50);
    giq_option(-3, 916, 384, Node989, 50);
end

procedure Node015
begin
    gsay_reply(916, 390);
    giq_option(4, 916, 391, Node016, 49);
    giq_option(4, 916, 392, Node988, 50);
    giq_option(4, 916, 393, Node988, 50);
    giq_option(-3, 916, 394, Node988, 50);
end

procedure Node016
begin
    set_global_var(0, global_var(0) + 3);
    debug_msg("Player gains " + 3 + " Karma Points.");
    set_global_var(37, 0);
    set_global_var(38, 0);
    set_global_var(39, 0);
    set_global_var(40, 0);
    set_global_var(41, 0);
    set_global_var(42, 0);
    set_global_var(43, 0);
    set_global_var(44, 0);
    set_global_var(45, 0);
    if (global_var(0) >= 1000) then begin
        set_global_var(37, 1);
    end
    else begin
        if (global_var(0) >= 750) then begin
            set_global_var(38, 1);
        end
        else begin
            if (global_var(0) >= 500) then begin
                set_global_var(39, 1);
            end
            else begin
                if (global_var(0) >= 250) then begin
                    set_global_var(40, 1);
                end
                else begin
                    if (global_var(0) > -250) then begin
                        set_global_var(41, 1);
                    end
                    else begin
                        if (global_var(0) > -500) then begin
                            set_global_var(42, 1);
                        end
                        else begin
                            if (global_var(0) > -750) then begin
                                set_global_var(43, 1);
                            end
                            else begin
                                if (global_var(0) > -1000) then begin
                                    set_global_var(44, 1);
                                end
                                else begin
                                    set_global_var(45, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    gsay_reply(916, 400);
    giq_option(4, 916, 401, Node999, 50);
end

procedure Node017
begin
    gsay_reply(916, 410 + ((local_var(4) bwand 2048) != 0));
    set_local_var(4, local_var(4) bwor 2048);
    giq_option(-3, 916, 412, Node999, 50);
end

procedure Node018
begin
    gsay_reply(916, 420 + ((local_var(4) bwand 4096) != 0));
    set_local_var(4, local_var(4) bwor 4096);
    giq_option(4, 916, 422, Node020, 51);
    if (get_critter_stat(dude_obj, 4) < 7) then begin
        giq_option(4, 916, 423, Node033, 50);
    end
    giq_option(7, 916, 424, Node019, 50);
end

procedure Node019
begin
    gsay_reply(916, 430);
    giq_option(4, 916, 431, Node021, 51);
    giq_option(4, 916, 432, Node022, 50);
end

procedure Node020
begin
    gsay_reply(916, 440);
    giq_option(4, 916, 441, Node999, 50);
    giq_option(1, 916, 442, Node999, 50);
end

procedure Node021
begin
    gsay_reply(916, 450);
    giq_option(4, 916, 451, Node999, 51);
    giq_option(4, 916, 452, Node999, 50);
end

procedure Node022
begin
    set_global_var(446, global_var(446) bwor 16384);
    gsay_reply(916, 460);
    giq_option(4, 916, 461, Node023, 50);
    giq_option(4, 916, 462, Node023, 50);
end

procedure Node023
begin
    gsay_reply(916, 470);
    giq_option(4, 916, 471, Node999, 51);
    giq_option(4, 916, 472, Node987, 51);
    giq_option(4, 916, 473, Node026, 50);
end

procedure Node024
begin
    set_global_var(719, 1);
    gsay_reply(916, 480);
    giq_option(4, 916, 481, Node026, 49);
    giq_option(4, 916, 482, Node986, 51);
    giq_option(4, 916, 483, Node986, 50);
end

procedure Node025
begin
    set_global_var(464, 100);
    gsay_reply(916, 490);
    giq_option(4, 916, 491, Node026, 49);
    giq_option(4, 916, 492, Node029, 51);
    giq_option(4, 916, 493, Node999, 50);
end

procedure Node026
begin
    set_global_var(720, 1);
    set_global_var(464, 100);
    item_caps_adjust(dude_obj, 100);
    gsay_reply(916, 500 + (get_critter_stat(dude_obj, 34) == 1));
    giq_option(4, 916, 502, Node028, 50);
    giq_option(4, 916, 503, Node027, 50);
end

procedure Node027
begin
    gsay_reply(916, 510);
    giq_option(4, 916, 511, Node028, 50);
end

procedure Node028
begin
    if (local_var(6) == 0) then begin
        set_local_var(6, game_time + (30 * (24 * (60 * (60 * 10))) * random(3, 6)));
    end
    gsay_reply(916, 520);
    giq_option(4, 916, 521, Node030, 49);
    giq_option(4, 916, 522, Node999, 50);
end

procedure Node029
begin
    gsay_reply(916, 530);
    giq_option(4, 916, 531, Node026, 49);
    giq_option(4, 916, 532, Node999, 51);
end

procedure Node030
begin
    gsay_reply(916, 540);
    giq_option(4, 916, 541, Node031, 49);
    giq_option(5, 916, 542, Node032, 50);
    giq_option(4, 916, 543, Node999, 51);
end

procedure Node031
begin
    item_caps_adjust(dude_obj, -50);
    set_global_var(721, 1);
    set_global_var(720, 0);
    set_global_var(464, 150);
    gsay_reply(916, 550);
    giq_option(4, 916, 551, Node999, 50);
end

procedure Node032
begin
    gsay_reply(916, 560);
    giq_option(4, 916, 561, Node031, 49);
    giq_option(4, 916, 562, Node999, 51);
end

procedure Node033
begin
    gsay_reply(916, 570 + ((local_var(4) bwand 8192) != 0));
    set_local_var(4, local_var(4) bwor 8192);
    giq_option(4, 916, 572, Node034, 50);
    giq_option(4, 916, 573, Node035, 51);
    giq_option(4, 916, 574, Node985, 50);
end

procedure Node034
begin
    gsay_reply(916, 580);
    giq_option(4, 916, 581, Node022, 50);
    giq_option(4, 916, 582, Node022, 51);
end

procedure Node035
begin
    gsay_reply(916, 590);
    giq_option(4, 916, 591, Node022, 51);
    giq_option(4, 916, 592, Node022, 51);
end

procedure Node036
begin
    gsay_reply(916, 600);
    giq_option(4, 916, 601, Node999, 50);
    giq_option(4, 916, 602, Node999, 50);
end

procedure Node037
begin
    gsay_reply(916, 610);
    giq_option(4, 916, 611, Node999, 51);
    giq_option(4, 916, 612, Node987, 51);
    giq_option(4, 916, 613, Node026, 50);
end

procedure Node990
begin
    if (global_var(720) == 1) then begin
        call Node012();
    end
    else begin
        call Node013();
    end
end

procedure Node989
begin
    item_caps_adjust(dude_obj, 1000);
end

procedure Node988
begin
    item_caps_adjust(dude_obj, 2000);
    restock_obj := create_object_sid(39, 0, 0, -1);
    add_mult_objs_to_inven(dude_obj, restock_obj, 5);
    restock_obj := create_object_sid(38, 0, 0, -1);
    add_mult_objs_to_inven(dude_obj, restock_obj, 5);
    restock_obj := create_object_sid(26, 0, 0, -1);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
end

procedure Node987
begin
    if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
        call Node024();
    end
    else begin
        call Node025();
    end
end

procedure Node986
begin
    item_caps_adjust(dude_obj, 200);
    set_global_var(464, 0);
end

procedure Node985
begin
    if (is_success(roll_vs_skill(dude_obj, 14, 20))) then begin
        call Node022();
    end
    else begin
        call Node036();
    end
end

