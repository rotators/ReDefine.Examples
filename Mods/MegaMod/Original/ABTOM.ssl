variable tmp_gen_rep;
variable global_temp;
variable dest_tile;
variable step_tile;

procedure start;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure timed_event_p_proc;
procedure talk_p_proc;
procedure Node998;
procedure Node999;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node990;
procedure Node991;
procedure Node992;
procedure Node993;

variable tmp;
variable tile;

procedure pickup_p_proc;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure map_exit_p_proc;


procedure start
begin
end

procedure use_p_proc
begin
end

procedure look_at_p_proc
begin
    script_overrides;
    if ((global_var(1118) == 3) and (local_var(10) == 1)) then begin
        display_msg(message_str(2270, 1003));
    end
    else begin
        if (local_var(5) == 0) then begin
            display_msg(message_str(2270, 100));
        end
        else begin
            display_msg(message_str(2270, 102));
        end
    end
end

procedure description_p_proc
begin
    script_overrides;
    if ((global_var(1118) == 3) and (local_var(10) == 1)) then begin
        display_msg(message_str(2270, 1004));
    end
    else begin
        display_msg(message_str(2270, 101));
    end
end

procedure use_skill_on_p_proc
begin
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(0, local_var(0) bwor 8);
        set_local_var(0, local_var(0) bwor 2);
    end
end

procedure map_enter_p_proc
begin
    if (local_var(10) == 0) then begin
        move_to(self_obj, 22847, elevation(self_obj));
        set_obj_visibility(self_obj, 1);
    end
    if ((global_var(1118) == 3) and (local_var(10) == 1)) then begin
        critter_add_trait(self_obj, 1, 6, 211);
    end
    add_timer_event(self_obj, game_ticks(1), 1);
end

procedure map_update_p_proc
begin
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        debug_msg("param == 1");
        if (global_var(1118) == 1) then begin
            debug_msg("global == 1");
            if ((game_time_hour > 0) and (game_time_hour < 400)) then begin
                metarule3(100, self_obj, fixed_param, 0);
                add_timer_event(self_obj, game_ticks(1), 3);
            end
            else begin
                metarule3(100, self_obj, fixed_param, 0);
                add_timer_event(self_obj, game_ticks(1), 4);
            end
        end
        else begin
            if (global_var(1118) == 2) then begin
                if (tile_num(self_obj) != 22847) then begin
                    if ((tile_num(self_obj) != 22847) and (22847 != 0)) then begin
                        if ((dest_tile == 22847) and (step_tile < 0)) then begin
                            step_tile := step_tile + 1;
                            debug_msg("step_tile: " + step_tile);
                        end
                        else begin
                            if (anim_busy(self_obj) == 0) then begin
                                dest_tile := 22847;
                                step_tile := 22847;
                                animate_move_obj_to_tile(self_obj, step_tile, 0);
                                while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), 22847) >= tile_distance(step_tile, 22847))) do begin
                                    debug_msg("rot: " + rotation_to_tile(step_tile, tile_num(self_obj)));
                                    step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), 3 % tile_distance(step_tile, tile_num(self_obj)));
                                    debug_msg("step_var: " + step_tile);
                                    animate_move_obj_to_tile(self_obj, step_tile, 0);
                                end
                                if (anim_busy(self_obj) == 0) then begin
                                    if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
                                        if (anim_busy(self_obj) == 0) then begin
                                            global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                            global_temp := (global_temp + 1) % 6;
                                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                debug_msg("flee loop: rot == " + global_temp);
                                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                global_temp := (global_temp + 1) % 6;
                                            end
                                        end
                                    end
                                    else begin
                                        step_tile := -10;
                                    end
                                end
                            end
                            else begin
                                if (tile_distance(tile_num(self_obj), 22847) < tile_distance(dest_tile, 22847)) then begin
                                    reg_anim_func(2, self_obj);
                                end
                            end
                        end
                    end
                end
                metarule3(100, self_obj, fixed_param, 0);
                add_timer_event(self_obj, game_ticks(1), 1);
            end
            else begin
                if (global_var(1118) == 3) then begin
                    if (tile_num(self_obj) != 26271) then begin
                        if ((tile_num(self_obj) != 26271) and (26271 != 0)) then begin
                            if ((dest_tile == 26271) and (step_tile < 0)) then begin
                                step_tile := step_tile + 1;
                                debug_msg("step_tile: " + step_tile);
                            end
                            else begin
                                if (anim_busy(self_obj) == 0) then begin
                                    dest_tile := 26271;
                                    step_tile := 26271;
                                    animate_move_obj_to_tile(self_obj, step_tile, 0);
                                    while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), 26271) >= tile_distance(step_tile, 26271))) do begin
                                        debug_msg("rot: " + rotation_to_tile(step_tile, tile_num(self_obj)));
                                        step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), 3 % tile_distance(step_tile, tile_num(self_obj)));
                                        debug_msg("step_var: " + step_tile);
                                        animate_move_obj_to_tile(self_obj, step_tile, 0);
                                    end
                                    if (anim_busy(self_obj) == 0) then begin
                                        if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
                                            if (anim_busy(self_obj) == 0) then begin
                                                global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                global_temp := (global_temp + 1) % 6;
                                                while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                    debug_msg("flee loop: rot == " + global_temp);
                                                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                    global_temp := (global_temp + 1) % 6;
                                                end
                                            end
                                        end
                                        else begin
                                            step_tile := -10;
                                        end
                                    end
                                end
                                else begin
                                    if (tile_distance(tile_num(self_obj), 26271) < tile_distance(dest_tile, 26271)) then begin
                                        reg_anim_func(2, self_obj);
                                    end
                                end
                            end
                        end
                        metarule3(100, self_obj, fixed_param, 0);
                        add_timer_event(self_obj, game_ticks(1), 1);
                    end
                    else begin
                        metarule3(100, self_obj, fixed_param, 0);
                        set_local_var(10, 1);
                        add_timer_event(self_obj, game_ticks(5), 2);
                    end
                end
                else begin
                    add_timer_event(self_obj, game_ticks(1), 1);
                end
            end
        end
    end
    else begin
        if (fixed_param == 2) then begin
            debug_msg("param == 3");
            if ((game_time_hour > 0) and (game_time_hour < 600)) then begin
                if (tile_num(self_obj) != 26472) then begin
                    if ((tile_num(self_obj) != 26472) and (26472 != 0)) then begin
                        if ((dest_tile == 26472) and (step_tile < 0)) then begin
                            step_tile := step_tile + 1;
                            debug_msg("step_tile: " + step_tile);
                        end
                        else begin
                            if (anim_busy(self_obj) == 0) then begin
                                dest_tile := 26472;
                                step_tile := 26472;
                                animate_move_obj_to_tile(self_obj, step_tile, 0);
                                while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), 26472) >= tile_distance(step_tile, 26472))) do begin
                                    debug_msg("rot: " + rotation_to_tile(step_tile, tile_num(self_obj)));
                                    step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), 3 % tile_distance(step_tile, tile_num(self_obj)));
                                    debug_msg("step_var: " + step_tile);
                                    animate_move_obj_to_tile(self_obj, step_tile, 0);
                                end
                                if (anim_busy(self_obj) == 0) then begin
                                    if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
                                        if (anim_busy(self_obj) == 0) then begin
                                            global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                            global_temp := (global_temp + 1) % 6;
                                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                debug_msg("flee loop: rot == " + global_temp);
                                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                global_temp := (global_temp + 1) % 6;
                                            end
                                        end
                                    end
                                    else begin
                                        step_tile := -10;
                                    end
                                end
                            end
                            else begin
                                if (tile_distance(tile_num(self_obj), 26472) < tile_distance(dest_tile, 26472)) then begin
                                    reg_anim_func(2, self_obj);
                                end
                            end
                        end
                    end
                end
                metarule3(100, self_obj, fixed_param, 0);
                add_timer_event(self_obj, game_ticks(1), 2);
            end
            else begin
                tmp := random(1, 5);
                if (tmp == 1) then begin
                    tile := 23470;
                end
                else begin
                    if (tmp == 2) then begin
                        tile := 23064;
                    end
                    else begin
                        if (tmp == 3) then begin
                            tile := 24870;
                        end
                        else begin
                            if (tmp == 4) then begin
                                tile := 24864;
                            end
                            else begin
                                if (tmp == 5) then begin
                                    tile := 22860;
                                end
                            end
                        end
                    end
                end
                if (anim_busy(self_obj) == 0) then begin
                    reg_anim_func(2, self_obj);
                    reg_anim_func(1, 1);
                    animate_move_obj_to_tile(self_obj, tile, 0);
                    reg_anim_func(3, 0);
                end
                metarule3(100, self_obj, fixed_param, 0);
                add_timer_event(self_obj, game_ticks(10), 2);
            end
        end
        else begin
            if (fixed_param == 3) then begin
                debug_msg("param == 3");
                if (tile_num(self_obj) != 19259) then begin
                    debug_msg("self_tile !=19259");
                    if ((tile_num(self_obj) != 19259) and (19259 != 0)) then begin
                        if ((dest_tile == 19259) and (step_tile < 0)) then begin
                            step_tile := step_tile + 1;
                            debug_msg("step_tile: " + step_tile);
                        end
                        else begin
                            if (anim_busy(self_obj) == 0) then begin
                                dest_tile := 19259;
                                step_tile := 19259;
                                animate_move_obj_to_tile(self_obj, step_tile, 0);
                                while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), 19259) >= tile_distance(step_tile, 19259))) do begin
                                    debug_msg("rot: " + rotation_to_tile(step_tile, tile_num(self_obj)));
                                    step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), 3 % tile_distance(step_tile, tile_num(self_obj)));
                                    debug_msg("step_var: " + step_tile);
                                    animate_move_obj_to_tile(self_obj, step_tile, 0);
                                end
                                if (anim_busy(self_obj) == 0) then begin
                                    if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
                                        if (anim_busy(self_obj) == 0) then begin
                                            global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                            global_temp := (global_temp + 1) % 6;
                                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                debug_msg("flee loop: rot == " + global_temp);
                                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                global_temp := (global_temp + 1) % 6;
                                            end
                                        end
                                    end
                                    else begin
                                        step_tile := -10;
                                    end
                                end
                            end
                            else begin
                                if (tile_distance(tile_num(self_obj), 19259) < tile_distance(dest_tile, 19259)) then begin
                                    reg_anim_func(2, self_obj);
                                end
                            end
                        end
                    end
                end
                metarule3(100, self_obj, fixed_param, 0);
                add_timer_event(self_obj, game_ticks(1), 1);
            end
            else begin
                if (fixed_param == 4) then begin
                    if (tile_num(self_obj) != 22847) then begin
                        if ((tile_num(self_obj) != 22847) and (22847 != 0)) then begin
                            if ((dest_tile == 22847) and (step_tile < 0)) then begin
                                step_tile := step_tile + 1;
                                debug_msg("step_tile: " + step_tile);
                            end
                            else begin
                                if (anim_busy(self_obj) == 0) then begin
                                    dest_tile := 22847;
                                    step_tile := 22847;
                                    animate_move_obj_to_tile(self_obj, step_tile, 0);
                                    while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), 22847) >= tile_distance(step_tile, 22847))) do begin
                                        debug_msg("rot: " + rotation_to_tile(step_tile, tile_num(self_obj)));
                                        step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), 3 % tile_distance(step_tile, tile_num(self_obj)));
                                        debug_msg("step_var: " + step_tile);
                                        animate_move_obj_to_tile(self_obj, step_tile, 0);
                                    end
                                    if (anim_busy(self_obj) == 0) then begin
                                        if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
                                            if (anim_busy(self_obj) == 0) then begin
                                                global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                global_temp := (global_temp + 1) % 6;
                                                while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                    debug_msg("flee loop: rot == " + global_temp);
                                                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                    global_temp := (global_temp + 1) % 6;
                                                end
                                            end
                                        end
                                        else begin
                                            step_tile := -10;
                                        end
                                    end
                                end
                                else begin
                                    if (tile_distance(tile_num(self_obj), 22847) < tile_distance(dest_tile, 22847)) then begin
                                        reg_anim_func(2, self_obj);
                                    end
                                end
                            end
                        end
                    end
                    metarule3(100, self_obj, fixed_param, 0);
                    add_timer_event(self_obj, game_ticks(1), 1);
                end
            end
        end
    end
end

procedure talk_p_proc
begin
    if (global_var(1118) == 2) then begin
        call Node013();
    end
    else begin
        if (global_var(1118) > 2) then begin
            if (local_var(8) == 1) then begin
                call Node012();
            end
            else begin
                if (local_var(10) == 1) then begin
                    start_gdialog(2270, self_obj, 4, -1, -1);
                    gsay_start;
                    call Node009();
                    gsay_end;
                    end_dialogue;
                end
                else begin
                    call Node015();
                end
            end
        end
        else begin
            start_gdialog(2270, self_obj, 4, -1, -1);
            gsay_start;
            call Node001();
            gsay_end;
            end_dialogue;
        end
    end
end

procedure Node998
begin
    set_local_var(0, local_var(0) bwor 2);
    set_global_var(63, -30);
end

procedure Node999
begin
end

procedure Node001
begin
    gsay_reply(2270, 200);
    giq_option(4, 2270, 201, Node002, 50);
    giq_option(4, 2270, 206, Node999, 50);
end

procedure Node002
begin
    gsay_reply(2270, 202);
    giq_option(4, 2270, 203, Node003, 51);
    giq_option(4, 2270, 204, Node003, 50);
    giq_option(4, 2270, 206, Node999, 50);
    set_local_var(5, 1);
end

procedure Node003
begin
    gsay_reply(2270, 207);
    giq_option(4, 2270, 208, Node004, 50);
    giq_option(4, 2270, 209, Node999, 50);
end

procedure Node004
begin
    gsay_reply(2270, 210);
    if (global_var(319) > 0) then begin
        giq_option(4, 2270, 450, Node005, 50);
        giq_option(4, 2270, 451, Node999, 50);
    end
    giq_option(4, 2270, 211, Node005, 50);
    giq_option(4, 2270, 206, Node999, 50);
end

procedure Node005
begin
    gsay_reply(2270, 212);
    if (map_var(1) == 1) then begin
        giq_option(4, 2270, 217, Node007, 50);
    end
    giq_option(4, 2270, 213, Node993, 50);
    giq_option(4, 2270, 205, Node999, 50);
end

procedure Node006
begin
    gsay_reply(2270, 214);
    giq_option(4, 2270, 215, Node992, 50);
    giq_option(4, 2270, 216, Node990, 50);
end

procedure Node007
begin
    gsay_reply(2270, 218);
    giq_option(4, 2270, 220, Node008, 50);
    giq_option(4, 2270, 219, Node990, 50);
end

procedure Node008
begin
    gsay_reply(2270, 221);
    giq_option(4, 2270, 222, Node991, 50);
end

procedure Node009
begin
    gsay_reply(2270, 301);
    giq_option(4, 2270, 302, Node010, 50);
end

procedure Node010
begin
    gsay_reply(2270, 303);
    giq_option(4, 2270, 304, Node011, 50);
end

procedure Node011
begin
    variable LVar0 := 0;
    LVar0 := create_object_sid(101, 0, 0, -1);
    add_obj_to_inven(dude_obj, LVar0);
    gsay_reply(2270, 305);
    giq_option(4, 2270, 306, Node999, 50);
    set_local_var(8, 1);
    return 0;
    LVar0 := 0;
end

procedure Node012
begin
    float_msg(self_obj, message_str(2270, 307), 8);
end

procedure Node013
begin
    float_msg(self_obj, message_str(2270, 1002), 8);
end

procedure Node014
begin
    gsay_reply(2270, 400);
    giq_option(4, 2270, 306, Node998, 51);
end

procedure Node015
begin
    float_msg(self_obj, message_str(2270, 223), 8);
end

procedure Node990
begin
    reg_anim_func(2, self_obj);
    set_global_var(1118, 2);
    display_msg(message_str(2270, 1001));
    give_exp_points(500);
    display_msg(message_str(14, 100) + 500 + message_str(14, 101));
    set_global_var(63, global_var(63) + 10);
end

procedure Node991
begin
    reg_anim_func(2, self_obj);
    set_global_var(1118, 3);
    display_msg(message_str(2270, 1000));
    give_exp_points(1000);
    display_msg(message_str(14, 100) + 1000 + message_str(14, 101));
    set_global_var(0, global_var(0) + 5);
    debug_msg("Player gains " + 5 + " Karma Points.");
    set_global_var(37, 0);
    set_global_var(38, 0);
    set_global_var(39, 0);
    set_global_var(40, 0);
    set_global_var(41, 0);
    set_global_var(42, 0);
    set_global_var(43, 0);
    set_global_var(44, 0);
    set_global_var(45, 0);
    tmp_gen_rep := global_var(0);
    if (has_trait(0, dude_obj, 95)) then begin
        tmp_gen_rep := global_var(0) * 2;
    end
    if (tmp_gen_rep >= 1000) then begin
        set_global_var(37, 1);
    end
    else begin
        if (tmp_gen_rep >= 750) then begin
            set_global_var(38, 1);
        end
        else begin
            if (tmp_gen_rep >= 500) then begin
                set_global_var(39, 1);
            end
            else begin
                if (tmp_gen_rep >= 250) then begin
                    set_global_var(40, 1);
                end
                else begin
                    if (tmp_gen_rep > -250) then begin
                        set_global_var(41, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -500) then begin
                            set_global_var(42, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -750) then begin
                                set_global_var(43, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -1000) then begin
                                    set_global_var(44, 1);
                                end
                                else begin
                                    set_global_var(45, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    set_global_var(63, global_var(63) + 10);
end

procedure Node992
begin
    set_local_var(9, 1);
    attack_setup(dude_obj, self_obj);
end

procedure Node993
begin
    if (is_success(roll_vs_skill(dude_obj, 14, -5))) then begin
        call Node006();
    end
    else begin
        call Node014();
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        call Node998();
    end
end

procedure critter_p_proc
begin
    if (has_trait(1, self_obj, 666)) then begin
        if (tile_num(self_obj) == 22847) then begin
            set_obj_visibility(self_obj, 1);
        end
    end
    if (not(has_trait(1, self_obj, 666))) then begin
        if (tile_num(self_obj) != 22847) then begin
            set_obj_visibility(self_obj, 0);
        end
    end
    if (((local_var(0) bwand 2) != 0) and obj_can_see_obj(self_obj, dude_obj)) then begin
        if (critter_is_fleeing(self_obj)) then begin
            if (anim_busy(self_obj) == 0) then begin
                if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                    if (anim_busy(self_obj) == 0) then begin
                        global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                        global_temp := (global_temp + 1) % 6;
                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                            debug_msg("flee loop: rot == " + global_temp);
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                        end
                    end
                end
            end
        end
        else begin
            attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
        end
    end
    else begin
        if (local_var(9) == 1) then begin
            if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                if (anim_busy(self_obj) == 0) then begin
                    global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                    global_temp := (global_temp + 1) % 6;
                    while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                        debug_msg("flee loop: rot == " + global_temp);
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                        global_temp := (global_temp + 1) % 6;
                    end
                end
            end
        end
    end
end

procedure destroy_p_proc
begin
    set_global_var(1118, 4);
    if (source_obj == dude_obj) then begin
        set_global_var(5, global_var(5) + 1);
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
            set_global_var(2, 1);
            set_global_var(3, 0);
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
            set_global_var(3, 1);
            set_global_var(2, 0);
        end
        set_global_var(0, global_var(0) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        tmp_gen_rep := global_var(0);
        if (has_trait(0, dude_obj, 95)) then begin
            tmp_gen_rep := global_var(0) * 2;
        end
        if (tmp_gen_rep >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (tmp_gen_rep >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (tmp_gen_rep >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (tmp_gen_rep >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(63, global_var(63) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
end

procedure map_exit_p_proc
begin
    if (global_var(1118) == 2) then begin
        destroy_object(self_obj);
    end
end

