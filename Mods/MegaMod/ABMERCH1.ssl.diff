diff --git a/Mods/MegaMod/Original/ABMERCH1.ssl b/Mods/MegaMod/ReDefine/ABMERCH1.ssl
index 4d4d23f..0455f6b 100644
--- a/Mods/MegaMod/Original/ABMERCH1.ssl
+++ b/Mods/MegaMod/ReDefine/ABMERCH1.ssl
@@ -53,13 +53,13 @@ end
 procedure look_at_p_proc
 begin
     script_overrides;
-    display_msg(message_str(2260, 100));
+    display_mstr(100);
 end
 
 procedure description_p_proc
 begin
     script_overrides;
-    display_msg(message_str(2260, 102));
+    display_mstr(102);
 end
 
 procedure use_skill_on_p_proc
@@ -75,8 +75,8 @@ begin
     if (source_obj == dude_obj) then begin
         set_local_var(4, local_var(4) bwor 8);
         set_local_var(4, local_var(4) bwor 2);
-        if (global_var(63) != -30) then begin
-            set_global_var(63, -30);
+        if (global_var(GVAR_TOWN_REP_ABBEY) != -30) then begin
+            set_global_var(GVAR_TOWN_REP_ABBEY, -30);
         end
     end
 end
@@ -84,63 +84,63 @@ end
 procedure destroy_p_proc
 begin
     if (source_obj == dude_obj) then begin
-        set_global_var(5, global_var(5) + 1);
-        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
-            set_global_var(2, 1);
-            set_global_var(3, 0);
+        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
+        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
+            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
+            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
         end
-        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
-            set_global_var(3, 1);
-            set_global_var(2, 0);
+        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
+            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
+            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
         end
-        set_global_var(0, global_var(0) + -10);
+        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
         debug_msg("Player gains " + -10 + " Karma Points.");
-        set_global_var(37, 0);
-        set_global_var(38, 0);
-        set_global_var(39, 0);
-        set_global_var(40, 0);
-        set_global_var(41, 0);
-        set_global_var(42, 0);
-        set_global_var(43, 0);
-        set_global_var(44, 0);
-        set_global_var(45, 0);
-        tmp_gen_rep := global_var(0);
-        if (has_trait(0, dude_obj, 95)) then begin
-            tmp_gen_rep := global_var(0) * 2;
+        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
+        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
+        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
+        set_global_var(GVAR_KARMA_DEFENDER, 0);
+        set_global_var(GVAR_KARMA_WANDERER, 0);
+        set_global_var(GVAR_KARMA_BETRAYER, 0);
+        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
+        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
+        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
+        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
+        if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
+            tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
         end
         if (tmp_gen_rep >= 1000) then begin
-            set_global_var(37, 1);
+            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
         end
         else begin
             if (tmp_gen_rep >= 750) then begin
-                set_global_var(38, 1);
+                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
             end
             else begin
                 if (tmp_gen_rep >= 500) then begin
-                    set_global_var(39, 1);
+                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                 end
                 else begin
                     if (tmp_gen_rep >= 250) then begin
-                        set_global_var(40, 1);
+                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                     end
                     else begin
                         if (tmp_gen_rep > -250) then begin
-                            set_global_var(41, 1);
+                            set_global_var(GVAR_KARMA_WANDERER, 1);
                         end
                         else begin
                             if (tmp_gen_rep > -500) then begin
-                                set_global_var(42, 1);
+                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                             end
                             else begin
                                 if (tmp_gen_rep > -750) then begin
-                                    set_global_var(43, 1);
+                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                 end
                                 else begin
                                     if (tmp_gen_rep > -1000) then begin
-                                        set_global_var(44, 1);
+                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                     end
                                     else begin
-                                        set_global_var(45, 1);
+                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                     end
                                 end
                             end
@@ -149,14 +149,14 @@ begin
                 end
             end
         end
-        set_global_var(63, global_var(63) + -5);
+        set_global_var(GVAR_TOWN_REP_ABBEY, global_var(GVAR_TOWN_REP_ABBEY) + -5);
         debug_msg("Added " + -5 + " to Town Rep");
     end
 end
 
 procedure map_enter_p_proc
 begin
-    if (metarule(14, 0)) then begin
+    if (map_first_run) then begin
         set_local_var(7, tile_num(self_obj));
     end
     add_timer_event(self_obj, game_ticks(5), 5);
@@ -169,14 +169,14 @@ end
 procedure talk_p_proc
 begin
     if (not(installing_part)) then begin
-        if ((game_time_hour >= 1900) or (game_time_hour < 600) and (global_var(1117) < 4)) then begin
-            float_msg(self_obj, message_str(2260, 330), 8);
+        if ((game_time_hour >= 1900) or (game_time_hour < 600) and (global_var(GVAR_ABBEY_TULLY) < 4)) then begin
+            float_msg(self_obj, mstr(330), FLOAT_MSG_YELLOW);
         end
         else begin
-            if (global_var(1117) < 4) then begin
+            if (global_var(GVAR_ABBEY_TULLY) < 4) then begin
                 start_gdialog(2260, self_obj, 4, -1, -1);
                 gsay_start;
-                if (global_var(1117) < 1) then begin
+                if (global_var(GVAR_ABBEY_TULLY) < 1) then begin
                     call Node001();
                 end
                 else begin
@@ -204,50 +204,50 @@ end
 
 procedure Node001
 begin
-    gsay_reply(2260, 300);
-    if (global_var(1117) == 1) then begin
-        giq_option(4, 2260, 301, Node004, 50);
-        giq_option(4, 2260, 313, Node013, 50);
+    Reply(300);
+    if (global_var(GVAR_ABBEY_TULLY) == 1) then begin
+        giq_option(4, NAME, 301, Node004, NEUTRAL_REACTION);
+        giq_option(4, NAME, 313, Node013, NEUTRAL_REACTION);
     end
     else begin
-        giq_option(4, 2260, 305, Node005, 50);
-        giq_option(4, 2260, 312, Node013, 50);
+        giq_option(4, NAME, 305, Node005, NEUTRAL_REACTION);
+        giq_option(4, NAME, 312, Node013, NEUTRAL_REACTION);
     end
-    giq_option(4, 2260, 310, Node999, 50);
+    giq_option(4, NAME, 310, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node002
 begin
-    if (global_var(1117) != 5) then begin
-        float_msg(self_obj, message_str(2260, random(109, 110)), 8);
+    if (global_var(GVAR_ABBEY_TULLY) != 5) then begin
+        float_msg(self_obj, mstr(random(109, 110)), FLOAT_MSG_YELLOW);
     end
     else begin
-        float_msg(self_obj, message_str(2260, 200), 8);
+        float_msg(self_obj, mstr(200), FLOAT_MSG_YELLOW);
     end
 end
 
 procedure Node003
 begin
-    float_msg(self_obj, message_str(2260, random(103, 104)), 8);
+    float_msg(self_obj, mstr(random(103, 104)), FLOAT_MSG_YELLOW);
 end
 
 procedure Node004
 begin
-    gsay_reply(2260, 302);
-    giq_option(4, 2260, 303, Node006, 50);
+    Reply(302);
+    giq_option(4, NAME, 303, Node006, NEUTRAL_REACTION);
     From_Node := 4;
 end
 
 procedure Node005
 begin
-    set_global_var(1117, 1);
+    set_global_var(GVAR_ABBEY_TULLY, 1);
     set_local_var(10, 1);
-    gsay_reply(2260, 306);
-    if (has_skill(dude_obj, 13) > 60) then begin
-        giq_option(4, 2260, 307, Node006, 50);
+    Reply(306);
+    if (dude_skill(SKILL_REPAIR) > 60) then begin
+        giq_option(4, NAME, 307, Node006, NEUTRAL_REACTION);
     end
     else begin
-        giq_option(4, 2260, 308, Node006, 50);
+        giq_option(4, NAME, 308, Node006, NEUTRAL_REACTION);
     end
     From_Node := 5;
 end
@@ -255,94 +255,94 @@ end
 procedure Node006
 begin
     if (From_Node == 4) then begin
-        gsay_reply(2260, 304);
+        Reply(304);
     end
     else begin
         if (From_Node == 5) then begin
-            gsay_reply(2260, 309);
+            Reply(309);
         end
     end
-    giq_option(4, 2260, 311, Node999, 50);
+    giq_option(4, NAME, 311, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node007
 begin
-    gsay_reply(2260, 400);
-    if (global_var(1117) == 2) then begin
-        giq_option(4, 2260, 402, Node008, 50);
+    Reply(400);
+    if (global_var(GVAR_ABBEY_TULLY) == 2) then begin
+        giq_option(4, NAME, 402, Node008, NEUTRAL_REACTION);
     end
-    giq_option(4, 2260, 401, Node999, 50);
+    giq_option(4, NAME, 401, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node008
 begin
-    gsay_reply(2260, 500);
-    giq_option(4, 2260, 501, Node990, 50);
-    giq_option(4, 2260, 502, Node014, 50);
-    giq_option(4, 2260, 503, Node999, 51);
+    Reply(500);
+    giq_option(4, NAME, 501, Node990, NEUTRAL_REACTION);
+    giq_option(4, NAME, 502, Node014, NEUTRAL_REACTION);
+    giq_option(4, NAME, 503, Node999, BAD_REACTION);
 end
 
 procedure Node009
 begin
-    gsay_reply(2260, 600);
+    Reply(600);
     if (obj_is_carrying_obj_pid(dude_obj, 89)) then begin
-        giq_option(4, 2260, 602, Node010, 50);
+        giq_option(4, NAME, 602, Node010, NEUTRAL_REACTION);
     end
     else begin
-        giq_option(4, 2260, 601, Node999, 50);
+        giq_option(4, NAME, 601, Node999, NEUTRAL_REACTION);
     end
 end
 
 procedure Node010
 begin
-    gsay_reply(2260, 700);
-    giq_option(4, 2260, 701, Node999, 50);
-    giq_option(4, 2260, 702, Node011, 50);
+    Reply(700);
+    giq_option(4, NAME, 701, Node999, NEUTRAL_REACTION);
+    giq_option(4, NAME, 702, Node011, NEUTRAL_REACTION);
 end
 
 procedure Node011
 begin
     variable LVar0 := 0;
-    gsay_reply(2260, 800);
-    giq_option(4, 2260, 801, Node999, 50);
+    Reply(800);
+    giq_option(4, NAME, 801, Node999, NEUTRAL_REACTION);
     LVar0 := obj_carrying_pid_obj(dude_obj, 89);
     rm_obj_from_inven(dude_obj, LVar0);
     destroy_object(LVar0);
-    metarule3(100, self_obj, fixed_param, 0);
+    rm_fixed_timer_event(self_obj, fixed_param);
     add_timer_event(self_obj, game_ticks(1), install_part);
     installing_part := 1;
 end
 
 procedure Node012
 begin
-    gsay_reply(2260, 910);
-    if (global_var(1117) == 2) then begin
-        giq_option(4, 2260, 913, Node008, 50);
+    Reply(910);
+    if (global_var(GVAR_ABBEY_TULLY) == 2) then begin
+        giq_option(4, NAME, 913, Node008, NEUTRAL_REACTION);
     end
     else begin
-        giq_option(4, 2260, 911, Node005, 50);
+        giq_option(4, NAME, 911, Node005, NEUTRAL_REACTION);
     end
-    giq_option(4, 2260, 912, Node999, 50);
+    giq_option(4, NAME, 912, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node013
 begin
-    gsay_reply(2260, 320);
-    giq_option(4, 2260, 321, Node005, 50);
-    giq_option(4, 2260, 322, Node999, 50);
+    Reply(320);
+    giq_option(4, NAME, 321, Node005, NEUTRAL_REACTION);
+    giq_option(4, NAME, 322, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node014
 begin
     set_local_var(11, 1);
     item_caps_adjust(dude_obj, 600);
-    gsay_reply(2260, 510);
-    giq_option(4, 2260, 511, Node990, 50);
+    Reply(510);
+    giq_option(4, NAME, 511, Node990, NEUTRAL_REACTION);
 end
 
 procedure Node998
 begin
-    set_global_var(63, -30);
+    set_global_var(GVAR_TOWN_REP_ABBEY, -30);
 end
 
 procedure Node999
@@ -356,7 +356,7 @@ begin
     end
     else begin
         if (not((game_time_hour >= 1900) or (game_time_hour < 600))) then begin
-            if (global_var(1117) < 4) then begin
+            if (global_var(GVAR_ABBEY_TULLY) < 4) then begin
                 if (fixed_param == install_part) then begin
                     if (step == 0) then begin
                         step := 1;
@@ -377,12 +377,12 @@ begin
                                         animate_move_obj_to_tile(self_obj, step_tile, 0);
                                     end
                                     if (anim_busy(self_obj) == 0) then begin
-                                        if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
+                                        if (tile_get_next_critter(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), elevation(self_obj), 0) != 0) then begin
                                             if (anim_busy(self_obj) == 0) then begin
-                                                global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
+                                                global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                                 animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                 global_temp := (global_temp + 1) % 6;
-                                                while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
+                                                while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                     debug_msg("flee loop: rot == " + global_temp);
                                                     animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                     global_temp := (global_temp + 1) % 6;
@@ -401,14 +401,14 @@ begin
                                 end
                             end
                         end
-                        metarule3(100, self_obj, fixed_param, 0);
+                        rm_fixed_timer_event(self_obj, fixed_param);
                         add_timer_event(self_obj, game_ticks(2), install_part);
                     end
                     if (step == 1) then begin
                         step := 2;
                         reg_anim_func(2, self_obj);
                         anim(self_obj, 1000, 0);
-                        metarule3(100, self_obj, fixed_param, 0);
+                        rm_fixed_timer_event(self_obj, fixed_param);
                         add_timer_event(self_obj, game_ticks(1), install_part);
                     end
                     else begin
@@ -416,26 +416,26 @@ begin
                             step := 3;
                             reg_anim_func(2, self_obj);
                             anim(self_obj, random(10, 11), 0);
-                            metarule3(100, self_obj, fixed_param, 0);
+                            rm_fixed_timer_event(self_obj, fixed_param);
                             add_timer_event(self_obj, game_ticks(1), install_part);
                         end
                         else begin
                             if (step == 3) then begin
                                 reg_anim_func(2, self_obj);
                                 anim(self_obj, 0, 0);
-                                float_msg(self_obj, message_str(2260, 900), 8);
-                                display_msg(message_str(2260, 901));
-                                set_global_var(1117, 4);
+                                float_msg(self_obj, mstr(900), FLOAT_MSG_YELLOW);
+                                display_mstr(901);
+                                set_global_var(GVAR_ABBEY_TULLY, 4);
                                 if (local_var(11) == 1) then begin
                                     give_exp_points(150);
-                                    display_msg(message_str(14, 100) + 150 + message_str(14, 101));
+                                    display_msg(g_mstr(100) + 150 + g_mstr(101));
                                 end
                                 else begin
                                     give_exp_points(300);
-                                    display_msg(message_str(14, 100) + 300 + message_str(14, 101));
-                                    set_global_var(63, global_var(63) + 5);
+                                    display_msg(g_mstr(100) + 300 + g_mstr(101));
+                                    set_global_var(GVAR_TOWN_REP_ABBEY, global_var(GVAR_TOWN_REP_ABBEY) + 5);
                                 end
-                                metarule3(100, self_obj, fixed_param, 0);
+                                rm_fixed_timer_event(self_obj, fixed_param);
                                 add_timer_event(self_obj, game_ticks(4), 1);
                                 installing_part := 0;
                             end
@@ -444,22 +444,22 @@ begin
                 end
                 else begin
                     if (fixed_param == 1) then begin
-                        float_msg(self_obj, message_str(2260, random(103, 106)), 8);
-                        metarule3(100, self_obj, 1, 0);
+                        float_msg(self_obj, mstr(random(103, 106)), FLOAT_MSG_YELLOW);
+                        rm_fixed_timer_event(self_obj, 1);
                         add_timer_event(self_obj, game_ticks(random(10, 15)), 5);
                     end
                     else begin
                         if (fixed_param == 2) then begin
                             reg_anim_func(2, self_obj);
                             anim(self_obj, random(10, 11), 0);
-                            metarule3(100, self_obj, 3, 0);
+                            rm_fixed_timer_event(self_obj, 3);
                             add_timer_event(self_obj, game_ticks(1), 3);
                         end
                         else begin
                             if (fixed_param == 3) then begin
                                 reg_anim_func(2, self_obj);
                                 anim(self_obj, 0, 0);
-                                metarule3(100, self_obj, 3, 0);
+                                rm_fixed_timer_event(self_obj, 3);
                                 add_timer_event(self_obj, game_ticks(2), 1);
                             end
                             else begin
@@ -481,12 +481,12 @@ begin
                                                     animate_move_obj_to_tile(self_obj, step_tile, 0);
                                                 end
                                                 if (anim_busy(self_obj) == 0) then begin
-                                                    if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
+                                                    if (tile_get_next_critter(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), elevation(self_obj), 0) != 0) then begin
                                                         if (anim_busy(self_obj) == 0) then begin
-                                                            global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
+                                                            global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                                             animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                             global_temp := (global_temp + 1) % 6;
-                                                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
+                                                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                                 debug_msg("flee loop: rot == " + global_temp);
                                                                 animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                                 global_temp := (global_temp + 1) % 6;
@@ -505,7 +505,7 @@ begin
                                             end
                                         end
                                     end
-                                    metarule3(100, self_obj, 4, 0);
+                                    rm_fixed_timer_event(self_obj, 4);
                                 end
                                 else begin
                                     if (fixed_param == 5) then begin
@@ -529,12 +529,12 @@ begin
                                                                 animate_move_obj_to_tile(self_obj, step_tile, 0);
                                                             end
                                                             if (anim_busy(self_obj) == 0) then begin
-                                                                if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
+                                                                if (tile_get_next_critter(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), elevation(self_obj), 0) != 0) then begin
                                                                     if (anim_busy(self_obj) == 0) then begin
-                                                                        global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
+                                                                        global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                                                         animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                                         global_temp := (global_temp + 1) % 6;
-                                                                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
+                                                                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                                             debug_msg("flee loop: rot == " + global_temp);
                                                                             animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                                             global_temp := (global_temp + 1) % 6;
@@ -553,7 +553,7 @@ begin
                                                         end
                                                     end
                                                 end
-                                                metarule3(100, self_obj, 5, 0);
+                                                rm_fixed_timer_event(self_obj, 5);
                                                 add_timer_event(self_obj, game_ticks(2), 6);
                                             end
                                             else begin
@@ -574,12 +574,12 @@ begin
                                                                 animate_move_obj_to_tile(self_obj, step_tile, 0);
                                                             end
                                                             if (anim_busy(self_obj) == 0) then begin
-                                                                if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
+                                                                if (tile_get_next_critter(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), elevation(self_obj), 0) != 0) then begin
                                                                     if (anim_busy(self_obj) == 0) then begin
-                                                                        global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
+                                                                        global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                                                         animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                                         global_temp := (global_temp + 1) % 6;
-                                                                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
+                                                                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                                             debug_msg("flee loop: rot == " + global_temp);
                                                                             animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                                             global_temp := (global_temp + 1) % 6;
@@ -598,12 +598,12 @@ begin
                                                         end
                                                     end
                                                 end
-                                                metarule3(100, self_obj, 5, 0);
+                                                rm_fixed_timer_event(self_obj, 5);
                                                 add_timer_event(self_obj, game_ticks(2), 7);
                                             end
                                         end
                                         else begin
-                                            metarule3(100, self_obj, 5, 0);
+                                            rm_fixed_timer_event(self_obj, 5);
                                             add_timer_event(self_obj, game_ticks(2), 2);
                                         end
                                     end
@@ -629,13 +629,13 @@ begin
             end
             else begin
                 if (fixed_param == 8) then begin
-                    metarule3(100, self_obj, 8, 0);
-                    float_msg(self_obj, message_str(2260, 110), 8);
+                    rm_fixed_timer_event(self_obj, 8);
+                    float_msg(self_obj, mstr(110), FLOAT_MSG_YELLOW);
                     add_timer_event(self_obj, game_ticks(3), 9);
                 end
                 else begin
                     if (fixed_param == 9) then begin
-                        metarule3(100, self_obj, fixed_param, 0);
+                        rm_fixed_timer_event(self_obj, fixed_param);
                         if ((tile_num(self_obj) != 12504) and (12504 != 0)) then begin
                             if ((dest_tile == 12504) and (step_tile < 0)) then begin
                                 step_tile := step_tile + 1;
@@ -653,12 +653,12 @@ begin
                                         animate_move_obj_to_tile(self_obj, step_tile, 0);
                                     end
                                     if (anim_busy(self_obj) == 0) then begin
-                                        if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
+                                        if (tile_get_next_critter(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), elevation(self_obj), 0) != 0) then begin
                                             if (anim_busy(self_obj) == 0) then begin
-                                                global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
+                                                global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                                 animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                 global_temp := (global_temp + 1) % 6;
-                                                while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
+                                                while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                     debug_msg("flee loop: rot == " + global_temp);
                                                     animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                     global_temp := (global_temp + 1) % 6;
@@ -681,9 +681,9 @@ begin
                     end
                     else begin
                         if (fixed_param == 10) then begin
-                            metarule3(100, self_obj, 10, 0);
+                            rm_fixed_timer_event(self_obj, 10);
                             if (tile_num(self_obj) == 12504) then begin
-                                metarule3(100, self_obj, 10, 0);
+                                rm_fixed_timer_event(self_obj, 10);
                                 reg_anim_func(2, self_obj);
                                 anim(self_obj, 1000, 0);
                                 add_timer_event(self_obj, game_ticks(1), 11);
@@ -696,7 +696,7 @@ begin
                             if (fixed_param == 11) then begin
                                 reg_anim_func(2, self_obj);
                                 anim(self_obj, 0, 0);
-                                metarule3(100, self_obj, 11, 0);
+                                rm_fixed_timer_event(self_obj, 11);
                             end
                         end
                     end
@@ -711,7 +711,7 @@ begin
                 reg_anim_func(2, self_obj);
                 anim(self_obj, 0, 0);
             end
-            metarule3(100, self_obj, fixed_param, 0);
+            rm_fixed_timer_event(self_obj, fixed_param);
             add_timer_event(self_obj, game_ticks(1), 5);
         end
     end
@@ -719,12 +719,12 @@ end
 
 procedure critter_p_proc
 begin
-    if ((global_var(63) == -30) or ((local_var(4) bwand 2) != 0) and obj_can_see_obj(self_obj, dude_obj)) then begin
-        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
+    if ((global_var(GVAR_TOWN_REP_ABBEY) == -30) or ((local_var(4) bwand 2) != 0) and obj_can_see_obj(self_obj, dude_obj)) then begin
+        attack(dude_obj);
     end
     else begin
-        if ((global_var(1117) >= 4) and (local_var(8) != 1)) then begin
-            metarule3(100, self_obj, fixed_param, 0);
+        if ((global_var(GVAR_ABBEY_TULLY) >= 4) and (local_var(8) != 1)) then begin
+            rm_fixed_timer_event(self_obj, fixed_param);
             set_local_var(8, 1);
             add_timer_event(self_obj, game_ticks(1), 8);
         end
@@ -740,7 +740,6 @@ end
 
 procedure Node990
 begin
-    set_global_var(1117, 3);
+    set_global_var(GVAR_ABBEY_TULLY, 3);
     set_local_var(9, 1);
 end
-
