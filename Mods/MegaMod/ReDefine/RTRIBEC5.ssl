variable tmp_gen_rep;
variable global_temp;

procedure start;
procedure critter_p_proc;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node998;
procedure Node999;
procedure Node991;

import variable GHOST_obj;

procedure timed_event_p_proc;
procedure pickup_p_proc;


procedure start
begin
    GHOST_obj := self_obj;
end

procedure critter_p_proc
begin
    if (global_var(GVAR_FIND_SULIK) == 3) then begin
        add_timer_event(self_obj, 15, 1);
    end
end

procedure use_p_proc
begin
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 0) then begin
        display_mstr(100);
    end
    else begin
        display_mstr(101);
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(102);
end

procedure use_skill_on_p_proc
begin
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
end

procedure map_enter_p_proc
begin
    add_timer_event(self_obj, game_ticks(random(10, 15)), 2);
end

procedure map_update_p_proc
begin
    GHOST_obj := self_obj;
    if (game_time_hour <= 400) then begin
        if (global_var(GVAR_FIND_SULIK) >= 1) then begin
            if (obj_is_visible_flag(self_obj) == 0) then begin
                set_obj_visibility(self_obj, 0);
            end
        end
    end
    else begin
        if (obj_is_visible_flag(self_obj) == 1) then begin
            set_obj_visibility(self_obj, 1);
        end
    end
end

procedure talk_p_proc
begin
    if (local_var(7) == 1) then begin
        start_gdialog(2288, self_obj, 4, -1, -1);
        gsay_start;
        call Node003();
        gsay_end;
        end_dialogue;
    end
    else begin
        if (global_var(GVAR_FIND_SULIK) == 1) then begin
            start_gdialog(2288, self_obj, 4, -1, -1);
            gsay_start;
            call Node001();
            gsay_end;
            end_dialogue;
        end
        else begin
            if (global_var(GVAR_FIND_SULIK) == 2) then begin
                start_gdialog(2288, self_obj, 4, -1, -1);
                gsay_start;
                call Node006();
                gsay_end;
                end_dialogue;
            end
        end
    end
end

procedure Node001
begin
    Reply(110);
    giq_option(-3, NAME, 300, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 111, Node002, NEUTRAL_REACTION);
end

procedure Node002
begin
    Reply(120);
    giq_option(-3, NAME, 310, Node004, NEUTRAL_REACTION);
    giq_option(4, NAME, 121, Node003, NEUTRAL_REACTION);
    giq_option(4, NAME, 122, Node991, BAD_REACTION);
end

procedure Node003
begin
    Reply(130);
    giq_option(-3, NAME, 320, Node004, NEUTRAL_REACTION);
    giq_option(4, NAME, 131, Node004, NEUTRAL_REACTION);
end

procedure Node004
begin
    Reply(140);
    giq_option(-3, NAME, 330, Node005, NEUTRAL_REACTION);
    giq_option(4, NAME, 141, Node005, NEUTRAL_REACTION);
end

procedure Node005
begin
    if (not(dude_is_stupid)) then begin
        set_global_var(GVAR_FIND_SULIK, 2);
    end
    Reply(150);
    giq_option(1, NAME, 151, Node999, NEUTRAL_REACTION);
end

procedure Node006
begin
    Reply(160);
    giq_option(4, NAME, 161, Node999, NEUTRAL_REACTION);
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
    debug_msg("LVAR_Herebefore == " + local_var(4));
    if (local_var(4) == 0) then begin
        set_local_var(4, 1);
    end
end

procedure Node991
begin
    set_local_var(7, 1);
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        GHOST_obj := -1;
        destroy_object(self_obj);
    end
    else begin
        if (fixed_param == 2) then begin
            if (obj_is_visible_flag(self_obj) and (elevation(self_obj) == 0)) then begin
                float_msg(self_obj, mstr(random(103, 105)), FLOAT_MSG_YELLOW);
            end
            add_timer_event(self_obj, game_ticks(random(10, 15)), 2);
        end
    end
end

procedure pickup_p_proc
begin
    script_overrides;
end
