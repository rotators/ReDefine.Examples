variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure map_exit_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;

variable k;
variable time;
variable time1;
variable body;
variable nort;
variable door;
variable rott;
variable lmvar1;
variable guard1;
variable guard2;
variable tur;
variable box;
variable tur1;
variable tur2;
variable seqCnt;

procedure Sequence;
procedure timed_event_p_proc;
procedure verti;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure map_exit_p_proc
begin
    set_map_var(7, 0);
    if ((global_var(GVAR_ACTEMVIL_TALK) == 2) and (map_var(10) == 0)) then begin
        nort := tile_contains_pid_obj(12512, dude_elevation, 16777701);
        move_to(nort, 6960, 0);
        set_map_var(10, 1);
        guard1 := tile_contains_pid_obj(25100, dude_elevation, 16777702);
        move_to(guard1, 7960, 0);
        time := get_day;
        time1 := get_month;
        set_map_var(11, time);
        set_map_var(12, time1);
    end
end

procedure map_enter_p_proc
begin
    debug_msg("Check_Create_Car(" + 31109 + "," + 0 + ")");
    if (not(is_loading_game)) then begin
        if (global_var(GVAR_PLAYER_GOT_CAR) != 0) then begin
            debug_msg("car_current_town == " + car_current_town + " / map_get_load_area == " + map_get_load_area);
            if ((car_current_town == map_get_load_area) or ((26 <= car_current_town) and (car_current_town <= 29) and (map_get_load_area == -1))) then begin
                debug_msg("Place_Car(" + 31109 + "," + 0 + ")");
                debug_msg("   GVAR_CAR_PLACED_TILE == " + global_var(GVAR_CAR_PLACED_TILE));
                debug_msg("   Car_At_Loc == " + (tile_contains_pid_obj(31109, 0, 33555441) != 0));
                if ((global_var(GVAR_CAR_PLACED_TILE) <= 0) or (31109 == global_var(GVAR_CAR_PLACED_TILE))) then begin
                    set_global_var(GVAR_CAR_PLACED_TILE, 31109);
                    if (not(tile_contains_pid_obj(31109, 0, 33555441) != 0)) then begin
                        Scenery_Creation := create_object_sid(33555441, 31109, 0, SCRIPT_ZSDRVCAR);
                        Scenery_Creation_Hex := 31109;
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 2) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
                            Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 2) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 2, 1);
                            Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 2) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 3, 1);
                            Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 2) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
                            Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
                            Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
                            Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
                            Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
                            Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
                            Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
                            Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 0, 1);
                            Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
                            Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 2) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 0, 1);
                            Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
                            Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 2, 1);
                            Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                    end
                end
                if (tile_contains_pid_obj(31109, 0, 33555441) != 0) then begin
                    if (not(tile_contains_pid_obj(tile_num_in_direction(tile_num_in_direction(31109, 5, 2), 4, 1), 0, 455) != 0)) then begin
                        debug_msg("placing trunk:");
                        Scenery_Creation_Ptr := 0;
                        if (party_member_obj(455) != 0) then begin
                            Scenery_Creation_Ptr := party_member_obj(455);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_GOT_CAR) == 0) then begin
                                Scenery_Creation_Ptr := create_object_sid(455, 0, 0, SCRIPT_ZICRTRNK);
                            end
                        end
                        if (Scenery_Creation_Ptr != 0) then begin
                            Scenery_Creation_Hex := tile_num_in_direction(tile_num_in_direction(31109, 5, 2), 4, 1);
                            move_to(Scenery_Creation_Ptr, Scenery_Creation_Hex, 0);
                            Scenery_Creation_Count := 0;
                            while (Scenery_Creation_Count < 1) do begin
                                Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
                                Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                                Scenery_Creation_Count := Scenery_Creation_Count + 1;
                            end
                            Scenery_Creation_Count := 0;
                            while (Scenery_Creation_Count < 1) do begin
                                Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 2, 1);
                                Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                                Scenery_Creation_Count := Scenery_Creation_Count + 1;
                            end
                        end
                        else begin
                            debug_msg("WE HAD AN ERROR WITH THE TRUNK PTR, OHHH FUCK");
                        end
                    end
                end
            end
            else begin
                if (tile_contains_pid_obj(31109, 0, 33555441) != 0) then begin
                    debug_msg("Dest_Car_Loc(" + 31109 + "," + 0 + ")");
                    Scenery_Creation_Ptr := tile_contains_pid_obj(31109, 0, 33555441);
                    if (Scenery_Creation_Ptr != 0) then begin
                        destroy_object(Scenery_Creation_Ptr);
                        Scenery_Creation_Hex := 31109;
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 2) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 2) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 2, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 2) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 3, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 2) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 0, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 2) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 0, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 2, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 1, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                        Scenery_Creation_Count := 0;
                        while (Scenery_Creation_Count < 1) do begin
                            Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 2, 1);
                            Scenery_Creation_Ptr := tile_contains_pid_obj(Scenery_Creation_Hex, 0, 33554499);
                            destroy_object(Scenery_Creation_Ptr);
                            Scenery_Creation_Count := Scenery_Creation_Count + 1;
                        end
                    end
                    Scenery_Creation_Ptr := tile_contains_pid_obj(tile_num_in_direction(tile_num_in_direction(31109, 5, 2), 4, 1), 0, 455);
                    if (Scenery_Creation_Ptr != 0) then begin
                        if (Scenery_Creation_Ptr == party_member_obj(455)) then begin
                            set_obj_visibility(Scenery_Creation_Ptr, 1);
                        end
                        else begin
                            destroy_object(Scenery_Creation_Ptr);
                        end
                    end
                end
            end
        end
        else begin
            debug_msg("the player hasn't gotten the car, can't place it");
        end
    end
    else begin
        debug_msg("sorry, can't place the car, the game's loading");
    end
    if ((get_month >= 3) and (get_month < 5)) then begin
        if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
            set_light_level(game_time_hour - 600 + 40);
        end
        else begin
            if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                set_light_level(100);
            end
            else begin
                if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                    set_light_level(100 - (game_time_hour - 1800));
                end
                else begin
                    set_light_level(40);
                end
            end
        end
    end
    else begin
        if ((get_month >= 5) and (get_month < 9)) then begin
            if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                set_light_level(game_time_hour - 500 + 40);
            end
            else begin
                if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1900));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 9) and (get_month < 11)) then begin
                if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                    set_light_level(game_time_hour - 600 + 40);
                end
                else begin
                    if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1800));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                    set_light_level(game_time_hour - 700 + 40);
                end
                else begin
                    if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1700));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
        end
    end
    if ((global_var(GVAR_AHELDER_PROVE_TALK_FLAG) == 3) and (map_var(6) == 0)) then begin
        call Sequence();
    end
    if ((global_var(GVAR_ACTEMVIL_TALK) == 2) and (map_var(10) == 1)) then begin
        call verti();
    end
end

procedure map_update_p_proc
begin
    if ((get_month >= 3) and (get_month < 5)) then begin
        if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
            set_light_level(game_time_hour - 600 + 40);
        end
        else begin
            if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                set_light_level(100);
            end
            else begin
                if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                    set_light_level(100 - (game_time_hour - 1800));
                end
                else begin
                    set_light_level(40);
                end
            end
        end
    end
    else begin
        if ((get_month >= 5) and (get_month < 9)) then begin
            if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                set_light_level(game_time_hour - 500 + 40);
            end
            else begin
                if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1900));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 9) and (get_month < 11)) then begin
                if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                    set_light_level(game_time_hour - 600 + 40);
                end
                else begin
                    if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1800));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                    set_light_level(game_time_hour - 700 + 40);
                end
                else begin
                    if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1700));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
        end
    end
end

procedure Sequence
begin
    script_overrides;
    if (seqCnt == 0) then begin
        set_map_var(6, 1);
        game_ui_disable;
        debug_msg("ECBDYGRD: tile_set_center(CENTER_TILE): " + tile_set_center(25100));
        body := create_object(16777701, 26303, 0);
        guard1 := create_object(16777405, 25504, 0);
        guard2 := create_object(16777405, 25098, 0);
        anim(body, 1000, rotation_to_tile(tile_num(body), tile_num(guard2)));
        anim(guard1, 1000, rotation_to_tile(tile_num(guard1), tile_num(guard2)));
        anim(guard2, 1000, rotation_to_tile(tile_num(guard2), tile_num(body)));
        seqCnt := seqCnt + 1;
        add_timer_event(self_obj, game_ticks(1), 1);
    end
    else begin
        if (seqCnt == 1) then begin
            float_msg(body, message_str(SCRIPT_JCKMKN, 200), FLOAT_MSG_RED);
            seqCnt := seqCnt + 1;
            add_timer_event(self_obj, game_ticks(3), 1);
        end
        else begin
            if (seqCnt == 2) then begin
                script_overrides;
                animate_move_obj_to_tile(guard1, 25301, 0);
                seqCnt := seqCnt + 1;
                add_timer_event(self_obj, game_ticks(2), 1);
            end
            else begin
                if (seqCnt == 3) then begin
                    script_overrides;
                    reg_anim_func(2, guard1);
                    reg_anim_func(1, 1);
                    reg_anim_animate(guard1, 11, -1);
                    reg_anim_func(3, 0);
                    seqCnt := seqCnt + 1;
                    add_timer_event(self_obj, game_ticks(1), 1);
                end
                else begin
                    if (seqCnt == 4) then begin
                        set_global_var(GVAR_ACJORDAN_TALKS, 1);
                        seqCnt := seqCnt + 1;
                        add_timer_event(self_obj, game_ticks(2), 1);
                    end
                    else begin
                        if (seqCnt == 5) then begin
                            animate_move_obj_to_tile(guard1, 25699, 0);
                            seqCnt := seqCnt + 1;
                            add_timer_event(self_obj, game_ticks(2), 1);
                        end
                        else begin
                            if (seqCnt == 6) then begin
                                script_overrides;
                                reg_anim_func(2, guard1);
                                reg_anim_func(1, 1);
                                reg_anim_animate(guard1, 10, -1);
                                reg_anim_func(3, 0);
                                anim(guard1, 1000, rotation_to_tile(tile_num(guard1), tile_num(body)));
                                box := create_object(539, 25700, 0);
                                seqCnt := seqCnt + 1;
                                add_timer_event(self_obj, game_ticks(1), 1);
                            end
                            else begin
                                if (seqCnt == 7) then begin
                                    float_msg(guard1, message_str(SCRIPT_JCKMKN, 201), FLOAT_MSG_GREEN);
                                    script_overrides;
                                    seqCnt := seqCnt + 1;
                                    add_timer_event(self_obj, game_ticks(2), 1);
                                end
                                else begin
                                    if (seqCnt == 8) then begin
                                        float_msg(body, message_str(SCRIPT_JCKMKN, 202), FLOAT_MSG_RED);
                                        script_overrides;
                                        seqCnt := seqCnt + 1;
                                        add_timer_event(self_obj, game_ticks(3), 1);
                                    end
                                    else begin
                                        if (seqCnt == 9) then begin
                                            anim(body, 1000, rotation_to_tile(tile_num(body), dude_tile));
                                            float_msg(body, message_str(SCRIPT_JCKMKN, 203), FLOAT_MSG_RED);
                                            script_overrides;
                                            seqCnt := seqCnt + 1;
                                            add_timer_event(self_obj, game_ticks(2), 1);
                                        end
                                        else begin
                                            if (seqCnt == 10) then begin
                                                gfade_out(60);
                                                set_global_var(GVAR_ACJORDAN_TALKS, 3);
                                                destroy_object(body);
                                                nort := create_object(16777701, 12512, 0);
                                                critter_attempt_placement(dude_obj, 12912, dude_elevation);
                                                anim(nort, 1000, rotation_to_tile(tile_num(nort), dude_tile));
                                                debug_msg("ECBDYGRD: tile_set_center(CENTER_TILE): " + tile_set_center(12512));
                                                destroy_object(box);
                                                tur1 := tile_contains_pid_obj(25100, dude_elevation, 538);
                                                tur2 := tile_contains_pid_obj(25106, dude_elevation, 16777696);
                                                destroy_object(tur1);
                                                destroy_object(tur2);
                                                game_ui_enable;
                                                guard1 := tile_contains_pid_obj(25699, dude_elevation, 16777405);
                                                destroy_object(guard1);
                                                destroy_object(guard2);
                                                door := tile_contains_pid_obj(24903, dude_elevation, 33556288);
                                                obj_open(door);
                                                set_map_var(7, 1);
                                                set_map_var(8, 1);
                                                set_global_var(GVAR_ACKLINT_PERMIT, 1);
                                                guard1 := tile_contains_pid_obj(7960, dude_elevation, 16777702);
                                                guard2 := tile_contains_pid_obj(7958, dude_elevation, 16777702);
                                                move_to(guard1, 25100, 0);
                                                move_to(guard2, 25106, 0);
                                                gfade_in(60);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        call Sequence();
    end
end

procedure verti
begin
    if (map_var(12) != 12) then begin
        if (get_month > (map_var(12) + 1)) then begin
            nort := tile_contains_pid_obj(6960, dude_elevation, 16777701);
            move_to(nort, 17732, 0);
            guard1 := tile_contains_pid_obj(7960, dude_elevation, 16777702);
            move_to(guard1, 25100, 0);
            set_map_var(10, 2);
            set_global_var(GVAR_ARTEMPLE_WITHHELP, 1);
            create_object(33554499, 14134, 0);
            create_object(33554499, 14135, 0);
            create_object(33554499, 13936, 0);
            create_object(33554499, 14137, 0);
            create_object(33554499, 14138, 0);
            create_object(33554499, 14339, 0);
            create_object(33554499, 14340, 0);
            create_object(33554499, 14541, 0);
            create_object(33554499, 14542, 0);
            create_object(33554499, 14743, 0);
            create_object(33554499, 14544, 0);
            create_object(33554499, 14745, 0);
            create_object(33554499, 14746, 0);
            create_object(33554499, 14947, 0);
            create_object(33554499, 14948, 0);
            create_object(33554499, 15149, 0);
            create_object(33554499, 15150, 0);
            create_object(33554499, 15351, 0);
            create_object(33554499, 15352, 0);
            create_object(33554499, 15350, 0);
            create_object(33554499, 15552, 0);
            create_object(33554499, 15752, 0);
            create_object(33554499, 15952, 0);
            create_object(33554499, 16152, 0);
            create_object(33554499, 16352, 0);
            create_object(33554499, 16351, 0);
            create_object(33554499, 16150, 0);
            create_object(33554499, 16349, 0);
            create_object(33554499, 16148, 0);
            create_object(33554499, 16147, 0);
            create_object(33554499, 16348, 0);
            create_object(33554499, 16547, 0);
            create_object(33554499, 16747, 0);
            create_object(33554499, 16748, 0);
            create_object(33554499, 16947, 0);
            create_object(33554499, 16746, 0);
            create_object(33554499, 16745, 0);
            create_object(33554499, 16744, 0);
            create_object(33554499, 16944, 0);
            create_object(33554499, 17145, 0);
            create_object(33554499, 17346, 0);
            create_object(33554499, 17345, 0);
            create_object(33554499, 17144, 0);
            create_object(33554499, 17343, 0);
            create_object(33554499, 17142, 0);
            create_object(33554499, 16942, 0);
            create_object(33554499, 16941, 0);
            create_object(33554499, 16740, 0);
            create_object(33554499, 16540, 0);
            create_object(33554499, 16539, 0);
            create_object(33554499, 16338, 0);
            create_object(33554499, 16138, 0);
            create_object(33554499, 16137, 0);
            create_object(33554499, 16139, 0);
            create_object(33554499, 15940, 0);
            create_object(33554499, 15941, 0);
            create_object(33554499, 15741, 0);
            create_object(33554499, 15541, 0);
            create_object(33554499, 15341, 0);
            create_object(33554499, 15140, 0);
            create_object(33554499, 15139, 0);
            create_object(33554499, 14939, 0);
            create_object(33554499, 14738, 0);
            create_object(33554499, 14736, 0);
            create_object(33554499, 14735, 0);
            create_object(33554499, 14535, 0);
            create_object(33556287, 16350, 0);
            create_object(33556134, 14334, 0);
            create_object(33556133, 14737, 0);
            create_object(33556132, 14741, 0);
            create_object(33556131, 16541, 0);
            create_object(33556130, 14346, 0);
            create_object(33556135, 13941, 0);
            create_object(33556136, 14536, 0);
            create_object(33556137, 15942, 0);
        end
        else begin
            if ((map_var(12) == 12) and (get_month == 1)) then begin
                nort := tile_contains_pid_obj(6960, dude_elevation, 16777701);
                move_to(nort, 17732, 0);
                guard1 := tile_contains_pid_obj(7960, dude_elevation, 16777702);
                set_map_var(10, 2);
                move_to(guard1, 25100, 0);
                set_global_var(GVAR_ARTEMPLE_WITHHELP, 1);
                create_object(33554499, 14134, 0);
                create_object(33554499, 14135, 0);
                create_object(33554499, 13936, 0);
                create_object(33554499, 14137, 0);
                create_object(33554499, 14138, 0);
                create_object(33554499, 14339, 0);
                create_object(33554499, 14340, 0);
                create_object(33554499, 14541, 0);
                create_object(33554499, 14542, 0);
                create_object(33554499, 14743, 0);
                create_object(33554499, 14544, 0);
                create_object(33554499, 14745, 0);
                create_object(33554499, 14746, 0);
                create_object(33554499, 14947, 0);
                create_object(33554499, 14948, 0);
                create_object(33554499, 15149, 0);
                create_object(33554499, 15150, 0);
                create_object(33554499, 15351, 0);
                create_object(33554499, 15352, 0);
                create_object(33554499, 15350, 0);
                create_object(33554499, 15552, 0);
                create_object(33554499, 15752, 0);
                create_object(33554499, 15952, 0);
                create_object(33554499, 16152, 0);
                create_object(33554499, 16352, 0);
                create_object(33554499, 16351, 0);
                create_object(33554499, 16150, 0);
                create_object(33554499, 16349, 0);
                create_object(33554499, 16148, 0);
                create_object(33554499, 16147, 0);
                create_object(33554499, 16348, 0);
                create_object(33554499, 16547, 0);
                create_object(33554499, 16747, 0);
                create_object(33554499, 16748, 0);
                create_object(33554499, 16947, 0);
                create_object(33554499, 16746, 0);
                create_object(33554499, 16745, 0);
                create_object(33554499, 16744, 0);
                create_object(33554499, 16944, 0);
                create_object(33554499, 17145, 0);
                create_object(33554499, 17346, 0);
                create_object(33554499, 17345, 0);
                create_object(33554499, 17144, 0);
                create_object(33554499, 17343, 0);
                create_object(33554499, 17142, 0);
                create_object(33554499, 16942, 0);
                create_object(33554499, 16941, 0);
                create_object(33554499, 16740, 0);
                create_object(33554499, 16540, 0);
                create_object(33554499, 16539, 0);
                create_object(33554499, 16338, 0);
                create_object(33554499, 16138, 0);
                create_object(33554499, 16137, 0);
                create_object(33554499, 16139, 0);
                create_object(33554499, 15940, 0);
                create_object(33554499, 15941, 0);
                create_object(33554499, 15741, 0);
                create_object(33554499, 15541, 0);
                create_object(33554499, 15341, 0);
                create_object(33554499, 15140, 0);
                create_object(33554499, 15139, 0);
                create_object(33554499, 14939, 0);
                create_object(33554499, 14738, 0);
                create_object(33554499, 14736, 0);
                create_object(33554499, 14735, 0);
                create_object(33554499, 14535, 0);
                create_object(33556287, 16350, 0);
                create_object(33556134, 14334, 0);
                create_object(33556133, 14737, 0);
                create_object(33556132, 14741, 0);
                create_object(33556131, 16541, 0);
                create_object(33556130, 14346, 0);
                create_object(33556135, 13941, 0);
                create_object(33556136, 14536, 0);
                create_object(33556137, 15942, 0);
            end
        end
    end
end
