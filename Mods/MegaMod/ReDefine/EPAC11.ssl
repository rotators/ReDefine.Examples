variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure critter_p_proc;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node004a;
procedure Node999;
procedure Node005a;
procedure Node008;
procedure Leave_p_proc;

variable Only_Once;

procedure timed_event_p_proc;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if ((local_var(7) == 0) and (tile_distance_objs(dude_obj, self_obj) < 6)) then begin
        set_local_var(7, 1);
        dialogue_system_enter;
    end
    if (local_var(4) == 2) then begin
        call Leave_p_proc();
    end
    if (local_var(4) == 3) then begin
        destroy_object(self_obj);
    end
end

procedure use_p_proc
begin
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 0) then begin
        display_mstr(100);
    end
    else begin
        display_mstr(101);
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(102);
end

procedure use_skill_on_p_proc
begin
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
end

procedure map_enter_p_proc
begin
end

procedure map_update_p_proc
begin
end

procedure talk_p_proc
begin
    if (local_var(4) == 1) then begin
        start_gdialog(1386, self_obj, 4, -1, -1);
        gsay_start;
        call Node007();
        gsay_end;
        end_dialogue;
    end
    else begin
        if (local_var(4) == 0) then begin
            start_gdialog(1334, self_obj, 4, -1, -1);
            gsay_start;
            call Node001();
            gsay_end;
            end_dialogue;
        end
    end
end

procedure Node001
begin
    Reply(200);
    giq_option(4, NAME, 201, Node002, NEUTRAL_REACTION);
end

procedure Node002
begin
    Reply(202);
    if (dude_iq >= 7) then begin
        giq_option(4, NAME, 203, Node003, NEUTRAL_REACTION);
    end
    if (dude_iq <= 6) then begin
        giq_option(4, NAME, 204, Node003, NEUTRAL_REACTION);
    end
end

procedure Node003
begin
    Reply(205);
    giq_option(4, NAME, 206, Node004, NEUTRAL_REACTION);
    giq_option(4, NAME, 207, Node999, NEUTRAL_REACTION);
end

procedure Node004
begin
    Reply(208);
    giq_option(4, NAME, 209, Node004a, NEUTRAL_REACTION);
end

procedure Node005
begin
    Reply(210);
    giq_option(4, NAME, 211, Node005a, NEUTRAL_REACTION);
end

procedure Node006
begin
    Reply(212);
    giq_option(4, NAME, 213, Node999, NEUTRAL_REACTION);
    set_local_var(4, 2);
end

procedure Node007
begin
    Reply(214);
    giq_option(4, NAME, 215, Node004, NEUTRAL_REACTION);
end

procedure Node004a
begin
    if (has_skill(dude_obj, SKILL_UNARMED_COMBAT) <= 50) then begin
        call Node005();
    end
    else begin
        if (has_skill(dude_obj, SKILL_UNARMED_COMBAT) > 50) then begin
            call Node006();
        end
    end
end

procedure Node999
begin
    debug_msg("LVAR_Herebefore == " + local_var(4));
    if (local_var(4) == 0) then begin
        set_local_var(4, 1);
    end
end

procedure Node005a
begin
    game_ui_disable;
    gfade_out(10);
    game_ui_enable;
    gfade_in(10);
    critter_mod_skill(dude_obj, SKILL_UNARMED_COMBAT, 20);
    game_time_advance(60 * (60 * 10) * 3);
    call Node008();
end

procedure Node008
begin
    Reply(216);
    giq_option(4, NAME, 217, Node999, NEUTRAL_REACTION);
    set_local_var(4, 2);
end

procedure Leave_p_proc
begin
    float_msg(self_obj, mstr(218), FLOAT_MSG_YELLOW);
    game_ui_disable;
    gfade_out(10);
    set_local_var(4, 3);
    game_ui_enable;
    gfade_in(10);
end

procedure timed_event_p_proc
begin
    if (((critter_state(self_obj) bwand 2) == 0) and not(combat_is_initialized)) then begin
        reg_anim_func(2, self_obj);
        reg_anim_func(1, 1);
        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), 3), 0);
        reg_anim_func(3, 0);
    end
    add_timer_event(self_obj, game_ticks(random(3, 5)), 1);
end
