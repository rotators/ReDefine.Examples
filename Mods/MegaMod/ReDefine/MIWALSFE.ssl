variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;

variable farrel_caught;

import variable modoc_farrel_obj;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure map_enter_p_proc
begin
    if ((CUR_MAP_MODINN) and (elevation(self_obj) != ((global_var(GVAR_MODOC_GENERIC_FLAG_1) bwand 1) != 0))) then begin
        move_to(self_obj, tile_num(self_obj), (global_var(GVAR_MODOC_GENERIC_FLAG_1) bwand 1) != 0);
    end
    if ((is_loading_game == 0) and (((global_var(GVAR_MODOC_GENERIC_FLAG_1) bwand 65536) != 0) == 0)) then begin
        if (obj_is_open(self_obj)) then begin
            obj_close(self_obj);
        end
        set_local_var(0, 1);
    end
end

procedure map_update_p_proc
begin
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
    if (map_var(0) == 0) then begin
        set_map_var(0, 1);
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(100);
    if (map_var(0) == 0) then begin
        set_map_var(0, 1);
    end
end

procedure use_p_proc
begin
    debug_msg("use_p_proc");
    farrel_caught := 0;
    if (not((global_var(GVAR_MODOC_GENERIC_FLAG_1) bwand 65536) != 0)) then begin
        if (obj_can_see_obj(modoc_farrel_obj, source_obj)) then begin
            debug_msg("farrel caught source_obj");
            script_overrides;
            farrel_caught := 1;
            if ((map_var(0) >= 1) == 0) then begin
                set_map_var(0, 2);
            end
            if (map_var(0) < 5) then begin
                set_map_var(0, map_var(0) + 1);
            end
        end
        else begin
            debug_msg("farrel can't see source obj");
        end
    end
    else begin
        debug_msg("modoc_farrel_obj == 0");
    end
    if (map_var(0) == 0) then begin
        set_map_var(0, 1);
    end
    if (local_var(0) == 1) then begin
        script_overrides;
        display_mstr(110);
    end
end

procedure use_obj_on_p_proc
begin
    debug_msg("use_obj_on_p_proc");
    farrel_caught := 0;
    if (not((global_var(GVAR_MODOC_GENERIC_FLAG_1) bwand 65536) != 0)) then begin
        if (obj_can_see_obj(modoc_farrel_obj, source_obj)) then begin
            debug_msg("farrel caught source_obj");
            script_overrides;
            farrel_caught := 1;
            if ((map_var(0) >= 1) == 0) then begin
                set_map_var(0, 2);
            end
            if (map_var(0) < 5) then begin
                set_map_var(0, map_var(0) + 1);
            end
        end
        else begin
            debug_msg("farrel can't see source obj");
        end
    end
    else begin
        debug_msg("modoc_farrel_obj == 0");
    end
    if (map_var(0) == 0) then begin
        set_map_var(0, 1);
    end
    if (farrel_caught == 0) then begin
        if ((obj_pid(obj_being_used_with) == 84) or (obj_pid(obj_being_used_with) == 410)) then begin
            script_overrides;
            if (is_success(roll_vs_skill(dude_obj, 9, -10))) then begin
                debug_msg("message pass == " + mstr(200));
                give_exp_points(25);
                display_msg(g_mstr(100) + 25 + g_mstr(101));
                if (local_var(0) == 1) then begin
                    set_local_var(0, 0);
                end
                else begin
                    set_local_var(0, 1);
                end
                display_mstr(200 + local_var(0));
            end
            else begin
                debug_msg("message fail == " + mstr(210));
                display_mstr(210 + local_var(0));
            end
        end
    end
end

procedure use_skill_on_p_proc
begin
    debug_msg("use_skill_on_p_proc");
    farrel_caught := 0;
    if (not((global_var(GVAR_MODOC_GENERIC_FLAG_1) bwand 65536) != 0)) then begin
        if (obj_can_see_obj(modoc_farrel_obj, source_obj)) then begin
            debug_msg("farrel caught source_obj");
            script_overrides;
            farrel_caught := 1;
            if ((map_var(0) >= 1) == 0) then begin
                set_map_var(0, 2);
            end
            if (map_var(0) < 5) then begin
                set_map_var(0, map_var(0) + 1);
            end
        end
        else begin
            debug_msg("farrel can't see source obj");
        end
    end
    else begin
        debug_msg("modoc_farrel_obj == 0");
    end
    if (map_var(0) == 0) then begin
        set_map_var(0, 1);
    end
    if (farrel_caught == 0) then begin
        if (action_being_used == 9) then begin
            script_overrides;
            if (is_success(roll_vs_skill(dude_obj, 9, -60))) then begin
                debug_msg("message pass == " + mstr(200));
                give_exp_points(25);
                display_msg(g_mstr(100) + 25 + g_mstr(101));
                if (local_var(0) == 1) then begin
                    set_local_var(0, 0);
                end
                else begin
                    set_local_var(0, 1);
                end
                display_mstr(200 + local_var(0));
            end
            else begin
                debug_msg("message fail == " + mstr(210));
                display_mstr(210 + local_var(0));
            end
        end
    end
end
