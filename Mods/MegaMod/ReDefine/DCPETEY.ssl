variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;
variable caught_thief;
variable the_follow_obj;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_exit_p_proc;
procedure timed_event_p_proc;
procedure Node998;
procedure Node999;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node990;

variable place;
variable stage;

import variable flick_obj;
import variable tubby_obj;

procedure push_p_proc;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(4) bwand 2) != 0) then begin
            if (critter_is_fleeing(self_obj)) then begin
                if (anim_busy(self_obj) == 0) then begin
                    if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                        if (anim_busy(self_obj) == 0) then begin
                            global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                                debug_msg("flee loop: rot == " + global_temp);
                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                global_temp := (global_temp + 1) % 6;
                            end
                        end
                    end
                end
            end
            else begin
                attack(dude_obj);
            end
        end
        else begin
            if ((local_var(5) != 1) and (stage < 2)) then begin
                if (in_dialog == 0) then begin
                    in_dialog := 1;
                    start_gdialog(44, self_obj, 4, -1, -1);
                    gsay_start;
                    call Node004();
                    gsay_end;
                    end_dialogue;
                    in_dialog := 0;
                end
                else begin
                    call Node004();
                end
                set_local_var(5, 1);
                set_local_var(4, local_var(4) bwor 1);
            end
            else begin
                if (stage < 2) then begin
                    add_timer_event(self_obj, random(100, 175), 0);
                end
            end
        end
    end
    if (not(anim_busy(self_obj))) then begin
        if (local_var(8) != 0) then begin
            add_timer_event(self_obj, game_ticks(1), 7);
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        call Node998();
    end
end

procedure talk_p_proc
begin
    if (in_dialog == 0) then begin
        in_dialog := 1;
        start_gdialog(44, self_obj, 4, -1, -1);
        gsay_start;
        call Node001();
        gsay_end;
        end_dialogue;
        in_dialog := 0;
    end
    else begin
        call Node001();
    end
    set_local_var(4, local_var(4) bwor 1);
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (critter_kill_type(self_obj) == 2) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 0);
        debug_msg("Player gains " + 0 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100 + ((local_var(4) bwand 1) != 0));
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(150 + ((local_var(4) bwand 1) != 0));
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(4, local_var(4) bwor 8);
        set_local_var(4, local_var(4) bwor 2);
    end
end

procedure map_enter_p_proc
begin
    if (local_var(6) == 0) then begin
        set_local_var(6, tile_num(self_obj));
    end
    set_local_var(8, 0);
    debug_msg("Home_Tile" + local_var(6));
    if (map_first_run) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 9);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_PEASANTS);
    end
    stage := 1;
    add_timer_event(self_obj, random(800, 1000), 5);
    add_timer_event(self_obj, random(200, 300), 4);
    add_timer_event(self_obj, random(150, 250), 1);
end

procedure map_exit_p_proc
begin
end

procedure timed_event_p_proc
begin
    if (combat_is_initialized == 0) then begin
        if (fixed_param == 0) then begin
            float_msg(self_obj, mstr(random(202 - ((dude_gender == 0) * 2), 204 + ((dude_gender == 1) * 2))), FLOAT_MSG_YELLOW);
            metarule3(100, self_obj, 0, 0);
            add_timer_event(self_obj, game_ticks(random(75, 100)), 0);
        end
        else begin
            if (fixed_param == 4) then begin
                if (local_var(8) == 0) then begin
                    debug_msg("fixed param 2");
                    float_msg(self_obj, mstr(random(230, 235)), FLOAT_MSG_YELLOW);
                end
                add_timer_event(self_obj, random(200, 300), 4);
            end
            else begin
                if (fixed_param == 5) then begin
                    debug_msg("Going to buy drugs!");
                    reg_anim_func(2, self_obj);
                    if (stage == 1) then begin
                        if ((global_var(GVAR_DEN_FLAG_1) bwand 4) != 0) then begin
                            place := 2;
                            float_msg(self_obj, mstr(random(300, 302)), FLOAT_MSG_YELLOW);
                        end
                        else begin
                            if ((global_var(GVAR_DEN_FLAG_1) bwand 8) != 0) then begin
                                place := 1;
                                float_msg(self_obj, mstr(random(305, 307)), FLOAT_MSG_YELLOW);
                            end
                            else begin
                                if (((global_var(GVAR_DEN_FLAG_1) bwand 4) != 0) and ((global_var(GVAR_DEN_FLAG_1) bwand 8) != 0)) then begin
                                    if ((global_var(GVAR_DEN_FLAG_1) bwand 8) != 0) then begin
                                        float_msg(self_obj, mstr(random(305, 307)), FLOAT_MSG_YELLOW);
                                    end
                                    else begin
                                        if ((global_var(GVAR_DEN_FLAG_1) bwand 4) != 0) then begin
                                            float_msg(self_obj, mstr(random(300, 302)), FLOAT_MSG_YELLOW);
                                        end
                                    end
                                end
                                else begin
                                    place := random(1, 2);
                                end
                            end
                        end
                        if (place == 1) then begin
                            debug_msg("place: " + place);
                            set_local_var(8, 17508);
                            animate_move_obj_to_tile(self_obj, 17508, 0);
                            add_timer_event(self_obj, game_ticks(1), 7);
                        end
                        else begin
                            if (place == 2) then begin
                                debug_msg("place: " + place);
                                set_local_var(8, 26684);
                                animate_move_obj_to_tile(self_obj, 26684, 0);
                                add_timer_event(self_obj, game_ticks(1), 7);
                            end
                        end
                    end
                    else begin
                        if (stage == 2) then begin
                            if (place == 1) then begin
                                stage := 3;
                                float_msg(self_obj, mstr(random(320, 321)), FLOAT_MSG_YELLOW);
                                add_timer_event(self_obj, game_ticks(5), 5);
                            end
                            else begin
                                if (place == 2) then begin
                                    stage := 3;
                                    float_msg(self_obj, mstr(random(324, 325)), FLOAT_MSG_YELLOW);
                                    add_timer_event(self_obj, game_ticks(5), 5);
                                end
                            end
                        end
                        else begin
                            if (stage == 3) then begin
                                stage := 4;
                                if (place == 1) then begin
                                    float_msg(tubby_obj, mstr(random(340, 341)), FLOAT_MSG_YELLOW);
                                end
                                else begin
                                    float_msg(flick_obj, mstr(random(340, 341)), FLOAT_MSG_YELLOW);
                                end
                                add_timer_event(self_obj, game_ticks(3), 5);
                            end
                            else begin
                                if (stage == 4) then begin
                                    if (place == 1) then begin
                                        stage := 5;
                                        float_msg(self_obj, mstr(random(330, 331)), FLOAT_MSG_YELLOW);
                                        add_timer_event(self_obj, game_ticks(3), 5);
                                    end
                                    else begin
                                        if (place == 2) then begin
                                            stage := 5;
                                            float_msg(self_obj, mstr(random(334, 335)), FLOAT_MSG_YELLOW);
                                            add_timer_event(self_obj, game_ticks(3), 5);
                                        end
                                    end
                                end
                                else begin
                                    if (stage == 5) then begin
                                        stage := 0;
                                        debug_msg("I should head home now.");
                                        debug_msg("Home_Tile: " + local_var(6));
                                        set_local_var(8, local_var(6));
                                        debug_msg("Should_Animate:" + local_var(8));
                                        animate_move_obj_to_tile(self_obj, local_var(6), 0);
                                        add_timer_event(self_obj, game_ticks(1), 7);
                                    end
                                end
                            end
                        end
                    end
                end
                else begin
                    if (fixed_param == 1) then begin
                        if (local_var(8) == 0) then begin
                            if (anim_busy(self_obj) == 0) then begin
                                debug_msg("wander...");
                                if (tile_num(self_obj) != local_var(6)) then begin
                                    animate_move_obj_to_tile(self_obj, local_var(6), 0);
                                end
                                else begin
                                    debug_msg("should wander to a different location other than home");
                                    if (random(1, 5) == 1) then begin
                                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(1, 5), random(4, 7)), 0);
                                    end
                                    else begin
                                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), (obj_get_rot(self_obj) + 3) % 6, random(4, 7)), 0);
                                    end
                                end
                            end
                        end
                        add_timer_event(self_obj, random(150, 250), 1);
                    end
                    else begin
                        if (fixed_param == 7) then begin
                            if (not(anim_busy(self_obj))) then begin
                                debug_msg("ensure_animation");
                                if (local_var(8) != 0) then begin
                                    if (tile_num(self_obj) != local_var(8)) then begin
                                        animate_move_obj_to_tile(self_obj, local_var(8), 0);
                                        add_timer_event(self_obj, game_ticks(1), 7);
                                    end
                                    else begin
                                        if (stage == 1) then begin
                                            stage := 2;
                                            set_local_var(8, 0);
                                            add_timer_event(self_obj, game_ticks(1), 5);
                                        end
                                        else begin
                                            set_local_var(8, 0);
                                            add_timer_event(self_obj, random(1100, 1300), 5);
                                        end
                                    end
                                end
                            end
                            else begin
                                add_timer_event(self_obj, game_ticks(1), 7);
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure Node998
begin
    set_local_var(4, local_var(4) bwor 2);
end

procedure Node999
begin
end

procedure Node001
begin
    Reply(155);
    if (item_caps_total(dude_obj) < 5) then begin
        giq_option(4, NAME, 175, Node003, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 156, Node990, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 157, Node003, NEUTRAL_REACTION);
    giq_option(-3, NAME, 158, Node005, NEUTRAL_REACTION);
end

procedure Node002
begin
    Reply(164);
    giq_option(4, NAME, 165, Node999, NEUTRAL_REACTION);
    if (stage == 0) then begin
        add_timer_event(self_obj, game_ticks(2), 5);
    end
end

procedure Node003
begin
    Reply(162);
    giq_option(4, NAME, 166, Node999, NEUTRAL_REACTION);
end

procedure Node004
begin
    Reply(167 + ((dude_gender == 1) * 4));
    giq_option(-3, NAME, 158, Node005, NEUTRAL_REACTION);
    if (item_caps_total(dude_obj) < 5) then begin
        giq_option(4, NAME, 175, Node003, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 168 + ((dude_gender == 1) * 4), Node990, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 169 + ((dude_gender == 1) * 4), Node003, NEUTRAL_REACTION);
    giq_option(4, NAME, 170 + ((dude_gender == 1) * 4), Node003, NEUTRAL_REACTION);
end

procedure Node005
begin
    Reply(159);
    giq_option(-3, NAME, 163, Node999, NEUTRAL_REACTION);
end

procedure Node990
begin
    item_caps_adjust(dude_obj, -5);
    if (local_var(7) == 0) then begin
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 1);
    end
    debug_msg("Player gains " + 1 + " Karma Points.");
    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
    set_global_var(GVAR_KARMA_DEFENDER, 0);
    set_global_var(GVAR_KARMA_WANDERER, 0);
    set_global_var(GVAR_KARMA_BETRAYER, 0);
    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
    set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
    if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
    end
    else begin
        if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                    set_global_var(GVAR_KARMA_DEFENDER, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                        set_global_var(GVAR_KARMA_WANDERER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                            set_global_var(GVAR_KARMA_BETRAYER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                end
                                else begin
                                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    set_local_var(7, 1);
    call Node002();
end

procedure push_p_proc
begin
end
