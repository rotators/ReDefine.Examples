variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable last_timed_obj;
variable last_timed_param;
variable check_still_kill;
variable stored_msg;
variable stored_node;
variable top_msg;
variable var_num;

procedure ChooseFromList;
procedure CLICK_PREV;
procedure CLICK_0;
procedure CLICK_1;
procedure CLICK_2;
procedure CLICK_3;
procedure CLICK_4;
procedure CLICK_MORE;

variable floater_patch_msg;
variable hs_temp;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure push_p_proc;
procedure Node998;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure NoParts;
procedure NoPartsA;
procedure NoPartsB;
procedure Node999;
procedure Node990;
procedure Node989;
procedure Node988;
procedure Node987;
procedure Node986;
procedure Node985;
procedure Node984;
procedure Node983;
procedure Node982;
procedure Node981;
procedure Node980;
procedure Node979;
procedure Node978;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure ChooseFromList
begin
    variable LVar0 := 0;
    Reply(stored_msg);
    if (message_str(SCRIPT_NEWR1, top_msg - 1) != "") then begin
        giq_option(1, NAME, message_str(SCRIPT_NEWR1, 150), CLICK_PREV, NEUTRAL_REACTION);
    end
    if (LVar0 == 0) then begin
        if (message_str(SCRIPT_NEWR1, top_msg + 0) != "") then begin
            giq_option(1, NAME, message_str(SCRIPT_NEWR1, top_msg + 0), CLICK_0, NEUTRAL_REACTION);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(SCRIPT_NEWR1, top_msg + 1) != "") then begin
            giq_option(1, NAME, message_str(SCRIPT_NEWR1, top_msg + 1), CLICK_1, NEUTRAL_REACTION);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(SCRIPT_NEWR1, top_msg + 2) != "") then begin
            giq_option(1, NAME, message_str(SCRIPT_NEWR1, top_msg + 2), CLICK_2, NEUTRAL_REACTION);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(SCRIPT_NEWR1, top_msg + 3) != "") then begin
            giq_option(1, NAME, message_str(SCRIPT_NEWR1, top_msg + 3), CLICK_3, NEUTRAL_REACTION);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(SCRIPT_NEWR1, top_msg + 4) != "") then begin
            giq_option(1, NAME, message_str(SCRIPT_NEWR1, top_msg + 4), CLICK_4, NEUTRAL_REACTION);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(SCRIPT_NEWR1, top_msg + 5) != "") then begin
            giq_option(1, NAME, message_str(SCRIPT_NEWR1, 151), CLICK_MORE, NEUTRAL_REACTION);
        end
    end
end

procedure CLICK_PREV
begin
    top_msg := top_msg - 5;
    call ChooseFromList();
end

procedure CLICK_0
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + (top_msg % 100));
    call stored_node();
end

procedure CLICK_1
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + ((top_msg + 1) % 100));
    call stored_node();
end

procedure CLICK_2
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + ((top_msg + 2) % 100));
    call stored_node();
end

procedure CLICK_3
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + ((top_msg + 3) % 100));
    call stored_node();
end

procedure CLICK_4
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + ((top_msg + 4) % 100));
    call stored_node();
end

procedure CLICK_MORE
begin
    top_msg := top_msg + 5;
    call ChooseFromList();
end

procedure start
begin
end

procedure critter_p_proc
begin
    if (((local_var(0) bwand 2) != 0) and obj_can_see_obj(self_obj, dude_obj)) then begin
        if (critter_is_fleeing(self_obj)) then begin
            if (anim_busy(self_obj) == 0) then begin
                if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                    if (anim_busy(self_obj) == 0) then begin
                        global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                        global_temp := (global_temp + 1) % 6;
                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                            debug_msg("flee loop: rot == " + global_temp);
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                        end
                    end
                end
            end
        end
        else begin
            attack(dude_obj);
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        call Node998();
    end
end

procedure talk_p_proc
begin
    if (((global_var(GVAR_NEW_RENO_FLAG_2) bwand 1048576) != 0) == 0) then begin
        if (in_dialog == 0) then begin
            in_dialog := 1;
            start_gdialog(417, self_obj, 4, -1, -1);
            gsay_start;
            call Node002();
            gsay_end;
            end_dialogue;
            in_dialog := 0;
        end
        else begin
            call Node002();
        end
        set_local_var(0, local_var(0) bwor 1);
        if ((global_var(GVAR_NEW_RENO_FLAG_2) bwand 1048576) != 0) then begin
            float_msg(dude_obj, mstr(400), FLOAT_MSG_YELLOW);
            kill_critter(self_obj, 22);
        end
        else begin
            last_timed_obj := self_obj;
            last_timed_param := last_timed_param;
            rm_fixed_timer_event(self_obj, 1);
            add_timer_event(self_obj, game_ticks(25) + random(0, game_ticks(35 - 25)), 1);
        end
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (critter_kill_type(self_obj) == KILL_TYPE_children_kills) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(GVAR_TOWN_REP_NEW_RENO, global_var(GVAR_TOWN_REP_NEW_RENO) + -8);
                debug_msg("Added " + -8 + " to Town Rep");
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(GVAR_TOWN_REP_NEW_RENO, global_var(GVAR_TOWN_REP_NEW_RENO) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
    set_global_var(GVAR_NEW_RENO_FLAG_2, global_var(GVAR_NEW_RENO_FLAG_2) bwor 1048576);
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100 + ((local_var(0) bwand 1) != 0));
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(150 + ((local_var(0) bwand 1) != 0));
    set_local_var(0, local_var(0) bwor 4);
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(0, local_var(0) bwor 8);
        set_local_var(0, local_var(0) bwor 2);
    end
end

procedure map_enter_p_proc
begin
    if (is_loading_game == 0) then begin
        if (map_first_run) then begin
            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 157);
            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_ALGERNON);
        end
        last_timed_obj := self_obj;
        last_timed_param := last_timed_param;
        rm_fixed_timer_event(self_obj, 1);
        add_timer_event(self_obj, game_ticks(5) + random(0, game_ticks(10 - 5)), 1);
        last_timed_obj := self_obj;
        last_timed_param := last_timed_param;
        rm_fixed_timer_event(self_obj, 21);
        add_timer_event(self_obj, game_ticks(3) + random(0, game_ticks(5 - 3)), 21);
    end
end

procedure timed_event_p_proc
begin
    if (((global_var(GVAR_NEW_RENO_FLAG_2) bwand 1048576) != 0) == 0) then begin
        if (fixed_param == 1) then begin
            call Node001();
            last_timed_obj := self_obj;
            last_timed_param := last_timed_param;
            rm_fixed_timer_event(self_obj, 1);
            add_timer_event(self_obj, game_ticks(5) + random(0, game_ticks(10 - 5)), 1);
        end
        else begin
            if (fixed_param == 21) then begin
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(3, 10)), 0);
                last_timed_obj := self_obj;
                last_timed_param := last_timed_param;
                rm_fixed_timer_event(self_obj, 21);
                add_timer_event(self_obj, game_ticks(5) + random(0, game_ticks(15 - 5)), 21);
            end
        end
    end
end

procedure push_p_proc
begin
end

procedure Node998
begin
    if (((local_var(0) bwand 2) != 0) == 0) then begin
        set_local_var(0, local_var(0) bwor 2);
    end
end

procedure Node001
begin
    float_msg(self_obj, mstr(random(200, 214)), FLOAT_MSG_YELLOW);
end

procedure Node002
begin
    if ((global_var(GVAR_NEW_RENO_FLAG_2) bwand 262144) != 0) then begin
        Reply(220 + (((global_var(GVAR_NEW_RENO_FLAG_2) bwand 131072) != 0) == 0));
        giq_option(4, NAME, 226, Node007, NEUTRAL_REACTION);
    end
    else begin
        Reply(mstr(220 + (((global_var(GVAR_NEW_RENO_FLAG_2) bwand 131072) != 0) == 0)) + mstr(222));
        giq_option(4, NAME, 225, Node007, NEUTRAL_REACTION);
    end
    set_global_var(GVAR_NEW_RENO_FLAG_2, global_var(GVAR_NEW_RENO_FLAG_2) bwor 131072);
    giq_option(-3, NAME, 223, Node003, GOOD_REACTION);
    giq_option(-3, NAME, 224, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 227, Node999, NEUTRAL_REACTION);
end

procedure Node003
begin
    Reply(230);
    giq_option(-3, NAME, 231, Node004, NEUTRAL_REACTION);
    giq_option(-3, NAME, 232, Node999, NEUTRAL_REACTION);
end

procedure Node004
begin
    set_global_var(GVAR_NEW_RENO_FLAG_2, global_var(GVAR_NEW_RENO_FLAG_2) bwor 1048576);
    set_global_var(GVAR_NEW_RENO_FLAG_2, global_var(GVAR_NEW_RENO_FLAG_2) bwor 524288);
    Reply(235);
    giq_option(-3, NAME, 236, Node005, NEUTRAL_REACTION);
    giq_option(-3, NAME, 237, Node999, NEUTRAL_REACTION);
end

procedure Node005
begin
    Reply(240);
    giq_option(-3, NAME, 241, Node006, NEUTRAL_REACTION);
    giq_option(-3, NAME, 237, Node999, NEUTRAL_REACTION);
end

procedure Node006
begin
    Reply(245);
    giq_option(-3, NAME, 237, Node999, NEUTRAL_REACTION);
end

procedure Node007
begin
    Reply(250);
    if ((obj_is_carrying_obj_pid(dude_obj, 313) > 0) or (obj_is_carrying_obj_pid(dude_obj, 18) > 0) or (obj_is_carrying_obj_pid(dude_obj, 16) > 0) or (obj_is_carrying_obj_pid(dude_obj, 24) > 0)) then begin
        giq_option(4, NAME, 251, Node009, NEUTRAL_REACTION);
    end
    if ((obj_is_carrying_obj_pid(dude_obj, 10) > 0) or (obj_is_carrying_obj_pid(dude_obj, 118) > 0) or (obj_is_carrying_obj_pid(dude_obj, 23) > 0) or (obj_is_carrying_obj_pid(dude_obj, 15) > 0) or (obj_is_carrying_obj_pid(dude_obj, 351) > 0) or (obj_is_carrying_obj_pid(dude_obj, 11) > 0)) then begin
        giq_option(4, NAME, 252, Node010, NEUTRAL_REACTION);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 32) > 0) then begin
        giq_option(4, NAME, 253, Node011, NEUTRAL_REACTION);
    end
    if ((obj_is_carrying_obj_pid(dude_obj, 235) > 0) or (obj_is_carrying_obj_pid(dude_obj, 160) > 0)) then begin
        giq_option(4, NAME, 254, Node012, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 255 + (global_var(GVAR_PLAYER_REPUTATION) < 0), Node999, NEUTRAL_REACTION);
end

procedure Node008
begin
    gfade_out(60 * 10);
    game_time_advance(60 * (60 * 10));
    set_global_var(GVAR_NEW_RENO_FLAG_2, global_var(GVAR_NEW_RENO_FLAG_2) bwor 262144);
    gfade_in(60 * 10);
    Reply(260);
    giq_option(4, NAME, 261, Node007, NEUTRAL_REACTION);
    giq_option(4, NAME, 262, Node999, NEUTRAL_REACTION);
end

procedure Node009
begin
    Reply(265);
    if (obj_is_carrying_obj_pid(dude_obj, 313) > 0) then begin
        giq_option(4, NAME, 266, Node990, NEUTRAL_REACTION);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 18) > 0) then begin
        giq_option(4, NAME, 267, Node989, NEUTRAL_REACTION);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 16) > 0) then begin
        giq_option(4, NAME, 268, Node988, NEUTRAL_REACTION);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 24) > 0) then begin
        giq_option(4, NAME, 269, Node987, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 270, Node007, NEUTRAL_REACTION);
    giq_option(4, NAME, 271 + (global_var(GVAR_PLAYER_REPUTATION) < 0), Node999, NEUTRAL_REACTION);
end

procedure Node010
begin
    Reply(265);
    if (obj_is_carrying_obj_pid(dude_obj, 10) > 0) then begin
        giq_option(4, NAME, 276, Node986, NEUTRAL_REACTION);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 23) > 0) then begin
        giq_option(4, NAME, 277, Node985, NEUTRAL_REACTION);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 351) > 0) then begin
        giq_option(4, NAME, 278, Node984, NEUTRAL_REACTION);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 118) > 0) then begin
        giq_option(4, NAME, 279, Node983, NEUTRAL_REACTION);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 11) > 0) then begin
        giq_option(4, NAME, 280, Node982, NEUTRAL_REACTION);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 15) > 0) then begin
        giq_option(4, NAME, 281, Node981, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 270, Node007, NEUTRAL_REACTION);
    giq_option(4, NAME, 271 + (global_var(GVAR_PLAYER_REPUTATION) < 0), Node999, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(265);
    if (obj_is_carrying_obj_pid(dude_obj, 32) > 0) then begin
        giq_option(4, NAME, 291 + (global_var(GVAR_PLAYER_REPUTATION) >= 0), Node980, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 270, Node007, NEUTRAL_REACTION);
    giq_option(4, NAME, 271 + (global_var(GVAR_PLAYER_REPUTATION) < 0), Node999, NEUTRAL_REACTION);
end

procedure Node012
begin
    Reply(265);
    if (obj_is_carrying_obj_pid(dude_obj, 160) > 0) then begin
        giq_option(4, NAME, 301, Node979, NEUTRAL_REACTION);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 235) > 0) then begin
        giq_option(4, NAME, 302, Node978, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 270, Node007, NEUTRAL_REACTION);
    giq_option(4, NAME, 271 + (global_var(GVAR_PLAYER_REPUTATION) < 0), Node999, NEUTRAL_REACTION);
end

procedure NoParts
begin
    Reply(500);
    giq_option(4, NAME, 501, NoPartsA, NEUTRAL_REACTION);
end

procedure NoPartsA
begin
    Reply(502);
    giq_option(4, NAME, 503, NoPartsB, NEUTRAL_REACTION);
end

procedure NoPartsB
begin
    Reply(504);
    giq_option(4, NAME, 505, Node999, NEUTRAL_REACTION);
end

procedure Node999
begin
end

procedure Node990
begin
    if (obj_is_carrying_obj_pid(dude_obj, 770)) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 770);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        while (removed_qty) do begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 770);
            if (obj_type(dude_obj) == 1) then begin
                if (critter_inven_obj(dude_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
            removed_qty := removed_qty - restock_amt;
            restock_obj := 0;
            restock_amt := 0;
        end
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 313);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        while (removed_qty) do begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 313);
            if (obj_type(dude_obj) == 1) then begin
                if (critter_inven_obj(dude_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
            removed_qty := removed_qty - restock_amt;
            restock_obj := 0;
            restock_amt := 0;
        end
        restock_obj := create_object(398, 0, 0);
        add_mult_objs_to_inven(dude_obj, restock_obj, 1);
        call Node008();
    end
    else begin
        call NoParts();
    end
end

procedure Node989
begin
    if (obj_is_carrying_obj_pid(dude_obj, 769)) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 769);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        while (removed_qty) do begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 769);
            if (obj_type(dude_obj) == 1) then begin
                if (critter_inven_obj(dude_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
            removed_qty := removed_qty - restock_amt;
            restock_obj := 0;
            restock_amt := 0;
        end
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 18);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        while (removed_qty) do begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 18);
            if (obj_type(dude_obj) == 1) then begin
                if (critter_inven_obj(dude_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
            removed_qty := removed_qty - restock_amt;
            restock_obj := 0;
            restock_amt := 0;
        end
        restock_obj := create_object(404, 0, 0);
        add_mult_objs_to_inven(dude_obj, restock_obj, 1);
        call Node008();
    end
    else begin
        call NoParts();
    end
end

procedure Node988
begin
    if (obj_is_carrying_obj_pid(dude_obj, 774)) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 774);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        while (removed_qty) do begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 774);
            if (obj_type(dude_obj) == 1) then begin
                if (critter_inven_obj(dude_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
            removed_qty := removed_qty - restock_amt;
            restock_obj := 0;
            restock_amt := 0;
        end
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 16);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        while (removed_qty) do begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 16);
            if (obj_type(dude_obj) == 1) then begin
                if (critter_inven_obj(dude_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
            removed_qty := removed_qty - restock_amt;
            restock_obj := 0;
            restock_amt := 0;
        end
        restock_obj := create_object(402, 0, 0);
        add_mult_objs_to_inven(dude_obj, restock_obj, 1);
        call Node008();
    end
    else begin
        call NoParts();
    end
end

procedure Node987
begin
    if (obj_is_carrying_obj_pid(dude_obj, 773)) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 773);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        while (removed_qty) do begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 773);
            if (obj_type(dude_obj) == 1) then begin
                if (critter_inven_obj(dude_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
            removed_qty := removed_qty - restock_amt;
            restock_obj := 0;
            restock_amt := 0;
        end
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 24);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        while (removed_qty) do begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 24);
            if (obj_type(dude_obj) == 1) then begin
                if (critter_inven_obj(dude_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
            removed_qty := removed_qty - restock_amt;
            restock_obj := 0;
            restock_amt := 0;
        end
        restock_obj := create_object(406, 0, 0);
        add_mult_objs_to_inven(dude_obj, restock_obj, 1);
        call Node008();
    end
    else begin
        call NoParts();
    end
end

procedure Node986
begin
    if (obj_is_carrying_obj_pid(dude_obj, 767)) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 767);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        while (removed_qty) do begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 767);
            if (obj_type(dude_obj) == 1) then begin
                if (critter_inven_obj(dude_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
            removed_qty := removed_qty - restock_amt;
            restock_obj := 0;
            restock_amt := 0;
        end
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 10);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        while (removed_qty) do begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 10);
            if (obj_type(dude_obj) == 1) then begin
                if (critter_inven_obj(dude_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
            removed_qty := removed_qty - restock_amt;
            restock_obj := 0;
            restock_amt := 0;
        end
        restock_obj := create_object(287, 0, 0);
        add_mult_objs_to_inven(dude_obj, restock_obj, 1);
        call Node008();
    end
    else begin
        call NoParts();
    end
end

procedure Node985
begin
    if (obj_is_carrying_obj_pid(dude_obj, 769)) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 769);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        while (removed_qty) do begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 769);
            if (obj_type(dude_obj) == 1) then begin
                if (critter_inven_obj(dude_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
            removed_qty := removed_qty - restock_amt;
            restock_obj := 0;
            restock_amt := 0;
        end
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 23);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        while (removed_qty) do begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 23);
            if (obj_type(dude_obj) == 1) then begin
                if (critter_inven_obj(dude_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
            removed_qty := removed_qty - restock_amt;
            restock_obj := 0;
            restock_amt := 0;
        end
        restock_obj := create_object(405, 0, 0);
        add_mult_objs_to_inven(dude_obj, restock_obj, 1);
        call Node008();
    end
    else begin
        call NoParts();
    end
end

procedure Node984
begin
    if (obj_is_carrying_obj_pid(dude_obj, 768)) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 768);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        while (removed_qty) do begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 768);
            if (obj_type(dude_obj) == 1) then begin
                if (critter_inven_obj(dude_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
            removed_qty := removed_qty - restock_amt;
            restock_obj := 0;
            restock_amt := 0;
        end
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 351);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        while (removed_qty) do begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 351);
            if (obj_type(dude_obj) == 1) then begin
                if (critter_inven_obj(dude_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
            removed_qty := removed_qty - restock_amt;
            restock_obj := 0;
            restock_amt := 0;
        end
        restock_obj := create_object(403, 0, 0);
        add_mult_objs_to_inven(dude_obj, restock_obj, 1);
        call Node008();
    end
    else begin
        call NoParts();
    end
end

procedure Node983
begin
    if (obj_is_carrying_obj_pid(dude_obj, 773)) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 773);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        while (removed_qty) do begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 773);
            if (obj_type(dude_obj) == 1) then begin
                if (critter_inven_obj(dude_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
            removed_qty := removed_qty - restock_amt;
            restock_obj := 0;
            restock_amt := 0;
        end
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 118);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        while (removed_qty) do begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 118);
            if (obj_type(dude_obj) == 1) then begin
                if (critter_inven_obj(dude_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
            removed_qty := removed_qty - restock_amt;
            restock_obj := 0;
            restock_amt := 0;
        end
        restock_obj := create_object(401, 0, 0);
        add_mult_objs_to_inven(dude_obj, restock_obj, 1);
        call Node008();
    end
    else begin
        call NoParts();
    end
end

procedure Node982
begin
    if (obj_is_carrying_obj_pid(dude_obj, 776)) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 776);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        while (removed_qty) do begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 776);
            if (obj_type(dude_obj) == 1) then begin
                if (critter_inven_obj(dude_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
            removed_qty := removed_qty - restock_amt;
            restock_obj := 0;
            restock_amt := 0;
        end
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 11);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        while (removed_qty) do begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 11);
            if (obj_type(dude_obj) == 1) then begin
                if (critter_inven_obj(dude_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
            removed_qty := removed_qty - restock_amt;
            restock_obj := 0;
            restock_amt := 0;
        end
        restock_obj := create_object(400, 0, 0);
        add_mult_objs_to_inven(dude_obj, restock_obj, 1);
        call Node008();
    end
    else begin
        call NoParts();
    end
end

procedure Node981
begin
    if (obj_is_carrying_obj_pid(dude_obj, 775)) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 775);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        while (removed_qty) do begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 775);
            if (obj_type(dude_obj) == 1) then begin
                if (critter_inven_obj(dude_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
            removed_qty := removed_qty - restock_amt;
            restock_obj := 0;
            restock_amt := 0;
        end
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 15);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        while (removed_qty) do begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 15);
            if (obj_type(dude_obj) == 1) then begin
                if (critter_inven_obj(dude_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
            removed_qty := removed_qty - restock_amt;
            restock_obj := 0;
            restock_amt := 0;
        end
        restock_obj := create_object(233, 0, 0);
        add_mult_objs_to_inven(dude_obj, restock_obj, 1);
        call Node008();
    end
    else begin
        call NoParts();
    end
end

procedure Node980
begin
    if (obj_is_carrying_obj_pid(dude_obj, 777)) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 777);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        while (removed_qty) do begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 777);
            if (obj_type(dude_obj) == 1) then begin
                if (critter_inven_obj(dude_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
            removed_qty := removed_qty - restock_amt;
            restock_obj := 0;
            restock_amt := 0;
        end
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 32);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        while (removed_qty) do begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 32);
            if (obj_type(dude_obj) == 1) then begin
                if (critter_inven_obj(dude_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
            removed_qty := removed_qty - restock_amt;
            restock_obj := 0;
            restock_amt := 0;
        end
        restock_obj := create_object(382, 0, 0);
        add_mult_objs_to_inven(dude_obj, restock_obj, 1);
        call Node008();
    end
    else begin
        call NoParts();
    end
end

procedure Node979
begin
    if (obj_is_carrying_obj_pid(dude_obj, 772)) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 772);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        while (removed_qty) do begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 772);
            if (obj_type(dude_obj) == 1) then begin
                if (critter_inven_obj(dude_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
            removed_qty := removed_qty - restock_amt;
            restock_obj := 0;
            restock_amt := 0;
        end
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 160);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        while (removed_qty) do begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 160);
            if (obj_type(dude_obj) == 1) then begin
                if (critter_inven_obj(dude_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
            removed_qty := removed_qty - restock_amt;
            restock_obj := 0;
            restock_amt := 0;
        end
        restock_obj := create_object(399, 0, 0);
        add_mult_objs_to_inven(dude_obj, restock_obj, 1);
        call Node008();
    end
    else begin
        call NoParts();
    end
end

procedure Node978
begin
    if (obj_is_carrying_obj_pid(dude_obj, 771)) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 771);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        while (removed_qty) do begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 771);
            if (obj_type(dude_obj) == 1) then begin
                if (critter_inven_obj(dude_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
            removed_qty := removed_qty - restock_amt;
            restock_obj := 0;
            restock_amt := 0;
        end
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 235);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        while (removed_qty) do begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 235);
            if (obj_type(dude_obj) == 1) then begin
                if (critter_inven_obj(dude_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
            removed_qty := removed_qty - restock_amt;
            restock_obj := 0;
            restock_amt := 0;
        end
        restock_obj := create_object(407, 0, 0);
        add_mult_objs_to_inven(dude_obj, restock_obj, 1);
        call Node008();
    end
    else begin
        call NoParts();
    end
end
