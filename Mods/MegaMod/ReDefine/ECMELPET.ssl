variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure combat_p_proc;

import variable melchior_obj;

variable i_died;

procedure use_obj_on_p_proc;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        attack(dude_obj);
    end
end

procedure destroy_p_proc
begin
    if (i_died == 0) then begin
        i_died := 1;
        add_timer_event(melchior_obj, 0, 666);
    end
end

procedure look_at_p_proc
begin
end

procedure description_p_proc
begin
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        script_overrides;
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        attack(dude_obj);
    end
end

procedure map_enter_p_proc
begin
    variable LVar0 := 0;
    if (map_first_run) then begin
        set_local_var(1, tile_num(self_obj));
        LVar0 := ((obj_pid(self_obj) == 16777461) * 0) + ((obj_pid(self_obj) == 16777457) * 1) + ((obj_pid(self_obj) == 16777463) * 2) + ((obj_pid(self_obj) == 16777333) * 3);
        set_map_var(LVar0, map_var(LVar0) + 1);
        set_local_var(0, map_var(LVar0));
        debug_msg("" + self_name + ": Place Num == " + local_var(0) + ". Map Var (" + LVar0 + ") == " + map_var(LVar0) + " , pid_to_ai(" + obj_pid(self_obj) + ") == " + (((obj_pid(self_obj) == 16777461) * 26) + ((obj_pid(self_obj) == 16777457) * 144) + ((obj_pid(self_obj) == 16777463) * 132) + ((obj_pid(self_obj) == 16777333) * 48)));
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 67);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, ((obj_pid(self_obj) == 16777461) * 26) + ((obj_pid(self_obj) == 16777457) * 144) + ((obj_pid(self_obj) == 16777463) * 132) + ((obj_pid(self_obj) == 16777333) * 48));
    end
end

procedure map_update_p_proc
begin
end

procedure combat_p_proc
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    if (obj_is_visible_flag(self_obj) and ((critter_state(self_obj) bwand 1) == 0)) then begin
        if (fixed_param == 2) then begin
            if (target_obj == dude_obj) then begin
                if (obj_pid(self_obj) == 16777333) then begin
                    poison(target_obj, random(2, 8));
                end
                if (obj_pid(self_obj) == 16777333) then begin
                    radiation_inc(target_obj, random(3, 15));
                end
            end
        end
        else begin
            if (fixed_param == 5) then begin
                if (tile_num(self_obj) == local_var(1)) then begin
                    LVar0 := ((obj_pid(self_obj) == 16777461) * 0) + ((obj_pid(self_obj) == 16777457) * 1) + ((obj_pid(self_obj) == 16777463) * 2) + ((obj_pid(self_obj) == 16777333) * 3);
                    if (local_var(0) > map_var(LVar0)) then begin
                        LVar2 := (13928 * ((map_var(4) % 4) == 0)) + (13132 * ((map_var(4) % 4) == 1)) + (14120 * ((map_var(4) % 4) == 2)) + (13319 * ((map_var(4) % 4) == 3));
                        if (((tile_contains_pid_obj(LVar2, elevation(self_obj), 33554499) != 0) == 0) and ((tile_contains_pid_obj(tile_num_in_direction(LVar2, 0, 1), elevation(self_obj), 33554499) != 0) == 0) and ((tile_contains_pid_obj(tile_num_in_direction(LVar2, 1, 1), elevation(self_obj), 33554499) != 0) == 0) and ((tile_contains_pid_obj(tile_num_in_direction(LVar2, 2, 1), elevation(self_obj), 33554499) != 0) == 0) and ((tile_contains_pid_obj(tile_num_in_direction(LVar2, 3, 1), elevation(self_obj), 33554499) != 0) == 0) and ((tile_contains_pid_obj(tile_num_in_direction(LVar2, 4, 1), elevation(self_obj), 33554499) != 0) == 0) and ((tile_contains_pid_obj(tile_num_in_direction(LVar2, 5, 1), elevation(self_obj), 33554499) != 0) == 0)) then begin
                            debug_msg("moving pet");
                            move_to(self_obj, LVar2, elevation(self_obj));
                            anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
                            attack(dude_obj);
                        end
                        else begin
                            debug_msg("pet can't be released, clump is blocked");
                        end
                        set_map_var(4, map_var(4) + 1);
                    end
                end
            end
        end
    end
end

procedure use_obj_on_p_proc
begin
end
