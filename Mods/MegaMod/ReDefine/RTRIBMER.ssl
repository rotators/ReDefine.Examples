variable tmp_gen_rep;
variable global_temp;
variable restock_amt;
variable restock_obj;

procedure start;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;
procedure pickup_p_proc;
procedure Node999;
procedure Node998;
procedure Node900;
procedure Node901;
procedure Node902;
procedure Node903;
procedure Node904;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure critter_p_proc;
procedure timed_event_p_proc;
procedure destroy_p_proc;


procedure start
begin
end

procedure use_p_proc
begin
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(101);
end

procedure use_skill_on_p_proc
begin
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        call Node998();
    end
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_TOUGH_MERCHANT);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 47);
end

procedure map_update_p_proc
begin
end

procedure talk_p_proc
begin
    variable LVar0 := 0;
    LVar0 := create_object(128, 0, 0);
    move_obj_inven_to_obj(self_obj, LVar0);
    if (local_var(7) == 0) then begin
        set_local_var(7, 1);
        start_gdialog(2446, self_obj, 4, -1, -1);
        gsay_start;
        call Node001();
        gsay_end;
        end_dialogue;
    end
    else begin
        if (map_var(2) == 1) then begin
            start_gdialog(2446, self_obj, 4, -1, -1);
            gsay_start;
            call Node027();
            gsay_end;
            end_dialogue;
        end
        else begin
            start_gdialog(2446, self_obj, 4, -1, -1);
            gsay_start;
            call Node022();
            gsay_end;
            end_dialogue;
        end
    end
    move_obj_inven_to_obj(LVar0, self_obj);
    destroy_object(LVar0);
    return 0;
    LVar0 := 0;
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_map_var(1, 1);
    end
end

procedure Node999
begin
end

procedure Node998
begin
    set_map_var(1, 1);
end

procedure Node900
begin
    set_global_var(GVAR_ABBEY_FORMAT_DATABASES, 2);
    game_time_advance(60 * (60 * 10));
    load_map(163, 0);
end

procedure Node901
begin
    set_global_var(GVAR_ABBEY_FORMAT_DATABASES, 3);
    game_time_advance(60 * (60 * 10));
    load_map(163, 0);
end

procedure Node902
begin
    set_local_var(8, 1);
end

procedure Node903
begin
    set_global_var(GVAR_ABBEY_FORMAT_DATABASES, 4);
    game_time_advance(60 * (60 * 10));
    load_map(163, 0);
end

procedure Node904
begin
    set_global_var(GVAR_ABBEY_FORMAT_DATABASES, 5);
    game_time_advance(60 * (60 * 10));
    load_map(163, 0);
end

procedure Node001
begin
    Reply(200);
    giq_option(4, NAME, 201, Node002, NEUTRAL_REACTION);
end

procedure Node002
begin
    Reply(202);
    giq_option(4, NAME, mstr(203) + dude_name + mstr(204), Node003, NEUTRAL_REACTION);
    giq_option(4, NAME, dude_name + mstr(205), Node004, NEUTRAL_REACTION);
end

procedure Node003
begin
    Reply(mstr(210) + dude_name + mstr(211));
    giq_option(4, NAME, 212, Node005, NEUTRAL_REACTION);
    if (dude_gender) then begin
        giq_option(4, NAME, 216, Node006, NEUTRAL_REACTION);
        if (dude_skill(SKILL_SPEECH) > 60) then begin
            giq_option(4, NAME, 217, Node006, NEUTRAL_REACTION);
        end
    end
    else begin
        giq_option(4, NAME, 213, Node006, NEUTRAL_REACTION);
        if (dude_skill(SKILL_SPEECH) > 60) then begin
            giq_option(4, NAME, 214, Node006, NEUTRAL_REACTION);
        end
    end
    giq_option(4, NAME, 215, Node998, BAD_REACTION);
end

procedure Node004
begin
    Reply(220);
    giq_option(4, NAME, 241, Node007, NEUTRAL_REACTION);
    giq_option(4, NAME, 242, Node008, NEUTRAL_REACTION);
    giq_option(4, NAME, 243, Node009, NEUTRAL_REACTION);
end

procedure Node005
begin
    Reply(230);
    giq_option(4, NAME, 241, Node007, NEUTRAL_REACTION);
    giq_option(4, NAME, 242, Node008, NEUTRAL_REACTION);
    giq_option(4, NAME, 243, Node009, NEUTRAL_REACTION);
end

procedure Node006
begin
    Reply(240);
    giq_option(4, NAME, 241, Node007, NEUTRAL_REACTION);
    giq_option(4, NAME, 242, Node008, NEUTRAL_REACTION);
    giq_option(4, NAME, 243, Node009, NEUTRAL_REACTION);
end

procedure Node007
begin
    Reply(250);
    giq_option(4, NAME, 253, Node010, NEUTRAL_REACTION);
    giq_option(4, NAME, 254, Node013, NEUTRAL_REACTION);
end

procedure Node008
begin
    Reply(251);
    giq_option(4, NAME, 253, Node010, NEUTRAL_REACTION);
    giq_option(4, NAME, 254, Node013, NEUTRAL_REACTION);
end

procedure Node009
begin
    Reply(252);
    giq_option(4, NAME, 253, Node010, NEUTRAL_REACTION);
    giq_option(4, NAME, 254, Node013, NEUTRAL_REACTION);
end

procedure Node010
begin
    Reply(260);
    giq_option(4, NAME, 261, Node011, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(262);
    giq_option(4, NAME, 263, Node012, NEUTRAL_REACTION);
end

procedure Node012
begin
    Reply(264);
    giq_option(4, NAME, 275, Node014, NEUTRAL_REACTION);
    giq_option(4, NAME, 276, Node014, NEUTRAL_REACTION);
end

procedure Node013
begin
    Reply(270);
    giq_option(4, NAME, 261, Node011, NEUTRAL_REACTION);
end

procedure Node014
begin
    Reply(280);
    giq_option(4, NAME, 281, Node015, NEUTRAL_REACTION);
    giq_option(4, NAME, 282, Node020, NEUTRAL_REACTION);
    giq_option(4, NAME, 283, Node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 284, Node018, NEUTRAL_REACTION);
    giq_option(4, NAME, 285, Node017, NEUTRAL_REACTION);
end

procedure Node015
begin
    Reply(290);
    giq_option(4, NAME, g_mstr(350), Node900, NEUTRAL_REACTION);
end

procedure Node016
begin
    Reply(300);
    giq_option(4, NAME, 301, Node015, NEUTRAL_REACTION);
    giq_option(4, NAME, 302, Node017, NEUTRAL_REACTION);
    giq_option(4, NAME, 303, Node018, NEUTRAL_REACTION);
end

procedure Node017
begin
    Reply(310);
    giq_option(4, NAME, 311, Node901, NEUTRAL_REACTION);
    giq_option(4, NAME, 312, Node998, BAD_REACTION);
end

procedure Node018
begin
    Reply(340);
    giq_option(4, NAME, g_mstr(350), Node902, NEUTRAL_REACTION);
end

procedure Node019
begin
    Reply(305);
    giq_option(4, NAME, g_mstr(350), Node903, NEUTRAL_REACTION);
end

procedure Node020
begin
    Reply(320);
    giq_option(4, NAME, 321, Node015, NEUTRAL_REACTION);
    giq_option(4, NAME, 322, Node021, NEUTRAL_REACTION);
end

procedure Node021
begin
    Reply(330);
    giq_option(4, NAME, 331, Node999, NEUTRAL_REACTION);
end

procedure Node022
begin
    Reply(350);
    giq_option(4, NAME, 351, Node015, NEUTRAL_REACTION);
    giq_option(4, NAME, 352, Node017, NEUTRAL_REACTION);
    giq_option(4, NAME, 353, Node018, NEUTRAL_REACTION);
    giq_option(4, NAME, 354, Node023, NEUTRAL_REACTION);
end

procedure Node023
begin
    Reply(390);
    giq_option(4, NAME, g_mstr(350), Node998, BAD_REACTION);
end

procedure Node024
begin
    Reply(370);
    giq_option(4, NAME, 371, Node025, NEUTRAL_REACTION);
end

procedure Node025
begin
    Reply(372);
    giq_option(4, NAME, 373, Node026, NEUTRAL_REACTION);
    giq_option(4, NAME, 374, Node998, BAD_REACTION);
end

procedure Node026
begin
    Reply(380);
    giq_option(4, NAME, 381, Node904, NEUTRAL_REACTION);
    giq_option(4, NAME, 382, Node998, BAD_REACTION);
end

procedure Node027
begin
    set_global_var(GVAR_ABBEY_FORMAT_DATABASES, 5);
    Reply(350);
    giq_option(4, NAME, 360, Node024, NEUTRAL_REACTION);
    giq_option(4, NAME, 361, Node025, NEUTRAL_REACTION);
    giq_option(4, NAME, 362, Node018, NEUTRAL_REACTION);
    giq_option(4, NAME, 363, Node015, NEUTRAL_REACTION);
end

procedure critter_p_proc
begin
    if ((map_var(1) == 1) and obj_can_see_obj(self_obj, dude_obj)) then begin
        attack(dude_obj);
    end
    else begin
        if (not(is_loading_game)) then begin
            if ((local_var(7) == 0) and obj_can_see_obj(self_obj, dude_obj)) then begin
                call talk_p_proc();
            end
        end
    end
end

procedure timed_event_p_proc
begin
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_BAD_MONSTER, global_var(GVAR_BAD_MONSTER) + 1);
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 5);
        debug_msg("Player gains " + 5 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
        if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
            tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
        end
        if (tmp_gen_rep >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (tmp_gen_rep >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (tmp_gen_rep >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (tmp_gen_rep >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    set_map_var(3, 1);
end
