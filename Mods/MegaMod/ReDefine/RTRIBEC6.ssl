variable tmp_gen_rep;
variable global_temp;

procedure start;
procedure destroy_p_proc;
procedure combat_p_proc;
procedure critter_p_proc;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;
procedure talk_two_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node999;
procedure Node998;
procedure Node005;
procedure timed_event_p_proc;
procedure pickup_p_proc;


procedure start
begin
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
        if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
            tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
        end
        if (tmp_gen_rep >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (tmp_gen_rep >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (tmp_gen_rep >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (tmp_gen_rep >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(GVAR_TOWN_REP_PRIMITIVE_TRIBE, global_var(GVAR_TOWN_REP_PRIMITIVE_TRIBE) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
    set_global_var(GVAR_TOWN_REP_PRIMITIVE_TRIBE, global_var(GVAR_TOWN_REP_PRIMITIVE_TRIBE) - 10);
    set_global_var(GVAR_SULIK_SISTER, 1);
end

procedure combat_p_proc
begin
    if (global_var(GVAR_SULIK_SISTER) == 1) then begin
        attack(dude_obj);
    end
end

procedure critter_p_proc
begin
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if (global_var(GVAR_REPUTATION_SLAVER) == 1) then begin
            float_msg(self_obj, mstr(260), FLOAT_MSG_YELLOW);
            attack(dude_obj);
        end
        else begin
            if (global_var(GVAR_SULIK_SISTER) == 1) then begin
                attack(dude_obj);
            end
        end
    end
    if ((global_var(GVAR_ABBEY_FORMAT_DATABASES) > 1) or (global_var(GVAR_FIXTRIBE_WELL) == 2) or (global_var(GVAR_FIND_SULIK) == 3) or (global_var(GVAR_SULIK_DEAD) >= 3) and (local_var(4) != 3)) then begin
        set_local_var(4, 3);
    end
end

procedure use_p_proc
begin
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 0) then begin
        display_mstr(300);
    end
    else begin
        display_mstr(301);
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(302);
end

procedure use_skill_on_p_proc
begin
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    set_global_var(GVAR_SULIK_SISTER, 1);
    attack(dude_obj);
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 214);
end

procedure map_update_p_proc
begin
end

procedure talk_p_proc
begin
    if (local_var(7) == 1) then begin
        if (global_var(GVAR_FALLOUT_2) == 8) then begin
            float_msg(self_obj, mstr(500), FLOAT_MSG_YELLOW);
        end
        else begin
            float_msg(self_obj, mstr(random(140, 144)), FLOAT_MSG_YELLOW);
        end
    end
    else begin
        call talk_two_p_proc();
    end
end

procedure talk_two_p_proc
begin
    if (local_var(4) == 2) then begin
        start_gdialog(2289, self_obj, 4, -1, -1);
        gsay_start;
        call Node003();
        gsay_end;
        end_dialogue;
    end
    else begin
        if (local_var(4) == 3) then begin
            start_gdialog(2289, self_obj, 4, -1, -1);
            gsay_start;
            call Node004();
            gsay_end;
            end_dialogue;
        end
        else begin
            start_gdialog(2289, self_obj, 4, -1, -1);
            gsay_start;
            call Node001();
            gsay_end;
            end_dialogue;
        end
    end
end

procedure Node001
begin
    Reply(100);
    giq_option(4, NAME, 101, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 102, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 103, Node002, NEUTRAL_REACTION);
    giq_option(-3, NAME, 104, Node999, NEUTRAL_REACTION);
end

procedure Node002
begin
    Reply(110);
    giq_option(1, NAME, 111, Node999, NEUTRAL_REACTION);
    set_local_var(4, 2);
    set_local_var(8, 1);
end

procedure Node003
begin
    Reply(120);
    giq_option(1, NAME, 121, Node999, NEUTRAL_REACTION);
end

procedure Node004
begin
    if (local_var(8) == 1) then begin
        Reply(130);
    end
    else begin
        Reply(131);
    end
    giq_option(4, NAME, 132, Node005, NEUTRAL_REACTION);
    giq_option(-3, NAME, 133, Node005, NEUTRAL_REACTION);
end

procedure Node999
begin
    debug_msg("LVAR_Herebefore == " + local_var(4));
    if (local_var(4) == 0) then begin
        set_local_var(4, 1);
    end
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node005
begin
    animate_move_obj_to_tile(self_obj, 21103, 0);
    set_local_var(7, 1);
end

procedure timed_event_p_proc
begin
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_WIDOW_ROONEY, 1);
    end
end
