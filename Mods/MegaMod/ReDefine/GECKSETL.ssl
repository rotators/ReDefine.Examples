variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;

procedure start;
procedure make_warriors_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure ghost_town;
procedure map_exit_p_proc;


procedure start
begin
end

procedure make_warriors_p_proc
begin
    variable LVar0 := 0;
    if (map_first_run) then begin
        display_msg(message_str(SCRIPT_EPA1, 100));
    end
    if ((global_var(GVAR_ENEMY_OF_HUMPHREY_GANG) == 1) or (global_var(GVAR_ENEMY_OF_HUMPHREY_GANG) == 2)) then begin
        if (get_pc_stat(PCSTAT_level) <= 7) then begin
            LVar0 := create_object_sid(16777466, 18926, 1, SCRIPT_GCENC2);
            LVar0 := create_object_sid(16777466, 18521, 1, SCRIPT_GCENC);
            set_global_var(GVAR_ENEMY_OF_HUMPHREY_GANG, 3);
        end
        else begin
            if ((get_pc_stat(PCSTAT_level) > 7) and (get_pc_stat(PCSTAT_level) <= 12)) then begin
                LVar0 := create_object_sid(16777466, 18926, 1, SCRIPT_GCENC2);
                LVar0 := create_object_sid(16777466, 18521, 1, SCRIPT_GCENC);
                LVar0 := create_object_sid(16777466, 19130, 1, SCRIPT_GCENC);
                LVar0 := create_object_sid(16777466, 18516, 1, SCRIPT_GCENC);
                set_global_var(GVAR_ENEMY_OF_HUMPHREY_GANG, 3);
            end
            else begin
                if ((get_pc_stat(PCSTAT_level) > 12) and (get_pc_stat(PCSTAT_level) <= 18)) then begin
                    LVar0 := create_object_sid(16777466, 18926, 1, SCRIPT_GCENC2);
                    LVar0 := create_object_sid(16777466, 18521, 1, SCRIPT_GCENC);
                    LVar0 := create_object_sid(16777466, 19130, 1, SCRIPT_GCENC);
                    LVar0 := create_object_sid(16777466, 18516, 1, SCRIPT_GCENC);
                    LVar0 := create_object_sid(16777466, 19313, 1, SCRIPT_GCENC);
                    LVar0 := create_object_sid(16777466, 18908, 1, SCRIPT_GCENC);
                    set_global_var(GVAR_ENEMY_OF_HUMPHREY_GANG, 3);
                end
                else begin
                    if (get_pc_stat(PCSTAT_level) > 18) then begin
                        LVar0 := create_object_sid(16777466, 18926, 1, SCRIPT_GCENC2);
                        LVar0 := create_object_sid(16777466, 18521, 1, SCRIPT_GCENC);
                        LVar0 := create_object_sid(16777466, 19130, 1, SCRIPT_GCENC);
                        LVar0 := create_object_sid(16777466, 18516, 1, SCRIPT_GCENC);
                        LVar0 := create_object_sid(16777466, 19313, 1, SCRIPT_GCENC);
                        LVar0 := create_object_sid(16777466, 18908, 1, SCRIPT_GCENC);
                        LVar0 := create_object_sid(16777466, 18312, 1, SCRIPT_GCENC);
                        LVar0 := create_object_sid(16777466, 20315, 1, SCRIPT_GCENC);
                        set_global_var(GVAR_ENEMY_OF_HUMPHREY_GANG, 3);
                    end
                end
            end
        end
    end
    return 0;
    LVar0 := 0;
end

procedure map_enter_p_proc
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    if (global_var(GVAR_ENEMY_OF_HUMPHREY_GANG) == 2) then begin
        if (global_var(GVAR_LOAD_MAP_INDEX) == 555) then begin
        end
        else begin
            override_map_start(20123 % 200, 20123 / 200, 1, 0);
        end
    end
    if (dude_elevation == 1) then begin
        call make_warriors_p_proc();
        display_mstr(101);
    end
    if (map_first_run) then begin
        display_mstr(100);
    end
    if (global_var(GVAR_LOAD_MAP_INDEX) == 555) then begin
        LVar0 := create_object_sid(16777422, 0, 0, SCRIPT_ABJASON);
        critter_attempt_placement(LVar0, 19880, 0);
        LVar1 := create_object(304, 0, 0);
        add_obj_to_inven(LVar0, LVar1);
        move_to(dude_obj, 20280, 0);
    end
    if (global_var(GVAR_GECKO_MELTDOWN) == 2) then begin
        if (((game_time / (10 * 60 * 60)) - global_var(GVAR_GECKO_TIMER_MELTDOWN)) > 24) then begin
            call ghost_town();
        end
    end
    else begin
        if (global_var(GVAR_GECKO_MELTDOWN) == 1) then begin
            set_global_var(GVAR_GECKO_MELTDOWN, 2);
            set_global_var(GVAR_GECKO_TIMER_MELTDOWN, game_time / (10 * 60 * 60));
            Scenery_Creation := create_object(33555810, 17853, 0);
            Scenery_Creation := create_object(33555811, 17853, 0);
            Scenery_Creation_Hex := tile_num_in_direction(17853, 2, 1);
            Scenery_Creation_Count := 0;
            while (Scenery_Creation_Count < 1) do begin
                Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 2, 1);
                Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                Scenery_Creation_Count := Scenery_Creation_Count + 1;
            end
            Scenery_Creation_Count := 0;
            while (Scenery_Creation_Count < 2) do begin
                Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 4, 1);
                Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                Scenery_Creation_Count := Scenery_Creation_Count + 1;
            end
            Scenery_Creation_Count := 0;
            while (Scenery_Creation_Count < 4) do begin
                Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
                Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                Scenery_Creation_Count := Scenery_Creation_Count + 1;
            end
            Scenery_Creation_Count := 0;
            while (Scenery_Creation_Count < 2) do begin
                Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 0, 1);
                Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                Scenery_Creation_Count := Scenery_Creation_Count + 1;
            end
            Scenery_Creation_Count := 0;
            while (Scenery_Creation_Count < 1) do begin
                Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 5, 1);
                Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                Scenery_Creation_Count := Scenery_Creation_Count + 1;
            end
            Scenery_Creation_Count := 0;
            while (Scenery_Creation_Count < 1) do begin
                Scenery_Creation_Hex := tile_num_in_direction(Scenery_Creation_Hex, 0, 1);
                Scenery_Creation := create_object(33554499, Scenery_Creation_Hex, 0);
                Scenery_Creation_Count := Scenery_Creation_Count + 1;
            end
        end
    end
    if ((get_month >= 3) and (get_month < 5)) then begin
        if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
            set_light_level(game_time_hour - 600 + 40);
        end
        else begin
            if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                set_light_level(100);
            end
            else begin
                if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                    set_light_level(100 - (game_time_hour - 1800));
                end
                else begin
                    set_light_level(40);
                end
            end
        end
    end
    else begin
        if ((get_month >= 5) and (get_month < 9)) then begin
            if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                set_light_level(game_time_hour - 500 + 40);
            end
            else begin
                if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1900));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 9) and (get_month < 11)) then begin
                if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                    set_light_level(game_time_hour - 600 + 40);
                end
                else begin
                    if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1800));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                    set_light_level(game_time_hour - 700 + 40);
                end
                else begin
                    if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1700));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
        end
    end
    set_global_var(GVAR_LOAD_MAP_INDEX, 0);
    return 0;
    LVar0 := 0;
    LVar1 := 0;
end

procedure map_update_p_proc
begin
    if ((get_month >= 3) and (get_month < 5)) then begin
        if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
            set_light_level(game_time_hour - 600 + 40);
        end
        else begin
            if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                set_light_level(100);
            end
            else begin
                if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                    set_light_level(100 - (game_time_hour - 1800));
                end
                else begin
                    set_light_level(40);
                end
            end
        end
    end
    else begin
        if ((get_month >= 5) and (get_month < 9)) then begin
            if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                set_light_level(game_time_hour - 500 + 40);
            end
            else begin
                if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1900));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 9) and (get_month < 11)) then begin
                if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                    set_light_level(game_time_hour - 600 + 40);
                end
                else begin
                    if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1800));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                    set_light_level(game_time_hour - 700 + 40);
                end
                else begin
                    if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1700));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
        end
    end
end

procedure ghost_town
begin
    kill_critter_type(16777375, 0);
    kill_critter_type(16777395, 0);
    kill_critter_type(16777474, 0);
    kill_critter_type(16777324, 0);
    kill_critter_type(16777321, 0);
    kill_critter_type(16777325, 0);
    kill_critter_type(16777226, 0);
    kill_critter_type(16777330, 0);
    kill_critter_type(16777435, 0);
    kill_critter_type(16777316, 0);
    kill_critter_type(16777225, 0);
    if (party_member_obj(16777323) != 0) then begin
    end
    else begin
        kill_critter_type(16777323, 0);
    end
end

procedure map_exit_p_proc
begin
    if (global_var(GVAR_ENEMY_OF_HUMPHREY_GANG) == 1) then begin
        set_global_var(GVAR_ENEMY_OF_HUMPHREY_GANG, 2);
    end
end
