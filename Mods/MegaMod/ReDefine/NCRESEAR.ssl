variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable last_timed_obj;
variable last_timed_param;
variable check_still_kill;
variable stored_msg;
variable stored_node;
variable top_msg;
variable var_num;

procedure ChooseFromList;
procedure CLICK_PREV;
procedure CLICK_0;
procedure CLICK_1;
procedure CLICK_2;
procedure CLICK_3;
procedure CLICK_4;
procedure CLICK_MORE;

variable floater_patch_msg;
variable hs_temp;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node998;
procedure Node999;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node990;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure ChooseFromList
begin
    variable LVar0 := 0;
    Reply(stored_msg);
    if (message_str(SCRIPT_NEWR1, top_msg - 1) != "") then begin
        giq_option(1, NAME, message_str(SCRIPT_NEWR1, 150), CLICK_PREV, NEUTRAL_REACTION);
    end
    if (LVar0 == 0) then begin
        if (message_str(SCRIPT_NEWR1, top_msg + 0) != "") then begin
            giq_option(1, NAME, message_str(SCRIPT_NEWR1, top_msg + 0), CLICK_0, NEUTRAL_REACTION);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(SCRIPT_NEWR1, top_msg + 1) != "") then begin
            giq_option(1, NAME, message_str(SCRIPT_NEWR1, top_msg + 1), CLICK_1, NEUTRAL_REACTION);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(SCRIPT_NEWR1, top_msg + 2) != "") then begin
            giq_option(1, NAME, message_str(SCRIPT_NEWR1, top_msg + 2), CLICK_2, NEUTRAL_REACTION);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(SCRIPT_NEWR1, top_msg + 3) != "") then begin
            giq_option(1, NAME, message_str(SCRIPT_NEWR1, top_msg + 3), CLICK_3, NEUTRAL_REACTION);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(SCRIPT_NEWR1, top_msg + 4) != "") then begin
            giq_option(1, NAME, message_str(SCRIPT_NEWR1, top_msg + 4), CLICK_4, NEUTRAL_REACTION);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(SCRIPT_NEWR1, top_msg + 5) != "") then begin
            giq_option(1, NAME, message_str(SCRIPT_NEWR1, 151), CLICK_MORE, NEUTRAL_REACTION);
        end
    end
end

procedure CLICK_PREV
begin
    top_msg := top_msg - 5;
    call ChooseFromList();
end

procedure CLICK_0
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + (top_msg % 100));
    call stored_node();
end

procedure CLICK_1
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + ((top_msg + 1) % 100));
    call stored_node();
end

procedure CLICK_2
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + ((top_msg + 2) % 100));
    call stored_node();
end

procedure CLICK_3
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + ((top_msg + 3) % 100));
    call stored_node();
end

procedure CLICK_4
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + ((top_msg + 4) % 100));
    call stored_node();
end

procedure CLICK_MORE
begin
    top_msg := top_msg + 5;
    call ChooseFromList();
end

procedure start
begin
end

procedure critter_p_proc
begin
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(5) bwand 2) != 0) then begin
            critter_set_flee_state(self_obj, 1);
            if (critter_is_fleeing(self_obj)) then begin
                if (anim_busy(self_obj) == 0) then begin
                    if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                        if (anim_busy(self_obj) == 0) then begin
                            global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                                debug_msg("flee loop: rot == " + global_temp);
                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                global_temp := (global_temp + 1) % 6;
                            end
                        end
                    end
                end
            end
            else begin
                attack(dude_obj);
            end
            if (((global_var(GVAR_NEW_RENO_FLAG_1) bwand 2) != 0) == 0) then begin
                set_global_var(GVAR_NEW_RENO_FLAG_1, global_var(GVAR_NEW_RENO_FLAG_1) bwor 2);
                last_timed_obj := self_obj;
                last_timed_param := last_timed_param;
                metarule3(100, self_obj, 19, 0);
                add_timer_event(self_obj, game_ticks(0), 19);
                last_timed_obj := self_obj;
                last_timed_param := last_timed_param;
                metarule3(100, self_obj, 1, 0);
                add_timer_event(self_obj, game_ticks(5), 1);
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        call Node998();
    end
end

procedure talk_p_proc
begin
    if (obj_can_see_obj(self_obj, party_member_obj(16777376))) then begin
        call Node003();
    end
    else begin
        if ((global_var(GVAR_NEW_RENO_MYRON) bwand 1024) != 0) then begin
            call Node002();
        end
        else begin
            start_gdialog(442, self_obj, 4, -1, -1);
            gsay_start;
            call Node004();
            gsay_end;
            end_dialogue;
        end
    end
    last_timed_obj := self_obj;
    last_timed_param := last_timed_param;
    metarule3(100, self_obj, 1, 0);
    add_timer_event(self_obj, game_ticks(25) + random(0, game_ticks(35 - 25)), 1);
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_BAD_MONSTER, global_var(GVAR_BAD_MONSTER) + 1);
        if (critter_kill_type(self_obj) == 2) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(GVAR_TOWN_REP_NEW_RENO, global_var(GVAR_TOWN_REP_NEW_RENO) + -8);
                debug_msg("Added " + -8 + " to Town Rep");
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 5);
        debug_msg("Player gains " + 5 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(GVAR_TOWN_REP_NEW_RENO, global_var(GVAR_TOWN_REP_NEW_RENO) + 2);
        debug_msg("Added " + 2 + " to Town Rep");
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(150 + ((local_var(5) bwand 4) != 0));
    set_local_var(5, local_var(5) bwor 4);
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        call Node998();
    end
end

procedure map_enter_p_proc
begin
    if (is_loading_game == 0) then begin
        if (map_first_run) then begin
            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 58);
            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_COWARD);
        end
        if (((global_var(GVAR_NEW_RENO_MYRON) bwand 8) != 0) or critter_is_fleeing(self_obj)) then begin
            if (obj_is_visible_flag(self_obj) == 0) then begin
                set_obj_visibility(self_obj, 0);
            end
        end
        last_timed_obj := self_obj;
        last_timed_param := last_timed_param;
        metarule3(100, self_obj, 1, 0);
        add_timer_event(self_obj, game_ticks(25) + random(0, game_ticks(35 - 25)), 1);
    end
end

procedure timed_event_p_proc
begin
    variable LVar0 := 0;
    if (fixed_param == 19) then begin
        call Node008();
    end
    else begin
        if ((global_var(GVAR_NEW_RENO_FLAG_1) bwand 2) != 0) then begin
            set_global_var(GVAR_NEW_RENO_FLAG_1, global_var(GVAR_NEW_RENO_FLAG_1) bwand (-1 - 2));
        end
        else begin
            if (combat_is_initialized == 0) then begin
                if (obj_can_see_obj(self_obj, dude_obj)) then begin
                    if (obj_can_see_obj(self_obj, party_member_obj(16777376))) then begin
                        call Node001();
                    end
                    else begin
                        call Node002();
                    end
                end
            end
            last_timed_obj := self_obj;
            last_timed_param := last_timed_param;
            metarule3(100, self_obj, 1, 0);
            add_timer_event(self_obj, game_ticks(25) + random(0, game_ticks(35 - 25)), 1);
        end
    end
end

procedure Node998
begin
    set_local_var(5, local_var(5) bwor 2);
end

procedure Node999
begin
end

procedure Node001
begin
    float_msg(self_obj, mstr(random(200, 204)), FLOAT_MSG_YELLOW);
end

procedure Node002
begin
    float_msg(self_obj, mstr(random(215, 228)), FLOAT_MSG_YELLOW);
end

procedure Node003
begin
    float_msg(self_obj, mstr(random(235, 246)), FLOAT_MSG_YELLOW);
end

procedure Node004
begin
    Reply(250);
    giq_option(-3, NAME, 251, Node005, BAD_REACTION);
    giq_option(-3, NAME, 252, Node005, BAD_REACTION);
    giq_option(-3, NAME, 253, Node005, BAD_REACTION);
    giq_option(-3, NAME, 254, Node005, BAD_REACTION);
    giq_option(-3, NAME, 255, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 256, Node006, NEUTRAL_REACTION);
    giq_option(4, NAME, 257, Node999, NEUTRAL_REACTION);
end

procedure Node005
begin
    Reply(265);
    giq_option(-3, NAME, 266, Node998, NEUTRAL_REACTION);
    giq_option(-3, NAME, 255, Node998, NEUTRAL_REACTION);
end

procedure Node006
begin
    if ((local_var(5) bwand 512) != 0) then begin
        Reply(276);
    end
    else begin
        Reply(275);
        giq_option(4, NAME, 277, Node998, BAD_REACTION);
    end
    if (dude_charisma > 5) then begin
        giq_option(4, NAME, 278, Node009, BAD_REACTION);
    end
    if ((global_var(GVAR_NEW_RENO_MYRON) bwand 1) != 0) then begin
        giq_option(4, NAME, 279, Node026, NEUTRAL_REACTION);
    end
    if ((dude_iq < 7) and ((has_skill(dude_obj, SKILL_DOCTOR) > 95) or (has_skill(dude_obj, SKILL_SCIENCE) > 95)) or ((dude_iq >= 7) and ((has_skill(dude_obj, SKILL_DOCTOR) > 75) or (has_skill(dude_obj, SKILL_SCIENCE) > 75)))) then begin
        giq_option(4, NAME, 280, Node010, GOOD_REACTION);
    end
    giq_option(4, NAME, 282, Node999, GOOD_REACTION);
    set_local_var(5, local_var(5) bwor 512);
end

procedure Node007
begin
    Reply(295);
    giq_option(4, NAME, 296, Node998, BAD_REACTION);
    if (dude_charisma > 5) then begin
        giq_option(4, NAME, 278, Node009, BAD_REACTION);
    end
    if ((dude_iq < 7) and ((has_skill(dude_obj, SKILL_DOCTOR) > 95) or (has_skill(dude_obj, SKILL_SCIENCE) > 95)) or ((dude_iq >= 7) and ((has_skill(dude_obj, SKILL_DOCTOR) > 75) or (has_skill(dude_obj, SKILL_SCIENCE) > 75)))) then begin
        giq_option(4, NAME, 280, Node010, GOOD_REACTION);
    end
    giq_option(4, NAME, 300, Node999, NEUTRAL_REACTION);
end

procedure Node008
begin
    float_msg(self_obj, mstr(310), FLOAT_MSG_YELLOW);
end

procedure Node009
begin
    Reply(315);
    giq_option(5, NAME, 316, Node010, NEUTRAL_REACTION);
    if ((dude_charisma > 6) or (has_skill(dude_obj, SKILL_CONVERSANT) > 65) or has_trait(TRAIT_PERK, dude_obj, PERK_smooth_talker)) then begin
        giq_option(4, NAME, 317, Node990, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 318, Node999, NEUTRAL_REACTION);
end

procedure Node010
begin
    Reply(325);
    giq_option(4, NAME, 326, Node011, NEUTRAL_REACTION);
    if (has_skill(dude_obj, SKILL_SCIENCE) > 75) then begin
        giq_option(7, NAME, 327, Node012, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 328, Node999, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(335);
    giq_option(4, NAME, 336 + (global_var(GVAR_PLAYER_REPUTATION) < 0), Node999, NEUTRAL_REACTION);
end

procedure Node012
begin
    Reply(345);
    giq_option(4, NAME, 346, Node013, NEUTRAL_REACTION);
    giq_option(4, NAME, 347, Node999, NEUTRAL_REACTION);
end

procedure Node013
begin
    Reply(355);
    giq_option(4, NAME, 356, Node015, NEUTRAL_REACTION);
    giq_option(4, NAME, 357, Node014, NEUTRAL_REACTION);
    giq_option(4, NAME, 358, Node999, NEUTRAL_REACTION);
end

procedure Node014
begin
    if (global_var(GVAR_VAULT_REDDING_PROBLEM) < 2) then begin
        set_global_var(GVAR_VAULT_REDDING_PROBLEM, 2);
    end
    Reply(365);
    giq_option(4, NAME, 366, Node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 367, Node999, NEUTRAL_REACTION);
end

procedure Node015
begin
    Reply(375);
    giq_option(4, NAME, 366, Node014, NEUTRAL_REACTION);
    giq_option(4, NAME, 377, Node999, NEUTRAL_REACTION);
end

procedure Node016
begin
    Reply(385);
    giq_option(4, NAME, 386, Node017, NEUTRAL_REACTION);
    giq_option(4, NAME, 377, Node999, NEUTRAL_REACTION);
end

procedure Node017
begin
    set_global_var(GVAR_NEW_RENO_FLAG_1, global_var(GVAR_NEW_RENO_FLAG_1) bwor 8);
    set_global_var(GVAR_NEW_RENO_MYRON, global_var(GVAR_NEW_RENO_MYRON) bwor 1);
    Reply(395);
    giq_option(4, NAME, 396, Node018, NEUTRAL_REACTION);
    giq_option(4, NAME, 377, Node999, NEUTRAL_REACTION);
end

procedure Node018
begin
    set_global_var(GVAR_NEW_RENO_MYRON, global_var(GVAR_NEW_RENO_MYRON) bwor 2);
    Reply(405);
    if ((obj_is_carrying_obj_pid(self_obj, 413) > 0) and (((global_var(GVAR_NEW_RENO_MYRON) bwand 1024) != 0) == 0)) then begin
        giq_option(4, NAME, 406, Node019, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 407, Node999, NEUTRAL_REACTION);
end

procedure Node019
begin
    set_global_var(GVAR_NEW_RENO_MYRON, global_var(GVAR_NEW_RENO_MYRON) bwor 1024);
    restock_obj := create_object(413, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    display_mstr(1000);
    give_exp_points(500);
    display_msg(g_mstr(100) + 500 + g_mstr(101));
    Reply(415 + ((dude_gender == 1) and (dude_charisma > 5)));
    giq_option(4, NAME, 417, Node999, NEUTRAL_REACTION);
end

procedure Node020
begin
    Reply(425 + (dude_gender == 1));
    giq_option(4, NAME, 427, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 428 + (global_var(GVAR_PLAYER_REPUTATION) < 0), Node999, NEUTRAL_REACTION);
end

procedure Node021
begin
    Reply(435);
    if ((dude_charisma > 6) or (has_skill(dude_obj, SKILL_CONVERSANT) > 75) or has_trait(TRAIT_PERK, dude_obj, PERK_smooth_talker)) then begin
        giq_option(4, NAME, 436, Node022, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 437, Node999, NEUTRAL_REACTION);
end

procedure Node022
begin
    Reply(445);
    giq_option(4, NAME, 446, Node023, BAD_REACTION);
    giq_option(4, NAME, 447, Node025, GOOD_REACTION);
    giq_option(4, NAME, 448, Node013, NEUTRAL_REACTION);
    giq_option(4, NAME, 449, Node999, NEUTRAL_REACTION);
end

procedure Node023
begin
    Reply(455);
    giq_option(4, NAME, 456, Node024, BAD_REACTION);
    giq_option(4, NAME, 457, Node999, NEUTRAL_REACTION);
end

procedure Node024
begin
    Reply(465);
    giq_option(4, NAME, 466, Node998, BAD_REACTION);
    giq_option(4, NAME, 467, Node999, NEUTRAL_REACTION);
end

procedure Node025
begin
    Reply(475);
    giq_option(4, NAME, 476, Node013, NEUTRAL_REACTION);
    giq_option(4, NAME, 477, Node999, NEUTRAL_REACTION);
end

procedure Node026
begin
    Reply(485);
    giq_option(4, NAME, 318, Node999, NEUTRAL_REACTION);
end

procedure Node990
begin
    if ((dude_gender == 1) or (dude_charisma < 6)) then begin
        call Node020();
    end
    else begin
        call Node021();
    end
end
