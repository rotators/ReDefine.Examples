procedure pickup_p_proc;

variable tmp_gen_rep;
variable global_temp;

procedure start;
procedure critter_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure push_p_proc;
procedure timed_event_p_proc;
procedure Node998;
procedure Node999;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;

variable Node3Rep;
variable q2;
variable q3;
variable q4;
variable warpOutPlayer;
variable moveGuards;

procedure Node004a;
procedure Node005a;
procedure Node007a;
procedure Node008a;
procedure Node100;
procedure Node101;
procedure Node150;
procedure Node151;
procedure Node152;


procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure start
begin
    if ((global_var(GVAR_VIGNETTE_SEQUENCE) bwand 1) != 0) then begin
        global_temp := create_object(128, 0, 0);
        move_obj_inven_to_obj(self_obj, global_temp);
        destroy_object(global_temp);
        kill_critter(self_obj, 63);
    end
end

procedure critter_p_proc
begin
    if ((local_var(5) == 2) or map_var(5) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        set_map_var(5, 1);
        attack(dude_obj);
    end
end

procedure talk_p_proc
begin
    if (local_var(5) > 0) then begin
        call Node010();
    end
    else begin
        if (local_var(7) == 3) then begin
            start_gdialog(528, self_obj, 4, -1, -1);
            gsay_start;
            call Node011();
            gsay_end;
            end_dialogue;
        end
        else begin
            if (local_var(4) == 0) then begin
                start_gdialog(528, self_obj, 4, -1, -1);
                gsay_start;
                call Node001();
                gsay_end;
                end_dialogue;
            end
            else begin
                start_gdialog(528, self_obj, 4, -1, -1);
                gsay_start;
                call Node012();
                gsay_end;
                end_dialogue;
            end
        end
    end
    set_local_var(4, 1);
    if (warpOutPlayer == 1) then begin
        warpOutPlayer := 0;
        gfade_out(600);
        move_to(dude_obj, 22504, elevation(self_obj));
        gfade_in(600);
    end
    if (moveGuards == 1) then begin
        moveGuards := 0;
    end
end

procedure destroy_p_proc
begin
    variable LVar0 := 0;
    LVar0 := create_object(113, 0, 0);
    add_obj_to_inven(self_obj, LVar0);
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
        if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
            tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
        end
        if (tmp_gen_rep >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (tmp_gen_rep >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (tmp_gen_rep >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (tmp_gen_rep >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(GVAR_TOWN_REP_VAULT_13, global_var(GVAR_TOWN_REP_VAULT_13) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 0) then begin
        display_mstr(100);
    end
    else begin
        display_mstr(101);
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(102);
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
        set_map_var(5, 1);
    end
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 114);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_TOUGH_CITIZEN);
end

procedure push_p_proc
begin
end

procedure timed_event_p_proc
begin
    if (fixed_param == 10) then begin
        metarule3(100, self_obj, 10, 0);
        gfade_in(60);
    end
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
end

procedure Node001
begin
    Reply(103);
    giq_option(-3, NAME, 104, Node002, NEUTRAL_REACTION);
    giq_option(-3, NAME, 105, Node003, NEUTRAL_REACTION);
    giq_option(-3, NAME, 106, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, mstr(107) + " " + dude_name + mstr(177), Node003, GOOD_REACTION);
    giq_option(4, NAME, 108, Node009, BAD_REACTION);
    giq_option(4, NAME, 109, Node999, NEUTRAL_REACTION);
end

procedure Node002
begin
    Reply(110);
    giq_option(-3, NAME, 111, Node003, NEUTRAL_REACTION);
    giq_option(-3, NAME, 112, Node999, NEUTRAL_REACTION);
end

procedure Node003
begin
    Node3Rep := Node3Rep + 1;
    if (Node3Rep == 1) then begin
        Reply(113);
    end
    else begin
        Reply(114);
    end
    if (local_var(9) == 0) then begin
        giq_option(-3, NAME, 115, Node004a, NEUTRAL_REACTION);
        giq_option(4, NAME, 120, Node004a, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 212, Node100, NEUTRAL_REACTION);
    end
    if (q2 == 0) then begin
        giq_option(-3, NAME, 116, Node005a, NEUTRAL_REACTION);
        giq_option(4, NAME, 121, Node005a, NEUTRAL_REACTION);
    end
    if (q3 == 0) then begin
        giq_option(-3, NAME, 117, Node007a, NEUTRAL_REACTION);
        giq_option(4, NAME, 122, Node007a, NEUTRAL_REACTION);
    end
    if (q4 == 0) then begin
        giq_option(-3, NAME, 118, Node008a, NEUTRAL_REACTION);
        giq_option(4, NAME, 123, Node008a, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 119, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 124, Node999, NEUTRAL_REACTION);
end

procedure Node004
begin
    Reply(125);
    giq_option(-3, NAME, 126, Node003, NEUTRAL_REACTION);
    giq_option(-3, NAME, 127, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 128, Node009, BAD_REACTION);
    giq_option(4, NAME, 129, Node003, NEUTRAL_REACTION);
    giq_option(4, NAME, 130, Node003, GOOD_REACTION);
    if (local_var(6) == 0) then begin
        giq_option(5, NAME, 200, Node150, GOOD_REACTION);
    end
end

procedure Node005
begin
    Reply(131);
    giq_option(-3, NAME, 132, Node006, NEUTRAL_REACTION);
    giq_option(-3, NAME, 133, Node003, NEUTRAL_REACTION);
    giq_option(-3, NAME, 134, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 135, Node003, GOOD_REACTION);
    giq_option(4, NAME, 136, Node003, NEUTRAL_REACTION);
    giq_option(4, NAME, 137, Node009, BAD_REACTION);
    giq_option(4, NAME, 138, Node006, NEUTRAL_REACTION);
end

procedure Node006
begin
    set_global_var(GVAR_V13_GORIS_QST, 1);
    Reply(139);
    giq_option(-3, NAME, 140, Node003, NEUTRAL_REACTION);
    giq_option(-3, NAME, 141, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 142, Node003, NEUTRAL_REACTION);
    giq_option(4, NAME, 143, Node009, BAD_REACTION);
    giq_option(4, NAME, 144, Node003, GOOD_REACTION);
end

procedure Node007
begin
    Reply(145);
    giq_option(-3, NAME, 146, Node003, NEUTRAL_REACTION);
    giq_option(-3, NAME, 147, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 148, Node003, GOOD_REACTION);
    giq_option(4, NAME, 149, Node009, BAD_REACTION);
    giq_option(4, NAME, 150, Node003, NEUTRAL_REACTION);
end

procedure Node008
begin
    Reply(151);
    giq_option(-3, NAME, 152, Node003, NEUTRAL_REACTION);
    giq_option(-3, NAME, 153, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 154, Node003, NEUTRAL_REACTION);
    giq_option(4, NAME, 155, Node009, BAD_REACTION);
    giq_option(4, NAME, 156, Node003, GOOD_REACTION);
end

procedure Node009
begin
    if (local_var(7) == 0) then begin
        set_local_var(7, 1);
        Reply(157);
        giq_option(4, NAME, 160, Node998, BAD_REACTION);
        giq_option(4, NAME, 161, Node003, NEUTRAL_REACTION);
        giq_option(4, NAME, 162, Node003, GOOD_REACTION);
    end
    else begin
        if (local_var(7) == 1) then begin
            set_local_var(7, 2);
            moveGuards := 1;
            Reply(158);
            giq_option(4, NAME, 163, Node003, GOOD_REACTION);
            giq_option(4, NAME, 164, Node003, NEUTRAL_REACTION);
            giq_option(4, NAME, 165, Node998, BAD_REACTION);
        end
        else begin
            if (local_var(7) == 2) then begin
                set_local_var(7, 3);
                warpOutPlayer := 1;
                Reply(159);
            end
        end
    end
end

procedure Node010
begin
    float_msg(self_obj, mstr(166), FLOAT_MSG_NORMAL);
end

procedure Node011
begin
    warpOutPlayer := 1;
    Reply(169);
    giq_option(0, NAME, g_mstr(350), Node999, NEUTRAL_REACTION);
end

procedure Node012
begin
    Reply(172);
    giq_option(-3, NAME, 173, Node003, NEUTRAL_REACTION);
    giq_option(-3, NAME, 174, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 175, Node003, NEUTRAL_REACTION);
    if (local_var(9) > 0) then begin
        giq_option(4, NAME, 213, Node100, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 176, Node999, NEUTRAL_REACTION);
end

procedure Node004a
begin
    set_local_var(9, 1);
    call Node004();
end

procedure Node005a
begin
    q2 := 1;
    call Node005();
end

procedure Node007a
begin
    q3 := 1;
    call Node007();
end

procedure Node008a
begin
    q4 := 1;
    call Node008();
end

procedure Node100
begin
    Reply(215);
    giq_option(4, NAME, 216, Node101, NEUTRAL_REACTION);
    giq_option(4, NAME, 217, Node999, NEUTRAL_REACTION);
end

procedure Node101
begin
    gfade_out(60);
    if (local_var(8) < 11) then begin
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 1);
        set_local_var(8, local_var(8) + 1);
    end
    game_time_advance(9000);
    add_timer_event(self_obj, game_ticks(5), 10);
    call Node999();
end

procedure Node150
begin
    Reply(205);
    giq_option(4, NAME, 206, Node151, NEUTRAL_REACTION);
    giq_option(4, NAME, 207, Node003, NEUTRAL_REACTION);
end

procedure Node151
begin
    gfade_out(60);
    give_exp_points(250);
    display_mstr(220);
    set_local_var(6, 1);
    call Node152();
end

procedure Node152
begin
    gfade_in(60);
    Reply(210);
    giq_option(4, NAME, 211, Node003, NEUTRAL_REACTION);
    giq_option(4, NAME, 212, Node100, NEUTRAL_REACTION);
end
