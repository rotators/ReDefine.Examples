procedure getTimeBit;
procedure start;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;
procedure Node999;
procedure Node001;
procedure Node002;
procedure Node003;
procedure timed_event_p_proc;


procedure getTimeBit
begin
    variable LVar0 := 0;
    LVar0 := game_time_hour;
    if ((LVar0 >= 100) and (LVar0 <= 159)) then begin
        return 1;
    end
    if ((LVar0 >= 200) and (LVar0 <= 259)) then begin
        return 2;
    end
    if ((LVar0 >= 300) and (LVar0 <= 359)) then begin
        return 4;
    end
    if ((LVar0 >= 400) and (LVar0 <= 459)) then begin
        return 8;
    end
    if ((LVar0 >= 500) and (LVar0 <= 559)) then begin
        return 16;
    end
    if ((LVar0 >= 600) and (LVar0 <= 659)) then begin
        return 32;
    end
    if ((LVar0 >= 700) and (LVar0 <= 759)) then begin
        return 64;
    end
    if ((LVar0 >= 800) and (LVar0 <= 859)) then begin
        return 128;
    end
    if ((LVar0 >= 900) and (LVar0 <= 959)) then begin
        return 256;
    end
    if ((LVar0 >= 1000) and (LVar0 <= 1059)) then begin
        return 512;
    end
    if ((LVar0 >= 1100) and (LVar0 <= 1159)) then begin
        return 1024;
    end
    if ((LVar0 >= 1200) and (LVar0 <= 1259)) then begin
        return 2048;
    end
    if ((LVar0 >= 1300) and (LVar0 <= 1359)) then begin
        return 4096;
    end
    if ((LVar0 >= 1400) and (LVar0 <= 1459)) then begin
        return 8192;
    end
    if ((LVar0 >= 1500) and (LVar0 <= 1559)) then begin
        return 16384;
    end
    if ((LVar0 >= 1600) and (LVar0 <= 1659)) then begin
        return 32768;
    end
    if ((LVar0 >= 1700) and (LVar0 <= 1759)) then begin
        return 65536;
    end
    if ((LVar0 >= 1800) and (LVar0 <= 1859)) then begin
        return 131072;
    end
    if ((LVar0 >= 1900) and (LVar0 <= 1959)) then begin
        return 262144;
    end
    if ((LVar0 >= 2000) and (LVar0 <= 2059)) then begin
        return 524288;
    end
    if ((LVar0 >= 2100) and (LVar0 <= 2159)) then begin
        return 1048576;
    end
    if ((LVar0 >= 2200) and (LVar0 <= 2259)) then begin
        return 2097152;
    end
    if ((LVar0 >= 2300) and (LVar0 <= 2359)) then begin
        return 4194304;
    end
    if ((LVar0 >= 2400) and (LVar0 <= 2459)) then begin
        return 8388608;
    end
end

procedure start
begin
end

procedure use_p_proc
begin
    script_overrides;
    dialogue_system_enter;
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(0) == 0) then begin
        display_msg(message_str(SCRIPT_BSCOMP4, 100));
    end
    else begin
        display_msg(message_str(SCRIPT_BSCOMP4, 101));
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(SCRIPT_BSCOMP4, 102));
end

procedure use_skill_on_p_proc
begin
    variable LVar0 := 0;
    LVar0 := action_being_used;
    if (LVar0 == 12) then begin
        call use_p_proc();
    end
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
end

procedure map_enter_p_proc
begin
end

procedure map_update_p_proc
begin
end

procedure talk_p_proc
begin
    start_gdialog(635, self_obj, 4, -1, -1);
    gsay_start;
    call Node001();
    gsay_end;
    end_dialogue;
    set_local_var(0, 1);
end

procedure Node999
begin
end

procedure Node001
begin
    if (map_var(4) == 2) then begin
        if ((map_var(4) bwand 4) != 0) then begin
            gsay_reply(SCRIPT_BSCOMP4, 115);
        end
        else begin
            if ((map_var(4) bwand 1) != 0) then begin
                gsay_reply(SCRIPT_BSCOMP4, 103);
            end
            else begin
                if ((map_var(4) bwand 2) != 0) then begin
                    gsay_reply(SCRIPT_BSCOMP4, 114);
                end
                else begin
                    if ((map_var(4) bwand 8) != 0) then begin
                        gsay_reply(SCRIPT_BSCOMP4, 116);
                    end
                end
            end
        end
    end
    else begin
        gsay_reply(SCRIPT_BSCOMP4, 104);
    end
    if (map_var(4) == 2) then begin
        if ((map_var(4) bwand 1) != 0) then begin
            giq_option(4, SCRIPT_BSCOMP4, 105, Node002, NEUTRAL_REACTION);
        end
        else begin
            if ((map_var(4) bwand 2) != 0) then begin
                giq_option(4, SCRIPT_BSCOMP4, 106, Node003, NEUTRAL_REACTION);
            end
        end
    end
    giq_option(1, SCRIPT_BSCOMP4, 107, Node999, NEUTRAL_REACTION);
end

procedure Node002
begin
    if (is_success(roll_vs_skill(dude_obj, 12, 0))) then begin
        set_map_var(4, map_var(4) bwand (-1 - 1));
        set_map_var(4, map_var(4) bwor 2);
        gsay_reply(SCRIPT_BSCOMP4, 108);
    end
    else begin
        gsay_reply(SCRIPT_BSCOMP4, 109);
    end
    giq_option(1, SCRIPT_BSCOMP4, 110, Node999, NEUTRAL_REACTION);
end

procedure Node003
begin
    if (is_success(roll_vs_skill(dude_obj, 12, 0))) then begin
        set_map_var(4, map_var(4) bwand (-1 - 2));
        set_map_var(4, map_var(4) bwor 1);
        gsay_reply(SCRIPT_BSCOMP4, 111);
    end
    else begin
        gsay_reply(SCRIPT_BSCOMP4, 112);
    end
    giq_option(1, SCRIPT_BSCOMP4, 113, Node999, NEUTRAL_REACTION);
end

procedure timed_event_p_proc
begin
end
