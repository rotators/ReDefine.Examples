variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure combat_p_proc;
procedure Node998;
procedure Node999;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure NodeFleeing;
procedure NodeFighting;

variable Only_Once;
variable n12count;
variable one;
variable two;

procedure checkChoiceOne;
procedure checkChoiceTwo;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if ((local_var(5) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack(dude_obj);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure talk_p_proc
begin
    if (local_var(4) == 0) then begin
        start_gdialog(739, self_obj, 4, -1, -1);
        gsay_start;
        call Node001();
        gsay_end;
        end_dialogue;
        set_local_var(4, 1);
    end
    else begin
        call Node012();
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (critter_kill_type(self_obj) == 2) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(SCRIPT_ECTRAVLR, 100));
end

procedure description_p_proc
begin
    call Node001();
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(6, 1);
    end
end

procedure map_enter_p_proc
begin
    Only_Once := 0;
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 163);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_GENERIC_GUARDS);
    one := -1;
    two := -2;
end

procedure combat_p_proc
begin
    if (critter_is_fleeing(self_obj)) then begin
        if (random(1, 100) <= 20) then begin
            call NodeFleeing();
        end
    end
    else begin
        if (random(1, 100) <= 20) then begin
            call NodeFighting();
        end
    end
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
end

procedure Node001
begin
    gsay_reply(SCRIPT_ECTRAVLR, 101);
    giq_option(4, SCRIPT_ECTRAVLR, 102, Node002, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_ECTRAVLR, 103, Node010, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_ECTRAVLR, 104, Node011, NEUTRAL_REACTION);
    giq_option(-3, SCRIPT_ECTRAVLR, 105, Node999, NEUTRAL_REACTION);
end

procedure Node002
begin
    if (Only_Once == 0) then begin
        one := random(0, 6);
        two := random(0, 5);
        if (two >= one) then begin
            two := two + 1;
        end
        Only_Once := 1;
    end
    gsay_reply(SCRIPT_ECTRAVLR, 106);
    giq_option(4, SCRIPT_ECTRAVLR, 107 + one, checkChoiceOne, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_ECTRAVLR, 107 + two, checkChoiceTwo, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_ECTRAVLR, 114, Node999, NEUTRAL_REACTION);
end

procedure Node003
begin
    if (town_known(7) == 0) then begin
        debug_msg("  mark_on_map(" + 7 + ")");
        mark_area_known(0, 7, 1);
    end
    gsay_reply(SCRIPT_ECTRAVLR, 115);
    giq_option(4, SCRIPT_ECTRAVLR, 150, Node002, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_ECTRAVLR, 116, Node999, NEUTRAL_REACTION);
end

procedure Node004
begin
    if (town_known(4) == 0) then begin
        debug_msg("  mark_on_map(" + 4 + ")");
        mark_area_known(0, 4, 1);
    end
    gsay_reply(SCRIPT_ECTRAVLR, 117);
    giq_option(4, SCRIPT_ECTRAVLR, 150, Node002, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_ECTRAVLR, 118, Node999, NEUTRAL_REACTION);
end

procedure Node005
begin
    if (town_known(13) == 0) then begin
        debug_msg("  mark_on_map(" + 13 + ")");
        mark_area_known(0, 13, 1);
    end
    gsay_reply(SCRIPT_ECTRAVLR, 119);
    giq_option(4, SCRIPT_ECTRAVLR, 150, Node002, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_ECTRAVLR, 120, Node999, NEUTRAL_REACTION);
end

procedure Node006
begin
    if (town_known(1) == 0) then begin
        debug_msg("  mark_on_map(" + 1 + ")");
        mark_area_known(0, 1, 1);
    end
    gsay_reply(SCRIPT_ECTRAVLR, 121);
    giq_option(4, SCRIPT_ECTRAVLR, 150, Node002, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_ECTRAVLR, 122, Node999, NEUTRAL_REACTION);
end

procedure Node007
begin
    if (town_known(14) == 0) then begin
        debug_msg("  mark_on_map(" + 14 + ")");
        mark_area_known(0, 14, 1);
    end
    gsay_reply(SCRIPT_ECTRAVLR, 123);
    giq_option(4, SCRIPT_ECTRAVLR, 150, Node002, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_ECTRAVLR, 124, Node999, NEUTRAL_REACTION);
end

procedure Node008
begin
    if (town_known(10) == 0) then begin
        debug_msg("  mark_on_map(" + 10 + ")");
        mark_area_known(0, 10, 1);
    end
    gsay_reply(SCRIPT_ECTRAVLR, 125);
    giq_option(4, SCRIPT_ECTRAVLR, 150, Node002, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_ECTRAVLR, 126, Node999, NEUTRAL_REACTION);
end

procedure Node009
begin
    if (town_known(12) == 0) then begin
        debug_msg("  mark_on_map(" + 12 + ")");
        mark_area_known(0, 12, 1);
    end
    gsay_reply(SCRIPT_ECTRAVLR, 127);
    giq_option(4, SCRIPT_ECTRAVLR, 150, Node002, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_ECTRAVLR, 128, Node999, NEUTRAL_REACTION);
end

procedure Node010
begin
    gsay_reply(SCRIPT_ECTRAVLR, 129);
    giq_option(4, SCRIPT_ECTRAVLR, 130, Node002, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_ECTRAVLR, 131, Node011, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_ECTRAVLR, 132, Node999, NEUTRAL_REACTION);
end

procedure Node011
begin
    gsay_reply(SCRIPT_ECTRAVLR, 133);
    giq_option(4, SCRIPT_ECTRAVLR, 134, Node002, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_ECTRAVLR, 135, Node010, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_ECTRAVLR, 136, Node999, NEUTRAL_REACTION);
end

procedure Node012
begin
    float_msg(self_obj, message_str(SCRIPT_ECTRAVLR, 137 + n12count), FLOAT_MSG_NORMAL);
    n12count := n12count + 1;
    if (n12count > 3) then begin
        n12count := 0;
    end
    if ((n12count == 2) and not((game_time_hour > 600) and (game_time_hour < 1800))) then begin
        n12count := 3;
    end
end

procedure NodeFleeing
begin
    float_msg(self_obj, message_str(SCRIPT_ECTRAVLR, 105 + random(0, 3)), FLOAT_MSG_YELLOW);
end

procedure NodeFighting
begin
    float_msg(self_obj, message_str(SCRIPT_ECTRAVLR, 100 + random(0, 4)), FLOAT_MSG_RED);
end

procedure checkChoiceOne
begin
    if (one == 0) then begin
        call Node003();
    end
    else begin
        if (one == 1) then begin
            call Node004();
        end
        else begin
            if (one == 2) then begin
                call Node005();
            end
            else begin
                if (one == 3) then begin
                    call Node006();
                end
                else begin
                    if (one == 4) then begin
                        call Node007();
                    end
                    else begin
                        if (one == 5) then begin
                            call Node008();
                        end
                        else begin
                            if (one == 6) then begin
                                call Node009();
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure checkChoiceTwo
begin
    if (two == 0) then begin
        call Node003();
    end
    else begin
        if (two == 1) then begin
            call Node004();
        end
        else begin
            if (two == 2) then begin
                call Node005();
            end
            else begin
                if (two == 3) then begin
                    call Node006();
                end
                else begin
                    if (two == 4) then begin
                        call Node007();
                    end
                    else begin
                        if (two == 5) then begin
                            call Node008();
                        end
                        else begin
                            if (two == 6) then begin
                                call Node009();
                            end
                        end
                    end
                end
            end
        end
    end
end
