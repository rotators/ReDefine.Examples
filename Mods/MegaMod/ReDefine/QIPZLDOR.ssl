variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure map_enter_p_proc;
procedure use_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure use_skill_on_p_proc;
procedure look_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure map_enter_p_proc
begin
end

procedure use_p_proc
begin
    if (obj_is_locked(self_obj)) then begin
        script_overrides;
        if (local_var(0) == 0) then begin
            if (source_obj == dude_obj) then begin
                display_mstr(120);
            end
            else begin
                display_msg(obj_name(source_obj) + mstr(121));
            end
            critter_dmg(source_obj, random(20, 40), 4 bwor 256);
        end
        else begin
            if (source_obj == dude_obj) then begin
                display_mstr(125);
            end
            else begin
                display_mstr(126);
            end
        end
    end
end

procedure use_obj_on_p_proc
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    LVar0 := obj_pid(obj_being_used_with);
    if (local_var(0) == 0) then begin
        if (source_obj == dude_obj) then begin
            display_mstr(120);
        end
        else begin
            display_msg(obj_name(source_obj) + mstr(121));
        end
        critter_dmg(source_obj, random(20, 40), 4 bwor 256);
    end
    else begin
        if (LVar0 == 77) then begin
            LVar1 := roll_vs_skill(source_obj, 9, map_var(3) + 20);
            if (is_success(LVar1)) then begin
                if (source_obj == dude_obj) then begin
                    display_mstr(135);
                end
                else begin
                    display_mstr(136);
                end
                give_exp_points(115);
                display_msg(g_mstr(100) + 115 + g_mstr(101));
                obj_unlock(self_obj);
                obj_open(self_obj);
            end
            else begin
                if (source_obj == dude_obj) then begin
                    display_mstr(130);
                end
                else begin
                    display_mstr(131);
                end
            end
        end
        else begin
            if (LVar0 == 411) then begin
                LVar1 := roll_vs_skill(source_obj, 9, map_var(3) + 40);
                if (is_success(LVar1)) then begin
                    if (source_obj == dude_obj) then begin
                        display_mstr(135);
                    end
                    else begin
                        display_mstr(136);
                    end
                    give_exp_points(115);
                    display_msg(g_mstr(100) + 115 + g_mstr(101));
                    obj_unlock(self_obj);
                    obj_open(self_obj);
                end
                else begin
                    if (source_obj == dude_obj) then begin
                        display_mstr(130);
                    end
                    else begin
                        display_mstr(131);
                    end
                end
            end
        end
    end
end

procedure damage_p_proc
begin
end

procedure use_skill_on_p_proc
begin
    variable LVar0 := 0;
    if (action_being_used == 9) then begin
        script_overrides;
        LVar0 := roll_vs_skill(source_obj, action_being_used, map_var(3));
        set_map_var(3, map_var(3) - 10);
        if (local_var(0) == 0) then begin
            if (source_obj == dude_obj) then begin
                display_mstr(120);
            end
            else begin
                display_msg(obj_name(source_obj) + mstr(121));
            end
            critter_dmg(source_obj, random(20, 40), 4 bwor 256);
        end
        else begin
            if (is_success(LVar0)) then begin
                if (source_obj == dude_obj) then begin
                    display_mstr(135);
                end
                else begin
                    display_mstr(136);
                end
                give_exp_points(115);
                display_msg(g_mstr(100) + 115 + g_mstr(101));
                obj_unlock(self_obj);
                obj_open(self_obj);
            end
            else begin
                if (source_obj == dude_obj) then begin
                    display_mstr(130);
                end
                else begin
                    display_mstr(131);
                end
            end
        end
    end
    else begin
        if (action_being_used == 11) then begin
            script_overrides;
            LVar0 := roll_vs_skill(source_obj, action_being_used, -40);
            if (is_success(LVar0)) then begin
                if (source_obj == dude_obj) then begin
                    display_mstr(105);
                end
                else begin
                    display_msg(obj_name(source_obj) + mstr(106));
                end
                set_local_var(0, 1);
                add_timer_event(self_obj, game_ticks(30), 1);
            end
            else begin
                if (is_critical(LVar0)) then begin
                    if (source_obj == dude_obj) then begin
                        display_mstr(110);
                    end
                    else begin
                        display_msg(obj_name(source_obj) + mstr(111));
                    end
                    critter_dmg(source_obj, 2 * random(20, 40), 4 bwor 256);
                end
                else begin
                    if (source_obj == dude_obj) then begin
                        display_mstr(115);
                    end
                    else begin
                        display_msg(obj_name(source_obj) + mstr(116));
                    end
                    critter_dmg(source_obj, random(20, 40), 4 bwor 256);
                end
            end
        end
    end
end

procedure look_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(101);
end

procedure timed_event_p_proc
begin
    set_local_var(0, 0);
end
