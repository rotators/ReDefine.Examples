variable tmp_gen_rep;
variable global_temp;

procedure start;
procedure timed_event_p_proc;
procedure talk_p_proc;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure destroy_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure description_p_proc;
procedure look_at_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node006a;
procedure Node007;
procedure Node008;
procedure Node998;
procedure Node999;

variable count;
variable Only_Once;


procedure start
begin
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if (not(combat_is_initialized)) then begin
            if (not(anim_busy(self_obj)) and obj_on_screen(self_obj)) then begin
                if (obj_can_see_obj(self_obj, dude_obj)) then begin
                    reg_anim_func(1, 1);
                    anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
                    reg_anim_func(3, 0);
                end
            end
            if ((local_var(7) == 0) and (tile_distance_objs(dude_obj, self_obj) < 10)) then begin
                dialogue_system_enter;
            end
        end
        add_timer_event(self_obj, 10, 1);
    end
end

procedure talk_p_proc
begin
    if (local_var(7) == 0) then begin
        start_gdialog(2320, self_obj, 4, -1, -1);
        gsay_start;
        call Node001();
        gsay_end;
        end_dialogue;
    end
    else begin
        if (count < 6) then begin
            float_msg(self_obj, mstr(random(150, 159)), FLOAT_MSG_RED);
            count := count + 1;
        end
        if (count > 5) then begin
            float_msg(self_obj, mstr(160), FLOAT_MSG_RED);
            set_local_var(5, 2);
        end
    end
end

procedure critter_p_proc
begin
    if (local_var(5) == 2) then begin
        attack(dude_obj);
    end
end

procedure pickup_p_proc
begin
    attack(source_obj);
    set_map_var(11, 1);
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_BAD_MONSTER, global_var(GVAR_BAD_MONSTER) + 1);
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 5);
        debug_msg("Player gains " + 5 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
        if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
            tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
        end
        if (tmp_gen_rep >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (tmp_gen_rep >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (tmp_gen_rep >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (tmp_gen_rep >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure damage_p_proc
begin
    attack(source_obj);
    set_map_var(11, 1);
end

procedure map_enter_p_proc
begin
    variable LVar0 := 0;
    Only_Once := 0;
    LVar0 := create_object(394, 0, 0);
    add_obj_to_inven(self_obj, LVar0);
    wield_obj_critter(self_obj, LVar0);
    LVar0 := create_object(305, 0, 0);
    add_obj_to_inven(self_obj, LVar0);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 190);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_ENCLAVE_PATROL);
    add_timer_event(self_obj, 10, 1);
    anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
    return 0;
    LVar0 := 0;
end

procedure description_p_proc
begin
end

procedure look_at_p_proc
begin
end

procedure Node001
begin
    Reply(100);
    giq_option(4, NAME, 101, Node003, BAD_REACTION);
    giq_option(4, NAME, 102, Node002, NEUTRAL_REACTION);
    giq_option(-3, NAME, 201, Node003, NEUTRAL_REACTION);
    set_local_var(7, 1);
end

procedure Node002
begin
    Reply(105);
    giq_option(4, NAME, 106, Node004, NEUTRAL_REACTION);
    giq_option(4, NAME, 107, Node003, BAD_REACTION);
    if (dude_skill(SKILL_SPEECH) > 85) then begin
        giq_option(4, NAME, 114, Node008, NEUTRAL_REACTION);
    end
end

procedure Node003
begin
    if (dude_gender == 0) then begin
        Reply(103);
    end
    else begin
        Reply(120);
    end
    giq_option(4, NAME, 104, Node998, BAD_REACTION);
    giq_option(-3, NAME, 202, Node998, BAD_REACTION);
end

procedure Node004
begin
    Reply(108);
    giq_option(4, NAME, 109, Node003, BAD_REACTION);
    giq_option(4, NAME, 110, Node005, NEUTRAL_REACTION);
    if (party_member_obj(16777323) != 0) then begin
        giq_option(4, NAME, 200, Node005, NEUTRAL_REACTION);
    end
end

procedure Node005
begin
    variable LVar0 := 0;
    LVar0 := do_check(dude_obj, 6, 0);
    if (is_success(LVar0)) then begin
        call Node006();
    end
    else begin
        call Node007();
    end
    return 0;
    LVar0 := 0;
end

procedure Node006
begin
    Reply(111);
    giq_option(4, NAME, 125, Node006a, NEUTRAL_REACTION);
    giq_option(4, NAME, 126, Node006a, NEUTRAL_REACTION);
    giq_option(4, NAME, 127, Node006a, NEUTRAL_REACTION);
end

procedure Node006a
begin
    set_global_var(GVAR_LETTER_DELIVER, 1);
end

procedure Node007
begin
    Reply(112 + (dude_gender == 1));
    giq_option(4, NAME, 128, Node998, BAD_REACTION);
    giq_option(4, NAME, 129, Node998, BAD_REACTION);
    giq_option(4, NAME, 130, Node998, BAD_REACTION);
end

procedure Node008
begin
    Reply(115);
    giq_option(4, NAME, 116, Node006, NEUTRAL_REACTION);
end

procedure Node998
begin
    set_local_var(5, 2);
    set_map_var(11, 1);
end

procedure Node999
begin
    debug_msg("LVAR_Herebefore == " + local_var(4));
    if (local_var(4) == 0) then begin
        set_local_var(4, 1);
    end
end
