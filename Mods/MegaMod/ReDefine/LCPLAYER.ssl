variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable last_timed_obj;
variable last_timed_param;
variable floater_patch_msg;
variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure map_update_p_proc;
procedure push_p_proc;
procedure Node998;
procedure Node999;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;

variable slot_obj;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(0) bwand 2) != 0) then begin
            if (critter_is_fleeing(self_obj)) then begin
                if (anim_busy(self_obj) == 0) then begin
                    if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                        if (anim_busy(self_obj) == 0) then begin
                            global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                                debug_msg("flee loop: rot == " + global_temp);
                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                global_temp := (global_temp + 1) % 6;
                            end
                        end
                    end
                end
            end
            else begin
                attack(dude_obj);
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(0, local_var(0) bwor 2);
    end
end

procedure talk_p_proc
begin
    script_overrides;
    if (global_var(GVAR_FALLOUT_2) == 8) then begin
        call Node011();
    end
    else begin
        if ((obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 3) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 348) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 349) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 232)) then begin
            call Node012();
        end
        else begin
            if (global_var(GVAR_NEW_RENO_MADE_MAN) > 0) then begin
                call Node013();
            end
            else begin
                if (obj_can_see_obj(self_obj, party_member_obj(16777295))) then begin
                    call Node009();
                end
                else begin
                    call Node010();
                end
            end
        end
    end
    last_timed_obj := self_obj;
    last_timed_param := last_timed_param;
    rm_fixed_timer_event(self_obj, 1);
    add_timer_event(self_obj, game_ticks(25) + random(0, game_ticks(35 - 25)), 1);
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (critter_kill_type(self_obj) == KILL_TYPE_children_kills) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - -15);
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(SCRIPT_NCCASPAT, 100));
end

procedure description_p_proc
begin
    script_overrides;
    if (self_gender == 1) then begin
        display_msg(message_str(SCRIPT_NCCASPAT, random(156, 161)));
    end
    else begin
        display_msg(message_str(SCRIPT_NCCASPAT, random(150, 155)));
    end
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(0, local_var(0) bwor 8);
        set_local_var(0, local_var(0) bwor 2);
    end
end

procedure map_enter_p_proc
begin
    variable LVar0 := 0;
    if (is_loading_game == 0) then begin
        if (map_first_run) then begin
            set_local_var(1, tile_num(self_obj));
            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_COWARD);
        end
        if (random(1, 10) <= (6 + ((game_time_hour <= 600) or (game_time_hour >= 1800)))) then begin
            if (obj_is_visible_flag(self_obj) == 0) then begin
                set_obj_visibility(self_obj, 0);
            end
        end
        else begin
            if (obj_is_visible_flag(self_obj) == 1) then begin
                set_obj_visibility(self_obj, 1);
            end
        end
        last_timed_obj := self_obj;
        last_timed_param := last_timed_param;
        rm_fixed_timer_event(self_obj, 1);
        add_timer_event(self_obj, game_ticks(10) + random(0, game_ticks(20 - 10)), 1);
    end
    return 0;
    LVar0 := 0;
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if (obj_is_visible_flag(self_obj)) then begin
            if (combat_is_initialized == 0) then begin
                if (random(1, 5) == 2) then begin
                    if (obj_can_see_obj(self_obj, dude_obj)) then begin
                        if (global_var(GVAR_FALLOUT_2) == 8) then begin
                            call Node003();
                        end
                        else begin
                            if ((obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 3) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 348) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 349) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 232)) then begin
                                call Node004();
                            end
                            else begin
                                if ((global_var(GVAR_NEW_RENO_MADE_MAN) > 0) or (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1)))) then begin
                                    call Node005();
                                end
                                else begin
                                    if (obj_can_see_obj(self_obj, party_member_obj(16777295))) then begin
                                        call Node009();
                                    end
                                end
                            end
                        end
                    end
                end
                else begin
                    if (anim_busy(self_obj) == 0) then begin
                        slot_obj := tile_contains_pid_obj(tile_num_in_direction(tile_num(self_obj), 5, 1), elevation(self_obj), 33554898);
                        if (slot_obj == 0) then begin
                            slot_obj := tile_contains_pid_obj(tile_num_in_direction(tile_num(self_obj), 0, 1), elevation(self_obj), 33554897);
                        end
                        if ((slot_obj != 0) and (item_caps_total(self_obj) > 0) and (random(1, 20) != 14)) then begin
                            if (random(0, 1)) then begin
                                call Node010();
                            end
                            if (rotation_to_tile(tile_num(self_obj), tile_num(slot_obj)) != obj_get_rot(self_obj)) then begin
                                anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(slot_obj)));
                            end
                            else begin
                                reg_anim_func(2, self_obj);
                                reg_anim_func(1, 1);
                                reg_anim_animate(self_obj, 11, -1);
                                reg_anim_func(3, 0);
                                if ((random(0, 100) <= 17) and (item_caps_total(self_obj) < 30)) then begin
                                    item_caps_adjust(self_obj, random(1, 10));
                                    last_timed_obj := self_obj;
                                    last_timed_param := last_timed_param;
                                    rm_fixed_timer_event(self_obj, 43);
                                    add_timer_event(self_obj, 5, 43);
                                end
                                else begin
                                    if (item_caps_total(self_obj) > 3) then begin
                                        item_caps_adjust(self_obj, -1);
                                    end
                                end
                            end
                        end
                        else begin
                            if ((tile_distance(tile_num(self_obj), local_var(1)) > 4) and (random(1, 10) != 2)) then begin
                                animate_move_obj_to_tile(self_obj, local_var(1), 0);
                            end
                            else begin
                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(local_var(1), random(0, 5), random(1, 5)), 0);
                            end
                        end
                    end
                end
            end
        end
        last_timed_obj := self_obj;
        last_timed_param := last_timed_param;
        rm_fixed_timer_event(self_obj, 1);
        add_timer_event(self_obj, game_ticks(10) + random(0, game_ticks(20 - 10)), 1);
    end
    else begin
        if (fixed_param == 43) then begin
            play_sfx("winner");
        end
    end
end

procedure map_update_p_proc
begin
end

procedure push_p_proc
begin
    slot_obj := tile_contains_pid_obj(tile_num_in_direction(tile_num(self_obj), 5, 1), elevation(self_obj), 33554898);
    if (slot_obj == 0) then begin
        slot_obj := tile_contains_pid_obj(tile_num_in_direction(tile_num(self_obj), 0, 1), elevation(self_obj), 33554897);
    end
    if (slot_obj != 0) then begin
        script_overrides;
    end
end

procedure Node998
begin
    set_local_var(0, local_var(0) bwor 2);
end

procedure Node999
begin
end

procedure Node003
begin
    if (message_str(SCRIPT_NCPERSON, 100) == "You see one of the Reno townsfolk.") then begin
        floater_patch_msg := random(200, 205);
        if ((floater_patch_msg >= 203) and (floater_patch_msg <= 205) or (floater_patch_msg == 325) or (floater_patch_msg == 330) or (floater_patch_msg == 331)) then begin
            float_msg(self_obj, message_str(SCRIPT_NCCASPAT, floater_patch_msg) + dude_name + message_str(SCRIPT_NCCASPAT, floater_patch_msg + 300), FLOAT_MSG_YELLOW);
        end
        else begin
            float_msg(self_obj, message_str(SCRIPT_NCCASPAT, floater_patch_msg), FLOAT_MSG_YELLOW);
        end
    end
    else begin
        float_msg(self_obj, message_str(SCRIPT_NCCASPAT, 202), FLOAT_MSG_YELLOW);
    end
end

procedure Node004
begin
    if (message_str(SCRIPT_NCPERSON, 100) == "You see one of the Reno townsfolk.") then begin
        float_msg(self_obj, message_str(SCRIPT_NCCASPAT, random(206, 215)), FLOAT_MSG_YELLOW);
    end
    else begin
        float_msg(self_obj, message_str(SCRIPT_NCCASPAT, 206), FLOAT_MSG_YELLOW);
    end
end

procedure Node005
begin
    if (message_str(SCRIPT_NCPERSON, 100) == "You see one of the Reno townsfolk.") then begin
        float_msg(self_obj, message_str(SCRIPT_NCCASPAT, random(222 - (6 * (dude_gender == 0)), 225 + (7 * (dude_gender == 1)))), FLOAT_MSG_YELLOW);
    end
    else begin
        float_msg(self_obj, message_str(SCRIPT_NCCASPAT, random(223, 225)), FLOAT_MSG_YELLOW);
    end
end

procedure Node006
begin
    if (message_str(SCRIPT_NCPERSON, 100) == "You see one of the Reno townsfolk.") then begin
        float_msg(self_obj, message_str(SCRIPT_NCCASPAT, random(234 - (dude_gender == 0), 241 + (2 * (dude_gender == 1)))), FLOAT_MSG_YELLOW);
    end
    else begin
        float_msg(self_obj, message_str(SCRIPT_NCCASPAT, random(235, 236)), FLOAT_MSG_YELLOW);
    end
end

procedure Node007
begin
    if (message_str(SCRIPT_NCPERSON, 100) == "You see one of the Reno townsfolk.") then begin
        float_msg(self_obj, message_str(SCRIPT_NCCASPAT, random(244, 267)), FLOAT_MSG_YELLOW);
    end
    else begin
        float_msg(self_obj, message_str(SCRIPT_NCCASPAT, random(244, 245)), FLOAT_MSG_YELLOW);
    end
end

procedure Node008
begin
    if (message_str(SCRIPT_NCPERSON, 100) == "You see one of the Reno townsfolk.") then begin
        float_msg(self_obj, message_str(SCRIPT_NCCASPAT, random(268, 276)), FLOAT_MSG_YELLOW);
    end
    else begin
        float_msg(self_obj, message_str(SCRIPT_NCCASPAT, random(268, 269)), FLOAT_MSG_YELLOW);
    end
end

procedure Node009
begin
    if (message_str(SCRIPT_NCPERSON, 100) == "You see one of the Reno townsfolk.") then begin
        float_msg(self_obj, message_str(SCRIPT_NCCASPAT, random(277, 279)), FLOAT_MSG_YELLOW);
    end
    else begin
        float_msg(self_obj, message_str(SCRIPT_NCCASPAT, 278), FLOAT_MSG_YELLOW);
    end
end

procedure Node010
begin
    if (message_str(SCRIPT_NCPERSON, 100) == "You see one of the Reno townsfolk.") then begin
        float_msg(self_obj, message_str(SCRIPT_NCCASPAT, random(280, 320)), FLOAT_MSG_YELLOW);
    end
    else begin
        float_msg(self_obj, message_str(SCRIPT_NCCASPAT, random(281, 288)), FLOAT_MSG_YELLOW);
    end
end

procedure Node011
begin
    if (message_str(SCRIPT_NCPERSON, 100) == "You see one of the Reno townsfolk.") then begin
        floater_patch_msg := random(321, 331);
        if ((floater_patch_msg >= 203) and (floater_patch_msg <= 205) or (floater_patch_msg == 325) or (floater_patch_msg == 330) or (floater_patch_msg == 331)) then begin
            float_msg(self_obj, message_str(SCRIPT_NCCASPAT, floater_patch_msg) + dude_name + message_str(SCRIPT_NCCASPAT, floater_patch_msg + 300), FLOAT_MSG_YELLOW);
        end
        else begin
            float_msg(self_obj, message_str(SCRIPT_NCCASPAT, floater_patch_msg), FLOAT_MSG_YELLOW);
        end
    end
    else begin
        float_msg(self_obj, message_str(SCRIPT_NCCASPAT, 321), FLOAT_MSG_YELLOW);
    end
end

procedure Node012
begin
    if (message_str(SCRIPT_NCPERSON, 100) == "You see one of the Reno townsfolk.") then begin
        float_msg(self_obj, message_str(SCRIPT_NCCASPAT, random(332, 352)), FLOAT_MSG_YELLOW);
    end
    else begin
        float_msg(self_obj, message_str(SCRIPT_NCCASPAT, random(340, 341)), FLOAT_MSG_YELLOW);
    end
end

procedure Node013
begin
    if (message_str(SCRIPT_NCPERSON, 100) == "You see one of the Reno townsfolk.") then begin
        float_msg(self_obj, message_str(SCRIPT_NCCASPAT, random(353, 358)), FLOAT_MSG_YELLOW);
    end
    else begin
        float_msg(self_obj, message_str(SCRIPT_NCCASPAT, random(353, 354)), FLOAT_MSG_YELLOW);
    end
end

procedure Node014
begin
    if (message_str(SCRIPT_NCPERSON, 100) == "You see one of the Reno townsfolk.") then begin
        float_msg(self_obj, message_str(SCRIPT_NCCASPAT, random(359, 376)), FLOAT_MSG_YELLOW);
    end
    else begin
        float_msg(self_obj, message_str(SCRIPT_NCCASPAT, random(372, 373)), FLOAT_MSG_YELLOW);
    end
end
