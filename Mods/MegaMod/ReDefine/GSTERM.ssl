variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure use_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure decode;
procedure compile;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure Node035;
procedure Node036;
procedure Node037;
procedure Node038;
procedure Node039;
procedure Node040;
procedure Node041;
procedure Node042;
procedure Node043;
procedure Node044;
procedure Node045;
procedure Node046;
procedure Node047;
procedure Node048;
procedure Node050;
procedure Node999;

variable Only_Once;
variable pick;
variable from34;
variable line;
variable mycommand;
variable item;
variable Tool;
variable off_ptr;
variable off_hex;

import variable robot_obj;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure critter_p_proc
begin
end

procedure pickup_p_proc
begin
end

procedure use_p_proc
begin
    dialogue_system_enter;
end

procedure talk_p_proc
begin
    set_global_var(GVAR_DROP_PLAYER_BY_VAULT_8, 1);
    start_gdialog(516, self_obj, 4, -1, -1);
    gsay_start;
    if (dude_is_stupid) then begin
        call Node005();
    end
    else begin
        if (global_var(GVAR_GECKO_WORKING_ON_PLANT) > 0) then begin
            call Node050();
        end
        else begin
            if (local_var(0) == 3) then begin
                call Node015();
            end
            else begin
                if (local_var(0) == 2) then begin
                    call Node034();
                end
                else begin
                    if (local_var(0) == 1) then begin
                        call Node009();
                    end
                    else begin
                        call Node001();
                    end
                end
            end
        end
    end
    gsay_end;
    end_dialogue;
    set_global_var(GVAR_DROP_PLAYER_BY_VAULT_8, 0);
end

procedure destroy_p_proc
begin
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(101);
end

procedure use_skill_on_p_proc
begin
end

procedure use_obj_on_p_proc
begin
    script_overrides;
    if (global_var(GVAR_QUEST_OPTIMIZE_POWER_PLANT) != 2) then begin
        Tool := obj_pid(obj_being_used_with);
        if (Tool == 303) then begin
            if (global_var(GVAR_VAULT_GECKO_PLANT) >= 13) then begin
                item := obj_carrying_pid_obj(dude_obj, 303);
                rm_obj_from_inven(dude_obj, item);
                destroy_object(item);
                set_global_var(GVAR_QUEST_OPTIMIZE_POWER_PLANT, 2);
                set_global_var(GVAR_VAULT_GECKO_PLANT, 15);
                set_global_var(GVAR_VAULT_PLANT_STATUS, 15);
                display_mstr(800);
                give_exp_points(2500);
                display_msg(g_mstr(100) + 2500 + g_mstr(101));
                set_global_var(GVAR_TOWN_REP_GECKO, global_var(GVAR_TOWN_REP_GECKO) + 15);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 20);
                debug_msg("Player gains " + 20 + " Karma Points.");
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            else begin
                float_msg(self_obj, mstr(730), FLOAT_MSG_YELLOW);
            end
        end
    end
end

procedure damage_p_proc
begin
end

procedure map_enter_p_proc
begin
end

procedure decode
begin
    if (line == 1) then begin
        mycommand := map_var(11);
    end
    else begin
        if (line == 2) then begin
            mycommand := map_var(12);
        end
        else begin
            if (line == 3) then begin
                mycommand := map_var(13);
            end
            else begin
                if (line == 4) then begin
                    mycommand := map_var(14);
                end
                else begin
                    if (line == 5) then begin
                        mycommand := map_var(15);
                    end
                    else begin
                        if (line == 6) then begin
                            mycommand := map_var(16);
                        end
                    end
                end
            end
        end
    end
end

procedure compile
begin
    if (line == 1) then begin
        set_map_var(11, mycommand);
    end
    else begin
        if (line == 2) then begin
            set_map_var(12, mycommand);
        end
        else begin
            if (line == 3) then begin
                set_map_var(13, mycommand);
            end
            else begin
                if (line == 4) then begin
                    set_map_var(14, mycommand);
                end
                else begin
                    if (line == 5) then begin
                        set_map_var(15, mycommand);
                    end
                    else begin
                        if (line == 6) then begin
                            set_map_var(16, mycommand);
                        end
                    end
                end
            end
        end
    end
end

procedure Node001
begin
    Reply(110);
    giq_option(4, NAME, 111, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 112, Node003, NEUTRAL_REACTION);
    giq_option(4, NAME, 113, Node004, NEUTRAL_REACTION);
    giq_option(4, NAME, 114, Node006, NEUTRAL_REACTION);
    giq_option(4, NAME, 115, Node999, NEUTRAL_REACTION);
end

procedure Node002
begin
    Reply(120);
    giq_option(4, NAME, 121, Node003, NEUTRAL_REACTION);
    giq_option(4, NAME, 122, Node006, NEUTRAL_REACTION);
    giq_option(4, NAME, 123, Node999, NEUTRAL_REACTION);
end

procedure Node003
begin
    Reply(130);
    giq_option(4, NAME, 131, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 132, Node006, NEUTRAL_REACTION);
    giq_option(4, NAME, 133, Node999, NEUTRAL_REACTION);
end

procedure Node004
begin
    Reply(140);
    giq_option(4, NAME, 141, Node006, NEUTRAL_REACTION);
    if (dude_skill(SKILL_SCIENCE) > 49) then begin
        giq_option(4, NAME, 142, Node012, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 143, Node999, NEUTRAL_REACTION);
end

procedure Node005
begin
    Reply(150);
    giq_option(1, NAME, 151, Node999, NEUTRAL_REACTION);
    giq_option(1, NAME, 152, Node999, NEUTRAL_REACTION);
end

procedure Node006
begin
    Reply(160);
    giq_option(4, NAME, 161, Node003, NEUTRAL_REACTION);
    giq_option(4, NAME, 162, Node004, NEUTRAL_REACTION);
    giq_option(4, NAME, 163, Node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 164, Node007, NEUTRAL_REACTION);
    giq_option(4, NAME, 165, Node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 166, Node999, NEUTRAL_REACTION);
end

procedure Node007
begin
    Reply(170);
    giq_option(4, NAME, 171, Node006, NEUTRAL_REACTION);
    giq_option(4, NAME, 172, Node003, NEUTRAL_REACTION);
    giq_option(4, NAME, 173, Node004, NEUTRAL_REACTION);
    giq_option(4, NAME, 174, Node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 175, Node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 176, Node008, NEUTRAL_REACTION);
    giq_option(4, NAME, 177, Node999, NEUTRAL_REACTION);
end

procedure Node008
begin
    Reply(180);
    giq_option(4, NAME, 181, Node006, NEUTRAL_REACTION);
    giq_option(4, NAME, 182, Node003, NEUTRAL_REACTION);
    giq_option(4, NAME, 183, Node004, NEUTRAL_REACTION);
    giq_option(4, NAME, 184, Node009, NEUTRAL_REACTION);
    giq_option(4, NAME, 185, Node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 186, Node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 187, Node999, NEUTRAL_REACTION);
end

procedure Node009
begin
    if (from34) then begin
        Reply(191);
    end
    else begin
        set_local_var(0, 1);
        Reply(190);
    end
    giq_option(4, NAME, 192, Node010, NEUTRAL_REACTION);
    giq_option(4, NAME, 193, Node013, NEUTRAL_REACTION);
    giq_option(4, NAME, 194, Node010, NEUTRAL_REACTION);
    giq_option(4, NAME, 195, Node014, NEUTRAL_REACTION);
    giq_option(4, NAME, 196, Node999, NEUTRAL_REACTION);
end

procedure Node010
begin
    Reply(200);
    giq_option(4, NAME, 201, Node011, NEUTRAL_REACTION);
    giq_option(4, NAME, 202, Node009, NEUTRAL_REACTION);
    giq_option(4, NAME, 203, Node999, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(210);
    giq_option(4, NAME, 211, Node009, NEUTRAL_REACTION);
    if (dude_skill(SKILL_SCIENCE) > 49) then begin
        giq_option(4, NAME, 212, Node012, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 213, Node999, NEUTRAL_REACTION);
end

procedure Node012
begin
    Reply(220);
    giq_option(4, NAME, 221, Node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 222, Node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 223, Node017, NEUTRAL_REACTION);
    giq_option(4, NAME, 224, Node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 225, Node999, NEUTRAL_REACTION);
end

procedure Node013
begin
    Reply(230);
    giq_option(4, NAME, 231, Node027, NEUTRAL_REACTION);
    giq_option(4, NAME, 232, Node999, NEUTRAL_REACTION);
end

procedure Node014
begin
    Reply(240);
    if (obj_is_carrying_obj_pid(dude_obj, 258)) then begin
        giq_option(4, NAME, 241, Node025, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 242, Node024, NEUTRAL_REACTION);
    giq_option(4, NAME, 243, Node999, NEUTRAL_REACTION);
end

procedure Node015
begin
    Reply(250);
    giq_option(4, NAME, 251, Node999, NEUTRAL_REACTION);
    giq_option(6, NAME, 252, Node001, NEUTRAL_REACTION);
end

procedure Node016
begin
    if (local_var(1) < 4) then begin
        set_local_var(1, local_var(1) + 1);
    end
    if (local_var(1) == 1) then begin
        Reply(300);
        giq_option(4, NAME, 304, Node011, NEUTRAL_REACTION);
    end
    else begin
        if (local_var(1) == 2) then begin
            Reply(301);
            giq_option(4, NAME, 305, Node011, NEUTRAL_REACTION);
        end
        else begin
            if (local_var(1) == 3) then begin
                Reply(302);
                giq_option(4, NAME, 306, Node011, NEUTRAL_REACTION);
            end
            else begin
                if (local_var(1) > 3) then begin
                    set_local_var(0, 3);
                    Reply(303);
                    giq_option(4, NAME, 307, Node999, NEUTRAL_REACTION);
                end
            end
        end
    end
    giq_option(4, NAME, 308, Node999, NEUTRAL_REACTION);
end

procedure Node017
begin
    Reply(310);
    giq_option(4, NAME, 311, Node018, NEUTRAL_REACTION);
    giq_option(4, NAME, 312, Node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 313, Node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 314, Node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 315, Node999, NEUTRAL_REACTION);
end

procedure Node018
begin
    Reply(320);
    giq_option(4, NAME, 321, Node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 322, Node019, NEUTRAL_REACTION);
    giq_option(4, NAME, 323, Node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 324, Node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 325, Node999, NEUTRAL_REACTION);
end

procedure Node019
begin
    Reply(330);
    giq_option(4, NAME, 331, Node020, NEUTRAL_REACTION);
    giq_option(4, NAME, 332, Node021, NEUTRAL_REACTION);
    giq_option(4, NAME, 333, Node999, NEUTRAL_REACTION);
end

procedure Node020
begin
    Reply(340);
    giq_option(4, NAME, 341, Node019, NEUTRAL_REACTION);
    giq_option(4, NAME, 342, Node021, NEUTRAL_REACTION);
    giq_option(4, NAME, 343, Node999, NEUTRAL_REACTION);
end

procedure Node021
begin
    Reply(350);
    giq_option(4, NAME, 351, Node020, NEUTRAL_REACTION);
    giq_option(4, NAME, 352, Node022, NEUTRAL_REACTION);
    giq_option(4, NAME, 353, Node999, NEUTRAL_REACTION);
end

procedure Node022
begin
    Reply(360);
    giq_option(4, NAME, 361, Node023, NEUTRAL_REACTION);
    giq_option(6, NAME, 362, Node023, NEUTRAL_REACTION);
    giq_option(4, NAME, 363, Node009, NEUTRAL_REACTION);
end

procedure Node023
begin
    if (local_var(2) < 9) then begin
        set_local_var(2, local_var(2) + 1);
    end
    if (local_var(2) == 1) then begin
        off_ptr := create_object_sid(16777697, 0, 0, SCRIPT_GCPACOFF);
        off_hex := 18477;
        move_to(off_ptr, off_hex, dude_elevation);
    end
    else begin
        if (local_var(2) == 2) then begin
            Reply(370);
        end
        else begin
            if (local_var(2) == 3) then begin
                Reply(371);
            end
            else begin
                if (local_var(2) == 4) then begin
                    Reply(372);
                end
                else begin
                    if (local_var(2) == 5) then begin
                        Reply(373);
                    end
                    else begin
                        if (local_var(2) == 6) then begin
                            Reply(374);
                        end
                        else begin
                            if (local_var(2) == 7) then begin
                                Reply(375);
                            end
                            else begin
                                if (local_var(2) > 7) then begin
                                    Reply(376);
                                end
                            end
                        end
                    end
                end
            end
        end
        if (local_var(2) < 9) then begin
            giq_option(4, NAME, 377, Node023, NEUTRAL_REACTION);
        end
        giq_option(6, NAME, 378, Node009, NEUTRAL_REACTION);
        giq_option(4, NAME, 379, Node999, NEUTRAL_REACTION);
    end
end

procedure Node024
begin
    Reply(380);
    giq_option(4, NAME, 381, Node013, NEUTRAL_REACTION);
    giq_option(4, NAME, 382, Node999, NEUTRAL_REACTION);
end

procedure Node025
begin
    item := obj_carrying_pid_obj(dude_obj, 258);
    rm_obj_from_inven(dude_obj, item);
    add_obj_to_inven(robot_obj, item);
    Reply(390);
    giq_option(4, NAME, 391, Node027, NEUTRAL_REACTION);
    giq_option(4, NAME, 392, Node999, NEUTRAL_REACTION);
end

procedure Node026
begin
    Reply(400);
    giq_option(4, NAME, 401, Node030, NEUTRAL_REACTION);
    giq_option(4, NAME, 402, Node999, NEUTRAL_REACTION);
end

procedure Node027
begin
    Reply(410);
    giq_option(4, NAME, 411, Node028, NEUTRAL_REACTION);
    giq_option(4, NAME, 412, Node030, NEUTRAL_REACTION);
end

procedure Node028
begin
    Reply(420);
    giq_option(4, NAME, 421, Node029, NEUTRAL_REACTION);
    giq_option(4, NAME, 422, Node030, NEUTRAL_REACTION);
end

procedure Node029
begin
    Reply(430);
    giq_option(4, NAME, 431, Node026, NEUTRAL_REACTION);
    giq_option(4, NAME, 432, Node030, NEUTRAL_REACTION);
end

procedure Node030
begin
    Reply(440);
    giq_option(4, NAME, 441, Node031, NEUTRAL_REACTION);
    giq_option(4, NAME, 442, Node034, NEUTRAL_REACTION);
    giq_option(4, NAME, 443, Node999, NEUTRAL_REACTION);
end

procedure Node031
begin
    Reply(450);
    if (global_var(GVAR_VAULT_GECKO_PLANT) == 7) then begin
        giq_option(4, NAME, 451, Node032, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 452, Node033, NEUTRAL_REACTION);
    giq_option(4, NAME, 453, Node999, NEUTRAL_REACTION);
end

procedure Node032
begin
    Reply(460);
    giq_option(4, NAME, 461, Node033, NEUTRAL_REACTION);
    giq_option(4, NAME, 462, Node034, NEUTRAL_REACTION);
    giq_option(4, NAME, 463, Node999, NEUTRAL_REACTION);
end

procedure Node033
begin
    Reply(470);
    giq_option(4, NAME, 471, Node030, NEUTRAL_REACTION);
    giq_option(4, NAME, 472, Node034, NEUTRAL_REACTION);
    giq_option(4, NAME, 473, Node999, NEUTRAL_REACTION);
end

procedure Node034
begin
    from34 := 1;
    set_local_var(0, 2);
    if (map_var(18) > 10) then begin
        Reply(710);
        giq_option(4, NAME, 740, Node999, NEUTRAL_REACTION);
    end
    else begin
        if (map_var(8) == 1) then begin
            Reply(700);
            giq_option(4, NAME, 740, Node999, NEUTRAL_REACTION);
        end
        else begin
            if (map_var(10) > 0) then begin
                set_map_var(10, 0);
                set_map_var(9, 0);
                Reply(720);
                giq_option(4, NAME, 740, Node034, NEUTRAL_REACTION);
            end
            else begin
                Reply(535);
                giq_option(4, NAME, 540, Node035, NEUTRAL_REACTION);
                giq_option(4, NAME, 541, Node036, NEUTRAL_REACTION);
                giq_option(4, NAME, 544, Node039, NEUTRAL_REACTION);
                giq_option(4, NAME, 545, Node040, NEUTRAL_REACTION);
                giq_option(4, NAME, 546, Node009, NEUTRAL_REACTION);
                giq_option(4, NAME, 547, Node999, NEUTRAL_REACTION);
            end
        end
    end
end

procedure Node035
begin
    if (map_var(8) == 1) then begin
        debug_msg("RUNNING");
    end
    if (map_var(9) > 5) then begin
        Reply(730);
    end
    else begin
        Reply(600);
        giq_option(4, NAME, 601, Node041, NEUTRAL_REACTION);
        giq_option(4, NAME, 602, Node042, NEUTRAL_REACTION);
        giq_option(4, NAME, 603, Node043, NEUTRAL_REACTION);
        giq_option(4, NAME, 604, Node044, NEUTRAL_REACTION);
        giq_option(4, NAME, 605, Node045, NEUTRAL_REACTION);
        if (map_var(9) > 4) then begin
            giq_option(4, NAME, 606, Node046, NEUTRAL_REACTION);
            if (global_var(GVAR_VAULT_PLANT_STATUS) == 11) then begin
                giq_option(4, NAME, 608, Node048, NEUTRAL_REACTION);
            end
            else begin
                giq_option(4, NAME, 607, Node047, NEUTRAL_REACTION);
            end
        end
    end
    giq_option(4, NAME, 550, Node034, NEUTRAL_REACTION);
end

procedure Node036
begin
    Reply(620);
    if (map_var(9) > 0) then begin
        line := 1;
        giq_option(4, NAME, "1) " + mstr(600 + map_var(11)), Node034, NEUTRAL_REACTION);
    end
    if (map_var(9) > 1) then begin
        line := 2;
        giq_option(4, NAME, "2) " + mstr(600 + map_var(12)), Node034, NEUTRAL_REACTION);
    end
    if (map_var(9) > 2) then begin
        line := 3;
        giq_option(4, NAME, "3) " + mstr(600 + map_var(13)), Node034, NEUTRAL_REACTION);
    end
    if (map_var(9) > 3) then begin
        line := 4;
        giq_option(4, NAME, "4) " + mstr(600 + map_var(14)), Node034, NEUTRAL_REACTION);
    end
    if (map_var(9) > 4) then begin
        line := 5;
        giq_option(4, NAME, "5) " + mstr(600 + map_var(15)), Node034, NEUTRAL_REACTION);
    end
    if (map_var(9) > 5) then begin
        line := 6;
        giq_option(4, NAME, "6) " + mstr(600 + map_var(16)), Node034, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 660, Node034, NEUTRAL_REACTION);
    giq_option(4, NAME, 550, Node034, NEUTRAL_REACTION);
end

procedure Node037
begin
    Reply(630);
    giq_option(4, NAME, 550, Node034, NEUTRAL_REACTION);
end

procedure Node038
begin
    Reply(640);
    giq_option(4, NAME, 550, Node034, NEUTRAL_REACTION);
end

procedure Node039
begin
    set_map_var(9, 0);
    Reply(650);
    giq_option(4, NAME, 550, Node034, NEUTRAL_REACTION);
end

procedure Node040
begin
    debug_msg("RUNNING");
    set_map_var(8, 1);
end

procedure Node041
begin
    line := map_var(9) + 1;
    set_map_var(9, line);
    mycommand := 1;
    call compile();
    call Node036();
end

procedure Node042
begin
    line := map_var(9) + 1;
    set_map_var(9, line);
    mycommand := 2;
    call compile();
    call Node036();
end

procedure Node043
begin
    line := map_var(9) + 1;
    set_map_var(9, line);
    mycommand := 3;
    call compile();
    call Node036();
end

procedure Node044
begin
    line := map_var(9) + 1;
    set_map_var(9, line);
    mycommand := 4;
    call compile();
    call Node036();
end

procedure Node045
begin
    line := map_var(9) + 1;
    set_map_var(9, line);
    mycommand := 5;
    call compile();
    call Node036();
end

procedure Node046
begin
    line := map_var(9) + 1;
    set_map_var(9, line);
    mycommand := 6;
    call compile();
    call Node036();
end

procedure Node047
begin
    line := map_var(9) + 1;
    set_map_var(9, line);
    mycommand := 7;
    call compile();
    call Node036();
end

procedure Node048
begin
    line := map_var(9) + 1;
    set_map_var(9, line);
    mycommand := 8;
    call compile();
    call Node036();
end

procedure Node050
begin
    Reply(900);
    giq_option(1, NAME, 910, Node999, NEUTRAL_REACTION);
end

procedure Node999
begin
end
