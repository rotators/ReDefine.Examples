variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure talk_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_p_proc;
procedure damage_p_proc;
procedure Node999;
procedure Node001;
procedure Node001a;
procedure Node001b;
procedure Node002;
procedure Node002a;
procedure Node003;
procedure Node004;
procedure Node010;
procedure Node011;
procedure Node011a;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;

variable Only_Once;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure talk_p_proc
begin
    if (global_var(GVAR_BRAIN_BOT_BRAIN) == 4) then begin
        start_gdialog(156, self_obj, 4, -1, -1);
        gsay_start;
        call Node004();
        gsay_end;
        end_dialogue;
    end
    else begin
        if (global_var(GVAR_SIERRA_LOCKOUT) == 1) then begin
            start_gdialog(156, self_obj, 4, -1, -1);
            gsay_start;
            call Node003();
            gsay_end;
            end_dialogue;
        end
        else begin
            if (map_var(26) == 1) then begin
                start_gdialog(156, self_obj, 4, -1, -1);
                gsay_start;
                call Node001();
                gsay_end;
                end_dialogue;
            end
            else begin
                start_gdialog(156, self_obj, 4, -1, -1);
                gsay_start;
                call Node002();
                gsay_end;
                end_dialogue;
            end
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(101);
end

procedure use_skill_on_p_proc
begin
end

procedure use_p_proc
begin
    variable LVar0 := 0;
    script_overrides;
    if (local_var(0) == 1) then begin
        display_mstr(200);
    end
    else begin
        if (global_var(GVAR_SIERRA_BASE_ENEMY) == 1) then begin
            LVar0 := random(20, 30);
            critter_damage(source_obj, LVar0);
            display_msg(message_str(SCRIPT_WSTERM1B, 300));
        end
        else begin
            if (get_critter_stat(source_obj, STAT_iq) < 4) then begin
                if (source_obj == dude_obj) then begin
                    display_msg(message_str(SCRIPT_WSTERM1B, 102));
                end
                else begin
                    display_msg(obj_name(source_obj) + message_str(SCRIPT_WSTERM1B, 200));
                end
            end
            else begin
                dialogue_system_enter;
            end
        end
    end
end

procedure damage_p_proc
begin
end

procedure Node999
begin
end

procedure Node001
begin
    if (global_var(GVAR_SIERRA_BASE_POWER) == 1) then begin
        Reply(104);
    end
    else begin
        Reply(105);
    end
    giq_option(6, NAME, 106, Node016, NEUTRAL_REACTION);
    if (dude_perception > 6) then begin
        giq_option(4, NAME, 107, Node011, NEUTRAL_REACTION);
    end
    if (local_var(3) == 0) then begin
        giq_option(8, NAME, 108, Node001a, NEUTRAL_REACTION);
    end
    if (local_var(4) == 0) then begin
        giq_option(4, NAME, 109, Node001b, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 110, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 111, Node999, NEUTRAL_REACTION);
end

procedure Node001a
begin
    set_local_var(3, 1);
    set_local_var(4, 1);
    if (dude_skill(SKILL_SCIENCE) > 90) then begin
        display_msg(g_mstr(1004));
        give_exp_points(500);
        display_msg(g_mstr(100) + 500 + g_mstr(101));
        call Node014();
    end
    else begin
        if (is_success(roll_vs_skill(dude_obj, 12, -50))) then begin
            display_msg(g_mstr(1004));
            give_exp_points(500);
            display_msg(g_mstr(100) + 500 + g_mstr(101));
            call Node014();
        end
        else begin
            call Node015();
        end
    end
end

procedure Node001b
begin
    set_local_var(3, 1);
    set_local_var(4, 1);
    if (dude_skill(SKILL_SCIENCE) > 105) then begin
        display_msg(g_mstr(1004));
        give_exp_points(550);
        display_msg(g_mstr(100) + 550 + g_mstr(101));
        call Node014();
    end
    else begin
        if (is_success(roll_vs_skill(dude_obj, 12, -65))) then begin
            display_msg(g_mstr(1004));
            give_exp_points(550);
            display_msg(g_mstr(100) + 550 + g_mstr(101));
            call Node014();
        end
        else begin
            call Node015();
        end
    end
end

procedure Node002
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    variable LVar3 := 0;
    variable LVar4 := 0;
    if (local_var(2) == 0) then begin
        set_local_var(2, game_time / (10 * 60 * 60 * 24));
        LVar0 := 305;
    end
    else begin
        LVar2 := 1;
        LVar0 := (game_time / (10 * 60 * 60 * 24)) - local_var(2);
        set_local_var(2, game_time / (10 * 60 * 60 * 24));
    end
    if (map_var(49) == 1) then begin
        LVar1 := 303;
    end
    else begin
        LVar1 := 304;
    end
    if (map_var(25) == 1) then begin
        LVar4 := "1";
        LVar3 := 1;
    end
    if (map_var(26) == 1) then begin
        if (LVar3 == 1) then begin
            LVar4 := LVar4 + ", 2";
        end
        else begin
            LVar4 := LVar4 + "2";
        end
        LVar3 := 1;
    end
    if (map_var(27) == 1) then begin
        if (LVar3 == 1) then begin
            LVar4 := LVar4 + ", 3";
        end
        else begin
            LVar4 := LVar4 + "3";
        end
        LVar3 := 1;
    end
    if (LVar4) then begin
        LVar4 := LVar4 + ".";
    end
    if (LVar2 == 0) then begin
        if (LVar3) then begin
            Reply(mstr(113) + mstr(LVar1) + mstr(301) + mstr(LVar0) + mstr(307));
        end
        else begin
            Reply(mstr(113) + mstr(LVar1) + mstr(301) + mstr(LVar0) + mstr(114));
        end
    end
    else begin
        if (LVar3) then begin
            Reply(mstr(113) + mstr(LVar1) + mstr(301) + LVar0 + mstr(306) + mstr(307));
        end
        else begin
            Reply(mstr(113) + mstr(LVar1) + mstr(301) + LVar0 + mstr(306) + mstr(114));
        end
    end
    giq_option(4, NAME, 115, Node002a, NEUTRAL_REACTION);
    giq_option(4, NAME, 116, Node012, NEUTRAL_REACTION);
    giq_option(4, NAME, 117, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 118, Node999, NEUTRAL_REACTION);
end

procedure Node002a
begin
    set_map_var(26, 1);
    call Node001();
end

procedure Node003
begin
    Reply(120);
    giq_option(4, NAME, 122, Node999, NEUTRAL_REACTION);
end

procedure Node004
begin
    Reply(124);
    giq_option(4, NAME, 126, Node999, NEUTRAL_REACTION);
end

procedure Node010
begin
    Reply(127);
    giq_option(4, NAME, 128, Node011, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(129);
    giq_option(4, NAME, 130, Node010, NEUTRAL_REACTION);
    giq_option(4, NAME, 131, Node012, NEUTRAL_REACTION);
    giq_option(4, NAME, 132, Node011a, NEUTRAL_REACTION);
    giq_option(4, NAME, 133, Node999, NEUTRAL_REACTION);
end

procedure Node011a
begin
    if (map_var(26) == 1) then begin
        call Node001();
    end
    else begin
        call Node002();
    end
end

procedure Node012
begin
    Reply(134);
    giq_option(4, NAME, 135, Node013, NEUTRAL_REACTION);
    giq_option(4, NAME, 136, Node017, NEUTRAL_REACTION);
    giq_option(4, NAME, 137, Node999, NEUTRAL_REACTION);
end

procedure Node013
begin
    set_map_var(26, 0);
    Reply(138);
    giq_option(4, NAME, 139, Node999, NEUTRAL_REACTION);
end

procedure Node014
begin
    set_map_var(26, 0);
    Reply(140);
    giq_option(4, NAME, 141, Node999, NEUTRAL_REACTION);
end

procedure Node015
begin
    set_global_var(GVAR_SIERRA_LOCKOUT, 1);
    Reply(142);
    giq_option(4, NAME, 143, Node999, NEUTRAL_REACTION);
end

procedure Node016
begin
    set_global_var(GVAR_SIERRA_LOCKOUT, 1);
    Reply(144);
    giq_option(4, NAME, 145, Node999, NEUTRAL_REACTION);
end

procedure Node017
begin
    Reply(146);
    giq_option(4, NAME, 147, Node011a, NEUTRAL_REACTION);
end
