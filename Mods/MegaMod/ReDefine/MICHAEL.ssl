procedure start;
procedure goto0;
procedure goto1;
procedure goto2;
procedure goto3;
procedure goto3a;
procedure goto4;
procedure goto5;
procedure goto10;
procedure goto11;
procedure goto11a;
procedure goto12;
procedure goto13;
procedure goto13a;
procedure goto13b;
procedure goto14;
procedure goto15;
procedure goto16;
procedure goto16a;
procedure goto16b;
procedure goto17;
procedure goto18;
procedure goto19;
procedure goto20;
procedure goto21;
procedure goto22;
procedure goto23;
procedure goto24;
procedure goto26;
procedure goto27;
procedure goto28;
procedure goto29;
procedure goto30;
procedure goto38;
procedure goto39;
procedure goto40;
procedure goto41;
procedure goto42;
procedure goto43;
procedure goto44a;
procedure goto44b;
procedure goto44c;
procedure goto44d;
procedure goto44e;
procedure goto44f;
procedure goto44g;
procedure goto44h;
procedure goto44i;
procedure goto47;
procedure goto47a;
procedure goto48;
procedure goto49;
procedure goto52a;
procedure goto53;
procedure goto54;
procedure goto55;
procedure goto60;
procedure goto61;
procedure goto72;
procedure goto73;
procedure goto73a;
procedure goto73b;
procedure goto73c;
procedure goto74;
procedure goto75;
procedure goto75a;
procedure goto75b;
procedure goto75c;
procedure goto76;
procedure goto76a;
procedure goto77;
procedure goto78;
procedure goto79;
procedure goto79a;
procedure goto80;
procedure goto144;
procedure goto145;
procedure goto146a;
procedure goto146b;
procedure goto147;
procedure goto148;
procedure goto149;
procedure goto150;
procedure do_dialogue;
procedure combat;
procedure gotoend;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;

variable hostile;
variable Only_Once := 1;
variable Open_Door;
variable item;
variable conmod;
variable femmod;
variable Hear_28;
variable Hear_29;
variable Hear_50;
variable temp;
variable temp2;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable exit_line;


procedure start
begin
    if (Only_Once) then begin
        Only_Once := 0;
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 44);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_PARTY_MARCUS_AGGRESSIVE);
    end
    if (script_action == look_at_proc) then begin
        call look_at_p_proc();
    end
    else begin
        if (script_action == pickup_proc) then begin
            call pickup_p_proc();
        end
        else begin
            if (script_action == talk_proc) then begin
                call talk_p_proc();
            end
            else begin
                if (script_action == critter_proc) then begin
                    call critter_p_proc();
                end
                else begin
                    if (script_action == destroy_proc) then begin
                        call destroy_p_proc();
                    end
                end
            end
        end
    end
end

procedure goto0
begin
    float_msg(self_obj, message_str(SCRIPT_NCBOXER, 103), FLOAT_MSG_NORMAL);
end

procedure goto1
begin
    float_msg(self_obj, message_str(SCRIPT_NCBOXER, 104), FLOAT_MSG_NORMAL);
end

procedure goto2
begin
    float_msg(self_obj, message_str(SCRIPT_NCBOXER, 105), FLOAT_MSG_NORMAL);
end

procedure goto3
begin
    gsay_reply(0, message_str(SCRIPT_NCBOXER, 106));
    if (local_var(6) == 0) then begin
        giq_option(5, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 107), goto3a, GOOD_REACTION);
        giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 108), goto11, NEUTRAL_REACTION);
        giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 109), goto10, NEUTRAL_REACTION);
    end
    if (map_var(9) > 0) then begin
        giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 146), goto48, NEUTRAL_REACTION);
    end
    giq_option(-3, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 110), goto4, NEUTRAL_REACTION);
end

procedure goto3a
begin
    call UpReact();
    call goto11();
end

procedure goto4
begin
    gsay_reply(0, message_str(SCRIPT_NCBOXER, 111));
    giq_option(-3, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 112), goto5, NEUTRAL_REACTION);
    giq_option(-3, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 113), goto5, NEUTRAL_REACTION);
end

procedure goto5
begin
    gsay_message(0, message_str(SCRIPT_NCBOXER, 114), NEUTRAL_REACTION);
end

procedure goto10
begin
    gsay_message(0, message_str(SCRIPT_NCBOXER, 115), NEUTRAL_REACTION);
end

procedure goto11
begin
    set_local_var(6, 1);
    gsay_reply(0, message_str(SCRIPT_NCBOXER, 116));
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 118), goto26, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 119), gotoend, NEUTRAL_REACTION);
end

procedure goto11a
begin
    if (is_success(do_check(dude_obj, 3, 0))) then begin
        call goto13();
    end
    else begin
        call goto12();
    end
end

procedure goto12
begin
    gsay_message(0, message_str(SCRIPT_NCBOXER, 120), NEUTRAL_REACTION);
end

procedure goto13
begin
    gsay_message(0, message_str(SCRIPT_NCBOXER, 121), NEUTRAL_REACTION);
    giq_option(5, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 122), goto13a, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 123), goto13b, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 124), goto22, NEUTRAL_REACTION);
end

procedure goto13a
begin
    if (is_success(do_check(dude_obj, 3, 0))) then begin
        if (dude_gender == 0) then begin
            call goto16();
        end
        else begin
            call goto18();
        end
    end
    else begin
        if (dude_gender == 0) then begin
            call goto14();
        end
        else begin
            call goto17();
        end
    end
end

procedure goto13b
begin
    if (is_success(do_check(dude_obj, 3, 0))) then begin
        call goto22();
    end
    else begin
        call goto15();
    end
end

procedure goto14
begin
    gsay_message(0, message_str(SCRIPT_NCBOXER, 125), BAD_REACTION);
    call DownReact();
end

procedure goto15
begin
    gsay_message(0, message_str(SCRIPT_NCBOXER, 126), BAD_REACTION);
    call DownReact();
end

procedure goto16
begin
    gsay_reply(0, message_str(SCRIPT_NCBOXER, 127));
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 128), goto16a, GOOD_REACTION);
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 129), goto16b, BAD_REACTION);
end

procedure goto16a
begin
    call BigUpReact();
    call goto19();
end

procedure goto16b
begin
    call DownReact();
    call goto20();
end

procedure goto17
begin
    gsay_message(0, message_str(SCRIPT_NCBOXER, 130), BAD_REACTION);
    call DownReact();
end

procedure goto18
begin
    gsay_reply(0, message_str(SCRIPT_NCBOXER, 131));
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 132), goto16a, GOOD_REACTION);
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 133), goto16b, BAD_REACTION);
end

procedure goto19
begin
    gsay_message(0, message_str(SCRIPT_NCBOXER, 134), GOOD_REACTION);
    call TopReact();
    item := create_object(27, 0, 0);
    add_obj_to_inven(dude_obj, item);
    item := create_object(27, 0, 0);
    add_obj_to_inven(dude_obj, item);
    item := create_object(27, 0, 0);
    add_obj_to_inven(dude_obj, item);
end

procedure goto20
begin
    gsay_message(0, message_str(SCRIPT_NCBOXER, 135), NEUTRAL_REACTION);
end

procedure goto21
begin
    gsay_message(0, message_str(SCRIPT_NCBOXER, 136), NEUTRAL_REACTION);
end

procedure goto22
begin
    gsay_reply(0, message_str(SCRIPT_NCBOXER, 137));
    giq_option(6, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 138), goto23, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 139), goto24, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 140), gotoend, NEUTRAL_REACTION);
end

procedure goto23
begin
    gsay_message(0, message_str(SCRIPT_NCBOXER, 141), NEUTRAL_REACTION);
    call TopReact();
    item := create_object(110, 0, 0);
    add_obj_to_inven(dude_obj, item);
    item := create_object(110, 0, 0);
    add_obj_to_inven(dude_obj, item);
end

procedure goto24
begin
    if (dude_gender == 0) then begin
        gsay_message(0, message_str(SCRIPT_NCBOXER, 142), NEUTRAL_REACTION);
    end
    else begin
        gsay_message(0, message_str(SCRIPT_NCBOXER, 143), NEUTRAL_REACTION);
    end
end

procedure goto26
begin
    gsay_reply(0, message_str(SCRIPT_NCBOXER, 144));
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 145), goto27, NEUTRAL_REACTION);
    if (map_var(9) > 0) then begin
        giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 146), goto48, NEUTRAL_REACTION);
    end
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 147), goto27, NEUTRAL_REACTION);
end

procedure goto27
begin
    gsay_reply(0, message_str(SCRIPT_NCBOXER, 148));
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 149), goto28, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 150), goto29, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 151), gotoend, NEUTRAL_REACTION);
end

procedure goto28
begin
    Hear_28 := 1;
    gsay_reply(0, message_str(SCRIPT_NCBOXER, 152));
    if (Hear_29 == 0) then begin
        giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 153), goto29, NEUTRAL_REACTION);
    end
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 154), gotoend, NEUTRAL_REACTION);
end

procedure goto29
begin
    Hear_29 := 1;
    gsay_reply(0, message_str(SCRIPT_NCBOXER, 155));
    if (Hear_28 == 0) then begin
        giq_option(8, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 156), goto30, NEUTRAL_REACTION);
        giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 157), goto28, NEUTRAL_REACTION);
    end
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 158), gotoend, NEUTRAL_REACTION);
end

procedure goto30
begin
    gsay_reply(0, message_str(SCRIPT_NCBOXER, 159));
    giq_option(8, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 160), UpReact, NEUTRAL_REACTION);
end

procedure goto38
begin
    gsay_reply(0, message_str(SCRIPT_NCBOXER, 167));
    temp2 := map_var(11) + 1;
    set_map_var(11, temp2);
    temp2 := map_var(9) - 1;
    set_map_var(9, temp2);
    item := create_object(temp, 0, 0);
    add_obj_to_inven(dude_obj, item);
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 168), gotoend, NEUTRAL_REACTION);
    if (map_var(9) > 0) then begin
        giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 169), goto43, NEUTRAL_REACTION);
    end
end

procedure goto39
begin
    gsay_reply(0, message_str(SCRIPT_NCBOXER, 170));
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 171), gotoend, NEUTRAL_REACTION);
    if (map_var(9) > 0) then begin
        giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 172), goto43, NEUTRAL_REACTION);
    end
end

procedure goto40
begin
    gsay_reply(0, message_str(SCRIPT_NCBOXER, 173));
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 174), gotoend, NEUTRAL_REACTION);
    if (map_var(9) > 0) then begin
        giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 175), goto43, NEUTRAL_REACTION);
    end
end

procedure goto41
begin
    gsay_reply(0, message_str(SCRIPT_NCBOXER, 176));
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 177), gotoend, NEUTRAL_REACTION);
    if (map_var(9) > 0) then begin
        giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 178), goto43, NEUTRAL_REACTION);
    end
end

procedure goto42
begin
    gsay_reply(0, message_str(SCRIPT_NCBOXER, 179));
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 180), gotoend, NEUTRAL_REACTION);
    if (map_var(9) > 0) then begin
        giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 181), goto43, NEUTRAL_REACTION);
    end
end

procedure goto43
begin
    gsay_message(0, message_str(SCRIPT_NCBOXER, 182), NEUTRAL_REACTION);
    call goto49();
end

procedure goto44a
begin
    temp := 29;
    call goto38();
end

procedure goto44b
begin
    temp := 30;
    call goto38();
end

procedure goto44c
begin
    temp := 31;
    call goto38();
end

procedure goto44d
begin
    temp := 111;
    call goto38();
end

procedure goto44e
begin
    temp := 33;
    call goto38();
end

procedure goto44f
begin
    temp := 34;
    call goto38();
end

procedure goto44g
begin
    temp := 35;
    call goto38();
end

procedure goto44h
begin
    temp := 36;
    call goto38();
end

procedure goto44i
begin
    temp := 95;
    call goto38();
end

procedure goto47
begin
    gsay_reply(0, message_str(SCRIPT_NCBOXER, 183));
    if (map_var(9) > 0) then begin
        giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 185), goto48, NEUTRAL_REACTION);
    end
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 186), gotoend, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 187), goto47a, BAD_REACTION);
    if ((global_var(GVAR_BH_CONSPIRACY) == 1) and (local_var(8) == 0)) then begin
        set_local_var(8, 1);
        giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 240), goto72, NEUTRAL_REACTION);
    end
    giq_option(-3, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 110), goto4, NEUTRAL_REACTION);
end

procedure goto47a
begin
    call BigDownReact();
    call gotoend();
end

procedure goto48
begin
    gsay_message(0, message_str(SCRIPT_NCBOXER, 188), NEUTRAL_REACTION);
    call goto49();
end

procedure goto49
begin
    gsay_message(0, message_str(SCRIPT_NCBOXER, 189), NEUTRAL_REACTION);
    if (map_var(20) > 0) then begin
        call goto146a();
    end
    if (map_var(12) > 0) then begin
        call goto146b();
    end
    else begin
        if (map_var(13) > 0) then begin
            call goto147();
        end
        else begin
            if (map_var(14) > 0) then begin
                call goto148();
            end
            else begin
                if (map_var(15) > 0) then begin
                    call goto149();
                end
                else begin
                    if (map_var(16) > 0) then begin
                        call goto150();
                    end
                    else begin
                        if (map_var(10) > map_var(11)) then begin
                            call goto144();
                        end
                    end
                end
            end
        end
    end
end

procedure goto52a
begin
    if (dude_gender == 0) then begin
        call goto54();
    end
    else begin
        call goto55();
    end
end

procedure goto53
begin
    gsay_message(0, message_str(SCRIPT_NCBOXER, 200), NEUTRAL_REACTION);
end

procedure goto54
begin
    gsay_message(0, message_str(SCRIPT_NCBOXER, 201), NEUTRAL_REACTION);
end

procedure goto55
begin
    gsay_message(0, message_str(SCRIPT_NCBOXER, 202), NEUTRAL_REACTION);
end

procedure goto60
begin
    gsay_reply(0, message_str(SCRIPT_NCBOXER, 207));
    if (map_var(9) > 0) then begin
        giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 208), goto61, NEUTRAL_REACTION);
    end
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 209), gotoend, NEUTRAL_REACTION);
end

procedure goto61
begin
    gsay_message(0, message_str(SCRIPT_NCBOXER, 210), NEUTRAL_REACTION);
    call goto49();
end

procedure goto72
begin
    femmod := (dude_charisma - 5) * 10;
    gsay_reply(0, message_str(SCRIPT_NCBOXER, 241));
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 242), goto73, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 243), goto76, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 244), goto77, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 245), goto79, NEUTRAL_REACTION);
end

procedure goto73
begin
    gsay_reply(0, message_str(SCRIPT_NCBOXER, 246));
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 247), goto73a, NEUTRAL_REACTION);
    giq_option(6, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 248), goto73b, NEUTRAL_REACTION);
    giq_option(7, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 249), gotoend, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 250), goto73c, NEUTRAL_REACTION);
end

procedure goto73a
begin
    if (dude_gender == 0) then begin
        conmod := -30;
    end
    else begin
        conmod := femmod;
    end
    if (is_success(roll_vs_skill(dude_obj, 14, conmod))) then begin
        call goto74();
    end
    else begin
        call goto80();
    end
end

procedure goto73b
begin
    if (dude_gender == 0) then begin
        conmod := -20;
    end
    else begin
        conmod := femmod;
    end
    if (is_success(roll_vs_skill(dude_obj, 14, conmod))) then begin
        call goto74();
    end
    else begin
        call goto80();
    end
end

procedure goto73c
begin
    if (dude_gender == 0) then begin
        conmod := -10;
    end
    else begin
        conmod := femmod;
    end
    if (is_success(roll_vs_skill(dude_obj, 14, conmod))) then begin
        call goto74();
    end
    else begin
        call goto75();
    end
end

procedure goto74
begin
    item := create_object(229, 0, 0);
    add_obj_to_inven(dude_obj, item);
    gsay_reply(0, message_str(SCRIPT_NCBOXER, 251));
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 252), gotoend, NEUTRAL_REACTION);
end

procedure goto75
begin
    gsay_reply(0, message_str(SCRIPT_NCBOXER, 253));
    giq_option(6, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 254), goto75a, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 255), goto75b, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 256), goto75c, NEUTRAL_REACTION);
end

procedure goto75a
begin
    if (dude_gender == 0) then begin
        conmod := 0;
    end
    else begin
        conmod := femmod;
    end
    if (is_success(roll_vs_skill(dude_obj, 14, conmod))) then begin
        call goto74();
    end
    else begin
        call goto80();
    end
end

procedure goto75b
begin
    if (dude_gender == 0) then begin
        conmod := -100;
    end
    else begin
        conmod := femmod;
    end
    if (is_success(roll_vs_skill(dude_obj, 14, conmod))) then begin
        call goto74();
    end
    else begin
        call goto80();
    end
end

procedure goto75c
begin
    if (dude_gender == 0) then begin
        conmod := -20;
    end
    else begin
        conmod := femmod;
    end
    if (is_success(roll_vs_skill(dude_obj, 14, conmod))) then begin
        call goto74();
    end
    else begin
        call goto80();
    end
end

procedure goto76
begin
    gsay_reply(0, message_str(SCRIPT_NCBOXER, 257));
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 258), goto76a, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 259), gotoend, NEUTRAL_REACTION);
end

procedure goto76a
begin
    if (dude_gender == 0) then begin
        conmod := -20;
    end
    else begin
        conmod := femmod;
    end
    if (is_success(roll_vs_skill(dude_obj, 14, conmod))) then begin
        call goto74();
    end
    else begin
        call goto75();
    end
end

procedure goto77
begin
    gsay_reply(0, message_str(SCRIPT_NCBOXER, 260));
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 261), goto78, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 262), goto73, NEUTRAL_REACTION);
end

procedure goto78
begin
    gsay_message(0, message_str(SCRIPT_NCBOXER, 263), NEUTRAL_REACTION);
end

procedure goto79
begin
    gsay_reply(0, message_str(SCRIPT_NCBOXER, 264));
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 265), gotoend, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 266), goto79a, NEUTRAL_REACTION);
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 267), goto76, NEUTRAL_REACTION);
end

procedure goto79a
begin
    if (dude_gender == 0) then begin
        conmod := -20;
    end
    else begin
        conmod := femmod;
    end
    if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
        call goto73();
    end
    else begin
        call goto77();
    end
end

procedure goto80
begin
    gsay_message(0, message_str(SCRIPT_NCBOXER, 268), NEUTRAL_REACTION);
end

procedure goto144
begin
    gsay_reply(0, message_str(SCRIPT_NCBOXER, 211));
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 212), goto145, NEUTRAL_REACTION);
    if (map_var(10) > map_var(11)) then begin
        giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 213), goto44a, NEUTRAL_REACTION);
        giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 214), goto44b, NEUTRAL_REACTION);
        giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 215), goto44c, NEUTRAL_REACTION);
        giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 216), goto44d, NEUTRAL_REACTION);
        giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 217), goto44e, NEUTRAL_REACTION);
        giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 218), goto44f, NEUTRAL_REACTION);
        giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 219), goto44g, NEUTRAL_REACTION);
        giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 220), goto44h, NEUTRAL_REACTION);
        giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 221), goto44i, NEUTRAL_REACTION);
    end
end

procedure goto145
begin
    gsay_message(0, message_str(SCRIPT_NCBOXER, 222), NEUTRAL_REACTION);
end

procedure goto146a
begin
    gsay_reply(0, message_str(SCRIPT_NCBOXER, 235));
    temp2 := map_var(20) - 1;
    set_map_var(20, temp2);
    temp2 := map_var(9) - 1;
    set_map_var(9, temp2);
    item := create_object(115, 0, 0);
    add_obj_to_inven(dude_obj, item);
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 224), gotoend, NEUTRAL_REACTION);
    if (map_var(9) > 0) then begin
        giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 225), goto43, NEUTRAL_REACTION);
    end
end

procedure goto146b
begin
    gsay_reply(0, message_str(SCRIPT_NCBOXER, 223));
    temp2 := map_var(12) - 1;
    set_map_var(12, temp2);
    temp2 := map_var(9) - 1;
    set_map_var(9, temp2);
    item := create_object(13, 0, 0);
    add_obj_to_inven(dude_obj, item);
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 224), gotoend, NEUTRAL_REACTION);
    if (map_var(9) > 0) then begin
        giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 225), goto43, NEUTRAL_REACTION);
    end
end

procedure goto147
begin
    gsay_reply(0, message_str(SCRIPT_NCBOXER, 226));
    temp2 := map_var(13) - 1;
    set_map_var(13, temp2);
    temp2 := map_var(9) - 1;
    set_map_var(9, temp2);
    item := create_object(16, 0, 0);
    add_obj_to_inven(dude_obj, item);
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 227), gotoend, NEUTRAL_REACTION);
    if (map_var(9) > 0) then begin
        giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 228), goto43, NEUTRAL_REACTION);
    end
end

procedure goto148
begin
    gsay_reply(0, message_str(SCRIPT_NCBOXER, 229));
    temp2 := map_var(14) - 1;
    set_map_var(14, temp2);
    temp2 := map_var(9) - 1;
    set_map_var(9, temp2);
    item := create_object(239, 0, 0);
    add_obj_to_inven(dude_obj, item);
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 230), gotoend, NEUTRAL_REACTION);
    if (map_var(9) > 0) then begin
        giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 231), goto43, NEUTRAL_REACTION);
    end
end

procedure goto149
begin
    gsay_reply(0, message_str(SCRIPT_NCBOXER, 232));
    temp2 := map_var(15) - 1;
    set_map_var(15, temp2);
    temp2 := map_var(9) - 1;
    set_map_var(9, temp2);
    item := create_object(3, 0, 0);
    add_obj_to_inven(dude_obj, item);
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 233), gotoend, NEUTRAL_REACTION);
    if (map_var(9) > 0) then begin
        giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 234), goto43, NEUTRAL_REACTION);
    end
end

procedure goto150
begin
    gsay_reply(0, message_str(SCRIPT_NCBOXER, 235));
    temp2 := map_var(16) - 1;
    set_map_var(16, temp2);
    temp2 := map_var(9) - 1;
    set_map_var(9, temp2);
    item := create_object(52, 0, 0);
    add_obj_to_inven(dude_obj, item);
    giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 236), gotoend, NEUTRAL_REACTION);
    if (map_var(9) > 0) then begin
        giq_option(4, SCRIPT_NCBOXER, message_str(SCRIPT_NCBOXER, 237), goto43, NEUTRAL_REACTION);
    end
end

procedure do_dialogue
begin
    if (local_var(7)) then begin
        if (local_var(1) < 2) then begin
            call goto60();
        end
        else begin
            call goto47();
        end
    end
    else begin
        set_local_var(7, 1);
        call goto3();
    end
end

procedure combat
begin
    hostile := 1;
end

procedure gotoend
begin
end

procedure critter_p_proc
begin
    if (global_var(GVAR_GECKO_BRAIN_FRIEND)) then begin
        hostile := 1;
    end
    if (tile_distance_objs(self_obj, dude_obj) > 12) then begin
        hostile := 0;
    end
    if (hostile) then begin
        set_global_var(GVAR_GECKO_BRAIN_FRIEND, 1);
        hostile := 0;
        attack(dude_obj);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        hostile := 1;
    end
end

procedure talk_p_proc
begin
    call get_reaction();
    start_gdialog(320, self_obj, 4, -1, -1);
    gsay_start;
    call do_dialogue();
    gsay_end;
    end_dialogue;
end

procedure destroy_p_proc
begin
    set_global_var(GVAR_GECKO_BRAIN_FRIEND, 1);
    rm_timer_event(self_obj);
    if (source_obj == dude_obj) then begin
        if (((global_var(GVAR_GECKO_SKEETER_PART) + global_var(GVAR_GECKO_REQ_FORM)) >= 25) and ((global_var(GVAR_GECKO_REQ_FORM) > (2 * global_var(GVAR_GECKO_SKEETER_PART))) or (global_var(GVAR_SIERRA_LOCKOUT) == 1))) then begin
            set_global_var(GVAR_SIERRA_LOCKOUT, 1);
            set_global_var(GVAR_SIERRA_PASSWORD, 0);
        end
        if (((global_var(GVAR_GECKO_SKEETER_PART) + global_var(GVAR_GECKO_REQ_FORM)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GECKO_REQ_FORM))) or (global_var(GVAR_SIERRA_PASSWORD) == 1))) then begin
            set_global_var(GVAR_SIERRA_PASSWORD, 1);
            set_global_var(GVAR_SIERRA_LOCKOUT, 0);
        end
        set_global_var(GVAR_GECKO_REQ_FORM, global_var(GVAR_GECKO_REQ_FORM) + 1);
        if ((global_var(GVAR_GECKO_REQ_FORM) % 2) == 0) then begin
            set_global_var(GVAR_BRAIN_BOT_BRAIN, global_var(GVAR_BRAIN_BOT_BRAIN) - 1);
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(SCRIPT_NCBOXER, 100));
end

procedure get_reaction
begin
    if (local_var(2) == 0) then begin
        set_local_var(0, 50);
        set_local_var(1, 2);
        set_local_var(2, 1);
        set_local_var(0, local_var(0) + (5 * dude_charisma) - 25);
        set_local_var(0, local_var(0) + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence)));
        if (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality)) then begin
            if (global_var(GVAR_BRAIN_BOT_BRAIN) > 0) then begin
                set_local_var(0, local_var(0) + global_var(GVAR_BRAIN_BOT_BRAIN));
            end
            else begin
                set_local_var(0, local_var(0) - global_var(GVAR_BRAIN_BOT_BRAIN));
            end
        end
        else begin
            if (local_var(3) == 1) then begin
                set_local_var(0, local_var(0) - global_var(GVAR_BRAIN_BOT_BRAIN));
            end
            else begin
                set_local_var(0, local_var(0) + global_var(GVAR_BRAIN_BOT_BRAIN));
            end
        end
        if (global_var(GVAR_GECKO_ECON_DISK) > 2) then begin
            set_local_var(0, local_var(0) - 30);
        end
        if (((global_var(GVAR_GECKO_SKEETER_PART) + global_var(GVAR_GECKO_REQ_FORM)) >= 25) and ((global_var(160) > (3 * global_var(GVAR_GECKO_REQ_FORM))) or (global_var(GVAR_SIERRA_PASSWORD) == 1))) then begin
            set_local_var(0, local_var(0) + 20);
        end
        if (((global_var(GVAR_GECKO_SKEETER_PART) + global_var(GVAR_GECKO_REQ_FORM)) >= 25) and ((global_var(GVAR_GECKO_REQ_FORM) > (2 * global_var(GVAR_GECKO_SKEETER_PART))) or (global_var(GVAR_SIERRA_LOCKOUT) == 1))) then begin
            set_local_var(0, local_var(0) - 20);
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (local_var(0) <= 25) then begin
        set_local_var(1, 1);
    end
    else begin
        if (local_var(0) <= 75) then begin
            set_local_var(1, 2);
        end
        else begin
            set_local_var(1, 3);
        end
    end
end

procedure LevelToReact
begin
    if (local_var(1) == 1) then begin
        set_local_var(0, random(1, 25));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(0, random(26, 75));
        end
        else begin
            set_local_var(0, random(76, 100));
        end
    end
end

procedure UpReact
begin
    set_local_var(0, local_var(0) + 10);
    call ReactToLevel();
end

procedure DownReact
begin
    set_local_var(0, local_var(0) - 10);
    call ReactToLevel();
end

procedure BottomReact
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
end

procedure TopReact
begin
    set_local_var(0, 100);
    set_local_var(1, 3);
end

procedure BigUpReact
begin
    set_local_var(0, local_var(0) + 25);
    call ReactToLevel();
end

procedure BigDownReact
begin
    set_local_var(0, local_var(0) - 25);
    call ReactToLevel();
end

procedure UpReactLevel
begin
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) > 3) then begin
        set_local_var(1, 3);
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    set_local_var(1, local_var(1) - 1);
    if (local_var(1) < 1) then begin
        set_local_var(1, 1);
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    exit_line := message_str(SCRIPT_BSCOMP3, random(100, 105));
end
