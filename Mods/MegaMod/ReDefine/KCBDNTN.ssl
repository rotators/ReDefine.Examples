/*******************************************************
*      Some unreferenced imported varables found.      *
*      Because of it it is impossible to specify       *
*      the real names of global variables.             *
*******************************************************/

variable GVar0;
variable GVar1;
variable GVar2;
variable GVar3;
variable GVar4;
variable GVar5;
variable GVar6;
variable GVar7;
variable GVar8;
variable GVar9;
variable GVar10;
variable GVar11;
variable GVar12;
variable GVar13;
variable GVar14;
variable GVar15;
variable GVar16;
variable GVar17;
variable GVar18;
variable GVar19;
variable GVar20;
variable GVar21;
variable GVar22;
variable GVar23;
variable GVar24;
variable GVar25;
variable GVar26;
variable GVar27;
variable GVar28;
variable GVar29;
variable GVar30;
variable GVar31;
variable GVar32;
variable GVar33;
variable GVar34;
variable GVar35;

/* ?import? variable ProtoOfItemGiven; */
/* ?import? variable ValueOfRollCheck; */
/* ?import? variable Scenery_Creation; */
/* ?import? variable Scenery_Creation_Hex; */
/* ?import? variable Scenery_Creation_Count; */
/* ?import? variable Temp_Scenery_Creation_Hex; */
/* ?import? variable Scenery_Creation_Ptr; */
/* ?import? variable How_Many_Party_Members_Are_Injured; */
/* ?import? variable How_Many_Party_Members_Armed; */
/* ?import? variable PartyHealingItem; */

procedure checkPartyMembersNearDoor;

/* ?import? variable global_temp; */
/* ?import? variable dest_tile; */
/* ?import? variable step_tile; */
/* ?import? variable in_dialog; */
/* ?import? variable forced_node; */
/* ?import? variable restock_amt; */
/* ?import? variable restock_obj; */
/* ?import? variable restock_trash; */
/* ?import? variable removed_qty; */
/* ?import? variable Static_Reaction; */
/* ?import? variable Evil_Critter; */
/* ?import? variable Slavery_Tolerant; */
/* ?import? variable Karma_Perception; */
/* ?import? variable reaction_bonus_town_rep; */
/* ?import? variable reaction_bonus_karma; */

procedure EvaluateKarma;
procedure CheckRep;

/* ?import? variable Only_Once; */
/* ?import? variable here; */
/* ?import? variable area; */
/* ?import? variable new_tile; */
/* ?import? variable needtomove; */
/* ?import? variable lock_out_events; */
/* ?import? variable item; */
/* ?import? variable active; */
/* ?import? variable dude_drink_flag; */
/* ?import? variable tile; */

import variable klam_dunton_box_obj;

procedure checkarea;
procedure gettarget;
procedure checktile;
procedure critter_p_proc;
procedure timed_event_p_proc;
procedure pickup_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure damage_p_proc;
procedure combat_p_proc;
procedure map_enter_p_proc;
procedure map_exit_p_proc;
procedure push_p_proc;
procedure Node000;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure Node035;
procedure Node036;
procedure Node037;
procedure Node038;
procedure Node039;
procedure Node040;
procedure Node041;
procedure Node042;
procedure Node043;
procedure Node044;
procedure Node045;
procedure Node046;
procedure Node047;
procedure Node048;
procedure Node049;
procedure Node050;
procedure Node051;
procedure Node999;
procedure NodeDrink;
procedure NodeMoveToGraz;
procedure NodeBarter;
procedure NodeGoFrigth;
procedure NodeCombat;
procedure NodeDrinkExit;
procedure NodeDudeDrink;
procedure talk_p_proc;
procedure start;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure EvaluateKarma
begin
    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
    set_global_var(GVAR_KARMA_DEFENDER, 0);
    set_global_var(GVAR_KARMA_WANDERER, 0);
    set_global_var(GVAR_KARMA_BETRAYER, 0);
    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
    set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
    if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
    end
    else begin
        if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                    set_global_var(GVAR_KARMA_DEFENDER, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                        set_global_var(GVAR_KARMA_WANDERER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                            set_global_var(GVAR_KARMA_BETRAYER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                end
                                else begin
                                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure CheckRep
begin
    if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
        set_global_var(GVAR_CHAMPION_REPUTATION, 1);
        set_global_var(GVAR_BERSERKER_REPUTATION, 0);
    end
    if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
        set_global_var(GVAR_BERSERKER_REPUTATION, 1);
        set_global_var(GVAR_CHAMPION_REPUTATION, 0);
    end
end

procedure checkarea
begin
    GVar26 := tile_num(self_obj);
    GVar27 := 0;
    if (tile_distance(GVar26, 17926) < 5) then begin
        GVar27 := 1;
    end
    else begin
        if (tile_distance(GVar26, 18100) < 4) then begin
            GVar27 := 2;
        end
    end
end

procedure gettarget
begin
    GVar29 := 0;
    if ((game_time_hour >= 300) and (game_time_hour <= 2000) and (GVar27 != 2)) then begin
        set_local_var(14, 18100);
        GVar29 := 1;
    end
    else begin
        if ((game_time_hour < 300) or (game_time_hour > 2000) and (GVar27 != 1)) then begin
            set_local_var(14, 17926);
            GVar29 := 1;
        end
    end
end

procedure checktile
begin
    GVar26 := GVar28;
    GVar34 := 0;
    if ((tile_distance(GVar26, 18100) < 4) or (tile_distance(GVar26, 17926) < 5)) then begin
        GVar34 := 1;
    end
end

procedure critter_p_proc
begin
    if (GVar32) then begin
        if ((global_var(GVAR_KLAMATH_REP_ALIANCE) <= -1) and obj_can_see_obj(self_obj, dude_obj)) then begin
            float_msg(self_obj, mstr(105), FLOAT_MSG_RED);
            attack(dude_obj);
        end
        else begin
            if (CUR_MAP_KLADWTWN) then begin
                call checkarea();
                if (obj_can_see_obj(self_obj, dude_obj) and (map_var(17) == 1)) then begin
                    set_global_var(GVAR_KLAMATH_REP_ALIANCE, -1);
                    float_msg(self_obj, mstr(104), FLOAT_MSG_RED);
                    attack(dude_obj);
                end
                else begin
                    if (local_var(13) == 1) then begin
                        set_local_var(13, 0);
                        game_ui_disable;
                        add_timer_event(self_obj, 50, 1);
                    end
                    call gettarget();
                    if (GVar29 == 1) then begin
                        if (local_var(14) > 0) then begin
                            animate_move_obj_to_tile(self_obj, local_var(14), 0);
                        end
                    end
                    else begin
                        if (GVar30 == 0) then begin
                            GVar30 := 1;
                            add_timer_event(self_obj, random(10, 15) * 10, 0);
                        end
                    end
                end
            end
        end
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 0) then begin
        GVar28 := tile_num_in_direction(tile_num(self_obj), random(0, 5), random(1, 3));
        call checktile();
        if (GVar34 != 0) then begin
            animate_move_obj_to_tile(self_obj, GVar28, 0);
        end
        GVar30 := 0;
    end
    else begin
        if (fixed_param == 1) then begin
            reg_anim_func(2, dude_obj);
            reg_anim_func(1, 1);
            reg_anim_animate(dude_obj, 20, -1);
            reg_anim_func(3, 0);
            add_timer_event(self_obj, 50, 2);
        end
        else begin
            if (fixed_param == 2) then begin
                gfade_out(3);
                add_timer_event(self_obj, 10, 3);
            end
            else begin
                if (fixed_param == 3) then begin
                    gfade_in(3);
                    game_time_advance(60 * 10 * 60 * 6);
                    add_timer_event(self_obj, 50, 4);
                end
                else begin
                    if (fixed_param == 4) then begin
                        display_mstr(116);
                        reg_anim_func(2, dude_obj);
                        reg_anim_func(1, 1);
                        reg_anim_animate(dude_obj, 37, -1);
                        reg_anim_func(3, 0);
                        add_timer_event(self_obj, 50, 5);
                    end
                    else begin
                        if (fixed_param == 5) then begin
                            game_ui_enable;
                        end
                    end
                end
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_KLAMATH_REP_ALIANCE, -1);
    end
end

procedure destroy_p_proc
begin
    set_global_var(GVAR_DUNTON_DEAD, 1);
    set_global_var(GVAR_BAD_MONSTER, global_var(GVAR_BAD_MONSTER) + 1);
    call CheckRep();
    if (CUR_MAP_KLADWTWN) then begin
        move_obj_inven_to_obj(klam_dunton_box_obj, self_obj);
    end
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_KLAMATH_REP_ALIANCE, -1);
        set_global_var(GVAR_TOWN_REP_KLAMATH, global_var(GVAR_TOWN_REP_KLAMATH) + 2);
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(random(100, 101));
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(random(102, 103));
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_KLAMATH_REP_ALIANCE, -1);
    end
end

procedure combat_p_proc
begin
    if (local_var(15) == 0) then begin
        set_local_var(15, 1);
        GVar31 := create_object(234, 0, 0);
        add_obj_to_inven(self_obj, GVar31);
    end
end

procedure map_enter_p_proc
begin
    GVar25 := 0;
    if (global_var(GVAR_DUNTON_DEAD) == 1) then begin
        GVar32 := 0;
        set_obj_visibility(self_obj, 1);
    end
    else begin
        GVar32 := 1;
        set_obj_visibility(self_obj, 0);
    end
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_DUNTON);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 35);
end

procedure map_exit_p_proc
begin
    if (CUR_MAP_KLAGRAZ) then begin
        if (global_var(GVAR_BALTHAS_TEACH) != 14) then begin
            set_global_var(GVAR_BALTHAS_TEACH, 32);
        end
        game_time_advance(60 * 10 * 60);
    end
end

procedure push_p_proc
begin
    script_overrides;
end

procedure Node000
begin
    Reply(200);
    giq_option(4, NAME, 202, "Node013", NEUTRAL_REACTION);
    if (dude_is_stupid) then begin
        giq_option(2, NAME, 204, "Node013", NEUTRAL_REACTION);
    end
    if (global_var(GVAR_AHHAKUN_Q2_PUPL) == 0) then begin
        giq_option(4, NAME, 206, "Node016", NEUTRAL_REACTION);
    end
    if ((dude_is_stupid) and (global_var(GVAR_AHHAKUN_Q2_PUPL) == 0)) then begin
        giq_option(2, NAME, 208, "Node016", NEUTRAL_REACTION);
    end
    if (global_var(GVAR_KCSAJAG_RUSTLE) == 0) then begin
        giq_option(4, NAME, 210, "Node024", NEUTRAL_REACTION);
    end
    if ((dude_is_stupid) and (global_var(GVAR_KCSAJAG_RUSTLE) == 0)) then begin
        giq_option(2, NAME, 212, "Node024", NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 214, "Node002", NEUTRAL_REACTION);
    if (dude_is_stupid) then begin
        giq_option(2, NAME, 216, "Node002", NEUTRAL_REACTION);
    end
    if (global_var(GVAR_BALTHAS_TEACH) == 10) then begin
        giq_option(4, NAME, 218, "Node001", NEUTRAL_REACTION);
    end
    if ((dude_is_stupid) and (global_var(GVAR_BALTHAS_TEACH) == 10)) then begin
        giq_option(2, NAME, 220, "Node001", NEUTRAL_REACTION);
    end
    giq_option(2, NAME, 222, "Node999", NEUTRAL_REACTION);
    giq_option(-1, NAME, 224, "Node999", NEUTRAL_REACTION);
end

procedure Node001
begin
    if (global_var(GVAR_TORR_DEAD) == 0) then begin
        Reply(226);
    end
    else begin
        Reply(228);
    end
    if (global_var(GVAR_TORR_DEAD) == 0) then begin
        giq_option(1, NAME, 230, "NodeMoveToGraz", NEUTRAL_REACTION);
    end
    if (global_var(GVAR_TORR_DEAD) == 0) then begin
        giq_option(1, NAME, 232, "Node999", NEUTRAL_REACTION);
    end
    if (global_var(GVAR_TORR_DEAD) == 1) then begin
        giq_option(1, NAME, 234, "Node999", NEUTRAL_REACTION);
    end
end

procedure Node002
begin
    Reply(236);
    giq_option(1, NAME, 238, "Node999", NEUTRAL_REACTION);
end

procedure Node003
begin
    Reply(240);
    if (global_var(GVAR_AHHAKUN_Q2_PUPL) == 0) then begin
        giq_option(4, NAME, 242, "Node016", NEUTRAL_REACTION);
    end
    if ((dude_is_stupid) and (global_var(GVAR_AHHAKUN_Q2_PUPL) == 0)) then begin
        giq_option(2, NAME, 244, "Node016", NEUTRAL_REACTION);
    end
    if (global_var(GVAR_AHHAKUN_Q2_PUPL) == 1) then begin
        giq_option(4, NAME, 246, "Node004", NEUTRAL_REACTION);
    end
    if ((dude_is_stupid) and (global_var(GVAR_AHHAKUN_Q2_PUPL) == 1)) then begin
        giq_option(2, NAME, 248, "Node004", NEUTRAL_REACTION);
    end
    if (global_var(GVAR_KCSAJAG_RUSTLE) == 0) then begin
        giq_option(4, NAME, 250, "Node026", NEUTRAL_REACTION);
    end
    if (global_var(GVAR_KCSAJAG_RUSTLE) == 1) then begin
        giq_option(4, NAME, 252, "Node005", NEUTRAL_REACTION);
    end
    if (dude_is_stupid) then begin
        if (global_var(GVAR_KCSAJAG_RUSTLE) == 0) then begin
            giq_option(2, NAME, 254, "Node026", NEUTRAL_REACTION);
        end
        else begin
            giq_option(2, NAME, 254, "Node005", NEUTRAL_REACTION);
        end
    end
    giq_option(4, NAME, 256, "NodeBarter", NEUTRAL_REACTION);
    if (dude_is_stupid) then begin
        giq_option(2, NAME, 258, "NodeBarter", NEUTRAL_REACTION);
    end
    if (global_var(GVAR_BALTHAS_TEACH) == 10) then begin
        giq_option(4, NAME, 260, Node001, NEUTRAL_REACTION);
    end
    if ((dude_is_stupid) and (global_var(GVAR_BALTHAS_TEACH) == 10)) then begin
        giq_option(2, NAME, 262, Node001, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 264, "Node999", NEUTRAL_REACTION);
    if (dude_is_stupid) then begin
        giq_option(2, NAME, 266, "Node999", NEUTRAL_REACTION);
    end
    giq_option(-1, NAME, 268, "Node999", NEUTRAL_REACTION);
end

procedure Node004
begin
    Reply(270);
    giq_option(1, NAME, 272, "Node999", NEUTRAL_REACTION);
end

procedure Node005
begin
    Reply(274);
    giq_option(1, NAME, 276, "Node999", NEUTRAL_REACTION);
end

procedure Node006
begin
    Reply(278);
    giq_option(1, NAME, 280, "Node999", NEUTRAL_REACTION);
    giq_option(1, NAME, 282, "Node007", NEUTRAL_REACTION);
    giq_option(2, NAME, 284, "Node008", NEUTRAL_REACTION);
    giq_option(4, NAME, 286, Node002, NEUTRAL_REACTION);
    if (dude_is_stupid) then begin
        giq_option(2, NAME, 288, Node002, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_BALTHAS_TEACH) == 10) then begin
        giq_option(4, NAME, 290, Node001, NEUTRAL_REACTION);
    end
    if ((dude_is_stupid) and (global_var(GVAR_BALTHAS_TEACH) == 10)) then begin
        giq_option(2, NAME, 292, Node001, NEUTRAL_REACTION);
    end
end

procedure Node007
begin
    Reply(294);
    giq_option(1, NAME, 296, "Node999", NEUTRAL_REACTION);
end

procedure Node008
begin
    Reply(298);
    if (local_var(12) == 2) then begin
        giq_option(1, NAME, 300, "Node999", NEUTRAL_REACTION);
    end
    else begin
        giq_option(1, NAME, 300, Node007, NEUTRAL_REACTION);
    end
end

procedure Node009
begin
    Reply(302);
    giq_option(1, NAME, 304, Node008, NEUTRAL_REACTION);
    giq_option(1, NAME, 306, "Node999", NEUTRAL_REACTION);
    if (global_var(GVAR_BALTHAS_TEACH) == 10) then begin
        giq_option(4, NAME, 308, Node001, NEUTRAL_REACTION);
    end
    if ((dude_is_stupid) and (global_var(GVAR_BALTHAS_TEACH) == 10)) then begin
        giq_option(2, NAME, 310, Node001, NEUTRAL_REACTION);
    end
end

procedure Node010
begin
    Reply(312);
    giq_option(4, NAME, 314, Node002, NEUTRAL_REACTION);
    if (dude_is_stupid) then begin
        giq_option(2, NAME, 316, Node002, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_BALTHAS_TEACH) == 10) then begin
        giq_option(4, NAME, 318, Node001, NEUTRAL_REACTION);
    end
    if ((dude_is_stupid) and (global_var(GVAR_BALTHAS_TEACH) == 10)) then begin
        giq_option(2, NAME, 320, Node001, NEUTRAL_REACTION);
    end
    giq_option(2, NAME, 322, "Node999", NEUTRAL_REACTION);
    giq_option(-1, NAME, 324, "Node999", NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(326);
    giq_option(4, NAME, 328, "NodeBarter", NEUTRAL_REACTION);
    if (dude_is_stupid) then begin
        giq_option(2, NAME, 330, "NodeBarter", NEUTRAL_REACTION);
    end
    if (global_var(GVAR_BALTHAS_TEACH) == 10) then begin
        giq_option(4, NAME, 332, Node001, NEUTRAL_REACTION);
    end
    if ((dude_is_stupid) and (global_var(GVAR_BALTHAS_TEACH) == 10)) then begin
        giq_option(2, NAME, 334, Node001, NEUTRAL_REACTION);
    end
    giq_option(2, NAME, 336, "Node999", NEUTRAL_REACTION);
    giq_option(-1, NAME, 338, "Node999", NEUTRAL_REACTION);
end

procedure Node012
begin
    Reply(340);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 342, "Node013", NEUTRAL_REACTION);
    end
    if (dude_gender == 0) then begin
        giq_option(-3, NAME, 344, "Node013", NEUTRAL_REACTION);
    end
    if (dude_gender == 0) then begin
        giq_option(2, NAME, 346, "Node999", NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(2, NAME, 348, "Node999", NEUTRAL_REACTION);
    end
    giq_option(-1, NAME, 350, "Node999", NEUTRAL_REACTION);
end

procedure Node013
begin
    Reply(352);
    giq_option(4, NAME, 354, "Node014", NEUTRAL_REACTION);
    giq_option(-3, NAME, 356, "Node014", NEUTRAL_REACTION);
    giq_option(4, NAME, 358, "Node999", NEUTRAL_REACTION);
    giq_option(-3, NAME, 360, "Node999", NEUTRAL_REACTION);
end

procedure Node014
begin
    Reply(362);
    giq_option(4, NAME, 364, "NodeCombat", NEUTRAL_REACTION);
    giq_option(4, NAME, 366, "NodeCombat", NEUTRAL_REACTION);
    giq_option(4, NAME, 368, "Node999", NEUTRAL_REACTION);
    giq_option(-3, NAME, 370, "NodeCombat", NEUTRAL_REACTION);
    giq_option(-3, NAME, 372, "Node999", NEUTRAL_REACTION);
end

procedure Node015
begin
    set_global_var(GVAR_KLAMATH_REP_ALIANCE, -1);
    Reply(374);
    giq_option(4, NAME, 376, "Node999", NEUTRAL_REACTION);
    giq_option(-3, NAME, 378, "Node999", NEUTRAL_REACTION);
end

procedure Node016
begin
    Reply(380);
    if (obj_is_carrying_obj_pid(dude_obj, 41) >= 30) then begin
        giq_option(4, NAME, 382, "Node017", NEUTRAL_REACTION);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 41) >= 30) then begin
        giq_option(-3, NAME, 384, "Node017", NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 386, "Node999", NEUTRAL_REACTION);
    giq_option(-3, NAME, 388, "Node999", NEUTRAL_REACTION);
end

procedure Node017
begin
    rm_mult_objs_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 41), 30);
    set_local_var(10, 0);
    Reply(390);
    if (obj_is_carrying_obj_pid(dude_obj, 41) >= 3) then begin
        giq_option(4, NAME, 392, "NodeDrink", NEUTRAL_REACTION);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 41) >= 3) then begin
        giq_option(-3, NAME, 394, "NodeDrink", NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 396, "Node018", NEUTRAL_REACTION);
    giq_option(4, NAME, 398, "Node018", NEUTRAL_REACTION);
    giq_option(-3, NAME, 400, "Node018", NEUTRAL_REACTION);
end

procedure Node018
begin
    add_mult_objs_to_inven(self_obj, create_object(41, 0, 0), 30);
    Reply(402);
    giq_option(4, NAME, 404, Node013, NEUTRAL_REACTION);
    giq_option(-3, NAME, 406, Node013, NEUTRAL_REACTION);
    giq_option(4, NAME, 408, "Node999", NEUTRAL_REACTION);
    giq_option(-3, NAME, 410, "Node999", NEUTRAL_REACTION);
end

procedure Node019
begin
    gfade_out(3);
    gfade_in(3);
    Reply(412);
    if (obj_is_carrying_obj_pid(dude_obj, 41) >= 3) then begin
        giq_option(4, NAME, 414, "NodeDrink", NEUTRAL_REACTION);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 41) >= 3) then begin
        giq_option(-3, NAME, 416, "NodeDrink", NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 418, "NodeDrinkExit", NEUTRAL_REACTION);
end

procedure Node020
begin
    gfade_out(3);
    gfade_in(3);
    Reply(420);
    if (obj_is_carrying_obj_pid(dude_obj, 41) >= 3) then begin
        giq_option(1, NAME, 422, "NodeDrink", NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 424, "NodeDrinkExit", NEUTRAL_REACTION);
end

procedure Node021
begin
    gfade_out(3);
    gfade_in(3);
    Reply(426);
    if (obj_is_carrying_obj_pid(dude_obj, 41) >= 3) then begin
        giq_option(1, NAME, 428, "NodeDrink", NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 430, "NodeDrinkExit", NEUTRAL_REACTION);
end

procedure Node022
begin
    gfade_out(3);
    gfade_in(3);
    set_local_var(11, game_time);
    set_global_var(GVAR_AHHAKUN_Q2_PUPL, 1);
    give_exp_points(50);
    display_msg(g_mstr(100) + 50 + g_mstr(101));
    display_mstr(107);
    add_mult_objs_to_inven(dude_obj, create_object(41, 0, 0), 60);
    Reply(432);
    giq_option(4, NAME, 434, "Node999", NEUTRAL_REACTION);
    giq_option(-3, NAME, 436, "Node999", NEUTRAL_REACTION);
end

procedure Node023
begin
    gfade_out(3);
    gfade_in(3);
    Reply(438);
    giq_option(1, NAME, 440, "NodeDudeDrink", NEUTRAL_REACTION);
end

procedure Node024
begin
    Reply(442);
    giq_option(2, NAME, 444, "Node025", NEUTRAL_REACTION);
    giq_option(-1, NAME, 446, "Node025", NEUTRAL_REACTION);
end

procedure Node025
begin
    Reply(448);
    giq_option(4, NAME, 450, "Node026", NEUTRAL_REACTION);
    giq_option(-3, NAME, 452, "Node026", NEUTRAL_REACTION);
    giq_option(1, NAME, 454, "Node999", NEUTRAL_REACTION);
end

procedure Node026
begin
    Reply(456);
    if (dude_strength >= 8) then begin
        giq_option(1, NAME, 458, "Node027", NEUTRAL_REACTION);
    end
    if (dude_endurance >= 8) then begin
        giq_option(1, NAME, 460, "Node027", NEUTRAL_REACTION);
    end
    if (get_critter_stat(dude_obj, STAT_ag) >= 9) then begin
        giq_option(1, NAME, 462, "Node027", NEUTRAL_REACTION);
    end
    if (dude_charisma <= 2) then begin
        giq_option(1, NAME, 464, "Node027", NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 466, "Node028", NEUTRAL_REACTION);
end

procedure Node027
begin
    set_global_var(GVAR_KCSAJAG_RUSTLE, 1);
    give_exp_points(50);
    display_msg(g_mstr(100) + 50 + g_mstr(101));
    display_mstr(106);
    Reply(468);
    giq_option(1, NAME, 470, "Node999", NEUTRAL_REACTION);
    giq_option(1, NAME, 472, "Node999", NEUTRAL_REACTION);
end

procedure Node028
begin
    if (local_var(12) != 2) then begin
        Reply(474);
    end
    else begin
        Reply(476);
    end
    giq_option(1, NAME, 478, "Node999", NEUTRAL_REACTION);
end

procedure Node029
begin
    if (dude_gender == 0) then begin
        Reply(480);
    end
    else begin
        Reply(482);
    end
    set_global_var(GVAR_BALTHAS_TEACH, 12);
    if (dude_gender == 0) then begin
        giq_option(1, NAME, 484, "Node030", NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(1, NAME, 486, "Node030", NEUTRAL_REACTION);
    end
end

procedure Node030
begin
    Reply(488);
    giq_option(4, NAME, 490, "Node031", NEUTRAL_REACTION);
    giq_option(-3, NAME, 492, "Node032", NEUTRAL_REACTION);
    giq_option(4, NAME, 494, "Node033", NEUTRAL_REACTION);
    giq_option(-3, NAME, 496, "Node033", NEUTRAL_REACTION);
    giq_option(4, NAME, 498, "Node042", NEUTRAL_REACTION);
    giq_option(-3, NAME, 500, "Node042", NEUTRAL_REACTION);
end

procedure Node031
begin
    Reply(502);
    giq_option(1, NAME, 504, "Node999", NEUTRAL_REACTION);
    giq_option(1, NAME, 506, "Node033", NEUTRAL_REACTION);
    giq_option(1, NAME, 508, "Node042", NEUTRAL_REACTION);
end

procedure Node032
begin
    Reply(510);
    giq_option(1, NAME, 512, "Node999", NEUTRAL_REACTION);
    giq_option(4, NAME, 514, "Node033", NEUTRAL_REACTION);
    giq_option(-3, NAME, 516, "Node042", NEUTRAL_REACTION);
end

procedure Node033
begin
    Reply(518);
    giq_option(1, NAME, 520, "Node034", NEUTRAL_REACTION);
    giq_option(4, NAME, 522, Node031, NEUTRAL_REACTION);
    giq_option(-3, NAME, 524, Node032, NEUTRAL_REACTION);
    giq_option(4, NAME, 526, "Node042", NEUTRAL_REACTION);
    giq_option(-3, NAME, 528, "Node042", NEUTRAL_REACTION);
end

procedure Node034
begin
    if (dude_gender == 0) then begin
        Reply(530);
    end
    else begin
        Reply(532);
    end
    giq_option(4, NAME, 534, "Node035", NEUTRAL_REACTION);
    giq_option(-3, NAME, 536, "Node035", NEUTRAL_REACTION);
    giq_option(4, NAME, 538, "Node036", NEUTRAL_REACTION);
    giq_option(-3, NAME, 540, "Node036", NEUTRAL_REACTION);
    giq_option(4, NAME, 542, "Node037", NEUTRAL_REACTION);
    giq_option(-3, NAME, 544, "Node037", NEUTRAL_REACTION);
end

procedure Node035
begin
    if (dude_gender == 0) then begin
        Reply(546);
    end
    else begin
        Reply(548);
    end
    giq_option(4, NAME, 550, "Node036", NEUTRAL_REACTION);
    giq_option(-3, NAME, 552, "Node036", NEUTRAL_REACTION);
    giq_option(4, NAME, 554, "Node037", NEUTRAL_REACTION);
    giq_option(-3, NAME, 556, "Node037", NEUTRAL_REACTION);
end

procedure Node036
begin
    if (dude_gender == 0) then begin
        Reply(558);
    end
    else begin
        Reply(560);
    end
    giq_option(4, NAME, 562, Node035, NEUTRAL_REACTION);
    giq_option(-3, NAME, 564, Node035, NEUTRAL_REACTION);
    giq_option(4, NAME, 566, "Node037", NEUTRAL_REACTION);
    giq_option(-3, NAME, 568, "Node037", NEUTRAL_REACTION);
end

procedure Node037
begin
    Reply(570);
    giq_option(1, NAME, 572, "Node038", NEUTRAL_REACTION);
end

procedure Node038
begin
    Reply(574);
    giq_option(1, NAME, 576, "Node039", NEUTRAL_REACTION);
end

procedure Node039
begin
    Reply(578);
    giq_option(1, NAME, 580, "Node040", NEUTRAL_REACTION);
end

procedure Node040
begin
    Reply(582);
    giq_option(1, NAME, 584, "Node999", NEUTRAL_REACTION);
end

procedure Node041
begin
    Reply(586);
    if ((obj_is_carrying_obj_pid(dude_obj, 285) >= 1) and (obj_is_carrying_obj_pid(dude_obj, 92) < 1)) then begin
        giq_option(4, NAME, 588, "Node043", NEUTRAL_REACTION);
    end
    if ((obj_is_carrying_obj_pid(dude_obj, 285) >= 1) and (obj_is_carrying_obj_pid(dude_obj, 92) < 1)) then begin
        giq_option(-3, NAME, 590, "Node043", NEUTRAL_REACTION);
    end
    if ((obj_is_carrying_obj_pid(dude_obj, 285) >= 1) and (obj_is_carrying_obj_pid(dude_obj, 92) >= 1)) then begin
        giq_option(4, NAME, 592, "Node046", NEUTRAL_REACTION);
    end
    if ((obj_is_carrying_obj_pid(dude_obj, 285) >= 1) and (obj_is_carrying_obj_pid(dude_obj, 92) >= 1)) then begin
        giq_option(-3, NAME, 594, "Node046", NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 596, "Node042", NEUTRAL_REACTION);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 598, Node015, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 600, "Node999", NEUTRAL_REACTION);
    giq_option(-3, NAME, 602, "Node999", NEUTRAL_REACTION);
end

procedure Node042
begin
    set_map_var(20, 1);
    if (dude_gender == 0) then begin
        Reply(604);
    end
    else begin
        Reply(606);
    end
    giq_option(4, NAME, 608, "Node999", NEUTRAL_REACTION);
    giq_option(-3, NAME, 610, "Node999", NEUTRAL_REACTION);
    giq_option(4, NAME, 612, "NodeCombat", NEUTRAL_REACTION);
end

procedure Node043
begin
    if (dude_gender == 0) then begin
        Reply(614);
    end
    else begin
        Reply(616);
    end
    giq_option(1, NAME, 618, "Node044", NEUTRAL_REACTION);
end

procedure Node044
begin
    Reply(620);
    giq_option(1, NAME, 622, "Node045", NEUTRAL_REACTION);
end

procedure Node045
begin
    Reply(624);
    giq_option(1, NAME, 626, "Node999", NEUTRAL_REACTION);
end

procedure Node046
begin
    Reply(628);
    giq_option(1, NAME, 630, "Node047", NEUTRAL_REACTION);
end

procedure Node047
begin
    Reply(632);
    giq_option(1, NAME, 634, "Node048", NEUTRAL_REACTION);
end

procedure Node048
begin
    if (dude_gender == 0) then begin
        Reply(636);
    end
    else begin
        Reply(638);
    end
    giq_option(1, NAME, 640, "NodeGoFrigth", NEUTRAL_REACTION);
    giq_option(4, NAME, 642, Node042, NEUTRAL_REACTION);
end

procedure Node049
begin
    if (dude_gender == 0) then begin
        Reply(644);
    end
    else begin
        Reply(646);
    end
    set_map_var(20, 1);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 648, "NodeCombat", NEUTRAL_REACTION);
    end
    if (dude_gender == 0) then begin
        giq_option(-3, NAME, 650, "NodeCombat", NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 652, "Node999", NEUTRAL_REACTION);
end

procedure Node050
begin
    if (dude_gender == 0) then begin
        Reply(654);
    end
    else begin
        Reply(656);
    end
    set_map_var(20, 1);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 658, "NodeCombat", NEUTRAL_REACTION);
    end
    if (dude_gender == 0) then begin
        giq_option(-3, NAME, 660, "NodeCombat", NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 662, "Node999", NEUTRAL_REACTION);
end

procedure Node051
begin
    if (dude_gender == 0) then begin
        Reply(664);
    end
    else begin
        Reply(666);
    end
    giq_option(1, NAME, 668, "Node999", NEUTRAL_REACTION);
    if (dude_gender == 0) then begin
        giq_option(1, NAME, 670, Node013, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 672, "NodeCombat", NEUTRAL_REACTION);
end

procedure Node999
begin
end

procedure NodeDrink
begin
    set_local_var(10, local_var(10) + 1);
    rm_mult_objs_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 41), 3);
    if (local_var(10) > 7) then begin
        call Node022();
    end
    else begin
        if (local_var(10) > dude_endurance) then begin
            call Node023();
        end
        else begin
            if (local_var(10) < 4) then begin
                call Node019();
            end
            else begin
                if (local_var(10) == 4) then begin
                    call Node020();
                end
                else begin
                    call Node021();
                end
            end
        end
    end
end

procedure NodeMoveToGraz
begin
    set_global_var(GVAR_BALTHAS_TEACH, 11);
    game_time_advance(60 * 10 * 60);
    load_map(14, 0);
end

procedure NodeBarter
begin
    gdialog_barter;
    gsay_message(NAME, "", NEUTRAL_REACTION);
    call Node999();
end

procedure NodeGoFrigth
begin
    set_global_var(GVAR_BALTHAS_TEACH, 13);
    call Node999();
end

procedure NodeCombat
begin
    set_global_var(GVAR_KLAMATH_REP_ALIANCE, -1);
end

procedure NodeDrinkExit
begin
    add_mult_objs_to_inven(self_obj, create_object(41, 0, 0), 30);
    call Node999();
end

procedure NodeDudeDrink
begin
    set_local_var(13, 1);
end

procedure talk_p_proc
begin
    if (CUR_MAP_KLADWTWN) then begin
        move_obj_inven_to_obj(klam_dunton_box_obj, self_obj);
        call checkarea();
        set_local_var(12, 1);
        if ((global_var(GVAR_BALTHAS_TEACH) == 32) or (global_var(GVAR_BALTHAS_TEACH) == 31)) then begin
            set_local_var(12, 0);
        end
        else begin
            if ((global_var(GVAR_KCSAJAG_RUSTLE) == 1) or (global_var(GVAR_AHHAKUN_Q2_PUPL) == 1) or (global_var(GVAR_BALTHAS_TEACH) == 14) or (global_var(GVAR_BALTHAS_TEACH) == 20)) then begin
                set_local_var(12, 2);
            end
        end
        if (GVar27 == 0) then begin
            float_msg(self_obj, mstr(115), FLOAT_MSG_RED);
        end
        else begin
            if ((local_var(11) != 0) and ((game_time - local_var(11)) <= (10 * 60 * 60 * 6))) then begin
                float_msg(self_obj, mstr(114), FLOAT_MSG_NORMAL);
            end
            else begin
                if ((global_var(GVAR_BALTHAS_TEACH) == 32) or (global_var(GVAR_BALTHAS_TEACH) == 31)) then begin
                    start_gdialog(1345, self_obj, 4, -1, -1);
                    gsay_start;
                    call Node051();
                    gsay_end;
                    end_dialogue;
                end
                else begin
                    if (dude_gender == 1) then begin
                        if (local_var(12) == 2) then begin
                            start_gdialog(1345, self_obj, 4, -1, -1);
                            gsay_start;
                            call Node009();
                            gsay_end;
                            end_dialogue;
                        end
                        else begin
                            start_gdialog(1345, self_obj, 4, -1, -1);
                            gsay_start;
                            call Node006();
                            gsay_end;
                            end_dialogue;
                        end
                    end
                    else begin
                        if (GVar27 == 1) then begin
                            if (local_var(12) == 2) then begin
                                start_gdialog(1345, self_obj, 4, -1, -1);
                                gsay_start;
                                call Node003();
                                gsay_end;
                                end_dialogue;
                            end
                            else begin
                                start_gdialog(1345, self_obj, 4, -1, -1);
                                gsay_start;
                                call Node000();
                                gsay_end;
                                end_dialogue;
                            end
                        end
                        else begin
                            if (local_var(12) == 2) then begin
                                start_gdialog(1345, self_obj, 4, -1, -1);
                                gsay_start;
                                call Node011();
                                gsay_end;
                                end_dialogue;
                            end
                            else begin
                                start_gdialog(1345, self_obj, 4, -1, -1);
                                gsay_start;
                                call Node010();
                                gsay_end;
                                end_dialogue;
                            end
                        end
                    end
                end
            end
        end
        move_obj_inven_to_obj(self_obj, klam_dunton_box_obj);
    end
    else begin
        if (map_var(20) == 1) then begin
            float_msg(self_obj, mstr(113), FLOAT_MSG_NORMAL);
        end
        else begin
            if (global_var(GVAR_BALTHAS_TEACH) == 31) then begin
                if (global_var(GVAR_TORR_DEAD) == 0) then begin
                    start_gdialog(1345, self_obj, 4, -1, -1);
                    gsay_start;
                    call Node049();
                    gsay_end;
                    end_dialogue;
                end
                else begin
                    start_gdialog(1345, self_obj, 4, -1, -1);
                    gsay_start;
                    call Node050();
                    gsay_end;
                    end_dialogue;
                end
            end
            else begin
                if (global_var(GVAR_BALTHAS_TEACH) == 11) then begin
                    start_gdialog(1345, self_obj, 4, -1, -1);
                    gsay_start;
                    call Node029();
                    gsay_end;
                    end_dialogue;
                end
                else begin
                    if (global_var(GVAR_BALTHAS_TEACH) == 12) then begin
                        start_gdialog(1345, self_obj, 4, -1, -1);
                        gsay_start;
                        call Node041();
                        gsay_end;
                        end_dialogue;
                    end
                    else begin
                        if (global_var(GVAR_BALTHAS_TEACH) == 13) then begin
                            if (dude_gender == 0) then begin
                                float_msg(self_obj, mstr(108), FLOAT_MSG_NORMAL);
                            end
                            else begin
                                float_msg(self_obj, mstr(109), FLOAT_MSG_NORMAL);
                            end
                        end
                        else begin
                            if (global_var(GVAR_BALTHAS_TEACH) == 14) then begin
                                if (dude_gender == 0) then begin
                                    float_msg(self_obj, mstr(110), FLOAT_MSG_NORMAL);
                                end
                                else begin
                                    float_msg(self_obj, mstr(111), FLOAT_MSG_NORMAL);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure start
begin
end
