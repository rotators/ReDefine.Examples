variable tmp_gen_rep;
variable restock_amt;
variable restock_obj;
variable removed_qty;

procedure start;
procedure destroy_p_proc;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node005a;
procedure Node901;
procedure Node997;
procedure Node998;
procedure Node999;

variable drinks_this_conversation;

procedure timed_event_p_proc;
procedure pickup_p_proc;
procedure critter_p_proc;


procedure start
begin
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
        if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
            tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
        end
        if (tmp_gen_rep >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (tmp_gen_rep >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (tmp_gen_rep >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (tmp_gen_rep >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(GVAR_TOWN_REP_ABBEY, global_var(GVAR_TOWN_REP_ABBEY) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
end

procedure use_p_proc
begin
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 0) then begin
        display_mstr(100);
    end
    else begin
        display_mstr(101);
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(102);
end

procedure use_skill_on_p_proc
begin
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(0, local_var(0) bwor 8);
        set_local_var(0, local_var(0) bwor 2);
        if (global_var(GVAR_TOWN_REP_ABBEY) > -30) then begin
            set_global_var(GVAR_TOWN_REP_ABBEY, -30);
        end
    end
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 211);
    add_timer_event(self_obj, random(25, 50), 3);
    set_local_var(4, tile_num(self_obj));
    set_local_var(5, obj_get_rot(self_obj));
end

procedure map_update_p_proc
begin
end

procedure talk_p_proc
begin
    if (global_var(GVAR_KLAMATH_FIND_RUSTLERS) < 3) then begin
        start_gdialog(2256, self_obj, 4, -1, -1);
        gsay_start;
        call Node001();
        gsay_end;
        end_dialogue;
    end
    else begin
        start_gdialog(2256, self_obj, 4, -1, -1);
        gsay_start;
        call Node013();
        gsay_end;
        end_dialogue;
    end
end

procedure Node001
begin
    if (global_var(GVAR_KLAMATH_FIND_RUSTLERS) == 0) then begin
        Reply(200);
    end
    else begin
        Reply(220);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 101)) then begin
        giq_option(4, NAME, 201, Node002, GOOD_REACTION);
        giq_option(-3, NAME, 800, Node015, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_KLAMATH_FIND_RUSTLERS) == 0) then begin
        giq_option(4, NAME, 212, Node010, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 212, Node999, NEUTRAL_REACTION);
    end
end

procedure Node002
begin
    set_local_var(1, 1);
    set_global_var(GVAR_KLAMATH_FIND_RUSTLERS, 3);
    if (obj_is_carrying_obj_pid(dude_obj, 101)) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 101);
    end
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 101);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 101);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        destroy_object(restock_obj);
    end
    restock_obj := 0;
    restock_amt := 0;
    Reply(202);
    giq_option(4, NAME, 203, Node009, NEUTRAL_REACTION);
end

procedure Node003
begin
    Reply(204);
    giq_option(4, NAME, 205, Node005, NEUTRAL_REACTION);
    giq_option(4, NAME, 253, Node005a, NEUTRAL_REACTION);
    giq_option(4, NAME, 206, Node999, NEUTRAL_REACTION);
end

procedure Node004
begin
    Reply(207);
    giq_option(4, NAME, 208, Node011, NEUTRAL_REACTION);
    giq_option(4, NAME, 209, Node999, NEUTRAL_REACTION);
end

procedure Node005
begin
    if (global_var(GVAR_TRIBE_FIREWOOD) == 0) then begin
        set_global_var(GVAR_TRIBE_FIREWOOD, 1);
    end
    set_local_var(3, local_var(3) + 1);
    drinks_this_conversation := drinks_this_conversation + 1;
    if ((local_var(3) > 3) and (get_critter_stat(dude_obj, STAT_ag) < 7)) then begin
        call Node006();
    end
    else begin
        call Node004();
    end
end

procedure Node006
begin
    set_global_var(GVAR_ALCOHOL_ADDICT, 1);
    Reply(210);
    giq_option(4, NAME, 211, Node997, NEUTRAL_REACTION);
end

procedure Node007
begin
    Reply(213);
    giq_option(4, NAME, 214, Node999, NEUTRAL_REACTION);
end

procedure Node008
begin
    float_msg(self_obj, mstr(random(500, 502)), FLOAT_MSG_YELLOW);
end

procedure Node009
begin
    Reply(600);
    giq_option(4, NAME, 601, Node003, NEUTRAL_REACTION);
    giq_option(4, NAME, 602, Node999, NEUTRAL_REACTION);
end

procedure Node010
begin
    Reply(700);
    giq_option(4, NAME, 701, Node901, NEUTRAL_REACTION);
    giq_option(4, NAME, 702, Node999, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(215);
    if (item_caps_total(dude_obj) >= 20) then begin
        giq_option(4, NAME, 216, Node012, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 219, Node999, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 217, Node999, NEUTRAL_REACTION);
end

procedure Node012
begin
    item_caps_adjust(dude_obj, -20);
    Reply(218);
    giq_option(4, NAME, 205, Node005, NEUTRAL_REACTION);
    giq_option(4, NAME, 253, Node005a, NEUTRAL_REACTION);
end

procedure Node013
begin
    if (local_var(7) == 0) then begin
        Reply(500);
        set_local_var(7, 1);
    end
    else begin
        Reply(501);
    end
    giq_option(4, NAME, 250, Node014, NEUTRAL_REACTION);
    giq_option(4, NAME, 251, Node999, NEUTRAL_REACTION);
end

procedure Node014
begin
    Reply(252);
    if (item_caps_total(dude_obj) >= 20) then begin
        giq_option(4, NAME, 216, Node012, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 219, Node999, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 206, Node999, NEUTRAL_REACTION);
end

procedure Node015
begin
    Reply(810);
    giq_option(1, NAME, 811, Node016, NEUTRAL_REACTION);
    giq_option(1, NAME, 812, Node999, NEUTRAL_REACTION);
end

procedure Node016
begin
    set_local_var(1, 1);
    set_global_var(GVAR_KLAMATH_FIND_RUSTLERS, 3);
    if (obj_is_carrying_obj_pid(dude_obj, 101)) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 101);
    end
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 101);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 101);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        destroy_object(restock_obj);
    end
    restock_obj := 0;
    restock_amt := 0;
    Reply(202);
    giq_option(1, NAME, 820, Node009, NEUTRAL_REACTION);
end

procedure Node005a
begin
    variable LVar0 := 0;
    if (global_var(GVAR_TRIBE_FIREWOOD) == 0) then begin
        set_global_var(GVAR_TRIBE_FIREWOOD, 1);
    end
    LVar0 := create_object(662, 0, 0);
    add_obj_to_inven(dude_obj, LVar0);
    if (global_var(GVAR_TRIBE_FIREWOOD) == 2) then begin
        set_global_var(GVAR_TRIBE_FIREWOOD, 3);
    end
    return 0;
    LVar0 := 0;
end

procedure Node901
begin
    set_global_var(GVAR_KLAMATH_FIND_RUSTLERS, 1);
end

procedure Node997
begin
    float_msg(dude_obj, mstr(400), FLOAT_MSG_GREEN);
    reg_anim_func(2, dude_obj);
    reg_anim_func(1, 1);
    reg_anim_animate(dude_obj, 14, -1);
    reg_anim_animate(dude_obj, 20, 5);
    reg_anim_animate(dude_obj, 48, -1);
    reg_anim_func(3, 0);
end

procedure Node998
begin
    set_global_var(GVAR_TOWN_REP_ABBEY, -30);
end

procedure Node999
begin
    if (drinks_this_conversation > 0) then begin
        rm_fixed_timer_event(self_obj, 999);
        add_timer_event(self_obj, game_ticks(0), 999);
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 3) then begin
        if (local_var(1) == 0) then begin
            float_msg(self_obj, mstr(random(300, 302)), FLOAT_MSG_YELLOW);
            add_timer_event(self_obj, random(75, 100), 3);
        end
    end
    else begin
        if (fixed_param == 999) then begin
            if (drinks_this_conversation > 0) then begin
                drinks_this_conversation := drinks_this_conversation - 1;
                use_obj_on_obj(create_object(662, 0, 0), dude_obj);
                rm_fixed_timer_event(self_obj, 999);
                add_timer_event(self_obj, game_ticks(1), 999);
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        call Node998();
    end
end

procedure critter_p_proc
begin
    if ((global_var(GVAR_TOWN_REP_ABBEY) <= -30) and obj_can_see_obj(self_obj, dude_obj)) then begin
        attack(dude_obj);
    end
    else begin
        if ((tile_num(self_obj) != local_var(4)) and (drinks_this_conversation == 0)) then begin
            animate_move_obj_to_tile(self_obj, local_var(4), 0);
        end
        else begin
            if ((obj_get_rot(self_obj) != local_var(5)) and (drinks_this_conversation == 0)) then begin
                anim(self_obj, 1000, local_var(5));
            end
        end
    end
end
