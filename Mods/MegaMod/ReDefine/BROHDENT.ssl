variable car_hex;
variable trunk_tile;
variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;
procedure start;
procedure timed_event_p_proc;
procedure map_exit_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure first_wave;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure create_floater;
procedure create_bigdeathclaw;
procedure create_littledeathclaw;
procedure create_alien;
procedure create_firegecko;
procedure create_kentaur;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure timed_event_p_proc
begin
end

procedure map_exit_p_proc
begin
end

procedure map_enter_p_proc
begin
    if (map_first_run) then begin
        display_mstr(100);
    end
    else begin
        display_mstr(101);
    end
    if ((get_month >= 3) and (get_month < 5)) then begin
        if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
            set_light_level(game_time_hour - 600 + 40);
        end
        else begin
            if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                set_light_level(100);
            end
            else begin
                if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                    set_light_level(100 - (game_time_hour - 1800));
                end
                else begin
                    set_light_level(40);
                end
            end
        end
    end
    else begin
        if ((get_month >= 5) and (get_month < 9)) then begin
            if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                set_light_level(game_time_hour - 500 + 40);
            end
            else begin
                if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1900));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 9) and (get_month < 11)) then begin
                if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                    set_light_level(game_time_hour - 600 + 40);
                end
                else begin
                    if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1800));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                    set_light_level(game_time_hour - 700 + 40);
                end
                else begin
                    if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1700));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
        end
    end
    set_global_var(GVAR_LOAD_MAP_INDEX, 0);
    set_map_var(7, 0);
    if (global_var(GVAR_BROTHERHOOD_HELP_QUEST) == 1) then begin
        override_map_start(21104 % 200, 21104 / 200, 0, 2);
        set_global_var(GVAR_BROTHERHOOD_HELP_QUEST, 2);
        call first_wave();
    end
    if (global_var(GVAR_EPADOOR_LOCK) == 1) then begin
        move_to(dude_obj, 20302, 0);
        set_global_var(GVAR_EPADOOR_LOCK, 6);
    end
end

procedure map_update_p_proc
begin
    if ((get_month >= 3) and (get_month < 5)) then begin
        if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
            set_light_level(game_time_hour - 600 + 40);
        end
        else begin
            if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                set_light_level(100);
            end
            else begin
                if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                    set_light_level(100 - (game_time_hour - 1800));
                end
                else begin
                    set_light_level(40);
                end
            end
        end
    end
    else begin
        if ((get_month >= 5) and (get_month < 9)) then begin
            if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                set_light_level(game_time_hour - 500 + 40);
            end
            else begin
                if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1900));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 9) and (get_month < 11)) then begin
                if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                    set_light_level(game_time_hour - 600 + 40);
                end
                else begin
                    if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1800));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                    set_light_level(game_time_hour - 700 + 40);
                end
                else begin
                    if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1700));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
        end
    end
end

procedure first_wave
begin
    variable LVar0 := 0;
    while (LVar0 < 6) do begin
        LVar0 := LVar0 + 1;
        call create_floater();
        call create_bigdeathclaw();
        call create_littledeathclaw();
        call create_alien();
        call create_firegecko();
        call create_kentaur();
    end
    set_global_var(GVAR_BROTHERHOOD_HELP_QUEST, 6);
end

procedure create_floater
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    while (LVar1 < 1) do begin
        LVar0 := 28507 + random(1, 15) + (random(1, 10) * 200);
        if (not(tile_contains_obj_pid(LVar0, 0, 16777463)) and not(tile_contains_obj_pid(LVar0, 0, 16777460)) and not(tile_contains_obj_pid(LVar0, 0, 16777461)) and not(tile_contains_obj_pid(LVar0, 0, 16777459)) and not(tile_contains_obj_pid(LVar0, 0, 16777457)) and not(tile_contains_obj_pid(LVar0, 0, 16777465))) then begin
            LVar1 := create_object_sid(16777463, LVar0, 0, SCRIPT_BOSZVERI);
        end
    end
end

procedure create_bigdeathclaw
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    while (LVar1 < 1) do begin
        LVar0 := 28507 + random(1, 15) + (random(1, 10) * 200);
        if (not(tile_contains_obj_pid(LVar0, 0, 16777463)) and not(tile_contains_obj_pid(LVar0, 0, 16777460)) and not(tile_contains_obj_pid(LVar0, 0, 16777461)) and not(tile_contains_obj_pid(LVar0, 0, 16777459)) and not(tile_contains_obj_pid(LVar0, 0, 16777457)) and not(tile_contains_obj_pid(LVar0, 0, 16777465))) then begin
            LVar1 := create_object_sid(16777461, LVar0, 0, SCRIPT_BOSZVERI);
        end
    end
end

procedure create_littledeathclaw
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    while (LVar1 < 1) do begin
        LVar0 := 28507 + random(1, 15) + (random(1, 10) * 200);
        if (not(tile_contains_obj_pid(LVar0, 0, 16777463)) and not(tile_contains_obj_pid(LVar0, 0, 16777460)) and not(tile_contains_obj_pid(LVar0, 0, 16777461)) and not(tile_contains_obj_pid(LVar0, 0, 16777459)) and not(tile_contains_obj_pid(LVar0, 0, 16777457)) and not(tile_contains_obj_pid(LVar0, 0, 16777465))) then begin
            LVar1 := create_object_sid(16777460, LVar0, 0, SCRIPT_BOSZVERI);
        end
    end
end

procedure create_alien
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    while (LVar1 < 1) do begin
        LVar0 := 28507 + random(1, 15) + (random(1, 10) * 200);
        if (not(tile_contains_obj_pid(LVar0, 0, 16777463)) and not(tile_contains_obj_pid(LVar0, 0, 16777460)) and not(tile_contains_obj_pid(LVar0, 0, 16777461)) and not(tile_contains_obj_pid(LVar0, 0, 16777459)) and not(tile_contains_obj_pid(LVar0, 0, 16777457)) and not(tile_contains_obj_pid(LVar0, 0, 16777465))) then begin
            LVar1 := create_object_sid(16777459, LVar0, 0, SCRIPT_BOSZVERI);
        end
    end
end

procedure create_firegecko
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    while (LVar1 < 1) do begin
        LVar0 := 28507 + random(1, 15) + (random(1, 10) * 200);
        if (not(tile_contains_obj_pid(LVar0, 0, 16777463)) and not(tile_contains_obj_pid(LVar0, 0, 16777460)) and not(tile_contains_obj_pid(LVar0, 0, 16777461)) and not(tile_contains_obj_pid(LVar0, 0, 16777459)) and not(tile_contains_obj_pid(LVar0, 0, 16777457)) and not(tile_contains_obj_pid(LVar0, 0, 16777465))) then begin
            LVar1 := create_object_sid(16777457, LVar0, 0, SCRIPT_BOSZVERI);
        end
    end
end

procedure create_kentaur
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    while (LVar1 < 1) do begin
        LVar0 := 28507 + random(1, 15) + (random(1, 10) * 200);
        if (not(tile_contains_obj_pid(LVar0, 0, 16777463)) and not(tile_contains_obj_pid(LVar0, 0, 16777460)) and not(tile_contains_obj_pid(LVar0, 0, 16777461)) and not(tile_contains_obj_pid(LVar0, 0, 16777459)) and not(tile_contains_obj_pid(LVar0, 0, 16777457)) and not(tile_contains_obj_pid(LVar0, 0, 16777465))) then begin
            LVar1 := create_object_sid(16777465, LVar0, 0, SCRIPT_BOSZVERI);
        end
    end
end
