variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure use_p_proc;
procedure destroy_p_proc;
procedure combat_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure getcommand;
procedure checkdone;
procedure checkerr;
procedure godock;
procedure analyze_prog;
procedure punch_it;
procedure Node999;

variable Only_Once;
variable mycommand;
variable myhex;
variable item;
variable k;
variable good_prog;

import variable robot_obj;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
    robot_obj := self_obj;
end

procedure timed_event_p_proc
begin
    set_local_var(5, 0);
    set_local_var(0, 0);
end

procedure critter_p_proc
begin
    if (map_var(8) == 1) then begin
        if (local_var(4) == 0) then begin
            set_local_var(4, 1);
            call analyze_prog();
        end
        if ((local_var(0) == 0) and (local_var(2) == 0)) then begin
            if (map_var(9) > local_var(1)) then begin
                call getcommand();
            end
            else begin
                call godock();
            end
        end
        else begin
            if (local_var(2) == 1) then begin
                call godock();
            end
            else begin
                call checkdone();
            end
        end
    end
end

procedure pickup_p_proc
begin
    script_overrides;
end

procedure use_p_proc
begin
end

procedure destroy_p_proc
begin
    if ((global_var(GVAR_GECKO_WORKING_ON_PLANT) bwand 2) != 0) then begin
        set_global_var(GVAR_PLANT_SCHEDULED_FOR_CHANGE, 0);
    end
    set_global_var(GVAR_GECKO_WORKING_ON_PLANT, global_var(GVAR_GECKO_WORKING_ON_PLANT) bwand (-1 - 2));
end

procedure combat_p_proc
begin
    script_overrides;
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(101);
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
end

procedure map_enter_p_proc
begin
    robot_obj := self_obj;
end

procedure map_update_p_proc
begin
    robot_obj := self_obj;
end

procedure getcommand
begin
    set_local_var(0, 1);
    set_local_var(1, local_var(1) + 1);
    if (local_var(1) == 1) then begin
        set_local_var(3, map_var(11));
    end
    else begin
        if (local_var(1) == 2) then begin
            set_local_var(3, map_var(12));
        end
        else begin
            if (local_var(1) == 3) then begin
                set_local_var(3, map_var(13));
            end
            else begin
                if (local_var(1) == 4) then begin
                    set_local_var(3, map_var(14));
                end
                else begin
                    if (local_var(1) == 5) then begin
                        set_local_var(3, map_var(15));
                    end
                    else begin
                        if (local_var(1) == 6) then begin
                            set_local_var(3, map_var(16));
                        end
                    end
                end
            end
        end
    end
    call checkerr();
end

procedure checkdone
begin
    mycommand := local_var(3);
    if (mycommand == 1) then begin
        myhex := tile_num(self_obj);
        if (myhex == 12885) then begin
            anim(self_obj, 1000, 5);
            call punch_it();
        end
        else begin
            animate_move_obj_to_tile(self_obj, 12885, 0);
        end
    end
    else begin
        if (mycommand == 2) then begin
            myhex := tile_num(self_obj);
            if (myhex == 17087) then begin
                anim(self_obj, 1000, 1);
                call punch_it();
            end
            else begin
                animate_move_obj_to_tile(self_obj, 17087, 0);
            end
        end
        else begin
            if (mycommand == 3) then begin
                myhex := tile_num(self_obj);
                if (myhex == 13067) then begin
                    anim(self_obj, 1000, 0);
                    call punch_it();
                end
                else begin
                    animate_move_obj_to_tile(self_obj, 13067, 0);
                end
            end
            else begin
                if (mycommand == 4) then begin
                    myhex := tile_num(self_obj);
                    if (myhex == 15085) then begin
                        anim(self_obj, 1000, 5);
                        call punch_it();
                    end
                    else begin
                        animate_move_obj_to_tile(self_obj, 15085, 0);
                    end
                end
                else begin
                    if (mycommand == 5) then begin
                        myhex := tile_num(self_obj);
                        if (myhex == 14667) then begin
                            anim(self_obj, 1000, 5);
                            call punch_it();
                        end
                        else begin
                            animate_move_obj_to_tile(self_obj, 14667, 0);
                        end
                    end
                    else begin
                        if (mycommand == 6) then begin
                            myhex := tile_num(self_obj);
                            if (myhex == 16265) then begin
                                if (obj_is_carrying_obj_pid(self_obj, 258)) then begin
                                    item := obj_carrying_pid_obj(self_obj, 258);
                                    rm_obj_from_inven(self_obj, item);
                                    destroy_object(item);
                                    if (global_var(GVAR_VAULT_GECKO_PLANT) < 9) then begin
                                        if (global_var(GVAR_PLANT_SCHEDULED_FOR_CHANGE) == 2) then begin
                                            set_global_var(GVAR_PLANT_SCHEDULED_FOR_CHANGE, 0);
                                        end
                                        set_global_var(GVAR_VAULT_GECKO_PLANT, 9);
                                        set_global_var(GVAR_VAULT_PLANT_STATUS, 9);
                                        display_mstr(200);
                                        k := 500 + 4000;
                                        give_exp_points(k);
                                        display_msg(g_mstr(100) + k + g_mstr(101));
                                        set_global_var(GVAR_TOWN_REP_GECKO, global_var(GVAR_TOWN_REP_GECKO) + 30);
                                        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 50);
                                        debug_msg("Player gains " + 50 + " Karma Points.");
                                        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                                        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                                        set_global_var(GVAR_KARMA_DEFENDER, 0);
                                        set_global_var(GVAR_KARMA_WANDERER, 0);
                                        set_global_var(GVAR_KARMA_BETRAYER, 0);
                                        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                                        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                                            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                                                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                                            end
                                            else begin
                                                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                                                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                                                end
                                                else begin
                                                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                                                    end
                                                    else begin
                                                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                                            set_global_var(GVAR_KARMA_WANDERER, 1);
                                                        end
                                                        else begin
                                                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                                                            end
                                                            else begin
                                                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                                                end
                                                                else begin
                                                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                                                    end
                                                                    else begin
                                                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                                else begin
                                    set_local_var(2, 1);
                                    set_map_var(10, 1);
                                end
                                set_local_var(0, 0);
                            end
                            else begin
                                animate_move_obj_to_tile(self_obj, 16265, 0);
                            end
                        end
                        else begin
                            if (mycommand == 7) then begin
                                myhex := tile_num(self_obj);
                                if (myhex == 16265) then begin
                                    set_local_var(0, 0);
                                    if (global_var(GVAR_GECKO_MELTDOWN) == 0) then begin
                                        set_global_var(GVAR_GECKO_MELTDOWN, 1);
                                        set_global_var(GVAR_ENEMY_GECKO, 1);
                                        display_mstr(300);
                                        give_exp_points(550);
                                        display_msg(g_mstr(100) + 550 + g_mstr(101));
                                    end
                                end
                                else begin
                                    animate_move_obj_to_tile(self_obj, 16265, 0);
                                end
                            end
                            else begin
                                if (mycommand == 8) then begin
                                    myhex := tile_num(self_obj);
                                    if (myhex == 16265) then begin
                                        set_local_var(0, 0);
                                    end
                                    else begin
                                        animate_move_obj_to_tile(self_obj, 16265, 0);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure checkerr
begin
    if ((local_var(1) == 1) and (local_var(3) != 2)) then begin
        set_local_var(2, 1);
        set_map_var(10, 1);
    end
    if ((local_var(1) == 2) and (local_var(3) != 4)) then begin
        set_local_var(2, 1);
        set_map_var(10, 1);
    end
    if ((local_var(1) == 3) and (local_var(3) != 1)) then begin
        set_local_var(2, 1);
        set_map_var(10, 1);
    end
    if ((local_var(1) == 4) and (local_var(3) != 3)) then begin
        set_local_var(2, 1);
        set_map_var(10, 1);
    end
    if ((local_var(1) == 5) and (local_var(3) != 5)) then begin
        set_local_var(2, 1);
        set_map_var(10, 1);
    end
    if ((local_var(1) == 6) and (local_var(3) < 6)) then begin
        set_local_var(2, 1);
        set_map_var(10, 1);
    end
end

procedure godock
begin
    myhex := tile_num(self_obj);
    if (myhex != 18079) then begin
        animate_move_obj_to_tile(self_obj, 18079, 0);
    end
    else begin
        set_local_var(4, 0);
        set_local_var(1, 0);
        set_local_var(0, 0);
        set_local_var(2, 0);
        set_local_var(3, 0);
        set_map_var(8, 0);
        set_global_var(GVAR_GECKO_WORKING_ON_PLANT, global_var(GVAR_GECKO_WORKING_ON_PLANT) bwand (-1 - 2));
    end
end

procedure analyze_prog
begin
    set_global_var(GVAR_GECKO_WORKING_ON_PLANT, global_var(GVAR_GECKO_WORKING_ON_PLANT) bwor 2);
    good_prog := 1;
    if (map_var(11) != 2) then begin
        good_prog := 0;
    end
    if (map_var(12) != 4) then begin
        good_prog := 0;
    end
    if (map_var(13) != 1) then begin
        good_prog := 0;
    end
    if (map_var(14) != 3) then begin
        good_prog := 0;
    end
    if (map_var(15) != 5) then begin
        good_prog := 0;
    end
    if (good_prog == 1) then begin
        if (map_var(16) == 6) then begin
            if (obj_is_carrying_obj_pid(self_obj, 258)) then begin
                set_global_var(GVAR_PLANT_SCHEDULED_FOR_CHANGE, 2);
            end
        end
        else begin
            if (map_var(16) == 7) then begin
                set_global_var(GVAR_PLANT_SCHEDULED_FOR_CHANGE, 1);
            end
        end
    end
end

procedure punch_it
begin
    if (local_var(5) == 0) then begin
        set_local_var(5, 1);
        reg_anim_func(2, self_obj);
        reg_anim_func(1, 1);
        reg_anim_animate(self_obj, 16, -1);
        reg_anim_func(3, 0);
        add_timer_event(self_obj, game_ticks(2), 0);
    end
end

procedure Node999
begin
end
