variable ProtoOfItemGiven;
variable ValueOfRollCheck;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure EvaluateKarma;
procedure CheckRep;

variable In_Timed_Event;
variable talk_flag;

procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node999;
procedure talk_p_proc;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure critter_p_proc;
procedure timed_event_p_proc;
procedure map_exit_p_proc;
procedure pickup_p_proc;
procedure destroy_p_proc;
procedure damage_p_proc;
procedure start;


/*******************************************************
*    Found Procedure without body.                     *
*                                                      *
*    Name: checkPartyMembersNearDoor                   *
*                                                      *
*    Other possible name(s):                           *
*       Node006                                        *
*       Node017                                        *
*                                                      *
*******************************************************/

procedure EvaluateKarma
begin
    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
    set_global_var(GVAR_KARMA_DEFENDER, 0);
    set_global_var(GVAR_KARMA_WANDERER, 0);
    set_global_var(GVAR_KARMA_BETRAYER, 0);
    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
    set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
    if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
    end
    else begin
        if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                    set_global_var(GVAR_KARMA_DEFENDER, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                        set_global_var(GVAR_KARMA_WANDERER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                            set_global_var(GVAR_KARMA_BETRAYER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                end
                                else begin
                                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure CheckRep
begin
    if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
        set_global_var(GVAR_CHAMPION_REPUTATION, 1);
        set_global_var(GVAR_BERSERKER_REPUTATION, 0);
    end
    if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
        set_global_var(GVAR_BERSERKER_REPUTATION, 1);
        set_global_var(GVAR_CHAMPION_REPUTATION, 0);
    end
end

procedure Node002
begin
    set_local_var(0, 1);
    Reply(202);
    giq_option(1, NAME, 203, Node003, NEUTRAL_REACTION);
end

procedure Node003
begin
    Reply(204);
    if (self_iq >= 2) then begin
        giq_option(-4, NAME, 205, Node004, NEUTRAL_REACTION);
    end
    giq_option(5, NAME, 206, Node004, NEUTRAL_REACTION);
    if (self_iq >= 2) then begin
        giq_option(-4, NAME, 207, Node008, NEUTRAL_REACTION);
    end
    giq_option(5, NAME, 208, Node008, NEUTRAL_REACTION);
    giq_option(-1, NAME, 209, Node004, NEUTRAL_REACTION);
end

procedure Node004
begin
    Reply(210);
    if (self_iq >= 2) then begin
        giq_option(-4, NAME, 211, Node005, NEUTRAL_REACTION);
    end
    giq_option(5, NAME, 212, Node005, NEUTRAL_REACTION);
    if (self_iq >= 2) then begin
        giq_option(-4, NAME, 213, Node007, NEUTRAL_REACTION);
    end
    giq_option(5, NAME, 214, Node007, NEUTRAL_REACTION);
    giq_option(-1, NAME, 215, Node005, NEUTRAL_REACTION);
    giq_option(-4, NAME, 216, Node008, NEUTRAL_REACTION);
    giq_option(5, NAME, 217, Node008, NEUTRAL_REACTION);
end

procedure Node005
begin
    add_mult_objs_to_inven(dude_obj, create_object(532, 0, 0), 1);
    set_local_var(2, 1);
    Reply(218);
    giq_option(5, NAME, 219, Node999, NEUTRAL_REACTION);
    giq_option(-4, NAME, 220, Node999, NEUTRAL_REACTION);
end

/*******************************************************
*    Found Procedure without body.                     *
*                                                      *
*    Name: Node006                                     *
*                                                      *
*    Other possible name(s):                           *
*       Node017                                        *
*                                                      *
*******************************************************/

procedure Node007
begin
    Reply(221);
    giq_option(5, NAME, 222, Node005, NEUTRAL_REACTION);
    if (self_iq >= 2) then begin
        giq_option(-4, NAME, 223, Node005, NEUTRAL_REACTION);
    end
    giq_option(5, NAME, 224, Node008, NEUTRAL_REACTION);
    giq_option(-4, NAME, 225, Node008, NEUTRAL_REACTION);
end

procedure Node008
begin
    Reply(226);
    giq_option(1, NAME, 227, Node999, NEUTRAL_REACTION);
end

procedure Node009
begin
    Reply(228);
    if (self_iq >= 2) then begin
        giq_option(-4, NAME, 229, Node005, NEUTRAL_REACTION);
    end
    giq_option(5, NAME, 230, Node005, NEUTRAL_REACTION);
    if (self_iq >= 2) then begin
        giq_option(-4, NAME, 231, Node007, NEUTRAL_REACTION);
    end
    giq_option(5, NAME, 232, Node007, NEUTRAL_REACTION);
    giq_option(-4, NAME, 233, Node008, NEUTRAL_REACTION);
    giq_option(5, NAME, 234, Node008, NEUTRAL_REACTION);
end

procedure Node010
begin
    variable LVar0 := 0;
    set_local_var(1, 1);
    give_exp_points(200);
    display_msg(g_mstr(100) + 200 + g_mstr(101));
    add_mult_objs_to_inven(dude_obj, create_object(71, 0, 0), 5);
    Reply(235);
    LVar0 := random(1, 3);
    if (LVar0 == 1) then begin
        giq_option(1, NAME, 236, Node011, NEUTRAL_REACTION);
    end
    if (LVar0 == 2) then begin
        giq_option(1, NAME, 236, Node012, NEUTRAL_REACTION);
    end
    if (LVar0 == 3) then begin
        giq_option(1, NAME, 236, Node013, NEUTRAL_REACTION);
    end
    giq_option(5, NAME, 237, Node016, NEUTRAL_REACTION);
    giq_option(-4, NAME, 238, Node016, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(239);
    giq_option(5, NAME, 240, Node014, NEUTRAL_REACTION);
    giq_option(5, NAME, 241, Node016, NEUTRAL_REACTION);
    giq_option(-4, NAME, 242, Node016, NEUTRAL_REACTION);
end

procedure Node012
begin
    Reply(243);
    giq_option(5, NAME, 244, Node014, NEUTRAL_REACTION);
    giq_option(5, NAME, 245, Node016, NEUTRAL_REACTION);
    giq_option(-4, NAME, 246, Node016, NEUTRAL_REACTION);
end

procedure Node013
begin
    Reply(247);
    giq_option(5, NAME, 248, Node014, NEUTRAL_REACTION);
    giq_option(5, NAME, 249, Node016, NEUTRAL_REACTION);
    giq_option(-4, NAME, 250, Node016, NEUTRAL_REACTION);
end

procedure Node014
begin
    Reply(251);
    giq_option(5, NAME, 252, Node015, NEUTRAL_REACTION);
    giq_option(5, NAME, 253, Node016, NEUTRAL_REACTION);
end

procedure Node015
begin
    Reply(254);
    giq_option(1, NAME, 255, Node016, NEUTRAL_REACTION);
end

procedure Node016
begin
    if (dude_gender == 0) then begin
        Reply(256);
    end
    if (dude_gender == 1) then begin
        Reply(257);
    end
    giq_option(1, NAME, dude_name + mstr(258) + dude_name + mstr(300), Node999, NEUTRAL_REACTION);
    giq_option(5, NAME, 259, Node999, NEUTRAL_REACTION);
end

procedure Node017
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure Node999
begin
end

procedure talk_p_proc
begin
    if (global_var(GVAR_RNDBAND_FLAG) == 0) then begin
        if (local_var(0) == 0) then begin
            start_gdialog(1307, self_obj, 4, -1, -1);
            gsay_start;
            call Node002();
            gsay_end;
            end_dialogue;
        end
        else begin
            if (local_var(2) == 0) then begin
                start_gdialog(1307, self_obj, 4, -1, -1);
                gsay_start;
                call Node009();
                gsay_end;
                end_dialogue;
            end
            else begin
                float_msg(self_obj, mstr(105), FLOAT_MSG_GREEN);
            end
        end
    end
    else begin
        if (local_var(1) == 0) then begin
            start_gdialog(1307, self_obj, 4, -1, -1);
            gsay_start;
            call Node010();
            gsay_end;
            end_dialogue;
        end
        else begin
            float_msg(self_obj, mstr(260), FLOAT_MSG_GREEN);
        end
    end
end

procedure map_enter_p_proc
begin
    if ((global_var(GVAR_RNDBAND_FLAG) == 0) and (map_var(2) == 1)) then begin
        set_obj_visibility(self_obj, 1);
        set_local_var(7, 1);
    end
    else begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 1);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_ARROYO_WARRIOR);
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(random(200, 201));
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(random(200, 201));
end

procedure critter_p_proc
begin
    if (local_var(7) == 0) then begin
        if ((local_var(0) == 0) and (In_Timed_Event == 0)) then begin
            In_Timed_Event := 1;
            add_timer_event(self_obj, random(4, 8) * 10, 1);
        end
        if ((local_var(3) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
            set_local_var(3, 1);
            attack(dude_obj);
        end
        if (tile_distance_objs(self_obj, dude_obj) <= 4) then begin
            if ((talk_flag == 0) and (combat_is_initialized == 0)) then begin
                talk_flag := 1;
                if (local_var(2) == 0) then begin
                    if (local_var(0) == 0) then begin
                        start_gdialog(1307, self_obj, 4, -1, -1);
                        gsay_start;
                        call Node002();
                        gsay_end;
                        end_dialogue;
                    end
                    else begin
                        start_gdialog(1307, self_obj, 4, -1, -1);
                        gsay_start;
                        call Node009();
                        gsay_end;
                        end_dialogue;
                    end
                end
            end
        end
        else begin
            talk_flag := 0;
        end
    end
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and (combat_is_initialized == 0)) then begin
        float_msg(self_obj, mstr(random(100, 104)), FLOAT_MSG_NORMAL);
        In_Timed_Event := 0;
    end
end

procedure map_exit_p_proc
begin
    if ((local_var(0) == 1) and (global_var(GVAR_RNDBAND_FLAG) == 0)) then begin
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - 5);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(3, 2);
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - 10);
        call EvaluateKarma();
    end
end

procedure damage_p_proc
begin
    set_global_var(GVAR_TOWN_REP_PRIMITIVE_TRIBE, global_var(GVAR_TOWN_REP_PRIMITIVE_TRIBE) - 50);
    if (source_obj == dude_obj) then begin
        set_local_var(3, 2);
    end
end

procedure start
begin
end
