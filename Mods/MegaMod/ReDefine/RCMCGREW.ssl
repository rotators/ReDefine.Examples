variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure Node998;
procedure Node999;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure Node035;
procedure Node036;
procedure Node037;
procedure Node038;
procedure Node039;
procedure Node040;
procedure Node041;
procedure Node042;
procedure Node043;
procedure Node044;
procedure Node045;
procedure Node046;
procedure Node047;
procedure Node048;
procedure Node049;
procedure Node050;
procedure Node051;
procedure Node052;
procedure Node053;
procedure Node054;
procedure Node055;
procedure Node056;
procedure Node057;
procedure Node058;
procedure Node059;
procedure Node060;
procedure Node061;
procedure Node062;
procedure Node063;
procedure Node064;
procedure Node065;
procedure Node066;
procedure Node002a;
procedure Node013a;
procedure Node025a;
procedure Node025b;
procedure Node025c;
procedure Node040a;
procedure Node070;

variable Only_Once;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if ((global_var(GVAR_ENEMY_REDDING) == 1) and obj_can_see_obj(self_obj, dude_obj)) then begin
        attack(dude_obj);
    end
    if ((local_var(5) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack(dude_obj);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure talk_p_proc
begin
    Evil_Critter := 0;
    Slavery_Tolerant := 2;
    Karma_Perception := 10;
    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
    set_global_var(GVAR_KARMA_DEFENDER, 0);
    set_global_var(GVAR_KARMA_WANDERER, 0);
    set_global_var(GVAR_KARMA_BETRAYER, 0);
    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
    set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
    if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
    end
    else begin
        if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                    set_global_var(GVAR_KARMA_DEFENDER, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                        set_global_var(GVAR_KARMA_WANDERER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                            set_global_var(GVAR_KARMA_BETRAYER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                end
                                else begin
                                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    if (local_var(2) == 0) then begin
        set_local_var(2, 1);
        set_local_var(3, (dude_charisma - self_charisma) * 5);
        debug_msg("Base Reaction == " + local_var(3));
    end
    Static_Reaction := 0;
    set_local_var(0, 0);
    debug_msg("Start Reaction == " + local_var(0));
    if (reaction_bonus_karma >= 0) then begin
        reaction_bonus_karma := reaction_bonus_karma / 1000;
    end
    else begin
        reaction_bonus_karma := -1 * (-1 * reaction_bonus_karma / 1000);
    end
    if (global_var(GVAR_TOWN_REP_REDDING) >= 0) then begin
        reaction_bonus_town_rep := global_var(GVAR_TOWN_REP_REDDING) / 2;
    end
    else begin
        reaction_bonus_town_rep := -1 * (-1 * global_var(GVAR_TOWN_REP_REDDING) / 2);
    end
    if (has_trait(TRAIT_TRAIT, dude_obj, TRAIT_sex_appeal)) then begin
        if (dude_gender == self_gender) then begin
            Static_Reaction := Static_Reaction + -20;
        end
        else begin
            Static_Reaction := Static_Reaction + 20;
        end
        debug_msg("Sex Appeal Bonus == " + Static_Reaction);
    end
    else begin
        debug_msg("Sex Appeal Bonus == 0");
    end
    if (Evil_Critter == 1) then begin
        Static_Reaction := Static_Reaction - reaction_bonus_karma;
        debug_msg("Karma Reaction Bonus == " + Static_Reaction);
        Static_Reaction := Static_Reaction - reaction_bonus_town_rep;
        debug_msg("Town Rep Bonus == " + Static_Reaction);
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (global_var(GVAR_KARMA_HOLY_WARRIOR) == 1) then begin
            Static_Reaction := Static_Reaction - 20;
        end
        else begin
            if (global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES) == 1) then begin
                Static_Reaction := Static_Reaction - 15;
            end
            else begin
                if (global_var(GVAR_KARMA_SHIELD_OF_HOPE) == 1) then begin
                    Static_Reaction := Static_Reaction - 10;
                end
                else begin
                    if (global_var(GVAR_KARMA_DEFENDER) == 1) then begin
                        Static_Reaction := Static_Reaction - 5;
                    end
                    else begin
                        if (global_var(GVAR_KARMA_WANDERER) == 1) then begin
                            Static_Reaction := Static_Reaction - 0;
                        end
                        else begin
                            if (global_var(GVAR_KARMA_BETRAYER) == 1) then begin
                                Static_Reaction := Static_Reaction - -5;
                            end
                            else begin
                                if (global_var(GVAR_KARMA_SWORD_OF_DESPAIR) == 1) then begin
                                    Static_Reaction := Static_Reaction - -10;
                                end
                                else begin
                                    if (global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE) == 1) then begin
                                        Static_Reaction := Static_Reaction - -15;
                                    end
                                    else begin
                                        Static_Reaction := Static_Reaction - -20;
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        debug_msg("Bad Person Reaction Bonus == " + Static_Reaction);
    end
    else begin
        Static_Reaction := Static_Reaction + reaction_bonus_karma;
        debug_msg("Karma Reaction Bonus == " + Static_Reaction);
        Static_Reaction := Static_Reaction + reaction_bonus_town_rep;
        debug_msg("Town Rep Bonus == " + Static_Reaction);
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (global_var(GVAR_KARMA_HOLY_WARRIOR) == 1) then begin
            Static_Reaction := Static_Reaction + 20;
        end
        else begin
            if (global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES) == 1) then begin
                Static_Reaction := Static_Reaction + 15;
            end
            else begin
                if (global_var(GVAR_KARMA_SHIELD_OF_HOPE) == 1) then begin
                    Static_Reaction := Static_Reaction + 10;
                end
                else begin
                    if (global_var(GVAR_KARMA_DEFENDER) == 1) then begin
                        Static_Reaction := Static_Reaction + 5;
                    end
                    else begin
                        if (global_var(GVAR_KARMA_WANDERER) == 1) then begin
                            Static_Reaction := Static_Reaction + 0;
                        end
                        else begin
                            if (global_var(GVAR_KARMA_BETRAYER) == 1) then begin
                                Static_Reaction := Static_Reaction + -5;
                            end
                            else begin
                                if (global_var(GVAR_KARMA_SWORD_OF_DESPAIR) == 1) then begin
                                    Static_Reaction := Static_Reaction + -10;
                                end
                                else begin
                                    if (global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE) == 1) then begin
                                        Static_Reaction := Static_Reaction + -15;
                                    end
                                    else begin
                                        Static_Reaction := Static_Reaction + -20;
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        debug_msg("Good Person Reaction Bonus == " + Static_Reaction);
    end
    if (Slavery_Tolerant == 0) then begin
        if (global_var(GVAR_REPUTATION_SLAVER) == 1) then begin
            Static_Reaction := Static_Reaction + (2 * -25);
        end
    end
    else begin
        if (Slavery_Tolerant == 1) then begin
            if (global_var(GVAR_REPUTATION_SLAVER) == 1) then begin
                Static_Reaction := Static_Reaction + -25;
            end
        end
        else begin
            if (Slavery_Tolerant == 3) then begin
                if (global_var(GVAR_REPUTATION_SLAVER) == 1) then begin
                    Static_Reaction := Static_Reaction - -25;
                end
            end
        end
    end
    debug_msg("Slaver + Aligned Reaction == " + Static_Reaction);
    Static_Reaction := Static_Reaction + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence));
    debug_msg("Presence Reaction == " + Static_Reaction);
    if (global_var(GVAR_CHILDKILLER_REPUTATION) >= 2) then begin
        Static_Reaction := Static_Reaction + -30;
    end
    debug_msg("Childkiller Reaction == " + Static_Reaction);
    set_local_var(0, local_var(3) + Static_Reaction);
    debug_msg("Initial Reaction == " + local_var(0));
    if (dude_iq < 4) then begin
        call Node001();
    end
    else begin
        start_gdialog(807, self_obj, 4, -1, -1);
        gsay_start;
        call Node002();
        gsay_end;
        end_dialogue;
    end
end

procedure destroy_p_proc
begin
    variable LVar0 := 0;
    LVar0 := create_object(1, 0, 0);
    add_obj_to_inven(self_obj, LVar0);
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (critter_kill_type(self_obj) == 2) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(GVAR_TOWN_REP_REDDING, global_var(GVAR_TOWN_REP_REDDING) + -8);
                debug_msg("Added " + -8 + " to Town Rep");
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(GVAR_TOWN_REP_REDDING, global_var(GVAR_TOWN_REP_REDDING) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
    set_global_var(GVAR_ENEMY_REDDING, 1);
    set_global_var(GVAR_REDDING_DAN_STATUS, 1);
    return 0;
    LVar0 := 0;
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(7) == 0) then begin
        set_local_var(7, local_var(7) + 1);
        display_mstr(100);
    end
    else begin
        display_mstr(101);
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(102);
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(6, 1);
    end
end

procedure map_enter_p_proc
begin
    Only_Once := 0;
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 152);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_GENERIC_GUARDS);
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
end

procedure Node001
begin
    float_msg(self_obj, mstr(random(103, 107)), FLOAT_MSG_YELLOW);
end

procedure Node002
begin
    if (local_var(8) == 0) then begin
        set_local_var(8, local_var(8) + 1);
        Reply(108);
    end
    else begin
        Reply(109);
    end
    if (global_var(GVAR_KCSALLY_JENNY_SUBST) == 0) then begin
        if (obj_is_carrying_obj_pid(dude_obj, 761)) then begin
            giq_option(4, NAME, 310, Node054, NEUTRAL_REACTION);
        end
        else begin
            if (obj_is_carrying_obj_pid(dude_obj, 762)) then begin
                giq_option(4, NAME, 311, Node055, NEUTRAL_REACTION);
            end
            else begin
                if (obj_is_carrying_obj_pid(dude_obj, 763)) then begin
                    giq_option(4, NAME, 312, Node056, NEUTRAL_REACTION);
                end
            end
        end
    end
    giq_option(4, NAME, 110, Node003, NEUTRAL_REACTION);
    if (not(global_var(GVAR_VAULT13_FOUND_GECK))) then begin
        giq_option(4, NAME, 111, Node022, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 112, Node019, NEUTRAL_REACTION);
    giq_option(4, NAME, 113, Node002a, NEUTRAL_REACTION);
    giq_option(4, NAME, 114, Node999, NEUTRAL_REACTION);
end

procedure Node003
begin
    Reply(115);
    giq_option(4, NAME, 116, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 117, Node004, NEUTRAL_REACTION);
    giq_option(4, NAME, 118, Node999, NEUTRAL_REACTION);
end

procedure Node004
begin
    Reply(119);
    giq_option(4, NAME, 120, Node005, NEUTRAL_REACTION);
    giq_option(4, NAME, 121, Node999, NEUTRAL_REACTION);
end

procedure Node005
begin
    Reply(122);
    giq_option(4, NAME, 123, Node006, NEUTRAL_REACTION);
    giq_option(4, NAME, 124, Node999, NEUTRAL_REACTION);
end

procedure Node006
begin
    Reply(125);
    giq_option(4, NAME, 126, Node007, NEUTRAL_REACTION);
    giq_option(4, NAME, 127, Node999, NEUTRAL_REACTION);
end

procedure Node007
begin
    Reply(128);
    giq_option(4, NAME, 129, Node008, NEUTRAL_REACTION);
    giq_option(4, NAME, 130, Node999, NEUTRAL_REACTION);
end

procedure Node008
begin
    Reply(131);
    giq_option(4, NAME, 132, Node009, NEUTRAL_REACTION);
    giq_option(4, NAME, 133, Node999, NEUTRAL_REACTION);
end

procedure Node009
begin
    Reply(134);
    giq_option(4, NAME, 135, Node010, NEUTRAL_REACTION);
    giq_option(4, NAME, 136, Node999, NEUTRAL_REACTION);
end

procedure Node010
begin
    Reply(137);
    giq_option(4, NAME, 138, Node011, NEUTRAL_REACTION);
    giq_option(4, NAME, 139, Node999, BAD_REACTION);
    giq_option(4, NAME, 140, Node999, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(141);
    giq_option(4, NAME, 142, Node012, NEUTRAL_REACTION);
    giq_option(4, NAME, 143, Node999, NEUTRAL_REACTION);
end

procedure Node012
begin
    Reply(144);
    giq_option(4, NAME, 145, Node013, NEUTRAL_REACTION);
    giq_option(4, NAME, 146, Node013, NEUTRAL_REACTION);
end

procedure Node013
begin
    Reply(147);
    giq_option(4, NAME, 148, Node013a, NEUTRAL_REACTION);
    giq_option(4, NAME, 149, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 150, Node999, NEUTRAL_REACTION);
end

procedure Node014
begin
    Reply(151);
    giq_option(4, NAME, 152, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 153, Node999, NEUTRAL_REACTION);
end

procedure Node015
begin
    Reply(154);
    giq_option(4, NAME, 155, Node049, NEUTRAL_REACTION);
    giq_option(4, NAME, 156, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 157, Node999, NEUTRAL_REACTION);
end

procedure Node016
begin
    Reply(158);
    giq_option(4, NAME, 159, Node049, NEUTRAL_REACTION);
    giq_option(4, NAME, 160, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 161, Node999, NEUTRAL_REACTION);
end

procedure Node017
begin
    Reply(162);
    giq_option(4, NAME, 163, Node049, NEUTRAL_REACTION);
    giq_option(4, NAME, 164, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 165, Node999, NEUTRAL_REACTION);
end

procedure Node018
begin
    Reply(166);
    giq_option(4, NAME, 167, Node049, NEUTRAL_REACTION);
    giq_option(4, NAME, 168, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 169, Node999, NEUTRAL_REACTION);
end

procedure Node019
begin
    Reply(170);
    giq_option(4, NAME, 171, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 172, Node020, BAD_REACTION);
    giq_option(4, NAME, 173, Node999, GOOD_REACTION);
end

procedure Node020
begin
    Reply(174);
    giq_option(4, NAME, 175, Node998, BAD_REACTION);
    giq_option(4, NAME, 176, Node051, BAD_REACTION);
    giq_option(4, NAME, 177, Node021, BAD_REACTION);
end

procedure Node021
begin
    Reply(178);
    giq_option(4, NAME, 179, Node998, BAD_REACTION);
    giq_option(4, NAME, 180, Node999, NEUTRAL_REACTION);
end

procedure Node022
begin
    Reply(181);
    giq_option(4, NAME, 182, Node023, BAD_REACTION);
    giq_option(4, NAME, 183, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 184, Node999, NEUTRAL_REACTION);
end

procedure Node023
begin
    Reply(185);
    giq_option(4, NAME, 186, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 187, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 188, Node999, NEUTRAL_REACTION);
end

procedure Node024
begin
    Reply(189);
    giq_option(4, NAME, 190, Node042, NEUTRAL_REACTION);
    giq_option(4, NAME, 191, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 192, Node999, NEUTRAL_REACTION);
end

procedure Node025
begin
    if (local_var(9) == 0) then begin
        set_local_var(9, local_var(9) + 1);
        Reply(193);
    end
    else begin
        Reply(194);
    end
    if (global_var(GVAR_REDDING_EXCAVATOR_CHIP) > 0) then begin
        giq_option(4, NAME, 195, Node025a, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_REDDING_WHORE_CUT) > 1) then begin
        giq_option(4, NAME, 196, Node025b, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_BAR_BRAWL) > 3) then begin
        giq_option(4, NAME, 197, Node025c, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 198, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 199, Node999, NEUTRAL_REACTION);
end

procedure Node026
begin
end

procedure Node027
begin
    Reply(200);
    giq_option(4, NAME, 201, Node038, NEUTRAL_REACTION);
    if ((global_var(GVAR_REDDING_WHORE_CUT) > 0) or (global_var(GVAR_BAR_BRAWL) > 1)) then begin
        giq_option(4, NAME, 202, Node025, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 203, Node999, NEUTRAL_REACTION);
end

procedure Node028
begin
    Reply(204);
    if ((global_var(GVAR_REDDING_EXCAVATOR_CHIP) > 0) or (global_var(GVAR_BAR_BRAWL) > 1)) then begin
        giq_option(4, NAME, 205, Node025, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 206, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 207, Node999, NEUTRAL_REACTION);
end

procedure Node029
begin
    Reply(208);
    if ((global_var(GVAR_REDDING_EXCAVATOR_CHIP) > 0) or (global_var(GVAR_BAR_BRAWL) > 1)) then begin
        giq_option(4, NAME, 209, Node025, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 210, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 211, Node999, NEUTRAL_REACTION);
end

procedure Node030
begin
    Reply(212);
    if ((global_var(GVAR_REDDING_EXCAVATOR_CHIP) > 0) or (global_var(GVAR_BAR_BRAWL) > 1)) then begin
        giq_option(4, NAME, 213, Node025, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 214, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 215, Node999, NEUTRAL_REACTION);
end

procedure Node031
begin
    Reply(216);
    giq_option(4, NAME, 217, Node040, NEUTRAL_REACTION);
    giq_option(4, NAME, 218, Node038, NEUTRAL_REACTION);
    if ((global_var(GVAR_REDDING_WHORE_CUT) > 0) or (global_var(GVAR_BAR_BRAWL) > 1)) then begin
        giq_option(4, NAME, 219, Node025, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 220, Node999, NEUTRAL_REACTION);
end

procedure Node032
begin
    Reply(221);
    if ((global_var(GVAR_REDDING_WHORE_CUT) > 0) or (global_var(GVAR_BAR_BRAWL) > 1)) then begin
        giq_option(4, NAME, 222, Node025, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 223, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 224, Node999, NEUTRAL_REACTION);
end

procedure Node033
begin
    Reply(225);
    if ((global_var(GVAR_REDDING_EXCAVATOR_CHIP) > 0) or (global_var(GVAR_REDDING_WHORE_CUT) > 0)) then begin
        giq_option(4, NAME, 226, Node025, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 227, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 228, Node999, NEUTRAL_REACTION);
end

procedure Node034
begin
    Reply(229);
    if ((global_var(GVAR_REDDING_EXCAVATOR_CHIP) > 0) or (global_var(GVAR_REDDING_WHORE_CUT) > 0)) then begin
        giq_option(4, NAME, 230, Node025, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 231, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 232, Node999, NEUTRAL_REACTION);
end

procedure Node035
begin
    Reply(233);
    if ((global_var(GVAR_REDDING_EXCAVATOR_CHIP) > 0) or (global_var(GVAR_REDDING_WHORE_CUT) > 0)) then begin
        giq_option(4, NAME, 234, Node025, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 235, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 236, Node999, NEUTRAL_REACTION);
end

procedure Node036
begin
    Reply(237);
    if ((global_var(GVAR_REDDING_EXCAVATOR_CHIP) > 0) or (global_var(GVAR_REDDING_WHORE_CUT) > 0)) then begin
        giq_option(4, NAME, 238, Node025, BAD_REACTION);
    end
    giq_option(4, NAME, 239, Node002, BAD_REACTION);
    giq_option(4, NAME, 240, Node999, NEUTRAL_REACTION);
end

procedure Node037
begin
    Reply(241);
    if ((global_var(GVAR_REDDING_EXCAVATOR_CHIP) > 0) or (global_var(GVAR_REDDING_WHORE_CUT) > 0)) then begin
        giq_option(4, NAME, 242, Node051, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 243, Node051, BAD_REACTION);
    giq_option(4, NAME, 244, Node999, NEUTRAL_REACTION);
end

procedure Node038
begin
    Reply(245);
    giq_option(4, NAME, 246, Node039, NEUTRAL_REACTION);
    giq_option(4, NAME, 247, Node999, NEUTRAL_REACTION);
end

procedure Node039
begin
    Reply(248);
    giq_option(4, NAME, 249, Node003, NEUTRAL_REACTION);
    giq_option(4, NAME, 250, Node999, NEUTRAL_REACTION);
end

procedure Node040
begin
    Reply(251);
    if (not(obj_is_carrying_obj_pid(dude_obj, 422))) then begin
        giq_option(4, NAME, 252, Node041, GOOD_REACTION);
        giq_option(4, NAME, 255, Node999, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 253, Node040a, GOOD_REACTION);
        giq_option(4, NAME, 254, Node999, NEUTRAL_REACTION);
    end
end

procedure Node041
begin
    Reply(256);
    if ((global_var(GVAR_REDDING_WHORE_CUT) > 0) or (global_var(GVAR_BAR_BRAWL) > 1)) then begin
        giq_option(4, NAME, 257, Node025, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 258, Node044, NEUTRAL_REACTION);
    giq_option(4, NAME, 259, Node999, NEUTRAL_REACTION);
end

procedure Node042
begin
    Reply(260);
    giq_option(4, NAME, 261, Node043, NEUTRAL_REACTION);
    giq_option(4, NAME, 262, Node999, NEUTRAL_REACTION);
end

procedure Node043
begin
    set_global_var(GVAR_REDDING_EXCAVATOR_CHIP, 1);
    Reply(263);
    giq_option(4, NAME, 264, Node041, GOOD_REACTION);
    giq_option(4, NAME, 265, Node044, BAD_REACTION);
    giq_option(4, NAME, 266, Node999, BAD_REACTION);
end

procedure Node044
begin
    Reply(267);
    giq_option(4, NAME, 268, Node045, NEUTRAL_REACTION);
    giq_option(4, NAME, 269, Node999, NEUTRAL_REACTION);
end

procedure Node045
begin
    Reply(270);
    giq_option(4, NAME, 271, Node046, NEUTRAL_REACTION);
    giq_option(4, NAME, 272, Node047, BAD_REACTION);
end

procedure Node046
begin
    Reply(273);
    if ((global_var(GVAR_REDDING_WHORE_CUT) > 0) or (global_var(GVAR_BAR_BRAWL) > 1)) then begin
        giq_option(4, NAME, 274, Node025, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 275, Node048, NEUTRAL_REACTION);
end

procedure Node047
begin
    Reply(276);
    giq_option(4, NAME, 277, Node999, BAD_REACTION);
    giq_option(4, NAME, 278, Node999, NEUTRAL_REACTION);
end

procedure Node048
begin
    if (is_success(roll_vs_skill(dude_obj, 14, -20))) then begin
        Reply(279);
    end
    else begin
        Reply(280);
    end
    if ((global_var(GVAR_REDDING_WHORE_CUT) > 0) or (global_var(GVAR_BAR_BRAWL) > 1)) then begin
        giq_option(4, NAME, 281, Node025, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 282, Node999, NEUTRAL_REACTION);
end

procedure Node049
begin
    Reply(283);
    giq_option(4, NAME, 284, Node050, NEUTRAL_REACTION);
    giq_option(4, NAME, 285, Node999, NEUTRAL_REACTION);
end

procedure Node050
begin
    Reply(286);
    giq_option(4, NAME, 287, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 288, Node999, NEUTRAL_REACTION);
end

procedure Node051
begin
    if (dude_gender == 0) then begin
        Reply(289);
    end
    else begin
        Reply(290);
    end
    giq_option(4, NAME, 291, Node052, NEUTRAL_REACTION);
    giq_option(4, NAME, 292, Node998, BAD_REACTION);
    giq_option(4, NAME, 293, Node999, NEUTRAL_REACTION);
end

procedure Node052
begin
    Reply(294);
    giq_option(4, NAME, 295, Node053, NEUTRAL_REACTION);
    giq_option(4, NAME, 296, Node999, NEUTRAL_REACTION);
end

procedure Node053
begin
    Reply(297);
    giq_option(4, NAME, 298, Node998, BAD_REACTION);
    giq_option(4, NAME, 299, Node998, BAD_REACTION);
    giq_option(4, NAME, 300, Node999, NEUTRAL_REACTION);
end

procedure Node054
begin
    Reply(313);
    giq_option(4, NAME, 314, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 315, Node057, NEUTRAL_REACTION);
end

procedure Node055
begin
    Reply(316);
    giq_option(4, NAME, 314, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 315, Node057, NEUTRAL_REACTION);
end

procedure Node056
begin
    Reply(317);
    giq_option(4, NAME, 314, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 315, Node057, NEUTRAL_REACTION);
end

procedure Node057
begin
    if (global_var(GVAR_REDDING_EXCAVATOR_CHIP) == 3) then begin
        call Node058();
    end
    else begin
        if (global_var(GVAR_REDDING_EXCAVATOR_CHIP) == 2) then begin
            call Node059();
        end
        else begin
            call Node060();
        end
    end
end

procedure Node058
begin
    Reply(318);
    giq_option(4, NAME, 319, Node062, NEUTRAL_REACTION);
end

procedure Node059
begin
    Reply(320);
    giq_option(4, NAME, 321, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 322, Node061, NEUTRAL_REACTION);
    if (item_caps_total(dude_obj) >= 1000) then begin
        giq_option(4, NAME, 323, Node062, NEUTRAL_REACTION);
    end
end

procedure Node060
begin
    Reply(324);
    giq_option(4, NAME, 322, Node061, NEUTRAL_REACTION);
    if (item_caps_total(dude_obj) >= 500) then begin
        giq_option(4, NAME, 323, Node062, NEUTRAL_REACTION);
    end
end

procedure Node061
begin
    gsay_message(NAME, 325, NEUTRAL_REACTION);
end

procedure Node062
begin
    variable LVar0 := 0;
    if (global_var(GVAR_REDDING_EXCAVATOR_CHIP) == 3) then begin
    end
    else begin
        if (global_var(GVAR_REDDING_EXCAVATOR_CHIP) == 2) then begin
            item_caps_adjust(dude_obj, -1000);
        end
        else begin
            item_caps_adjust(dude_obj, -500);
        end
    end
    LVar0 := roll_vs_skill(dude_obj, 11, -20);
    if (is_success(LVar0)) then begin
        call Node065();
    end
    else begin
        call Node063();
    end
    return 0;
    LVar0 := 0;
end

procedure Node063
begin
    game_time_advance(8 * (60 * (60 * 10)));
    Reply(326);
    giq_option(4, NAME, 327, Node064, NEUTRAL_REACTION);
end

procedure Node064
begin
    Reply(328);
    giq_option(4, NAME, 329, Node999, NEUTRAL_REACTION);
end

procedure Node065
begin
    game_time_advance(6 * (60 * (60 * 10)));
    set_global_var(GVAR_KCSALLY_JENNY_SUBST, 1);
    Reply(330);
    giq_option(4, NAME, 331, Node066, NEUTRAL_REACTION);
end

procedure Node066
begin
    Reply(332);
    giq_option(4, NAME, 333, Node999, NEUTRAL_REACTION);
end

procedure Node002a
begin
    if (global_var(GVAR_REDDING_EXCAVATOR_CHIP) == 0) then begin
        call Node024();
    end
    else begin
        call Node025();
    end
end

procedure Node013a
begin
    if (global_var(GVAR_REDDING_JET_LEVEL) == 0) then begin
        call Node014();
    end
    else begin
        if (global_var(GVAR_REDDING_JET_LEVEL) == 1) then begin
            call Node015();
        end
        else begin
            if (global_var(GVAR_REDDING_JET_LEVEL) == 2) then begin
                call Node016();
            end
            else begin
                if (global_var(GVAR_REDDING_JET_LEVEL) == 3) then begin
                    call Node017();
                end
                else begin
                    if (global_var(GVAR_REDDING_JET_LEVEL) == 4) then begin
                        call Node018();
                    end
                end
            end
        end
    end
end

procedure Node025a
begin
    if (global_var(GVAR_REDDING_EXCAVATOR_CHIP) == 2) then begin
        call Node027();
    end
    else begin
        if (global_var(GVAR_REDDING_EXCAVATOR_CHIP) == 1) then begin
            call Node031();
        end
        else begin
            call Node032();
        end
    end
end

procedure Node025b
begin
    if (global_var(GVAR_REDDING_WHORE_CUT) == 2) then begin
        call Node028();
    end
    else begin
        if (global_var(GVAR_REDDING_WHORE_CUT) == 3) then begin
            call Node029();
        end
        else begin
            call Node030();
        end
    end
end

procedure Node025c
begin
    if (global_var(GVAR_BAR_BRAWL) == 9) then begin
        call Node033();
    end
    else begin
        if (global_var(GVAR_BAR_BRAWL) == 5) then begin
            call Node034();
        end
        else begin
            if (global_var(GVAR_BAR_BRAWL) == 6) then begin
                call Node035();
            end
            else begin
                if (global_var(GVAR_BAR_BRAWL) == 7) then begin
                    call Node036();
                end
                else begin
                    if (global_var(GVAR_BAR_BRAWL) == 8) then begin
                        call Node037();
                    end
                    else begin
                        if (global_var(GVAR_BAR_BRAWL) == 4) then begin
                            call Node070();
                        end
                    end
                end
            end
        end
    end
end

procedure Node040a
begin
    variable LVar0 := 0;
    item_caps_adjust(dude_obj, 1000);
    display_msg(g_mstr(1007));
    give_exp_points(2500);
    display_msg(g_mstr(100) + 2500 + g_mstr(101));
    LVar0 := obj_carrying_pid_obj(dude_obj, 422);
    rm_obj_from_inven(dude_obj, LVar0);
    add_obj_to_inven(self_obj, LVar0);
    set_global_var(GVAR_REDDING_EXCAVATOR_CHIP, 3);
    return 0;
    LVar0 := 0;
end

procedure Node070
begin
    Reply(301);
    if ((global_var(GVAR_REDDING_EXCAVATOR_CHIP) > 0) or (global_var(GVAR_REDDING_WHORE_CUT) > 0)) then begin
        giq_option(4, NAME, 302, Node025, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 303, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 232, Node999, NEUTRAL_REACTION);
end
