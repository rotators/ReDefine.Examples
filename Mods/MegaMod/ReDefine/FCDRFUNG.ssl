variable tmp_gen_rep;
variable global_temp;
variable restock_amt;
variable restock_obj;
variable removed_qty;
variable Only_Once;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node998;
procedure Node999;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure Node035;
procedure Node036;
procedure Node037;
procedure Node038;
procedure Node039;
procedure Node040;
procedure Node041;
procedure Node042;
procedure Node043;
procedure Node044;
procedure Node045;
procedure Node046;
procedure Node047;
procedure Node048;
procedure Node049;
procedure Node050;
procedure Node051;
procedure Node052;
procedure Node053;
procedure Node054;
procedure NodeBarter;
procedure Node2829a;
procedure NodeHowMuch;
procedure NodeHealParty;
procedure Node2217a;
procedure Node2217b;
procedure Node2217c;
procedure Node2217d;
procedure Node2217e;
procedure NodeBarter1;
procedure Node3031a;
procedure NodeDoDermal;
procedure NodeDoDermalUpgrade;
procedure NodeDoPhoenix;
procedure NodeDoPhoenixUprade;
procedure Node100;
procedure Node125;
procedure Node126;
procedure Node130;
procedure Node131;
procedure Node135;
procedure Node136;
procedure Node150;
procedure Node151;
procedure Node152;
procedure Node160;
procedure Node161;
procedure Node162;
procedure Node165;


procedure start
begin
end

procedure critter_p_proc
begin
    if ((local_var(5) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        if (critter_is_fleeing(self_obj)) then begin
            if (anim_busy(self_obj) == 0) then begin
                if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                    if (anim_busy(self_obj) == 0) then begin
                        global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                        global_temp := (global_temp + 1) % 6;
                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                            debug_msg("flee loop: rot == " + global_temp);
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                        end
                    end
                end
            end
        end
        else begin
            attack(dude_obj);
        end
    end
    if ((global_var(GVAR_SAN_FRAN_LOPAN_KDRAGON_QST) == 2) or (global_var(GVAR_SAN_FRAN_DRAGON_KLOPAN_QST) == 2) and not(combat_is_initialized) and (tile_num(self_obj) != 23674)) then begin
        animate_move_obj_to_tile(self_obj, 23674, 0);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure talk_p_proc
begin
    Evil_Critter := 0;
    Slavery_Tolerant := 2;
    Karma_Perception := 10;
    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
    set_global_var(GVAR_KARMA_DEFENDER, 0);
    set_global_var(GVAR_KARMA_WANDERER, 0);
    set_global_var(GVAR_KARMA_BETRAYER, 0);
    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
    set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
    tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
    if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
    end
    if (tmp_gen_rep >= 1000) then begin
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
    end
    else begin
        if (tmp_gen_rep >= 750) then begin
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
        end
        else begin
            if (tmp_gen_rep >= 500) then begin
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
            end
            else begin
                if (tmp_gen_rep >= 250) then begin
                    set_global_var(GVAR_KARMA_DEFENDER, 1);
                end
                else begin
                    if (tmp_gen_rep > -250) then begin
                        set_global_var(GVAR_KARMA_WANDERER, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -500) then begin
                            set_global_var(GVAR_KARMA_BETRAYER, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -750) then begin
                                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -1000) then begin
                                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                end
                                else begin
                                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    if (local_var(2) == 0) then begin
        set_local_var(2, 1);
        set_local_var(3, (dude_charisma - self_charisma) * 5);
        debug_msg("Base Reaction == " + local_var(3));
    end
    Static_Reaction := 0;
    set_local_var(0, 0);
    debug_msg("Start Reaction == " + local_var(0));
    if (reaction_bonus_karma >= 0) then begin
        reaction_bonus_karma := reaction_bonus_karma / 1000;
    end
    else begin
        reaction_bonus_karma := -1 * (-1 * reaction_bonus_karma / 1000);
    end
    if (global_var(GVAR_TOWN_REP_SAN_FRANCISCO) >= 0) then begin
        reaction_bonus_town_rep := global_var(GVAR_TOWN_REP_SAN_FRANCISCO) / 2;
    end
    else begin
        reaction_bonus_town_rep := -1 * (-1 * global_var(GVAR_TOWN_REP_SAN_FRANCISCO) / 2);
    end
    if (has_trait(TRAIT_TRAIT, dude_obj, TRAIT_sex_appeal)) then begin
        if (dude_gender == self_gender) then begin
            Static_Reaction := Static_Reaction + -20;
        end
        else begin
            Static_Reaction := Static_Reaction + 20;
        end
        debug_msg("Sex Appeal Bonus == " + Static_Reaction);
    end
    else begin
        debug_msg("Sex Appeal Bonus == 0");
    end
    if (Evil_Critter == 1) then begin
        if (reaction_bonus_karma >= 0) then begin
            Static_Reaction := Static_Reaction - reaction_bonus_karma;
        end
        else begin
            Static_Reaction := Static_Reaction + reaction_bonus_karma;
        end
        debug_msg("Karma Reaction Bonus == " + Static_Reaction);
        if (reaction_bonus_town_rep >= 0) then begin
            Static_Reaction := Static_Reaction - reaction_bonus_town_rep;
        end
        else begin
            Static_Reaction := Static_Reaction + reaction_bonus_town_rep;
        end
        debug_msg("Town Rep Bonus == " + Static_Reaction);
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
        if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
            tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
        end
        if (tmp_gen_rep >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (tmp_gen_rep >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (tmp_gen_rep >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (tmp_gen_rep >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (global_var(GVAR_KARMA_HOLY_WARRIOR) == 1) then begin
            Static_Reaction := Static_Reaction - 20;
        end
        else begin
            if (global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES) == 1) then begin
                Static_Reaction := Static_Reaction - 15;
            end
            else begin
                if (global_var(GVAR_KARMA_SHIELD_OF_HOPE) == 1) then begin
                    Static_Reaction := Static_Reaction - 10;
                end
                else begin
                    if (global_var(GVAR_KARMA_DEFENDER) == 1) then begin
                        Static_Reaction := Static_Reaction - 5;
                    end
                    else begin
                        if (global_var(GVAR_KARMA_WANDERER) == 1) then begin
                            Static_Reaction := Static_Reaction - 0;
                        end
                        else begin
                            if (global_var(GVAR_KARMA_BETRAYER) == 1) then begin
                                Static_Reaction := Static_Reaction + -5;
                            end
                            else begin
                                if (global_var(GVAR_KARMA_SWORD_OF_DESPAIR) == 1) then begin
                                    Static_Reaction := Static_Reaction + -10;
                                end
                                else begin
                                    if (global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE) == 1) then begin
                                        Static_Reaction := Static_Reaction + -15;
                                    end
                                    else begin
                                        Static_Reaction := Static_Reaction + -20;
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        debug_msg("Bad Person Reaction Bonus == " + Static_Reaction);
    end
    else begin
        Static_Reaction := Static_Reaction + reaction_bonus_karma;
        debug_msg("Karma Reaction Bonus == " + Static_Reaction);
        Static_Reaction := Static_Reaction + reaction_bonus_town_rep;
        debug_msg("Town Rep Bonus == " + Static_Reaction);
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
        if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
            tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
        end
        if (tmp_gen_rep >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (tmp_gen_rep >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (tmp_gen_rep >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (tmp_gen_rep >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (global_var(GVAR_KARMA_HOLY_WARRIOR) == 1) then begin
            Static_Reaction := Static_Reaction + 20;
        end
        else begin
            if (global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES) == 1) then begin
                Static_Reaction := Static_Reaction + 15;
            end
            else begin
                if (global_var(GVAR_KARMA_SHIELD_OF_HOPE) == 1) then begin
                    Static_Reaction := Static_Reaction + 10;
                end
                else begin
                    if (global_var(GVAR_KARMA_DEFENDER) == 1) then begin
                        Static_Reaction := Static_Reaction + 5;
                    end
                    else begin
                        if (global_var(GVAR_KARMA_WANDERER) == 1) then begin
                            Static_Reaction := Static_Reaction + 0;
                        end
                        else begin
                            if (global_var(GVAR_KARMA_BETRAYER) == 1) then begin
                                Static_Reaction := Static_Reaction + -5;
                            end
                            else begin
                                if (global_var(GVAR_KARMA_SWORD_OF_DESPAIR) == 1) then begin
                                    Static_Reaction := Static_Reaction + -10;
                                end
                                else begin
                                    if (global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE) == 1) then begin
                                        Static_Reaction := Static_Reaction + -15;
                                    end
                                    else begin
                                        Static_Reaction := Static_Reaction + -20;
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        debug_msg("Good Person Reaction Bonus == " + Static_Reaction);
    end
    if (Slavery_Tolerant == 0) then begin
        if (global_var(GVAR_REPUTATION_SLAVER) == 1) then begin
            Static_Reaction := Static_Reaction + (2 * -25);
        end
    end
    else begin
        if (Slavery_Tolerant == 1) then begin
            if (global_var(GVAR_REPUTATION_SLAVER) == 1) then begin
                Static_Reaction := Static_Reaction + -25;
            end
        end
        else begin
            if (Slavery_Tolerant == 3) then begin
                if (global_var(GVAR_REPUTATION_SLAVER) == 1) then begin
                    Static_Reaction := Static_Reaction - -25;
                end
            end
        end
    end
    debug_msg("Slaver + Aligned Reaction == " + Static_Reaction);
    Static_Reaction := Static_Reaction + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence));
    debug_msg("Presence Reaction == " + Static_Reaction);
    if (global_var(GVAR_CHILDKILLER_REPUTATION) >= 2) then begin
        Static_Reaction := Static_Reaction + -30;
    end
    debug_msg("Childkiller Reaction == " + Static_Reaction);
    if (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality)) then begin
        if (Evil_Critter == 1) then begin
            if (Static_Reaction > 0) then begin
                Static_Reaction := Static_Reaction * -1;
            end
        end
        else begin
            if (Static_Reaction < 0) then begin
                Static_Reaction := Static_Reaction * -1;
            end
        end
    end
    set_local_var(0, local_var(3) + Static_Reaction);
    debug_msg("Initial Reaction == " + local_var(0));
    if ((global_var(GVAR_SAN_FRAN_FLAGS) bwand 1) != 0) then begin
        call Node032();
    end
    else begin
        if ((global_var(GVAR_SAN_FRAN_ELRON) >= 8) and not((global_var(GVAR_SAN_FRAN_FLAGS) bwand 262144) != 0) and not(has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality))) then begin
            call Node033();
        end
        else begin
            if (local_var(4) == 1) then begin
                start_gdialog(756, self_obj, 4, -1, -1);
                gsay_start;
                call Node022();
                gsay_end;
                end_dialogue;
            end
            else begin
                start_gdialog(756, self_obj, 4, -1, -1);
                gsay_start;
                call Node001();
                gsay_end;
                end_dialogue;
            end
        end
    end
    set_local_var(4, 1);
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
        if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
            tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
        end
        if (tmp_gen_rep >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (tmp_gen_rep >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (tmp_gen_rep >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (tmp_gen_rep >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(GVAR_TOWN_REP_SAN_FRANCISCO, global_var(GVAR_TOWN_REP_SAN_FRANCISCO) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(4) == 1) then begin
        display_mstr(101);
    end
    else begin
        display_mstr(102);
    end
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (party_member_obj(obj_pid(source_obj)) != 0) then begin
        set_local_var(5, 2);
        set_global_var(GVAR_SAN_FRAN_FLAGS, global_var(GVAR_SAN_FRAN_FLAGS) bwor 1);
    end
end

procedure map_enter_p_proc
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    Only_Once := 0;
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 167);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_SHI);
    if ((game_time < 0) and (local_var(10) == 0)) then begin
        set_local_var(9, game_time - 1);
        set_local_var(10, 1);
    end
    if (game_time > local_var(9)) then begin
        LVar0 := create_object(128, 5, 0);
        if (obj_is_carrying_obj_pid(self_obj, 96) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 96);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 97) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 97);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 99) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 99);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 223) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 223);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 252) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 252);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 253) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 253);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 254) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 254);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 255) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 255);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 256) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 256);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 257) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 257);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 258) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 258);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 266) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 266);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 267) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 267);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 288) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 288);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 298) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 298);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 302) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 302);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 303) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 303);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 305) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 305);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 306) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 306);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 307) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 307);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 335) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 335);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 336) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 336);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 337) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 337);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 338) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 338);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 339) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 339);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 340) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 340);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 341) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 341);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 356) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 356);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 366) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 366);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 377) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 377);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 414) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 414);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 422) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 422);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 431) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 431);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 432) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 432);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 446) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 446);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 447) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 447);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 448) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 448);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 449) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 449);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 456) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 456);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 468) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 468);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 471) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 471);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 476) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 476);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 479) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 479);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 488) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 488);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 492) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 492);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        if (obj_is_carrying_obj_pid(self_obj, 495) > 0) then begin
            LVar1 := obj_carrying_pid_obj(self_obj, 495);
            rm_obj_from_inven(self_obj, LVar1);
            add_obj_to_inven(LVar0, LVar1);
        end
        global_temp := create_object(128, 0, 0);
        move_obj_inven_to_obj(self_obj, global_temp);
        destroy_object(global_temp);
        restock_amt := random(5, 7);
        if (obj_is_carrying_obj_pid(self_obj, 40) < restock_amt) then begin
            if (100 >= random(1, 100)) then begin
                restock_obj := create_object(40, 0, 0);
                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 40));
            end
        end
        else begin
            if (obj_is_carrying_obj_pid(self_obj, 40) > restock_amt) then begin
                removed_qty := obj_is_carrying_obj_pid(self_obj, 40);
                if ((obj_is_carrying_obj_pid(self_obj, 40) - restock_amt) < removed_qty) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 40) - restock_amt;
                end
                if (removed_qty > 0) then begin
                    restock_obj := obj_carrying_pid_obj(self_obj, 40);
                    if (obj_type(self_obj) == 1) then begin
                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                restock_obj := critter_inven_obj(self_obj, 0);
                                rm_obj_from_inven(self_obj, restock_obj);
                                add_obj_to_inven(self_obj, restock_obj);
                            end
                        end
                        else begin
                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                inven_unwield(self_obj);
                            end
                        end
                    end
                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                    destroy_object(restock_obj);
                end
                restock_obj := 0;
                restock_amt := 0;
            end
            else begin
                restock_obj := 0;
            end
        end
        restock_amt := random(1, 3);
        if (obj_is_carrying_obj_pid(self_obj, 47) < restock_amt) then begin
            if (60 >= random(1, 100)) then begin
                restock_obj := create_object(47, 0, 0);
                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 47));
            end
        end
        else begin
            if (obj_is_carrying_obj_pid(self_obj, 47) > restock_amt) then begin
                removed_qty := obj_is_carrying_obj_pid(self_obj, 47);
                if ((obj_is_carrying_obj_pid(self_obj, 47) - restock_amt) < removed_qty) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 47) - restock_amt;
                end
                if (removed_qty > 0) then begin
                    restock_obj := obj_carrying_pid_obj(self_obj, 47);
                    if (obj_type(self_obj) == 1) then begin
                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                restock_obj := critter_inven_obj(self_obj, 0);
                                rm_obj_from_inven(self_obj, restock_obj);
                                add_obj_to_inven(self_obj, restock_obj);
                            end
                        end
                        else begin
                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                inven_unwield(self_obj);
                            end
                        end
                    end
                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                    destroy_object(restock_obj);
                end
                restock_obj := 0;
                restock_amt := 0;
            end
            else begin
                restock_obj := 0;
            end
        end
        restock_amt := random(1, 3);
        if (obj_is_carrying_obj_pid(self_obj, 48) < restock_amt) then begin
            if (60 >= random(1, 100)) then begin
                restock_obj := create_object(48, 0, 0);
                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 48));
            end
        end
        else begin
            if (obj_is_carrying_obj_pid(self_obj, 48) > restock_amt) then begin
                removed_qty := obj_is_carrying_obj_pid(self_obj, 48);
                if ((obj_is_carrying_obj_pid(self_obj, 48) - restock_amt) < removed_qty) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 48) - restock_amt;
                end
                if (removed_qty > 0) then begin
                    restock_obj := obj_carrying_pid_obj(self_obj, 48);
                    if (obj_type(self_obj) == 1) then begin
                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                restock_obj := critter_inven_obj(self_obj, 0);
                                rm_obj_from_inven(self_obj, restock_obj);
                                add_obj_to_inven(self_obj, restock_obj);
                            end
                        end
                        else begin
                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                inven_unwield(self_obj);
                            end
                        end
                    end
                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                    destroy_object(restock_obj);
                end
                restock_obj := 0;
                restock_amt := 0;
            end
            else begin
                restock_obj := 0;
            end
        end
        restock_amt := random(1, 7);
        if (obj_is_carrying_obj_pid(self_obj, 144) < restock_amt) then begin
            if (50 >= random(1, 100)) then begin
                restock_obj := create_object(144, 0, 0);
                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 144));
            end
        end
        else begin
            if (obj_is_carrying_obj_pid(self_obj, 144) > restock_amt) then begin
                removed_qty := obj_is_carrying_obj_pid(self_obj, 144);
                if ((obj_is_carrying_obj_pid(self_obj, 144) - restock_amt) < removed_qty) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 144) - restock_amt;
                end
                if (removed_qty > 0) then begin
                    restock_obj := obj_carrying_pid_obj(self_obj, 144);
                    if (obj_type(self_obj) == 1) then begin
                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                restock_obj := critter_inven_obj(self_obj, 0);
                                rm_obj_from_inven(self_obj, restock_obj);
                                add_obj_to_inven(self_obj, restock_obj);
                            end
                        end
                        else begin
                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                inven_unwield(self_obj);
                            end
                        end
                    end
                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                    destroy_object(restock_obj);
                end
                restock_obj := 0;
                restock_amt := 0;
            end
            else begin
                restock_obj := 0;
            end
        end
        move_obj_inven_to_obj(LVar0, self_obj);
        destroy_object(LVar0);
        if (local_var(10) == 0) then begin
            set_local_var(9, game_time + (864000 * random(1, 7)));
        end
    end
    return 0;
    LVar0 := 0;
    LVar1 := 0;
end

procedure timed_event_p_proc
begin
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
end

procedure Node001
begin
    Reply(103);
    giq_option(-3, NAME, 104, Node020, NEUTRAL_REACTION);
    if ((get_critter_stat(dude_obj, STAT_max_hp) - get_critter_stat(dude_obj, STAT_current_hp)) or ((critter_state(dude_obj) bwand 4) or (critter_state(dude_obj) bwand 8) or (critter_state(dude_obj) bwand 16) or (critter_state(dude_obj) bwand 32))) then begin
        giq_option(4, NAME, 105, Node002, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 107, NodeBarter, NEUTRAL_REACTION);
    if (global_var(GVAR_KNOW_DOC_HOLIDAY) < 2) then begin
        giq_option(4, NAME, 108, Node004, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_SAN_FRAN_SPLEEN) == 3) then begin
        giq_option(4, NAME, 109, Node2829a, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_IMPLANTS_KNOWN) == 1) then begin
        giq_option(4, NAME, 206, Node034, NEUTRAL_REACTION);
    end
    if ((local_var(6) bwand 1) == 0) then begin
        giq_option(4, NAME, 110, Node023, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_MIRIA_DEAD) > 1) or (global_var(GVAR_DEN_JET_SOURCE) == 0)) then begin
        giq_option(4, NAME, 500, Node100, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_K9_UPGRADE) == 0) and (global_var(GVAR_MAKE_STIMS) == 1) and (global_var(GVAR_MAKE_ROBE) == 1) and (global_var(GVAR_MAKE_LEATHER_JACKET) == 1) and (global_var(GVAR_MAJOR_STIM_STATUS) == 1) and obj_carrying_pid_obj(dude_obj, 525)) then begin
        giq_option(4, NAME, 250, Node042, NEUTRAL_REACTION);
    end
    else begin
        if (global_var(GVAR_K9_UPGRADE) == 1) then begin
            giq_option(4, NAME, 278, Node052, NEUTRAL_REACTION);
        end
        else begin
            if (global_var(GVAR_K9_UPGRADE) == 2) then begin
                giq_option(4, NAME, 279, Node054, NEUTRAL_REACTION);
            end
            else begin
                if (global_var(GVAR_K9_UPGRADE) == 4) then begin
                    giq_option(4, NAME, 281, Node052, NEUTRAL_REACTION);
                end
            end
        end
    end
    giq_option(1, NAME, 111, Node999, NEUTRAL_REACTION);
end

procedure Node002
begin
    Reply(112);
    giq_option(4, NAME, 113, NodeHowMuch, NEUTRAL_REACTION);
    giq_option(4, NAME, 114, Node999, NEUTRAL_REACTION);
end

procedure Node003
begin
end

procedure Node004
begin
    Reply(118);
    if (global_var(GVAR_KNOW_DOC_HOLIDAY)) then begin
        giq_option(4, NAME, 119, Node005, GOOD_REACTION);
    end
    if ((get_critter_stat(dude_obj, STAT_max_hp) - get_critter_stat(dude_obj, STAT_current_hp)) or ((critter_state(dude_obj) bwand 4) or (critter_state(dude_obj) bwand 8) or (critter_state(dude_obj) bwand 16) or (critter_state(dude_obj) bwand 32))) then begin
        giq_option(4, NAME, 120, Node002, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 184, Node001, NEUTRAL_REACTION);
    giq_option(4, NAME, 122, Node999, NEUTRAL_REACTION);
end

procedure Node005
begin
    set_global_var(GVAR_KNOW_DOC_HOLIDAY, 2);
    Reply(123);
    giq_option(4, NAME, 124, Node006, NEUTRAL_REACTION);
end

procedure Node006
begin
    Reply(125);
    giq_option(4, NAME, 126, Node022, NEUTRAL_REACTION);
    giq_option(4, NAME, 127, Node999, NEUTRAL_REACTION);
end

procedure Node007
begin
    Reply(128);
    giq_option(4, NAME, 129, Node2217a, NEUTRAL_REACTION);
    giq_option(4, NAME, 130, Node999, NEUTRAL_REACTION);
end

procedure Node008
begin
    Reply(131);
    giq_option(4, NAME, 132, Node2217b, NEUTRAL_REACTION);
    giq_option(4, NAME, 133, Node999, NEUTRAL_REACTION);
end

procedure Node009
begin
    Reply(134);
    giq_option(4, NAME, 135, Node2217c, NEUTRAL_REACTION);
    giq_option(4, NAME, 136, Node999, NEUTRAL_REACTION);
end

procedure Node010
begin
    Reply(137);
    giq_option(4, NAME, 138, Node2217d, NEUTRAL_REACTION);
    giq_option(4, NAME, 139, Node999, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(140);
    giq_option(4, NAME, 141, Node2217e, NEUTRAL_REACTION);
    giq_option(4, NAME, 142, Node999, NEUTRAL_REACTION);
end

procedure Node012
begin
end

procedure Node013
begin
end

procedure Node014
begin
end

procedure Node015
begin
end

procedure Node016
begin
end

procedure Node017
begin
    Reply(158);
    giq_option(4, NAME, 159, NodeBarter1, NEUTRAL_REACTION);
    giq_option(4, NAME, 160, Node999, NEUTRAL_REACTION);
end

procedure Node018
begin
    Reply(161);
    giq_option(4, NAME, 162, Node999, NEUTRAL_REACTION);
end

procedure Node019
begin
    Reply(163);
    giq_option(4, NAME, 164, NodeBarter1, NEUTRAL_REACTION);
    giq_option(4, NAME, 165, Node999, NEUTRAL_REACTION);
end

procedure Node020
begin
    Reply(166);
    giq_option(-3, NAME, 167, Node021, NEUTRAL_REACTION);
end

procedure Node021
begin
    critter_injure(dude_obj, 4 bwor 8 bwor 16 bwor 32 bwor 8388608);
    critter_heal(dude_obj, get_critter_stat(dude_obj, STAT_max_hp) - get_critter_stat(dude_obj, STAT_current_hp));
    Reply(169);
    giq_option(-3, NAME, 170, Node999, NEUTRAL_REACTION);
end

procedure Node022
begin
    Reply(171);
    if ((get_critter_stat(dude_obj, STAT_current_hp) != get_critter_stat(dude_obj, STAT_max_hp)) or ((critter_state(dude_obj) bwand 4) or (critter_state(dude_obj) bwand 8) or (critter_state(dude_obj) bwand 16) or (critter_state(dude_obj) bwand 32))) then begin
        giq_option(4, NAME, 172, Node002, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 107, NodeBarter, NEUTRAL_REACTION);
    if (global_var(GVAR_KNOW_DOC_HOLIDAY) < 2) then begin
        giq_option(4, NAME, 174, Node004, NEUTRAL_REACTION);
    end
    if ((local_var(6) bwand 1) == 0) then begin
        giq_option(4, NAME, 175, Node023, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_SAN_FRAN_SPLEEN) == 3) then begin
        giq_option(4, NAME, 176, Node2829a, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_SAN_FRAN_SPLEEN) == 4) then begin
        giq_option(4, NAME, 239, Node3031a, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_IMPLANTS_KNOWN) == 1) then begin
        giq_option(4, NAME, 206, Node034, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_MIRIA_DEAD) > 1) or (global_var(GVAR_DEN_JET_SOURCE) == 0)) then begin
        giq_option(4, NAME, 500, Node100, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 177, Node999, NEUTRAL_REACTION);
end

procedure Node023
begin
    Reply(178);
    giq_option(4, NAME, 179, Node025, NEUTRAL_REACTION);
    giq_option(4, NAME, 180, Node024, NEUTRAL_REACTION);
    giq_option(4, NAME, 181, Node022, NEUTRAL_REACTION);
end

procedure Node024
begin
    set_local_var(6, local_var(6) bwor 1);
    Reply(182);
    giq_option(4, NAME, 183, Node025, NEUTRAL_REACTION);
    giq_option(4, NAME, 184, Node022, NEUTRAL_REACTION);
    giq_option(4, NAME, 185, Node999, NEUTRAL_REACTION);
end

procedure Node025
begin
    set_local_var(6, local_var(6) bwor 1);
    Reply(186);
    giq_option(4, NAME, 187, Node026, NEUTRAL_REACTION);
end

procedure Node026
begin
    Reply(188);
    giq_option(4, NAME, 189, Node027, NEUTRAL_REACTION);
end

procedure Node027
begin
    Reply(190);
    giq_option(4, NAME, 191, Node022, NEUTRAL_REACTION);
    giq_option(4, NAME, 192, Node999, NEUTRAL_REACTION);
end

procedure Node028
begin
    set_global_var(GVAR_SAN_FRAN_SPLEEN, 6);
    Reply(193);
    giq_option(4, NAME, 194, Node022, NEUTRAL_REACTION);
    giq_option(4, NAME, 195, Node999, NEUTRAL_REACTION);
end

procedure Node029
begin
    set_global_var(GVAR_SAN_FRAN_SPLEEN, 5);
    Reply(196);
    giq_option(4, NAME, 197, Node3031a, NEUTRAL_REACTION);
    giq_option(4, NAME, 198, Node031, NEUTRAL_REACTION);
end

procedure Node030
begin
    Reply(199);
    giq_option(4, NAME, 200, Node022, NEUTRAL_REACTION);
    giq_option(4, NAME, 201, Node999, NEUTRAL_REACTION);
end

procedure Node031
begin
    set_global_var(GVAR_SAN_FRAN_SPLEEN, 4);
    Reply(202);
    giq_option(4, NAME, 203, Node999, NEUTRAL_REACTION);
end

procedure Node032
begin
    float_msg(self_obj, mstr(204), FLOAT_MSG_NORMAL);
end

procedure Node033
begin
    float_msg(self_obj, mstr(205), FLOAT_MSG_NORMAL);
end

procedure Node034
begin
    if (local_var(8) == 0) then begin
        set_local_var(8, 1);
        Reply(207);
    end
    else begin
        Reply(240);
    end
    giq_option(4, NAME, 208, Node035, NEUTRAL_REACTION);
    if (not(has_trait(TRAIT_PERK, dude_obj, PERK_dermal_armor_perk)) and not(has_trait(TRAIT_PERK, dude_obj, PERK_dermal_enhancement_perk))) then begin
        giq_option(4, NAME, 209, Node036, NEUTRAL_REACTION);
    end
    else begin
        if (not(has_trait(TRAIT_PERK, dude_obj, PERK_dermal_enhancement_perk))) then begin
            giq_option(4, NAME, 210, Node037, NEUTRAL_REACTION);
        end
    end
    if (not(has_trait(TRAIT_PERK, dude_obj, PERK_phoenix_armor_perk)) and not(has_trait(TRAIT_PERK, dude_obj, PERK_phoenix_enhancement_perk))) then begin
        giq_option(4, NAME, 211, Node038, NEUTRAL_REACTION);
    end
    else begin
        if (not(has_trait(TRAIT_PERK, dude_obj, PERK_phoenix_enhancement_perk))) then begin
            giq_option(4, NAME, 212, Node039, NEUTRAL_REACTION);
        end
    end
    giq_option(4, NAME, 213, Node022, NEUTRAL_REACTION);
    giq_option(4, NAME, 214, Node999, NEUTRAL_REACTION);
end

procedure Node035
begin
    Reply(215);
    if (not(has_trait(TRAIT_PERK, dude_obj, PERK_dermal_armor_perk)) and not(has_trait(TRAIT_PERK, dude_obj, PERK_dermal_enhancement_perk))) then begin
        giq_option(4, NAME, 217, Node036, NEUTRAL_REACTION);
    end
    else begin
        if (not(has_trait(TRAIT_PERK, dude_obj, PERK_dermal_enhancement_perk))) then begin
            giq_option(4, NAME, 218, Node037, NEUTRAL_REACTION);
        end
    end
    if (not(has_trait(TRAIT_PERK, dude_obj, PERK_phoenix_armor_perk)) and not(has_trait(TRAIT_PERK, dude_obj, PERK_phoenix_enhancement_perk))) then begin
        giq_option(4, NAME, 219, Node038, NEUTRAL_REACTION);
    end
    else begin
        if (not(has_trait(TRAIT_PERK, dude_obj, PERK_phoenix_enhancement_perk))) then begin
            giq_option(4, NAME, 220, Node039, NEUTRAL_REACTION);
        end
    end
    giq_option(4, NAME, 221, Node022, NEUTRAL_REACTION);
    giq_option(4, NAME, 222, Node999, NEUTRAL_REACTION);
end

procedure Node036
begin
    Reply(223);
    giq_option(4, NAME, 224, NodeDoDermal, NEUTRAL_REACTION);
    giq_option(4, NAME, 225, Node999, NEUTRAL_REACTION);
end

procedure Node037
begin
    Reply(226);
    giq_option(4, NAME, 227, NodeDoDermalUpgrade, NEUTRAL_REACTION);
    giq_option(4, NAME, 228, Node999, NEUTRAL_REACTION);
end

procedure Node038
begin
    Reply(229);
    giq_option(4, NAME, 230, NodeDoPhoenix, NEUTRAL_REACTION);
    giq_option(4, NAME, 231, Node999, NEUTRAL_REACTION);
end

procedure Node039
begin
    Reply(232);
    giq_option(4, NAME, 233, NodeDoPhoenixUprade, NEUTRAL_REACTION);
    giq_option(4, NAME, 234, Node999, NEUTRAL_REACTION);
end

procedure Node040
begin
    Reply(235);
    giq_option(4, NAME, 236, Node999, NEUTRAL_REACTION);
end

procedure Node041
begin
    Reply(237);
    giq_option(4, NAME, 238, Node999, NEUTRAL_REACTION);
end

procedure Node042
begin
    Reply(251);
    giq_option(4, NAME, 252, Node043, NEUTRAL_REACTION);
    giq_option(4, NAME, 225, Node999, NEUTRAL_REACTION);
end

procedure Node043
begin
    Reply(253);
    giq_option(4, NAME, 254, Node044, NEUTRAL_REACTION);
end

procedure Node044
begin
    Reply(255);
    giq_option(4, NAME, 256, Node045, NEUTRAL_REACTION);
end

procedure Node045
begin
    variable LVar0 := 0;
    LVar0 := obj_is_carrying_obj_pid(dude_obj, 525);
    Reply(257);
    if (LVar0 >= 2) then begin
        giq_option(4, NAME, 258, Node046, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 259, Node047, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 260, Node050, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure Node046
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    LVar1 := obj_carrying_pid_obj(dude_obj, 525);
    LVar0 := rm_mult_objs_from_inven(dude_obj, LVar1, 2);
    Reply(261);
    giq_option(4, NAME, 262, Node999, NEUTRAL_REACTION);
    set_global_var(GVAR_K9_UPGRADE, 3);
    set_global_var(GVAR_TOWN_REP_THE_ORDER, game_time);
    return 0;
    LVar0 := 0;
    LVar1 := 0;
end

procedure Node047
begin
    Reply(273);
    giq_option(4, NAME, 274, Node999, NEUTRAL_REACTION);
    set_global_var(GVAR_K9_UPGRADE, 3);
end

procedure Node048
begin
    Reply(265);
    if (item_caps_total(dude_obj) < 2000) then begin
        giq_option(4, NAME, 267, Node049, NEUTRAL_REACTION);
    end
    else begin
        if (item_caps_total(dude_obj) >= 2000) then begin
            giq_option(4, NAME, 268, Node052, NEUTRAL_REACTION);
        end
    end
    giq_option(4, NAME, 266, Node051, NEUTRAL_REACTION);
end

procedure Node049
begin
    Reply(275);
    giq_option(4, NAME, 276, Node999, NEUTRAL_REACTION);
    set_global_var(GVAR_K9_UPGRADE, 1);
end

procedure Node050
begin
    Reply(277);
    giq_option(4, NAME, 275, Node999, NEUTRAL_REACTION);
    set_global_var(GVAR_K9_UPGRADE, 2);
end

procedure Node051
begin
    set_global_var(GVAR_K9_UPGRADE, 4);
    call Node999();
end

procedure Node052
begin
    Reply(269);
    giq_option(4, NAME, 270, Node053, NEUTRAL_REACTION);
    item_caps_adjust(dude_obj, -2000);
end

procedure Node053
begin
    gfade_out(10);
    set_global_var(GVAR_MAJOR_STIM_TIMER, 1);
    set_global_var(GVAR_K9_UPGRADE, 5);
    game_time_advance(6 * (60 * (60 * 10)));
    gfade_in(10);
    Reply(271);
    giq_option(4, NAME, 272, Node999, NEUTRAL_REACTION);
end

procedure Node054
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    LVar1 := obj_carrying_pid_obj(dude_obj, 525);
    LVar0 := rm_mult_objs_from_inven(dude_obj, LVar1, 2);
    Reply(280);
    giq_option(4, NAME, 262, Node999, NEUTRAL_REACTION);
    set_global_var(GVAR_K9_UPGRADE, 3);
    set_global_var(GVAR_TOWN_REP_THE_ORDER, game_time);
    return 0;
    LVar0 := 0;
    LVar1 := 0;
end

procedure NodeBarter
begin
    gdialog_barter;
    call Node001();
end

procedure Node2829a
begin
    if (global_var(GVAR_KNOW_DOC_HOLIDAY) > 1) then begin
        call Node028();
    end
    else begin
        call Node029();
    end
end

procedure NodeHowMuch
begin
    variable LVar0 := 0;
    LVar0 := (get_critter_stat(dude_obj, STAT_current_hp) - get_critter_stat(dude_obj, STAT_max_hp)) / -get_critter_stat(dude_obj, STAT_max_hp) * 100;
    if (critter_state(dude_obj) bwand (4 bwor 8 bwor 16 bwor 32)) then begin
        call Node011();
    end
    else begin
        if (LVar0 >= 90) then begin
            call Node007();
        end
        else begin
            if (LVar0 >= 60) then begin
                call Node008();
            end
            else begin
                if (LVar0 >= 35) then begin
                    call Node009();
                end
                else begin
                    call Node010();
                end
            end
        end
    end
    return 0;
    LVar0 := 0;
end

procedure NodeHealParty
begin
end

procedure Node2217a
begin
    if (item_caps_total(dude_obj) >= 100) then begin
        item_caps_adjust(dude_obj, -100);
        item_caps_adjust(self_obj, 100);
        critter_heal(dude_obj, get_critter_stat(dude_obj, STAT_max_hp) - get_critter_stat(dude_obj, STAT_current_hp));
        call Node022();
    end
    else begin
        call Node017();
    end
end

procedure Node2217b
begin
    if (item_caps_total(dude_obj) >= 200) then begin
        item_caps_adjust(dude_obj, -200);
        item_caps_adjust(self_obj, 200);
        critter_heal(dude_obj, get_critter_stat(dude_obj, STAT_max_hp) - get_critter_stat(dude_obj, STAT_current_hp));
        call Node022();
    end
    else begin
        call Node017();
    end
end

procedure Node2217c
begin
    if (item_caps_total(dude_obj) >= 300) then begin
        item_caps_adjust(dude_obj, -300);
        item_caps_adjust(self_obj, 300);
        critter_heal(dude_obj, get_critter_stat(dude_obj, STAT_max_hp) - get_critter_stat(dude_obj, STAT_current_hp));
        call Node022();
    end
    else begin
        call Node017();
    end
end

procedure Node2217d
begin
    if (item_caps_total(dude_obj) >= 400) then begin
        item_caps_adjust(dude_obj, -400);
        item_caps_adjust(self_obj, 400);
        critter_heal(dude_obj, get_critter_stat(dude_obj, STAT_max_hp) - get_critter_stat(dude_obj, STAT_current_hp));
        call Node022();
    end
    else begin
        call Node017();
    end
end

procedure Node2217e
begin
    if (item_caps_total(dude_obj) >= 600) then begin
        item_caps_adjust(dude_obj, -600);
        item_caps_adjust(self_obj, 600);
        critter_injure(dude_obj, 4 bwor 8 bwor 16 bwor 32 bwor 8388608);
        critter_heal(dude_obj, get_critter_stat(dude_obj, STAT_max_hp) - get_critter_stat(dude_obj, STAT_current_hp));
        call Node022();
    end
    else begin
        call Node017();
    end
end

procedure NodeBarter1
begin
    gdialog_barter;
    call Node001();
end

procedure Node3031a
begin
    if (item_caps_total(dude_obj) >= 1000) then begin
        item_caps_adjust(dude_obj, -1000);
        item_caps_adjust(self_obj, 1000);
        set_global_var(GVAR_SAN_FRAN_SPLEEN, 5);
        call Node030();
    end
    else begin
        call Node031();
    end
end

procedure NodeDoDermal
begin
    variable LVar0 := 0;
    if ((item_caps_total(dude_obj) > 5500) and (obj_carrying_pid_obj(dude_obj, 17) or obj_carrying_pid_obj(dude_obj, 381) or obj_carrying_pid_obj(dude_obj, 239))) then begin
        gfade_out(600);
        item_caps_adjust(dude_obj, -5500);
        if (obj_carrying_pid_obj(dude_obj, 17)) then begin
            LVar0 := obj_carrying_pid_obj(dude_obj, 17);
        end
        else begin
            if (obj_carrying_pid_obj(dude_obj, 381)) then begin
                LVar0 := obj_carrying_pid_obj(dude_obj, 381);
            end
            else begin
                if (obj_carrying_pid_obj(dude_obj, 239)) then begin
                    LVar0 := obj_carrying_pid_obj(dude_obj, 239);
                end
            end
        end
        rm_obj_from_inven(dude_obj, LVar0);
        destroy_object(LVar0);
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_dermal_armor_perk, 1);
        game_time_advance(2 * (24 * (60 * (60 * 10))));
        gfade_in(600);
        call Node041();
    end
    else begin
        call Node040();
    end
    return 0;
    LVar0 := 0;
end

procedure NodeDoDermalUpgrade
begin
    variable LVar0 := 0;
    if ((item_caps_total(dude_obj) > 33000) and (obj_carrying_pid_obj(dude_obj, 17) or obj_carrying_pid_obj(dude_obj, 381) or obj_carrying_pid_obj(dude_obj, 239))) then begin
        gfade_out(600);
        item_caps_adjust(dude_obj, -33000);
        if (obj_carrying_pid_obj(dude_obj, 17)) then begin
            LVar0 := obj_carrying_pid_obj(dude_obj, 17);
        end
        else begin
            if (obj_carrying_pid_obj(dude_obj, 381)) then begin
                LVar0 := obj_carrying_pid_obj(dude_obj, 381);
            end
            else begin
                if (obj_carrying_pid_obj(dude_obj, 239)) then begin
                    LVar0 := obj_carrying_pid_obj(dude_obj, 239);
                end
            end
        end
        rm_obj_from_inven(dude_obj, LVar0);
        destroy_object(LVar0);
        critter_rm_trait(dude_obj, TRAIT_PERK, PERK_dermal_armor_perk, 1);
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_dermal_enhancement_perk, 1);
        game_time_advance(5 * (24 * (60 * (60 * 10))));
        gfade_in(600);
        call Node041();
    end
    else begin
        call Node040();
    end
    return 0;
    LVar0 := 0;
end

procedure NodeDoPhoenix
begin
    variable LVar0 := 0;
    if ((item_caps_total(dude_obj) > 8500) and (obj_carrying_pid_obj(dude_obj, 17) or obj_carrying_pid_obj(dude_obj, 381) or obj_carrying_pid_obj(dude_obj, 239))) then begin
        gfade_out(600);
        item_caps_adjust(dude_obj, -8500);
        if (obj_carrying_pid_obj(dude_obj, 17)) then begin
            LVar0 := obj_carrying_pid_obj(dude_obj, 17);
        end
        else begin
            if (obj_carrying_pid_obj(dude_obj, 381)) then begin
                LVar0 := obj_carrying_pid_obj(dude_obj, 381);
            end
            else begin
                if (obj_carrying_pid_obj(dude_obj, 239)) then begin
                    LVar0 := obj_carrying_pid_obj(dude_obj, 239);
                end
            end
        end
        rm_obj_from_inven(dude_obj, LVar0);
        destroy_object(LVar0);
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_phoenix_armor_perk, 1);
        game_time_advance(3 * (24 * (60 * (60 * 10))));
        gfade_in(600);
        call Node041();
    end
    else begin
        call Node040();
    end
    return 0;
    LVar0 := 0;
end

procedure NodeDoPhoenixUprade
begin
    variable LVar0 := 0;
    if ((item_caps_total(dude_obj) > 49000) and (obj_carrying_pid_obj(dude_obj, 17) or obj_carrying_pid_obj(dude_obj, 381) or obj_carrying_pid_obj(dude_obj, 239))) then begin
        gfade_out(600);
        item_caps_adjust(dude_obj, -49000);
        if (obj_carrying_pid_obj(dude_obj, 17)) then begin
            LVar0 := obj_carrying_pid_obj(dude_obj, 17);
        end
        else begin
            if (obj_carrying_pid_obj(dude_obj, 381)) then begin
                LVar0 := obj_carrying_pid_obj(dude_obj, 381);
            end
            else begin
                if (obj_carrying_pid_obj(dude_obj, 239)) then begin
                    LVar0 := obj_carrying_pid_obj(dude_obj, 239);
                end
            end
        end
        rm_obj_from_inven(dude_obj, LVar0);
        destroy_object(LVar0);
        critter_rm_trait(dude_obj, TRAIT_PERK, PERK_phoenix_armor_perk, 1);
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_phoenix_enhancement_perk, 1);
        game_time_advance(4 * (24 * (60 * (60 * 10))));
        gfade_in(600);
        call Node041();
    end
    else begin
        call Node040();
    end
    return 0;
    LVar0 := 0;
end

procedure Node100
begin
    Reply(501);
    if (global_var(GVAR_MIRIA_DEAD) > 1) then begin
        giq_option(4, NAME, 502, Node125, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_DEN_JET_SOURCE) == 0) then begin
        giq_option(4, NAME, 503, Node150, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 504, Node022, NEUTRAL_REACTION);
end

procedure Node125
begin
    if ((local_var(6) bwand 2) == 0) then begin
        Reply(510);
        giq_option(4, NAME, 511, Node126, NEUTRAL_REACTION);
        if (item_caps_total(dude_obj) >= 100) then begin
            giq_option(4, NAME, 512, Node130, NEUTRAL_REACTION);
        end
        giq_option(4, NAME, 513, Node022, NEUTRAL_REACTION);
    end
    else begin
        Reply(630);
        if (item_caps_total(dude_obj) >= 100) then begin
            giq_option(4, NAME, 631, Node130, NEUTRAL_REACTION);
            giq_option(4, NAME, 632, Node135, NEUTRAL_REACTION);
        end
        giq_option(4, NAME, 513, Node022, NEUTRAL_REACTION);
        giq_option(4, NAME, 633, Node999, NEUTRAL_REACTION);
    end
end

procedure Node126
begin
    Reply(515);
    if (item_caps_total(dude_obj) >= 100) then begin
        giq_option(4, NAME, 512, Node130, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 513, Node022, NEUTRAL_REACTION);
    giq_option(4, NAME, 516, Node999, NEUTRAL_REACTION);
end

procedure Node130
begin
    gfade_out(100);
    if ((critter_inven_obj(dude_obj, 2) != 0) or (critter_inven_obj(dude_obj, 1) != 0)) then begin
        inven_unwield(dude_obj);
    end
    if (critter_inven_obj(dude_obj, 0) != 0) then begin
        if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
            restock_obj := critter_inven_obj(dude_obj, 0);
            rm_obj_from_inven(dude_obj, restock_obj);
            add_obj_to_inven(dude_obj, restock_obj);
        end
    end
    set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - 7);
    set_global_var(GVAR_MIRIA_DEAD, 0);
    set_global_var(GVAR_DAVIN_DEAD, 0);
    set_global_var(GVAR_JOEY_TAGS, 0);
    item_caps_adjust(dude_obj, -100);
    set_local_var(6, local_var(6) bwor 2);
    game_time_advance(18000);
    call Node131();
end

procedure Node131
begin
    gfade_in(100);
    Reply(520);
    giq_option(4, NAME, 521, Node022, NEUTRAL_REACTION);
    giq_option(4, NAME, 522, Node999, NEUTRAL_REACTION);
end

procedure Node135
begin
    gfade_out(100);
    if ((critter_inven_obj(dude_obj, 2) != 0) or (critter_inven_obj(dude_obj, 1) != 0)) then begin
        inven_unwield(dude_obj);
    end
    if (critter_inven_obj(dude_obj, 0) != 0) then begin
        if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
            restock_obj := critter_inven_obj(dude_obj, 0);
            rm_obj_from_inven(dude_obj, restock_obj);
            add_obj_to_inven(dude_obj, restock_obj);
        end
    end
    set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - 7);
    set_global_var(GVAR_MIRIA_DEAD, 0);
    set_global_var(GVAR_DAVIN_DEAD, 0);
    set_global_var(GVAR_JOEY_TAGS, 0);
    if (global_var(GVAR_DEN_JET_SOURCE) == 0) then begin
        set_global_var(GVAR_DEN_JET_SOURCE, 2);
    end
    item_caps_adjust(dude_obj, -100);
    game_time_advance(27000);
    call Node136();
end

procedure Node136
begin
    gfade_in(100);
    Reply(635);
    giq_option(4, NAME, 637, Node022, NEUTRAL_REACTION);
    giq_option(4, NAME, 636, Node999, NEUTRAL_REACTION);
end

procedure Node150
begin
    Reply(600);
    if (item_caps_total(dude_obj) >= 100) then begin
        giq_option(4, NAME, 512, Node160, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 513, Node022, NEUTRAL_REACTION);
    if ((dude_perception > 5) and ((local_var(6) bwand 4) == 0)) then begin
        giq_option(4, NAME, 601, Node151, NEUTRAL_REACTION);
    end
end

procedure Node151
begin
    set_local_var(6, local_var(6) bwor 4);
    Reply(605);
    giq_option(4, NAME, 606, Node998, BAD_REACTION);
    giq_option(4, NAME, 608, Node999, NEUTRAL_REACTION);
    if (item_caps_total(dude_obj) >= 100) then begin
        giq_option(4, NAME, 609, Node160, NEUTRAL_REACTION);
    end
    if (dude_skill(SKILL_SPEECH) > 50) then begin
        if ((party_member_obj(16777352) != 0) or (party_member_obj(16777687) != 0)) then begin
            giq_option(4, NAME, mstr(607) + mstr(610), Node152, BAD_REACTION);
        end
        else begin
            if (party_member_obj(16777558) != 0) then begin
                giq_option(4, NAME, mstr(607) + mstr(611), Node152, BAD_REACTION);
            end
            else begin
                giq_option(4, NAME, 607, Node152, BAD_REACTION);
            end
        end
    end
end

procedure Node152
begin
    Reply(615);
    giq_option(4, NAME, 504, Node022, NEUTRAL_REACTION);
    if (item_caps_total(dude_obj) >= 100) then begin
        giq_option(4, NAME, 616, Node160, NEUTRAL_REACTION);
    end
end

procedure Node160
begin
    gfade_out(100);
    if ((critter_inven_obj(dude_obj, 2) != 0) or (critter_inven_obj(dude_obj, 1) != 0)) then begin
        inven_unwield(dude_obj);
    end
    if (critter_inven_obj(dude_obj, 0) != 0) then begin
        if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
            restock_obj := critter_inven_obj(dude_obj, 0);
            rm_obj_from_inven(dude_obj, restock_obj);
            add_obj_to_inven(dude_obj, restock_obj);
        end
    end
    item_caps_adjust(dude_obj, -100);
    if (dude_gender) then begin
        if (global_var(GVAR_MIRIA_DEAD) > 1) then begin
            set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - 7);
            set_global_var(GVAR_MIRIA_DEAD, 0);
            set_global_var(GVAR_DAVIN_DEAD, 0);
            set_global_var(GVAR_JOEY_TAGS, 0);
            if (global_var(GVAR_DEN_JET_SOURCE) == 0) then begin
                set_global_var(GVAR_DEN_JET_SOURCE, 2);
            end
            game_time_advance(27000);
            call Node161();
        end
        else begin
            set_global_var(GVAR_MIRIA_DEAD, 0);
            set_global_var(GVAR_DAVIN_DEAD, 0);
            set_global_var(GVAR_JOEY_TAGS, 0);
            if (global_var(GVAR_DEN_JET_SOURCE) == 0) then begin
                set_global_var(GVAR_DEN_JET_SOURCE, 2);
            end
            game_time_advance(18000);
            call Node162();
        end
    end
    else begin
        if (global_var(GVAR_DEN_JET_SOURCE) == 0) then begin
            set_global_var(GVAR_DEN_JET_SOURCE, 2);
        end
        game_time_advance(9000);
        call Node162();
    end
end

procedure Node161
begin
    gfade_in(100);
    Reply(635);
    giq_option(4, NAME, 640, Node165, NEUTRAL_REACTION);
    giq_option(4, NAME, 641, Node999, NEUTRAL_REACTION);
end

procedure Node162
begin
    gfade_in(100);
    if (dude_gender) then begin
        Reply(621);
    end
    else begin
        Reply(620);
    end
    giq_option(4, NAME, 622, Node022, NEUTRAL_REACTION);
    giq_option(4, NAME, 623, Node999, NEUTRAL_REACTION);
end

procedure Node165
begin
    Reply(645);
    giq_option(4, NAME, 646, Node999, BAD_REACTION);
    giq_option(4, NAME, 647, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 648, Node999, GOOD_REACTION);
end
