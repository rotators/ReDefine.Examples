variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure look_at_p_proc;
procedure description_p_proc;
procedure talk_p_proc;
procedure Node999;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(SCRIPT_JCDOGS, 50));
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(SCRIPT_JCDOGS, 60));
end

procedure talk_p_proc
begin
    start_gdialog(1321, self_obj, 4, -1, -1);
    gsay_start;
    if (local_var(0) == 1) then begin
        call Node010();
    end
    else begin
        if (local_var(0) == 2) then begin
            call Node011();
        end
        else begin
            call Node001();
        end
    end
    gsay_end;
    end_dialogue;
end

procedure Node999
begin
end

procedure Node001
begin
    gsay_reply(SCRIPT_JCDOGS, 100);
    giq_option(2, SCRIPT_JCDOGS, 110, Node007, NEUTRAL_REACTION);
    giq_option(2, SCRIPT_JCDOGS, 120, Node005, NEUTRAL_REACTION);
    giq_option(2, SCRIPT_JCDOGS, 130, Node006, NEUTRAL_REACTION);
    giq_option(2, SCRIPT_JCDOGS, 140, Node002, NEUTRAL_REACTION);
    giq_option(2, SCRIPT_JCDOGS, 150, Node003, NEUTRAL_REACTION);
end

procedure Node002
begin
    gsay_reply(SCRIPT_JCDOGS, 200);
    giq_option(2, SCRIPT_JCDOGS, 150, Node003, NEUTRAL_REACTION);
end

procedure Node003
begin
    gsay_reply(SCRIPT_JCDOGS, 230);
    giq_option(2, SCRIPT_JCDOGS, 210, Node004, NEUTRAL_REACTION);
end

procedure Node004
begin
    gsay_reply(SCRIPT_JCDOGS, 220);
    giq_option(2, SCRIPT_JCDOGS, 110, Node007, NEUTRAL_REACTION);
    giq_option(2, SCRIPT_JCDOGS, 120, Node005, NEUTRAL_REACTION);
    giq_option(2, SCRIPT_JCDOGS, 130, Node006, NEUTRAL_REACTION);
    giq_option(2, SCRIPT_JCDOGS, 140, Node002, NEUTRAL_REACTION);
    giq_option(2, SCRIPT_JCDOGS, 150, Node003, NEUTRAL_REACTION);
end

procedure Node005
begin
    gsay_reply(SCRIPT_JCDOGS, 240);
    giq_option(2, SCRIPT_JCDOGS, 210, Node004, NEUTRAL_REACTION);
end

procedure Node006
begin
    gsay_reply(SCRIPT_JCDOGS, 250);
    giq_option(2, SCRIPT_JCDOGS, 260, Node999, NEUTRAL_REACTION);
end

procedure Node007
begin
    gsay_reply(SCRIPT_JCDOGS, 300);
    giq_option(2, SCRIPT_JCDOGS, 310, Node008, NEUTRAL_REACTION);
    giq_option(2, SCRIPT_JCDOGS, 320, Node999, NEUTRAL_REACTION);
    giq_option(2, SCRIPT_JCDOGS, 330, Node009, NEUTRAL_REACTION);
end

procedure Node008
begin
    gsay_reply(SCRIPT_JCDOGS, 340);
    giq_option(2, SCRIPT_JCDOGS, 350, Node999, NEUTRAL_REACTION);
end

procedure Node009
begin
    gsay_reply(SCRIPT_JCDOGS, 400);
    set_local_var(0, 1);
    giq_option(2, SCRIPT_JCDOGS, 410, Node999, NEUTRAL_REACTION);
end

procedure Node010
begin
    variable LVar0 := 0;
    if ((obj_is_carrying_obj_pid(dude_obj, 571) >= 1) and (obj_is_carrying_obj_pid(dude_obj, 574) >= 1) and (obj_is_carrying_obj_pid(dude_obj, 575) >= 1) and (obj_is_carrying_obj_pid(dude_obj, 576) >= 1)) then begin
        gsay_reply(SCRIPT_JCDOGS, 500);
        LVar0 := create_object(577, 0, 0);
        add_obj_to_inven(dude_obj, LVar0);
        set_local_var(0, 2);
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 571);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 571);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 571);
                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
        end
        restock_obj := 0;
        restock_amt := 0;
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 574);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 574);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 574);
                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
        end
        restock_obj := 0;
        restock_amt := 0;
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 575);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 575);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 575);
                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
        end
        restock_obj := 0;
        restock_amt := 0;
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 576);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 576);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 576);
                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
        end
        restock_obj := 0;
        restock_amt := 0;
        give_exp_points(700);
        display_msg(message_str(SCRIPT_JCDOGS, 630));
        giq_option(2, SCRIPT_JCDOGS, 520, Node011, NEUTRAL_REACTION);
    end
    else begin
        gsay_reply(SCRIPT_JCDOGS, 500);
        giq_option(2, SCRIPT_JCDOGS, 510, Node999, NEUTRAL_REACTION);
    end
end

procedure Node011
begin
    gsay_reply(SCRIPT_JCDOGS, 600);
    giq_option(2, SCRIPT_JCDOGS, 610, Node012, NEUTRAL_REACTION);
    giq_option(2, SCRIPT_JCDOGS, 620, Node016, NEUTRAL_REACTION);
end

procedure Node012
begin
    gsay_reply(SCRIPT_JCDOGS, 700);
    giq_option(2, SCRIPT_JCDOGS, 690, Node013, NEUTRAL_REACTION);
end

procedure Node013
begin
    gsay_reply(SCRIPT_JCDOGS, 710);
    giq_option(2, SCRIPT_JCDOGS, 690, Node014, NEUTRAL_REACTION);
end

procedure Node014
begin
    gsay_reply(SCRIPT_JCDOGS, 720);
    giq_option(2, SCRIPT_JCDOGS, 690, Node015, NEUTRAL_REACTION);
end

procedure Node015
begin
    gsay_reply(SCRIPT_JCDOGS, 730);
    giq_option(2, SCRIPT_JCDOGS, 900, Node999, NEUTRAL_REACTION);
end

procedure Node016
begin
    gsay_reply(SCRIPT_JCDOGS, 800);
    set_global_var(GVAR_ACWARRIOR_TALKCOUNT, global_var(GVAR_ACWARRIOR_TALKCOUNT) + 1);
    giq_option(2, SCRIPT_JCDOGS, 810, Node999, NEUTRAL_REACTION);
end

procedure Node017
begin
    gsay_reply(SCRIPT_JCDOGS, 810);
    giq_option(2, SCRIPT_JCDOGS, 690, Node018, NEUTRAL_REACTION);
end

procedure Node018
begin
    gsay_reply(SCRIPT_JCDOGS, 820);
    giq_option(2, SCRIPT_JCDOGS, 900, Node999, NEUTRAL_REACTION);
end
