/*******************************************************
*      Some unreferenced imported varables found.      *
*      Because of it it is impossible to specify       *
*      the real names of global variables.             *
*******************************************************/

variable GVar0;
variable GVar1 := 1;
variable GVar2;
variable GVar3;
variable GVar4;
variable GVar5;
variable GVar6 := 50;
variable GVar7 := 2;
variable GVar8;
variable GVar9;
variable GVar10;
variable GVar11;
variable GVar12;
variable GVar13;
variable GVar14;
variable GVar15;
variable GVar16;
variable GVar17;

/* ?import? variable SVar01; */
/* ?import? variable SVar02; */
/* ?import? variable SVar03; */
/* ?import? variable SVar04; */
/* ?import? variable SVar05; */
/* ?import? variable SVar06; */
/* ?import? variable SVar07; */
/* ?import? variable SVar08; */
/* ?import? variable SVar09; */
/* ?import? variable SVar10; */
/* ?import? variable SVar11; */
/* ?import? variable SVar12; */
/* ?import? variable SVar13; */
/* ?import? variable SVar14; */
/* ?import? variable SVar15; */
/* ?import? variable SVar16; */
/* ?import? variable SVar17; */
/* ?import? variable SVar18; */
/* ?import? variable GVar0; */
/* ?import? variable GVar1; */
/* ?import? variable GVar2; */
/* ?import? variable GVar3; */
/* ?import? variable GVar4; */
/* ?import? variable GVar5; */
/* ?import? variable GVar6; */
/* ?import? variable GVar7; */
/* ?import? variable GVar8; */
/* ?import? variable GVar9; */
/* ?import? variable GVar10; */
/* ?import? variable GVar11; */
/* ?import? variable complain; */
/* ?import? variable exit_line; */

procedure start;
procedure talk_p_proc;
procedure look_at_p_proc;
procedure damage_p_proc;
procedure critter_p_proc;
procedure timed_event_p_proc;
procedure destroy_p_proc;
procedure description_p_proc;
procedure do_dialogue;
procedure Node999;
procedure Node000;
procedure Node000a;
procedure Node000b;
procedure Node001;
procedure Node001_1;
procedure Node002;
procedure Node002a;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node007a;
procedure Node008;
procedure Node008_1;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node017a;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node025_1;
procedure Node025a;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node026a;
procedure bakacombat;
procedure Critter_Action;
procedure Start_War;

/* ?import? variable shout_once; */
/* ?import? variable Scouted_Crypts; */
/* ?import? variable broken_gen; */

import variable skippy_talk;

/* ?import? variable know_power; */

import variable know_fools;

/* ?import? variable Know_Crypts; */

import variable Crypt_Pointer;
import variable Fool_Pointer;
import variable Phrax_Pointer;
import variable Rock_Pointer;
import variable Fool_Taunt;
import variable Crypt_Taunt;

/* ?import? variable Fool_Counter; */
/* ?import? variable Crypt_Counter; */

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

/* ?import? variable team_do_once; */
/* ?import? variable ai_do_once; */
/* ?import? variable scouted; */


procedure start
begin
    set_local_var(2, 1);
    Fool_Pointer := self_obj;
    if (local_var(0) == 0) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 135);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_TOUGH_GUARD);
        set_map_var(6, map_var(6) + 1);
        set_local_var(0, 1);
    end
end

procedure talk_p_proc
begin
    if (map_var(7) == 0) then begin
        float_msg(self_obj, mstr(172), FLOAT_MSG_NORMAL);
    end
    else begin
        call do_dialogue();
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (know_fools == 1) then begin
        display_mstr(101);
    end
    else begin
        display_mstr(100);
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        party_remove(self_obj);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 135);
        set_map_var(11, 1);
        attack(dude_obj);
    end
end

procedure critter_p_proc
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    if (map_var(11) == 1) then begin
        if (has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) == 0) then begin
            party_remove(self_obj);
            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 135);
        end
        attack(dude_obj);
        set_map_var(11, 2);
    end
    if ((local_var(2) == 1) and (map_var(11) == 1)) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 135);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_TOUGH_GUARD);
        attack(dude_obj);
    end
    if ((map_var(2) >= 1) and (tile_num(self_obj) != 27504)) then begin
        if (GVar12 == 0) then begin
            GVar12 := 1;
            float_msg(self_obj, message_str(SCRIPT_KLATRAP, random(10300, 1310)), FLOAT_MSG_NEAR_WHITE);
        end
        animate_move_obj_to_tile(self_obj, 27504, 0);
    end
    else begin
        if ((map_var(2) >= 1) and (tile_num(self_obj) == 27504)) then begin
            if (has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) == 0) then begin
                party_remove(self_obj);
            end
            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 135);
            set_obj_visibility(self_obj, 1);
        end
        else begin
            if ((map_var(5) == 2) and (tile_num(self_obj) != 19305) and not(map_var(2) >= 1)) then begin
                if (has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) == 0) then begin
                    party_remove(self_obj);
                end
                critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 135);
                animate_move_obj_to_tile(self_obj, 19305, 0);
            end
        end
    end
    if (map_var(5) == 3) then begin
        attack(Crypt_Pointer);
    end
    Fool_Pointer := self_obj;
    LVar0 := (self_obj == Fool_Pointer) or (self_obj == Crypt_Pointer) or (self_obj == Phrax_Pointer) or (self_obj == Rock_Pointer);
    if (GVar4 and Crypt_Taunt) then begin
        Crypt_Taunt := 0;
        if (random(1, 5) == 1) then begin
            float_msg(self_obj, message_str(SCRIPT_KLATRAP, random(10100, 10113)), FLOAT_MSG_SEQUENTIAL);
        end
    end
    if (GVar5 and Fool_Taunt) then begin
        Fool_Taunt := 0;
        if (random(1, 5) == 1) then begin
            float_msg(self_obj, message_str(SCRIPT_KLATRAP, random(10200, 10218)), FLOAT_MSG_SEQUENTIAL);
        end
    end
    if ((map_var(5) == 1) and (tile_num(self_obj) != 20725)) then begin
        if (global_var(GVAR_GANG_WAR) == 1) then begin
            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 0);
        end
        animate_move_obj_to_tile(self_obj, 20725, 0);
        if (GVar14 == 0) then begin
            add_timer_event(self_obj, game_ticks(20), 1);
            GVar14 := 1;
        end
    end
    else begin
        if ((tile_num(self_obj) == 20725) and (GVar14 == 0)) then begin
            GVar14 := 1;
        end
    end
    return 0;
    LVar0 := 0;
    LVar1 := 0;
end

procedure timed_event_p_proc
begin
    variable LVar0 := 0;
    if (fixed_param == 1) then begin
        Fool_Taunt := 1;
        float_msg(self_obj, message_str(SCRIPT_KLATRAP, random(10100, 10115)), FLOAT_MSG_SEQUENTIAL);
        if (LVar0 == 0) then begin
            add_timer_event(self_obj, 100, 2);
        end
    end
    else begin
        if (fixed_param == 2) then begin
            if (map_var(5) == 1) then begin
                set_map_var(5, 3);
            end
        end
        else begin
            if (fixed_param == 3) then begin
                attack(dude_obj);
            end
        end
    end
    return 0;
    LVar0 := 0;
end

procedure destroy_p_proc
begin
    set_map_var(6, map_var(6) - 1);
    if ((map_var(6) == 0) or (map_var(7) == 0)) then begin
        set_map_var(5, 2);
    end
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_BAD_MONSTER, global_var(GVAR_BAD_MONSTER) + 1);
        if (critter_kill_type(self_obj) == 2) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(GVAR_GANG_2, global_var(GVAR_GANG_2) + -5);
                debug_msg("Added " + -5 + " to Town Rep");
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 5);
        debug_msg("Player gains " + 5 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(GVAR_GANG_2, global_var(GVAR_GANG_2) + 3);
        debug_msg("Added " + 3 + " to Town Rep");
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(101);
end

procedure do_dialogue
begin
    start_gdialog(414, self_obj, 4, -1, -1);
    gsay_start;
    if (map_var(12) == 1) then begin
        call Node000();
    end
    else begin
        if (map_var(13) == 1) then begin
            if (local_var(4) == 0) then begin
                call Node022();
            end
            else begin
                if ((map_var(4) == 2) and (local_var(4) == 1)) then begin
                    call Node026();
                end
            end
        end
        else begin
            if (GVar0 == 0) then begin
                call Node006();
            end
            else begin
                call Node012();
            end
        end
    end
    gsay_end;
    end_dialogue;
end

procedure Node999
begin
end

procedure Node000
begin
    Reply(102);
    giq_option(4, NAME, 103, Node000a, NEUTRAL_REACTION);
    giq_option(4, NAME, 104, Node003, NEUTRAL_REACTION);
    giq_option(4, NAME, 105, Node000b, NEUTRAL_REACTION);
end

procedure Node000a
begin
    if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
        call Node002();
    end
    else begin
        call Node001();
    end
end

procedure Node000b
begin
    add_timer_event(self_obj, game_ticks(20), 2);
end

procedure Node001
begin
    Reply(106);
    giq_option(4, NAME, 164, Node001_1, NEUTRAL_REACTION);
end

procedure Node001_1
begin
    Reply(174);
    giq_option(4, NAME, 163, bakacombat, NEUTRAL_REACTION);
end

procedure Node002
begin
    Reply(107);
    giq_option(4, NAME, 164, Node002a, NEUTRAL_REACTION);
    giq_option(4, NAME, 163, Node999, NEUTRAL_REACTION);
end

procedure Node002a
begin
    Reply(173);
    set_global_var(GVAR_GANG_WAR, 1);
    set_global_var(GVAR_DOG_EMPATHY, 1);
    set_map_var(13, 1);
    set_map_var(12, 0);
    giq_option(4, NAME, 163, Node999, NEUTRAL_REACTION);
end

procedure Node003
begin
    Reply(108);
    giq_option(4, NAME, 109, bakacombat, NEUTRAL_REACTION);
    giq_option(4, NAME, 110, Node005, NEUTRAL_REACTION);
    giq_option(4, NAME, 111, Node004, NEUTRAL_REACTION);
    if (dude_iq >= 0) then begin
        call Node999();
    end
end

procedure Node004
begin
    Reply(112);
    giq_option(4, NAME, 163, bakacombat, NEUTRAL_REACTION);
end

procedure Node005
begin
    Reply(113);
    giq_option(4, NAME, 163, bakacombat, NEUTRAL_REACTION);
end

procedure Node006
begin
    Reply(114);
    giq_option(4, NAME, 115, Node007, NEUTRAL_REACTION);
    giq_option(4, NAME, 116, Node005, NEUTRAL_REACTION);
    giq_option(4, NAME, 117, Node009, NEUTRAL_REACTION);
end

procedure Node007
begin
    Reply(118);
    giq_option(4, NAME, 164, Node007a, NEUTRAL_REACTION);
    giq_option(4, NAME, 171, Node999, NEUTRAL_REACTION);
end

procedure Node007a
begin
    Reply(172);
    giq_option(4, NAME, 119, Node008, NEUTRAL_REACTION);
    giq_option(4, NAME, 171, Node999, NEUTRAL_REACTION);
end

procedure Node008
begin
    Reply(120);
    giq_option(4, NAME, 179, Node008_1, NEUTRAL_REACTION);
    giq_option(4, NAME, 178, Node999, NEUTRAL_REACTION);
end

procedure Node008_1
begin
    Reply(175);
    set_global_var(GVAR_GANG_WAR, 1);
    set_map_var(13, 1);
    giq_option(4, NAME, 163, Node999, NEUTRAL_REACTION);
end

procedure Node009
begin
    Reply(121);
    giq_option(4, NAME, 122, Node010, NEUTRAL_REACTION);
    giq_option(4, NAME, 123, Node011, NEUTRAL_REACTION);
end

procedure Node010
begin
    Reply(124);
    giq_option(4, NAME, 163, bakacombat, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(125);
    giq_option(4, NAME, 163, Node999, NEUTRAL_REACTION);
end

procedure Node012
begin
    Reply(126);
    giq_option(4, NAME, 127, Node013, NEUTRAL_REACTION);
    giq_option(4, NAME, 128, Node017, NEUTRAL_REACTION);
    giq_option(4, NAME, 168, Node999, NEUTRAL_REACTION);
end

procedure Node013
begin
    Reply(129);
    giq_option(4, NAME, 130, Node014, NEUTRAL_REACTION);
    giq_option(4, NAME, 131, Node015, NEUTRAL_REACTION);
    giq_option(4, NAME, 132, Node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 170, Node999, NEUTRAL_REACTION);
end

procedure Node014
begin
    Reply(133);
    set_map_var(13, 1);
    giq_option(4, NAME, 163, Node999, NEUTRAL_REACTION);
end

procedure Node015
begin
    Reply(134);
    giq_option(4, NAME, 163, bakacombat, NEUTRAL_REACTION);
end

procedure Node016
begin
    Reply(135);
    skippy_talk := 1;
    giq_option(4, NAME, 163, Node999, NEUTRAL_REACTION);
end

procedure Node017
begin
    Reply(136);
    giq_option(4, NAME, 164, Node017a, NEUTRAL_REACTION);
end

procedure Node017a
begin
    Reply(176);
    giq_option(4, NAME, 137, Node018, NEUTRAL_REACTION);
    giq_option(4, NAME, 138, Node999, NEUTRAL_REACTION);
end

procedure Node018
begin
    Reply(139);
    giq_option(4, NAME, 140, Node019, NEUTRAL_REACTION);
    giq_option(4, NAME, 141, Node999, NEUTRAL_REACTION);
end

procedure Node019
begin
    Reply(142);
    giq_option(4, NAME, 143, Node020, NEUTRAL_REACTION);
    giq_option(4, NAME, 144, Node021, NEUTRAL_REACTION);
end

procedure Node020
begin
    Reply(145);
    set_map_var(13, 1);
    giq_option(4, NAME, 163, Node999, NEUTRAL_REACTION);
end

procedure Node021
begin
    Reply(146);
    giq_option(4, NAME, 163, bakacombat, NEUTRAL_REACTION);
end

procedure Node022
begin
    set_local_var(4, 1);
    Reply(147);
    giq_option(4, NAME, 148, Node023, NEUTRAL_REACTION);
    giq_option(4, NAME, 149, Node024, NEUTRAL_REACTION);
    giq_option(4, NAME, 150, Node029, NEUTRAL_REACTION);
end

procedure Node023
begin
    Reply(151);
    giq_option(4, NAME, 152, Node024, NEUTRAL_REACTION);
    giq_option(4, NAME, 163, Node999, NEUTRAL_REACTION);
end

procedure Node024
begin
    Reply(153);
    giq_option(4, NAME, 154, Node025, NEUTRAL_REACTION);
    giq_option(4, NAME, 163, Node999, NEUTRAL_REACTION);
end

procedure Node025
begin
    Reply(155);
    giq_option(4, NAME, 164, Node025_1, NEUTRAL_REACTION);
end

procedure Node025_1
begin
    Reply(177);
    giq_option(4, NAME, 156, Node025a, NEUTRAL_REACTION);
end

procedure Node025a
begin
    call Node999();
end

procedure Node026
begin
    Reply(157);
    giq_option(4, NAME, 158, Node026a, NEUTRAL_REACTION);
    giq_option(4, NAME, 159, Node027, NEUTRAL_REACTION);
end

procedure Node027
begin
    Reply(160);
    giq_option(4, NAME, 163, Node999, NEUTRAL_REACTION);
end

procedure Node028
begin
    Reply(161);
    set_map_var(5, 1);
    giq_option(4, NAME, 163, Node999, NEUTRAL_REACTION);
end

procedure Node029
begin
    Reply(162);
    giq_option(4, NAME, 163, Node999, NEUTRAL_REACTION);
end

procedure Node030
begin
    Reply(169);
    giq_option(4, NAME, 163, Node999, NEUTRAL_REACTION);
end

procedure Node026a
begin
    if (map_var(4) == 2) then begin
        call Node028();
    end
    else begin
        call Node030();
    end
end

procedure bakacombat
begin
    add_timer_event(self_obj, 15, 3);
end

procedure Critter_Action
begin
end

procedure Start_War
begin
    if (fixed_param == 1) then begin
        Fool_Taunt := 1;
        float_msg(self_obj, message_str(SCRIPT_SCRAPT, random(10100, 10115)), FLOAT_MSG_SEQUENTIAL);
        add_timer_event(self_obj, 200, 2);
    end
    else begin
        if (fixed_param == 2) then begin
            attack(Crypt_Pointer);
        end
    end
end

procedure get_reaction
begin
    if (not(GVar8)) then begin
        GVar8 := 1;
        GVar6 := GVar6 + ((dude_charisma - 5) * 5);
        if (GVar9) then begin
            GVar6 := GVar6 - map_var(8);
        end
        else begin
            GVar6 := GVar6 + map_var(8);
        end
        if (global_var(GVAR_CHILDKILLER_REPUTATION) > 2) then begin
            GVar6 := GVar6 - 30;
        end
        if ((global_var(GVAR_BAD_MONSTER) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) then begin
            GVar6 := GVar6 + 20;
        end
        if ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1)) then begin
            GVar6 := GVar6 - 20;
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (GVar6 < 24) then begin
        GVar7 := 1;
    end
    else begin
        if (GVar6 < 74) then begin
            GVar7 := 2;
        end
        else begin
            GVar7 := 3;
        end
    end
end

procedure LevelToReact
begin
    if (GVar7 == 1) then begin
        GVar6 := random(1, 24);
    end
    else begin
        if (GVar7 == 2) then begin
            GVar6 := random(25, 74);
        end
        else begin
            GVar6 := random(75, 100);
        end
    end
end

procedure UpReact
begin
    GVar6 := GVar6 + 10;
    call ReactToLevel();
end

procedure DownReact
begin
    GVar6 := GVar6 - 10;
    call ReactToLevel();
end

procedure BottomReact
begin
    GVar7 := 1;
    GVar6 := 1;
end

procedure TopReact
begin
    GVar6 := 100;
    GVar7 := 3;
end

procedure BigUpReact
begin
    GVar6 := GVar6 + 25;
    call ReactToLevel();
end

procedure BigDownReact
begin
    GVar6 := GVar6 - 25;
    call ReactToLevel();
end

procedure UpReactLevel
begin
    GVar7 := GVar7 + 1;
    if (GVar7 > 3) then begin
        GVar7 := 3;
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    GVar7 := GVar7 - 1;
    if (GVar7 < 1) then begin
        GVar7 := 1;
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    variable LVar0 := 0;
    LVar0 := random(1, 6);
    if (LVar0 == 1) then begin
        GVar13 := "Thanks, bye.";
    end
    if (LVar0 == 2) then begin
        GVar13 := "Okay, thanks.";
    end
    if (LVar0 == 3) then begin
        GVar13 := "Hmm. Bye.";
    end
    if (LVar0 == 4) then begin
        GVar13 := "See ya.";
    end
    if (LVar0 == 5) then begin
        GVar13 := "Thanks.";
    end
    if (LVar0 == 6) then begin
        GVar13 := "Okay, bye.";
    end
    return 0;
    LVar0 := 0;
end
