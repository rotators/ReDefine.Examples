variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;
procedure old_pickup_p_proc;
procedure pickup_p_proc;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure critter_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure combat_p_proc;
procedure combat_is_starting_p_proc;
procedure Node998;
procedure Node999;
procedure Node001;
procedure doSequence;

variable Only_Once;
variable guard1;
variable guard2;
variable farmer;
variable wife;
variable child;
variable lastDudePos;
variable lastDudeRot;
variable sequence;
variable animated;

procedure timed_event_p_proc;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure old_pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (3 == 1) then begin
            attack(source_obj);
        end
        else begin
            if (3 == 2) then begin
                float_msg(self_obj, g_mstr(random(3325, 3329)), FLOAT_MSG_NORMAL);
                if (7 > -1) then begin
                    if (local_var(7) >= 1) then begin
                        attack(source_obj);
                    end
                    set_local_var(7, local_var(7) + 1);
                end
            end
            else begin
                if (3 == 3) then begin
                    float_msg(self_obj, g_mstr(random(3050, 3064)), FLOAT_MSG_NORMAL);
                    if (7 > -1) then begin
                        if (local_var(7) >= 1) then begin
                            attack(source_obj);
                        end
                        set_local_var(7, local_var(7) + 1);
                    end
                end
                else begin
                    if (3 == 4) then begin
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(source_obj), tile_num(self_obj)), random(8, 14)), 1);
                    end
                end
            end
        end
    end
    if (-1 == 1) then begin
        call old_pickup_p_proc();
    end
end

procedure start
begin
end

procedure critter_p_proc
begin
    if ((local_var(5) != 0) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        if (critter_is_fleeing(self_obj)) then begin
            if (anim_busy(self_obj) == 0) then begin
                if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                    if (anim_busy(self_obj) == 0) then begin
                        global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                        global_temp := (global_temp + 1) % 6;
                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                            debug_msg("flee loop: rot == " + global_temp);
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                        end
                    end
                end
            end
        end
        else begin
            attack(dude_obj);
        end
    end
end

procedure talk_p_proc
begin
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (critter_kill_type(self_obj) == 2) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - -15);
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 0) then begin
        display_mstr(100);
    end
    else begin
        display_mstr(101);
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(102);
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (party_member_obj(obj_pid(source_obj)) != 0) then begin
        set_local_var(6, 1);
    end
end

procedure map_enter_p_proc
begin
    Only_Once := 0;
    set_global_var(GVAR_VIGNETTE_SEQUENCE, global_var(GVAR_VIGNETTE_SEQUENCE) bwor 2);
    set_global_var(GVAR_VIGNETTE_SEQUENCE, global_var(GVAR_VIGNETTE_SEQUENCE) bwor 131072);
    guard1 := tile_contains_pid_obj(23132, 0, 16777331);
    guard2 := tile_contains_pid_obj(24534, 0, 16777331);
    farmer := tile_contains_pid_obj(23925, 0, 16777436);
    wife := tile_contains_pid_obj(23723, 0, 16777437);
    child := tile_contains_pid_obj(23523, 0, 16777269);
    if (not(is_loading_game)) then begin
        display_mstr(109);
        sequence := 1;
        call doSequence();
    end
end

procedure combat_p_proc
begin
    terminate_combat;
end

procedure combat_is_starting_p_proc
begin
    terminate_combat;
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
end

procedure Node001
begin
end

procedure doSequence
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    variable LVar3 := 0;
    variable LVar4 := 0;
    if (sequence == 1) then begin
        if (animated == 0) then begin
            animated := 1;
            game_ui_disable;
            reg_anim_func(2, dude_obj);
            reg_anim_func(1, 1);
            animate_move_obj_to_tile(dude_obj, 25123, 1);
            reg_anim_func(3, 0);
        end
        else begin
            if (not(anim_busy(dude_obj))) then begin
                sequence := sequence + 1;
                anim(dude_obj, 1000, rotation_to_tile(dude_tile, tile_num(self_obj)));
            end
            else begin
                debug_msg("ECBDYGRD: tile_set_center(CENTER_TILE): " + metarule3(108, 19121, 0, 0));
            end
        end
        if (LVar4 == 0) then begin
            metarule3(108, tile_num(self_obj), 0, 0);
            LVar4 := 1;
        end
        add_timer_event(self_obj, 2, 1);
    end
    else begin
        if (sequence == 2) then begin
            float_msg(self_obj, mstr(103), FLOAT_MSG_NORMAL);
            sequence := sequence + 1;
            add_timer_event(self_obj, game_ticks(3), 1);
        end
        else begin
            if (sequence == 3) then begin
                float_msg(farmer, mstr(104), FLOAT_MSG_GREEN);
                sequence := sequence + 1;
                add_timer_event(self_obj, game_ticks(3), 1);
            end
            else begin
                if (sequence == 4) then begin
                    float_msg(self_obj, mstr(105), FLOAT_MSG_RED);
                    sequence := sequence + 1;
                    add_timer_event(self_obj, game_ticks(3), 1);
                end
                else begin
                    if (sequence == 5) then begin
                        float_msg(farmer, mstr(106), FLOAT_MSG_YELLOW);
                        sequence := sequence + 1;
                        add_timer_event(self_obj, game_ticks(3), 1);
                    end
                    else begin
                        if (sequence == 6) then begin
                            float_msg(self_obj, mstr(107), FLOAT_MSG_RED);
                            sequence := sequence + 1;
                            add_timer_event(self_obj, game_ticks(1), 1);
                        end
                        else begin
                            if (sequence == 7) then begin
                                LVar0 := sfx_build_weapon_name(1, obj_carrying_pid_obj(guard1, 395), 0, self_obj);
                                reg_anim_func(2, guard1);
                                reg_anim_func(1, 1);
                                reg_anim_animate(guard1, 46, -1);
                                reg_anim_play_sfx(guard1, LVar0, 0);
                                reg_anim_func(3, 0);
                                reg_anim_func(2, guard2);
                                reg_anim_func(1, 1);
                                reg_anim_animate(guard2, 46, -1);
                                reg_anim_play_sfx(guard2, LVar0, 0);
                                reg_anim_func(3, 0);
                                LVar1 := sfx_build_char_name(farmer, 25, 3);
                                LVar2 := sfx_build_char_name(wife, 25, 3);
                                LVar3 := sfx_build_char_name(child, 25, 3);
                                reg_anim_func(2, farmer);
                                reg_anim_func(1, 1);
                                reg_anim_animate(farmer, 25, -1);
                                reg_anim_play_sfx(farmer, LVar1, 0);
                                reg_anim_func(3, 0);
                                reg_anim_func(2, wife);
                                reg_anim_func(1, 1);
                                reg_anim_animate(wife, 25, -1);
                                reg_anim_play_sfx(wife, LVar2, 0);
                                reg_anim_func(3, 0);
                                reg_anim_func(2, child);
                                reg_anim_func(1, 1);
                                reg_anim_animate(child, 25, -1);
                                reg_anim_play_sfx(child, LVar3, 0);
                                reg_anim_func(3, 0);
                                sequence := sequence + 1;
                                add_timer_event(self_obj, game_ticks(3), 1);
                            end
                            else begin
                                if (sequence == 8) then begin
                                    kill_critter(farmer, 53);
                                    kill_critter(wife, 53);
                                    kill_critter(child, 53);
                                    reg_anim_func(2, self_obj);
                                    reg_anim_func(1, 1);
                                    anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
                                    reg_anim_func(3, 0);
                                    float_msg(self_obj, mstr(108), FLOAT_MSG_NORMAL);
                                    sequence := sequence + 1;
                                    add_timer_event(self_obj, game_ticks(3), 1);
                                end
                                else begin
                                    if (sequence == 9) then begin
                                        reg_anim_func(2, self_obj);
                                        reg_anim_func(1, 1);
                                        animate_move_obj_to_tile(self_obj, 16943, 0);
                                        reg_anim_func(3, 0);
                                        sequence := sequence + 1;
                                        add_timer_event(self_obj, game_ticks(2), 1);
                                        display_mstr(110);
                                    end
                                    else begin
                                        if (sequence == 10) then begin
                                            reg_anim_func(2, guard1);
                                            reg_anim_func(1, 1);
                                            animate_move_obj_to_tile(guard1, 16943, 0);
                                            reg_anim_func(3, 0);
                                            reg_anim_func(2, guard2);
                                            reg_anim_func(1, 1);
                                            animate_move_obj_to_tile(guard2, 16943, 0);
                                            reg_anim_func(3, 0);
                                            sequence := sequence + 1;
                                            add_timer_event(self_obj, game_ticks(4), 1);
                                        end
                                        else begin
                                            if (sequence == 11) then begin
                                                if (tile_num(self_obj) == 16943) then begin
                                                    set_obj_visibility(self_obj, 1);
                                                    destroy_object(guard1);
                                                    destroy_object(guard2);
                                                    sequence := sequence + 1;
                                                end
                                                debug_msg("Sequence: " + sequence + " Next == 12");
                                                add_timer_event(self_obj, game_ticks(1), 1);
                                            end
                                            else begin
                                                if (sequence == 12) then begin
                                                    game_ui_enable;
                                                    display_mstr(111);
                                                    destroy_object(self_obj);
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    return 0;
    LVar0 := 0;
    LVar1 := 0;
    LVar2 := 0;
    LVar3 := 0;
    LVar4 := 0;
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        call doSequence();
    end
end
