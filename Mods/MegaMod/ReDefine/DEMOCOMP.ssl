procedure start;
procedure Node999;
procedure Node000;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;

import variable broken_gen;

variable test;
variable WORKING;
variable used_before;


procedure start
begin
    if ((script_action == talk_proc) and (broken_gen != 1)) then begin
        start_gdialog(1490, self_obj, 4, -1, -1);
        gsay_start;
        call Node001();
        gsay_end;
        end_dialogue;
    end
    else begin
        if ((script_action == use_proc) and (broken_gen != 1)) then begin
            script_overrides;
            if (WORKING == 1) then begin
                dialogue_system_enter;
            end
            else begin
                call Node000();
            end
        end
        else begin
            if ((script_action == look_at_proc) or (script_action == description_proc)) then begin
                script_overrides;
                display_mstr(100);
            end
        end
    end
end

procedure Node999
begin
end

procedure Node000
begin
    variable LVar0 := 0;
    LVar0 := random(20, 40);
    if (dude_skill(SKILL_SCIENCE) > dude_skill(SKILL_REPAIR)) then begin
        test := roll_vs_skill(dude_obj, 12, 0);
    end
    else begin
        test := roll_vs_skill(dude_obj, 13, 0);
    end
    if (1) then begin
        display_mstr(101);
        WORKING := 1;
    end
    else begin
        display_mstr(103);
        if (is_critical(test)) then begin
            critter_dmg(dude_obj, LVar0, 6 bwor 256);
            display_mstr(104);
        end
    end
    LVar0 := 0;
end

procedure Node001
begin
    Reply(105);
    giq_option(4, NAME, 106, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 107, Node999, NEUTRAL_REACTION);
end

procedure Node002
begin
    Reply(108);
    giq_option(4, NAME, 109, Node003, NEUTRAL_REACTION);
    giq_option(4, NAME, 110, Node999, NEUTRAL_REACTION);
end

procedure Node003
begin
    Reply(111);
    giq_option(4, NAME, 112, Node004, NEUTRAL_REACTION);
    giq_option(4, NAME, 113, Node005, NEUTRAL_REACTION);
    giq_option(4, NAME, 114, Node999, NEUTRAL_REACTION);
end

procedure Node004
begin
    Reply(115);
    giq_option(4, NAME, 116, Node003, NEUTRAL_REACTION);
    giq_option(4, NAME, 117, Node003, NEUTRAL_REACTION);
end

procedure Node005
begin
    if (not(used_before)) then begin
        give_exp_points(100);
        display_mstr(119);
        used_before := 1;
        game_time_advance(4 * (60 * (10 * 10)));
    end
    float_msg(dude_obj, mstr(118), FLOAT_MSG_NORMAL);
end
