variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure critter_p_proc;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node004a;
procedure Node003a;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node008a;
procedure Node009;
procedure Node999;
procedure Node998;
procedure timed_event_p_proc;


procedure start
begin
end

procedure critter_p_proc
begin
    if (local_var(7) == 0) then begin
        if (tile_distance_objs(self_obj, dude_obj) < 6) then begin
            set_local_var(7, local_var(7) + 1);
            float_msg(self_obj, mstr(105), FLOAT_MSG_NORMAL);
        end
    end
    if (global_var(GVAR_ROOM_OPEN) == 4) then begin
        move_to(self_obj, 11532, 1);
        anim(self_obj, 1000, 3);
    end
end

procedure use_p_proc
begin
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 0) then begin
        display_mstr(100);
    end
    else begin
        display_mstr(101);
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(102);
end

procedure use_skill_on_p_proc
begin
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
end

procedure map_enter_p_proc
begin
end

procedure map_update_p_proc
begin
end

procedure talk_p_proc
begin
    if (elevation(self_obj) == 2) then begin
        if (local_var(8) == 0) then begin
            start_gdialog(1574, self_obj, 4, -1, -1);
            gsay_start;
            call Node001();
            gsay_end;
            end_dialogue;
        end
        else begin
            if (local_var(8) == 1) then begin
                start_gdialog(1574, self_obj, 4, -1, -1);
                gsay_start;
                call Node005();
                gsay_end;
                end_dialogue;
            end
            else begin
                float_msg(self_obj, mstr(106), FLOAT_MSG_NORMAL);
            end
        end
    end
    else begin
        if (elevation(self_obj) == 1) then begin
            start_gdialog(1574, self_obj, 4, -1, -1);
            gsay_start;
            call Node006();
            gsay_end;
            end_dialogue;
        end
    end
end

procedure Node001
begin
    Reply(200);
    giq_option(4, NAME, 201, Node002, NEUTRAL_REACTION);
end

procedure Node002
begin
    Reply(202);
    giq_option(4, NAME, 203, Node003, NEUTRAL_REACTION);
end

procedure Node003
begin
    Reply(204);
    if (obj_is_carrying_obj_pid(dude_obj, 51) >= 4) then begin
        giq_option(4, NAME, 205, Node004, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 206, Node003a, NEUTRAL_REACTION);
end

procedure Node004
begin
    Reply(207);
    giq_option(4, NAME, 208, Node004a, NEUTRAL_REACTION);
end

procedure Node005
begin
    Reply(209);
    if (obj_is_carrying_obj_pid(dude_obj, 51) >= 4) then begin
        giq_option(4, NAME, 210, Node004, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 211, Node999, NEUTRAL_REACTION);
end

procedure Node004a
begin
    set_local_var(8, 3);
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 51);
    if (4 < removed_qty) then begin
        removed_qty := 4;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 51);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 51);
            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        destroy_object(restock_obj);
    end
    restock_obj := 0;
    restock_amt := 0;
    set_global_var(GVAR_ROOM_OPEN, 3);
    set_global_var(GVAR_COLD_HEARTS_KILLED, game_time);
end

procedure Node003a
begin
    set_local_var(8, local_var(8) + 1);
end

procedure Node006
begin
    Reply(212);
    giq_option(4, NAME, 213, Node007, NEUTRAL_REACTION);
end

procedure Node007
begin
    Reply(214);
    giq_option(4, NAME, 215, Node008, NEUTRAL_REACTION);
end

procedure Node008
begin
    Reply(216);
    giq_option(4, NAME, 218, Node009, NEUTRAL_REACTION);
    giq_option(4, NAME, 217, Node008a, NEUTRAL_REACTION);
end

procedure Node008a
begin
    set_global_var(GVAR_ROOM_OPEN, 5);
    move_to(self_obj, 11532, 0);
end

procedure Node009
begin
    Reply(219);
    giq_option(4, NAME, 208, Node008a, NEUTRAL_REACTION);
end

procedure Node999
begin
    debug_msg("LVAR_Herebefore == " + local_var(4));
    if (local_var(4) == 0) then begin
        set_local_var(4, 1);
    end
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure timed_event_p_proc
begin
end
