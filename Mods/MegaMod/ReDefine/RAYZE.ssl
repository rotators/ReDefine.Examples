/*******************************************************
*      Some unreferenced imported varables found.      *
*      Because of it it is impossible to specify       *
*      the real names of global variables.             *
*******************************************************/

variable GVar0;
variable GVar1;
variable GVar2;
variable GVar3;
variable GVar4 := 1;
variable GVar5;
variable GVar6 := 1;
variable GVar7;
variable GVar8;
variable GVar9;
variable GVar10;
variable GVar11;

/* ?import? variable SVar01; */
/* ?import? variable SVar02; */
/* ?import? variable SVar03; */
/* ?import? variable SVar04; */
/* ?import? variable SVar05; */
/* ?import? variable SVar06; */
/* ?import? variable SVar07; */
/* ?import? variable SVar08; */
/* ?import? variable SVar09; */
/* ?import? variable SVar10; */
/* ?import? variable SVar11; */
/* ?import? variable SVar12; */

procedure start;
procedure talk_p_proc;
procedure damage_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure critter_p_proc;
procedure timed_event_p_proc;
procedure destroy_p_proc;
procedure node999;
procedure Node000;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node005a;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node010a;
procedure Node010b;
procedure Node011;
procedure Node012;
procedure Node012a;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Combat;
procedure Critter_Action;
procedure Start_War;

/* ?import? variable complain; */
/* ?import? variable shout_once; */
/* ?import? variable Herebefore; */
/* ?import? variable Hostile; */
/* ?import? variable Only_Once; */
/* ?import? variable scouted; */
/* ?import? variable Crypt_Liar; */
/* ?import? variable Is_Fool; */

import variable Rock_Invite;
import variable Crypt_Pointer;
import variable Fool_Pointer;
import variable Phrax_Pointer;
import variable Rock_Pointer;

/* ?import? variable my_tile; */
/* ?import? variable knowstart; */

import variable Fool_Taunt;
import variable Crypt_Taunt;

/* ?import? variable ai_do_once; */
/* ?import? variable This_Once; */
/* ?import? variable team_do_once; */


procedure start
begin
    set_local_var(2, 2);
    Crypt_Pointer := self_obj;
    if (local_var(0) == 0) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 136);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_TOUGH_GUARD);
        set_map_var(7, map_var(7) + 1);
        set_local_var(0, 1);
    end
end

procedure talk_p_proc
begin
    if (map_var(13)) then begin
        call Node000();
    end
    else begin
        if (GVar2 and not(map_var(12))) then begin
            call Node009();
        end
        else begin
            if (map_var(6) == 0) then begin
                call Node018();
            end
            else begin
                if (map_var(5)) then begin
                    call Node019();
                end
                else begin
                    start_gdialog(1503, self_obj, 4, -1, -1);
                    gsay_start;
                    if (map_var(12)) then begin
                        call Node010();
                    end
                    else begin
                        call Node001();
                    end
                    gsay_end;
                    end_dialogue;
                end
            end
        end
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        party_remove(self_obj);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 136);
        set_map_var(10, 1);
        attack(dude_obj);
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure critter_p_proc
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    if (local_var(6) == 0) then begin
        if (has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) == 0) then begin
            party_remove(self_obj);
        end
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 136);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_TOUGH_GUARD);
    end
    if (map_var(10) == 1) then begin
        if (has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) == 0) then begin
            party_remove(self_obj);
        end
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 136);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_TOUGH_GUARD);
        attack(dude_obj);
    end
    if (map_var(5) == 3) then begin
        attack(Fool_Pointer);
    end
    Crypt_Pointer := self_obj;
    LVar0 := (self_obj == Fool_Pointer) or (self_obj == Crypt_Pointer) or (self_obj == Phrax_Pointer) or (self_obj == Rock_Pointer);
    if (Fool_Taunt) then begin
        Fool_Taunt := 0;
        if (random(1, 5) == 1) then begin
            float_msg(self_obj, message_str(SCRIPT_KLATRAP, random(10200, 10218)), FLOAT_MSG_SEQUENTIAL);
        end
    end
    else begin
        if ((map_var(5) == 2) and not(map_var(2) >= 1)) then begin
            animate_move_obj_to_tile(self_obj, local_var(1), 0);
        end
        else begin
            if (GVar3) then begin
                GVar3 := 0;
                attack(dude_obj);
            end
            else begin
                if (not(LVar0)) then begin
                    if (random(0, 21) == 1) then begin
                        LVar1 := tile_num_in_direction(tile_num(self_obj), random(0, 5), 2);
                        animate_move_obj_to_tile(self_obj, LVar1, 0);
                    end
                end
            end
        end
    end
    if ((map_var(5) == 1) and (tile_num(self_obj) != 20725)) then begin
        if (global_var(GVAR_DOG_EMPATHY) == 1) then begin
            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 0);
        end
        animate_move_obj_to_tile(self_obj, 20725, 0);
        if (GVar1 == 0) then begin
            add_timer_event(self_obj, game_ticks(20), 1);
            GVar1 := 1;
        end
    end
    else begin
        if ((tile_num(self_obj) == 20725) and (GVar1 == 0)) then begin
            GVar1 := 1;
        end
        else begin
            if ((map_var(2) >= 1) and (tile_num(self_obj) != 27504)) then begin
                if (GVar0 == 0) then begin
                    GVar0 := 1;
                    float_msg(self_obj, message_str(SCRIPT_KLATRAP, random(10300, 1310)), FLOAT_MSG_NEAR_WHITE);
                end
                animate_move_obj_to_tile(self_obj, 27504, 0);
            end
            else begin
                if ((map_var(2) >= 1) and (tile_num(self_obj) == 27504)) then begin
                    if (has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) == 0) then begin
                        party_remove(self_obj);
                    end
                    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 136);
                    set_obj_visibility(self_obj, 1);
                end
            end
        end
    end
    return 0;
    LVar0 := 0;
    LVar1 := 0;
end

procedure timed_event_p_proc
begin
    variable LVar0 := 0;
    if (fixed_param == 1) then begin
        Crypt_Taunt := 1;
        float_msg(self_obj, message_str(SCRIPT_KLATRAP, random(10200, 10218)), FLOAT_MSG_SEQUENTIAL);
        if (LVar0 == 0) then begin
            add_timer_event(self_obj, 100, 2);
        end
    end
    else begin
        if (fixed_param == 2) then begin
            if (map_var(5) == 1) then begin
                set_map_var(5, 3);
            end
        end
    end
    return 0;
    LVar0 := 0;
end

procedure destroy_p_proc
begin
    set_map_var(7, map_var(7) - 1);
    if ((map_var(6) == 0) or (map_var(7) == 0)) then begin
        set_map_var(5, 2);
    end
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_BAD_MONSTER, global_var(GVAR_BAD_MONSTER) + 1);
        if (critter_kill_type(self_obj) == 2) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(GVAR_GANG_2, global_var(GVAR_GANG_2) + -5);
                debug_msg("Added " + -5 + " to Town Rep");
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 5);
        debug_msg("Player gains " + 5 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(GVAR_GANG_2, global_var(GVAR_GANG_2) + 3);
        debug_msg("Added " + 3 + " to Town Rep");
    end
end

procedure node999
begin
end

procedure Node000
begin
    float_msg(self_obj, mstr(101), FLOAT_MSG_NORMAL);
    call Combat();
end

procedure Node001
begin
    Reply(102);
    if (Rock_Invite) then begin
        giq_option(4, NAME, 103, Node002, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 104, Node007, NEUTRAL_REACTION);
    giq_option(4, NAME, 105, Node014, NEUTRAL_REACTION);
    giq_option(4, NAME, 106, Node015, NEUTRAL_REACTION);
end

procedure Node002
begin
    Reply(107);
    giq_option(4, NAME, 108, Node003, NEUTRAL_REACTION);
    giq_option(4, NAME, 109, Node004, NEUTRAL_REACTION);
end

procedure Node003
begin
    Reply(110);
    giq_option(4, NAME, 136, node999, NEUTRAL_REACTION);
end

procedure Node004
begin
    Reply(111);
    giq_option(4, NAME, 112, Node005, NEUTRAL_REACTION);
    giq_option(4, NAME, 113, Node006, NEUTRAL_REACTION);
end

procedure Node005
begin
    Reply(114);
    giq_option(4, NAME, 115, Node005a, NEUTRAL_REACTION);
    giq_option(4, NAME, 116, Node006, NEUTRAL_REACTION);
end

procedure Node005a
begin
    set_map_var(12, 1);
    set_global_var(GVAR_DOG_EMPATHY, 1);
end

procedure Node006
begin
    Reply(117);
    giq_option(4, NAME, 136, node999, NEUTRAL_REACTION);
end

procedure Node007
begin
    Reply(118);
    giq_option(4, NAME, 119, Node008, NEUTRAL_REACTION);
end

procedure Node008
begin
    Reply(120);
    giq_option(4, NAME, 121, Node005, NEUTRAL_REACTION);
    giq_option(4, NAME, 122, Node006, NEUTRAL_REACTION);
end

procedure Node009
begin
    float_msg(self_obj, mstr(123), FLOAT_MSG_NORMAL);
end

procedure Node010
begin
    if (local_var(4) == 0) then begin
        call Node012a();
    end
    else begin
        if (map_var(9) == 2) then begin
            Reply(124);
            giq_option(4, NAME, 125, Node010a, NEUTRAL_REACTION);
            giq_option(4, NAME, 126, Node010b, NEUTRAL_REACTION);
            giq_option(4, NAME, 127, Node013, NEUTRAL_REACTION);
        end
        else begin
            Reply(149);
            giq_option(4, NAME, 150, node999, NEUTRAL_REACTION);
        end
    end
end

procedure Node010a
begin
    if (map_var(9) == 2) then begin
        call Node011();
    end
    else begin
        if (GVar6) then begin
            call Node017();
        end
        else begin
            call Node016();
        end
    end
end

procedure Node010b
begin
    if (map_var(9) == 2) then begin
        call Node012();
    end
    else begin
        if (GVar6) then begin
            call Node017();
        end
        else begin
            call Node016();
        end
    end
end

procedure Node011
begin
    set_map_var(5, 1);
    Reply(128);
    giq_option(4, NAME, 136, node999, NEUTRAL_REACTION);
end

procedure Node012
begin
    set_map_var(5, 1);
    Reply(129);
    giq_option(4, NAME, 136, node999, NEUTRAL_REACTION);
end

procedure Node012a
begin
    set_local_var(4, 1);
    Reply(146);
    giq_option(4, NAME, 147, node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 148, node999, NEUTRAL_REACTION);
end

procedure Node013
begin
    Reply(130);
    giq_option(4, NAME, 136, node999, NEUTRAL_REACTION);
end

procedure Node014
begin
    Reply(131);
    if (Rock_Invite) then begin
        giq_option(4, NAME, 132, Node002, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 133, Node007, NEUTRAL_REACTION);
    giq_option(4, NAME, 134, Node015, NEUTRAL_REACTION);
end

procedure Node015
begin
    Reply(135);
    giq_option(4, NAME, 136, node999, NEUTRAL_REACTION);
end

procedure Node016
begin
    GVar6 := 1;
    Reply(142);
    giq_option(4, NAME, 136, node999, NEUTRAL_REACTION);
end

procedure Node017
begin
    Reply(143);
    giq_option(4, NAME, 136, node999, NEUTRAL_REACTION);
    call Combat();
end

procedure Node018
begin
    float_msg(self_obj, mstr(144), FLOAT_MSG_NORMAL);
end

procedure Node019
begin
    Reply(145);
    giq_option(4, NAME, 136, node999, NEUTRAL_REACTION);
end

procedure Combat
begin
    GVar3 := 1;
end

procedure Critter_Action
begin
end

procedure Start_War
begin
    if (fixed_param == 1) then begin
        Crypt_Taunt := 1;
        float_msg(self_obj, message_str(SCRIPT_KLATRAP, random(10200, 10218)), FLOAT_MSG_SEQUENTIAL);
        add_timer_event(self_obj, 200, 2);
    end
    else begin
        if (fixed_param == 2) then begin
            attack(Fool_Pointer);
        end
    end
end
