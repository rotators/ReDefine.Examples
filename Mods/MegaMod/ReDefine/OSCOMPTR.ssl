variable global_temp;
variable restock_obj;

procedure start;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure timed_event_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node009a;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node016a;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure Node035;
procedure Node036;
procedure Node037;
procedure Node038;
procedure Node039;
procedure Node040;
procedure Node041;
procedure Node042;
procedure Node043;
procedure Node044;
procedure Node045;
procedure Node046;
procedure Node999;
procedure Node900;
procedure Node901;
procedure Node902;

variable doSequence;
variable sequenceCount;
variable lastDudeTile;
variable lastDudeRot;
variable body;
variable g1;
variable g2;
variable g3;
variable g4;
variable g5;
variable gruth;
variable came_from;

procedure sequence;
procedure NodeDoSeq;
procedure loadPid(variable arg0, variable arg1, variable arg2, variable arg3);


procedure start
begin
end

procedure use_p_proc
begin
    if (not(combat_is_initialized)) then begin
        call use_skill_on_p_proc();
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(0) == 0) then begin
        display_mstr(100);
    end
    else begin
        display_mstr(101);
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(102);
end

procedure use_skill_on_p_proc
begin
    if (not(combat_is_initialized)) then begin
        script_overrides;
        if (map_var(3) == 1) then begin
            start_gdialog(524, self_obj, 4, -1, -1);
            gsay_start;
            call Node009();
            gsay_end;
            end_dialogue;
        end
        else begin
            if ((map_var(3) == 2) or (map_var(3) == 3)) then begin
                start_gdialog(524, self_obj, 4, -1, -1);
                gsay_start;
                call Node006();
                gsay_end;
                end_dialogue;
            end
            else begin
                start_gdialog(524, self_obj, 4, -1, -1);
                gsay_start;
                call Node001();
                gsay_end;
                end_dialogue;
            end
        end
        set_local_var(0, 1);
    end
    if (doSequence == 1) then begin
        doSequence := 0;
        call sequence();
    end
end

procedure use_obj_on_p_proc
begin
    script_overrides;
    add_timer_event(self_obj, game_ticks(2), 2);
end

procedure damage_p_proc
begin
end

procedure map_enter_p_proc
begin
end

procedure map_update_p_proc
begin
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        call sequence();
    end
    else begin
        if (fixed_param == 2) then begin
            call use_skill_on_p_proc();
        end
    end
end

procedure Node001
begin
    Reply(103);
    giq_option(1, NAME, 104, Node002, NEUTRAL_REACTION);
    giq_option(1, NAME, 105, Node003, NEUTRAL_REACTION);
    if (has_skill(dude_obj, SKILL_SCIENCE) > 25) then begin
        giq_option(1, NAME, 106, Node004, NEUTRAL_REACTION);
    end
    if (has_skill(dude_obj, SKILL_SCIENCE) > 50) then begin
        giq_option(1, NAME, 107, Node005, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 108, Node999, NEUTRAL_REACTION);
end

procedure Node002
begin
    Reply(109);
    giq_option(1, NAME, 110, Node003, NEUTRAL_REACTION);
    if (has_skill(dude_obj, SKILL_SCIENCE) > 25) then begin
        giq_option(1, NAME, 111, Node004, NEUTRAL_REACTION);
    end
    if (has_skill(dude_obj, SKILL_SCIENCE) > 50) then begin
        giq_option(1, NAME, 112, Node005, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 113, Node999, NEUTRAL_REACTION);
end

procedure Node003
begin
    Reply(114);
    if (has_skill(dude_obj, SKILL_SCIENCE) > 25) then begin
        giq_option(1, NAME, 115, Node004, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 116, Node005, NEUTRAL_REACTION);
    giq_option(1, NAME, 117, Node999, NEUTRAL_REACTION);
end

procedure Node004
begin
    Reply(118);
    giq_option(1, NAME, 119, Node005, NEUTRAL_REACTION);
    giq_option(1, NAME, 120, Node999, NEUTRAL_REACTION);
end

procedure Node005
begin
    set_global_var(GVAR_V13_STATUS_FLAGS, global_var(GVAR_V13_STATUS_FLAGS) bwor 1);
    set_global_var(GVAR_GRUTHAR_DSTATUS, 1);
    Reply(121);
    if (dude_iq < 4) then begin
        set_map_var(3, 2);
        giq_option(0, NAME, g_mstr(350), Node999, NEUTRAL_REACTION);
    end
    else begin
        set_map_var(3, 3);
        if (obj_is_carrying_obj_pid(dude_obj, 356) > 0) then begin
            giq_option(4, NAME, 141, Node006, NEUTRAL_REACTION);
        end
        giq_option(4, NAME, 140, Node999, NEUTRAL_REACTION);
    end
end

procedure Node006
begin
    if (obj_is_carrying_obj_pid(dude_obj, 356) > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 356);
        if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
            inven_unwield(dude_obj);
        end
        rm_obj_from_inven(dude_obj, restock_obj);
        destroy_object(restock_obj);
        restock_obj := 0;
        set_map_var(3, 1);
        set_global_var(GVAR_GRUTHAR_DSTATUS, 3);
        set_global_var(GVAR_V13_COMP_QST, 2);
        Reply(124);
        giq_option(0, NAME, 126, Node999, NEUTRAL_REACTION);
    end
    else begin
        Reply(125);
        giq_option(0, NAME, g_mstr(350), Node999, NEUTRAL_REACTION);
    end
end

procedure Node007
begin
    display_mstr(127);
end

procedure Node008
begin
    Reply(128);
    giq_option(0, NAME, g_mstr(352), NodeDoSeq, NEUTRAL_REACTION);
end

procedure Node009
begin
    Reply(200);
    if (local_var(0) != 2) then begin
        giq_option(4, NAME, 201, Node010, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 202, Node011, NEUTRAL_REACTION);
    giq_option(4, NAME, 203, Node012, NEUTRAL_REACTION);
    giq_option(-3, NAME, 206, Node009a, NEUTRAL_REACTION);
    if (not(local_var(1)) and ((global_var(GVAR_VIGNETTE_SEQUENCE) bwand 1) != 0)) then begin
        giq_option(1, NAME, 204, Node008, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 205, Node999, NEUTRAL_REACTION);
    set_local_var(0, 2);
end

procedure Node009a
begin
    Reply(520);
    giq_option(1, NAME, 521, Node999, NEUTRAL_REACTION);
end

procedure Node010
begin
    Reply(210);
    giq_option(1, NAME, 211, Node011, NEUTRAL_REACTION);
    giq_option(1, NAME, 212, Node012, NEUTRAL_REACTION);
    if (not(local_var(1)) and ((global_var(GVAR_VIGNETTE_SEQUENCE) bwand 1) != 0)) then begin
        giq_option(1, NAME, 213, Node008, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 214, Node999, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(220);
    giq_option(1, NAME, 221, Node009, NEUTRAL_REACTION);
    giq_option(1, NAME, 222, Node999, NEUTRAL_REACTION);
end

procedure Node012
begin
    Reply(230);
    giq_option(1, NAME, 231, Node013, NEUTRAL_REACTION);
    giq_option(1, NAME, 232, Node999, NEUTRAL_REACTION);
end

procedure Node013
begin
    Reply(240);
    giq_option(1, NAME, 241, Node014, NEUTRAL_REACTION);
    giq_option(1, NAME, 242, Node023, NEUTRAL_REACTION);
    if (local_var(4 < 3)) then begin
        giq_option(1, NAME, 243, Node027, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 244, Node999, NEUTRAL_REACTION);
end

procedure Node014
begin
    Reply(250);
    giq_option(1, NAME, 251, Node015, NEUTRAL_REACTION);
end

procedure Node015
begin
    Reply(252);
    giq_option(1, NAME, 253, Node016, NEUTRAL_REACTION);
end

procedure Node016
begin
    Reply(254);
    giq_option(1, NAME, 255, Node016a, NEUTRAL_REACTION);
end

procedure Node016a
begin
    Reply(2541);
    giq_option(1, NAME, 255, Node017, NEUTRAL_REACTION);
end

procedure Node017
begin
    Reply(256);
    giq_option(1, NAME, 257, Node018, NEUTRAL_REACTION);
end

procedure Node018
begin
    Reply(258);
    giq_option(1, NAME, 259, Node019, NEUTRAL_REACTION);
end

procedure Node019
begin
    Reply(260);
    giq_option(1, NAME, 261, Node020, NEUTRAL_REACTION);
end

procedure Node020
begin
    Reply(262);
    giq_option(1, NAME, 263, Node021, NEUTRAL_REACTION);
end

procedure Node021
begin
    Reply(264);
    giq_option(1, NAME, 265, Node022, NEUTRAL_REACTION);
end

procedure Node022
begin
    Reply(266);
    giq_option(1, NAME, 267, Node023, NEUTRAL_REACTION);
    if (local_var(4 < 3)) then begin
        giq_option(1, NAME, 268, Node027, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 269, Node999, NEUTRAL_REACTION);
end

procedure Node023
begin
    Reply(270);
    giq_option(1, NAME, 271, Node024, NEUTRAL_REACTION);
end

procedure Node024
begin
    Reply(272);
    giq_option(1, NAME, 273, Node025, NEUTRAL_REACTION);
end

procedure Node025
begin
    Reply(274);
    giq_option(1, NAME, 275, Node026, NEUTRAL_REACTION);
end

procedure Node026
begin
    Reply(276);
    giq_option(1, NAME, 277, Node014, NEUTRAL_REACTION);
    if (local_var(4 < 3)) then begin
        giq_option(1, NAME, 278, Node027, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 279, Node999, NEUTRAL_REACTION);
end

procedure Node027
begin
    Reply(280);
    giq_option(1, NAME, 281, Node013, NEUTRAL_REACTION);
    giq_option(1, NAME, 282, Node900, NEUTRAL_REACTION);
    giq_option(1, NAME, 283, Node901, NEUTRAL_REACTION);
    giq_option(1, NAME, 284, Node999, NEUTRAL_REACTION);
end

procedure Node028
begin
    set_local_var(4, local_var(4) + 1);
    Reply(290);
    if (local_var(4 < 3)) then begin
        giq_option(1, NAME, 291, Node027, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 292, Node900, NEUTRAL_REACTION);
    giq_option(1, NAME, 293, Node901, NEUTRAL_REACTION);
    giq_option(1, NAME, 294, Node999, NEUTRAL_REACTION);
end

procedure Node029
begin
    Reply(300);
    giq_option(1, NAME, 301, Node009, NEUTRAL_REACTION);
    giq_option(1, NAME, 302, Node901, NEUTRAL_REACTION);
    giq_option(1, NAME, 303, Node999, NEUTRAL_REACTION);
end

procedure Node030
begin
    Reply(310);
    giq_option(1, NAME, 311, Node011, NEUTRAL_REACTION);
    giq_option(1, NAME, 312, Node012, NEUTRAL_REACTION);
    if (not(local_var(1)) and ((global_var(GVAR_VIGNETTE_SEQUENCE) bwand 1) != 0)) then begin
        giq_option(1, NAME, 313, Node008, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 314, Node999, NEUTRAL_REACTION);
end

procedure Node031
begin
    Reply(320);
    giq_option(1, NAME, 322, Node033, NEUTRAL_REACTION);
    giq_option(1, NAME, 323, Node999, NEUTRAL_REACTION);
end

procedure Node032
begin
    Reply(321);
    giq_option(1, NAME, 322, Node033, NEUTRAL_REACTION);
    giq_option(1, NAME, 323, Node999, NEUTRAL_REACTION);
end

procedure Node033
begin
    Reply(330);
    giq_option(1, NAME, 331, Node034, NEUTRAL_REACTION);
end

procedure Node034
begin
    Reply(332);
    giq_option(1, NAME, 333, Node035, NEUTRAL_REACTION);
end

procedure Node035
begin
    Reply(334);
    giq_option(1, NAME, 335, Node036, NEUTRAL_REACTION);
end

procedure Node036
begin
    Reply(336);
    giq_option(1, NAME, 337, Node037, NEUTRAL_REACTION);
end

procedure Node037
begin
    if (local_var(2) == 0) then begin
        set_local_var(2, 1);
        give_exp_points(800);
        display_msg(g_mstr(100) + 800 + g_mstr(101));
        display_mstr(510);
    end
    Reply(338);
    giq_option(1, NAME, 339, Node902, NEUTRAL_REACTION);
    giq_option(1, NAME, 340, Node999, NEUTRAL_REACTION);
end

procedure Node038
begin
    game_time_advance(60 * (60 * 10) * 3);
    Reply(350);
    giq_option(1, NAME, 351, Node999, NEUTRAL_REACTION);
end

procedure Node039
begin
    game_time_advance(60 * (60 * 10) * 3);
    Reply(360);
    giq_option(1, NAME, 361, Node040, NEUTRAL_REACTION);
end

procedure Node040
begin
    Reply(362);
    giq_option(1, NAME, 363, Node041, NEUTRAL_REACTION);
end

procedure Node041
begin
    Reply(364);
    giq_option(1, NAME, 365, Node042, NEUTRAL_REACTION);
end

procedure Node042
begin
    Reply(366);
    giq_option(1, NAME, 367, Node043, NEUTRAL_REACTION);
end

procedure Node043
begin
    Reply(368);
    giq_option(1, NAME, 369, Node044, NEUTRAL_REACTION);
end

procedure Node044
begin
    Reply(370);
    giq_option(1, NAME, 371, Node045, NEUTRAL_REACTION);
end

procedure Node045
begin
    Reply(372);
    giq_option(1, NAME, 373, Node046, NEUTRAL_REACTION);
end

procedure Node046
begin
    if (local_var(3) == 0) then begin
        set_local_var(3, 1);
        set_global_var(GVAR_SAINT_NICK_LINE, 2);
        give_exp_points(1000);
        display_msg(g_mstr(100) + 1000 + g_mstr(101));
        display_mstr(500);
    end
    Reply(374);
    giq_option(1, NAME, 241, Node014, NEUTRAL_REACTION);
    giq_option(1, NAME, 242, Node023, NEUTRAL_REACTION);
    giq_option(1, NAME, 375, Node999, NEUTRAL_REACTION);
end

procedure Node999
begin
end

procedure Node900
begin
    if (local_var(4 >= 3)) then begin
        call Node029();
    end
    else begin
        if (is_success(do_check(dude_obj, 6, -5))) then begin
            call Node031();
        end
        else begin
            call Node028();
        end
    end
end

procedure Node901
begin
    if (has_skill(dude_obj, SKILL_SCIENCE) > 95) then begin
        call Node032();
    end
    else begin
        call Node030();
    end
end

procedure Node902
begin
    if (is_success(do_check(dude_obj, 6, -3))) then begin
        call Node039();
    end
    else begin
        if (has_skill(dude_obj, SKILL_SCIENCE) > 130) then begin
            call Node039();
        end
        else begin
            call Node038();
        end
    end
end

procedure sequence
begin
    variable LVar0 := 0;
    if (sequenceCount == 0) then begin
        game_ui_disable;
        set_global_var(GVAR_PARTY_NO_FOLLOW, 1);
        gfade_out(500);
        set_global_var(GVAR_PARTY_MEMBERS_HIDDEN, global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwor 262144);
        if (not(global_var(GVAR_BOS_LOCATION_ELEVATORS))) then begin
            set_obj_visibility(party_member_obj(16777278), 1);
            set_obj_visibility(party_member_obj(16777376), 1);
            set_obj_visibility(party_member_obj(16777377), 1);
            set_obj_visibility(party_member_obj(16777305), 1);
            set_obj_visibility(party_member_obj(16777313), 1);
            set_obj_visibility(party_member_obj(16777323), 1);
            set_obj_visibility(party_member_obj(16777352), 1);
            set_obj_visibility(party_member_obj(16777378), 1);
            set_obj_visibility(party_member_obj(16777368), 1);
            set_obj_visibility(party_member_obj(16777379), 1);
            set_obj_visibility(party_member_obj(16777380), 1);
            set_obj_visibility(party_member_obj(16777295), 1);
            set_obj_visibility(party_member_obj(16777558), 1);
            set_obj_visibility(party_member_obj(16777600), 1);
            set_obj_visibility(party_member_obj(16777687), 1);
            set_obj_visibility(party_member_obj(16777597), 1);
            set_obj_visibility(party_member_obj(16777596), 1);
            set_obj_visibility(party_member_obj(16777595), 1);
            set_obj_visibility(party_member_obj(16777407), 1);
            set_obj_visibility(party_member_obj(16777762), 1);
            set_obj_visibility(party_member_obj(16777859), 1);
            set_obj_visibility(party_member_obj(16777749), 1);
            set_obj_visibility(party_member_obj(16777748), 1);
            set_obj_visibility(party_member_obj(16777747), 1);
            set_obj_visibility(party_member_obj(16777785), 1);
            set_obj_visibility(party_member_obj(16777801), 1);
            set_obj_visibility(party_member_obj(16777872), 1);
            set_global_var(GVAR_BOS_LOCATION_ELEVATORS, 1);
        end
        set_obj_visibility(dude_obj, 1);
        lastDudeTile := dude_tile;
        lastDudeRot := obj_get_rot(dude_obj);
        body := loadPid(16777504, 21913, 2, elevation(self_obj));
        g1 := loadPid(16777466, 22309, 2, elevation(self_obj));
        g2 := loadPid(16777466, 22707, 3, elevation(self_obj));
        g3 := loadPid(16777466, 22718, 1, elevation(self_obj));
        g4 := loadPid(16777466, 22116, 2, elevation(self_obj));
        g5 := loadPid(16777466, 21313, 2, elevation(self_obj));
        gruth := loadPid(16777224, 22713, 5, elevation(self_obj));
        move_to(dude_obj, 22713, elevation(self_obj));
        gfade_in(500);
        float_msg(body, mstr(129), FLOAT_MSG_NORMAL);
        sequenceCount := sequenceCount + 1;
        add_timer_event(self_obj, game_ticks(5), 1);
    end
    else begin
        if (sequenceCount == 1) then begin
            float_msg(gruth, mstr(130), FLOAT_MSG_RED);
            sequenceCount := sequenceCount + 1;
            add_timer_event(self_obj, game_ticks(5), 1);
        end
        else begin
            if (sequenceCount == 2) then begin
                float_msg(body, mstr(131), FLOAT_MSG_NORMAL);
                sequenceCount := sequenceCount + 1;
                add_timer_event(self_obj, game_ticks(5), 1);
            end
            else begin
                if (sequenceCount == 3) then begin
                    float_msg(gruth, mstr(132), FLOAT_MSG_RED);
                    sequenceCount := sequenceCount + 1;
                    add_timer_event(self_obj, game_ticks(5), 1);
                end
                else begin
                    if (sequenceCount == 4) then begin
                        float_msg(body, mstr(133), FLOAT_MSG_RED);
                        animate_move_obj_to_tile(body, 22313, 0);
                        sequenceCount := sequenceCount + 1;
                        add_timer_event(self_obj, game_ticks(2), 1);
                    end
                    else begin
                        if (sequenceCount == 5) then begin
                            if (not(anim_busy(body))) then begin
                                LVar0 := sfx_build_char_name(body, 16, 4);
                                reg_anim_func(2, body);
                                reg_anim_func(1, 1);
                                reg_anim_animate(body, 16, -1);
                                reg_anim_play_sfx(body, LVar0, 0);
                                reg_anim_func(3, 0);
                                sequenceCount := sequenceCount + 1;
                            end
                            add_timer_event(self_obj, 5, 1);
                        end
                        else begin
                            if (sequenceCount == 6) then begin
                                LVar0 := sfx_build_char_name(gruth, 25, 3);
                                reg_anim_func(2, gruth);
                                reg_anim_func(1, 1);
                                reg_anim_animate(gruth, 25, -1);
                                reg_anim_play_sfx(gruth, LVar0, 0);
                                reg_anim_func(3, 0);
                                sequenceCount := sequenceCount + 1;
                                add_timer_event(self_obj, game_ticks(4), 1);
                            end
                            else begin
                                if (sequenceCount == 7) then begin
                                    float_msg(body, mstr(134), FLOAT_MSG_NORMAL);
                                    sequenceCount := sequenceCount + 1;
                                    add_timer_event(self_obj, game_ticks(3), 1);
                                end
                                else begin
                                    if (sequenceCount == 8) then begin
                                        gfade_out(1000);
                                        destroy_object(body);
                                        destroy_object(g1);
                                        destroy_object(g2);
                                        destroy_object(g3);
                                        destroy_object(g4);
                                        destroy_object(g5);
                                        destroy_object(gruth);
                                        move_to(dude_obj, lastDudeTile, elevation(self_obj));
                                        anim(dude_obj, 1000, lastDudeRot);
                                        set_obj_visibility(dude_obj, 0);
                                        set_global_var(GVAR_PARTY_MEMBERS_HIDDEN, global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand (-1 - 262144));
                                        if (global_var(GVAR_BOS_LOCATION_ELEVATORS)) then begin
                                            set_obj_visibility(party_member_obj(16777278), 0);
                                            set_obj_visibility(party_member_obj(16777376), 0);
                                            set_obj_visibility(party_member_obj(16777377), 0);
                                            set_obj_visibility(party_member_obj(16777305), 0);
                                            set_obj_visibility(party_member_obj(16777313), 0);
                                            set_obj_visibility(party_member_obj(16777323), 0);
                                            set_obj_visibility(party_member_obj(16777352), 0);
                                            set_obj_visibility(party_member_obj(16777378), 0);
                                            set_obj_visibility(party_member_obj(16777368), 0);
                                            set_obj_visibility(party_member_obj(16777379), 0);
                                            set_obj_visibility(party_member_obj(16777380), 0);
                                            set_obj_visibility(party_member_obj(16777295), 0);
                                            set_obj_visibility(party_member_obj(16777558), 0);
                                            set_obj_visibility(party_member_obj(16777600), 0);
                                            set_obj_visibility(party_member_obj(16777687), 0);
                                            set_obj_visibility(party_member_obj(16777597), 0);
                                            set_obj_visibility(party_member_obj(16777596), 0);
                                            set_obj_visibility(party_member_obj(16777595), 0);
                                            set_obj_visibility(party_member_obj(16777407), 0);
                                            set_obj_visibility(party_member_obj(16777762), 0);
                                            set_obj_visibility(party_member_obj(16777859), 0);
                                            set_obj_visibility(party_member_obj(16777749), 0);
                                            set_obj_visibility(party_member_obj(16777748), 0);
                                            set_obj_visibility(party_member_obj(16777747), 0);
                                            set_obj_visibility(party_member_obj(16777785), 0);
                                            set_obj_visibility(party_member_obj(16777801), 0);
                                            set_obj_visibility(party_member_obj(16777293), 0);
                                            set_global_var(GVAR_BOS_LOCATION_ELEVATORS, 0);
                                        end
                                        gfade_in(500);
                                        game_ui_enable;
                                        if (party_member_obj(16777368) != 0) then begin
                                            float_msg(party_member_obj(16777368), mstr(135), FLOAT_MSG_RED);
                                        end
                                        set_local_var(1, 1);
                                        set_global_var(GVAR_PARTY_NO_FOLLOW, 0);
                                        set_global_var(GVAR_VIGNETTE_SEQUENCE, global_var(GVAR_VIGNETTE_SEQUENCE) bwor 65536);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure NodeDoSeq
begin
    doSequence := 1;
    call Node999();
end

procedure loadPid(variable arg0, variable arg1, variable arg2, variable arg3)
begin
    variable LVar4 := 0;
    LVar4 := create_object(arg0, arg1, arg3);
    if (LVar4) then begin
        reg_anim_func(2, LVar4);
        reg_anim_func(1, 1);
        anim(LVar4, 1000, arg2);
        reg_anim_func(3, 0);
    end
    return LVar4;
end
