variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure checkarea;
procedure Node910;
procedure Node920;
procedure Node995;
procedure Node996;
procedure Node997;
procedure Node998;
procedure Node999;
procedure Node001;
procedure Node01a;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure map_exit_p_proc;

variable Only_Once;
variable area;
variable here;
variable k;
variable ss;
variable visit_04_before;
variable visit_14_before;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if ((game_time_hour <= 600) or (game_time_hour >= 1800)) then begin
        if (tile_num(self_obj) != 22285) then begin
            if (anim_busy(self_obj) == 0) then begin
                animate_move_obj_to_tile(self_obj, 22285, 0);
            end
        end
        else begin
            if (obj_get_rot(self_obj) != 2) then begin
                reg_anim_func(2, self_obj);
                anim(self_obj, 1000, 2);
            end
        end
    end
    else begin
        if (tile_num(self_obj) == 22285) then begin
            if ((tile_num(self_obj) == 24685) or (tile_num(self_obj) == 19912)) then begin
                if (obj_get_rot(self_obj) != 2) then begin
                    reg_anim_func(2, self_obj);
                    anim(self_obj, 1000, 2);
                end
            end
            else begin
                if ((anim_busy(self_obj) == 0) and (tile_num(self_obj) != local_var(10)) and (local_var(11) == 1)) then begin
                    animate_move_obj_to_tile(self_obj, local_var(10), 0);
                end
                else begin
                    if (random(1, 2) == 1) then begin
                        set_local_var(10, 24685);
                    end
                    else begin
                        set_local_var(10, 24685);
                    end
                    set_local_var(11, 1);
                    animate_move_obj_to_tile(self_obj, local_var(10), 0);
                end
            end
        end
    end
    if ((global_var(GVAR_GECKO_MELTDOWN) == 1) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack(dude_obj);
    end
    else begin
        if ((local_var(5) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
            set_local_var(5, 1);
            attack(dude_obj);
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure talk_p_proc
begin
    visit_04_before := 0;
    visit_14_before := 0;
    if (local_var(2) == 0) then begin
        set_local_var(2, 1);
        set_local_var(3, (dude_charisma - self_charisma) * 5);
        debug_msg("Base Reaction == " + local_var(3));
    end
    Static_Reaction := 0;
    set_local_var(0, 0);
    debug_msg("Start Reaction == " + local_var(0));
    if (reaction_bonus_karma >= 0) then begin
        reaction_bonus_karma := reaction_bonus_karma / 1000;
    end
    else begin
        reaction_bonus_karma := -1 * (-1 * reaction_bonus_karma / 1000);
    end
    if (global_var(GVAR_TOWN_REP_GECKO) >= 0) then begin
        reaction_bonus_town_rep := global_var(GVAR_TOWN_REP_GECKO) / 2;
    end
    else begin
        reaction_bonus_town_rep := -1 * (-1 * global_var(GVAR_TOWN_REP_GECKO) / 2);
    end
    if (has_trait(TRAIT_TRAIT, dude_obj, TRAIT_sex_appeal)) then begin
        if (dude_gender == self_gender) then begin
            Static_Reaction := Static_Reaction + -20;
        end
        else begin
            Static_Reaction := Static_Reaction + 20;
        end
        debug_msg("Sex Appeal Bonus == " + Static_Reaction);
    end
    else begin
        debug_msg("Sex Appeal Bonus == 0");
    end
    if (Evil_Critter == 1) then begin
        Static_Reaction := Static_Reaction - reaction_bonus_karma;
        debug_msg("Karma Reaction Bonus == " + Static_Reaction);
        Static_Reaction := Static_Reaction - reaction_bonus_town_rep;
        debug_msg("Town Rep Bonus == " + Static_Reaction);
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (global_var(GVAR_KARMA_HOLY_WARRIOR) == 1) then begin
            Static_Reaction := Static_Reaction - 20;
        end
        else begin
            if (global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES) == 1) then begin
                Static_Reaction := Static_Reaction - 15;
            end
            else begin
                if (global_var(GVAR_KARMA_SHIELD_OF_HOPE) == 1) then begin
                    Static_Reaction := Static_Reaction - 10;
                end
                else begin
                    if (global_var(GVAR_KARMA_DEFENDER) == 1) then begin
                        Static_Reaction := Static_Reaction - 5;
                    end
                    else begin
                        if (global_var(GVAR_KARMA_WANDERER) == 1) then begin
                            Static_Reaction := Static_Reaction - 0;
                        end
                        else begin
                            if (global_var(GVAR_KARMA_BETRAYER) == 1) then begin
                                Static_Reaction := Static_Reaction - -5;
                            end
                            else begin
                                if (global_var(GVAR_KARMA_SWORD_OF_DESPAIR) == 1) then begin
                                    Static_Reaction := Static_Reaction - -10;
                                end
                                else begin
                                    if (global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE) == 1) then begin
                                        Static_Reaction := Static_Reaction - -15;
                                    end
                                    else begin
                                        Static_Reaction := Static_Reaction - -20;
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        debug_msg("Bad Person Reaction Bonus == " + Static_Reaction);
    end
    else begin
        Static_Reaction := Static_Reaction + reaction_bonus_karma;
        debug_msg("Karma Reaction Bonus == " + Static_Reaction);
        Static_Reaction := Static_Reaction + reaction_bonus_town_rep;
        debug_msg("Town Rep Bonus == " + Static_Reaction);
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (global_var(GVAR_KARMA_HOLY_WARRIOR) == 1) then begin
            Static_Reaction := Static_Reaction + 20;
        end
        else begin
            if (global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES) == 1) then begin
                Static_Reaction := Static_Reaction + 15;
            end
            else begin
                if (global_var(GVAR_KARMA_SHIELD_OF_HOPE) == 1) then begin
                    Static_Reaction := Static_Reaction + 10;
                end
                else begin
                    if (global_var(GVAR_KARMA_DEFENDER) == 1) then begin
                        Static_Reaction := Static_Reaction + 5;
                    end
                    else begin
                        if (global_var(GVAR_KARMA_WANDERER) == 1) then begin
                            Static_Reaction := Static_Reaction + 0;
                        end
                        else begin
                            if (global_var(GVAR_KARMA_BETRAYER) == 1) then begin
                                Static_Reaction := Static_Reaction + -5;
                            end
                            else begin
                                if (global_var(GVAR_KARMA_SWORD_OF_DESPAIR) == 1) then begin
                                    Static_Reaction := Static_Reaction + -10;
                                end
                                else begin
                                    if (global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE) == 1) then begin
                                        Static_Reaction := Static_Reaction + -15;
                                    end
                                    else begin
                                        Static_Reaction := Static_Reaction + -20;
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        debug_msg("Good Person Reaction Bonus == " + Static_Reaction);
    end
    if (Slavery_Tolerant == 0) then begin
        if (global_var(GVAR_REPUTATION_SLAVER) == 1) then begin
            Static_Reaction := Static_Reaction + (2 * -25);
        end
    end
    else begin
        if (Slavery_Tolerant == 1) then begin
            if (global_var(GVAR_REPUTATION_SLAVER) == 1) then begin
                Static_Reaction := Static_Reaction + -25;
            end
        end
        else begin
            if (Slavery_Tolerant == 3) then begin
                if (global_var(GVAR_REPUTATION_SLAVER) == 1) then begin
                    Static_Reaction := Static_Reaction - -25;
                end
            end
        end
    end
    debug_msg("Slaver + Aligned Reaction == " + Static_Reaction);
    Static_Reaction := Static_Reaction + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence));
    debug_msg("Presence Reaction == " + Static_Reaction);
    if (global_var(GVAR_CHILDKILLER_REPUTATION) >= 2) then begin
        Static_Reaction := Static_Reaction + -30;
    end
    debug_msg("Childkiller Reaction == " + Static_Reaction);
    set_local_var(0, local_var(3) + Static_Reaction);
    debug_msg("Initial Reaction == " + local_var(0));
    call checkarea();
    if (local_var(6) == 1) then begin
        call Node998();
    end
    else begin
        if (dude_is_stupid) then begin
            call Node001();
        end
        else begin
            if (area == 1) then begin
                start_gdialog(135, self_obj, 4, -1, -1);
                gsay_start;
                call Node006();
                gsay_end;
                end_dialogue;
            end
            else begin
                if (area == 2) then begin
                    start_gdialog(135, self_obj, 4, -1, -1);
                    gsay_start;
                    call Node005();
                    gsay_end;
                    end_dialogue;
                end
                else begin
                    start_gdialog(135, self_obj, 4, -1, -1);
                    gsay_start;
                    call Node004();
                    gsay_end;
                    end_dialogue;
                end
            end
        end
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (critter_kill_type(self_obj) == KILL_TYPE_children_kills) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(GVAR_TOWN_REP_GECKO, global_var(GVAR_TOWN_REP_GECKO) + -8);
                debug_msg("Added " + -8 + " to Town Rep");
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(GVAR_TOWN_REP_GECKO, global_var(GVAR_TOWN_REP_GECKO) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(4)) then begin
        display_mstr(101);
    end
    else begin
        display_mstr(102);
    end
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(6, 1);
        set_global_var(GVAR_ENEMY_GECKO, 1);
    end
end

procedure map_enter_p_proc
begin
    Only_Once := 0;
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 49);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_TOUGH_CITIZEN);
    if (map_var(0) == 0) then begin
        set_map_var(0, 1);
        if ((game_time_hour <= 600) or (game_time_hour >= 1800)) then begin
            move_to(self_obj, 22285, elevation(self_obj));
        end
        else begin
            if (random(1, 2) == 1) then begin
                move_to(self_obj, 24685, elevation(self_obj));
            end
            else begin
                move_to(self_obj, 19912, elevation(self_obj));
            end
        end
    end
end

procedure checkarea
begin
    here := tile_num(self_obj);
    area := 0;
    if (tile_distance(here, 22285) < 5) then begin
        area := 1;
    end
    else begin
        if (tile_distance(here, 24685) < 12) then begin
            area := 2;
        end
    end
end

procedure Node910
begin
    if (global_var(GVAR_VAULT_PLANT_STATUS) == 9) then begin
        call Node008();
    end
    else begin
        call Node007();
    end
end

procedure Node920
begin
    if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
        call Node019();
    end
    else begin
        call Node020();
    end
end

procedure Node995
begin
    if (dude_charisma >= 7) then begin
        set_local_var(3, 100);
        set_local_var(1, 4);
    end
    else begin
        set_local_var(1, -4);
        set_local_var(3, -100);
    end
end

procedure Node996
begin
    set_local_var(1, -4);
    set_local_var(3, -100);
end

procedure Node997
begin
    if (dude_charisma >= 8) then begin
        call Node004();
    end
    else begin
        call Node005();
    end
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
end

procedure Node001
begin
    k := random(1, 5);
    if (k == 1) then begin
        float_msg(self_obj, mstr(110), FLOAT_MSG_RED);
    end
    else begin
        if (k == 2) then begin
            float_msg(self_obj, mstr(111), FLOAT_MSG_RED);
        end
        else begin
            if (k == 3) then begin
                float_msg(self_obj, mstr(112), FLOAT_MSG_RED);
            end
            else begin
                if (k == 4) then begin
                    float_msg(self_obj, mstr(113), FLOAT_MSG_RED);
                end
                else begin
                    if (k == 5) then begin
                        float_msg(self_obj, mstr(114), FLOAT_MSG_RED);
                    end
                end
            end
        end
    end
end

procedure Node01a
begin
    k := random(1, 5);
    if (k == 1) then begin
        gsay_message(NAME, 110, NEUTRAL_REACTION);
    end
    else begin
        if (k == 2) then begin
            gsay_message(NAME, 111, NEUTRAL_REACTION);
        end
        else begin
            if (k == 3) then begin
                gsay_message(NAME, 112, NEUTRAL_REACTION);
            end
            else begin
                if (k == 4) then begin
                    gsay_message(NAME, 113, NEUTRAL_REACTION);
                end
                else begin
                    if (k == 5) then begin
                        gsay_message(NAME, 114, NEUTRAL_REACTION);
                    end
                end
            end
        end
    end
end

procedure Node002
begin
    if (local_var(4) == 0) then begin
        set_local_var(4, 1);
    end
    Reply(120);
    giq_option(4, NAME, 121, Node003, NEUTRAL_REACTION);
    giq_option(4, NAME, 122, Node007, NEUTRAL_REACTION);
    giq_option(4, NAME, 123, Node999, NEUTRAL_REACTION);
end

procedure Node003
begin
    if (local_var(4) == 0) then begin
        set_local_var(4, 1);
    end
    Reply(130);
    giq_option(4, NAME, 131, Node008, NEUTRAL_REACTION);
    giq_option(4, NAME, 132, Node999, NEUTRAL_REACTION);
end

procedure Node004
begin
    if (visit_04_before) then begin
        Reply(141);
    end
    else begin
        visit_04_before := 1;
        Reply(140);
    end
    giq_option(-3, NAME, 142, Node01a, NEUTRAL_REACTION);
    giq_option(4, NAME, 143, Node007, NEUTRAL_REACTION);
    giq_option(4, NAME, 144, Node003, NEUTRAL_REACTION);
    giq_option(4, NAME, 145, Node014, NEUTRAL_REACTION);
    giq_option(4, NAME, 146, Node999, NEUTRAL_REACTION);
end

procedure Node005
begin
    Reply(150);
    giq_option(-3, NAME, 151, Node01a, NEUTRAL_REACTION);
    giq_option(4, NAME, 152, Node003, NEUTRAL_REACTION);
    giq_option(4, NAME, 153, Node007, NEUTRAL_REACTION);
    giq_option(4, NAME, 154, Node014, NEUTRAL_REACTION);
    giq_option(4, NAME, 155, Node999, NEUTRAL_REACTION);
end

procedure Node006
begin
    Reply(160);
    giq_option(-3, NAME, 161, Node01a, NEUTRAL_REACTION);
    giq_option(4, NAME, 162, Node017, NEUTRAL_REACTION);
    giq_option(4, NAME, 163, Node014, NEUTRAL_REACTION);
    giq_option(4, NAME, 164, Node999, NEUTRAL_REACTION);
end

procedure Node007
begin
    Reply(170);
    giq_option(4, NAME, 171, Node009, NEUTRAL_REACTION);
    giq_option(4, NAME, 172, Node014, NEUTRAL_REACTION);
    giq_option(4, NAME, 173, Node999, NEUTRAL_REACTION);
end

procedure Node008
begin
    Reply(180);
    giq_option(4, NAME, 181, Node010, NEUTRAL_REACTION);
    giq_option(4, NAME, 182, Node999, NEUTRAL_REACTION);
end

procedure Node009
begin
    Reply(190);
    giq_option(4, NAME, 191, Node017, NEUTRAL_REACTION);
    giq_option(4, NAME, 192, Node014, NEUTRAL_REACTION);
    giq_option(4, NAME, 193, Node999, NEUTRAL_REACTION);
end

procedure Node010
begin
    Reply(200);
    giq_option(4, NAME, 201, Node011, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(210);
    giq_option(4, NAME, 211, Node012, NEUTRAL_REACTION);
end

procedure Node012
begin
    Reply(220);
    if ((town_known(6) != 0) == 0) then begin
        giq_option(4, NAME, 221, Node013, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 222, Node014, NEUTRAL_REACTION);
    giq_option(4, NAME, 223, Node999, GOOD_REACTION);
    giq_option(4, NAME, 224, Node999, BAD_REACTION);
end

procedure Node013
begin
    if (town_known(6) == 0) then begin
        debug_msg("  mark_on_map(" + 6 + ")");
        mark_area_known(0, 6, 1);
    end
    Reply(230);
    giq_option(4, NAME, 231, Node015, NEUTRAL_REACTION);
end

procedure Node014
begin
    if (visit_14_before == 0) then begin
        visit_14_before := 1;
        Reply(240);
    end
    else begin
        if (visit_14_before == 1) then begin
            visit_14_before := 2;
            Reply(241);
        end
        else begin
            Reply(242);
        end
    end
    giq_option(4, NAME, 243, Node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 244, Node007, NEUTRAL_REACTION);
    giq_option(4, NAME, 245, Node009, NEUTRAL_REACTION);
    giq_option(4, NAME, 246, Node018, NEUTRAL_REACTION);
end

procedure Node015
begin
    Reply(250);
    giq_option(4, NAME, 251, Node014, NEUTRAL_REACTION);
    giq_option(4, NAME, 252, Node999, NEUTRAL_REACTION);
end

procedure Node016
begin
    Reply(260);
    giq_option(4, NAME, 261, Node009, NEUTRAL_REACTION);
    giq_option(4, NAME, 262, Node014, NEUTRAL_REACTION);
    giq_option(4, NAME, 263, Node999, NEUTRAL_REACTION);
end

procedure Node017
begin
    ss := global_var(GVAR_GECKO_SKEETER_STATUS);
    if (ss == 0) then begin
        Reply(270);
    end
    else begin
        if (ss == 1) then begin
            Reply(271);
        end
        else begin
            if (ss == 2) then begin
                Reply(273);
            end
        end
    end
    giq_option(4, NAME, 272, Node999, NEUTRAL_REACTION);
end

procedure Node018
begin
    Reply(280);
    if (local_var(8) == 0) then begin
        set_local_var(8, 1);
        giq_option(4, NAME, 281, Node920, NEUTRAL_REACTION);
    end
    else begin
        if (local_var(9) == 1) then begin
            giq_option(4, NAME, 282, Node920, NEUTRAL_REACTION);
        end
    end
    giq_option(4, NAME, 283, Node021, NEUTRAL_REACTION);
end

procedure Node019
begin
    Reply(290);
    giq_option(4, NAME, 291, Node024, NEUTRAL_REACTION);
    giq_option(4, NAME, 292, Node014, NEUTRAL_REACTION);
end

procedure Node020
begin
    if (local_var(9) == 0) then begin
        set_local_var(9, 1);
        Reply(300);
    end
    else begin
        Reply(301);
    end
    Reply(300);
    giq_option(4, NAME, 302, Node014, NEUTRAL_REACTION);
end

procedure Node021
begin
    Reply(310);
    giq_option(4, NAME, 311, Node022, NEUTRAL_REACTION);
    giq_option(4, NAME, 312, Node023, BAD_REACTION);
end

procedure Node022
begin
    Reply(320);
    giq_option(4, NAME, 321, Node014, NEUTRAL_REACTION);
    giq_option(4, NAME, 322, Node999, NEUTRAL_REACTION);
end

procedure Node023
begin
    Reply(330);
    giq_option(4, NAME, 331, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 332, Node999, NEUTRAL_REACTION);
end

procedure Node024
begin
    Reply(340);
    giq_option(4, NAME, 341, Node014, NEUTRAL_REACTION);
    giq_option(4, NAME, 342, Node999, NEUTRAL_REACTION);
end

procedure Node025
begin
    Reply(350);
    giq_option(4, NAME, 351, Node014, NEUTRAL_REACTION);
end

procedure map_exit_p_proc
begin
    set_map_var(0, 0);
end
