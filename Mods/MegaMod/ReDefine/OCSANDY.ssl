procedure pickup_p_proc;

variable tmp_gen_rep;
variable global_temp;

procedure start;
procedure critter_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure push_p_proc;
procedure timed_event_p_proc;
procedure combat_p_proc;
procedure Node998;
procedure Node999;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;

import variable i_ariel_obj;

variable q1;
variable q2;
variable q3;

procedure Node002a;
procedure Node002b;
procedure Node002c;
procedure Node004a;
procedure Node005a;
procedure Node006a;


procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure start
begin
    if ((global_var(GVAR_VIGNETTE_SEQUENCE) bwand 1) != 0) then begin
        global_temp := create_object(128, 0, 0);
        move_obj_inven_to_obj(self_obj, global_temp);
        destroy_object(global_temp);
        kill_critter(self_obj, 63);
    end
end

procedure critter_p_proc
begin
    if ((local_var(5) == 2) and obj_can_see_obj(self_obj, dude_obj) or map_var(5)) then begin
        set_local_var(5, 1);
        set_map_var(5, 1);
        if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
            if (anim_busy(self_obj) == 0) then begin
                global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                global_temp := (global_temp + 1) % 6;
                while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                    debug_msg("flee loop: rot == " + global_temp);
                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                    global_temp := (global_temp + 1) % 6;
                end
            end
        end
    end
    if (local_var(7) == 3) then begin
        if (not(anim_busy(self_obj))) then begin
            if (i_ariel_obj != -1) then begin
                if (tile_num(self_obj) != tile_num_in_direction(tile_num(i_ariel_obj), (obj_get_rot(i_ariel_obj) + 3) % 6, 1)) then begin
                    add_timer_event(i_ariel_obj, 0, 3);
                    reg_anim_func(2, self_obj);
                    reg_anim_func(1, 1);
                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(i_ariel_obj), (obj_get_rot(i_ariel_obj) + 3) % 6, 1), 1);
                    reg_anim_func(3, 0);
                end
            end
            else begin
                if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                    if (anim_busy(self_obj) == 0) then begin
                        global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                        global_temp := (global_temp + 1) % 6;
                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                            debug_msg("flee loop: rot == " + global_temp);
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                        end
                    end
                end
            end
        end
    end
end

procedure talk_p_proc
begin
    if (local_var(5) > 0) then begin
        call Node008();
    end
    else begin
        if (local_var(4) == 0) then begin
            start_gdialog(537, self_obj, 4, -1, -1);
            gsay_start;
            call Node001();
            gsay_end;
            end_dialogue;
        end
        else begin
            call Node007();
        end
    end
    set_local_var(4, 1);
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (critter_kill_type(self_obj) == KILL_TYPE_children_kills) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
                if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
                    tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
                end
                if (tmp_gen_rep >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (tmp_gen_rep >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (tmp_gen_rep >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (tmp_gen_rep >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (tmp_gen_rep > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (tmp_gen_rep > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(GVAR_TOWN_REP_VAULT_13, global_var(GVAR_TOWN_REP_VAULT_13) + -8);
                debug_msg("Added " + -8 + " to Town Rep");
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
        if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
            tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
        end
        if (tmp_gen_rep >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (tmp_gen_rep >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (tmp_gen_rep >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (tmp_gen_rep >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(GVAR_TOWN_REP_VAULT_13, global_var(GVAR_TOWN_REP_VAULT_13) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 0) then begin
        display_mstr(100);
    end
    else begin
        display_mstr(101);
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(102);
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
        set_map_var(5, 1);
    end
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 114);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_CHILD);
    add_timer_event(self_obj, game_ticks(1), 1);
end

procedure push_p_proc
begin
    if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
        if (anim_busy(self_obj) == 0) then begin
            global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
            global_temp := (global_temp + 1) % 6;
            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                debug_msg("flee loop: rot == " + global_temp);
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                global_temp := (global_temp + 1) % 6;
            end
        end
    end
end

procedure timed_event_p_proc
begin
    variable LVar0 := 0;
    if (fixed_param == 1) then begin
        if (i_ariel_obj != -1) then begin
            if (not(anim_busy(self_obj))) then begin
                LVar0 := tile_num_in_direction(tile_num(i_ariel_obj), random(0, 5), random(2, 4));
                reg_anim_func(2, self_obj);
                reg_anim_func(1, 1);
                if (random(0, 1) == 0) then begin
                    animate_move_obj_to_tile(self_obj, LVar0, 1);
                end
                else begin
                    animate_move_obj_to_tile(self_obj, LVar0, 0);
                end
                reg_anim_func(3, 0);
            end
            add_timer_event(self_obj, game_ticks(random(1, 5)), 1);
        end
    end
end

procedure combat_p_proc
begin
    if (not(critter_is_fleeing(self_obj))) then begin
        critter_set_flee_state(self_obj, 1);
    end
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
end

procedure Node001
begin
    Reply(103);
    giq_option(-3, NAME, 104, Node002a, NEUTRAL_REACTION);
    giq_option(-3, NAME, 105, Node002b, NEUTRAL_REACTION);
    giq_option(-3, NAME, 106, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 107, Node002c, BAD_REACTION);
    giq_option(4, NAME, 108, Node002a, GOOD_REACTION);
    giq_option(4, NAME, 109, Node999, NEUTRAL_REACTION);
end

procedure Node002
begin
    if (local_var(7) == 2) then begin
        Reply(110);
        giq_option(-3, NAME, 113, Node003, NEUTRAL_REACTION);
        giq_option(-3, NAME, 114, Node999, NEUTRAL_REACTION);
        giq_option(4, NAME, 115, Node003, NEUTRAL_REACTION);
        giq_option(4, NAME, 116, Node999, NEUTRAL_REACTION);
    end
    else begin
        if (local_var(7) == 1) then begin
            Reply(112);
            giq_option(-3, NAME, 113, Node003, NEUTRAL_REACTION);
            giq_option(-3, NAME, 114, Node999, NEUTRAL_REACTION);
            giq_option(4, NAME, 115, Node003, NEUTRAL_REACTION);
            giq_option(4, NAME, 116, Node999, NEUTRAL_REACTION);
        end
        else begin
            if (local_var(7) == 3) then begin
                Reply(111);
                giq_option(0, NAME, g_mstr(350), Node999, NEUTRAL_REACTION);
            end
        end
    end
end

procedure Node003
begin
    Reply(117);
    if (q1 == 0) then begin
        giq_option(-3, NAME, 118, Node004a, NEUTRAL_REACTION);
        giq_option(4, NAME, 122, Node004a, NEUTRAL_REACTION);
    end
    if (q2 == 0) then begin
        giq_option(-3, NAME, 119, Node005a, NEUTRAL_REACTION);
        giq_option(4, NAME, 123, Node005a, NEUTRAL_REACTION);
    end
    if (q3 == 0) then begin
        giq_option(-3, NAME, 120, Node006a, NEUTRAL_REACTION);
        giq_option(4, NAME, 124, Node006a, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 121, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 125, Node999, NEUTRAL_REACTION);
end

procedure Node004
begin
    Reply(126);
    giq_option(-3, NAME, 127, Node003, NEUTRAL_REACTION);
    giq_option(-3, NAME, 128, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 129, Node003, NEUTRAL_REACTION);
    giq_option(4, NAME, 130, Node999, NEUTRAL_REACTION);
end

procedure Node005
begin
    Reply(131);
    giq_option(-3, NAME, 132, Node003, NEUTRAL_REACTION);
    giq_option(-3, NAME, 133, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 134, Node003, NEUTRAL_REACTION);
    giq_option(4, NAME, 135, Node999, NEUTRAL_REACTION);
end

procedure Node006
begin
    Reply(136);
    giq_option(-3, NAME, 137, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 138, Node999, NEUTRAL_REACTION);
end

procedure Node007
begin
    float_msg(self_obj, mstr(139), FLOAT_MSG_NORMAL);
end

procedure Node008
begin
    float_msg(self_obj, mstr(140), FLOAT_MSG_NORMAL);
end

procedure Node002a
begin
    set_local_var(7, 1);
    call Node002();
end

procedure Node002b
begin
    set_local_var(7, 2);
    call Node002();
end

procedure Node002c
begin
    set_local_var(7, 3);
    call Node002();
end

procedure Node004a
begin
    q1 := 1;
    call Node004();
end

procedure Node005a
begin
    q2 := 1;
    call Node005();
end

procedure Node006a
begin
    q3 := 1;
    call Node006();
end
