variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;
variable removed_qty2;
variable restock_obj2;
variable restock_amt2;

procedure start;
procedure pickup_p_proc;
procedure critter_p_proc;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node013a;
procedure Node013b;
procedure Node013c;
procedure Node013d;
procedure Node013e;
procedure Node013f;
procedure Node013g;
procedure Node013h;
procedure Node013i;
procedure Node013j;
procedure Node013k;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node018a;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node998;
procedure Node999;

variable In_Timed_Event;

procedure timed_event_p_proc;


procedure start
begin
    if (local_var(7) == 0) then begin
        set_local_var(7, tile_num(self_obj));
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        if ((global_var(GVAR_TOWN_REP_MODOC) <= -1000) == 0) then begin
            set_global_var(GVAR_TOWN_REP_MODOC, -1000);
        end
        call Node998();
    end
end

procedure critter_p_proc
begin
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if (global_var(GVAR_TOWN_REP_MODOC) <= -1000) then begin
            if (critter_is_fleeing(self_obj)) then begin
                if (anim_busy(self_obj) == 0) then begin
                    if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                        if (anim_busy(self_obj) == 0) then begin
                            global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                                debug_msg("flee loop: rot == " + global_temp);
                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                global_temp := (global_temp + 1) % 6;
                            end
                        end
                    end
                end
            end
            else begin
                attack(dude_obj);
            end
        end
    end
    if ((random(0, 100) == 1) and (In_Timed_Event == 0)) then begin
        In_Timed_Event := 1;
        add_timer_event(self_obj, game_ticks(random(5, 9)), 1);
    end
    if (local_var(8) > 0) then begin
        set_local_var(4, 2);
    end
end

procedure use_p_proc
begin
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 0) then begin
        display_mstr(100);
    end
    else begin
        display_mstr(101);
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(102);
end

procedure use_skill_on_p_proc
begin
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        if ((global_var(GVAR_TOWN_REP_MODOC) <= -1000) == 0) then begin
            set_global_var(GVAR_TOWN_REP_MODOC, -1000);
        end
        call Node998();
    end
end

procedure map_enter_p_proc
begin
    if ((CUR_MAP_MODINN) and (elevation(self_obj) != ((global_var(GVAR_MODOC_GENERIC_FLAG_1) bwand 1) != 0))) then begin
        move_to(self_obj, tile_num(self_obj), (global_var(GVAR_MODOC_GENERIC_FLAG_1) bwand 1) != 0);
    end
end

procedure map_update_p_proc
begin
end

procedure talk_p_proc
begin
    if (local_var(4) == 0) then begin
        start_gdialog(1551, self_obj, 4, -1, -1);
        gsay_start;
        call Node001();
        gsay_end;
        end_dialogue;
    end
    else begin
        if (local_var(4) == 1) then begin
            start_gdialog(1551, self_obj, 4, -1, -1);
            gsay_start;
            call Node012();
            gsay_end;
            end_dialogue;
        end
        else begin
            if (local_var(4) == 2) then begin
                if ((game_time - local_var(9)) < (2 * (24 * (60 * (60 * 10))))) then begin
                    start_gdialog(1551, self_obj, 4, -1, -1);
                    gsay_start;
                    call Node019();
                    gsay_end;
                    end_dialogue;
                end
                else begin
                    start_gdialog(1551, self_obj, 4, -1, -1);
                    gsay_start;
                    call Node018();
                    gsay_end;
                    end_dialogue;
                end
            end
        end
    end
end

procedure Node001
begin
    Reply(103);
    giq_option(4, NAME, mstr(104) + dude_name + mstr(105), Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 106, Node003, NEUTRAL_REACTION);
end

procedure Node002
begin
    Reply(107);
    giq_option(4, NAME, 108, Node004, NEUTRAL_REACTION);
    giq_option(4, NAME, 109, Node005, NEUTRAL_REACTION);
    giq_option(4, NAME, 110, Node006, NEUTRAL_REACTION);
end

procedure Node003
begin
    Reply(111);
    giq_option(4, NAME, 108, Node004, NEUTRAL_REACTION);
    giq_option(4, NAME, 109, Node005, NEUTRAL_REACTION);
    giq_option(4, NAME, 110, Node006, NEUTRAL_REACTION);
end

procedure Node004
begin
    Reply(112);
    giq_option(4, NAME, 113, Node005, NEUTRAL_REACTION);
    giq_option(4, NAME, 114, Node006, NEUTRAL_REACTION);
end

procedure Node005
begin
    Reply(115);
    giq_option(4, NAME, 116, Node006, NEUTRAL_REACTION);
end

procedure Node006
begin
    Reply(117);
    giq_option(4, NAME, 118, Node007, NEUTRAL_REACTION);
end

procedure Node007
begin
    Reply(119);
    giq_option(4, NAME, 120, Node008, NEUTRAL_REACTION);
    giq_option(4, NAME, 121, Node009, NEUTRAL_REACTION);
end

procedure Node008
begin
    Reply(122);
    giq_option(4, NAME, 121, Node009, NEUTRAL_REACTION);
end

procedure Node009
begin
    Reply(123);
    giq_option(4, NAME, 124, Node010, NEUTRAL_REACTION);
end

procedure Node010
begin
    Reply(125);
    giq_option(4, NAME, 126, Node011, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(127);
    giq_option(4, NAME, 128, Node999, NEUTRAL_REACTION);
    set_local_var(4, 1);
    restock_obj := create_object(565, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
end

procedure Node012
begin
    Reply(129);
    if (obj_is_carrying_obj_pid(dude_obj, 566) > 0) then begin
        giq_option(4, NAME, 130, Node013, NEUTRAL_REACTION);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 566) == 0) then begin
        giq_option(4, NAME, 131, Node999, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 132, Node999, NEUTRAL_REACTION);
end

procedure Node013
begin
    Reply(133);
    giq_option(4, NAME, 134, Node013a, NEUTRAL_REACTION);
    giq_option(4, NAME, 135, Node013b, NEUTRAL_REACTION);
    giq_option(4, NAME, 136, Node013c, NEUTRAL_REACTION);
    giq_option(4, NAME, 137, Node013d, NEUTRAL_REACTION);
    giq_option(4, NAME, 144, Node014, NEUTRAL_REACTION);
    giq_option(4, NAME, 146, Node999, NEUTRAL_REACTION);
end

procedure Node013a
begin
    if (obj_is_carrying_obj_pid(dude_obj, 566) >= 2) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 566);
        if (2 < removed_qty) then begin
            removed_qty := 2;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 566);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 566);
                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
        end
        restock_obj := 0;
        restock_amt := 0;
        set_local_var(8, 1);
        set_local_var(9, game_time);
        call Node016();
    end
    else begin
        call Node017();
    end
end

procedure Node013b
begin
    if (obj_is_carrying_obj_pid(dude_obj, 566) >= 3) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 566);
        if (3 < removed_qty) then begin
            removed_qty := 3;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 566);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 566);
                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
        end
        restock_obj := 0;
        restock_amt := 0;
        set_local_var(8, 2);
        set_local_var(9, game_time);
        call Node016();
    end
    else begin
        call Node017();
    end
end

procedure Node013c
begin
    if (obj_is_carrying_obj_pid(dude_obj, 566) >= 4) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 566);
        if (4 < removed_qty) then begin
            removed_qty := 4;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 566);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 566);
                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
        end
        restock_obj := 0;
        restock_amt := 0;
        set_local_var(8, 3);
        set_local_var(9, game_time);
        call Node016();
    end
    else begin
        call Node017();
    end
end

procedure Node013d
begin
    if (obj_is_carrying_obj_pid(dude_obj, 566) >= 2) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 566);
        if (2 < removed_qty) then begin
            removed_qty := 2;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 566);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 566);
                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
        end
        restock_obj := 0;
        restock_amt := 0;
        set_local_var(8, 4);
        set_local_var(9, game_time);
        call Node016();
    end
    else begin
        call Node017();
    end
end

procedure Node013e
begin
    if (obj_is_carrying_obj_pid(dude_obj, 566) >= 1) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 566);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 566);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 566);
                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
        end
        restock_obj := 0;
        restock_amt := 0;
        set_local_var(8, 5);
        set_local_var(9, game_time);
        call Node016();
    end
    else begin
        call Node017();
    end
end

procedure Node013f
begin
    if (obj_is_carrying_obj_pid(dude_obj, 566) >= 1) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 566);
        if (1 < removed_qty) then begin
            removed_qty := 1;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 566);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 566);
                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
        end
        restock_obj := 0;
        restock_amt := 0;
        set_local_var(8, 6);
        set_local_var(9, game_time);
        call Node016();
    end
    else begin
        call Node017();
    end
end

procedure Node013g
begin
    if (obj_is_carrying_obj_pid(dude_obj, 566) >= 2) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 566);
        if (2 < removed_qty) then begin
            removed_qty := 2;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 566);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 566);
                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
        end
        restock_obj := 0;
        restock_amt := 0;
        set_local_var(8, 7);
        set_local_var(9, game_time);
        call Node016();
    end
    else begin
        call Node017();
    end
end

procedure Node013h
begin
    if (obj_is_carrying_obj_pid(dude_obj, 566) >= 3) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 566);
        if (3 < removed_qty) then begin
            removed_qty := 3;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 566);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 566);
                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
        end
        restock_obj := 0;
        restock_amt := 0;
        set_local_var(8, 8);
        set_local_var(9, game_time);
        call Node016();
    end
    else begin
        call Node017();
    end
end

procedure Node013i
begin
    if (obj_is_carrying_obj_pid(dude_obj, 566) >= 10) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 566);
        if (10 < removed_qty) then begin
            removed_qty := 10;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 566);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 566);
                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
        end
        restock_obj := 0;
        restock_amt := 0;
        set_local_var(8, 9);
        set_local_var(9, game_time);
        call Node016();
    end
    else begin
        call Node017();
    end
end

procedure Node013j
begin
    if ((obj_is_carrying_obj_pid(dude_obj, 2) == 1) and (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 2) and (obj_is_carrying_obj_pid(dude_obj, 566) >= 4)) then begin
        call Node021();
    end
    else begin
        if (obj_is_carrying_obj_pid(dude_obj, 566) >= 6) then begin
            removed_qty := obj_is_carrying_obj_pid(dude_obj, 2);
            if (6 < removed_qty) then begin
                removed_qty := 6;
            end
            if (removed_qty > 0) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 2);
                if (obj_type(self_obj) == 1) then begin
                    restock_obj := obj_carrying_pid_obj(dude_obj, 2);
                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                        if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                            restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                            debug_msg("armour pid == " + obj_pid(restock_obj));
                            rm_obj_from_inven(dude_obj, restock_obj);
                            add_obj_to_inven(dude_obj, restock_obj);
                        end
                    end
                    else begin
                        if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                            inven_unwield(dude_obj);
                        end
                    end
                end
                restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
                destroy_object(restock_obj);
            end
            restock_obj := 0;
            restock_amt := 0;
            removed_qty2 := obj_is_carrying_obj_pid(dude_obj, 566);
            if (4 < removed_qty2) then begin
                removed_qty2 := 6;
            end
            if (removed_qty2 > 0) then begin
                restock_obj2 := obj_carrying_pid_obj(dude_obj, 566);
                if (obj_type(self_obj) == 1) then begin
                    restock_obj2 := obj_carrying_pid_obj(dude_obj, 566);
                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj2) then begin
                        if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                            restock_obj2 := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                            debug_msg("armour pid == " + obj_pid(restock_obj2));
                            rm_obj_from_inven(dude_obj, restock_obj2);
                            add_obj_to_inven(dude_obj, restock_obj2);
                        end
                    end
                    else begin
                        if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj2) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj2)) then begin
                            inven_unwield(dude_obj);
                        end
                    end
                end
                restock_amt2 := rm_mult_objs_from_inven(dude_obj, restock_obj2, removed_qty2);
                destroy_object(restock_obj2);
            end
            restock_obj2 := 0;
            restock_amt2 := 0;
            set_local_var(8, 10);
            set_local_var(9, game_time);
            call Node016();
        end
        else begin
            call Node017();
        end
    end
end

procedure Node013k
begin
    if (obj_is_carrying_obj_pid(dude_obj, 566) >= 6) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 566);
        if (6 < removed_qty) then begin
            removed_qty := 6;
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 566);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 566);
                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                        inven_unwield(dude_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
        end
        restock_obj := 0;
        restock_amt := 0;
        set_local_var(8, 11);
        set_local_var(9, game_time);
        call Node016();
    end
    else begin
        call Node017();
    end
end

procedure Node014
begin
    Reply(133);
    giq_option(4, NAME, 138, Node013e, NEUTRAL_REACTION);
    giq_option(4, NAME, 139, Node013f, NEUTRAL_REACTION);
    giq_option(4, NAME, 140, Node013g, NEUTRAL_REACTION);
    giq_option(4, NAME, 141, Node013h, NEUTRAL_REACTION);
    giq_option(4, NAME, 144, Node015, NEUTRAL_REACTION);
    giq_option(4, NAME, 145, Node013, NEUTRAL_REACTION);
    giq_option(4, NAME, 146, Node999, NEUTRAL_REACTION);
end

procedure Node015
begin
    Reply(133);
    giq_option(4, NAME, 142, Node013i, NEUTRAL_REACTION);
    if (obj_is_carrying_obj_pid(dude_obj, 2) >= 1) then begin
        giq_option(4, NAME, 143, Node013j, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 160, Node013k, NEUTRAL_REACTION);
    giq_option(4, NAME, 145, Node014, NEUTRAL_REACTION);
    giq_option(4, NAME, 146, Node999, NEUTRAL_REACTION);
end

procedure Node016
begin
    Reply(149);
    giq_option(4, NAME, 148, Node999, NEUTRAL_REACTION);
end

procedure Node017
begin
    Reply(147);
    giq_option(4, NAME, 148, Node999, NEUTRAL_REACTION);
end

procedure Node018
begin
    Reply(150);
    giq_option(4, NAME, 151, Node018a, NEUTRAL_REACTION);
end

procedure Node018a
begin
    if (local_var(8) == 1) then begin
        restock_obj := create_object(384, 0, 0);
        add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    end
    else begin
        if (local_var(8) == 2) then begin
            restock_obj := create_object(20, 0, 0);
            add_mult_objs_to_inven(dude_obj, restock_obj, 1);
        end
        else begin
            if (local_var(8) == 3) then begin
                restock_obj := create_object(6, 0, 0);
                add_mult_objs_to_inven(dude_obj, restock_obj, 1);
            end
            else begin
                if (local_var(8) == 4) then begin
                    restock_obj := create_object(75, 0, 0);
                    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
                end
                else begin
                    if (local_var(8) == 5) then begin
                        restock_obj := create_object(234, 0, 0);
                        add_mult_objs_to_inven(dude_obj, restock_obj, 1);
                    end
                    else begin
                        if (local_var(8) == 6) then begin
                            restock_obj := create_object(4, 0, 0);
                            add_mult_objs_to_inven(dude_obj, restock_obj, 1);
                        end
                        else begin
                            if (local_var(8) == 7) then begin
                                restock_obj := create_object(7, 0, 0);
                                add_mult_objs_to_inven(dude_obj, restock_obj, 1);
                            end
                            else begin
                                if (local_var(8) == 8) then begin
                                    restock_obj := create_object(84, 0, 0);
                                    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
                                end
                                else begin
                                    if (local_var(8) == 9) then begin
                                        restock_obj := create_object(2, 0, 0);
                                        add_mult_objs_to_inven(dude_obj, restock_obj, 1);
                                    end
                                    else begin
                                        if (local_var(8) == 10) then begin
                                            restock_obj := create_object(380, 0, 0);
                                            add_mult_objs_to_inven(dude_obj, restock_obj, 1);
                                        end
                                        else begin
                                            if (local_var(8) == 11) then begin
                                                restock_obj := create_object(575, 0, 0);
                                                add_mult_objs_to_inven(dude_obj, restock_obj, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    set_local_var(9, 0);
    set_local_var(8, 0);
    set_local_var(4, 1);
end

procedure Node019
begin
    Reply(152);
    giq_option(4, NAME, 153, Node999, NEUTRAL_REACTION);
end

procedure Node020
begin
    Reply(154);
    giq_option(4, NAME, 155, Node999, NEUTRAL_REACTION);
end

procedure Node021
begin
    Reply(161);
    giq_option(4, NAME, 162, Node999, NEUTRAL_REACTION);
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
    debug_msg("LVAR_Herebefore == " + local_var(4));
    if (local_var(4) == 0) then begin
        set_local_var(4, 1);
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if (tile_distance(tile_num(self_obj), local_var(7)) < 10) then begin
            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(3, 7)), 0);
        end
        else begin
            animate_move_obj_to_tile(self_obj, tile_num_in_direction(local_var(7), random(0, 5), random(3, 7)), 0);
        end
        In_Timed_Event := 0;
    end
end
