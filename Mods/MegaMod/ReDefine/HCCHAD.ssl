variable Finding_New_Tile;
variable tmp_gen_rep;
variable restock_amt;
variable restock_obj;
variable removed_qty;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure combat_p_proc;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure combat;
procedure timed_event_p_proc;
procedure map_exit_p_proc;
procedure map_update_p_proc;
procedure Node910;
procedure Node920;
procedure Node995;
procedure Node996;
procedure Node997;
procedure Node998;
procedure Node999;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node991;
procedure Node992;

variable Only_Once;
variable stuff;
variable k;
variable from4;
variable fromWTG;
variable doTalk;

import variable Chad_Ptr;


procedure start
begin
    if ((CUR_MAP_BROKEN1) or (CUR_MAP_BROKEN2)) then begin
        Chad_Ptr := self_obj;
    end
end

procedure combat_p_proc
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    if (local_var(7) == 2) then begin
        LVar0 := get_critter_stat(self_obj, STAT_max_hp);
        LVar1 := get_critter_stat(self_obj, STAT_current_hp);
        if (LVar1 < (LVar0 / 4)) then begin
            terminate_combat;
        end
    end
    return 0;
    LVar0 := 0;
    LVar1 := 0;
end

procedure critter_p_proc
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    if ((global_var(GVAR_ENEMY_BROKEN_HILLS) == 1) or (local_var(5) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack(dude_obj);
    end
    if (CUR_MAP_BROKEN2) then begin
        if (map_var(25) == 1) then begin
            set_map_var(25, 2);
            add_timer_event(self_obj, game_ticks(0), 4);
            doTalk := 1;
        end
    end
    if (local_var(7) == 2) then begin
        LVar0 := get_critter_stat(self_obj, STAT_max_hp);
        LVar1 := get_critter_stat(self_obj, STAT_current_hp);
        if (LVar1 < (LVar0 / 4)) then begin
            terminate_combat;
            set_local_var(7, 0);
            set_map_var(31, 1);
            call talk_p_proc();
        end
    end
    return 0;
    LVar0 := 0;
    LVar1 := 0;
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure talk_p_proc
begin
    fromWTG := 1;
    if (local_var(2) == 0) then begin
        set_local_var(2, 1);
        set_local_var(3, (dude_charisma - self_charisma) * 5);
        debug_msg("Base Reaction == " + local_var(3));
    end
    Static_Reaction := 0;
    set_local_var(0, 0);
    debug_msg("Start Reaction == " + local_var(0));
    if (reaction_bonus_karma >= 0) then begin
        reaction_bonus_karma := reaction_bonus_karma / 1000;
    end
    else begin
        reaction_bonus_karma := -1 * (-1 * reaction_bonus_karma / 1000);
    end
    if (global_var(GVAR_TOWN_REP_BROKEN_HILLS) >= 0) then begin
        reaction_bonus_town_rep := global_var(GVAR_TOWN_REP_BROKEN_HILLS) / 2;
    end
    else begin
        reaction_bonus_town_rep := -1 * (-1 * global_var(GVAR_TOWN_REP_BROKEN_HILLS) / 2);
    end
    if (has_trait(TRAIT_TRAIT, dude_obj, TRAIT_sex_appeal)) then begin
        if (dude_gender == self_gender) then begin
            Static_Reaction := Static_Reaction + -20;
        end
        else begin
            Static_Reaction := Static_Reaction + 20;
        end
        debug_msg("Sex Appeal Bonus == " + Static_Reaction);
    end
    else begin
        debug_msg("Sex Appeal Bonus == 0");
    end
    if (Evil_Critter == 1) then begin
        if (reaction_bonus_karma >= 0) then begin
            Static_Reaction := Static_Reaction - reaction_bonus_karma;
        end
        else begin
            Static_Reaction := Static_Reaction + reaction_bonus_karma;
        end
        debug_msg("Karma Reaction Bonus == " + Static_Reaction);
        if (reaction_bonus_town_rep >= 0) then begin
            Static_Reaction := Static_Reaction - reaction_bonus_town_rep;
        end
        else begin
            Static_Reaction := Static_Reaction + reaction_bonus_town_rep;
        end
        debug_msg("Town Rep Bonus == " + Static_Reaction);
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
        if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
            tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
        end
        if (tmp_gen_rep >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (tmp_gen_rep >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (tmp_gen_rep >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (tmp_gen_rep >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (global_var(GVAR_KARMA_HOLY_WARRIOR) == 1) then begin
            Static_Reaction := Static_Reaction - 20;
        end
        else begin
            if (global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES) == 1) then begin
                Static_Reaction := Static_Reaction - 15;
            end
            else begin
                if (global_var(GVAR_KARMA_SHIELD_OF_HOPE) == 1) then begin
                    Static_Reaction := Static_Reaction - 10;
                end
                else begin
                    if (global_var(GVAR_KARMA_DEFENDER) == 1) then begin
                        Static_Reaction := Static_Reaction - 5;
                    end
                    else begin
                        if (global_var(GVAR_KARMA_WANDERER) == 1) then begin
                            Static_Reaction := Static_Reaction - 0;
                        end
                        else begin
                            if (global_var(GVAR_KARMA_BETRAYER) == 1) then begin
                                Static_Reaction := Static_Reaction + -5;
                            end
                            else begin
                                if (global_var(GVAR_KARMA_SWORD_OF_DESPAIR) == 1) then begin
                                    Static_Reaction := Static_Reaction + -10;
                                end
                                else begin
                                    if (global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE) == 1) then begin
                                        Static_Reaction := Static_Reaction + -15;
                                    end
                                    else begin
                                        Static_Reaction := Static_Reaction + -20;
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        debug_msg("Bad Person Reaction Bonus == " + Static_Reaction);
    end
    else begin
        Static_Reaction := Static_Reaction + reaction_bonus_karma;
        debug_msg("Karma Reaction Bonus == " + Static_Reaction);
        Static_Reaction := Static_Reaction + reaction_bonus_town_rep;
        debug_msg("Town Rep Bonus == " + Static_Reaction);
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
        if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
            tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
        end
        if (tmp_gen_rep >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (tmp_gen_rep >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (tmp_gen_rep >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (tmp_gen_rep >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (global_var(GVAR_KARMA_HOLY_WARRIOR) == 1) then begin
            Static_Reaction := Static_Reaction + 20;
        end
        else begin
            if (global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES) == 1) then begin
                Static_Reaction := Static_Reaction + 15;
            end
            else begin
                if (global_var(GVAR_KARMA_SHIELD_OF_HOPE) == 1) then begin
                    Static_Reaction := Static_Reaction + 10;
                end
                else begin
                    if (global_var(GVAR_KARMA_DEFENDER) == 1) then begin
                        Static_Reaction := Static_Reaction + 5;
                    end
                    else begin
                        if (global_var(GVAR_KARMA_WANDERER) == 1) then begin
                            Static_Reaction := Static_Reaction + 0;
                        end
                        else begin
                            if (global_var(GVAR_KARMA_BETRAYER) == 1) then begin
                                Static_Reaction := Static_Reaction + -5;
                            end
                            else begin
                                if (global_var(GVAR_KARMA_SWORD_OF_DESPAIR) == 1) then begin
                                    Static_Reaction := Static_Reaction + -10;
                                end
                                else begin
                                    if (global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE) == 1) then begin
                                        Static_Reaction := Static_Reaction + -15;
                                    end
                                    else begin
                                        Static_Reaction := Static_Reaction + -20;
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        debug_msg("Good Person Reaction Bonus == " + Static_Reaction);
    end
    if (Slavery_Tolerant == 0) then begin
        if (global_var(GVAR_REPUTATION_SLAVER) == 1) then begin
            Static_Reaction := Static_Reaction + (2 * -25);
        end
    end
    else begin
        if (Slavery_Tolerant == 1) then begin
            if (global_var(GVAR_REPUTATION_SLAVER) == 1) then begin
                Static_Reaction := Static_Reaction + -25;
            end
        end
        else begin
            if (Slavery_Tolerant == 3) then begin
                if (global_var(GVAR_REPUTATION_SLAVER) == 1) then begin
                    Static_Reaction := Static_Reaction - -25;
                end
            end
        end
    end
    debug_msg("Slaver + Aligned Reaction == " + Static_Reaction);
    Static_Reaction := Static_Reaction + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence));
    debug_msg("Presence Reaction == " + Static_Reaction);
    if (global_var(GVAR_CHILDKILLER_REPUTATION) >= 2) then begin
        Static_Reaction := Static_Reaction + -30;
    end
    debug_msg("Childkiller Reaction == " + Static_Reaction);
    if (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality)) then begin
        if (Evil_Critter == 1) then begin
            if (Static_Reaction > 0) then begin
                Static_Reaction := Static_Reaction * -1;
            end
        end
        else begin
            if (Static_Reaction < 0) then begin
                Static_Reaction := Static_Reaction * -1;
            end
        end
    end
    set_local_var(0, local_var(3) + Static_Reaction);
    debug_msg("Initial Reaction == " + local_var(0));
    if (local_var(0) <= -75) then begin
        set_local_var(1, -4);
    end
    else begin
        if (local_var(0) <= -50) then begin
            set_local_var(1, -3);
        end
        else begin
            if (local_var(0) <= -25) then begin
                set_local_var(1, -2);
            end
            else begin
                if (local_var(0) <= -10) then begin
                    set_local_var(1, -1);
                end
                else begin
                    if (local_var(0) <= 10) then begin
                        set_local_var(1, 0);
                    end
                    else begin
                        if (local_var(0) <= 25) then begin
                            set_local_var(1, 1);
                        end
                        else begin
                            if (local_var(0) <= 50) then begin
                                set_local_var(1, 2);
                            end
                            else begin
                                if (local_var(0) <= 75) then begin
                                    set_local_var(1, 3);
                                end
                                else begin
                                    set_local_var(1, 4);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    if (global_var(GVAR_BH_CHAD) == 7) then begin
        float_msg(self_obj, mstr(400), FLOAT_MSG_YELLOW);
    end
    else begin
        if (local_var(6) == 1) then begin
            call Node998();
        end
        else begin
            if (doTalk == 1) then begin
                doTalk := 0;
                set_local_var(7, 1);
                start_gdialog(613, self_obj, 4, -1, -1);
                gsay_start;
                call Node026();
                gsay_end;
                end_dialogue;
            end
            else begin
                if (map_var(31) == 1) then begin
                    start_gdialog(613, self_obj, 4, -1, -1);
                    gsay_start;
                    call Node033();
                    gsay_end;
                    end_dialogue;
                end
                else begin
                    if (CUR_MAP_BHRNDDST) then begin
                        float_msg(self_obj, mstr(random(173, 175)), FLOAT_MSG_YELLOW);
                    end
                    else begin
                        if (global_var(GVAR_BROKEN_HILLS_CARAVAN_POOCH_SCREW) == 1) then begin
                            float_msg(self_obj, mstr(172), FLOAT_MSG_YELLOW);
                        end
                        else begin
                            if (global_var(GVAR_BH_CARAVAN) == 5) then begin
                                set_global_var(GVAR_BROKEN_HILLS_CARAVAN_POOCH_SCREW, 1);
                                float_msg(self_obj, mstr(random(169, 170)), FLOAT_MSG_YELLOW);
                            end
                            else begin
                                if ((global_var(GVAR_BH_CARAVAN) == 3) or (global_var(GVAR_BH_CARAVAN) == 2)) then begin
                                    set_global_var(GVAR_BH_CARAVAN, 0);
                                    item_caps_adjust(dude_obj, 200);
                                    add_timer_event(self_obj, 1, 1);
                                end
                                else begin
                                    if (global_var(GVAR_ENEMY_BROKEN_HILLS) == 1) then begin
                                        start_gdialog(613, self_obj, 4, -1, -1);
                                        gsay_start;
                                        call Node016();
                                        gsay_end;
                                        end_dialogue;
                                    end
                                    else begin
                                        if (local_var(1) <= -2) then begin
                                            call Node016();
                                        end
                                        else begin
                                            start_gdialog(613, self_obj, 4, -1, -1);
                                            gsay_start;
                                            if (dude_iq == 1) then begin
                                                call Node005();
                                            end
                                            else begin
                                                if ((dude_iq == 2) or (dude_iq == 3)) then begin
                                                    call Node006();
                                                end
                                                else begin
                                                    call Node004();
                                                end
                                            end
                                            gsay_end;
                                            end_dialogue;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    set_local_var(4, 1);
end

procedure destroy_p_proc
begin
    set_global_var(GVAR_CHAD_DEAD, 1);
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
        if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
            tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
        end
        if (tmp_gen_rep >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (tmp_gen_rep >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (tmp_gen_rep >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (tmp_gen_rep >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(GVAR_TOWN_REP_BROKEN_HILLS, global_var(GVAR_TOWN_REP_BROKEN_HILLS) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(101);
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(6, 1);
        if (local_var(7) == 0) then begin
            set_global_var(GVAR_ENEMY_BROKEN_HILLS, 1);
        end
    end
end

procedure map_enter_p_proc
begin
    if ((CUR_MAP_BROKEN1) or (CUR_MAP_BROKEN2)) then begin
        Chad_Ptr := self_obj;
    end
    Only_Once := 0;
    if (CUR_MAP_BHRNDDST) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 0);
    end
    else begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 120);
    end
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_TOUGH_CITIZEN);
    if ((global_var(GVAR_CHAD_DEAD) == 1) or (map_var(25) == 2)) then begin
        if (obj_is_visible_flag(self_obj)) then begin
            set_obj_visibility(self_obj, 1);
        end
    end
    else begin
        if (not(is_loading_game)) then begin
            if (CUR_MAP_BROKEN1) then begin
                if (not(obj_is_visible_flag(self_obj))) then begin
                    set_obj_visibility(self_obj, 0);
                end
            end
            else begin
                if ((CUR_MAP_GECKSETL) or (CUR_MAP_NCRENT) or (CUR_MAP_VCTYCTYD)) then begin
                    if ((global_var(GVAR_BH_CARAVAN) == 3) or (global_var(GVAR_BH_CARAVAN) == 2) and (global_var(GVAR_BH_CHAD) != 7) and (global_var(GVAR_CHAD_DEAD) == 0)) then begin
                        if (not(obj_is_visible_flag(self_obj))) then begin
                            set_obj_visibility(self_obj, 0);
                        end
                    end
                    else begin
                        if (obj_is_visible_flag(self_obj)) then begin
                            set_obj_visibility(self_obj, 1);
                        end
                    end
                end
            end
        end
    end
    if (global_var(GVAR_CHAD_DEAD) == 1) then begin
        destroy_object(self_obj);
    end
end

procedure combat
begin
end

procedure timed_event_p_proc
begin
    variable LVar0 := 0;
    if (fixed_param == 1) then begin
        game_ui_disable;
        float_msg(self_obj, mstr(171), FLOAT_MSG_YELLOW);
        add_timer_event(self_obj, game_ticks(2), 2);
    end
    else begin
        if (fixed_param == 2) then begin
            gfade_out(600);
            LVar0 := tile_num(self_obj);
            move_to(self_obj, 0, 0);
            set_obj_visibility(self_obj, 1);
            move_to(self_obj, LVar0, 0);
            gfade_in(600);
            game_ui_enable;
        end
        else begin
            if (fixed_param == 3) then begin
                display_mstr(300);
                give_exp_points(750);
                display_msg(g_mstr(100) + 750 + g_mstr(101));
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -5);
                debug_msg("Player gains " + -5 + " Karma Points.");
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
                if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
                    tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
                end
                if (tmp_gen_rep >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (tmp_gen_rep >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (tmp_gen_rep >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (tmp_gen_rep >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (tmp_gen_rep > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (tmp_gen_rep > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                gfade_out(600);
                set_obj_visibility(self_obj, 1);
                gfade_in(600);
                set_global_var(GVAR_BH_CHAD, 9);
            end
            else begin
                if (fixed_param == 4) then begin
                    call talk_p_proc();
                end
            end
        end
    end
    return 0;
    LVar0 := 0;
end

procedure map_exit_p_proc
begin
    if ((CUR_MAP_GECKSETL) or (CUR_MAP_NCRENT) or (CUR_MAP_VCTYCTYD)) then begin
        if ((global_var(GVAR_BH_CARAVAN) == 3) or (global_var(GVAR_BH_CARAVAN) == 2)) then begin
            set_global_var(GVAR_BH_CARAVAN, 0);
        end
    end
    if (global_var(GVAR_BH_CHAD) == 9) then begin
        destroy_object(self_obj);
    end
end

procedure map_update_p_proc
begin
    if ((CUR_MAP_BROKEN1) or (CUR_MAP_BROKEN2)) then begin
        Chad_Ptr := self_obj;
    end
    if (CUR_MAP_BHRNDDST) then begin
        if (map_var(1) <= 0) then begin
            float_msg(self_obj, g_mstr(450), FLOAT_MSG_YELLOW);
        end
    end
end

procedure Node910
begin
end

procedure Node920
begin
end

procedure Node995
begin
    if (dude_charisma >= 7) then begin
        set_local_var(3, 100);
        set_local_var(1, 4);
    end
    else begin
        set_local_var(1, -4);
        set_local_var(3, -100);
    end
end

procedure Node996
begin
    set_local_var(1, -4);
    set_local_var(3, -100);
end

procedure Node997
begin
    if (dude_charisma >= 8) then begin
        call Node004();
    end
    else begin
        call Node005();
    end
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
end

procedure Node001
begin
end

procedure Node002
begin
end

procedure Node003
begin
end

procedure Node004
begin
    from4 := 1;
    if (fromWTG) then begin
        Reply(120);
    end
    else begin
        Reply(121);
    end
    giq_option(-1, NAME, 122, Node005, NEUTRAL_REACTION);
    if ((dude_iq > 1) and (dude_iq < 3)) then begin
        giq_option(4, NAME, 123, Node006, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_BH_CHAD) >= 1) and (global_var(GVAR_BH_CHAD) <= 4)) then begin
        giq_option(4, NAME, 124, Node008, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_BH_CHAD) == 5) then begin
        giq_option(4, NAME, 126, Node022, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 127, Node006, NEUTRAL_REACTION);
    giq_option(4, NAME, 128, Node007, NEUTRAL_REACTION);
    giq_option(4, NAME, 129, Node999, NEUTRAL_REACTION);
end

procedure Node005
begin
    Reply(130);
    giq_option(1, NAME, 131, Node999, NEUTRAL_REACTION);
end

procedure Node006
begin
    fromWTG := 0;
    if (from4) then begin
        Reply(132);
    end
    else begin
        if (dude_iq < 4) then begin
            Reply(133);
        end
        else begin
            Reply(134);
            giq_option(4, NAME, 137, Node013, GOOD_REACTION);
            giq_option(4, NAME, 138, Node014, BAD_REACTION);
        end
    end
    if ((dude_iq > 1) and (dude_iq < 3)) then begin
        giq_option(2, NAME, 135, Node999, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 136, Node012, NEUTRAL_REACTION);
    giq_option(4, NAME, 139, Node004, NEUTRAL_REACTION);
    giq_option(4, NAME, 140, Node999, NEUTRAL_REACTION);
end

procedure Node007
begin
    fromWTG := 0;
    Reply(141);
    giq_option(4, NAME, 142, Node004, NEUTRAL_REACTION);
    giq_option(4, NAME, 143, Node999, NEUTRAL_REACTION);
end

procedure Node008
begin
    fromWTG := 0;
    Reply(144);
    giq_option(4, NAME, 145, Node009, NEUTRAL_REACTION);
    giq_option(4, NAME, 146, Node999, NEUTRAL_REACTION);
end

procedure Node009
begin
    Reply(147);
    giq_option(4, NAME, 150, Node999, NEUTRAL_REACTION);
end

procedure Node010
begin
    Reply(151);
    giq_option(4, NAME, 152, combat, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(153);
    giq_option(4, NAME, 154, combat, NEUTRAL_REACTION);
    giq_option(4, NAME, 155, Node999, NEUTRAL_REACTION);
end

procedure Node012
begin
    fromWTG := 0;
    Reply(156);
    giq_option(4, NAME, 157, Node004, BAD_REACTION);
    giq_option(4, NAME, 158, Node999, NEUTRAL_REACTION);
end

procedure Node013
begin
    Reply(159);
    giq_option(4, NAME, 160, Node012, NEUTRAL_REACTION);
    giq_option(4, NAME, 161, Node014, BAD_REACTION);
    giq_option(4, NAME, 163, Node999, NEUTRAL_REACTION);
end

procedure Node014
begin
    fromWTG := 0;
    Reply(164);
    giq_option(4, NAME, 165, Node004, BAD_REACTION);
    giq_option(4, NAME, 166, Node999, NEUTRAL_REACTION);
end

procedure Node015
begin
    float_msg(self_obj, mstr(167), FLOAT_MSG_YELLOW);
end

procedure Node016
begin
    float_msg(self_obj, mstr(168), FLOAT_MSG_YELLOW);
end

procedure Node017
begin
    Reply(200);
    giq_option(4, NAME, 201, Node023, NEUTRAL_REACTION);
    giq_option(4, NAME, 203, Node999, NEUTRAL_REACTION);
end

procedure Node018
begin
    Reply(202);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_TOUGH_CITIZEN);
    set_local_var(6, 1);
    set_local_var(7, 2);
    giq_option(4, NAME, 205, Node998, NEUTRAL_REACTION);
    float_msg(self_obj, mstr(206), FLOAT_MSG_YELLOW);
end

procedure Node019
begin
    if (not(obj_is_carrying_obj_pid(dude_obj, 72))) then begin
        Reply(204);
    end
    else begin
        Reply(2040);
    end
    giq_option(4, NAME, 205, Node020, NEUTRAL_REACTION);
end

procedure Node020
begin
    item_caps_adjust(dude_obj, 1000);
    call Node024();
    if (obj_is_carrying_obj_pid(dude_obj, 72)) then begin
        removed_qty := obj_is_carrying_obj_pid(dude_obj, 72);
    end
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 72);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 72);
            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        destroy_object(restock_obj);
    end
    restock_obj := 0;
    restock_amt := 0;
end

procedure Node021
begin
    float_msg(self_obj, mstr(206), FLOAT_MSG_YELLOW);
    call Node992();
    set_local_var(5, 1);
    set_local_var(6, 1);
    attack(dude_obj);
end

procedure Node022
begin
    if (is_success(roll_vs_skill(dude_obj, 14, -15))) then begin
        call Node019();
    end
    else begin
        call Node017();
    end
end

procedure Node023
begin
    if (is_success(roll_vs_skill(dude_obj, 14, -30))) then begin
        call Node019();
    end
    else begin
        call Node018();
    end
end

procedure Node024
begin
    add_timer_event(self_obj, game_ticks(1), 3);
end

procedure Node025
begin
    if (is_success(roll_vs_skill(dude_obj, 14, -30))) then begin
        call Node019();
    end
    else begin
        call Node018();
    end
end

procedure Node026
begin
    Reply(208);
    giq_option(4, NAME, 209, Node027, NEUTRAL_REACTION);
end

procedure Node027
begin
    Reply(210);
    if (global_var(GVAR_RESERVED) == 1) then begin
        giq_option(4, NAME, 211, Node028, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 219, Node032, NEUTRAL_REACTION);
    end
end

procedure Node028
begin
    Reply(212);
    giq_option(4, NAME, 213, Node029, NEUTRAL_REACTION);
end

procedure Node029
begin
    Reply(214);
    giq_option(4, NAME, 215, Node030, NEUTRAL_REACTION);
end

procedure Node030
begin
    Reply(216);
    giq_option(4, NAME, 217, Node031, NEUTRAL_REACTION);
end

procedure Node031
begin
    Reply(218);
    giq_option(4, NAME, g_mstr(350), Node991, NEUTRAL_REACTION);
end

procedure Node032
begin
    Reply(mstr(220) + " " + mstr(216));
    giq_option(4, NAME, 217, Node031, NEUTRAL_REACTION);
end

procedure Node033
begin
    set_global_var(GVAR_BH_CHAD, 5);
    Reply(221);
    giq_option(4, NAME, 222, Node999, NEUTRAL_REACTION);
end

procedure Node991
begin
    set_global_var(GVAR_BH_CHAD, 5);
    set_local_var(5, 1);
    set_local_var(6, 1);
    attack(dude_obj);
end

procedure Node992
begin
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_TOUGH_CITIZEN);
    set_local_var(7, 2);
end
