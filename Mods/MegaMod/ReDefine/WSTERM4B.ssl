variable tmp_gen_rep;
variable global_temp;
variable restock_obj;

procedure start;
procedure use_p_proc;
procedure talk_p_proc;
procedure look_p_proc;
procedure description_p_proc;
procedure Node001;
procedure Node010;
procedure Node010a;
procedure Node010b;
procedure Node010c;
procedure Node010d;
procedure Node010e;
procedure Node011;
procedure Node011a;
procedure Node011b;
procedure Node012;
procedure Node013;
procedure Node013a;
procedure Node013b;
procedure Node013c;
procedure Node013d;
procedure Node013e;
procedure Node013f;
procedure Node013g;
procedure Node014;
procedure Node999;
procedure use_skill_on_p_proc;
procedure Check_And_Kill_Row(variable arg0, variable arg1);
procedure Check_And_Kill(variable arg0);

variable kill_player;


procedure start
begin
end

procedure use_p_proc
begin
    if (get_critter_stat(source_obj, STAT_iq) < 4) then begin
        if (source_obj == dude_obj) then begin
            display_mstr(102);
        end
        else begin
            display_msg(obj_name(source_obj) + mstr(200));
        end
    end
    else begin
        dialogue_system_enter;
    end
end

procedure talk_p_proc
begin
    start_gdialog(163, self_obj, 4, -1, -1);
    gsay_start;
    call Node001();
    gsay_end;
    end_dialogue;
    if (kill_player == 1) then begin
        kill_player := 0;
        critter_dmg(dude_obj, 10000, 0);
    end
end

procedure look_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(101);
end

procedure Node001
begin
    Reply(103);
    giq_option(4, NAME, 104, Node010, NEUTRAL_REACTION);
    giq_option(4, NAME, 105, Node013, NEUTRAL_REACTION);
    giq_option(4, NAME, 106, Node999, NEUTRAL_REACTION);
end

procedure Node010
begin
    Reply(mstr(108) + mstr(109) + mstr(110) + mstr(111) + mstr(112) + mstr(113));
    giq_option(4, NAME, 114, Node010a, NEUTRAL_REACTION);
    giq_option(4, NAME, 115, Node010b, NEUTRAL_REACTION);
    giq_option(4, NAME, 116, Node010c, NEUTRAL_REACTION);
    giq_option(4, NAME, 117, Node010d, NEUTRAL_REACTION);
    giq_option(4, NAME, 118, Node010e, NEUTRAL_REACTION);
    giq_option(4, NAME, 119, Node011, NEUTRAL_REACTION);
    giq_option(4, NAME, 120, Node999, NEUTRAL_REACTION);
end

procedure Node010a
begin
    set_local_var(1, 1);
    call Node012();
end

procedure Node010b
begin
    set_local_var(1, 2);
    call Node012();
end

procedure Node010c
begin
    set_local_var(1, 3);
    call Node012();
end

procedure Node010d
begin
    set_local_var(1, 4);
    call Node012();
end

procedure Node010e
begin
    set_local_var(1, 0);
    call Node012();
end

procedure Node011
begin
    Reply(121);
    giq_option(4, NAME, 122, Node011a, NEUTRAL_REACTION);
    giq_option(4, NAME, 123, Node011b, NEUTRAL_REACTION);
end

procedure Node011a
begin
    set_local_var(1, 5);
    call Node012();
end

procedure Node011b
begin
    set_local_var(1, 6);
    call Node012();
end

procedure Node012
begin
    Reply(mstr(125) + mstr(126) + mstr(170 + local_var(1)) + mstr(127) + mstr(180 + local_var(0)));
    giq_option(4, NAME, 128, Node010, NEUTRAL_REACTION);
    giq_option(4, NAME, 129, Node013, NEUTRAL_REACTION);
    giq_option(4, NAME, 130, Node014, NEUTRAL_REACTION);
    giq_option(4, NAME, 131, Node999, NEUTRAL_REACTION);
end

procedure Node013
begin
    Reply(mstr(132) + mstr(133) + mstr(134) + mstr(135) + mstr(136) + mstr(137) + mstr(138) + mstr(139));
    giq_option(4, NAME, 140, Node013a, NEUTRAL_REACTION);
    giq_option(4, NAME, 141, Node013b, NEUTRAL_REACTION);
    giq_option(4, NAME, 142, Node013c, NEUTRAL_REACTION);
    giq_option(4, NAME, 143, Node013d, NEUTRAL_REACTION);
    giq_option(4, NAME, 144, Node013e, NEUTRAL_REACTION);
    giq_option(4, NAME, 145, Node013f, NEUTRAL_REACTION);
    giq_option(4, NAME, 146, Node013g, NEUTRAL_REACTION);
    giq_option(4, NAME, 147, Node999, NEUTRAL_REACTION);
end

procedure Node013a
begin
    set_local_var(0, 1);
    call Node012();
end

procedure Node013b
begin
    set_local_var(0, 0);
    call Node012();
end

procedure Node013c
begin
    set_local_var(0, 2);
    call Node012();
end

procedure Node013d
begin
    set_local_var(0, 3);
    call Node012();
end

procedure Node013e
begin
    set_local_var(0, 4);
    call Node012();
end

procedure Node013f
begin
    set_local_var(0, 5);
    call Node012();
end

procedure Node013g
begin
    set_local_var(0, 6);
    call Node012();
end

procedure Node014
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    variable LVar3 := 0;
    variable LVar4 := 0;
    LVar0 := LVar0 + Check_And_Kill(16777376);
    if ((LVar0 > 0) and (LVar4 == 0)) then begin
        if (local_var(1) == 0) then begin
            LVar4 := 1;
            LVar1 := 3;
        end
    end
    LVar0 := LVar0 + Check_And_Kill(16777377);
    if ((LVar0 > 0) and (LVar4 == 0)) then begin
        if (local_var(1) == 5) then begin
            LVar4 := 1;
            LVar1 := 3;
        end
    end
    LVar0 := LVar0 + Check_And_Kill(16777305);
    if ((LVar0 > 0) and (LVar4 == 0)) then begin
        if (local_var(1) == 0) then begin
            LVar4 := 1;
            LVar1 := 3;
        end
    end
    LVar0 := LVar0 + Check_And_Kill(16777313);
    if ((LVar0 > 0) and (LVar4 == 0)) then begin
        if (local_var(1) == 0) then begin
            LVar4 := 1;
            LVar1 := 3;
        end
    end
    LVar0 := LVar0 + Check_And_Kill(16777323);
    if ((LVar0 > 0) and (LVar4 == 0)) then begin
        if (local_var(1) == 0) then begin
            LVar4 := 1;
            LVar1 := 1;
        end
    end
    LVar0 := LVar0 + Check_And_Kill(16777378);
    if ((LVar0 > 0) and (LVar4 == 0)) then begin
        if (local_var(1) == 0) then begin
            LVar4 := 1;
            LVar1 := 3;
        end
    end
    LVar0 := LVar0 + Check_And_Kill(16777368);
    if ((LVar0 > 0) and (LVar4 == 0)) then begin
        if (local_var(1) == 6) then begin
            LVar4 := 1;
            LVar1 := 1;
        end
    end
    LVar0 := LVar0 + Check_And_Kill(16777379);
    if ((LVar0 > 0) and (LVar4 == 0)) then begin
        if (local_var(1) == 0) then begin
            LVar4 := 1;
            LVar1 := 3;
        end
    end
    LVar0 := LVar0 + Check_And_Kill(16777380);
    if ((LVar0 > 0) and (LVar4 == 0)) then begin
        if (local_var(1) == 0) then begin
            LVar4 := 1;
            LVar1 := 3;
        end
    end
    LVar0 := LVar0 + Check_And_Kill(16777381);
    if ((LVar0 > 0) and (LVar4 == 0)) then begin
        if (local_var(1) == 1) then begin
            LVar4 := 1;
            LVar1 := 1;
        end
    end
    LVar0 := LVar0 + Check_And_Kill(16777278);
    if ((LVar0 > 0) and (LVar4 == 0)) then begin
        if (local_var(1) == 0) then begin
            LVar4 := 1;
            LVar1 := 3;
        end
    end
    LVar0 := LVar0 + Check_And_Kill(16777558);
    if ((LVar0 > 0) and (LVar4 == 0)) then begin
        if (local_var(1) == 1) then begin
            LVar4 := 1;
            LVar1 := 1;
        end
    end
    LVar0 := LVar0 + Check_And_Kill(16777600);
    if ((LVar0 > 0) and (LVar4 == 0)) then begin
        if (local_var(1) == 1) then begin
            LVar4 := 1;
            LVar1 := 1;
        end
    end
    LVar0 := LVar0 + Check_And_Kill(16777859);
    if ((LVar0 > 0) and (LVar4 == 0)) then begin
        if (local_var(1) == 0) then begin
            LVar4 := 1;
            LVar1 := 3;
        end
    end
    LVar0 := LVar0 + Check_And_Kill(16777872);
    if ((LVar0 > 0) and (LVar4 == 0)) then begin
        if (local_var(1) == 0) then begin
            LVar4 := 1;
            LVar1 := 3;
        end
    end
    LVar0 := LVar0 + Check_And_Kill(16777801);
    if ((LVar0 > 0) and (LVar4 == 0)) then begin
        if (local_var(1) == 0) then begin
            LVar4 := 1;
            LVar1 := 3;
        end
    end
    LVar0 := LVar0 + Check_And_Kill(16777762);
    if ((LVar0 > 0) and (LVar4 == 0)) then begin
        if (local_var(1) == 0) then begin
            LVar4 := 1;
            LVar1 := 3;
        end
    end
    LVar3 := Check_And_Kill(16777292);
    if (LVar3 > 0) then begin
        LVar1 := 0;
        LVar2 := 1;
        LVar3 := 0;
    end
    LVar3 := Check_And_Kill(16777293);
    if (LVar3 > 0) then begin
        LVar1 := 0;
        LVar2 := 1;
        LVar3 := 0;
    end
    LVar3 := Check_And_Kill(16777294);
    if (LVar3 > 0) then begin
        LVar1 := 0;
        LVar2 := 1;
        LVar3 := 0;
    end
    LVar3 := Check_And_Kill(16777352);
    if (LVar3 > 0) then begin
        LVar1 := 0;
        LVar0 := LVar0 + LVar3;
        LVar3 := 0;
    end
    LVar3 := Check_And_Kill(16777295);
    if (LVar3 > 0) then begin
        LVar1 := 0;
        LVar0 := LVar0 + LVar3;
        LVar3 := 0;
    end
    LVar3 := Check_And_Kill(16777407);
    if (LVar3 > 0) then begin
        LVar1 := 0;
        LVar0 := LVar0 + LVar3;
        LVar3 := 0;
    end
    LVar3 := Check_And_Kill(16777597);
    if (LVar3 > 0) then begin
        LVar1 := 0;
        LVar0 := LVar0 + LVar3;
        LVar3 := 0;
    end
    LVar3 := Check_And_Kill(16777596);
    if (LVar3 > 0) then begin
        LVar1 := 0;
        LVar0 := LVar0 + LVar3;
        LVar3 := 0;
    end
    LVar3 := Check_And_Kill(16777595);
    if (LVar3 > 0) then begin
        LVar1 := 0;
        LVar0 := LVar0 + LVar3;
        LVar3 := 0;
    end
    LVar3 := Check_And_Kill(16777687);
    if (LVar3 > 0) then begin
        LVar1 := 0;
        LVar0 := LVar0 + LVar3;
        LVar3 := 0;
    end
    if (tile_in_tile_rect(16525, 16312, 18325, 18113, dude_tile)) then begin
        LVar0 := LVar0 + 1;
        kill_player := 1;
        while (dude_iq > 1) do begin
            set_critter_stat(dude_obj, STAT_iq, -1);
        end
        LVar4 := 1;
        LVar1 := 3;
    end
    if (LVar0 > 0) then begin
        if ((kill_player == 1) and (LVar0 > 1)) then begin
            set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + (-100 * (LVar0 - 1)));
        end
        else begin
            if (kill_player == 0) then begin
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + (-100 * LVar0));
            end
        end
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
        if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
            tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
        end
        if (tmp_gen_rep >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (tmp_gen_rep >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (tmp_gen_rep >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (tmp_gen_rep >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    if ((local_var(2) == 0) and ((LVar0 > 0) or (LVar2 == 1))) then begin
        give_exp_points(500);
        display_msg(g_mstr(100) + 500 + g_mstr(101));
        set_local_var(2, 1);
    end
    debug_msg("Room_Capacity == " + LVar0);
    if ((LVar0 == 0) and (LVar2 == 0)) then begin
        Reply(148);
    end
    else begin
        if (LVar0 > 1) then begin
            Reply(154);
        end
        else begin
            if ((LVar2 == 1) or (LVar4 == 0)) then begin
                Reply(155);
            end
            else begin
                if (local_var(0) == 0) then begin
                    if (LVar1 == 3) then begin
                        restock_obj := create_object(322, 0, 0);
                    end
                    else begin
                        if (LVar1 == 1) then begin
                            restock_obj := create_object(324, 0, 0);
                        end
                        else begin
                            if (LVar1 == 2) then begin
                                restock_obj := create_object(323, 0, 0);
                            end
                            else begin
                                if (LVar1 == 4) then begin
                                    restock_obj := create_object(321, 0, 0);
                                end
                            end
                        end
                    end
                    move_to(restock_obj, 16515, 0);
                    Reply(mstr(151) + mstr(152));
                end
                else begin
                    Reply(150);
                end
            end
        end
    end
    giq_option(4, NAME, 153, Node999, NEUTRAL_REACTION);
end

procedure Node999
begin
end

procedure use_skill_on_p_proc
begin
    script_overrides;
    if (action_being_used == 12) then begin
        call use_p_proc();
    end
end

procedure Check_And_Kill_Row(variable arg0, variable arg1)
begin
    variable LVar2 := 0;
    variable LVar3 := 0;
    variable LVar4 := 0;
    variable LVar5 := 0;
    LVar2 := arg0;
    LVar3 := arg0 + 10;
    while (LVar2 <= LVar3) do begin
        if (tile_contains_obj_pid(LVar2, elevation(self_obj), arg1)) then begin
            LVar4 := tile_contains_pid_obj(LVar2, elevation(self_obj), arg1);
            if ((critter_state(LVar4) bwand 1) == 0) then begin
                LVar5 := LVar5 + 1;
                critter_dmg(LVar4, 10000, 0);
            end
        end
        LVar2 := LVar2 + 1;
    end
    return LVar5;
end

procedure Check_And_Kill(variable arg0)
begin
    variable LVar1 := 0;
    variable LVar2 := 0;
    LVar1 := 16513;
    while (LVar1 <= 17713) do begin
        LVar2 := LVar2 + Check_And_Kill_Row(LVar1, arg0);
        LVar1 := LVar1 + 200;
    end
    return LVar2;
end
