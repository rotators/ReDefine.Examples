variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_exit_p_proc;
procedure combat_p_proc;

import variable cage_door_obj;
import variable coup_door_obj;
import variable modoc_death_claw_obj;
import variable dog_that_can_see_dude;

procedure timed_event_p_proc;
procedure use_obj_on_p_proc;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if (((global_var(GVAR_MODOC_GENERIC_FLAG_1) bwand 16) != 0) == 0) then begin
        if (obj_is_open(coup_door_obj) or (coup_door_obj == 0) or obj_can_see_obj(self_obj, dude_obj)) then begin
            if (critter_is_fleeing(self_obj)) then begin
                if (anim_busy(self_obj) == 0) then begin
                    if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                        if (anim_busy(self_obj) == 0) then begin
                            global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                                debug_msg("flee loop: rot == " + global_temp);
                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                global_temp := (global_temp + 1) % 6;
                            end
                        end
                    end
                end
            end
            else begin
                attack(dude_obj);
            end
            if (obj_is_visible_flag(self_obj) == 0) then begin
                set_obj_visibility(self_obj, 0);
            end
            set_global_var(GVAR_MODOC_GENERIC_FLAG_1, global_var(GVAR_MODOC_GENERIC_FLAG_1) bwor 16);
        end
    end
    if (obj_is_visible_flag(self_obj)) then begin
        if (((local_var(4) bwand 16) != 0) == 0) then begin
            set_local_var(4, local_var(4) bwor 16);
            if (dog_that_can_see_dude != 0) then begin
                if (obj_can_see_obj(self_obj, dog_that_can_see_dude)) then begin
                    set_local_var(4, local_var(4) bwor 16);
                    attack(dog_that_can_see_dude);
                end
            end
        end
        if (obj_can_see_obj(self_obj, dude_obj)) then begin
            if (critter_is_fleeing(self_obj)) then begin
                if (anim_busy(self_obj) == 0) then begin
                    if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                        if (anim_busy(self_obj) == 0) then begin
                            global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                                debug_msg("flee loop: rot == " + global_temp);
                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                global_temp := (global_temp + 1) % 6;
                            end
                        end
                    end
                end
            end
            else begin
                attack(dude_obj);
            end
        end
        if ((tile_in_tile_rect(12335, 12313, 16535, 16513, tile_num(self_obj)) and (CUR_MAP_MODINN)) == 0) then begin
            if (tile_distance_objs(self_obj, dude_obj) > 1) then begin
                if (tile_distance_objs(self_obj, dude_obj) > (1 * 2)) then begin
                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 1), 1);
                end
                else begin
                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 1), 0);
                end
            end
        end
    end
end

procedure destroy_p_proc
begin
    set_global_var(GVAR_MODOC_GENERIC_FLAG_1, global_var(GVAR_MODOC_GENERIC_FLAG_1) bwor 2);
end

procedure look_at_p_proc
begin
end

procedure description_p_proc
begin
    if ((global_var(GVAR_MODOC_GENERIC_FLAG_1) bwand 32) != 0) then begin
        script_overrides;
        display_mstr(100);
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        script_overrides;
    end
end

procedure damage_p_proc
begin
end

procedure map_enter_p_proc
begin
    variable LVar0 := 0;
    if (CUR_MAP_MODINN) then begin
        modoc_death_claw_obj := self_obj;
    end
    if (is_loading_game == 0) then begin
        rm_fixed_timer_event(self_obj, 2);
        add_timer_event(self_obj, game_ticks(random(0, 45)), 2);
        if ((tile_in_tile_rect(12335, 12313, 16535, 16513, tile_num(self_obj)) and (CUR_MAP_MODINN)) == 0) then begin
            debug_msg("chicken_escaped");
            if ((CUR_MAP_MODMAIN) or (CUR_MAP_MODINN) or (CUR_MAP_MODBRAH) or (CUR_MAP_MODGARD)) then begin
                debug_msg("  is_killable_map");
                LVar0 := ((CUR_MAP_MODMAIN) * 1) + ((CUR_MAP_MODINN) * 2) + ((CUR_MAP_MODBRAH) * 4) + ((CUR_MAP_MODGARD) * 8);
                if (((local_var(4) bwand LVar0) != 0) == 0) then begin
                    debug_msg("\ndo_kill_everyone_on_map");
                    if (party_member_obj(16777278) == 0) then begin
                        kill_critter_type(16777278, random(62, 63));
                    end
                    if (party_member_obj(16777376) == 0) then begin
                        kill_critter_type(16777376, random(62, 63));
                    end
                    if (party_member_obj(16777377) == 0) then begin
                        kill_critter_type(16777377, random(62, 63));
                    end
                    if (party_member_obj(16777305) == 0) then begin
                        kill_critter_type(16777305, random(62, 63));
                    end
                    if (party_member_obj(16777313) == 0) then begin
                        kill_critter_type(16777313, random(62, 63));
                    end
                    if (party_member_obj(16777323) == 0) then begin
                        kill_critter_type(16777323, random(62, 63));
                    end
                    if (party_member_obj(16777352) == 0) then begin
                        kill_critter_type(16777352, random(62, 63));
                    end
                    if (party_member_obj(16777378) == 0) then begin
                        kill_critter_type(16777378, random(62, 63));
                    end
                    if (party_member_obj(16777368) == 0) then begin
                        kill_critter_type(16777368, random(62, 63));
                    end
                    if (party_member_obj(16777379) == 0) then begin
                        kill_critter_type(16777379, random(62, 63));
                    end
                    if (party_member_obj(16777380) == 0) then begin
                        kill_critter_type(16777380, random(62, 63));
                    end
                    if (party_member_obj(16777295) == 0) then begin
                        kill_critter_type(16777295, random(62, 63));
                    end
                    if (party_member_obj(16777381) == 0) then begin
                        kill_critter_type(16777381, random(62, 63));
                    end
                    if (party_member_obj(16777407) == 0) then begin
                        kill_critter_type(16777407, random(62, 63));
                    end
                    if (party_member_obj(16777412) == 0) then begin
                        kill_critter_type(16777412, random(62, 63));
                    end
                    if (party_member_obj(16777413) == 0) then begin
                        kill_critter_type(16777413, random(62, 63));
                    end
                    kill_critter_type(16777288, random(62, 63));
                    kill_critter_type(16777287, random(62, 63));
                    kill_critter_type(16777285, random(62, 63));
                    kill_critter_type(16777283, random(62, 63));
                    kill_critter_type(16777284, random(62, 63));
                    kill_critter_type(16777279, random(62, 63));
                    kill_critter_type(16777280, random(62, 63));
                    kill_critter_type(16777281, random(62, 63));
                    kill_critter_type(16777282, random(62, 63));
                    kill_critter_type(16777225, random(62, 63));
                    kill_critter_type(16777298, random(62, 63));
                    kill_critter_type(16777226, random(62, 63));
                    kill_critter_type(16777227, random(62, 63));
                    kill_critter_type(16777408, random(62, 63));
                    kill_critter_type(16777409, random(62, 63));
                    kill_critter_type(16777412, random(62, 63));
                    kill_critter_type(16777414, random(62, 63));
                    kill_critter_type(16777416, random(62, 63));
                    kill_critter_type(16777268, random(62, 63));
                    kill_critter_type(16777269, random(62, 63));
                    kill_critter_type(16777389, random(62, 63));
                    kill_critter_type(16777274, random(62, 63));
                    kill_critter_type(16777275, random(62, 63));
                    set_local_var(4, local_var(4) bwor LVar0);
                    if (obj_is_visible_flag(self_obj) == 0) then begin
                        set_obj_visibility(self_obj, 0);
                    end
                end
                else begin
                    if (party_member_obj(16777411) != 0) then begin
                        if (obj_in_party(self_obj)) then begin
                            debug_msg("abandon party: " + self_name);
                            party_remove(self_obj);
                        end
                        if ((obj_pid(self_obj) == 16777380) or (obj_pid(self_obj) == 16777379)) then begin
                            debug_msg("start: set_dude_was_married");
                            if ((global_var(GVAR_PLAYER_MARRIED) != 0) and ((global_var(GVAR_PLAYER_WAS_MARRIED) != 0) == 0)) then begin
                                debug_msg("   GVAR_PLAYER_WAS_MARRIED before == " + global_var(GVAR_PLAYER_WAS_MARRIED));
                                set_global_var(GVAR_PLAYER_WAS_MARRIED, global_var(GVAR_PLAYER_MARRIED));
                                debug_msg("   GVAR_PLAYER_WAS_MARRIED after == " + global_var(GVAR_PLAYER_WAS_MARRIED));
                                set_global_var(GVAR_PLAYER_MARRIED, 0);
                            end
                            debug_msg("finished: set_dude_was_married");
                        end
                        if ((local_var(5) != -1) and (has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) == 0)) then begin
                            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, local_var(5));
                            set_local_var(5, -1);
                        end
                        debug_msg("" + self_name + " has abandoned the party");
                        if (obj_is_visible_flag(self_obj) == 1) then begin
                            set_obj_visibility(self_obj, 1);
                        end
                        critter_attempt_placement(self_obj, ((CUR_MAP_MODMAIN) * 16703) + ((CUR_MAP_MODINN) * 22488) + ((CUR_MAP_MODBRAH) * 15497) + ((CUR_MAP_MODGARD) * 19292), dude_elevation);
                    end
                end
            end
        end
    end
    if (map_first_run) then begin
        if (obj_is_visible_flag(self_obj) == 1) then begin
            set_obj_visibility(self_obj, 1);
        end
    end
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 6);
    if ((CUR_MAP_MODINN) and (elevation(self_obj) != ((global_var(GVAR_MODOC_GENERIC_FLAG_1) bwand 1) != 0))) then begin
        move_to(self_obj, tile_num(self_obj), (global_var(GVAR_MODOC_GENERIC_FLAG_1) bwand 1) != 0);
    end
end

procedure map_exit_p_proc
begin
    if (((tile_in_tile_rect(12335, 12313, 16535, 16513, tile_num(self_obj)) and (CUR_MAP_MODINN)) == 0) == 0) then begin
        if (tile_in_tile_rect(13530, 13516, 15130, 15116, tile_num(self_obj))) then begin
            if (coup_door_obj == 0) then begin
                move_to(self_obj, 16128, 0);
            end
            else begin
                if (obj_is_open(coup_door_obj)) then begin
                    move_to(self_obj, 16128, 0);
                end
            end
        end
        if (tile_in_tile_rect(13530, 13516, 15130, 15116, tile_num(self_obj)) == 0) then begin
            kill_critter_type(16777225, random(62, 63));
            if (cage_door_obj == 0) then begin
                move_to(self_obj, 17145, 0);
            end
            else begin
                if (obj_is_open(cage_door_obj)) then begin
                    move_to(self_obj, 17145, 0);
                end
            end
        end
    end
    if (((tile_in_tile_rect(12335, 12313, 16535, 16513, tile_num(self_obj)) and (CUR_MAP_MODINN)) == 0) and ((((local_var(4) bwand 1) != 0) and ((local_var(4) bwand 2) != 0) and ((local_var(4) bwand 4) != 0) and ((local_var(4) bwand 8) != 0)) == 0)) then begin
        if ((CUR_MAP_MODMAIN) or (CUR_MAP_MODINN) or (CUR_MAP_MODBRAH) or (CUR_MAP_MODGARD)) then begin
            if ((local_var(4) bwand (((CUR_MAP_MODMAIN) * 1) + ((CUR_MAP_MODINN) * 2) + ((CUR_MAP_MODBRAH) * 4) + ((CUR_MAP_MODGARD) * 8))) != 0) then begin
                debug_msg("telling chicken to join party");
                if ((critter_state(self_obj) bwand 1) == 0) then begin
                    if (local_var(6) == 0) then begin
                        set_local_var(6, 6);
                    end
                    set_local_var(7, 0);
                    if (has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) != 0) then begin
                        set_local_var(5, has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM));
                    end
                    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 0);
                    party_add(self_obj);
                end
                debug_msg("join party: " + self_name);
            end
        end
    end
end

procedure combat_p_proc
begin
    if (((global_var(GVAR_MODOC_GENERIC_FLAG_1) bwand 16) != 0) == 0) then begin
        if (obj_is_open(coup_door_obj) or (coup_door_obj == 0) or obj_can_see_obj(self_obj, dude_obj)) then begin
            if (obj_is_visible_flag(self_obj) == 0) then begin
                set_obj_visibility(self_obj, 0);
            end
            if (critter_is_fleeing(self_obj)) then begin
                if (anim_busy(self_obj) == 0) then begin
                    if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                        if (anim_busy(self_obj) == 0) then begin
                            global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                                debug_msg("flee loop: rot == " + global_temp);
                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                global_temp := (global_temp + 1) % 6;
                            end
                        end
                    end
                end
            end
            else begin
                attack(dude_obj);
            end
            set_global_var(GVAR_MODOC_GENERIC_FLAG_1, global_var(GVAR_MODOC_GENERIC_FLAG_1) bwor 16);
        end
    end
    if (((local_var(4) bwand 16) != 0) == 0) then begin
        set_local_var(4, local_var(4) bwor 16);
        if (dog_that_can_see_dude != 0) then begin
            if (obj_can_see_obj(self_obj, dog_that_can_see_dude)) then begin
                set_local_var(4, local_var(4) bwor 16);
                attack(dog_that_can_see_dude);
            end
        end
    end
end

procedure timed_event_p_proc
begin
    variable LVar0 := 0;
    if (fixed_param == 999) then begin
        if (((global_var(GVAR_MODOC_GENERIC_FLAG_1) bwand 8) != 0) == 0) then begin
            set_global_var(GVAR_MODOC_GENERIC_FLAG_1, global_var(GVAR_MODOC_GENERIC_FLAG_1) bwor 8);
            display_mstr(110);
        end
    end
    else begin
        if (((tile_in_tile_rect(12335, 12313, 16535, 16513, tile_num(self_obj)) and (CUR_MAP_MODINN)) == 0) == 0) then begin
            if (obj_is_visible_flag(self_obj)) then begin
                set_global_var(GVAR_MODOC_GENERIC_FLAG_1, global_var(GVAR_MODOC_GENERIC_FLAG_1) bwand (-1 - 134217728));
                if (tile_in_tile_rect(13530, 13516, 15130, 15116, tile_num(self_obj))) then begin
                    if (coup_door_obj == 0) then begin
                        animate_move_obj_to_tile(self_obj, 16128, 0);
                    end
                    else begin
                        if (obj_is_open(coup_door_obj)) then begin
                            animate_move_obj_to_tile(self_obj, 16128, 0);
                        end
                        else begin
                            if (anim_busy(self_obj) == 0) then begin
                                LVar0 := tile_num_in_direction(tile_num(self_obj), random(0, 5), random(3, 10));
                                if (tile_in_tile_rect(13530, 13516, 15130, 15116, LVar0)) then begin
                                    animate_move_obj_to_tile(self_obj, LVar0, 0);
                                end
                            end
                        end
                    end
                end
                else begin
                    if (cage_door_obj == 0) then begin
                        animate_move_obj_to_tile(self_obj, 17145, 0);
                    end
                    else begin
                        if (obj_is_open(cage_door_obj)) then begin
                            animate_move_obj_to_tile(self_obj, 17145, 0);
                        end
                        else begin
                            if (anim_busy(self_obj) == 0) then begin
                                LVar0 := tile_num_in_direction(tile_num(self_obj), random(0, 5), random(3, 10));
                                if (tile_in_tile_rect(12335, 12313, 16535, 16513, LVar0) and (tile_in_tile_rect(13530, 13516, 15130, 15116, LVar0) == 0)) then begin
                                    animate_move_obj_to_tile(self_obj, LVar0, 0);
                                end
                            end
                        end
                    end
                end
            end
            add_timer_event(self_obj, game_ticks(random(5, 15)), 2);
        end
        else begin
            set_global_var(GVAR_MODOC_GENERIC_FLAG_1, global_var(GVAR_MODOC_GENERIC_FLAG_1) bwor 134217728);
        end
    end
end

procedure use_obj_on_p_proc
begin
end
