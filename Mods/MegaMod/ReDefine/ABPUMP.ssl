procedure start;
procedure map_enter_p_proc;
procedure use_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure timed_event_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure Node001;
procedure Node002;
procedure Node999;
procedure map_update_p_proc;
procedure talk_p_proc;


procedure start
begin
end

procedure map_enter_p_proc
begin
    if (global_var(GVAR_ABBEY_TULLY) >= 4) then begin
        reg_anim_func(1, 1);
        reg_anim_animate_forever(self_obj, 0);
        reg_anim_func(3, 0);
    end
    add_timer_event(self_obj, 1, 1);
end

procedure use_p_proc
begin
    script_overrides;
    if (global_var(GVAR_ABBEY_TULLY) == 1) then begin
        dialogue_system_enter;
    end
end

procedure use_obj_on_p_proc
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    LVar0 := obj_pid(obj_being_used_with);
    if ((LVar0 == 75) and obj_is_carrying_obj_pid(dude_obj, 89)) then begin
        script_overrides;
        LVar1 := roll_vs_skill(source_obj, 13, -20);
    end
    else begin
        if ((LVar0 == 308) and obj_is_carrying_obj_pid(dude_obj, 89)) then begin
            script_overrides;
            LVar1 := roll_vs_skill(source_obj, 13, -10);
        end
        else begin
            if (LVar0 == 89) then begin
                script_overrides;
                display_mstr(103);
            end
        end
    end
    if ((global_var(GVAR_ABBEY_TULLY) < 4) and obj_is_carrying_obj_pid(dude_obj, 89)) then begin
        script_overrides;
        if (is_success(LVar1)) then begin
            display_mstr(104);
            set_global_var(GVAR_ABBEY_TULLY, 4);
            give_exp_points(800);
            display_msg(g_mstr(100) + 800 + g_mstr(101));
            set_global_var(GVAR_TOWN_REP_ABBEY, global_var(GVAR_TOWN_REP_ABBEY) + 5);
            LVar2 := obj_carrying_pid_obj(dude_obj, 89);
            rm_obj_from_inven(dude_obj, LVar2);
            destroy_object(LVar2);
        end
        else begin
            display_mstr(105);
        end
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 13) then begin
        script_overrides;
        if (global_var(GVAR_ABBEY_TULLY) < 4) then begin
            display_mstr(103);
        end
        else begin
            display_mstr(102);
        end
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if ((global_var(GVAR_ABBEY_TULLY) >= 4) and (anim_busy(self_obj) == 0) and (combat_is_initialized == 0)) then begin
            reg_anim_func(1, 1);
            reg_anim_animate_forever(self_obj, 0);
            reg_anim_func(3, 0);
        end
        add_timer_event(self_obj, 1, 1);
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure description_p_proc
begin
    script_overrides;
    if (global_var(GVAR_ABBEY_TULLY) < 4) then begin
        display_mstr(101);
    end
    else begin
        display_mstr(102);
    end
end

procedure Node001
begin
    Reply(200);
    giq_option(4, NAME, 201, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 202, Node002, NEUTRAL_REACTION);
end

procedure Node002
begin
    if (global_var(GVAR_ABBEY_TULLY) == 1) then begin
        display_mstr(106);
        give_exp_points(100);
        display_msg(g_mstr(100) + 100 + g_mstr(101));
    end
    Reply(203);
    set_global_var(GVAR_ABBEY_TULLY, 2);
    giq_option(4, NAME, 204, Node999, NEUTRAL_REACTION);
end

procedure Node999
begin
end

procedure map_update_p_proc
begin
    if ((combat_is_initialized == 0) and (global_var(GVAR_ABBEY_TULLY) >= 4)) then begin
        reg_anim_func(1, 1);
        reg_anim_animate_forever(self_obj, 0);
        reg_anim_func(3, 0);
    end
end

procedure talk_p_proc
begin
    start_gdialog(2266, self_obj, 4, -1, -1);
    gsay_start;
    call Node001();
    gsay_end;
    end_dialogue;
end
