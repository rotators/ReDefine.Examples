variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure Node999;
procedure Node998;

variable only_once;
variable temp_tile;
variable slag_walking;
variable update_time;

import variable ghost_farm_slag_obj;

procedure timed_event_p_proc;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
    if (ghost_farm_slag_obj == 0) then begin
        ghost_farm_slag_obj := self_obj;
    end
    else begin
        if (tile_distance_objs(self_obj, dude_obj) < tile_distance_objs(ghost_farm_slag_obj, dude_obj)) then begin
            ghost_farm_slag_obj := self_obj;
        end
    end
end

procedure critter_p_proc
begin
    slag_walking := 1;
    if (obj_is_visible_flag(self_obj)) then begin
        if (obj_can_see_obj(self_obj, dude_obj)) then begin
            if (((global_var(GVAR_MODOC_GENERIC_FLAG_1) bwand 512) != 0) or ((local_var(4) bwand 2) != 0)) then begin
                if (critter_is_fleeing(self_obj)) then begin
                    if (anim_busy(self_obj) == 0) then begin
                        if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                            if (anim_busy(self_obj) == 0) then begin
                                global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                global_temp := (global_temp + 1) % 6;
                                while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                                    debug_msg("flee loop: rot == " + global_temp);
                                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                    global_temp := (global_temp + 1) % 6;
                                end
                            end
                        end
                    end
                end
                else begin
                    attack(dude_obj);
                end
            end
            else begin
                if (CUR_MAP_GSTFARM) then begin
                    set_global_var(GVAR_MODOC_GENERIC_FLAG_1, global_var(GVAR_MODOC_GENERIC_FLAG_1) bwor 2048);
                    if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                        if (anim_busy(self_obj) == 0) then begin
                            global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                                debug_msg("flee loop: rot == " + global_temp);
                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                global_temp := (global_temp + 1) % 6;
                            end
                        end
                    end
                end
            end
        end
        else begin
            if (CUR_MAP_GSTFARM) then begin
                if (((game_time_hour >= 0) and (game_time_hour < 500) or (global_var(GVAR_MODOC_GHOST_FARM_SEED) == 1)) == 0) then begin
                    if (tile_distance(tile_num(self_obj), local_var(5)) <= 1) then begin
                        if (obj_is_visible_flag(self_obj) == 1) then begin
                            set_obj_visibility(self_obj, 1);
                        end
                    end
                    else begin
                        if (tile_distance(tile_num(self_obj), dude_tile) > 20) then begin
                            if ((tile_num(self_obj) != local_var(5)) and (local_var(5) != 0)) then begin
                                if ((dest_tile == local_var(5)) and (step_tile < 0)) then begin
                                    step_tile := step_tile + 1;
                                end
                                else begin
                                    if (anim_busy(self_obj) == 0) then begin
                                        dest_tile := local_var(5);
                                        step_tile := local_var(5);
                                        animate_move_obj_to_tile(self_obj, step_tile, 0);
                                        while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), local_var(5)) >= tile_distance(step_tile, local_var(5)))) do begin
                                            step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), (5 % tile_distance(step_tile, tile_num(self_obj))) + 1);
                                            animate_move_obj_to_tile(self_obj, step_tile, 0);
                                        end
                                        if (anim_busy(self_obj) == 0) then begin
                                            if (metarule3(106, tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), elevation(self_obj), 0) != 0) then begin
                                                if (anim_busy(self_obj) == 0) then begin
                                                    global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                    global_temp := (global_temp + 1) % 6;
                                                    while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                        debug_msg("flee loop: rot == " + global_temp);
                                                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                        global_temp := (global_temp + 1) % 6;
                                                    end
                                                end
                                            end
                                            else begin
                                                step_tile := -10;
                                            end
                                        end
                                    end
                                    else begin
                                        if (tile_distance(tile_num(self_obj), local_var(5)) < tile_distance(dest_tile, local_var(5))) then begin
                                            reg_anim_func(2, self_obj);
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                else begin
                    if (anim_busy(self_obj) == 0) then begin
                        if (tile_in_tile_rect(15261, 15255, 17661, 17655, tile_num(self_obj))) then begin
                            temp_tile := tile_num_in_direction(tile_num(self_obj), random(0, 5), random(20, 30));
                            if ((tile_num(self_obj) != temp_tile) and (temp_tile != 0)) then begin
                                if ((dest_tile == temp_tile) and (step_tile < 0)) then begin
                                    step_tile := step_tile + 1;
                                end
                                else begin
                                    if (anim_busy(self_obj) == 0) then begin
                                        dest_tile := temp_tile;
                                        step_tile := temp_tile;
                                        animate_move_obj_to_tile(self_obj, step_tile, 0);
                                        while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), temp_tile) >= tile_distance(step_tile, temp_tile))) do begin
                                            step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), (5 % tile_distance(step_tile, tile_num(self_obj))) + 1);
                                            animate_move_obj_to_tile(self_obj, step_tile, 0);
                                        end
                                        if (anim_busy(self_obj) == 0) then begin
                                            if (metarule3(106, tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), elevation(self_obj), 0) != 0) then begin
                                                if (anim_busy(self_obj) == 0) then begin
                                                    global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                    global_temp := (global_temp + 1) % 6;
                                                    while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                        debug_msg("flee loop: rot == " + global_temp);
                                                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                        global_temp := (global_temp + 1) % 6;
                                                    end
                                                end
                                            end
                                            else begin
                                                step_tile := -10;
                                            end
                                        end
                                    end
                                    else begin
                                        if (tile_distance(tile_num(self_obj), temp_tile) < tile_distance(dest_tile, temp_tile)) then begin
                                            reg_anim_func(2, self_obj);
                                        end
                                    end
                                end
                            end
                        end
                        else begin
                            if (random(1, 20) == 1) then begin
                                temp_tile := tile_num_in_direction(tile_num(self_obj), random(0, 5), random(5, 30));
                                if (tile_in_tile_rect(15261, 15255, 17661, 17655, temp_tile) == 0) then begin
                                    if ((tile_num(self_obj) != temp_tile) and (temp_tile != 0)) then begin
                                        if ((dest_tile == temp_tile) and (step_tile < 0)) then begin
                                            step_tile := step_tile + 1;
                                        end
                                        else begin
                                            if (anim_busy(self_obj) == 0) then begin
                                                dest_tile := temp_tile;
                                                step_tile := temp_tile;
                                                animate_move_obj_to_tile(self_obj, step_tile, 0);
                                                while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), temp_tile) >= tile_distance(step_tile, temp_tile))) do begin
                                                    step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), (3 % tile_distance(step_tile, tile_num(self_obj))) + 1);
                                                    animate_move_obj_to_tile(self_obj, step_tile, 0);
                                                end
                                                if (anim_busy(self_obj) == 0) then begin
                                                    if (metarule3(106, tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), elevation(self_obj), 0) != 0) then begin
                                                        if (anim_busy(self_obj) == 0) then begin
                                                            global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                            global_temp := (global_temp + 1) % 6;
                                                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                                debug_msg("flee loop: rot == " + global_temp);
                                                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                                global_temp := (global_temp + 1) % 6;
                                                            end
                                                        end
                                                    end
                                                    else begin
                                                        step_tile := -10;
                                                    end
                                                end
                                            end
                                            else begin
                                                if (tile_distance(tile_num(self_obj), temp_tile) < tile_distance(dest_tile, temp_tile)) then begin
                                                    reg_anim_func(2, self_obj);
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                            else begin
                                if (tile_contains_obj_pid(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), elevation(self_obj), 33555395) or tile_contains_obj_pid(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), elevation(self_obj), 33555396) or tile_contains_obj_pid(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), elevation(self_obj), 33555397) or tile_contains_obj_pid(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), elevation(self_obj), 33555398) or tile_contains_obj_pid(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), elevation(self_obj), 33555399) or tile_contains_obj_pid(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), elevation(self_obj), 33555400)) then begin
                                    slag_walking := 0;
                                    reg_anim_func(1, 1);
                                    anim(self_obj, random(11, 12), 0);
                                    reg_anim_func(3, 0);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    else begin
        if (CUR_MAP_GSTFARM) then begin
            if (tile_in_tile_rect(15261, 15255, 17661, 17655, tile_num(self_obj)) == 0) then begin
                if ((tile_num(self_obj) != local_var(5)) and (local_var(5) != 0)) then begin
                    if ((dest_tile == local_var(5)) and (step_tile < 0)) then begin
                        step_tile := step_tile + 1;
                    end
                    else begin
                        if (anim_busy(self_obj) == 0) then begin
                            dest_tile := local_var(5);
                            step_tile := local_var(5);
                            animate_move_obj_to_tile(self_obj, step_tile, 0);
                            while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), local_var(5)) >= tile_distance(step_tile, local_var(5)))) do begin
                                step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), (5 % tile_distance(step_tile, tile_num(self_obj))) + 1);
                                animate_move_obj_to_tile(self_obj, step_tile, 0);
                            end
                            if (anim_busy(self_obj) == 0) then begin
                                if (metarule3(106, tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), elevation(self_obj), 0) != 0) then begin
                                    if (anim_busy(self_obj) == 0) then begin
                                        global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                        global_temp := (global_temp + 1) % 6;
                                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                            debug_msg("flee loop: rot == " + global_temp);
                                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                            global_temp := (global_temp + 1) % 6;
                                        end
                                    end
                                end
                                else begin
                                    step_tile := -10;
                                end
                            end
                        end
                        else begin
                            if (tile_distance(tile_num(self_obj), local_var(5)) < tile_distance(dest_tile, local_var(5))) then begin
                                reg_anim_func(2, self_obj);
                            end
                        end
                    end
                end
            end
            else begin
                if ((game_time_hour >= 0) and (game_time_hour < 500) or (global_var(GVAR_MODOC_GHOST_FARM_SEED) == 1)) then begin
                    if (tile_distance(16257, dude_tile) > 25) then begin
                        if (obj_is_visible_flag(self_obj) == 0) then begin
                            set_obj_visibility(self_obj, 0);
                        end
                    end
                end
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        call Node998();
    end
end

procedure talk_p_proc
begin
    if (global_var(GVAR_MODOC_VERMIN_HUNTER_SEED) >= 7) then begin
        float_msg(self_obj, mstr(random(300, 302)), FLOAT_MSG_YELLOW);
    end
    else begin
        if (CUR_MAP_GSTFARM) then begin
            if (global_var(GVAR_MODOC_GHOST_FARM_SEED) == 1) then begin
                float_msg(self_obj, mstr(random(150, 153)), 8 + ((2 - 8) * has_trait(TRAIT_PERK, dude_obj, PERK_empathy)));
            end
            else begin
                if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(dude_tile, tile_num(self_obj)), random(3, 10)), 1 bwor 16);
                end
                set_global_var(GVAR_MODOC_GENERIC_FLAG_1, global_var(GVAR_MODOC_GENERIC_FLAG_1) bwor 2048);
                float_msg(self_obj, mstr(random(100, 104)), 8 + ((7 - 8) * has_trait(TRAIT_PERK, dude_obj, PERK_empathy)));
            end
        end
        else begin
            float_msg(self_obj, mstr(random(250, 254)), FLOAT_MSG_YELLOW);
        end
    end
end

procedure destroy_p_proc
begin
    set_global_var(GVAR_SLAG_CNT, global_var(GVAR_SLAG_CNT) - 1);
    if (((global_var(GVAR_MODOC_GENERIC_FLAG_2) bwand 1024) != 0) and (global_var(GVAR_SLAG_CNT) <= 0) or ((global_var(GVAR_MODOC_GHOST_FARM_SEED) == 2) or (((global_var(GVAR_SLAUGHTER_SLAG_TIME) - (game_time / (10 * 60 * 60 * 24))) <= 0) or ((global_var(GVAR_SLAUGHTER_SLAG_TIME) - (game_time / (10 * 60 * 60 * 24))) > 31) and (global_var(GVAR_SLAUGHTER_SLAG_TIME) > 0)))) then begin
        if (global_var(GVAR_MODOC_GHOST_FARM_SEED) != 0) then begin
            if (global_var(GVAR_MODOC_VERMIN_HUNTER_SEED) >= 4) then begin
                if (global_var(GVAR_MODOC_GHOST_SEED_PIP) < 3) then begin
                    set_global_var(GVAR_MODOC_GHOST_SEED_PIP, 3);
                end
                debug_msg("ghost pip == " + global_var(GVAR_MODOC_GHOST_SEED_PIP));
            end
            if (global_var(GVAR_MODOC_ENDINGS) < 2) then begin
                set_global_var(GVAR_MODOC_ENDINGS, 2);
            end
            debug_msg("set_modoc_ending_wipeout_1");
        end
        else begin
            if (global_var(GVAR_MODOC_VERMIN_HUNTER_SEED) >= 4) then begin
                if (global_var(GVAR_MODOC_GHOST_SEED_PIP) < 3) then begin
                    set_global_var(GVAR_MODOC_GHOST_SEED_PIP, 3);
                end
                debug_msg("ghost pip == " + global_var(GVAR_MODOC_GHOST_SEED_PIP));
            end
            if (global_var(GVAR_MODOC_ENDINGS) < 3) then begin
                set_global_var(GVAR_MODOC_ENDINGS, 3);
            end
            debug_msg("set_modoc_ending_wipeout_2");
        end
    end
    debug_msg("current slag count == " + global_var(GVAR_SLAG_CNT));
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (critter_kill_type(self_obj) == 2) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(GVAR_TOWN_REP_GHOST_FARM, global_var(GVAR_TOWN_REP_GHOST_FARM) + -8);
                debug_msg("Added " + -8 + " to Town Rep");
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(GVAR_TOWN_REP_GHOST_FARM, global_var(GVAR_TOWN_REP_GHOST_FARM) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
end

procedure look_at_p_proc
begin
end

procedure description_p_proc
begin
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        call Node998();
        set_global_var(GVAR_MODOC_GENERIC_FLAG_1, global_var(GVAR_MODOC_GENERIC_FLAG_1) bwor 512);
        debug_msg("HEY: I SET ENEMY SLAGS!!!! I'M SCRIPT #" + 585);
    end
end

procedure map_enter_p_proc
begin
    if (ghost_farm_slag_obj == 0) then begin
        ghost_farm_slag_obj := self_obj;
    end
    else begin
        if (tile_distance_objs(self_obj, dude_obj) < tile_distance_objs(ghost_farm_slag_obj, dude_obj)) then begin
            ghost_farm_slag_obj := self_obj;
        end
    end
    update_time := game_time + (15 * (60 * 10));
    if (is_loading_game == 0) then begin
        if (map_first_run) then begin
            if (CUR_MAP_GSTFARM) then begin
                if (CUR_MAP_GSTFARM) then begin
                    set_global_var(GVAR_SLAG_CNT, global_var(GVAR_SLAG_CNT) + 1);
                end
                debug_msg("current slag count == " + global_var(GVAR_SLAG_CNT));
            end
            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 29);
            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_SLAG);
            set_local_var(5, tile_num(self_obj));
        end
        metarule3(100, self_obj, 1, 0);
        add_timer_event(self_obj, game_ticks(random(10, 30)), 1);
        if (((global_var(GVAR_MODOC_GENERIC_FLAG_2) bwand 2048) != 0) or ((global_var(GVAR_MODOC_GHOST_FARM_SEED) == 2) or (((global_var(GVAR_SLAUGHTER_SLAG_TIME) - (game_time / (10 * 60 * 60 * 24))) <= 0) or ((global_var(GVAR_SLAUGHTER_SLAG_TIME) - (game_time / (10 * 60 * 60 * 24))) > 31) and (global_var(GVAR_SLAUGHTER_SLAG_TIME) > 0)))) then begin
            if (CUR_MAP_GSTFARM) then begin
                if (((global_var(GVAR_MODOC_GENERIC_FLAG_2) bwand 1024) != 0) and (global_var(GVAR_SLAG_CNT) <= 0) or ((global_var(GVAR_MODOC_GHOST_FARM_SEED) == 2) or (((global_var(GVAR_SLAUGHTER_SLAG_TIME) - (game_time / (10 * 60 * 60 * 24))) <= 0) or ((global_var(GVAR_SLAUGHTER_SLAG_TIME) - (game_time / (10 * 60 * 60 * 24))) > 31) and (global_var(GVAR_SLAUGHTER_SLAG_TIME) > 0)))) then begin
                    debug_msg("KILLING SLAG IN FARM");
                    set_global_var(GVAR_SLAG_CNT, global_var(GVAR_SLAG_CNT) - 1);
                    if (((global_var(GVAR_MODOC_GENERIC_FLAG_2) bwand 1024) != 0) and (global_var(GVAR_SLAG_CNT) <= 0) or ((global_var(GVAR_MODOC_GHOST_FARM_SEED) == 2) or (((global_var(GVAR_SLAUGHTER_SLAG_TIME) - (game_time / (10 * 60 * 60 * 24))) <= 0) or ((global_var(GVAR_SLAUGHTER_SLAG_TIME) - (game_time / (10 * 60 * 60 * 24))) > 31) and (global_var(GVAR_SLAUGHTER_SLAG_TIME) > 0)))) then begin
                        if (global_var(GVAR_MODOC_GHOST_FARM_SEED) != 0) then begin
                            if (global_var(GVAR_MODOC_VERMIN_HUNTER_SEED) >= 4) then begin
                                if (global_var(GVAR_MODOC_GHOST_SEED_PIP) < 3) then begin
                                    set_global_var(GVAR_MODOC_GHOST_SEED_PIP, 3);
                                end
                                debug_msg("ghost pip == " + global_var(GVAR_MODOC_GHOST_SEED_PIP));
                            end
                            if (global_var(GVAR_MODOC_ENDINGS) < 2) then begin
                                set_global_var(GVAR_MODOC_ENDINGS, 2);
                            end
                            debug_msg("set_modoc_ending_wipeout_1");
                        end
                        else begin
                            if (global_var(GVAR_MODOC_VERMIN_HUNTER_SEED) >= 4) then begin
                                if (global_var(GVAR_MODOC_GHOST_SEED_PIP) < 3) then begin
                                    set_global_var(GVAR_MODOC_GHOST_SEED_PIP, 3);
                                end
                                debug_msg("ghost pip == " + global_var(GVAR_MODOC_GHOST_SEED_PIP));
                            end
                            if (global_var(GVAR_MODOC_ENDINGS) < 3) then begin
                                set_global_var(GVAR_MODOC_ENDINGS, 3);
                            end
                            debug_msg("set_modoc_ending_wipeout_2");
                        end
                    end
                    debug_msg("current slag count == " + global_var(GVAR_SLAG_CNT));
                    kill_critter(self_obj, random(62, 63));
                end
            end
            else begin
                debug_msg("DESTROYING SLAG");
                set_global_var(GVAR_SLAG_CNT, global_var(GVAR_SLAG_CNT) - 1);
                if (((global_var(GVAR_MODOC_GENERIC_FLAG_2) bwand 1024) != 0) and (global_var(GVAR_SLAG_CNT) <= 0) or ((global_var(GVAR_MODOC_GHOST_FARM_SEED) == 2) or (((global_var(GVAR_SLAUGHTER_SLAG_TIME) - (game_time / (10 * 60 * 60 * 24))) <= 0) or ((global_var(GVAR_SLAUGHTER_SLAG_TIME) - (game_time / (10 * 60 * 60 * 24))) > 31) and (global_var(GVAR_SLAUGHTER_SLAG_TIME) > 0)))) then begin
                    if (global_var(GVAR_MODOC_GHOST_FARM_SEED) != 0) then begin
                        if (global_var(GVAR_MODOC_VERMIN_HUNTER_SEED) >= 4) then begin
                            if (global_var(GVAR_MODOC_GHOST_SEED_PIP) < 3) then begin
                                set_global_var(GVAR_MODOC_GHOST_SEED_PIP, 3);
                            end
                            debug_msg("ghost pip == " + global_var(GVAR_MODOC_GHOST_SEED_PIP));
                        end
                        if (global_var(GVAR_MODOC_ENDINGS) < 2) then begin
                            set_global_var(GVAR_MODOC_ENDINGS, 2);
                        end
                        debug_msg("set_modoc_ending_wipeout_1");
                    end
                    else begin
                        if (global_var(GVAR_MODOC_VERMIN_HUNTER_SEED) >= 4) then begin
                            if (global_var(GVAR_MODOC_GHOST_SEED_PIP) < 3) then begin
                                set_global_var(GVAR_MODOC_GHOST_SEED_PIP, 3);
                            end
                            debug_msg("ghost pip == " + global_var(GVAR_MODOC_GHOST_SEED_PIP));
                        end
                        if (global_var(GVAR_MODOC_ENDINGS) < 3) then begin
                            set_global_var(GVAR_MODOC_ENDINGS, 3);
                        end
                        debug_msg("set_modoc_ending_wipeout_2");
                    end
                end
                debug_msg("current slag count == " + global_var(GVAR_SLAG_CNT));
                destroy_object(self_obj);
            end
        end
        if (CUR_MAP_GSTFARM) then begin
            if ((game_time_hour >= 0) and (game_time_hour < 500) or (global_var(GVAR_MODOC_GHOST_FARM_SEED) == 1)) then begin
                if (obj_is_visible_flag(self_obj) == 0) then begin
                    if (obj_is_visible_flag(self_obj) == 0) then begin
                        set_obj_visibility(self_obj, 0);
                    end
                    if ((global_var(GVAR_MODOC_GHOST_FARM_SEED) == 1) or (585 == 107)) then begin
                        if (585 == 107) then begin
                            debug_msg("putting out protector");
                        end
                        debug_msg("placing slag in random ATTACKING tile");
                        if (obj_is_visible_flag(self_obj) == 0) then begin
                            set_obj_visibility(self_obj, 0);
                        end
                        critter_attempt_placement(self_obj, tile_num_in_direction(18087, random(0, 5), random(2, 5)), elevation(self_obj));
                        anim(dude_obj, 1000, rotation_to_tile(dude_tile, tile_num(self_obj)));
                    end
                    else begin
                        debug_msg("placing slag in random FARMING tile");
                        if (obj_is_visible_flag(self_obj) == 0) then begin
                            set_obj_visibility(self_obj, 0);
                        end
                        critter_attempt_placement(self_obj, tile_num_in_direction(local_var(5), random(0, 5), random(15, 25)), elevation(self_obj));
                    end
                end
            end
            else begin
                if (obj_is_visible_flag(self_obj) == 1) then begin
                    set_obj_visibility(self_obj, 1);
                end
            end
        end
        else begin
            if (global_var(GVAR_MODOC_GHOST_FARM_SEED) == 1) then begin
                if (((global_var(GVAR_MODOC_GENERIC_FLAG_2) bwand 2048) != 0) or ((global_var(GVAR_MODOC_GHOST_FARM_SEED) == 2) or (((global_var(GVAR_SLAUGHTER_SLAG_TIME) - (game_time / (10 * 60 * 60 * 24))) <= 0) or ((global_var(GVAR_SLAUGHTER_SLAG_TIME) - (game_time / (10 * 60 * 60 * 24))) > 31) and (global_var(GVAR_SLAUGHTER_SLAG_TIME) > 0)))) then begin
                    if (CUR_MAP_GSTFARM) then begin
                        if (((global_var(GVAR_MODOC_GENERIC_FLAG_2) bwand 1024) != 0) and (global_var(GVAR_SLAG_CNT) <= 0) or ((global_var(GVAR_MODOC_GHOST_FARM_SEED) == 2) or (((global_var(GVAR_SLAUGHTER_SLAG_TIME) - (game_time / (10 * 60 * 60 * 24))) <= 0) or ((global_var(GVAR_SLAUGHTER_SLAG_TIME) - (game_time / (10 * 60 * 60 * 24))) > 31) and (global_var(GVAR_SLAUGHTER_SLAG_TIME) > 0)))) then begin
                            debug_msg("KILLING SLAG IN FARM");
                            set_global_var(GVAR_SLAG_CNT, global_var(GVAR_SLAG_CNT) - 1);
                            if (((global_var(GVAR_MODOC_GENERIC_FLAG_2) bwand 1024) != 0) and (global_var(GVAR_SLAG_CNT) <= 0) or ((global_var(GVAR_MODOC_GHOST_FARM_SEED) == 2) or (((global_var(GVAR_SLAUGHTER_SLAG_TIME) - (game_time / (10 * 60 * 60 * 24))) <= 0) or ((global_var(GVAR_SLAUGHTER_SLAG_TIME) - (game_time / (10 * 60 * 60 * 24))) > 31) and (global_var(GVAR_SLAUGHTER_SLAG_TIME) > 0)))) then begin
                                if (global_var(GVAR_MODOC_GHOST_FARM_SEED) != 0) then begin
                                    if (global_var(GVAR_MODOC_VERMIN_HUNTER_SEED) >= 4) then begin
                                        if (global_var(GVAR_MODOC_GHOST_SEED_PIP) < 3) then begin
                                            set_global_var(GVAR_MODOC_GHOST_SEED_PIP, 3);
                                        end
                                        debug_msg("ghost pip == " + global_var(GVAR_MODOC_GHOST_SEED_PIP));
                                    end
                                    if (global_var(GVAR_MODOC_ENDINGS) < 2) then begin
                                        set_global_var(GVAR_MODOC_ENDINGS, 2);
                                    end
                                    debug_msg("set_modoc_ending_wipeout_1");
                                end
                                else begin
                                    if (global_var(GVAR_MODOC_VERMIN_HUNTER_SEED) >= 4) then begin
                                        if (global_var(GVAR_MODOC_GHOST_SEED_PIP) < 3) then begin
                                            set_global_var(GVAR_MODOC_GHOST_SEED_PIP, 3);
                                        end
                                        debug_msg("ghost pip == " + global_var(GVAR_MODOC_GHOST_SEED_PIP));
                                    end
                                    if (global_var(GVAR_MODOC_ENDINGS) < 3) then begin
                                        set_global_var(GVAR_MODOC_ENDINGS, 3);
                                    end
                                    debug_msg("set_modoc_ending_wipeout_2");
                                end
                            end
                            debug_msg("current slag count == " + global_var(GVAR_SLAG_CNT));
                            kill_critter(self_obj, random(62, 63));
                        end
                    end
                    else begin
                        debug_msg("DESTROYING SLAG");
                        set_global_var(GVAR_SLAG_CNT, global_var(GVAR_SLAG_CNT) - 1);
                        if (((global_var(GVAR_MODOC_GENERIC_FLAG_2) bwand 1024) != 0) and (global_var(GVAR_SLAG_CNT) <= 0) or ((global_var(GVAR_MODOC_GHOST_FARM_SEED) == 2) or (((global_var(GVAR_SLAUGHTER_SLAG_TIME) - (game_time / (10 * 60 * 60 * 24))) <= 0) or ((global_var(GVAR_SLAUGHTER_SLAG_TIME) - (game_time / (10 * 60 * 60 * 24))) > 31) and (global_var(GVAR_SLAUGHTER_SLAG_TIME) > 0)))) then begin
                            if (global_var(GVAR_MODOC_GHOST_FARM_SEED) != 0) then begin
                                if (global_var(GVAR_MODOC_VERMIN_HUNTER_SEED) >= 4) then begin
                                    if (global_var(GVAR_MODOC_GHOST_SEED_PIP) < 3) then begin
                                        set_global_var(GVAR_MODOC_GHOST_SEED_PIP, 3);
                                    end
                                    debug_msg("ghost pip == " + global_var(GVAR_MODOC_GHOST_SEED_PIP));
                                end
                                if (global_var(GVAR_MODOC_ENDINGS) < 2) then begin
                                    set_global_var(GVAR_MODOC_ENDINGS, 2);
                                end
                                debug_msg("set_modoc_ending_wipeout_1");
                            end
                            else begin
                                if (global_var(GVAR_MODOC_VERMIN_HUNTER_SEED) >= 4) then begin
                                    if (global_var(GVAR_MODOC_GHOST_SEED_PIP) < 3) then begin
                                        set_global_var(GVAR_MODOC_GHOST_SEED_PIP, 3);
                                    end
                                    debug_msg("ghost pip == " + global_var(GVAR_MODOC_GHOST_SEED_PIP));
                                end
                                if (global_var(GVAR_MODOC_ENDINGS) < 3) then begin
                                    set_global_var(GVAR_MODOC_ENDINGS, 3);
                                end
                                debug_msg("set_modoc_ending_wipeout_2");
                            end
                        end
                        debug_msg("current slag count == " + global_var(GVAR_SLAG_CNT));
                        destroy_object(self_obj);
                    end
                end
            end
            else begin
                if ((game_time_hour >= 0) and (game_time_hour < 500) or (global_var(GVAR_MODOC_GHOST_FARM_SEED) == 1)) then begin
                    if (obj_is_visible_flag(self_obj) == 1) then begin
                        set_obj_visibility(self_obj, 1);
                    end
                end
                else begin
                    if (obj_is_visible_flag(self_obj) == 0) then begin
                        set_obj_visibility(self_obj, 0);
                    end
                end
            end
        end
    end
end

procedure map_update_p_proc
begin
    if (ghost_farm_slag_obj == 0) then begin
        ghost_farm_slag_obj := self_obj;
    end
    else begin
        if (tile_distance_objs(self_obj, dude_obj) < tile_distance_objs(ghost_farm_slag_obj, dude_obj)) then begin
            ghost_farm_slag_obj := self_obj;
        end
    end
    if (game_time > update_time) then begin
        if (CUR_MAP_GSTFARM) then begin
            if ((game_time_hour >= 0) and (game_time_hour < 500) or (global_var(GVAR_MODOC_GHOST_FARM_SEED) == 1)) then begin
                if (obj_is_visible_flag(self_obj) == 0) then begin
                    if (obj_is_visible_flag(self_obj) == 0) then begin
                        set_obj_visibility(self_obj, 0);
                    end
                    if ((global_var(GVAR_MODOC_GHOST_FARM_SEED) == 1) or (585 == 107)) then begin
                        if (585 == 107) then begin
                            debug_msg("putting out protector");
                        end
                        debug_msg("placing slag in random ATTACKING tile");
                        if (obj_is_visible_flag(self_obj) == 0) then begin
                            set_obj_visibility(self_obj, 0);
                        end
                        critter_attempt_placement(self_obj, tile_num_in_direction(18087, random(0, 5), random(2, 5)), elevation(self_obj));
                        anim(dude_obj, 1000, rotation_to_tile(dude_tile, tile_num(self_obj)));
                    end
                    else begin
                        debug_msg("placing slag in random FARMING tile");
                        if (obj_is_visible_flag(self_obj) == 0) then begin
                            set_obj_visibility(self_obj, 0);
                        end
                        critter_attempt_placement(self_obj, tile_num_in_direction(local_var(5), random(0, 5), random(15, 25)), elevation(self_obj));
                    end
                end
            end
            else begin
                if (obj_is_visible_flag(self_obj) == 1) then begin
                    set_obj_visibility(self_obj, 1);
                end
            end
        end
        else begin
            if (global_var(GVAR_MODOC_GHOST_FARM_SEED) == 1) then begin
                if (((global_var(GVAR_MODOC_GENERIC_FLAG_2) bwand 2048) != 0) or ((global_var(GVAR_MODOC_GHOST_FARM_SEED) == 2) or (((global_var(GVAR_SLAUGHTER_SLAG_TIME) - (game_time / (10 * 60 * 60 * 24))) <= 0) or ((global_var(GVAR_SLAUGHTER_SLAG_TIME) - (game_time / (10 * 60 * 60 * 24))) > 31) and (global_var(GVAR_SLAUGHTER_SLAG_TIME) > 0)))) then begin
                    if (CUR_MAP_GSTFARM) then begin
                        if (((global_var(GVAR_MODOC_GENERIC_FLAG_2) bwand 1024) != 0) and (global_var(GVAR_SLAG_CNT) <= 0) or ((global_var(GVAR_MODOC_GHOST_FARM_SEED) == 2) or (((global_var(GVAR_SLAUGHTER_SLAG_TIME) - (game_time / (10 * 60 * 60 * 24))) <= 0) or ((global_var(GVAR_SLAUGHTER_SLAG_TIME) - (game_time / (10 * 60 * 60 * 24))) > 31) and (global_var(GVAR_SLAUGHTER_SLAG_TIME) > 0)))) then begin
                            debug_msg("KILLING SLAG IN FARM");
                            set_global_var(GVAR_SLAG_CNT, global_var(GVAR_SLAG_CNT) - 1);
                            if (((global_var(GVAR_MODOC_GENERIC_FLAG_2) bwand 1024) != 0) and (global_var(GVAR_SLAG_CNT) <= 0) or ((global_var(GVAR_MODOC_GHOST_FARM_SEED) == 2) or (((global_var(GVAR_SLAUGHTER_SLAG_TIME) - (game_time / (10 * 60 * 60 * 24))) <= 0) or ((global_var(GVAR_SLAUGHTER_SLAG_TIME) - (game_time / (10 * 60 * 60 * 24))) > 31) and (global_var(GVAR_SLAUGHTER_SLAG_TIME) > 0)))) then begin
                                if (global_var(GVAR_MODOC_GHOST_FARM_SEED) != 0) then begin
                                    if (global_var(GVAR_MODOC_VERMIN_HUNTER_SEED) >= 4) then begin
                                        if (global_var(GVAR_MODOC_GHOST_SEED_PIP) < 3) then begin
                                            set_global_var(GVAR_MODOC_GHOST_SEED_PIP, 3);
                                        end
                                        debug_msg("ghost pip == " + global_var(GVAR_MODOC_GHOST_SEED_PIP));
                                    end
                                    if (global_var(GVAR_MODOC_ENDINGS) < 2) then begin
                                        set_global_var(GVAR_MODOC_ENDINGS, 2);
                                    end
                                    debug_msg("set_modoc_ending_wipeout_1");
                                end
                                else begin
                                    if (global_var(GVAR_MODOC_VERMIN_HUNTER_SEED) >= 4) then begin
                                        if (global_var(GVAR_MODOC_GHOST_SEED_PIP) < 3) then begin
                                            set_global_var(GVAR_MODOC_GHOST_SEED_PIP, 3);
                                        end
                                        debug_msg("ghost pip == " + global_var(GVAR_MODOC_GHOST_SEED_PIP));
                                    end
                                    if (global_var(GVAR_MODOC_ENDINGS) < 3) then begin
                                        set_global_var(GVAR_MODOC_ENDINGS, 3);
                                    end
                                    debug_msg("set_modoc_ending_wipeout_2");
                                end
                            end
                            debug_msg("current slag count == " + global_var(GVAR_SLAG_CNT));
                            kill_critter(self_obj, random(62, 63));
                        end
                    end
                    else begin
                        debug_msg("DESTROYING SLAG");
                        set_global_var(GVAR_SLAG_CNT, global_var(GVAR_SLAG_CNT) - 1);
                        if (((global_var(GVAR_MODOC_GENERIC_FLAG_2) bwand 1024) != 0) and (global_var(GVAR_SLAG_CNT) <= 0) or ((global_var(GVAR_MODOC_GHOST_FARM_SEED) == 2) or (((global_var(GVAR_SLAUGHTER_SLAG_TIME) - (game_time / (10 * 60 * 60 * 24))) <= 0) or ((global_var(GVAR_SLAUGHTER_SLAG_TIME) - (game_time / (10 * 60 * 60 * 24))) > 31) and (global_var(GVAR_SLAUGHTER_SLAG_TIME) > 0)))) then begin
                            if (global_var(GVAR_MODOC_GHOST_FARM_SEED) != 0) then begin
                                if (global_var(GVAR_MODOC_VERMIN_HUNTER_SEED) >= 4) then begin
                                    if (global_var(GVAR_MODOC_GHOST_SEED_PIP) < 3) then begin
                                        set_global_var(GVAR_MODOC_GHOST_SEED_PIP, 3);
                                    end
                                    debug_msg("ghost pip == " + global_var(GVAR_MODOC_GHOST_SEED_PIP));
                                end
                                if (global_var(GVAR_MODOC_ENDINGS) < 2) then begin
                                    set_global_var(GVAR_MODOC_ENDINGS, 2);
                                end
                                debug_msg("set_modoc_ending_wipeout_1");
                            end
                            else begin
                                if (global_var(GVAR_MODOC_VERMIN_HUNTER_SEED) >= 4) then begin
                                    if (global_var(GVAR_MODOC_GHOST_SEED_PIP) < 3) then begin
                                        set_global_var(GVAR_MODOC_GHOST_SEED_PIP, 3);
                                    end
                                    debug_msg("ghost pip == " + global_var(GVAR_MODOC_GHOST_SEED_PIP));
                                end
                                if (global_var(GVAR_MODOC_ENDINGS) < 3) then begin
                                    set_global_var(GVAR_MODOC_ENDINGS, 3);
                                end
                                debug_msg("set_modoc_ending_wipeout_2");
                            end
                        end
                        debug_msg("current slag count == " + global_var(GVAR_SLAG_CNT));
                        destroy_object(self_obj);
                    end
                end
            end
            else begin
                if ((game_time_hour >= 0) and (game_time_hour < 500) or (global_var(GVAR_MODOC_GHOST_FARM_SEED) == 1)) then begin
                    if (obj_is_visible_flag(self_obj) == 1) then begin
                        set_obj_visibility(self_obj, 1);
                    end
                end
                else begin
                    if (obj_is_visible_flag(self_obj) == 0) then begin
                        set_obj_visibility(self_obj, 0);
                    end
                end
            end
        end
    end
    update_time := game_time + (15 * (60 * 10));
end

procedure Node999
begin
end

procedure Node998
begin
    set_local_var(4, local_var(4) bwor 2);
end

procedure timed_event_p_proc
begin
    if (obj_is_visible_flag(self_obj)) then begin
        if (CUR_MAP_GSTFARM) then begin
            if (((global_var(GVAR_MODOC_GENERIC_FLAG_1) bwand 2048) != 0) == 0) then begin
                if (obj_can_see_obj(self_obj, dude_obj)) then begin
                    if (random(1, 2) != 1) then begin
                        if (global_var(GVAR_MODOC_GHOST_FARM_SEED) == 1) then begin
                            float_msg(self_obj, mstr(random(150, 153)), 8 + ((2 - 8) * has_trait(TRAIT_PERK, dude_obj, PERK_empathy)));
                        end
                        else begin
                            if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(dude_tile, tile_num(self_obj)), random(3, 10)), 1 bwor 16);
                            end
                            set_global_var(GVAR_MODOC_GENERIC_FLAG_1, global_var(GVAR_MODOC_GENERIC_FLAG_1) bwor 2048);
                            float_msg(self_obj, mstr(random(100, 104)), 8 + ((7 - 8) * has_trait(TRAIT_PERK, dude_obj, PERK_empathy)));
                        end
                    end
                end
                else begin
                    if (random(1, 2) != 1) then begin
                        float_msg(self_obj, mstr(random(200, 202 + (2 * slag_walking))), 8 + ((2 - 8) * has_trait(TRAIT_PERK, dude_obj, PERK_empathy)));
                    end
                end
            end
        end
        else begin
            if (random(1, 7) != 1) then begin
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(0, 10)), 0);
            end
        end
    end
    metarule3(100, self_obj, 1, 0);
    add_timer_event(self_obj, game_ticks(random(10, 30)), 1);
end
