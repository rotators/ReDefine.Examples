/*******************************************************
*      Some unreferenced imported varables found.      *
*      Because of it it is impossible to specify       *
*      the real names of global variables.             *
*******************************************************/

variable GVar0;
variable GVar1;
variable GVar2;
variable GVar3;
variable GVar4;
variable GVar5;
variable GVar6 := 50;
variable GVar7 := 2;
variable GVar8;
variable GVar9;
variable GVar10;
variable GVar11;
variable GVar12;
variable GVar13;
variable GVar14;
variable GVar15;

/* ?import? variable SVar01; */
/* ?import? variable SVar02; */
/* ?import? variable SVar03; */
/* ?import? variable SVar04; */
/* ?import? variable SVar05; */
/* ?import? variable SVar06; */
/* ?import? variable SVar07; */
/* ?import? variable SVar08; */
/* ?import? variable SVar09; */
/* ?import? variable SVar10; */
/* ?import? variable SVar11; */
/* ?import? variable SVar12; */
/* ?import? variable SVar13; */
/* ?import? variable SVar14; */
/* ?import? variable SVar15; */
/* ?import? variable SVar16; */

procedure start;
procedure damage_p_proc;
procedure talk_p_proc;
procedure critter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure destroy_p_proc;
procedure do_dialogue;
procedure Node999;
procedure Node000;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure LexCombat;
procedure LexJoins;
procedure follow_player;

/* ?import? variable my_tile; */
/* ?import? variable knowstart; */
/* ?import? variable known; */
/* ?import? variable hostile; */
/* ?import? variable following; */
/* ?import? variable initialized; */
/* ?import? variable is_fool; */
/* ?import? variable broken_gen; */

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;

/* ?import? variable reaction; */
/* ?import? variable reaction_level; */
/* ?import? variable got_reaction; */
/* ?import? variable badguy; */
/* ?import? variable exit_line; */
/* ?import? variable here_before; */
/* ?import? variable know_generator; */
/* ?import? variable know_crypts; */
/* ?import? variable know_fools; */
/* ?import? variable know_scraptown; */


procedure start
begin
    if (local_var(4) == 0) then begin
        set_local_var(4, 1);
        add_obj_to_inven(self_obj, create_object(75, 0, 0));
        set_local_var(5, tile_num(self_obj));
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 184);
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        attack(dude_obj);
    end
end

procedure talk_p_proc
begin
    call do_dialogue();
end

procedure critter_p_proc
begin
    if (map_var(5) == 1) then begin
        animate_move_obj_to_tile(self_obj, 19495, 0);
    end
    else begin
        if (map_var(5) == 2) then begin
            animate_move_obj_to_tile(self_obj, local_var(5), 0);
        end
    end
    if (local_var(2)) then begin
        call follow_player();
    end
    if (obj_can_see_obj(self_obj, dude_obj) and not(local_var(1)) and (tile_distance_objs(self_obj, dude_obj) < 10)) then begin
        dialogue_system_enter;
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (GVar2 == 1) then begin
        display_mstr(101);
    end
    else begin
        display_mstr(100);
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (critter_kill_type(self_obj) == KILL_TYPE_children_kills) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(GVAR_GANG_2, global_var(GVAR_GANG_2) + -5);
                debug_msg("Added " + -5 + " to Town Rep");
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -5);
        debug_msg("Player gains " + -5 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(GVAR_GANG_2, global_var(GVAR_GANG_2) + -7);
        debug_msg("Added " + -7 + " to Town Rep");
    end
end

procedure do_dialogue
begin
    start_gdialog(1502, self_obj, 4, -1, -1);
    gsay_start;
    if (local_var(0) == 0) then begin
        call Node000();
    end
    else begin
        if (map_var(2) == 1) then begin
            if ((map_var(6) > 0) or (map_var(7) > 0)) then begin
                call Node009();
            end
            else begin
                call Node024();
            end
        end
        else begin
            if (map_var(2) == 2) then begin
                call Node022();
            end
            else begin
                if (map_var(5) > 0) then begin
                    if ((map_var(6) > 0) or (map_var(7) > 0)) then begin
                        call Node012();
                    end
                    else begin
                        call Node023();
                    end
                end
                else begin
                    if (map_var(13) or map_var(12)) then begin
                        call Node014();
                    end
                    else begin
                        call Node017();
                    end
                end
            end
        end
    end
    gsay_end;
    end_dialogue;
end

procedure Node999
begin
end

procedure Node000
begin
    set_local_var(1, 1);
    set_local_var(0, 1);
    Reply(104);
    giq_option(4, NAME, 105, Node001, NEUTRAL_REACTION);
    giq_option(4, NAME, 106, Node007, NEUTRAL_REACTION);
end

procedure Node001
begin
    Reply(107);
    giq_option(4, NAME, 108, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 109, Node999, NEUTRAL_REACTION);
end

procedure Node002
begin
    Reply(110);
    giq_option(4, NAME, 111, Node003, NEUTRAL_REACTION);
end

procedure Node003
begin
    Reply(112);
    giq_option(4, NAME, 113, Node004, NEUTRAL_REACTION);
end

procedure Node004
begin
    Reply(114);
    giq_option(4, NAME, 115, Node005, NEUTRAL_REACTION);
end

procedure Node005
begin
    Reply(116);
    giq_option(4, NAME, 117, Node006, NEUTRAL_REACTION);
end

procedure Node006
begin
    Reply(118);
    giq_option(4, NAME, 119, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 120, Node017, NEUTRAL_REACTION);
end

procedure Node007
begin
    Reply(121);
    giq_option(4, NAME, 122, Node008, NEUTRAL_REACTION);
end

procedure Node008
begin
    Reply(123);
    giq_option(4, NAME, 124, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 120, Node017, NEUTRAL_REACTION);
end

procedure Node009
begin
    Reply(125);
    giq_option(4, NAME, 126, Node010, NEUTRAL_REACTION);
    giq_option(4, NAME, 127, Node011, NEUTRAL_REACTION);
end

procedure Node010
begin
    Reply(128);
    giq_option(4, NAME, 103, Node999, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(129);
    giq_option(4, NAME, 103, Node999, NEUTRAL_REACTION);
end

procedure Node012
begin
    Reply(130);
    giq_option(4, NAME, 131, Node013, NEUTRAL_REACTION);
    giq_option(4, NAME, 132, Node999, NEUTRAL_REACTION);
end

procedure Node013
begin
    Reply(133);
    giq_option(4, NAME, 134, LexJoins, NEUTRAL_REACTION);
    giq_option(4, NAME, 135, Node999, NEUTRAL_REACTION);
end

procedure Node014
begin
    Reply(136);
    giq_option(4, NAME, 137, Node015, NEUTRAL_REACTION);
    giq_option(4, NAME, 138, Node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 139, Node999, NEUTRAL_REACTION);
end

procedure Node015
begin
    Reply(140);
    giq_option(4, NAME, 103, Node999, NEUTRAL_REACTION);
    call LexCombat();
end

procedure Node016
begin
    Reply(141);
    giq_option(4, NAME, 142, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 120, Node017, NEUTRAL_REACTION);
end

procedure Node017
begin
    Reply(143);
    if (GVar12 == 0) then begin
        giq_option(4, NAME, 144, Node019, NEUTRAL_REACTION);
    end
    if (GVar13 == 0) then begin
        giq_option(4, NAME, 145, Node020, NEUTRAL_REACTION);
    end
    if (GVar14 == 0) then begin
        giq_option(4, NAME, 146, Node021, NEUTRAL_REACTION);
    end
    if (GVar15 == 0) then begin
        giq_option(4, NAME, 147, Node018, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 155, Node999, NEUTRAL_REACTION);
end

procedure Node018
begin
    Reply(149);
    if (GVar12 == 0) then begin
        giq_option(4, NAME, 144, Node019, NEUTRAL_REACTION);
    end
    if (GVar13 == 0) then begin
        giq_option(4, NAME, 145, Node020, NEUTRAL_REACTION);
    end
    if (GVar14 == 0) then begin
        giq_option(4, NAME, 146, Node021, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 103, Node999, NEUTRAL_REACTION);
    GVar15 := 1;
end

procedure Node019
begin
    Reply(150);
    if (GVar13 == 0) then begin
        giq_option(4, NAME, 145, Node020, NEUTRAL_REACTION);
    end
    if (GVar14 == 0) then begin
        giq_option(4, NAME, 146, Node021, NEUTRAL_REACTION);
    end
    if (GVar15 == 0) then begin
        giq_option(4, NAME, 147, Node018, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 103, Node999, NEUTRAL_REACTION);
    GVar12 := 1;
end

procedure Node020
begin
    Reply(151);
    if (GVar12 == 0) then begin
        giq_option(4, NAME, 144, Node019, NEUTRAL_REACTION);
    end
    if (GVar14 == 0) then begin
        giq_option(4, NAME, 146, Node021, NEUTRAL_REACTION);
    end
    if (GVar15 == 0) then begin
        giq_option(4, NAME, 147, Node018, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 103, Node999, NEUTRAL_REACTION);
    GVar13 := 1;
end

procedure Node021
begin
    Reply(152);
    if (GVar12 == 0) then begin
        giq_option(4, NAME, 144, Node019, NEUTRAL_REACTION);
    end
    if (GVar13 == 0) then begin
        giq_option(4, NAME, 145, Node020, NEUTRAL_REACTION);
    end
    if (GVar15 == 0) then begin
        giq_option(4, NAME, 147, Node018, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 103, Node999, NEUTRAL_REACTION);
    GVar14 := 1;
end

procedure Node022
begin
    Reply(153);
    giq_option(4, NAME, 154, Node999, NEUTRAL_REACTION);
end

procedure Node023
begin
    Reply(156);
    giq_option(4, NAME, 157, Node999, NEUTRAL_REACTION);
end

procedure Node024
begin
    Reply(158);
    giq_option(4, NAME, 159, Node999, NEUTRAL_REACTION);
end

procedure LexCombat
begin
    set_local_var(3, 1);
end

procedure LexJoins
begin
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 0);
    set_local_var(2, 1);
end

procedure follow_player
begin
    if (tile_distance_objs(dude_obj, self_obj) > 3) then begin
        animate_move_obj_to_tile(self_obj, tile_num_in_direction(dude_tile, 1, 1), 0);
    end
end

procedure get_reaction
begin
    if (not(GVar8)) then begin
        GVar8 := 1;
        GVar6 := GVar6 + ((dude_charisma - 5) * 5);
        if (GVar9) then begin
            GVar6 := GVar6 - map_var(8);
        end
        else begin
            GVar6 := GVar6 + map_var(8);
        end
        if (global_var(GVAR_CHILDKILLER_REPUTATION) > 2) then begin
            GVar6 := GVar6 - 30;
        end
        if ((global_var(GVAR_BAD_MONSTER) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) then begin
            GVar6 := GVar6 + 20;
        end
        if ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1)) then begin
            GVar6 := GVar6 - 20;
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (GVar6 < 24) then begin
        GVar7 := 1;
    end
    else begin
        if (GVar6 < 74) then begin
            GVar7 := 2;
        end
        else begin
            GVar7 := 3;
        end
    end
end

procedure LevelToReact
begin
    if (GVar7 == 1) then begin
        GVar6 := random(1, 24);
    end
    else begin
        if (GVar7 == 2) then begin
            GVar6 := random(25, 74);
        end
        else begin
            GVar6 := random(75, 100);
        end
    end
end

procedure UpReact
begin
    GVar6 := GVar6 + 10;
    call ReactToLevel();
end

procedure DownReact
begin
    GVar6 := GVar6 - 10;
    call ReactToLevel();
end

procedure BottomReact
begin
    GVar7 := 1;
    GVar6 := 1;
end

procedure TopReact
begin
    GVar6 := 100;
    GVar7 := 3;
end

procedure BigUpReact
begin
    GVar6 := GVar6 + 25;
    call ReactToLevel();
end

procedure BigDownReact
begin
    GVar6 := GVar6 - 25;
    call ReactToLevel();
end

procedure UpReactLevel
begin
    GVar7 := GVar7 + 1;
    if (GVar7 > 3) then begin
        GVar7 := 3;
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    GVar7 := GVar7 - 1;
    if (GVar7 < 1) then begin
        GVar7 := 1;
    end
    call LevelToReact();
end
