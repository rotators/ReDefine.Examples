variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable LVar0;
variable LVar1;
variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;
variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable random_herbs;
variable number_of_herbs;
variable case;
variable min;
variable max;
variable herb_one;
variable herb_two;
variable herb_three;
variable herb_four;
variable herb_five;
variable herb_six;
variable herb_seven;
variable herb_eight;
variable herb_nine;
variable herb_ten;
variable herb_eleven;
variable herb_twelve;
variable current_town := "";
variable town_level;
variable percent;
variable random_book;
variable random_books;
variable book_one;
variable book_two;
variable book_three;
variable book_four;
variable book_five;
variable book_six;
variable book_seven;
variable book_eight;
variable book_nine;
variable book_ten;
variable book_eleven;
variable book_twelve;
variable book_thirteen;
variable book_fourteen;
variable book_fifteen;
variable book_sixteen;
variable book_seventeen;
variable book_eighteen;

procedure checkPartyMembersNearDoor;
procedure start;
procedure use_p_proc;
procedure pickup_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure Look_Traps_And_Locks;
procedure Look_Traps;
procedure Look_Locks;
procedure Skill_Disarm_Traps;
procedure Disarm_Traps;
procedure Unlock_Lock;
procedure Lockpick_Lock;
procedure Lockpick_Door;
procedure Lock_Door;
procedure Set_Lock;
procedure Set_Lockpick_Lock;
procedure Set_Trap;
procedure Pry_Door;
procedure Damage_Critter;
procedure Super_Lockpick_Lock;
procedure Super_Set_Lockpick_Lock;

import variable i_duppo_table;
import variable i_duppo_talk;
import variable i_duppo_obj;

variable Locks_Roll;
variable Traps_Roll;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
    i_duppo_table := self_obj;
end

procedure use_p_proc
begin
    if (i_duppo_obj != -1) then begin
        script_overrides;
        i_duppo_table := self_obj;
        i_duppo_talk := 1;
        debug_msg("SIDTBL: duppo should talk");
    end
    else begin
        debug_msg("SIDTBL: duppo is -1");
        Traps_Roll := roll_vs_skill(source_obj, 11, 0);
        if (local_var(1) == 0) then begin
            if (is_success(Traps_Roll)) then begin
                script_overrides;
                set_local_var(2, 1);
                reg_anim_func(2, source_obj);
                if (source_obj == dude_obj) then begin
                    display_msg(message_str(SCRIPT_CONTAINR, 204));
                end
                else begin
                    display_msg(message_str(SCRIPT_CONTAINR, 205));
                end
            end
            else begin
                if (obj_is_locked(self_obj)) then begin
                    script_overrides;
                    display_msg(message_str(SCRIPT_CONTAINR, 203));
                    call Damage_Critter();
                end
                else begin
                    call Damage_Critter();
                end
            end
        end
        else begin
            if (obj_is_locked(self_obj)) then begin
                script_overrides;
                display_msg(message_str(SCRIPT_CONTAINR, 203));
            end
        end
    end
end

procedure pickup_p_proc
begin
    call use_p_proc();
end

procedure look_at_p_proc
begin
end

procedure description_p_proc
begin
end

procedure use_skill_on_p_proc
begin
    variable LVar0 := 0;
    LVar0 := action_being_used;
    if (LVar0 == 9) then begin
        script_overrides;
        if (local_var(0) == 0) then begin
            call Unlock_Lock();
        end
        else begin
            call Set_Lock();
        end
    end
    else begin
        if (LVar0 == 11) then begin
            script_overrides;
            if (local_var(1) == 0) then begin
                call Skill_Disarm_Traps();
            end
            else begin
                if (source_obj == dude_obj) then begin
                    display_msg(message_str(SCRIPT_CONTAINR, 195));
                end
                else begin
                    display_msg(obj_name(source_obj) + message_str(SCRIPT_CONTAINR, 200));
                end
            end
        end
    end
    return 0;
    LVar0 := 0;
end

procedure use_obj_on_p_proc
begin
    variable LVar0 := 0;
    LVar0 := obj_pid(obj_being_used_with);
    if (0 == 0) then begin
        script_overrides;
        if (LVar0 == 84) then begin
            if (local_var(0) == 0) then begin
                call Lockpick_Lock();
            end
            else begin
                call Set_Lockpick_Lock();
            end
        end
        else begin
            if (LVar0 == 410) then begin
                script_overrides;
                if (local_var(0) == 0) then begin
                    call Super_Lockpick_Lock();
                end
                else begin
                    call Super_Set_Lockpick_Lock();
                end
            end
        end
    end
    else begin
        if (0 == 1) then begin
            if (LVar0 == 77) then begin
                script_overrides;
                if (local_var(0) == 0) then begin
                    call Lockpick_Lock();
                end
                else begin
                    call Set_Lockpick_Lock();
                end
            end
            else begin
                if (LVar0 == 411) then begin
                    script_overrides;
                    if (local_var(0) == 0) then begin
                        call Super_Lockpick_Lock();
                    end
                    else begin
                        call Super_Set_Lockpick_Lock();
                    end
                end
            end
        end
        else begin
            if (LVar0 == 20) then begin
                script_overrides;
                call Pry_Door();
            end
            else begin
                if ((LVar0 == 51) or (LVar0 == 85)) then begin
                    script_overrides;
                    call Set_Trap();
                end
            end
        end
    end
    return 0;
    LVar0 := 0;
end

procedure damage_p_proc
begin
    variable LVar0 := 0;
    if (weapon_dmg_type(target_obj) == 6) then begin
        if (3 == 0) then begin
            if (local_var(1) == 0) then begin
                set_local_var(1, 1);
                set_local_var(0, 1);
                LVar0 := random(10, 20);
                explosion(tile_num(self_obj), elevation(self_obj), LVar0);
                destroy_object(self_obj);
            end
            else begin
                set_local_var(1, 1);
                set_local_var(0, 1);
                destroy_object(self_obj);
            end
        end
        else begin
            if ((3 == 1) or (3 == 2)) then begin
                set_local_var(4, local_var(4) + 1);
                if (local_var(1) == 0) then begin
                    set_local_var(0, 1);
                    LVar0 := random(10, 20);
                    explosion(tile_num(self_obj), elevation(self_obj), LVar0);
                end
                else begin
                    if (local_var(4) > 1) then begin
                        set_local_var(1, 1);
                        set_local_var(0, 1);
                        destroy_object(self_obj);
                    end
                end
            end
        end
    end
    else begin
        display_msg(message_str(SCRIPT_CONTAINR, 193));
    end
    return 0;
    LVar0 := 0;
end

procedure map_enter_p_proc
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    if (local_var(3) == 0) then begin
        set_local_var(3, 1);
        set_local_var(0, 1);
        set_local_var(1, 1);
    end
    if (local_var(0) == 0) then begin
        obj_lock(self_obj);
    end
    else begin
        obj_unlock(self_obj);
    end
    debug_msg("SIDTBL: I_duppo_obj " + i_duppo_obj);
    if (i_duppo_obj != -1) then begin
        if (local_var(7) < game_time) then begin
            if (tile_num(self_obj) == 17327) then begin
                LVar0 := create_object(128, 5, 0);
                if (obj_is_carrying_obj_pid(self_obj, 479) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 479);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 356) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 356);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 377) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 377);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 366) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 366);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 446) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 446);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 492) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 492);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 288) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 288);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 253) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 253);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 254) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 254);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 266) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 266);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 267) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 267);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 258) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 258);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 255) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 255);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 256) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 256);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 257) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 257);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 96) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 96);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 97) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 97);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 99) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 99);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 223) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 223);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 252) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 252);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 298) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 298);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 302) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 302);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 303) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 303);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 305) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 305);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 306) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 306);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 307) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 307);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 335) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 335);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 336) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 336);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 337) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 337);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 338) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 338);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 339) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 339);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 340) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 340);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 341) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 341);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 414) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 414);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 422) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 422);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 431) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 431);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 431) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 431);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 432) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 432);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 431) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 431);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 447) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 447);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 448) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 448);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 449) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 449);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 456) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 456);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 468) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 468);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 471) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 471);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 476) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 476);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 488) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 488);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 495) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 495);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                global_temp := create_object(128, 0, 0);
                move_obj_inven_to_obj(self_obj, global_temp);
                destroy_object(global_temp);
                if ((CUR_MAP_ARCAVES) or (CUR_MAP_ARVILLAG) or (CUR_MAP_ARCAVES5) or (CUR_MAP_ARBRIDGE)) then begin
                    current_town := "Arroyo";
                end
                if ((CUR_MAP_KLADWTWN) or (CUR_MAP_KLAMALL) or (CUR_MAP_KLARATCV) or (CUR_MAP_KLATRAP) or (CUR_MAP_KLAGRAZ) or (CUR_MAP_KLACANYN) or (CUR_MAP_KLACVENT)) then begin
                    current_town := "Klamath";
                end
                if (CUR_MAP_KLATOXCV) then begin
                    current_town := "Klamath Toxic Caves";
                end
                if (CUR_MAP_RNDMDDG) then begin
                    current_town := "Mad Dog Area";
                end
                if ((CUR_MAP_DENBUS1) or (CUR_MAP_DENBUS2) or (CUR_MAP_DENRES1)) then begin
                    current_town := "Den";
                end
                if ((CUR_MAP_PRIMIT) or (CUR_MAP_TRIBE02) or (CUR_MAP_SLVCAMP) or (CUR_MAP_TRIBE2)) then begin
                    current_town := "Primitive Tribes";
                end
                if (CUR_MAP_TRIBE01) then begin
                    current_town := "Primitive Tribe";
                end
                if (CUR_MAP_DNSLVRUN) then begin
                    current_town := "Den Slave Run";
                end
                if (CUR_MAP_JENFARM7) then begin
                    current_town := "Jennings Farm Area";
                end
                if (CUR_MAP_TRUCK) then begin
                    current_town := "Truck";
                end
                if (CUR_MAP_SCRAPT) then begin
                    current_town := "Scraptown";
                end
                if ((CUR_MAP_MODMAIN) or (CUR_MAP_MODINN) or (CUR_MAP_MODBRAH) or (CUR_MAP_MODGARD) or (CUR_MAP_MODSHIT) or (CUR_MAP_MODWELL)) then begin
                    current_town := "Modoc";
                end
                if (CUR_MAP_CRISIENT) then begin
                    current_town := "Vault 23";
                end
                if ((CUR_MAP_GSTFARM) or (CUR_MAP_GSTCAV1) or (CUR_MAP_GSTCAV2)) then begin
                    current_town := "Ghost Farm";
                end
                if (CUR_MAP_MODOCT) then begin
                    current_town := "Modoc Thieves Guild";
                end
                if (CUR_MAP_MODOCT2) then begin
                    current_town := "Salvatore's Gun Stash";
                end
                if (CUR_MAP_MODOCT3) then begin
                    current_town := "Special Salvatore";
                end
                if (CUR_MAP_MODOCT4) then begin
                    current_town := "Salvatore Meeting";
                end
                if ((CUR_MAP_GECKSETL) or (CUR_MAP_GECKPWPL) or (CUR_MAP_GECKJUNK) or (CUR_MAP_GECKTUNL)) then begin
                    current_town := "Gecko";
                end
                if ((CUR_MAP_VCTYCTYD) or (CUR_MAP_VCTYDWTN) or (CUR_MAP_VCTYCOCL) or (CUR_MAP_VCTYVLT)) then begin
                    current_town := "Vault City";
                end
                if ((CUR_MAP_RAIDERS1) or (CUR_MAP_RAIDERS2)) then begin
                    current_town := "Raiders";
                end
                if ((CUR_MAP_BROKEN1) or (CUR_MAP_BROKEN2)) then begin
                    current_town := "Broken Hills";
                end
                if ((CUR_MAP_REDDOWN) or (CUR_MAP_REDWAME) or (CUR_MAP_REDWAN1) or (CUR_MAP_REDMENT) or (CUR_MAP_REDDTUN) or (CUR_MAP_REDMTUN)) then begin
                    current_town := "Redding";
                end
                if ((CUR_MAP_NEWR1) or (CUR_MAP_NEWR2) or (CUR_MAP_NEWR3) or (CUR_MAP_NEWR4) or (CUR_MAP_NEWRCS) or (CUR_MAP_NEWRBA) or (CUR_MAP_NEWRVB)) then begin
                    current_town := "New Reno";
                end
                if ((CUR_MAP_LARS1) or (CUR_MAP_LARS3) or (CUR_MAP_LARSSCRP) or (CUR_MAP_LARS2)) then begin
                    current_town := "Lars-City";
                end
                if (CUR_MAP_CRSNMAIN) then begin
                    current_town := "Lars-City Carson";
                end
                if (CUR_MAP_ABBEY) then begin
                    current_town := "Abbey";
                end
                if ((CUR_MAP_EPAMAIN) or (CUR_MAP_EPAWRHSE)) then begin
                    current_town := "EPA";
                end
                if ((CUR_MAP_COLLY) or (CUR_MAP_COLLY1)) then begin
                    current_town := "Collyweb";
                end
                if (CUR_MAP_NEWRGO) then begin
                    current_town := "Golgotha";
                end
                if (CUR_MAP_NEWRST) then begin
                    current_town := "Reno Stables";
                end
                if ((CUR_MAP_DEPOLV1) or (CUR_MAP_DEPOLVA) or (CUR_MAP_DEPOLVB)) then begin
                    current_town := "Sierra Army Base";
                end
                if ((CUR_MAP_NCRENT) or (CUR_MAP_NCR2) or (CUR_MAP_NCR1) or (CUR_MAP_NCR3) or (CUR_MAP_NCR4)) then begin
                    current_town := "NCR";
                end
                if (CUR_MAP_B21) then begin
                    current_town := "B21";
                end
                if ((CUR_MAP_V15ENT) or (CUR_MAP_V15ENTB) or (CUR_MAP_VAULT15) or (CUR_MAP_V15SENT)) then begin
                    current_town := "Vault 15";
                end
                if ((CUR_MAP_VAULT13) or (CUR_MAP_V13ENT)) then begin
                    current_town := "Vault 13";
                end
                if ((CUR_MAP_MBASE12) or (CUR_MAP_MBASE34) or (CUR_MAP_MBCLOSE)) then begin
                    current_town := "Military Base";
                end
                if ((CUR_MAP_SFCHINA) or (CUR_MAP_SFDOCK) or (CUR_MAP_SFTANKER) or (CUR_MAP_SFSHUTL1) or (CUR_MAP_SFSHUTL2) or (CUR_MAP_SFELRONB) or (CUR_MAP_SFCHINA2)) then begin
                    current_town := "San Francisco";
                end
                if ((CUR_MAP_BROHDENT1) or (CUR_MAP_BROHD121) or (CUR_MAP_BROHD341) or (CUR_MAP_BROHD1K)) then begin
                    current_town := "Brohdent";
                end
                if ((CUR_MAP_V14ENT) or (CUR_MAP_VAULT14) or (CUR_MAP_VAULT14B)) then begin
                    current_town := "Vault 14";
                end
                if (CUR_MAP_NAVARRO) then begin
                    current_town := "Navarro";
                end
                if ((CUR_MAP_ENCDOCK) or (CUR_MAP_ENCDET) or (CUR_MAP_ENCFITE) or (CUR_MAP_ENCGD) or (CUR_MAP_ENCPRES) or (CUR_MAP_ENCRCTR) or (CUR_MAP_ENCTRP) or (CUR_MAP_ENCVERT) or (CUR_MAP_ENCFT2)) then begin
                    current_town := "Enclave";
                end
                if ((CUR_MAP_BROHDENT) or (CUR_MAP_CITYCH3) or (CUR_MAP_BROHD34)) then begin
                    current_town := "BoS Bunker";
                end
                if (CUR_MAP_BRHDHLP) then begin
                    current_town := "BoS Help";
                end
                if ((CUR_MAP_EPAENT) or (CUR_MAP_EPAX)) then begin
                    current_town := "BOS Facility";
                end
                if (CUR_MAP_RNDWHALE) then begin
                    current_town := "Special Whale";
                end
                if (CUR_MAP_RNDTINWD) then begin
                    current_town := "Special Woodsman";
                end
                if (CUR_MAP_RNDBHEAD) then begin
                    current_town := "Special Head";
                end
                if (CUR_MAP_RNDSHUTL) then begin
                    current_town := "Special Shuttle";
                end
                if (CUR_MAP_RNDUVILG) then begin
                    current_town := "Special Unwashed";
                end
                if (CUR_MAP_RNDBRIDG) then begin
                    current_town := "Special Bridge";
                end
                if (CUR_MAP_RNDCAFE) then begin
                    current_town := "Special Cafe";
                end
                if (CUR_MAP_RNDHOLY1) then begin
                    current_town := "Special Holy 1";
                end
                if (CUR_MAP_RNDHOLY2) then begin
                    current_town := "Special Holy 2";
                end
                if (CUR_MAP_RNDFORVR) then begin
                    current_town := "Special Guardian";
                end
                if (CUR_MAP_RNDTOXIC) then begin
                    current_town := "Special Toxic";
                end
                if (CUR_MAP_RNDPARIH) then begin
                    current_town := "Special Pariah";
                end
                if (CUR_MAP_RNDEXCOW) then begin
                    current_town := "Special Brahmin";
                end
                if (CUR_MAP_RNDPOSTM) then begin
                    current_town := "Special Postman";
                end
                if (CUR_MAP_MODOCT3) then begin
                    current_town := "Special Salvator";
                end
                if (CUR_MAP_RNDMSTR) then begin
                    current_town := "Dead Soldiers of Master Army";
                end
                if ((CUR_MAP_BHRNDMNT) or (CUR_MAP_BHRNDDST)) then begin
                    current_town := "Caravan Encounters";
                end
                if (CUR_MAP_GAMMOVIE) then begin
                    current_town := "In Game Movie";
                end
                if (CUR_MAP_RNDBESS) then begin
                    current_town := "Bess Dead";
                end
                if ((CUR_MAP_RNDBD) or (CUR_MAP_RNDBD)) then begin
                    current_town := "DeathClaw Encounters";
                end
                if ((CUR_MAP_DESERT1) or (CUR_MAP_DESERT2) or (CUR_MAP_DESERT3) or (CUR_MAP_DESERT4) or (CUR_MAP_DESERT5) or (CUR_MAP_DESERT6) or (CUR_MAP_DESERT7) or (CUR_MAP_DESERT213) or (CUR_MAP_DESERT214) or (CUR_MAP_DESERT215) or (CUR_MAP_DESERT216) or (CUR_MAP_DESERT217)) then begin
                    current_town := "Random Encounter Desert";
                end
                if ((CUR_MAP_MOUNTN1) or (CUR_MAP_MOUNTN2) or (CUR_MAP_MOUNTN3) or (CUR_MAP_MOUNTN4) or (CUR_MAP_MOUNTN5) or (CUR_MAP_MOUNTN6)) then begin
                    current_town := "Random Encounter Mountain";
                end
                if ((CUR_MAP_CITY1) or (CUR_MAP_CITY2) or (CUR_MAP_CITY3) or (CUR_MAP_CITY4) or (CUR_MAP_CITY5) or (CUR_MAP_CITY6) or (CUR_MAP_CITY7) or (CUR_MAP_CITY8)) then begin
                    current_town := "Random Encounter City";
                end
                if ((CUR_MAP_COAST1) or (CUR_MAP_COAST2) or (CUR_MAP_COAST3) or (CUR_MAP_COAST4) or (CUR_MAP_COAST5) or (CUR_MAP_COAST6) or (CUR_MAP_COAST7) or (CUR_MAP_COAST8) or (CUR_MAP_COAST9) or (CUR_MAP_COAST10) or (CUR_MAP_COAST11) or (CUR_MAP_07DESERT)) then begin
                    current_town := "Random Encounter Coast";
                end
                if ((CUR_MAP_CAVE0) or (CUR_MAP_CAVE1) or (CUR_MAP_CAVE2) or (CUR_MAP_CAVE3) or (CUR_MAP_CAVE4) or (CUR_MAP_CAVE5) or (CUR_MAP_CAVE6) or (CUR_MAP_CAVE7)) then begin
                    current_town := "Random Encounter Cavern";
                end
                if ((current_town == "Arroyo") or (current_town == "Klamath") or (current_town == "Klamath Toxic Caves") or (current_town == "Mad Dog Area")) then begin
                    town_level := 1;
                end
                if ((current_town == "Den") or (current_town == "Den Slave Run") or (current_town == "Modoc") or (current_town == "Vault 23") or (current_town == "Jennings Farm Area") or (current_town == "Truck") or (current_town == "Scraptown") or (current_town == "Modoc Thieves Guild") or (current_town == "Salvatore's Gun Stash") or (current_town == "Special Salvatore") or (current_town == "Salvatore Meeting") or (current_town == "Collyweb") or (current_town == "Primitive Tribe") or (current_town == "Ghost Farm")) then begin
                    town_level := 2;
                end
                if ((current_town == "Gecko") or (current_town == "Vault City") or (current_town == "Raiders") or (current_town == "Special Whale") or (current_town == "Special Woodsman") or (current_town == "Special Head") or (current_town == "Special Shuttle") or (current_town == "Special Unwashed") or (current_town == "Special Bridge") or (current_town == "Special Cafe") or (current_town == "Special Holy 1") or (current_town == "Special Holy 2") or (current_town == "Special Guardian") or (current_town == "Special Toxic") or (current_town == "Special Pariah") or (current_town == "Special Brahmin") or (current_town == "Special Postman") or (current_town == "Special Salvator") or (current_town == "Dead Soldiers of Master Army") or (current_town == "Caravan Encounters") or (current_town == "DeathClaw Encounters") or (current_town == "Random Encounter Desert") or (current_town == "Random Encounter Mountain") or (current_town == "Random Encounter City") or (current_town == "Random Encounter Coast") or (current_town == "Random Encounter Cavern") or (current_town == "Bess Dead") or (current_town == "In Game Movie")) then begin
                    town_level := 3;
                end
                if ((current_town == "Broken Hills") or (current_town == "New Reno") or (current_town == "Salvatore's Gun Stash") or (current_town == "Special Salvatore") or (current_town == "Salvatore Meeting") or (current_town == "Golgotha") or (current_town == "Reno Stables") or (current_town == "Redding") or (current_town == "Abbey") or (current_town == "Lars-City Carson") or (current_town == "Lars-City") or (current_town == "EPA") or (current_town == "Sierra Army Base")) then begin
                    town_level := 4;
                end
                if ((current_town == "NCR") or (current_town == "Vault 15") or (current_town == "B21") or (current_town == "Vault 13")) then begin
                    town_level := 5;
                end
                if ((current_town == "Military Base") or (current_town == "Navarro") or (current_town == "San Francisco") or (current_town == "Vault 14") or (current_town == "Brohdent") or (current_town == "BOS Facility") or (current_town == "BoS Help") or (current_town == "BoS Bunker") or (current_town == "Enclave")) then begin
                    town_level := 6;
                end
                if (current_town == "") then begin
                    town_level := 4;
                end
                if (town_level == 1) then begin
                    restock_amt := random(2, 2);
                    if (obj_is_carrying_obj_pid(self_obj, 805) < restock_amt) then begin
                        if (50 >= random(1, 100)) then begin
                            if (obj_is_carrying_obj_pid(self_obj, 805) < restock_amt) then begin
                                restock_obj := create_object(805, 0, 0);
                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 805));
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, 805) > restock_amt) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 805);
                                    if ((obj_is_carrying_obj_pid(self_obj, 805) - restock_amt) < removed_qty) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 805) - restock_amt;
                                    end
                                    if (removed_qty > 0) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 805);
                                        if (obj_type(self_obj) == 1) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 805);
                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                    add_obj_to_inven(self_obj, restock_obj);
                                                end
                                            end
                                            else begin
                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                    inven_unwield(self_obj);
                                                end
                                            end
                                        end
                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                        destroy_object(restock_obj);
                                    end
                                    restock_obj := 0;
                                    restock_amt := 0;
                                end
                                else begin
                                    restock_obj := 0;
                                end
                            end
                        end
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 805) < restock_amt) then begin
                            restock_obj := create_object(805, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 805));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 805) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 805);
                                if ((obj_is_carrying_obj_pid(self_obj, 805) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 805) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 805);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 805);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                    restock_amt := random(1, 1);
                    if (obj_is_carrying_obj_pid(self_obj, 103) < restock_amt) then begin
                        if (50 >= random(1, 100)) then begin
                            if (obj_is_carrying_obj_pid(self_obj, 103) < restock_amt) then begin
                                restock_obj := create_object(103, 0, 0);
                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 103));
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, 103) > restock_amt) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 103);
                                    if ((obj_is_carrying_obj_pid(self_obj, 103) - restock_amt) < removed_qty) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 103) - restock_amt;
                                    end
                                    if (removed_qty > 0) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 103);
                                        if (obj_type(self_obj) == 1) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 103);
                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                    add_obj_to_inven(self_obj, restock_obj);
                                                end
                                            end
                                            else begin
                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                    inven_unwield(self_obj);
                                                end
                                            end
                                        end
                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                        destroy_object(restock_obj);
                                    end
                                    restock_obj := 0;
                                    restock_amt := 0;
                                end
                                else begin
                                    restock_obj := 0;
                                end
                            end
                        end
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 103) < restock_amt) then begin
                            restock_obj := create_object(103, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 103));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 103) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 103);
                                if ((obj_is_carrying_obj_pid(self_obj, 103) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 103) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 103);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 103);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                    restock_amt := random(1, 1);
                    if (obj_is_carrying_obj_pid(self_obj, 81) < restock_amt) then begin
                        if (50 >= random(1, 100)) then begin
                            if (obj_is_carrying_obj_pid(self_obj, 81) < restock_amt) then begin
                                restock_obj := create_object(81, 0, 0);
                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 81));
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, 81) > restock_amt) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 81);
                                    if ((obj_is_carrying_obj_pid(self_obj, 81) - restock_amt) < removed_qty) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 81) - restock_amt;
                                    end
                                    if (removed_qty > 0) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 81);
                                        if (obj_type(self_obj) == 1) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 81);
                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                    add_obj_to_inven(self_obj, restock_obj);
                                                end
                                            end
                                            else begin
                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                    inven_unwield(self_obj);
                                                end
                                            end
                                        end
                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                        destroy_object(restock_obj);
                                    end
                                    restock_obj := 0;
                                    restock_amt := 0;
                                end
                                else begin
                                    restock_obj := 0;
                                end
                            end
                        end
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 81) < restock_amt) then begin
                            restock_obj := create_object(81, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 81));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 81) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 81);
                                if ((obj_is_carrying_obj_pid(self_obj, 81) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 81) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 81);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 81);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                    restock_amt := random(0, 2);
                    if (obj_is_carrying_obj_pid(self_obj, 318) < restock_amt) then begin
                        if (50 >= random(1, 100)) then begin
                            if (obj_is_carrying_obj_pid(self_obj, 318) < restock_amt) then begin
                                restock_obj := create_object(318, 0, 0);
                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 318));
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, 318) > restock_amt) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 318);
                                    if ((obj_is_carrying_obj_pid(self_obj, 318) - restock_amt) < removed_qty) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 318) - restock_amt;
                                    end
                                    if (removed_qty > 0) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 318);
                                        if (obj_type(self_obj) == 1) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 318);
                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                    add_obj_to_inven(self_obj, restock_obj);
                                                end
                                            end
                                            else begin
                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                    inven_unwield(self_obj);
                                                end
                                            end
                                        end
                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                        destroy_object(restock_obj);
                                    end
                                    restock_obj := 0;
                                    restock_amt := 0;
                                end
                                else begin
                                    restock_obj := 0;
                                end
                            end
                        end
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 318) < restock_amt) then begin
                            restock_obj := create_object(318, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 318));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 318) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 318);
                                if ((obj_is_carrying_obj_pid(self_obj, 318) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 318) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 318);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 318);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                    restock_amt := random(0, 1);
                    if (obj_is_carrying_obj_pid(self_obj, 71) < restock_amt) then begin
                        if (50 >= random(1, 100)) then begin
                            if (obj_is_carrying_obj_pid(self_obj, 71) < restock_amt) then begin
                                restock_obj := create_object(71, 0, 0);
                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 71));
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, 71) > restock_amt) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 71);
                                    if ((obj_is_carrying_obj_pid(self_obj, 71) - restock_amt) < removed_qty) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 71) - restock_amt;
                                    end
                                    if (removed_qty > 0) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 71);
                                        if (obj_type(self_obj) == 1) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 71);
                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                    add_obj_to_inven(self_obj, restock_obj);
                                                end
                                            end
                                            else begin
                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                    inven_unwield(self_obj);
                                                end
                                            end
                                        end
                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                        destroy_object(restock_obj);
                                    end
                                    restock_obj := 0;
                                    restock_amt := 0;
                                end
                                else begin
                                    restock_obj := 0;
                                end
                            end
                        end
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 71) < restock_amt) then begin
                            restock_obj := create_object(71, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 71));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 71) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 71);
                                if ((obj_is_carrying_obj_pid(self_obj, 71) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 71) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 71);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 71);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                    restock_amt := random(0, 1);
                    if (obj_is_carrying_obj_pid(self_obj, 273) < restock_amt) then begin
                        if (50 >= random(1, 100)) then begin
                            if (obj_is_carrying_obj_pid(self_obj, 273) < restock_amt) then begin
                                restock_obj := create_object(273, 0, 0);
                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 273));
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, 273) > restock_amt) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 273);
                                    if ((obj_is_carrying_obj_pid(self_obj, 273) - restock_amt) < removed_qty) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 273) - restock_amt;
                                    end
                                    if (removed_qty > 0) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 273);
                                        if (obj_type(self_obj) == 1) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 273);
                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                    add_obj_to_inven(self_obj, restock_obj);
                                                end
                                            end
                                            else begin
                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                    inven_unwield(self_obj);
                                                end
                                            end
                                        end
                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                        destroy_object(restock_obj);
                                    end
                                    restock_obj := 0;
                                    restock_amt := 0;
                                end
                                else begin
                                    restock_obj := 0;
                                end
                            end
                        end
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 273) < restock_amt) then begin
                            restock_obj := create_object(273, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 273));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 273) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 273);
                                if ((obj_is_carrying_obj_pid(self_obj, 273) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 273) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 273);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 273);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                    restock_amt := random(0, 1);
                    if (obj_is_carrying_obj_pid(self_obj, 801) < restock_amt) then begin
                        if (50 >= random(1, 100)) then begin
                            if (obj_is_carrying_obj_pid(self_obj, 801) < restock_amt) then begin
                                restock_obj := create_object(801, 0, 0);
                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 801));
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, 801) > restock_amt) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 801);
                                    if ((obj_is_carrying_obj_pid(self_obj, 801) - restock_amt) < removed_qty) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 801) - restock_amt;
                                    end
                                    if (removed_qty > 0) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 801);
                                        if (obj_type(self_obj) == 1) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 801);
                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                    add_obj_to_inven(self_obj, restock_obj);
                                                end
                                            end
                                            else begin
                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                    inven_unwield(self_obj);
                                                end
                                            end
                                        end
                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                        destroy_object(restock_obj);
                                    end
                                    restock_obj := 0;
                                    restock_amt := 0;
                                end
                                else begin
                                    restock_obj := 0;
                                end
                            end
                        end
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 801) < restock_amt) then begin
                            restock_obj := create_object(801, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 801));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 801) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 801);
                                if ((obj_is_carrying_obj_pid(self_obj, 801) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 801) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 801);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 801);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (town_level == 2) then begin
                        restock_amt := random(2, 3);
                        if (obj_is_carrying_obj_pid(self_obj, 805) < restock_amt) then begin
                            if (50 >= random(1, 100)) then begin
                                if (obj_is_carrying_obj_pid(self_obj, 805) < restock_amt) then begin
                                    restock_obj := create_object(805, 0, 0);
                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 805));
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, 805) > restock_amt) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 805);
                                        if ((obj_is_carrying_obj_pid(self_obj, 805) - restock_amt) < removed_qty) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 805) - restock_amt;
                                        end
                                        if (removed_qty > 0) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 805);
                                            if (obj_type(self_obj) == 1) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, 805);
                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                        add_obj_to_inven(self_obj, restock_obj);
                                                    end
                                                end
                                                else begin
                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                        inven_unwield(self_obj);
                                                    end
                                                end
                                            end
                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                            destroy_object(restock_obj);
                                        end
                                        restock_obj := 0;
                                        restock_amt := 0;
                                    end
                                    else begin
                                        restock_obj := 0;
                                    end
                                end
                            end
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 805) < restock_amt) then begin
                                restock_obj := create_object(805, 0, 0);
                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 805));
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, 805) > restock_amt) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 805);
                                    if ((obj_is_carrying_obj_pid(self_obj, 805) - restock_amt) < removed_qty) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 805) - restock_amt;
                                    end
                                    if (removed_qty > 0) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 805);
                                        if (obj_type(self_obj) == 1) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 805);
                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                    add_obj_to_inven(self_obj, restock_obj);
                                                end
                                            end
                                            else begin
                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                    inven_unwield(self_obj);
                                                end
                                            end
                                        end
                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                        destroy_object(restock_obj);
                                    end
                                    restock_obj := 0;
                                    restock_amt := 0;
                                end
                                else begin
                                    restock_obj := 0;
                                end
                            end
                        end
                        restock_amt := random(1, 2);
                        if (obj_is_carrying_obj_pid(self_obj, 103) < restock_amt) then begin
                            if (50 >= random(1, 100)) then begin
                                if (obj_is_carrying_obj_pid(self_obj, 103) < restock_amt) then begin
                                    restock_obj := create_object(103, 0, 0);
                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 103));
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, 103) > restock_amt) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 103);
                                        if ((obj_is_carrying_obj_pid(self_obj, 103) - restock_amt) < removed_qty) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 103) - restock_amt;
                                        end
                                        if (removed_qty > 0) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 103);
                                            if (obj_type(self_obj) == 1) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, 103);
                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                        add_obj_to_inven(self_obj, restock_obj);
                                                    end
                                                end
                                                else begin
                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                        inven_unwield(self_obj);
                                                    end
                                                end
                                            end
                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                            destroy_object(restock_obj);
                                        end
                                        restock_obj := 0;
                                        restock_amt := 0;
                                    end
                                    else begin
                                        restock_obj := 0;
                                    end
                                end
                            end
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 103) < restock_amt) then begin
                                restock_obj := create_object(103, 0, 0);
                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 103));
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, 103) > restock_amt) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 103);
                                    if ((obj_is_carrying_obj_pid(self_obj, 103) - restock_amt) < removed_qty) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 103) - restock_amt;
                                    end
                                    if (removed_qty > 0) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 103);
                                        if (obj_type(self_obj) == 1) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 103);
                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                    add_obj_to_inven(self_obj, restock_obj);
                                                end
                                            end
                                            else begin
                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                    inven_unwield(self_obj);
                                                end
                                            end
                                        end
                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                        destroy_object(restock_obj);
                                    end
                                    restock_obj := 0;
                                    restock_amt := 0;
                                end
                                else begin
                                    restock_obj := 0;
                                end
                            end
                        end
                        restock_amt := random(1, 2);
                        if (obj_is_carrying_obj_pid(self_obj, 81) < restock_amt) then begin
                            if (50 >= random(1, 100)) then begin
                                if (obj_is_carrying_obj_pid(self_obj, 81) < restock_amt) then begin
                                    restock_obj := create_object(81, 0, 0);
                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 81));
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, 81) > restock_amt) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 81);
                                        if ((obj_is_carrying_obj_pid(self_obj, 81) - restock_amt) < removed_qty) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 81) - restock_amt;
                                        end
                                        if (removed_qty > 0) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 81);
                                            if (obj_type(self_obj) == 1) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, 81);
                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                        add_obj_to_inven(self_obj, restock_obj);
                                                    end
                                                end
                                                else begin
                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                        inven_unwield(self_obj);
                                                    end
                                                end
                                            end
                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                            destroy_object(restock_obj);
                                        end
                                        restock_obj := 0;
                                        restock_amt := 0;
                                    end
                                    else begin
                                        restock_obj := 0;
                                    end
                                end
                            end
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 81) < restock_amt) then begin
                                restock_obj := create_object(81, 0, 0);
                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 81));
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, 81) > restock_amt) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 81);
                                    if ((obj_is_carrying_obj_pid(self_obj, 81) - restock_amt) < removed_qty) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 81) - restock_amt;
                                    end
                                    if (removed_qty > 0) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 81);
                                        if (obj_type(self_obj) == 1) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 81);
                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                    add_obj_to_inven(self_obj, restock_obj);
                                                end
                                            end
                                            else begin
                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                    inven_unwield(self_obj);
                                                end
                                            end
                                        end
                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                        destroy_object(restock_obj);
                                    end
                                    restock_obj := 0;
                                    restock_amt := 0;
                                end
                                else begin
                                    restock_obj := 0;
                                end
                            end
                        end
                        restock_amt := random(0, 2);
                        if (obj_is_carrying_obj_pid(self_obj, 318) < restock_amt) then begin
                            if (50 >= random(1, 100)) then begin
                                if (obj_is_carrying_obj_pid(self_obj, 318) < restock_amt) then begin
                                    restock_obj := create_object(318, 0, 0);
                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 318));
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, 318) > restock_amt) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 318);
                                        if ((obj_is_carrying_obj_pid(self_obj, 318) - restock_amt) < removed_qty) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 318) - restock_amt;
                                        end
                                        if (removed_qty > 0) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 318);
                                            if (obj_type(self_obj) == 1) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, 318);
                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                        add_obj_to_inven(self_obj, restock_obj);
                                                    end
                                                end
                                                else begin
                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                        inven_unwield(self_obj);
                                                    end
                                                end
                                            end
                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                            destroy_object(restock_obj);
                                        end
                                        restock_obj := 0;
                                        restock_amt := 0;
                                    end
                                    else begin
                                        restock_obj := 0;
                                    end
                                end
                            end
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 318) < restock_amt) then begin
                                restock_obj := create_object(318, 0, 0);
                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 318));
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, 318) > restock_amt) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 318);
                                    if ((obj_is_carrying_obj_pid(self_obj, 318) - restock_amt) < removed_qty) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 318) - restock_amt;
                                    end
                                    if (removed_qty > 0) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 318);
                                        if (obj_type(self_obj) == 1) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 318);
                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                    add_obj_to_inven(self_obj, restock_obj);
                                                end
                                            end
                                            else begin
                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                    inven_unwield(self_obj);
                                                end
                                            end
                                        end
                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                        destroy_object(restock_obj);
                                    end
                                    restock_obj := 0;
                                    restock_amt := 0;
                                end
                                else begin
                                    restock_obj := 0;
                                end
                            end
                        end
                        restock_amt := random(0, 2);
                        if (obj_is_carrying_obj_pid(self_obj, 71) < restock_amt) then begin
                            if (50 >= random(1, 100)) then begin
                                if (obj_is_carrying_obj_pid(self_obj, 71) < restock_amt) then begin
                                    restock_obj := create_object(71, 0, 0);
                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 71));
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, 71) > restock_amt) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 71);
                                        if ((obj_is_carrying_obj_pid(self_obj, 71) - restock_amt) < removed_qty) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 71) - restock_amt;
                                        end
                                        if (removed_qty > 0) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 71);
                                            if (obj_type(self_obj) == 1) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, 71);
                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                        add_obj_to_inven(self_obj, restock_obj);
                                                    end
                                                end
                                                else begin
                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                        inven_unwield(self_obj);
                                                    end
                                                end
                                            end
                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                            destroy_object(restock_obj);
                                        end
                                        restock_obj := 0;
                                        restock_amt := 0;
                                    end
                                    else begin
                                        restock_obj := 0;
                                    end
                                end
                            end
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 71) < restock_amt) then begin
                                restock_obj := create_object(71, 0, 0);
                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 71));
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, 71) > restock_amt) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 71);
                                    if ((obj_is_carrying_obj_pid(self_obj, 71) - restock_amt) < removed_qty) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 71) - restock_amt;
                                    end
                                    if (removed_qty > 0) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 71);
                                        if (obj_type(self_obj) == 1) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 71);
                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                    add_obj_to_inven(self_obj, restock_obj);
                                                end
                                            end
                                            else begin
                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                    inven_unwield(self_obj);
                                                end
                                            end
                                        end
                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                        destroy_object(restock_obj);
                                    end
                                    restock_obj := 0;
                                    restock_amt := 0;
                                end
                                else begin
                                    restock_obj := 0;
                                end
                            end
                        end
                        restock_amt := random(0, 2);
                        if (obj_is_carrying_obj_pid(self_obj, 273) < restock_amt) then begin
                            if (50 >= random(1, 100)) then begin
                                if (obj_is_carrying_obj_pid(self_obj, 273) < restock_amt) then begin
                                    restock_obj := create_object(273, 0, 0);
                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 273));
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, 273) > restock_amt) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 273);
                                        if ((obj_is_carrying_obj_pid(self_obj, 273) - restock_amt) < removed_qty) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 273) - restock_amt;
                                        end
                                        if (removed_qty > 0) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 273);
                                            if (obj_type(self_obj) == 1) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, 273);
                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                        add_obj_to_inven(self_obj, restock_obj);
                                                    end
                                                end
                                                else begin
                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                        inven_unwield(self_obj);
                                                    end
                                                end
                                            end
                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                            destroy_object(restock_obj);
                                        end
                                        restock_obj := 0;
                                        restock_amt := 0;
                                    end
                                    else begin
                                        restock_obj := 0;
                                    end
                                end
                            end
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 273) < restock_amt) then begin
                                restock_obj := create_object(273, 0, 0);
                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 273));
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, 273) > restock_amt) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 273);
                                    if ((obj_is_carrying_obj_pid(self_obj, 273) - restock_amt) < removed_qty) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 273) - restock_amt;
                                    end
                                    if (removed_qty > 0) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 273);
                                        if (obj_type(self_obj) == 1) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 273);
                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                    add_obj_to_inven(self_obj, restock_obj);
                                                end
                                            end
                                            else begin
                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                    inven_unwield(self_obj);
                                                end
                                            end
                                        end
                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                        destroy_object(restock_obj);
                                    end
                                    restock_obj := 0;
                                    restock_amt := 0;
                                end
                                else begin
                                    restock_obj := 0;
                                end
                            end
                        end
                        restock_amt := random(0, 2);
                        if (obj_is_carrying_obj_pid(self_obj, 801) < restock_amt) then begin
                            if (50 >= random(1, 100)) then begin
                                if (obj_is_carrying_obj_pid(self_obj, 801) < restock_amt) then begin
                                    restock_obj := create_object(801, 0, 0);
                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 801));
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, 801) > restock_amt) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 801);
                                        if ((obj_is_carrying_obj_pid(self_obj, 801) - restock_amt) < removed_qty) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 801) - restock_amt;
                                        end
                                        if (removed_qty > 0) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 801);
                                            if (obj_type(self_obj) == 1) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, 801);
                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                        add_obj_to_inven(self_obj, restock_obj);
                                                    end
                                                end
                                                else begin
                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                        inven_unwield(self_obj);
                                                    end
                                                end
                                            end
                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                            destroy_object(restock_obj);
                                        end
                                        restock_obj := 0;
                                        restock_amt := 0;
                                    end
                                    else begin
                                        restock_obj := 0;
                                    end
                                end
                            end
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 801) < restock_amt) then begin
                                restock_obj := create_object(801, 0, 0);
                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 801));
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, 801) > restock_amt) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 801);
                                    if ((obj_is_carrying_obj_pid(self_obj, 801) - restock_amt) < removed_qty) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 801) - restock_amt;
                                    end
                                    if (removed_qty > 0) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 801);
                                        if (obj_type(self_obj) == 1) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 801);
                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                    add_obj_to_inven(self_obj, restock_obj);
                                                end
                                            end
                                            else begin
                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                    inven_unwield(self_obj);
                                                end
                                            end
                                        end
                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                        destroy_object(restock_obj);
                                    end
                                    restock_obj := 0;
                                    restock_amt := 0;
                                end
                                else begin
                                    restock_obj := 0;
                                end
                            end
                        end
                        restock_amt := random(0, 1);
                        if (obj_is_carrying_obj_pid(self_obj, 802) < restock_amt) then begin
                            if (50 >= random(1, 100)) then begin
                                if (obj_is_carrying_obj_pid(self_obj, 802) < restock_amt) then begin
                                    restock_obj := create_object(802, 0, 0);
                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 802));
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, 802) > restock_amt) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 802);
                                        if ((obj_is_carrying_obj_pid(self_obj, 802) - restock_amt) < removed_qty) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 802) - restock_amt;
                                        end
                                        if (removed_qty > 0) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 802);
                                            if (obj_type(self_obj) == 1) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, 802);
                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                        add_obj_to_inven(self_obj, restock_obj);
                                                    end
                                                end
                                                else begin
                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                        inven_unwield(self_obj);
                                                    end
                                                end
                                            end
                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                            destroy_object(restock_obj);
                                        end
                                        restock_obj := 0;
                                        restock_amt := 0;
                                    end
                                    else begin
                                        restock_obj := 0;
                                    end
                                end
                            end
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 802) < restock_amt) then begin
                                restock_obj := create_object(802, 0, 0);
                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 802));
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, 802) > restock_amt) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 802);
                                    if ((obj_is_carrying_obj_pid(self_obj, 802) - restock_amt) < removed_qty) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 802) - restock_amt;
                                    end
                                    if (removed_qty > 0) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 802);
                                        if (obj_type(self_obj) == 1) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 802);
                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                    add_obj_to_inven(self_obj, restock_obj);
                                                end
                                            end
                                            else begin
                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                    inven_unwield(self_obj);
                                                end
                                            end
                                        end
                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                        destroy_object(restock_obj);
                                    end
                                    restock_obj := 0;
                                    restock_amt := 0;
                                end
                                else begin
                                    restock_obj := 0;
                                end
                            end
                        end
                    end
                    else begin
                        if (town_level == 3) then begin
                            restock_amt := random(2, 3);
                            if (obj_is_carrying_obj_pid(self_obj, 805) < restock_amt) then begin
                                if (50 >= random(1, 100)) then begin
                                    if (obj_is_carrying_obj_pid(self_obj, 805) < restock_amt) then begin
                                        restock_obj := create_object(805, 0, 0);
                                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 805));
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, 805) > restock_amt) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 805);
                                            if ((obj_is_carrying_obj_pid(self_obj, 805) - restock_amt) < removed_qty) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 805) - restock_amt;
                                            end
                                            if (removed_qty > 0) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, 805);
                                                if (obj_type(self_obj) == 1) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 805);
                                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                            restock_obj := critter_inven_obj(self_obj, 0);
                                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                                            rm_obj_from_inven(self_obj, restock_obj);
                                                            add_obj_to_inven(self_obj, restock_obj);
                                                        end
                                                    end
                                                    else begin
                                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                            inven_unwield(self_obj);
                                                        end
                                                    end
                                                end
                                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                destroy_object(restock_obj);
                                            end
                                            restock_obj := 0;
                                            restock_amt := 0;
                                        end
                                        else begin
                                            restock_obj := 0;
                                        end
                                    end
                                end
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, 805) < restock_amt) then begin
                                    restock_obj := create_object(805, 0, 0);
                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 805));
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, 805) > restock_amt) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 805);
                                        if ((obj_is_carrying_obj_pid(self_obj, 805) - restock_amt) < removed_qty) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 805) - restock_amt;
                                        end
                                        if (removed_qty > 0) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 805);
                                            if (obj_type(self_obj) == 1) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, 805);
                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                        add_obj_to_inven(self_obj, restock_obj);
                                                    end
                                                end
                                                else begin
                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                        inven_unwield(self_obj);
                                                    end
                                                end
                                            end
                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                            destroy_object(restock_obj);
                                        end
                                        restock_obj := 0;
                                        restock_amt := 0;
                                    end
                                    else begin
                                        restock_obj := 0;
                                    end
                                end
                            end
                            restock_amt := random(1, 2);
                            if (obj_is_carrying_obj_pid(self_obj, 103) < restock_amt) then begin
                                if (50 >= random(1, 100)) then begin
                                    if (obj_is_carrying_obj_pid(self_obj, 103) < restock_amt) then begin
                                        restock_obj := create_object(103, 0, 0);
                                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 103));
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, 103) > restock_amt) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 103);
                                            if ((obj_is_carrying_obj_pid(self_obj, 103) - restock_amt) < removed_qty) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 103) - restock_amt;
                                            end
                                            if (removed_qty > 0) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, 103);
                                                if (obj_type(self_obj) == 1) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 103);
                                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                            restock_obj := critter_inven_obj(self_obj, 0);
                                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                                            rm_obj_from_inven(self_obj, restock_obj);
                                                            add_obj_to_inven(self_obj, restock_obj);
                                                        end
                                                    end
                                                    else begin
                                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                            inven_unwield(self_obj);
                                                        end
                                                    end
                                                end
                                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                destroy_object(restock_obj);
                                            end
                                            restock_obj := 0;
                                            restock_amt := 0;
                                        end
                                        else begin
                                            restock_obj := 0;
                                        end
                                    end
                                end
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, 103) < restock_amt) then begin
                                    restock_obj := create_object(103, 0, 0);
                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 103));
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, 103) > restock_amt) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 103);
                                        if ((obj_is_carrying_obj_pid(self_obj, 103) - restock_amt) < removed_qty) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 103) - restock_amt;
                                        end
                                        if (removed_qty > 0) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 103);
                                            if (obj_type(self_obj) == 1) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, 103);
                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                        add_obj_to_inven(self_obj, restock_obj);
                                                    end
                                                end
                                                else begin
                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                        inven_unwield(self_obj);
                                                    end
                                                end
                                            end
                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                            destroy_object(restock_obj);
                                        end
                                        restock_obj := 0;
                                        restock_amt := 0;
                                    end
                                    else begin
                                        restock_obj := 0;
                                    end
                                end
                            end
                            restock_amt := random(1, 2);
                            if (obj_is_carrying_obj_pid(self_obj, 81) < restock_amt) then begin
                                if (50 >= random(1, 100)) then begin
                                    if (obj_is_carrying_obj_pid(self_obj, 81) < restock_amt) then begin
                                        restock_obj := create_object(81, 0, 0);
                                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 81));
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, 81) > restock_amt) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 81);
                                            if ((obj_is_carrying_obj_pid(self_obj, 81) - restock_amt) < removed_qty) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 81) - restock_amt;
                                            end
                                            if (removed_qty > 0) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, 81);
                                                if (obj_type(self_obj) == 1) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 81);
                                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                            restock_obj := critter_inven_obj(self_obj, 0);
                                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                                            rm_obj_from_inven(self_obj, restock_obj);
                                                            add_obj_to_inven(self_obj, restock_obj);
                                                        end
                                                    end
                                                    else begin
                                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                            inven_unwield(self_obj);
                                                        end
                                                    end
                                                end
                                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                destroy_object(restock_obj);
                                            end
                                            restock_obj := 0;
                                            restock_amt := 0;
                                        end
                                        else begin
                                            restock_obj := 0;
                                        end
                                    end
                                end
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, 81) < restock_amt) then begin
                                    restock_obj := create_object(81, 0, 0);
                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 81));
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, 81) > restock_amt) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 81);
                                        if ((obj_is_carrying_obj_pid(self_obj, 81) - restock_amt) < removed_qty) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 81) - restock_amt;
                                        end
                                        if (removed_qty > 0) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 81);
                                            if (obj_type(self_obj) == 1) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, 81);
                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                        add_obj_to_inven(self_obj, restock_obj);
                                                    end
                                                end
                                                else begin
                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                        inven_unwield(self_obj);
                                                    end
                                                end
                                            end
                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                            destroy_object(restock_obj);
                                        end
                                        restock_obj := 0;
                                        restock_amt := 0;
                                    end
                                    else begin
                                        restock_obj := 0;
                                    end
                                end
                            end
                            restock_amt := random(1, 2);
                            if (obj_is_carrying_obj_pid(self_obj, 318) < restock_amt) then begin
                                if (50 >= random(1, 100)) then begin
                                    if (obj_is_carrying_obj_pid(self_obj, 318) < restock_amt) then begin
                                        restock_obj := create_object(318, 0, 0);
                                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 318));
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, 318) > restock_amt) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 318);
                                            if ((obj_is_carrying_obj_pid(self_obj, 318) - restock_amt) < removed_qty) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 318) - restock_amt;
                                            end
                                            if (removed_qty > 0) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, 318);
                                                if (obj_type(self_obj) == 1) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 318);
                                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                            restock_obj := critter_inven_obj(self_obj, 0);
                                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                                            rm_obj_from_inven(self_obj, restock_obj);
                                                            add_obj_to_inven(self_obj, restock_obj);
                                                        end
                                                    end
                                                    else begin
                                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                            inven_unwield(self_obj);
                                                        end
                                                    end
                                                end
                                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                destroy_object(restock_obj);
                                            end
                                            restock_obj := 0;
                                            restock_amt := 0;
                                        end
                                        else begin
                                            restock_obj := 0;
                                        end
                                    end
                                end
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, 318) < restock_amt) then begin
                                    restock_obj := create_object(318, 0, 0);
                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 318));
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, 318) > restock_amt) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 318);
                                        if ((obj_is_carrying_obj_pid(self_obj, 318) - restock_amt) < removed_qty) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 318) - restock_amt;
                                        end
                                        if (removed_qty > 0) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 318);
                                            if (obj_type(self_obj) == 1) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, 318);
                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                        add_obj_to_inven(self_obj, restock_obj);
                                                    end
                                                end
                                                else begin
                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                        inven_unwield(self_obj);
                                                    end
                                                end
                                            end
                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                            destroy_object(restock_obj);
                                        end
                                        restock_obj := 0;
                                        restock_amt := 0;
                                    end
                                    else begin
                                        restock_obj := 0;
                                    end
                                end
                            end
                            restock_amt := random(0, 2);
                            if (obj_is_carrying_obj_pid(self_obj, 71) < restock_amt) then begin
                                if (50 >= random(1, 100)) then begin
                                    if (obj_is_carrying_obj_pid(self_obj, 71) < restock_amt) then begin
                                        restock_obj := create_object(71, 0, 0);
                                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 71));
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, 71) > restock_amt) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 71);
                                            if ((obj_is_carrying_obj_pid(self_obj, 71) - restock_amt) < removed_qty) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 71) - restock_amt;
                                            end
                                            if (removed_qty > 0) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, 71);
                                                if (obj_type(self_obj) == 1) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 71);
                                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                            restock_obj := critter_inven_obj(self_obj, 0);
                                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                                            rm_obj_from_inven(self_obj, restock_obj);
                                                            add_obj_to_inven(self_obj, restock_obj);
                                                        end
                                                    end
                                                    else begin
                                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                            inven_unwield(self_obj);
                                                        end
                                                    end
                                                end
                                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                destroy_object(restock_obj);
                                            end
                                            restock_obj := 0;
                                            restock_amt := 0;
                                        end
                                        else begin
                                            restock_obj := 0;
                                        end
                                    end
                                end
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, 71) < restock_amt) then begin
                                    restock_obj := create_object(71, 0, 0);
                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 71));
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, 71) > restock_amt) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 71);
                                        if ((obj_is_carrying_obj_pid(self_obj, 71) - restock_amt) < removed_qty) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 71) - restock_amt;
                                        end
                                        if (removed_qty > 0) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 71);
                                            if (obj_type(self_obj) == 1) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, 71);
                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                        add_obj_to_inven(self_obj, restock_obj);
                                                    end
                                                end
                                                else begin
                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                        inven_unwield(self_obj);
                                                    end
                                                end
                                            end
                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                            destroy_object(restock_obj);
                                        end
                                        restock_obj := 0;
                                        restock_amt := 0;
                                    end
                                    else begin
                                        restock_obj := 0;
                                    end
                                end
                            end
                            restock_amt := random(0, 2);
                            if (obj_is_carrying_obj_pid(self_obj, 273) < restock_amt) then begin
                                if (50 >= random(1, 100)) then begin
                                    if (obj_is_carrying_obj_pid(self_obj, 273) < restock_amt) then begin
                                        restock_obj := create_object(273, 0, 0);
                                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 273));
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, 273) > restock_amt) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 273);
                                            if ((obj_is_carrying_obj_pid(self_obj, 273) - restock_amt) < removed_qty) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 273) - restock_amt;
                                            end
                                            if (removed_qty > 0) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, 273);
                                                if (obj_type(self_obj) == 1) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 273);
                                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                            restock_obj := critter_inven_obj(self_obj, 0);
                                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                                            rm_obj_from_inven(self_obj, restock_obj);
                                                            add_obj_to_inven(self_obj, restock_obj);
                                                        end
                                                    end
                                                    else begin
                                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                            inven_unwield(self_obj);
                                                        end
                                                    end
                                                end
                                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                destroy_object(restock_obj);
                                            end
                                            restock_obj := 0;
                                            restock_amt := 0;
                                        end
                                        else begin
                                            restock_obj := 0;
                                        end
                                    end
                                end
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, 273) < restock_amt) then begin
                                    restock_obj := create_object(273, 0, 0);
                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 273));
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, 273) > restock_amt) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 273);
                                        if ((obj_is_carrying_obj_pid(self_obj, 273) - restock_amt) < removed_qty) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 273) - restock_amt;
                                        end
                                        if (removed_qty > 0) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 273);
                                            if (obj_type(self_obj) == 1) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, 273);
                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                        add_obj_to_inven(self_obj, restock_obj);
                                                    end
                                                end
                                                else begin
                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                        inven_unwield(self_obj);
                                                    end
                                                end
                                            end
                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                            destroy_object(restock_obj);
                                        end
                                        restock_obj := 0;
                                        restock_amt := 0;
                                    end
                                    else begin
                                        restock_obj := 0;
                                    end
                                end
                            end
                            restock_amt := random(1, 3);
                            if (obj_is_carrying_obj_pid(self_obj, 801) < restock_amt) then begin
                                if (50 >= random(1, 100)) then begin
                                    if (obj_is_carrying_obj_pid(self_obj, 801) < restock_amt) then begin
                                        restock_obj := create_object(801, 0, 0);
                                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 801));
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, 801) > restock_amt) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 801);
                                            if ((obj_is_carrying_obj_pid(self_obj, 801) - restock_amt) < removed_qty) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 801) - restock_amt;
                                            end
                                            if (removed_qty > 0) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, 801);
                                                if (obj_type(self_obj) == 1) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 801);
                                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                            restock_obj := critter_inven_obj(self_obj, 0);
                                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                                            rm_obj_from_inven(self_obj, restock_obj);
                                                            add_obj_to_inven(self_obj, restock_obj);
                                                        end
                                                    end
                                                    else begin
                                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                            inven_unwield(self_obj);
                                                        end
                                                    end
                                                end
                                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                destroy_object(restock_obj);
                                            end
                                            restock_obj := 0;
                                            restock_amt := 0;
                                        end
                                        else begin
                                            restock_obj := 0;
                                        end
                                    end
                                end
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, 801) < restock_amt) then begin
                                    restock_obj := create_object(801, 0, 0);
                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 801));
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, 801) > restock_amt) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 801);
                                        if ((obj_is_carrying_obj_pid(self_obj, 801) - restock_amt) < removed_qty) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 801) - restock_amt;
                                        end
                                        if (removed_qty > 0) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 801);
                                            if (obj_type(self_obj) == 1) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, 801);
                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                        add_obj_to_inven(self_obj, restock_obj);
                                                    end
                                                end
                                                else begin
                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                        inven_unwield(self_obj);
                                                    end
                                                end
                                            end
                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                            destroy_object(restock_obj);
                                        end
                                        restock_obj := 0;
                                        restock_amt := 0;
                                    end
                                    else begin
                                        restock_obj := 0;
                                    end
                                end
                            end
                            restock_amt := random(1, 2);
                            if (obj_is_carrying_obj_pid(self_obj, 802) < restock_amt) then begin
                                if (50 >= random(1, 100)) then begin
                                    if (obj_is_carrying_obj_pid(self_obj, 802) < restock_amt) then begin
                                        restock_obj := create_object(802, 0, 0);
                                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 802));
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, 802) > restock_amt) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 802);
                                            if ((obj_is_carrying_obj_pid(self_obj, 802) - restock_amt) < removed_qty) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 802) - restock_amt;
                                            end
                                            if (removed_qty > 0) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, 802);
                                                if (obj_type(self_obj) == 1) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 802);
                                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                            restock_obj := critter_inven_obj(self_obj, 0);
                                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                                            rm_obj_from_inven(self_obj, restock_obj);
                                                            add_obj_to_inven(self_obj, restock_obj);
                                                        end
                                                    end
                                                    else begin
                                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                            inven_unwield(self_obj);
                                                        end
                                                    end
                                                end
                                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                destroy_object(restock_obj);
                                            end
                                            restock_obj := 0;
                                            restock_amt := 0;
                                        end
                                        else begin
                                            restock_obj := 0;
                                        end
                                    end
                                end
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, 802) < restock_amt) then begin
                                    restock_obj := create_object(802, 0, 0);
                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 802));
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, 802) > restock_amt) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 802);
                                        if ((obj_is_carrying_obj_pid(self_obj, 802) - restock_amt) < removed_qty) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 802) - restock_amt;
                                        end
                                        if (removed_qty > 0) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 802);
                                            if (obj_type(self_obj) == 1) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, 802);
                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                        add_obj_to_inven(self_obj, restock_obj);
                                                    end
                                                end
                                                else begin
                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                        inven_unwield(self_obj);
                                                    end
                                                end
                                            end
                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                            destroy_object(restock_obj);
                                        end
                                        restock_obj := 0;
                                        restock_amt := 0;
                                    end
                                    else begin
                                        restock_obj := 0;
                                    end
                                end
                            end
                        end
                        else begin
                            if (town_level == 4) then begin
                                restock_amt := random(2, 3);
                                if (obj_is_carrying_obj_pid(self_obj, 805) < restock_amt) then begin
                                    if (50 >= random(1, 100)) then begin
                                        if (obj_is_carrying_obj_pid(self_obj, 805) < restock_amt) then begin
                                            restock_obj := create_object(805, 0, 0);
                                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 805));
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, 805) > restock_amt) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 805);
                                                if ((obj_is_carrying_obj_pid(self_obj, 805) - restock_amt) < removed_qty) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 805) - restock_amt;
                                                end
                                                if (removed_qty > 0) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 805);
                                                    if (obj_type(self_obj) == 1) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 805);
                                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                rm_obj_from_inven(self_obj, restock_obj);
                                                                add_obj_to_inven(self_obj, restock_obj);
                                                            end
                                                        end
                                                        else begin
                                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                inven_unwield(self_obj);
                                                            end
                                                        end
                                                    end
                                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                    destroy_object(restock_obj);
                                                end
                                                restock_obj := 0;
                                                restock_amt := 0;
                                            end
                                            else begin
                                                restock_obj := 0;
                                            end
                                        end
                                    end
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, 805) < restock_amt) then begin
                                        restock_obj := create_object(805, 0, 0);
                                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 805));
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, 805) > restock_amt) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 805);
                                            if ((obj_is_carrying_obj_pid(self_obj, 805) - restock_amt) < removed_qty) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 805) - restock_amt;
                                            end
                                            if (removed_qty > 0) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, 805);
                                                if (obj_type(self_obj) == 1) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 805);
                                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                            restock_obj := critter_inven_obj(self_obj, 0);
                                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                                            rm_obj_from_inven(self_obj, restock_obj);
                                                            add_obj_to_inven(self_obj, restock_obj);
                                                        end
                                                    end
                                                    else begin
                                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                            inven_unwield(self_obj);
                                                        end
                                                    end
                                                end
                                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                destroy_object(restock_obj);
                                            end
                                            restock_obj := 0;
                                            restock_amt := 0;
                                        end
                                        else begin
                                            restock_obj := 0;
                                        end
                                    end
                                end
                                restock_amt := random(2, 2);
                                if (obj_is_carrying_obj_pid(self_obj, 103) < restock_amt) then begin
                                    if (50 >= random(1, 100)) then begin
                                        if (obj_is_carrying_obj_pid(self_obj, 103) < restock_amt) then begin
                                            restock_obj := create_object(103, 0, 0);
                                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 103));
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, 103) > restock_amt) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 103);
                                                if ((obj_is_carrying_obj_pid(self_obj, 103) - restock_amt) < removed_qty) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 103) - restock_amt;
                                                end
                                                if (removed_qty > 0) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 103);
                                                    if (obj_type(self_obj) == 1) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 103);
                                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                rm_obj_from_inven(self_obj, restock_obj);
                                                                add_obj_to_inven(self_obj, restock_obj);
                                                            end
                                                        end
                                                        else begin
                                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                inven_unwield(self_obj);
                                                            end
                                                        end
                                                    end
                                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                    destroy_object(restock_obj);
                                                end
                                                restock_obj := 0;
                                                restock_amt := 0;
                                            end
                                            else begin
                                                restock_obj := 0;
                                            end
                                        end
                                    end
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, 103) < restock_amt) then begin
                                        restock_obj := create_object(103, 0, 0);
                                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 103));
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, 103) > restock_amt) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 103);
                                            if ((obj_is_carrying_obj_pid(self_obj, 103) - restock_amt) < removed_qty) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 103) - restock_amt;
                                            end
                                            if (removed_qty > 0) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, 103);
                                                if (obj_type(self_obj) == 1) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 103);
                                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                            restock_obj := critter_inven_obj(self_obj, 0);
                                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                                            rm_obj_from_inven(self_obj, restock_obj);
                                                            add_obj_to_inven(self_obj, restock_obj);
                                                        end
                                                    end
                                                    else begin
                                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                            inven_unwield(self_obj);
                                                        end
                                                    end
                                                end
                                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                destroy_object(restock_obj);
                                            end
                                            restock_obj := 0;
                                            restock_amt := 0;
                                        end
                                        else begin
                                            restock_obj := 0;
                                        end
                                    end
                                end
                                restock_amt := random(2, 2);
                                if (obj_is_carrying_obj_pid(self_obj, 81) < restock_amt) then begin
                                    if (50 >= random(1, 100)) then begin
                                        if (obj_is_carrying_obj_pid(self_obj, 81) < restock_amt) then begin
                                            restock_obj := create_object(81, 0, 0);
                                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 81));
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, 81) > restock_amt) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 81);
                                                if ((obj_is_carrying_obj_pid(self_obj, 81) - restock_amt) < removed_qty) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 81) - restock_amt;
                                                end
                                                if (removed_qty > 0) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 81);
                                                    if (obj_type(self_obj) == 1) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 81);
                                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                rm_obj_from_inven(self_obj, restock_obj);
                                                                add_obj_to_inven(self_obj, restock_obj);
                                                            end
                                                        end
                                                        else begin
                                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                inven_unwield(self_obj);
                                                            end
                                                        end
                                                    end
                                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                    destroy_object(restock_obj);
                                                end
                                                restock_obj := 0;
                                                restock_amt := 0;
                                            end
                                            else begin
                                                restock_obj := 0;
                                            end
                                        end
                                    end
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, 81) < restock_amt) then begin
                                        restock_obj := create_object(81, 0, 0);
                                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 81));
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, 81) > restock_amt) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 81);
                                            if ((obj_is_carrying_obj_pid(self_obj, 81) - restock_amt) < removed_qty) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 81) - restock_amt;
                                            end
                                            if (removed_qty > 0) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, 81);
                                                if (obj_type(self_obj) == 1) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 81);
                                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                            restock_obj := critter_inven_obj(self_obj, 0);
                                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                                            rm_obj_from_inven(self_obj, restock_obj);
                                                            add_obj_to_inven(self_obj, restock_obj);
                                                        end
                                                    end
                                                    else begin
                                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                            inven_unwield(self_obj);
                                                        end
                                                    end
                                                end
                                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                destroy_object(restock_obj);
                                            end
                                            restock_obj := 0;
                                            restock_amt := 0;
                                        end
                                        else begin
                                            restock_obj := 0;
                                        end
                                    end
                                end
                                restock_amt := random(1, 3);
                                if (obj_is_carrying_obj_pid(self_obj, 318) < restock_amt) then begin
                                    if (50 >= random(1, 100)) then begin
                                        if (obj_is_carrying_obj_pid(self_obj, 318) < restock_amt) then begin
                                            restock_obj := create_object(318, 0, 0);
                                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 318));
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, 318) > restock_amt) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 318);
                                                if ((obj_is_carrying_obj_pid(self_obj, 318) - restock_amt) < removed_qty) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 318) - restock_amt;
                                                end
                                                if (removed_qty > 0) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 318);
                                                    if (obj_type(self_obj) == 1) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 318);
                                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                rm_obj_from_inven(self_obj, restock_obj);
                                                                add_obj_to_inven(self_obj, restock_obj);
                                                            end
                                                        end
                                                        else begin
                                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                inven_unwield(self_obj);
                                                            end
                                                        end
                                                    end
                                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                    destroy_object(restock_obj);
                                                end
                                                restock_obj := 0;
                                                restock_amt := 0;
                                            end
                                            else begin
                                                restock_obj := 0;
                                            end
                                        end
                                    end
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, 318) < restock_amt) then begin
                                        restock_obj := create_object(318, 0, 0);
                                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 318));
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, 318) > restock_amt) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 318);
                                            if ((obj_is_carrying_obj_pid(self_obj, 318) - restock_amt) < removed_qty) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 318) - restock_amt;
                                            end
                                            if (removed_qty > 0) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, 318);
                                                if (obj_type(self_obj) == 1) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 318);
                                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                            restock_obj := critter_inven_obj(self_obj, 0);
                                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                                            rm_obj_from_inven(self_obj, restock_obj);
                                                            add_obj_to_inven(self_obj, restock_obj);
                                                        end
                                                    end
                                                    else begin
                                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                            inven_unwield(self_obj);
                                                        end
                                                    end
                                                end
                                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                destroy_object(restock_obj);
                                            end
                                            restock_obj := 0;
                                            restock_amt := 0;
                                        end
                                        else begin
                                            restock_obj := 0;
                                        end
                                    end
                                end
                                restock_amt := random(1, 2);
                                if (obj_is_carrying_obj_pid(self_obj, 71) < restock_amt) then begin
                                    if (50 >= random(1, 100)) then begin
                                        if (obj_is_carrying_obj_pid(self_obj, 71) < restock_amt) then begin
                                            restock_obj := create_object(71, 0, 0);
                                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 71));
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, 71) > restock_amt) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 71);
                                                if ((obj_is_carrying_obj_pid(self_obj, 71) - restock_amt) < removed_qty) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 71) - restock_amt;
                                                end
                                                if (removed_qty > 0) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 71);
                                                    if (obj_type(self_obj) == 1) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 71);
                                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                rm_obj_from_inven(self_obj, restock_obj);
                                                                add_obj_to_inven(self_obj, restock_obj);
                                                            end
                                                        end
                                                        else begin
                                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                inven_unwield(self_obj);
                                                            end
                                                        end
                                                    end
                                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                    destroy_object(restock_obj);
                                                end
                                                restock_obj := 0;
                                                restock_amt := 0;
                                            end
                                            else begin
                                                restock_obj := 0;
                                            end
                                        end
                                    end
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, 71) < restock_amt) then begin
                                        restock_obj := create_object(71, 0, 0);
                                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 71));
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, 71) > restock_amt) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 71);
                                            if ((obj_is_carrying_obj_pid(self_obj, 71) - restock_amt) < removed_qty) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 71) - restock_amt;
                                            end
                                            if (removed_qty > 0) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, 71);
                                                if (obj_type(self_obj) == 1) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 71);
                                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                            restock_obj := critter_inven_obj(self_obj, 0);
                                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                                            rm_obj_from_inven(self_obj, restock_obj);
                                                            add_obj_to_inven(self_obj, restock_obj);
                                                        end
                                                    end
                                                    else begin
                                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                            inven_unwield(self_obj);
                                                        end
                                                    end
                                                end
                                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                destroy_object(restock_obj);
                                            end
                                            restock_obj := 0;
                                            restock_amt := 0;
                                        end
                                        else begin
                                            restock_obj := 0;
                                        end
                                    end
                                end
                                restock_amt := random(1, 2);
                                if (obj_is_carrying_obj_pid(self_obj, 273) < restock_amt) then begin
                                    if (50 >= random(1, 100)) then begin
                                        if (obj_is_carrying_obj_pid(self_obj, 273) < restock_amt) then begin
                                            restock_obj := create_object(273, 0, 0);
                                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 273));
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, 273) > restock_amt) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 273);
                                                if ((obj_is_carrying_obj_pid(self_obj, 273) - restock_amt) < removed_qty) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 273) - restock_amt;
                                                end
                                                if (removed_qty > 0) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 273);
                                                    if (obj_type(self_obj) == 1) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 273);
                                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                rm_obj_from_inven(self_obj, restock_obj);
                                                                add_obj_to_inven(self_obj, restock_obj);
                                                            end
                                                        end
                                                        else begin
                                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                inven_unwield(self_obj);
                                                            end
                                                        end
                                                    end
                                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                    destroy_object(restock_obj);
                                                end
                                                restock_obj := 0;
                                                restock_amt := 0;
                                            end
                                            else begin
                                                restock_obj := 0;
                                            end
                                        end
                                    end
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, 273) < restock_amt) then begin
                                        restock_obj := create_object(273, 0, 0);
                                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 273));
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, 273) > restock_amt) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 273);
                                            if ((obj_is_carrying_obj_pid(self_obj, 273) - restock_amt) < removed_qty) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 273) - restock_amt;
                                            end
                                            if (removed_qty > 0) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, 273);
                                                if (obj_type(self_obj) == 1) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 273);
                                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                            restock_obj := critter_inven_obj(self_obj, 0);
                                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                                            rm_obj_from_inven(self_obj, restock_obj);
                                                            add_obj_to_inven(self_obj, restock_obj);
                                                        end
                                                    end
                                                    else begin
                                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                            inven_unwield(self_obj);
                                                        end
                                                    end
                                                end
                                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                destroy_object(restock_obj);
                                            end
                                            restock_obj := 0;
                                            restock_amt := 0;
                                        end
                                        else begin
                                            restock_obj := 0;
                                        end
                                    end
                                end
                                restock_amt := random(2, 3);
                                if (obj_is_carrying_obj_pid(self_obj, 801) < restock_amt) then begin
                                    if (50 >= random(1, 100)) then begin
                                        if (obj_is_carrying_obj_pid(self_obj, 801) < restock_amt) then begin
                                            restock_obj := create_object(801, 0, 0);
                                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 801));
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, 801) > restock_amt) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 801);
                                                if ((obj_is_carrying_obj_pid(self_obj, 801) - restock_amt) < removed_qty) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 801) - restock_amt;
                                                end
                                                if (removed_qty > 0) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 801);
                                                    if (obj_type(self_obj) == 1) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 801);
                                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                rm_obj_from_inven(self_obj, restock_obj);
                                                                add_obj_to_inven(self_obj, restock_obj);
                                                            end
                                                        end
                                                        else begin
                                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                inven_unwield(self_obj);
                                                            end
                                                        end
                                                    end
                                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                    destroy_object(restock_obj);
                                                end
                                                restock_obj := 0;
                                                restock_amt := 0;
                                            end
                                            else begin
                                                restock_obj := 0;
                                            end
                                        end
                                    end
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, 801) < restock_amt) then begin
                                        restock_obj := create_object(801, 0, 0);
                                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 801));
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, 801) > restock_amt) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 801);
                                            if ((obj_is_carrying_obj_pid(self_obj, 801) - restock_amt) < removed_qty) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 801) - restock_amt;
                                            end
                                            if (removed_qty > 0) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, 801);
                                                if (obj_type(self_obj) == 1) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 801);
                                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                            restock_obj := critter_inven_obj(self_obj, 0);
                                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                                            rm_obj_from_inven(self_obj, restock_obj);
                                                            add_obj_to_inven(self_obj, restock_obj);
                                                        end
                                                    end
                                                    else begin
                                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                            inven_unwield(self_obj);
                                                        end
                                                    end
                                                end
                                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                destroy_object(restock_obj);
                                            end
                                            restock_obj := 0;
                                            restock_amt := 0;
                                        end
                                        else begin
                                            restock_obj := 0;
                                        end
                                    end
                                end
                                restock_amt := random(1, 2);
                                if (obj_is_carrying_obj_pid(self_obj, 802) < restock_amt) then begin
                                    if (50 >= random(1, 100)) then begin
                                        if (obj_is_carrying_obj_pid(self_obj, 802) < restock_amt) then begin
                                            restock_obj := create_object(802, 0, 0);
                                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 802));
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, 802) > restock_amt) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 802);
                                                if ((obj_is_carrying_obj_pid(self_obj, 802) - restock_amt) < removed_qty) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 802) - restock_amt;
                                                end
                                                if (removed_qty > 0) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 802);
                                                    if (obj_type(self_obj) == 1) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 802);
                                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                rm_obj_from_inven(self_obj, restock_obj);
                                                                add_obj_to_inven(self_obj, restock_obj);
                                                            end
                                                        end
                                                        else begin
                                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                inven_unwield(self_obj);
                                                            end
                                                        end
                                                    end
                                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                    destroy_object(restock_obj);
                                                end
                                                restock_obj := 0;
                                                restock_amt := 0;
                                            end
                                            else begin
                                                restock_obj := 0;
                                            end
                                        end
                                    end
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, 802) < restock_amt) then begin
                                        restock_obj := create_object(802, 0, 0);
                                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 802));
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, 802) > restock_amt) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 802);
                                            if ((obj_is_carrying_obj_pid(self_obj, 802) - restock_amt) < removed_qty) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 802) - restock_amt;
                                            end
                                            if (removed_qty > 0) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, 802);
                                                if (obj_type(self_obj) == 1) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 802);
                                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                            restock_obj := critter_inven_obj(self_obj, 0);
                                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                                            rm_obj_from_inven(self_obj, restock_obj);
                                                            add_obj_to_inven(self_obj, restock_obj);
                                                        end
                                                    end
                                                    else begin
                                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                            inven_unwield(self_obj);
                                                        end
                                                    end
                                                end
                                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                destroy_object(restock_obj);
                                            end
                                            restock_obj := 0;
                                            restock_amt := 0;
                                        end
                                        else begin
                                            restock_obj := 0;
                                        end
                                    end
                                end
                                restock_amt := random(1, 2);
                                if (obj_is_carrying_obj_pid(self_obj, 40) < restock_amt) then begin
                                    if (50 >= random(1, 100)) then begin
                                        if (obj_is_carrying_obj_pid(self_obj, 40) < restock_amt) then begin
                                            restock_obj := create_object(40, 0, 0);
                                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 40));
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, 40) > restock_amt) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 40);
                                                if ((obj_is_carrying_obj_pid(self_obj, 40) - restock_amt) < removed_qty) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 40) - restock_amt;
                                                end
                                                if (removed_qty > 0) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 40);
                                                    if (obj_type(self_obj) == 1) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 40);
                                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                rm_obj_from_inven(self_obj, restock_obj);
                                                                add_obj_to_inven(self_obj, restock_obj);
                                                            end
                                                        end
                                                        else begin
                                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                inven_unwield(self_obj);
                                                            end
                                                        end
                                                    end
                                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                    destroy_object(restock_obj);
                                                end
                                                restock_obj := 0;
                                                restock_amt := 0;
                                            end
                                            else begin
                                                restock_obj := 0;
                                            end
                                        end
                                    end
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, 40) < restock_amt) then begin
                                        restock_obj := create_object(40, 0, 0);
                                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 40));
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, 40) > restock_amt) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 40);
                                            if ((obj_is_carrying_obj_pid(self_obj, 40) - restock_amt) < removed_qty) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 40) - restock_amt;
                                            end
                                            if (removed_qty > 0) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, 40);
                                                if (obj_type(self_obj) == 1) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 40);
                                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                            restock_obj := critter_inven_obj(self_obj, 0);
                                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                                            rm_obj_from_inven(self_obj, restock_obj);
                                                            add_obj_to_inven(self_obj, restock_obj);
                                                        end
                                                    end
                                                    else begin
                                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                            inven_unwield(self_obj);
                                                        end
                                                    end
                                                end
                                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                destroy_object(restock_obj);
                                            end
                                            restock_obj := 0;
                                            restock_amt := 0;
                                        end
                                        else begin
                                            restock_obj := 0;
                                        end
                                    end
                                end
                            end
                            else begin
                                if (town_level == 5) then begin
                                    restock_amt := random(2, 5);
                                    if (obj_is_carrying_obj_pid(self_obj, 805) < restock_amt) then begin
                                        if (50 >= random(1, 100)) then begin
                                            if (obj_is_carrying_obj_pid(self_obj, 805) < restock_amt) then begin
                                                restock_obj := create_object(805, 0, 0);
                                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 805));
                                            end
                                            else begin
                                                if (obj_is_carrying_obj_pid(self_obj, 805) > restock_amt) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 805);
                                                    if ((obj_is_carrying_obj_pid(self_obj, 805) - restock_amt) < removed_qty) then begin
                                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 805) - restock_amt;
                                                    end
                                                    if (removed_qty > 0) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 805);
                                                        if (obj_type(self_obj) == 1) then begin
                                                            restock_obj := obj_carrying_pid_obj(self_obj, 805);
                                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                                    add_obj_to_inven(self_obj, restock_obj);
                                                                end
                                                            end
                                                            else begin
                                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                    inven_unwield(self_obj);
                                                                end
                                                            end
                                                        end
                                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                        destroy_object(restock_obj);
                                                    end
                                                    restock_obj := 0;
                                                    restock_amt := 0;
                                                end
                                                else begin
                                                    restock_obj := 0;
                                                end
                                            end
                                        end
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, 805) < restock_amt) then begin
                                            restock_obj := create_object(805, 0, 0);
                                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 805));
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, 805) > restock_amt) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 805);
                                                if ((obj_is_carrying_obj_pid(self_obj, 805) - restock_amt) < removed_qty) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 805) - restock_amt;
                                                end
                                                if (removed_qty > 0) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 805);
                                                    if (obj_type(self_obj) == 1) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 805);
                                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                rm_obj_from_inven(self_obj, restock_obj);
                                                                add_obj_to_inven(self_obj, restock_obj);
                                                            end
                                                        end
                                                        else begin
                                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                inven_unwield(self_obj);
                                                            end
                                                        end
                                                    end
                                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                    destroy_object(restock_obj);
                                                end
                                                restock_obj := 0;
                                                restock_amt := 0;
                                            end
                                            else begin
                                                restock_obj := 0;
                                            end
                                        end
                                    end
                                    restock_amt := random(1, 3);
                                    if (obj_is_carrying_obj_pid(self_obj, 103) < restock_amt) then begin
                                        if (50 >= random(1, 100)) then begin
                                            if (obj_is_carrying_obj_pid(self_obj, 103) < restock_amt) then begin
                                                restock_obj := create_object(103, 0, 0);
                                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 103));
                                            end
                                            else begin
                                                if (obj_is_carrying_obj_pid(self_obj, 103) > restock_amt) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 103);
                                                    if ((obj_is_carrying_obj_pid(self_obj, 103) - restock_amt) < removed_qty) then begin
                                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 103) - restock_amt;
                                                    end
                                                    if (removed_qty > 0) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 103);
                                                        if (obj_type(self_obj) == 1) then begin
                                                            restock_obj := obj_carrying_pid_obj(self_obj, 103);
                                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                                    add_obj_to_inven(self_obj, restock_obj);
                                                                end
                                                            end
                                                            else begin
                                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                    inven_unwield(self_obj);
                                                                end
                                                            end
                                                        end
                                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                        destroy_object(restock_obj);
                                                    end
                                                    restock_obj := 0;
                                                    restock_amt := 0;
                                                end
                                                else begin
                                                    restock_obj := 0;
                                                end
                                            end
                                        end
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, 103) < restock_amt) then begin
                                            restock_obj := create_object(103, 0, 0);
                                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 103));
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, 103) > restock_amt) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 103);
                                                if ((obj_is_carrying_obj_pid(self_obj, 103) - restock_amt) < removed_qty) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 103) - restock_amt;
                                                end
                                                if (removed_qty > 0) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 103);
                                                    if (obj_type(self_obj) == 1) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 103);
                                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                rm_obj_from_inven(self_obj, restock_obj);
                                                                add_obj_to_inven(self_obj, restock_obj);
                                                            end
                                                        end
                                                        else begin
                                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                inven_unwield(self_obj);
                                                            end
                                                        end
                                                    end
                                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                    destroy_object(restock_obj);
                                                end
                                                restock_obj := 0;
                                                restock_amt := 0;
                                            end
                                            else begin
                                                restock_obj := 0;
                                            end
                                        end
                                    end
                                    restock_amt := random(1, 3);
                                    if (obj_is_carrying_obj_pid(self_obj, 81) < restock_amt) then begin
                                        if (50 >= random(1, 100)) then begin
                                            if (obj_is_carrying_obj_pid(self_obj, 81) < restock_amt) then begin
                                                restock_obj := create_object(81, 0, 0);
                                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 81));
                                            end
                                            else begin
                                                if (obj_is_carrying_obj_pid(self_obj, 81) > restock_amt) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 81);
                                                    if ((obj_is_carrying_obj_pid(self_obj, 81) - restock_amt) < removed_qty) then begin
                                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 81) - restock_amt;
                                                    end
                                                    if (removed_qty > 0) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 81);
                                                        if (obj_type(self_obj) == 1) then begin
                                                            restock_obj := obj_carrying_pid_obj(self_obj, 81);
                                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                                    add_obj_to_inven(self_obj, restock_obj);
                                                                end
                                                            end
                                                            else begin
                                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                    inven_unwield(self_obj);
                                                                end
                                                            end
                                                        end
                                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                        destroy_object(restock_obj);
                                                    end
                                                    restock_obj := 0;
                                                    restock_amt := 0;
                                                end
                                                else begin
                                                    restock_obj := 0;
                                                end
                                            end
                                        end
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, 81) < restock_amt) then begin
                                            restock_obj := create_object(81, 0, 0);
                                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 81));
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, 81) > restock_amt) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 81);
                                                if ((obj_is_carrying_obj_pid(self_obj, 81) - restock_amt) < removed_qty) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 81) - restock_amt;
                                                end
                                                if (removed_qty > 0) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 81);
                                                    if (obj_type(self_obj) == 1) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 81);
                                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                rm_obj_from_inven(self_obj, restock_obj);
                                                                add_obj_to_inven(self_obj, restock_obj);
                                                            end
                                                        end
                                                        else begin
                                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                inven_unwield(self_obj);
                                                            end
                                                        end
                                                    end
                                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                    destroy_object(restock_obj);
                                                end
                                                restock_obj := 0;
                                                restock_amt := 0;
                                            end
                                            else begin
                                                restock_obj := 0;
                                            end
                                        end
                                    end
                                    restock_amt := random(0, 3);
                                    if (obj_is_carrying_obj_pid(self_obj, 318) < restock_amt) then begin
                                        if (50 >= random(1, 100)) then begin
                                            if (obj_is_carrying_obj_pid(self_obj, 318) < restock_amt) then begin
                                                restock_obj := create_object(318, 0, 0);
                                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 318));
                                            end
                                            else begin
                                                if (obj_is_carrying_obj_pid(self_obj, 318) > restock_amt) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 318);
                                                    if ((obj_is_carrying_obj_pid(self_obj, 318) - restock_amt) < removed_qty) then begin
                                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 318) - restock_amt;
                                                    end
                                                    if (removed_qty > 0) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 318);
                                                        if (obj_type(self_obj) == 1) then begin
                                                            restock_obj := obj_carrying_pid_obj(self_obj, 318);
                                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                                    add_obj_to_inven(self_obj, restock_obj);
                                                                end
                                                            end
                                                            else begin
                                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                    inven_unwield(self_obj);
                                                                end
                                                            end
                                                        end
                                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                        destroy_object(restock_obj);
                                                    end
                                                    restock_obj := 0;
                                                    restock_amt := 0;
                                                end
                                                else begin
                                                    restock_obj := 0;
                                                end
                                            end
                                        end
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, 318) < restock_amt) then begin
                                            restock_obj := create_object(318, 0, 0);
                                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 318));
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, 318) > restock_amt) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 318);
                                                if ((obj_is_carrying_obj_pid(self_obj, 318) - restock_amt) < removed_qty) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 318) - restock_amt;
                                                end
                                                if (removed_qty > 0) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 318);
                                                    if (obj_type(self_obj) == 1) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 318);
                                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                rm_obj_from_inven(self_obj, restock_obj);
                                                                add_obj_to_inven(self_obj, restock_obj);
                                                            end
                                                        end
                                                        else begin
                                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                inven_unwield(self_obj);
                                                            end
                                                        end
                                                    end
                                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                    destroy_object(restock_obj);
                                                end
                                                restock_obj := 0;
                                                restock_amt := 0;
                                            end
                                            else begin
                                                restock_obj := 0;
                                            end
                                        end
                                    end
                                    restock_amt := random(0, 3);
                                    if (obj_is_carrying_obj_pid(self_obj, 71) < restock_amt) then begin
                                        if (50 >= random(1, 100)) then begin
                                            if (obj_is_carrying_obj_pid(self_obj, 71) < restock_amt) then begin
                                                restock_obj := create_object(71, 0, 0);
                                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 71));
                                            end
                                            else begin
                                                if (obj_is_carrying_obj_pid(self_obj, 71) > restock_amt) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 71);
                                                    if ((obj_is_carrying_obj_pid(self_obj, 71) - restock_amt) < removed_qty) then begin
                                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 71) - restock_amt;
                                                    end
                                                    if (removed_qty > 0) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 71);
                                                        if (obj_type(self_obj) == 1) then begin
                                                            restock_obj := obj_carrying_pid_obj(self_obj, 71);
                                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                                    add_obj_to_inven(self_obj, restock_obj);
                                                                end
                                                            end
                                                            else begin
                                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                    inven_unwield(self_obj);
                                                                end
                                                            end
                                                        end
                                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                        destroy_object(restock_obj);
                                                    end
                                                    restock_obj := 0;
                                                    restock_amt := 0;
                                                end
                                                else begin
                                                    restock_obj := 0;
                                                end
                                            end
                                        end
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, 71) < restock_amt) then begin
                                            restock_obj := create_object(71, 0, 0);
                                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 71));
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, 71) > restock_amt) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 71);
                                                if ((obj_is_carrying_obj_pid(self_obj, 71) - restock_amt) < removed_qty) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 71) - restock_amt;
                                                end
                                                if (removed_qty > 0) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 71);
                                                    if (obj_type(self_obj) == 1) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 71);
                                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                rm_obj_from_inven(self_obj, restock_obj);
                                                                add_obj_to_inven(self_obj, restock_obj);
                                                            end
                                                        end
                                                        else begin
                                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                inven_unwield(self_obj);
                                                            end
                                                        end
                                                    end
                                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                    destroy_object(restock_obj);
                                                end
                                                restock_obj := 0;
                                                restock_amt := 0;
                                            end
                                            else begin
                                                restock_obj := 0;
                                            end
                                        end
                                    end
                                    restock_amt := random(1, 2);
                                    if (obj_is_carrying_obj_pid(self_obj, 273) < restock_amt) then begin
                                        if (50 >= random(1, 100)) then begin
                                            if (obj_is_carrying_obj_pid(self_obj, 273) < restock_amt) then begin
                                                restock_obj := create_object(273, 0, 0);
                                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 273));
                                            end
                                            else begin
                                                if (obj_is_carrying_obj_pid(self_obj, 273) > restock_amt) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 273);
                                                    if ((obj_is_carrying_obj_pid(self_obj, 273) - restock_amt) < removed_qty) then begin
                                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 273) - restock_amt;
                                                    end
                                                    if (removed_qty > 0) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 273);
                                                        if (obj_type(self_obj) == 1) then begin
                                                            restock_obj := obj_carrying_pid_obj(self_obj, 273);
                                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                                    add_obj_to_inven(self_obj, restock_obj);
                                                                end
                                                            end
                                                            else begin
                                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                    inven_unwield(self_obj);
                                                                end
                                                            end
                                                        end
                                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                        destroy_object(restock_obj);
                                                    end
                                                    restock_obj := 0;
                                                    restock_amt := 0;
                                                end
                                                else begin
                                                    restock_obj := 0;
                                                end
                                            end
                                        end
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, 273) < restock_amt) then begin
                                            restock_obj := create_object(273, 0, 0);
                                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 273));
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, 273) > restock_amt) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 273);
                                                if ((obj_is_carrying_obj_pid(self_obj, 273) - restock_amt) < removed_qty) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 273) - restock_amt;
                                                end
                                                if (removed_qty > 0) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 273);
                                                    if (obj_type(self_obj) == 1) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 273);
                                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                rm_obj_from_inven(self_obj, restock_obj);
                                                                add_obj_to_inven(self_obj, restock_obj);
                                                            end
                                                        end
                                                        else begin
                                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                inven_unwield(self_obj);
                                                            end
                                                        end
                                                    end
                                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                    destroy_object(restock_obj);
                                                end
                                                restock_obj := 0;
                                                restock_amt := 0;
                                            end
                                            else begin
                                                restock_obj := 0;
                                            end
                                        end
                                    end
                                    restock_amt := random(2, 3);
                                    if (obj_is_carrying_obj_pid(self_obj, 801) < restock_amt) then begin
                                        if (50 >= random(1, 100)) then begin
                                            if (obj_is_carrying_obj_pid(self_obj, 801) < restock_amt) then begin
                                                restock_obj := create_object(801, 0, 0);
                                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 801));
                                            end
                                            else begin
                                                if (obj_is_carrying_obj_pid(self_obj, 801) > restock_amt) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 801);
                                                    if ((obj_is_carrying_obj_pid(self_obj, 801) - restock_amt) < removed_qty) then begin
                                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 801) - restock_amt;
                                                    end
                                                    if (removed_qty > 0) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 801);
                                                        if (obj_type(self_obj) == 1) then begin
                                                            restock_obj := obj_carrying_pid_obj(self_obj, 801);
                                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                                    add_obj_to_inven(self_obj, restock_obj);
                                                                end
                                                            end
                                                            else begin
                                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                    inven_unwield(self_obj);
                                                                end
                                                            end
                                                        end
                                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                        destroy_object(restock_obj);
                                                    end
                                                    restock_obj := 0;
                                                    restock_amt := 0;
                                                end
                                                else begin
                                                    restock_obj := 0;
                                                end
                                            end
                                        end
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, 801) < restock_amt) then begin
                                            restock_obj := create_object(801, 0, 0);
                                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 801));
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, 801) > restock_amt) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 801);
                                                if ((obj_is_carrying_obj_pid(self_obj, 801) - restock_amt) < removed_qty) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 801) - restock_amt;
                                                end
                                                if (removed_qty > 0) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 801);
                                                    if (obj_type(self_obj) == 1) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 801);
                                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                rm_obj_from_inven(self_obj, restock_obj);
                                                                add_obj_to_inven(self_obj, restock_obj);
                                                            end
                                                        end
                                                        else begin
                                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                inven_unwield(self_obj);
                                                            end
                                                        end
                                                    end
                                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                    destroy_object(restock_obj);
                                                end
                                                restock_obj := 0;
                                                restock_amt := 0;
                                            end
                                            else begin
                                                restock_obj := 0;
                                            end
                                        end
                                    end
                                    restock_amt := random(1, 3);
                                    if (obj_is_carrying_obj_pid(self_obj, 802) < restock_amt) then begin
                                        if (50 >= random(1, 100)) then begin
                                            if (obj_is_carrying_obj_pid(self_obj, 802) < restock_amt) then begin
                                                restock_obj := create_object(802, 0, 0);
                                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 802));
                                            end
                                            else begin
                                                if (obj_is_carrying_obj_pid(self_obj, 802) > restock_amt) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 802);
                                                    if ((obj_is_carrying_obj_pid(self_obj, 802) - restock_amt) < removed_qty) then begin
                                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 802) - restock_amt;
                                                    end
                                                    if (removed_qty > 0) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 802);
                                                        if (obj_type(self_obj) == 1) then begin
                                                            restock_obj := obj_carrying_pid_obj(self_obj, 802);
                                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                                    add_obj_to_inven(self_obj, restock_obj);
                                                                end
                                                            end
                                                            else begin
                                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                    inven_unwield(self_obj);
                                                                end
                                                            end
                                                        end
                                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                        destroy_object(restock_obj);
                                                    end
                                                    restock_obj := 0;
                                                    restock_amt := 0;
                                                end
                                                else begin
                                                    restock_obj := 0;
                                                end
                                            end
                                        end
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, 802) < restock_amt) then begin
                                            restock_obj := create_object(802, 0, 0);
                                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 802));
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, 802) > restock_amt) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 802);
                                                if ((obj_is_carrying_obj_pid(self_obj, 802) - restock_amt) < removed_qty) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 802) - restock_amt;
                                                end
                                                if (removed_qty > 0) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 802);
                                                    if (obj_type(self_obj) == 1) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 802);
                                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                rm_obj_from_inven(self_obj, restock_obj);
                                                                add_obj_to_inven(self_obj, restock_obj);
                                                            end
                                                        end
                                                        else begin
                                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                inven_unwield(self_obj);
                                                            end
                                                        end
                                                    end
                                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                    destroy_object(restock_obj);
                                                end
                                                restock_obj := 0;
                                                restock_amt := 0;
                                            end
                                            else begin
                                                restock_obj := 0;
                                            end
                                        end
                                    end
                                    restock_amt := random(1, 2);
                                    if (obj_is_carrying_obj_pid(self_obj, 40) < restock_amt) then begin
                                        if (50 >= random(1, 100)) then begin
                                            if (obj_is_carrying_obj_pid(self_obj, 40) < restock_amt) then begin
                                                restock_obj := create_object(40, 0, 0);
                                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 40));
                                            end
                                            else begin
                                                if (obj_is_carrying_obj_pid(self_obj, 40) > restock_amt) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 40);
                                                    if ((obj_is_carrying_obj_pid(self_obj, 40) - restock_amt) < removed_qty) then begin
                                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 40) - restock_amt;
                                                    end
                                                    if (removed_qty > 0) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 40);
                                                        if (obj_type(self_obj) == 1) then begin
                                                            restock_obj := obj_carrying_pid_obj(self_obj, 40);
                                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                                    add_obj_to_inven(self_obj, restock_obj);
                                                                end
                                                            end
                                                            else begin
                                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                    inven_unwield(self_obj);
                                                                end
                                                            end
                                                        end
                                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                        destroy_object(restock_obj);
                                                    end
                                                    restock_obj := 0;
                                                    restock_amt := 0;
                                                end
                                                else begin
                                                    restock_obj := 0;
                                                end
                                            end
                                        end
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, 40) < restock_amt) then begin
                                            restock_obj := create_object(40, 0, 0);
                                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 40));
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, 40) > restock_amt) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 40);
                                                if ((obj_is_carrying_obj_pid(self_obj, 40) - restock_amt) < removed_qty) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 40) - restock_amt;
                                                end
                                                if (removed_qty > 0) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 40);
                                                    if (obj_type(self_obj) == 1) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 40);
                                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                rm_obj_from_inven(self_obj, restock_obj);
                                                                add_obj_to_inven(self_obj, restock_obj);
                                                            end
                                                        end
                                                        else begin
                                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                inven_unwield(self_obj);
                                                            end
                                                        end
                                                    end
                                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                    destroy_object(restock_obj);
                                                end
                                                restock_obj := 0;
                                                restock_amt := 0;
                                            end
                                            else begin
                                                restock_obj := 0;
                                            end
                                        end
                                    end
                                end
                                else begin
                                    if (town_level == 6) then begin
                                        restock_amt := random(3, 5);
                                        if (obj_is_carrying_obj_pid(self_obj, 805) < restock_amt) then begin
                                            if (50 >= random(1, 100)) then begin
                                                if (obj_is_carrying_obj_pid(self_obj, 805) < restock_amt) then begin
                                                    restock_obj := create_object(805, 0, 0);
                                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 805));
                                                end
                                                else begin
                                                    if (obj_is_carrying_obj_pid(self_obj, 805) > restock_amt) then begin
                                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 805);
                                                        if ((obj_is_carrying_obj_pid(self_obj, 805) - restock_amt) < removed_qty) then begin
                                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 805) - restock_amt;
                                                        end
                                                        if (removed_qty > 0) then begin
                                                            restock_obj := obj_carrying_pid_obj(self_obj, 805);
                                                            if (obj_type(self_obj) == 1) then begin
                                                                restock_obj := obj_carrying_pid_obj(self_obj, 805);
                                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                                        add_obj_to_inven(self_obj, restock_obj);
                                                                    end
                                                                end
                                                                else begin
                                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                        inven_unwield(self_obj);
                                                                    end
                                                                end
                                                            end
                                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                            destroy_object(restock_obj);
                                                        end
                                                        restock_obj := 0;
                                                        restock_amt := 0;
                                                    end
                                                    else begin
                                                        restock_obj := 0;
                                                    end
                                                end
                                            end
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, 805) < restock_amt) then begin
                                                restock_obj := create_object(805, 0, 0);
                                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 805));
                                            end
                                            else begin
                                                if (obj_is_carrying_obj_pid(self_obj, 805) > restock_amt) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 805);
                                                    if ((obj_is_carrying_obj_pid(self_obj, 805) - restock_amt) < removed_qty) then begin
                                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 805) - restock_amt;
                                                    end
                                                    if (removed_qty > 0) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 805);
                                                        if (obj_type(self_obj) == 1) then begin
                                                            restock_obj := obj_carrying_pid_obj(self_obj, 805);
                                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                                    add_obj_to_inven(self_obj, restock_obj);
                                                                end
                                                            end
                                                            else begin
                                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                    inven_unwield(self_obj);
                                                                end
                                                            end
                                                        end
                                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                        destroy_object(restock_obj);
                                                    end
                                                    restock_obj := 0;
                                                    restock_amt := 0;
                                                end
                                                else begin
                                                    restock_obj := 0;
                                                end
                                            end
                                        end
                                        restock_amt := random(2, 2);
                                        if (obj_is_carrying_obj_pid(self_obj, 103) < restock_amt) then begin
                                            if (50 >= random(1, 100)) then begin
                                                if (obj_is_carrying_obj_pid(self_obj, 103) < restock_amt) then begin
                                                    restock_obj := create_object(103, 0, 0);
                                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 103));
                                                end
                                                else begin
                                                    if (obj_is_carrying_obj_pid(self_obj, 103) > restock_amt) then begin
                                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 103);
                                                        if ((obj_is_carrying_obj_pid(self_obj, 103) - restock_amt) < removed_qty) then begin
                                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 103) - restock_amt;
                                                        end
                                                        if (removed_qty > 0) then begin
                                                            restock_obj := obj_carrying_pid_obj(self_obj, 103);
                                                            if (obj_type(self_obj) == 1) then begin
                                                                restock_obj := obj_carrying_pid_obj(self_obj, 103);
                                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                                        add_obj_to_inven(self_obj, restock_obj);
                                                                    end
                                                                end
                                                                else begin
                                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                        inven_unwield(self_obj);
                                                                    end
                                                                end
                                                            end
                                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                            destroy_object(restock_obj);
                                                        end
                                                        restock_obj := 0;
                                                        restock_amt := 0;
                                                    end
                                                    else begin
                                                        restock_obj := 0;
                                                    end
                                                end
                                            end
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, 103) < restock_amt) then begin
                                                restock_obj := create_object(103, 0, 0);
                                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 103));
                                            end
                                            else begin
                                                if (obj_is_carrying_obj_pid(self_obj, 103) > restock_amt) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 103);
                                                    if ((obj_is_carrying_obj_pid(self_obj, 103) - restock_amt) < removed_qty) then begin
                                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 103) - restock_amt;
                                                    end
                                                    if (removed_qty > 0) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 103);
                                                        if (obj_type(self_obj) == 1) then begin
                                                            restock_obj := obj_carrying_pid_obj(self_obj, 103);
                                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                                    add_obj_to_inven(self_obj, restock_obj);
                                                                end
                                                            end
                                                            else begin
                                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                    inven_unwield(self_obj);
                                                                end
                                                            end
                                                        end
                                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                        destroy_object(restock_obj);
                                                    end
                                                    restock_obj := 0;
                                                    restock_amt := 0;
                                                end
                                                else begin
                                                    restock_obj := 0;
                                                end
                                            end
                                        end
                                        restock_amt := random(1, 2);
                                        if (obj_is_carrying_obj_pid(self_obj, 81) < restock_amt) then begin
                                            if (50 >= random(1, 100)) then begin
                                                if (obj_is_carrying_obj_pid(self_obj, 81) < restock_amt) then begin
                                                    restock_obj := create_object(81, 0, 0);
                                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 81));
                                                end
                                                else begin
                                                    if (obj_is_carrying_obj_pid(self_obj, 81) > restock_amt) then begin
                                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 81);
                                                        if ((obj_is_carrying_obj_pid(self_obj, 81) - restock_amt) < removed_qty) then begin
                                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 81) - restock_amt;
                                                        end
                                                        if (removed_qty > 0) then begin
                                                            restock_obj := obj_carrying_pid_obj(self_obj, 81);
                                                            if (obj_type(self_obj) == 1) then begin
                                                                restock_obj := obj_carrying_pid_obj(self_obj, 81);
                                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                                        add_obj_to_inven(self_obj, restock_obj);
                                                                    end
                                                                end
                                                                else begin
                                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                        inven_unwield(self_obj);
                                                                    end
                                                                end
                                                            end
                                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                            destroy_object(restock_obj);
                                                        end
                                                        restock_obj := 0;
                                                        restock_amt := 0;
                                                    end
                                                    else begin
                                                        restock_obj := 0;
                                                    end
                                                end
                                            end
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, 81) < restock_amt) then begin
                                                restock_obj := create_object(81, 0, 0);
                                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 81));
                                            end
                                            else begin
                                                if (obj_is_carrying_obj_pid(self_obj, 81) > restock_amt) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 81);
                                                    if ((obj_is_carrying_obj_pid(self_obj, 81) - restock_amt) < removed_qty) then begin
                                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 81) - restock_amt;
                                                    end
                                                    if (removed_qty > 0) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 81);
                                                        if (obj_type(self_obj) == 1) then begin
                                                            restock_obj := obj_carrying_pid_obj(self_obj, 81);
                                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                                    add_obj_to_inven(self_obj, restock_obj);
                                                                end
                                                            end
                                                            else begin
                                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                    inven_unwield(self_obj);
                                                                end
                                                            end
                                                        end
                                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                        destroy_object(restock_obj);
                                                    end
                                                    restock_obj := 0;
                                                    restock_amt := 0;
                                                end
                                                else begin
                                                    restock_obj := 0;
                                                end
                                            end
                                        end
                                        restock_amt := random(1, 3);
                                        if (obj_is_carrying_obj_pid(self_obj, 318) < restock_amt) then begin
                                            if (50 >= random(1, 100)) then begin
                                                if (obj_is_carrying_obj_pid(self_obj, 318) < restock_amt) then begin
                                                    restock_obj := create_object(318, 0, 0);
                                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 318));
                                                end
                                                else begin
                                                    if (obj_is_carrying_obj_pid(self_obj, 318) > restock_amt) then begin
                                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 318);
                                                        if ((obj_is_carrying_obj_pid(self_obj, 318) - restock_amt) < removed_qty) then begin
                                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 318) - restock_amt;
                                                        end
                                                        if (removed_qty > 0) then begin
                                                            restock_obj := obj_carrying_pid_obj(self_obj, 318);
                                                            if (obj_type(self_obj) == 1) then begin
                                                                restock_obj := obj_carrying_pid_obj(self_obj, 318);
                                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                                        add_obj_to_inven(self_obj, restock_obj);
                                                                    end
                                                                end
                                                                else begin
                                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                        inven_unwield(self_obj);
                                                                    end
                                                                end
                                                            end
                                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                            destroy_object(restock_obj);
                                                        end
                                                        restock_obj := 0;
                                                        restock_amt := 0;
                                                    end
                                                    else begin
                                                        restock_obj := 0;
                                                    end
                                                end
                                            end
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, 318) < restock_amt) then begin
                                                restock_obj := create_object(318, 0, 0);
                                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 318));
                                            end
                                            else begin
                                                if (obj_is_carrying_obj_pid(self_obj, 318) > restock_amt) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 318);
                                                    if ((obj_is_carrying_obj_pid(self_obj, 318) - restock_amt) < removed_qty) then begin
                                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 318) - restock_amt;
                                                    end
                                                    if (removed_qty > 0) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 318);
                                                        if (obj_type(self_obj) == 1) then begin
                                                            restock_obj := obj_carrying_pid_obj(self_obj, 318);
                                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                                    add_obj_to_inven(self_obj, restock_obj);
                                                                end
                                                            end
                                                            else begin
                                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                    inven_unwield(self_obj);
                                                                end
                                                            end
                                                        end
                                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                        destroy_object(restock_obj);
                                                    end
                                                    restock_obj := 0;
                                                    restock_amt := 0;
                                                end
                                                else begin
                                                    restock_obj := 0;
                                                end
                                            end
                                        end
                                        restock_amt := random(1, 2);
                                        if (obj_is_carrying_obj_pid(self_obj, 71) < restock_amt) then begin
                                            if (50 >= random(1, 100)) then begin
                                                if (obj_is_carrying_obj_pid(self_obj, 71) < restock_amt) then begin
                                                    restock_obj := create_object(71, 0, 0);
                                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 71));
                                                end
                                                else begin
                                                    if (obj_is_carrying_obj_pid(self_obj, 71) > restock_amt) then begin
                                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 71);
                                                        if ((obj_is_carrying_obj_pid(self_obj, 71) - restock_amt) < removed_qty) then begin
                                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 71) - restock_amt;
                                                        end
                                                        if (removed_qty > 0) then begin
                                                            restock_obj := obj_carrying_pid_obj(self_obj, 71);
                                                            if (obj_type(self_obj) == 1) then begin
                                                                restock_obj := obj_carrying_pid_obj(self_obj, 71);
                                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                                        add_obj_to_inven(self_obj, restock_obj);
                                                                    end
                                                                end
                                                                else begin
                                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                        inven_unwield(self_obj);
                                                                    end
                                                                end
                                                            end
                                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                            destroy_object(restock_obj);
                                                        end
                                                        restock_obj := 0;
                                                        restock_amt := 0;
                                                    end
                                                    else begin
                                                        restock_obj := 0;
                                                    end
                                                end
                                            end
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, 71) < restock_amt) then begin
                                                restock_obj := create_object(71, 0, 0);
                                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 71));
                                            end
                                            else begin
                                                if (obj_is_carrying_obj_pid(self_obj, 71) > restock_amt) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 71);
                                                    if ((obj_is_carrying_obj_pid(self_obj, 71) - restock_amt) < removed_qty) then begin
                                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 71) - restock_amt;
                                                    end
                                                    if (removed_qty > 0) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 71);
                                                        if (obj_type(self_obj) == 1) then begin
                                                            restock_obj := obj_carrying_pid_obj(self_obj, 71);
                                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                                    add_obj_to_inven(self_obj, restock_obj);
                                                                end
                                                            end
                                                            else begin
                                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                    inven_unwield(self_obj);
                                                                end
                                                            end
                                                        end
                                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                        destroy_object(restock_obj);
                                                    end
                                                    restock_obj := 0;
                                                    restock_amt := 0;
                                                end
                                                else begin
                                                    restock_obj := 0;
                                                end
                                            end
                                        end
                                        restock_amt := random(1, 2);
                                        if (obj_is_carrying_obj_pid(self_obj, 273) < restock_amt) then begin
                                            if (50 >= random(1, 100)) then begin
                                                if (obj_is_carrying_obj_pid(self_obj, 273) < restock_amt) then begin
                                                    restock_obj := create_object(273, 0, 0);
                                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 273));
                                                end
                                                else begin
                                                    if (obj_is_carrying_obj_pid(self_obj, 273) > restock_amt) then begin
                                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 273);
                                                        if ((obj_is_carrying_obj_pid(self_obj, 273) - restock_amt) < removed_qty) then begin
                                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 273) - restock_amt;
                                                        end
                                                        if (removed_qty > 0) then begin
                                                            restock_obj := obj_carrying_pid_obj(self_obj, 273);
                                                            if (obj_type(self_obj) == 1) then begin
                                                                restock_obj := obj_carrying_pid_obj(self_obj, 273);
                                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                                        add_obj_to_inven(self_obj, restock_obj);
                                                                    end
                                                                end
                                                                else begin
                                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                        inven_unwield(self_obj);
                                                                    end
                                                                end
                                                            end
                                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                            destroy_object(restock_obj);
                                                        end
                                                        restock_obj := 0;
                                                        restock_amt := 0;
                                                    end
                                                    else begin
                                                        restock_obj := 0;
                                                    end
                                                end
                                            end
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, 273) < restock_amt) then begin
                                                restock_obj := create_object(273, 0, 0);
                                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 273));
                                            end
                                            else begin
                                                if (obj_is_carrying_obj_pid(self_obj, 273) > restock_amt) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 273);
                                                    if ((obj_is_carrying_obj_pid(self_obj, 273) - restock_amt) < removed_qty) then begin
                                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 273) - restock_amt;
                                                    end
                                                    if (removed_qty > 0) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 273);
                                                        if (obj_type(self_obj) == 1) then begin
                                                            restock_obj := obj_carrying_pid_obj(self_obj, 273);
                                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                                    add_obj_to_inven(self_obj, restock_obj);
                                                                end
                                                            end
                                                            else begin
                                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                    inven_unwield(self_obj);
                                                                end
                                                            end
                                                        end
                                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                        destroy_object(restock_obj);
                                                    end
                                                    restock_obj := 0;
                                                    restock_amt := 0;
                                                end
                                                else begin
                                                    restock_obj := 0;
                                                end
                                            end
                                        end
                                        restock_amt := random(2, 3);
                                        if (obj_is_carrying_obj_pid(self_obj, 801) < restock_amt) then begin
                                            if (50 >= random(1, 100)) then begin
                                                if (obj_is_carrying_obj_pid(self_obj, 801) < restock_amt) then begin
                                                    restock_obj := create_object(801, 0, 0);
                                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 801));
                                                end
                                                else begin
                                                    if (obj_is_carrying_obj_pid(self_obj, 801) > restock_amt) then begin
                                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 801);
                                                        if ((obj_is_carrying_obj_pid(self_obj, 801) - restock_amt) < removed_qty) then begin
                                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 801) - restock_amt;
                                                        end
                                                        if (removed_qty > 0) then begin
                                                            restock_obj := obj_carrying_pid_obj(self_obj, 801);
                                                            if (obj_type(self_obj) == 1) then begin
                                                                restock_obj := obj_carrying_pid_obj(self_obj, 801);
                                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                                        add_obj_to_inven(self_obj, restock_obj);
                                                                    end
                                                                end
                                                                else begin
                                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                        inven_unwield(self_obj);
                                                                    end
                                                                end
                                                            end
                                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                            destroy_object(restock_obj);
                                                        end
                                                        restock_obj := 0;
                                                        restock_amt := 0;
                                                    end
                                                    else begin
                                                        restock_obj := 0;
                                                    end
                                                end
                                            end
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, 801) < restock_amt) then begin
                                                restock_obj := create_object(801, 0, 0);
                                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 801));
                                            end
                                            else begin
                                                if (obj_is_carrying_obj_pid(self_obj, 801) > restock_amt) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 801);
                                                    if ((obj_is_carrying_obj_pid(self_obj, 801) - restock_amt) < removed_qty) then begin
                                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 801) - restock_amt;
                                                    end
                                                    if (removed_qty > 0) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 801);
                                                        if (obj_type(self_obj) == 1) then begin
                                                            restock_obj := obj_carrying_pid_obj(self_obj, 801);
                                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                                    add_obj_to_inven(self_obj, restock_obj);
                                                                end
                                                            end
                                                            else begin
                                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                    inven_unwield(self_obj);
                                                                end
                                                            end
                                                        end
                                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                        destroy_object(restock_obj);
                                                    end
                                                    restock_obj := 0;
                                                    restock_amt := 0;
                                                end
                                                else begin
                                                    restock_obj := 0;
                                                end
                                            end
                                        end
                                        restock_amt := random(2, 3);
                                        if (obj_is_carrying_obj_pid(self_obj, 802) < restock_amt) then begin
                                            if (50 >= random(1, 100)) then begin
                                                if (obj_is_carrying_obj_pid(self_obj, 802) < restock_amt) then begin
                                                    restock_obj := create_object(802, 0, 0);
                                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 802));
                                                end
                                                else begin
                                                    if (obj_is_carrying_obj_pid(self_obj, 802) > restock_amt) then begin
                                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 802);
                                                        if ((obj_is_carrying_obj_pid(self_obj, 802) - restock_amt) < removed_qty) then begin
                                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 802) - restock_amt;
                                                        end
                                                        if (removed_qty > 0) then begin
                                                            restock_obj := obj_carrying_pid_obj(self_obj, 802);
                                                            if (obj_type(self_obj) == 1) then begin
                                                                restock_obj := obj_carrying_pid_obj(self_obj, 802);
                                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                                        add_obj_to_inven(self_obj, restock_obj);
                                                                    end
                                                                end
                                                                else begin
                                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                        inven_unwield(self_obj);
                                                                    end
                                                                end
                                                            end
                                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                            destroy_object(restock_obj);
                                                        end
                                                        restock_obj := 0;
                                                        restock_amt := 0;
                                                    end
                                                    else begin
                                                        restock_obj := 0;
                                                    end
                                                end
                                            end
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, 802) < restock_amt) then begin
                                                restock_obj := create_object(802, 0, 0);
                                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 802));
                                            end
                                            else begin
                                                if (obj_is_carrying_obj_pid(self_obj, 802) > restock_amt) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 802);
                                                    if ((obj_is_carrying_obj_pid(self_obj, 802) - restock_amt) < removed_qty) then begin
                                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 802) - restock_amt;
                                                    end
                                                    if (removed_qty > 0) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 802);
                                                        if (obj_type(self_obj) == 1) then begin
                                                            restock_obj := obj_carrying_pid_obj(self_obj, 802);
                                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                                    add_obj_to_inven(self_obj, restock_obj);
                                                                end
                                                            end
                                                            else begin
                                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                    inven_unwield(self_obj);
                                                                end
                                                            end
                                                        end
                                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                        destroy_object(restock_obj);
                                                    end
                                                    restock_obj := 0;
                                                    restock_amt := 0;
                                                end
                                                else begin
                                                    restock_obj := 0;
                                                end
                                            end
                                        end
                                        restock_amt := random(2, 2);
                                        if (obj_is_carrying_obj_pid(self_obj, 40) < restock_amt) then begin
                                            if (50 >= random(1, 100)) then begin
                                                if (obj_is_carrying_obj_pid(self_obj, 40) < restock_amt) then begin
                                                    restock_obj := create_object(40, 0, 0);
                                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 40));
                                                end
                                                else begin
                                                    if (obj_is_carrying_obj_pid(self_obj, 40) > restock_amt) then begin
                                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 40);
                                                        if ((obj_is_carrying_obj_pid(self_obj, 40) - restock_amt) < removed_qty) then begin
                                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 40) - restock_amt;
                                                        end
                                                        if (removed_qty > 0) then begin
                                                            restock_obj := obj_carrying_pid_obj(self_obj, 40);
                                                            if (obj_type(self_obj) == 1) then begin
                                                                restock_obj := obj_carrying_pid_obj(self_obj, 40);
                                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                                        add_obj_to_inven(self_obj, restock_obj);
                                                                    end
                                                                end
                                                                else begin
                                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                        inven_unwield(self_obj);
                                                                    end
                                                                end
                                                            end
                                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                            destroy_object(restock_obj);
                                                        end
                                                        restock_obj := 0;
                                                        restock_amt := 0;
                                                    end
                                                    else begin
                                                        restock_obj := 0;
                                                    end
                                                end
                                            end
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, 40) < restock_amt) then begin
                                                restock_obj := create_object(40, 0, 0);
                                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 40));
                                            end
                                            else begin
                                                if (obj_is_carrying_obj_pid(self_obj, 40) > restock_amt) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 40);
                                                    if ((obj_is_carrying_obj_pid(self_obj, 40) - restock_amt) < removed_qty) then begin
                                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 40) - restock_amt;
                                                    end
                                                    if (removed_qty > 0) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 40);
                                                        if (obj_type(self_obj) == 1) then begin
                                                            restock_obj := obj_carrying_pid_obj(self_obj, 40);
                                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                                    add_obj_to_inven(self_obj, restock_obj);
                                                                end
                                                            end
                                                            else begin
                                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                    inven_unwield(self_obj);
                                                                end
                                                            end
                                                        end
                                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                        destroy_object(restock_obj);
                                                    end
                                                    restock_obj := 0;
                                                    restock_amt := 0;
                                                end
                                                else begin
                                                    restock_obj := 0;
                                                end
                                            end
                                        end
                                        restock_amt := random(1, 2);
                                        if (obj_is_carrying_obj_pid(self_obj, 144) < restock_amt) then begin
                                            if (50 >= random(1, 100)) then begin
                                                if (obj_is_carrying_obj_pid(self_obj, 144) < restock_amt) then begin
                                                    restock_obj := create_object(144, 0, 0);
                                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 144));
                                                end
                                                else begin
                                                    if (obj_is_carrying_obj_pid(self_obj, 144) > restock_amt) then begin
                                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 144);
                                                        if ((obj_is_carrying_obj_pid(self_obj, 144) - restock_amt) < removed_qty) then begin
                                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 144) - restock_amt;
                                                        end
                                                        if (removed_qty > 0) then begin
                                                            restock_obj := obj_carrying_pid_obj(self_obj, 144);
                                                            if (obj_type(self_obj) == 1) then begin
                                                                restock_obj := obj_carrying_pid_obj(self_obj, 144);
                                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                                        add_obj_to_inven(self_obj, restock_obj);
                                                                    end
                                                                end
                                                                else begin
                                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                        inven_unwield(self_obj);
                                                                    end
                                                                end
                                                            end
                                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                            destroy_object(restock_obj);
                                                        end
                                                        restock_obj := 0;
                                                        restock_amt := 0;
                                                    end
                                                    else begin
                                                        restock_obj := 0;
                                                    end
                                                end
                                            end
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, 144) < restock_amt) then begin
                                                restock_obj := create_object(144, 0, 0);
                                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 144));
                                            end
                                            else begin
                                                if (obj_is_carrying_obj_pid(self_obj, 144) > restock_amt) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 144);
                                                    if ((obj_is_carrying_obj_pid(self_obj, 144) - restock_amt) < removed_qty) then begin
                                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 144) - restock_amt;
                                                    end
                                                    if (removed_qty > 0) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 144);
                                                        if (obj_type(self_obj) == 1) then begin
                                                            restock_obj := obj_carrying_pid_obj(self_obj, 144);
                                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                                    add_obj_to_inven(self_obj, restock_obj);
                                                                end
                                                            end
                                                            else begin
                                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                    inven_unwield(self_obj);
                                                                end
                                                            end
                                                        end
                                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                        destroy_object(restock_obj);
                                                    end
                                                    restock_obj := 0;
                                                    restock_amt := 0;
                                                end
                                                else begin
                                                    restock_obj := 0;
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                if ((CUR_MAP_ARCAVES) or (CUR_MAP_ARVILLAG) or (CUR_MAP_ARCAVES5) or (CUR_MAP_ARBRIDGE)) then begin
                    current_town := "Arroyo";
                end
                if ((CUR_MAP_KLADWTWN) or (CUR_MAP_KLAMALL) or (CUR_MAP_KLARATCV) or (CUR_MAP_KLATRAP) or (CUR_MAP_KLAGRAZ) or (CUR_MAP_KLACANYN) or (CUR_MAP_KLACVENT)) then begin
                    current_town := "Klamath";
                end
                if (CUR_MAP_KLATOXCV) then begin
                    current_town := "Klamath Toxic Caves";
                end
                if (CUR_MAP_RNDMDDG) then begin
                    current_town := "Mad Dog Area";
                end
                if ((CUR_MAP_DENBUS1) or (CUR_MAP_DENBUS2) or (CUR_MAP_DENRES1)) then begin
                    current_town := "Den";
                end
                if ((CUR_MAP_PRIMIT) or (CUR_MAP_TRIBE02) or (CUR_MAP_SLVCAMP) or (CUR_MAP_TRIBE2)) then begin
                    current_town := "Primitive Tribes";
                end
                if (CUR_MAP_TRIBE01) then begin
                    current_town := "Primitive Tribe";
                end
                if (CUR_MAP_DNSLVRUN) then begin
                    current_town := "Den Slave Run";
                end
                if (CUR_MAP_JENFARM7) then begin
                    current_town := "Jennings Farm Area";
                end
                if (CUR_MAP_TRUCK) then begin
                    current_town := "Truck";
                end
                if (CUR_MAP_SCRAPT) then begin
                    current_town := "Scraptown";
                end
                if ((CUR_MAP_MODMAIN) or (CUR_MAP_MODINN) or (CUR_MAP_MODBRAH) or (CUR_MAP_MODGARD) or (CUR_MAP_MODSHIT) or (CUR_MAP_MODWELL)) then begin
                    current_town := "Modoc";
                end
                if (CUR_MAP_CRISIENT) then begin
                    current_town := "Vault 23";
                end
                if ((CUR_MAP_GSTFARM) or (CUR_MAP_GSTCAV1) or (CUR_MAP_GSTCAV2)) then begin
                    current_town := "Ghost Farm";
                end
                if (CUR_MAP_MODOCT) then begin
                    current_town := "Modoc Thieves Guild";
                end
                if (CUR_MAP_MODOCT2) then begin
                    current_town := "Salvatore's Gun Stash";
                end
                if (CUR_MAP_MODOCT3) then begin
                    current_town := "Special Salvatore";
                end
                if (CUR_MAP_MODOCT4) then begin
                    current_town := "Salvatore Meeting";
                end
                if ((CUR_MAP_GECKSETL) or (CUR_MAP_GECKPWPL) or (CUR_MAP_GECKJUNK) or (CUR_MAP_GECKTUNL)) then begin
                    current_town := "Gecko";
                end
                if ((CUR_MAP_VCTYCTYD) or (CUR_MAP_VCTYDWTN) or (CUR_MAP_VCTYCOCL) or (CUR_MAP_VCTYVLT)) then begin
                    current_town := "Vault City";
                end
                if ((CUR_MAP_RAIDERS1) or (CUR_MAP_RAIDERS2)) then begin
                    current_town := "Raiders";
                end
                if ((CUR_MAP_BROKEN1) or (CUR_MAP_BROKEN2)) then begin
                    current_town := "Broken Hills";
                end
                if ((CUR_MAP_REDDOWN) or (CUR_MAP_REDWAME) or (CUR_MAP_REDWAN1) or (CUR_MAP_REDMENT) or (CUR_MAP_REDDTUN) or (CUR_MAP_REDMTUN)) then begin
                    current_town := "Redding";
                end
                if ((CUR_MAP_NEWR1) or (CUR_MAP_NEWR2) or (CUR_MAP_NEWR3) or (CUR_MAP_NEWR4) or (CUR_MAP_NEWRCS) or (CUR_MAP_NEWRBA) or (CUR_MAP_NEWRVB)) then begin
                    current_town := "New Reno";
                end
                if ((CUR_MAP_LARS1) or (CUR_MAP_LARS3) or (CUR_MAP_LARSSCRP) or (CUR_MAP_LARS2)) then begin
                    current_town := "Lars-City";
                end
                if (CUR_MAP_CRSNMAIN) then begin
                    current_town := "Lars-City Carson";
                end
                if (CUR_MAP_ABBEY) then begin
                    current_town := "Abbey";
                end
                if ((CUR_MAP_EPAMAIN) or (CUR_MAP_EPAWRHSE)) then begin
                    current_town := "EPA";
                end
                if ((CUR_MAP_COLLY) or (CUR_MAP_COLLY1)) then begin
                    current_town := "Collyweb";
                end
                if (CUR_MAP_NEWRGO) then begin
                    current_town := "Golgotha";
                end
                if (CUR_MAP_NEWRST) then begin
                    current_town := "Reno Stables";
                end
                if ((CUR_MAP_DEPOLV1) or (CUR_MAP_DEPOLVA) or (CUR_MAP_DEPOLVB)) then begin
                    current_town := "Sierra Army Base";
                end
                if ((CUR_MAP_NCRENT) or (CUR_MAP_NCR2) or (CUR_MAP_NCR1) or (CUR_MAP_NCR3) or (CUR_MAP_NCR4)) then begin
                    current_town := "NCR";
                end
                if (CUR_MAP_B21) then begin
                    current_town := "B21";
                end
                if ((CUR_MAP_V15ENT) or (CUR_MAP_V15ENTB) or (CUR_MAP_VAULT15) or (CUR_MAP_V15SENT)) then begin
                    current_town := "Vault 15";
                end
                if ((CUR_MAP_VAULT13) or (CUR_MAP_V13ENT)) then begin
                    current_town := "Vault 13";
                end
                if ((CUR_MAP_MBASE12) or (CUR_MAP_MBASE34) or (CUR_MAP_MBCLOSE)) then begin
                    current_town := "Military Base";
                end
                if ((CUR_MAP_SFCHINA) or (CUR_MAP_SFDOCK) or (CUR_MAP_SFTANKER) or (CUR_MAP_SFSHUTL1) or (CUR_MAP_SFSHUTL2) or (CUR_MAP_SFELRONB) or (CUR_MAP_SFCHINA2)) then begin
                    current_town := "San Francisco";
                end
                if ((CUR_MAP_BROHDENT1) or (CUR_MAP_BROHD121) or (CUR_MAP_BROHD341) or (CUR_MAP_BROHD1K)) then begin
                    current_town := "Brohdent";
                end
                if ((CUR_MAP_V14ENT) or (CUR_MAP_VAULT14) or (CUR_MAP_VAULT14B)) then begin
                    current_town := "Vault 14";
                end
                if (CUR_MAP_NAVARRO) then begin
                    current_town := "Navarro";
                end
                if ((CUR_MAP_ENCDOCK) or (CUR_MAP_ENCDET) or (CUR_MAP_ENCFITE) or (CUR_MAP_ENCGD) or (CUR_MAP_ENCPRES) or (CUR_MAP_ENCRCTR) or (CUR_MAP_ENCTRP) or (CUR_MAP_ENCVERT) or (CUR_MAP_ENCFT2)) then begin
                    current_town := "Enclave";
                end
                if ((CUR_MAP_BROHDENT) or (CUR_MAP_CITYCH3) or (CUR_MAP_BROHD34)) then begin
                    current_town := "BoS Bunker";
                end
                if (CUR_MAP_BRHDHLP) then begin
                    current_town := "BoS Help";
                end
                if ((CUR_MAP_EPAENT) or (CUR_MAP_EPAX)) then begin
                    current_town := "BOS Facility";
                end
                if (CUR_MAP_RNDWHALE) then begin
                    current_town := "Special Whale";
                end
                if (CUR_MAP_RNDTINWD) then begin
                    current_town := "Special Woodsman";
                end
                if (CUR_MAP_RNDBHEAD) then begin
                    current_town := "Special Head";
                end
                if (CUR_MAP_RNDSHUTL) then begin
                    current_town := "Special Shuttle";
                end
                if (CUR_MAP_RNDUVILG) then begin
                    current_town := "Special Unwashed";
                end
                if (CUR_MAP_RNDBRIDG) then begin
                    current_town := "Special Bridge";
                end
                if (CUR_MAP_RNDCAFE) then begin
                    current_town := "Special Cafe";
                end
                if (CUR_MAP_RNDHOLY1) then begin
                    current_town := "Special Holy 1";
                end
                if (CUR_MAP_RNDHOLY2) then begin
                    current_town := "Special Holy 2";
                end
                if (CUR_MAP_RNDFORVR) then begin
                    current_town := "Special Guardian";
                end
                if (CUR_MAP_RNDTOXIC) then begin
                    current_town := "Special Toxic";
                end
                if (CUR_MAP_RNDPARIH) then begin
                    current_town := "Special Pariah";
                end
                if (CUR_MAP_RNDEXCOW) then begin
                    current_town := "Special Brahmin";
                end
                if (CUR_MAP_RNDPOSTM) then begin
                    current_town := "Special Postman";
                end
                if (CUR_MAP_MODOCT3) then begin
                    current_town := "Special Salvator";
                end
                if (CUR_MAP_RNDMSTR) then begin
                    current_town := "Dead Soldiers of Master Army";
                end
                if ((CUR_MAP_BHRNDMNT) or (CUR_MAP_BHRNDDST)) then begin
                    current_town := "Caravan Encounters";
                end
                if (CUR_MAP_GAMMOVIE) then begin
                    current_town := "In Game Movie";
                end
                if (CUR_MAP_RNDBESS) then begin
                    current_town := "Bess Dead";
                end
                if ((CUR_MAP_RNDBD) or (CUR_MAP_RNDBD)) then begin
                    current_town := "DeathClaw Encounters";
                end
                if ((CUR_MAP_DESERT1) or (CUR_MAP_DESERT2) or (CUR_MAP_DESERT3) or (CUR_MAP_DESERT4) or (CUR_MAP_DESERT5) or (CUR_MAP_DESERT6) or (CUR_MAP_DESERT7) or (CUR_MAP_DESERT213) or (CUR_MAP_DESERT214) or (CUR_MAP_DESERT215) or (CUR_MAP_DESERT216) or (CUR_MAP_DESERT217)) then begin
                    current_town := "Random Encounter Desert";
                end
                if ((CUR_MAP_MOUNTN1) or (CUR_MAP_MOUNTN2) or (CUR_MAP_MOUNTN3) or (CUR_MAP_MOUNTN4) or (CUR_MAP_MOUNTN5) or (CUR_MAP_MOUNTN6)) then begin
                    current_town := "Random Encounter Mountain";
                end
                if ((CUR_MAP_CITY1) or (CUR_MAP_CITY2) or (CUR_MAP_CITY3) or (CUR_MAP_CITY4) or (CUR_MAP_CITY5) or (CUR_MAP_CITY6) or (CUR_MAP_CITY7) or (CUR_MAP_CITY8)) then begin
                    current_town := "Random Encounter City";
                end
                if ((CUR_MAP_COAST1) or (CUR_MAP_COAST2) or (CUR_MAP_COAST3) or (CUR_MAP_COAST4) or (CUR_MAP_COAST5) or (CUR_MAP_COAST6) or (CUR_MAP_COAST7) or (CUR_MAP_COAST8) or (CUR_MAP_COAST9) or (CUR_MAP_COAST10) or (CUR_MAP_COAST11) or (CUR_MAP_07DESERT)) then begin
                    current_town := "Random Encounter Coast";
                end
                if ((CUR_MAP_CAVE0) or (CUR_MAP_CAVE1) or (CUR_MAP_CAVE2) or (CUR_MAP_CAVE3) or (CUR_MAP_CAVE4) or (CUR_MAP_CAVE5) or (CUR_MAP_CAVE6) or (CUR_MAP_CAVE7)) then begin
                    current_town := "Random Encounter Cavern";
                end
                if ((current_town == "Arroyo") or (current_town == "Klamath") or (current_town == "Klamath Toxic Caves") or (current_town == "Mad Dog Area")) then begin
                    town_level := 1;
                end
                if ((current_town == "Den") or (current_town == "Den Slave Run") or (current_town == "Modoc") or (current_town == "Vault 23") or (current_town == "Jennings Farm Area") or (current_town == "Truck") or (current_town == "Scraptown") or (current_town == "Modoc Thieves Guild") or (current_town == "Salvatore's Gun Stash") or (current_town == "Special Salvatore") or (current_town == "Salvatore Meeting") or (current_town == "Collyweb") or (current_town == "Primitive Tribe") or (current_town == "Ghost Farm")) then begin
                    town_level := 2;
                end
                if ((current_town == "Gecko") or (current_town == "Vault City") or (current_town == "Raiders") or (current_town == "Special Whale") or (current_town == "Special Woodsman") or (current_town == "Special Head") or (current_town == "Special Shuttle") or (current_town == "Special Unwashed") or (current_town == "Special Bridge") or (current_town == "Special Cafe") or (current_town == "Special Holy 1") or (current_town == "Special Holy 2") or (current_town == "Special Guardian") or (current_town == "Special Toxic") or (current_town == "Special Pariah") or (current_town == "Special Brahmin") or (current_town == "Special Postman") or (current_town == "Special Salvator") or (current_town == "Dead Soldiers of Master Army") or (current_town == "Caravan Encounters") or (current_town == "DeathClaw Encounters") or (current_town == "Random Encounter Desert") or (current_town == "Random Encounter Mountain") or (current_town == "Random Encounter City") or (current_town == "Random Encounter Coast") or (current_town == "Random Encounter Cavern") or (current_town == "Bess Dead") or (current_town == "In Game Movie")) then begin
                    town_level := 3;
                end
                if ((current_town == "Broken Hills") or (current_town == "New Reno") or (current_town == "Salvatore's Gun Stash") or (current_town == "Special Salvatore") or (current_town == "Salvatore Meeting") or (current_town == "Golgotha") or (current_town == "Reno Stables") or (current_town == "Redding") or (current_town == "Abbey") or (current_town == "Lars-City Carson") or (current_town == "Lars-City") or (current_town == "EPA") or (current_town == "Sierra Army Base")) then begin
                    town_level := 4;
                end
                if ((current_town == "NCR") or (current_town == "Vault 15") or (current_town == "B21") or (current_town == "Vault 13")) then begin
                    town_level := 5;
                end
                if ((current_town == "Military Base") or (current_town == "Navarro") or (current_town == "San Francisco") or (current_town == "Vault 14") or (current_town == "Brohdent") or (current_town == "BOS Facility") or (current_town == "BoS Help") or (current_town == "BoS Bunker") or (current_town == "Enclave")) then begin
                    town_level := 6;
                end
                if (current_town == "") then begin
                    town_level := 4;
                end
                if (town_level == 1) then begin
                    restock_amt := random(100, 300);
                    if (obj_is_carrying_obj_pid(self_obj, 41) < restock_amt) then begin
                        if (100 >= random(1, 100)) then begin
                            if (obj_is_carrying_obj_pid(self_obj, 41) < restock_amt) then begin
                                restock_obj := create_object(41, 0, 0);
                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 41));
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, 41) > restock_amt) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 41);
                                    if ((obj_is_carrying_obj_pid(self_obj, 41) - restock_amt) < removed_qty) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 41) - restock_amt;
                                    end
                                    if (removed_qty > 0) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 41);
                                        if (obj_type(self_obj) == 1) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 41);
                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                    add_obj_to_inven(self_obj, restock_obj);
                                                end
                                            end
                                            else begin
                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                    inven_unwield(self_obj);
                                                end
                                            end
                                        end
                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                        destroy_object(restock_obj);
                                    end
                                    restock_obj := 0;
                                    restock_amt := 0;
                                end
                                else begin
                                    restock_obj := 0;
                                end
                            end
                        end
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 41) < restock_amt) then begin
                            restock_obj := create_object(41, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 41));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 41) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 41);
                                if ((obj_is_carrying_obj_pid(self_obj, 41) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 41) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 41);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 41);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (town_level == 2) then begin
                        restock_amt := random(200, 600);
                        if (obj_is_carrying_obj_pid(self_obj, 41) < restock_amt) then begin
                            if (100 >= random(1, 100)) then begin
                                if (obj_is_carrying_obj_pid(self_obj, 41) < restock_amt) then begin
                                    restock_obj := create_object(41, 0, 0);
                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 41));
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, 41) > restock_amt) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 41);
                                        if ((obj_is_carrying_obj_pid(self_obj, 41) - restock_amt) < removed_qty) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 41) - restock_amt;
                                        end
                                        if (removed_qty > 0) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 41);
                                            if (obj_type(self_obj) == 1) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, 41);
                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                        add_obj_to_inven(self_obj, restock_obj);
                                                    end
                                                end
                                                else begin
                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                        inven_unwield(self_obj);
                                                    end
                                                end
                                            end
                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                            destroy_object(restock_obj);
                                        end
                                        restock_obj := 0;
                                        restock_amt := 0;
                                    end
                                    else begin
                                        restock_obj := 0;
                                    end
                                end
                            end
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 41) < restock_amt) then begin
                                restock_obj := create_object(41, 0, 0);
                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 41));
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, 41) > restock_amt) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 41);
                                    if ((obj_is_carrying_obj_pid(self_obj, 41) - restock_amt) < removed_qty) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 41) - restock_amt;
                                    end
                                    if (removed_qty > 0) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 41);
                                        if (obj_type(self_obj) == 1) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 41);
                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                    add_obj_to_inven(self_obj, restock_obj);
                                                end
                                            end
                                            else begin
                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                    inven_unwield(self_obj);
                                                end
                                            end
                                        end
                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                        destroy_object(restock_obj);
                                    end
                                    restock_obj := 0;
                                    restock_amt := 0;
                                end
                                else begin
                                    restock_obj := 0;
                                end
                            end
                        end
                    end
                    else begin
                        if (town_level == 3) then begin
                            restock_amt := random(300, 900);
                            if (obj_is_carrying_obj_pid(self_obj, 41) < restock_amt) then begin
                                if (100 >= random(1, 100)) then begin
                                    if (obj_is_carrying_obj_pid(self_obj, 41) < restock_amt) then begin
                                        restock_obj := create_object(41, 0, 0);
                                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 41));
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, 41) > restock_amt) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 41);
                                            if ((obj_is_carrying_obj_pid(self_obj, 41) - restock_amt) < removed_qty) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 41) - restock_amt;
                                            end
                                            if (removed_qty > 0) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, 41);
                                                if (obj_type(self_obj) == 1) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 41);
                                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                            restock_obj := critter_inven_obj(self_obj, 0);
                                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                                            rm_obj_from_inven(self_obj, restock_obj);
                                                            add_obj_to_inven(self_obj, restock_obj);
                                                        end
                                                    end
                                                    else begin
                                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                            inven_unwield(self_obj);
                                                        end
                                                    end
                                                end
                                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                destroy_object(restock_obj);
                                            end
                                            restock_obj := 0;
                                            restock_amt := 0;
                                        end
                                        else begin
                                            restock_obj := 0;
                                        end
                                    end
                                end
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, 41) < restock_amt) then begin
                                    restock_obj := create_object(41, 0, 0);
                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 41));
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, 41) > restock_amt) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 41);
                                        if ((obj_is_carrying_obj_pid(self_obj, 41) - restock_amt) < removed_qty) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 41) - restock_amt;
                                        end
                                        if (removed_qty > 0) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 41);
                                            if (obj_type(self_obj) == 1) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, 41);
                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                        add_obj_to_inven(self_obj, restock_obj);
                                                    end
                                                end
                                                else begin
                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                        inven_unwield(self_obj);
                                                    end
                                                end
                                            end
                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                            destroy_object(restock_obj);
                                        end
                                        restock_obj := 0;
                                        restock_amt := 0;
                                    end
                                    else begin
                                        restock_obj := 0;
                                    end
                                end
                            end
                        end
                        else begin
                            if (town_level == 1) then begin
                                restock_amt := random(400, 1200);
                                if (obj_is_carrying_obj_pid(self_obj, 41) < restock_amt) then begin
                                    if (100 >= random(1, 100)) then begin
                                        if (obj_is_carrying_obj_pid(self_obj, 41) < restock_amt) then begin
                                            restock_obj := create_object(41, 0, 0);
                                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 41));
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, 41) > restock_amt) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 41);
                                                if ((obj_is_carrying_obj_pid(self_obj, 41) - restock_amt) < removed_qty) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 41) - restock_amt;
                                                end
                                                if (removed_qty > 0) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 41);
                                                    if (obj_type(self_obj) == 1) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 41);
                                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                rm_obj_from_inven(self_obj, restock_obj);
                                                                add_obj_to_inven(self_obj, restock_obj);
                                                            end
                                                        end
                                                        else begin
                                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                inven_unwield(self_obj);
                                                            end
                                                        end
                                                    end
                                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                    destroy_object(restock_obj);
                                                end
                                                restock_obj := 0;
                                                restock_amt := 0;
                                            end
                                            else begin
                                                restock_obj := 0;
                                            end
                                        end
                                    end
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, 41) < restock_amt) then begin
                                        restock_obj := create_object(41, 0, 0);
                                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 41));
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, 41) > restock_amt) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 41);
                                            if ((obj_is_carrying_obj_pid(self_obj, 41) - restock_amt) < removed_qty) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 41) - restock_amt;
                                            end
                                            if (removed_qty > 0) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, 41);
                                                if (obj_type(self_obj) == 1) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 41);
                                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                            restock_obj := critter_inven_obj(self_obj, 0);
                                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                                            rm_obj_from_inven(self_obj, restock_obj);
                                                            add_obj_to_inven(self_obj, restock_obj);
                                                        end
                                                    end
                                                    else begin
                                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                            inven_unwield(self_obj);
                                                        end
                                                    end
                                                end
                                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                destroy_object(restock_obj);
                                            end
                                            restock_obj := 0;
                                            restock_amt := 0;
                                        end
                                        else begin
                                            restock_obj := 0;
                                        end
                                    end
                                end
                            end
                            else begin
                                if (town_level == 4) then begin
                                    restock_amt := random(500, 1500);
                                    if (obj_is_carrying_obj_pid(self_obj, 41) < restock_amt) then begin
                                        if (100 >= random(1, 100)) then begin
                                            if (obj_is_carrying_obj_pid(self_obj, 41) < restock_amt) then begin
                                                restock_obj := create_object(41, 0, 0);
                                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 41));
                                            end
                                            else begin
                                                if (obj_is_carrying_obj_pid(self_obj, 41) > restock_amt) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 41);
                                                    if ((obj_is_carrying_obj_pid(self_obj, 41) - restock_amt) < removed_qty) then begin
                                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 41) - restock_amt;
                                                    end
                                                    if (removed_qty > 0) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 41);
                                                        if (obj_type(self_obj) == 1) then begin
                                                            restock_obj := obj_carrying_pid_obj(self_obj, 41);
                                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                                    add_obj_to_inven(self_obj, restock_obj);
                                                                end
                                                            end
                                                            else begin
                                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                    inven_unwield(self_obj);
                                                                end
                                                            end
                                                        end
                                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                        destroy_object(restock_obj);
                                                    end
                                                    restock_obj := 0;
                                                    restock_amt := 0;
                                                end
                                                else begin
                                                    restock_obj := 0;
                                                end
                                            end
                                        end
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, 41) < restock_amt) then begin
                                            restock_obj := create_object(41, 0, 0);
                                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 41));
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, 41) > restock_amt) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 41);
                                                if ((obj_is_carrying_obj_pid(self_obj, 41) - restock_amt) < removed_qty) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 41) - restock_amt;
                                                end
                                                if (removed_qty > 0) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, 41);
                                                    if (obj_type(self_obj) == 1) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 41);
                                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                rm_obj_from_inven(self_obj, restock_obj);
                                                                add_obj_to_inven(self_obj, restock_obj);
                                                            end
                                                        end
                                                        else begin
                                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                inven_unwield(self_obj);
                                                            end
                                                        end
                                                    end
                                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                    destroy_object(restock_obj);
                                                end
                                                restock_obj := 0;
                                                restock_amt := 0;
                                            end
                                            else begin
                                                restock_obj := 0;
                                            end
                                        end
                                    end
                                end
                                else begin
                                    if (town_level == 5) then begin
                                        restock_amt := random(600, 1800);
                                        if (obj_is_carrying_obj_pid(self_obj, 41) < restock_amt) then begin
                                            if (100 >= random(1, 100)) then begin
                                                if (obj_is_carrying_obj_pid(self_obj, 41) < restock_amt) then begin
                                                    restock_obj := create_object(41, 0, 0);
                                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 41));
                                                end
                                                else begin
                                                    if (obj_is_carrying_obj_pid(self_obj, 41) > restock_amt) then begin
                                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 41);
                                                        if ((obj_is_carrying_obj_pid(self_obj, 41) - restock_amt) < removed_qty) then begin
                                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 41) - restock_amt;
                                                        end
                                                        if (removed_qty > 0) then begin
                                                            restock_obj := obj_carrying_pid_obj(self_obj, 41);
                                                            if (obj_type(self_obj) == 1) then begin
                                                                restock_obj := obj_carrying_pid_obj(self_obj, 41);
                                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                                        add_obj_to_inven(self_obj, restock_obj);
                                                                    end
                                                                end
                                                                else begin
                                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                        inven_unwield(self_obj);
                                                                    end
                                                                end
                                                            end
                                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                            destroy_object(restock_obj);
                                                        end
                                                        restock_obj := 0;
                                                        restock_amt := 0;
                                                    end
                                                    else begin
                                                        restock_obj := 0;
                                                    end
                                                end
                                            end
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, 41) < restock_amt) then begin
                                                restock_obj := create_object(41, 0, 0);
                                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 41));
                                            end
                                            else begin
                                                if (obj_is_carrying_obj_pid(self_obj, 41) > restock_amt) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 41);
                                                    if ((obj_is_carrying_obj_pid(self_obj, 41) - restock_amt) < removed_qty) then begin
                                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 41) - restock_amt;
                                                    end
                                                    if (removed_qty > 0) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, 41);
                                                        if (obj_type(self_obj) == 1) then begin
                                                            restock_obj := obj_carrying_pid_obj(self_obj, 41);
                                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                                    add_obj_to_inven(self_obj, restock_obj);
                                                                end
                                                            end
                                                            else begin
                                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                    inven_unwield(self_obj);
                                                                end
                                                            end
                                                        end
                                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                        destroy_object(restock_obj);
                                                    end
                                                    restock_obj := 0;
                                                    restock_amt := 0;
                                                end
                                                else begin
                                                    restock_obj := 0;
                                                end
                                            end
                                        end
                                    end
                                    else begin
                                        if (town_level == 6) then begin
                                            restock_amt := random(2500, 5000);
                                            if (obj_is_carrying_obj_pid(self_obj, 41) < restock_amt) then begin
                                                if (100 >= random(1, 100)) then begin
                                                    if (obj_is_carrying_obj_pid(self_obj, 41) < restock_amt) then begin
                                                        restock_obj := create_object(41, 0, 0);
                                                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 41));
                                                    end
                                                    else begin
                                                        if (obj_is_carrying_obj_pid(self_obj, 41) > restock_amt) then begin
                                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 41);
                                                            if ((obj_is_carrying_obj_pid(self_obj, 41) - restock_amt) < removed_qty) then begin
                                                                removed_qty := obj_is_carrying_obj_pid(self_obj, 41) - restock_amt;
                                                            end
                                                            if (removed_qty > 0) then begin
                                                                restock_obj := obj_carrying_pid_obj(self_obj, 41);
                                                                if (obj_type(self_obj) == 1) then begin
                                                                    restock_obj := obj_carrying_pid_obj(self_obj, 41);
                                                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                            restock_obj := critter_inven_obj(self_obj, 0);
                                                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                            rm_obj_from_inven(self_obj, restock_obj);
                                                                            add_obj_to_inven(self_obj, restock_obj);
                                                                        end
                                                                    end
                                                                    else begin
                                                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                            inven_unwield(self_obj);
                                                                        end
                                                                    end
                                                                end
                                                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                                destroy_object(restock_obj);
                                                            end
                                                            restock_obj := 0;
                                                            restock_amt := 0;
                                                        end
                                                        else begin
                                                            restock_obj := 0;
                                                        end
                                                    end
                                                end
                                            end
                                            else begin
                                                if (obj_is_carrying_obj_pid(self_obj, 41) < restock_amt) then begin
                                                    restock_obj := create_object(41, 0, 0);
                                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 41));
                                                end
                                                else begin
                                                    if (obj_is_carrying_obj_pid(self_obj, 41) > restock_amt) then begin
                                                        removed_qty := obj_is_carrying_obj_pid(self_obj, 41);
                                                        if ((obj_is_carrying_obj_pid(self_obj, 41) - restock_amt) < removed_qty) then begin
                                                            removed_qty := obj_is_carrying_obj_pid(self_obj, 41) - restock_amt;
                                                        end
                                                        if (removed_qty > 0) then begin
                                                            restock_obj := obj_carrying_pid_obj(self_obj, 41);
                                                            if (obj_type(self_obj) == 1) then begin
                                                                restock_obj := obj_carrying_pid_obj(self_obj, 41);
                                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                                        add_obj_to_inven(self_obj, restock_obj);
                                                                    end
                                                                end
                                                                else begin
                                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                        inven_unwield(self_obj);
                                                                    end
                                                                end
                                                            end
                                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                            destroy_object(restock_obj);
                                                        end
                                                        restock_obj := 0;
                                                        restock_amt := 0;
                                                    end
                                                    else begin
                                                        restock_obj := 0;
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                restock_amt := random(1, 3);
                if (obj_is_carrying_obj_pid(self_obj, 18) < restock_amt) then begin
                    if (100 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 18) < restock_amt) then begin
                            restock_obj := create_object(18, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 18));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 18) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 18);
                                if ((obj_is_carrying_obj_pid(self_obj, 18) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 18) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 18);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 18);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 18) < restock_amt) then begin
                        restock_obj := create_object(18, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 18));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 18) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 18);
                            if ((obj_is_carrying_obj_pid(self_obj, 18) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 18) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 18);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 18);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 3);
                if (obj_is_carrying_obj_pid(self_obj, 10) < restock_amt) then begin
                    if (100 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 10) < restock_amt) then begin
                            restock_obj := create_object(10, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 10));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 10) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 10);
                                if ((obj_is_carrying_obj_pid(self_obj, 10) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 10) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 10);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 10);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 10) < restock_amt) then begin
                        restock_obj := create_object(10, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 10));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 10) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 10);
                            if ((obj_is_carrying_obj_pid(self_obj, 10) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 10) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 10);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 10);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 3);
                if (obj_is_carrying_obj_pid(self_obj, 94) < restock_amt) then begin
                    if (100 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 94) < restock_amt) then begin
                            restock_obj := create_object(94, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 94));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 94) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 94);
                                if ((obj_is_carrying_obj_pid(self_obj, 94) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 94) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 94);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 94);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 94) < restock_amt) then begin
                        restock_obj := create_object(94, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 94));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 94) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 94);
                            if ((obj_is_carrying_obj_pid(self_obj, 94) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 94) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 94);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 94);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 1);
                if (obj_is_carrying_obj_pid(self_obj, 23) < restock_amt) then begin
                    if (50 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 23) < restock_amt) then begin
                            restock_obj := create_object(23, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 23));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 23) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 23);
                                if ((obj_is_carrying_obj_pid(self_obj, 23) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 23) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 23);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 23);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 23) < restock_amt) then begin
                        restock_obj := create_object(23, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 23));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 23) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 23);
                            if ((obj_is_carrying_obj_pid(self_obj, 23) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 23) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 23);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 23);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 1);
                if (obj_is_carrying_obj_pid(self_obj, 268) < restock_amt) then begin
                    if (50 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 268) < restock_amt) then begin
                            restock_obj := create_object(268, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 268));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 268) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 268);
                                if ((obj_is_carrying_obj_pid(self_obj, 268) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 268) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 268);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 268);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 268) < restock_amt) then begin
                        restock_obj := create_object(268, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 268));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 268) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 268);
                            if ((obj_is_carrying_obj_pid(self_obj, 268) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 268) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 268);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 268);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 1);
                if (obj_is_carrying_obj_pid(self_obj, 242) < restock_amt) then begin
                    if (50 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 242) < restock_amt) then begin
                            restock_obj := create_object(242, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 242));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 242) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 242);
                                if ((obj_is_carrying_obj_pid(self_obj, 242) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 242) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 242);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 242);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 242) < restock_amt) then begin
                        restock_obj := create_object(242, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 242));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 242) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 242);
                            if ((obj_is_carrying_obj_pid(self_obj, 242) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 242) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 242);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 242);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 1);
                if (obj_is_carrying_obj_pid(self_obj, 313) < restock_amt) then begin
                    if (40 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 313) < restock_amt) then begin
                            restock_obj := create_object(313, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 313));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 313) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 313);
                                if ((obj_is_carrying_obj_pid(self_obj, 313) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 313) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 313);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 313);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 313) < restock_amt) then begin
                        restock_obj := create_object(313, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 313));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 313) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 313);
                            if ((obj_is_carrying_obj_pid(self_obj, 313) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 313) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 313);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 313);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(10, 20);
                if (obj_is_carrying_obj_pid(self_obj, 30) < restock_amt) then begin
                    if (100 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 30) < restock_amt) then begin
                            restock_obj := create_object(30, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 30));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 30) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 30);
                                if ((obj_is_carrying_obj_pid(self_obj, 30) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 30) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 30);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 30);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 30) < restock_amt) then begin
                        restock_obj := create_object(30, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 30));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 30) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 30);
                            if ((obj_is_carrying_obj_pid(self_obj, 30) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 30) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 30);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 30);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(5, 10);
                if (obj_is_carrying_obj_pid(self_obj, 36) < restock_amt) then begin
                    if (100 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 36) < restock_amt) then begin
                            restock_obj := create_object(36, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 36));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 36) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 36);
                                if ((obj_is_carrying_obj_pid(self_obj, 36) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 36) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 36);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 36);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 36) < restock_amt) then begin
                        restock_obj := create_object(36, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 36));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 36) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 36);
                            if ((obj_is_carrying_obj_pid(self_obj, 36) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 36) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 36);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 36);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 4);
                if (obj_is_carrying_obj_pid(self_obj, 127) < restock_amt) then begin
                    if (100 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 127) < restock_amt) then begin
                            restock_obj := create_object(127, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 127));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 127) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 127);
                                if ((obj_is_carrying_obj_pid(self_obj, 127) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 127) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 127);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 127);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 127) < restock_amt) then begin
                        restock_obj := create_object(127, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 127));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 127) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 127);
                            if ((obj_is_carrying_obj_pid(self_obj, 127) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 127) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 127);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 127);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 3);
                if (obj_is_carrying_obj_pid(self_obj, 20) < restock_amt) then begin
                    if (100 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 20) < restock_amt) then begin
                            restock_obj := create_object(20, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 20));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 20) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 20);
                                if ((obj_is_carrying_obj_pid(self_obj, 20) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 20) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 20);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 20);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 20) < restock_amt) then begin
                        restock_obj := create_object(20, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 20));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 20) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 20);
                            if ((obj_is_carrying_obj_pid(self_obj, 20) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 20) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 20);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 20);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(5, 7);
                if (obj_is_carrying_obj_pid(self_obj, 79) < restock_amt) then begin
                    if (100 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 79) < restock_amt) then begin
                            restock_obj := create_object(79, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 79));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 79) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 79);
                                if ((obj_is_carrying_obj_pid(self_obj, 79) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 79) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 79);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 79);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 79) < restock_amt) then begin
                        restock_obj := create_object(79, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 79));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 79) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 79);
                            if ((obj_is_carrying_obj_pid(self_obj, 79) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 79) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 79);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 79);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 1);
                if (obj_is_carrying_obj_pid(self_obj, 304) < restock_amt) then begin
                    if (10 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 304) < restock_amt) then begin
                            restock_obj := create_object(304, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 304));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 304) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 304);
                                if ((obj_is_carrying_obj_pid(self_obj, 304) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 304) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 304);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 304);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 304) < restock_amt) then begin
                        restock_obj := create_object(304, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 304));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 304) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 304);
                            if ((obj_is_carrying_obj_pid(self_obj, 304) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 304) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 304);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 304);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 2);
                if (obj_is_carrying_obj_pid(self_obj, 52) < restock_amt) then begin
                    if (50 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 52) < restock_amt) then begin
                            restock_obj := create_object(52, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 52));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 52) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 52);
                                if ((obj_is_carrying_obj_pid(self_obj, 52) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 52) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 52);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 52);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 52) < restock_amt) then begin
                        restock_obj := create_object(52, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 52));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 52) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 52);
                            if ((obj_is_carrying_obj_pid(self_obj, 52) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 52) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 52);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 52);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(3, 3);
                if (obj_is_carrying_obj_pid(self_obj, 39) < restock_amt) then begin
                    if (30 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 39) < restock_amt) then begin
                            restock_obj := create_object(39, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 39));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 39) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 39);
                                if ((obj_is_carrying_obj_pid(self_obj, 39) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 39) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 39);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 39);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 39) < restock_amt) then begin
                        restock_obj := create_object(39, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 39));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 39) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 39);
                            if ((obj_is_carrying_obj_pid(self_obj, 39) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 39) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 39);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 39);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 3);
                if (obj_is_carrying_obj_pid(self_obj, 380) < restock_amt) then begin
                    if (50 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 380) < restock_amt) then begin
                            restock_obj := create_object(380, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 380));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 380) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 380);
                                if ((obj_is_carrying_obj_pid(self_obj, 380) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 380) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 380);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 380);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 380) < restock_amt) then begin
                        restock_obj := create_object(380, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 380));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 380) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 380);
                            if ((obj_is_carrying_obj_pid(self_obj, 380) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 380) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 380);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 380);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(3, 6);
                if (obj_is_carrying_obj_pid(self_obj, 761) < restock_amt) then begin
                    if (40 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 761) < restock_amt) then begin
                            restock_obj := create_object(761, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 761));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 761) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 761);
                                if ((obj_is_carrying_obj_pid(self_obj, 761) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 761) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 761);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 761);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 761) < restock_amt) then begin
                        restock_obj := create_object(761, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 761));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 761) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 761);
                            if ((obj_is_carrying_obj_pid(self_obj, 761) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 761) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 761);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 761);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 2);
                if (obj_is_carrying_obj_pid(self_obj, 85) < restock_amt) then begin
                    if (40 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 85) < restock_amt) then begin
                            restock_obj := create_object(85, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 85));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 85) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 85);
                                if ((obj_is_carrying_obj_pid(self_obj, 85) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 85) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 85);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 85);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 85) < restock_amt) then begin
                        restock_obj := create_object(85, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 85));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 85) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 85);
                            if ((obj_is_carrying_obj_pid(self_obj, 85) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 85) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 85);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 85);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 2);
                if (obj_is_carrying_obj_pid(self_obj, 763) < restock_amt) then begin
                    if (40 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 763) < restock_amt) then begin
                            restock_obj := create_object(763, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 763));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 763) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 763);
                                if ((obj_is_carrying_obj_pid(self_obj, 763) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 763) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 763);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 763);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 763) < restock_amt) then begin
                        restock_obj := create_object(763, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 763));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 763) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 763);
                            if ((obj_is_carrying_obj_pid(self_obj, 763) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 763) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 763);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 763);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 2);
                if (obj_is_carrying_obj_pid(self_obj, 767) < restock_amt) then begin
                    if (40 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 767) < restock_amt) then begin
                            restock_obj := create_object(767, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 767));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 767) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 767);
                                if ((obj_is_carrying_obj_pid(self_obj, 767) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 767) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 767);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 767);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 767) < restock_amt) then begin
                        restock_obj := create_object(767, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 767));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 767) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 767);
                            if ((obj_is_carrying_obj_pid(self_obj, 767) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 767) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 767);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 767);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 2);
                if (obj_is_carrying_obj_pid(self_obj, 768) < restock_amt) then begin
                    if (40 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 768) < restock_amt) then begin
                            restock_obj := create_object(768, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 768));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 768) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 768);
                                if ((obj_is_carrying_obj_pid(self_obj, 768) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 768) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 768);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 768);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 768) < restock_amt) then begin
                        restock_obj := create_object(768, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 768));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 768) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 768);
                            if ((obj_is_carrying_obj_pid(self_obj, 768) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 768) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 768);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 768);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 2);
                if (obj_is_carrying_obj_pid(self_obj, 769) < restock_amt) then begin
                    if (40 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 769) < restock_amt) then begin
                            restock_obj := create_object(769, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 769));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 769) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 769);
                                if ((obj_is_carrying_obj_pid(self_obj, 769) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 769) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 769);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 769);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 769) < restock_amt) then begin
                        restock_obj := create_object(769, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 769));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 769) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 769);
                            if ((obj_is_carrying_obj_pid(self_obj, 769) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 769) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 769);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 769);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 2);
                if (obj_is_carrying_obj_pid(self_obj, 770) < restock_amt) then begin
                    if (40 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 770) < restock_amt) then begin
                            restock_obj := create_object(770, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 770));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 770) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 770);
                                if ((obj_is_carrying_obj_pid(self_obj, 770) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 770) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 770);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 770);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 770) < restock_amt) then begin
                        restock_obj := create_object(770, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 770));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 770) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 770);
                            if ((obj_is_carrying_obj_pid(self_obj, 770) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 770) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 770);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 770);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 2);
                if (obj_is_carrying_obj_pid(self_obj, 771) < restock_amt) then begin
                    if (25 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 771) < restock_amt) then begin
                            restock_obj := create_object(771, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 771));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 771) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 771);
                                if ((obj_is_carrying_obj_pid(self_obj, 771) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 771) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 771);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 771);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 771) < restock_amt) then begin
                        restock_obj := create_object(771, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 771));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 771) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 771);
                            if ((obj_is_carrying_obj_pid(self_obj, 771) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 771) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 771);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 771);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 2);
                if (obj_is_carrying_obj_pid(self_obj, 772) < restock_amt) then begin
                    if (30 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 772) < restock_amt) then begin
                            restock_obj := create_object(772, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 772));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 772) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 772);
                                if ((obj_is_carrying_obj_pid(self_obj, 772) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 772) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 772);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 772);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 772) < restock_amt) then begin
                        restock_obj := create_object(772, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 772));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 772) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 772);
                            if ((obj_is_carrying_obj_pid(self_obj, 772) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 772) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 772);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 772);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 2);
                if (obj_is_carrying_obj_pid(self_obj, 773) < restock_amt) then begin
                    if (30 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 773) < restock_amt) then begin
                            restock_obj := create_object(773, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 773));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 773) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 773);
                                if ((obj_is_carrying_obj_pid(self_obj, 773) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 773) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 773);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 773);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 773) < restock_amt) then begin
                        restock_obj := create_object(773, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 773));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 773) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 773);
                            if ((obj_is_carrying_obj_pid(self_obj, 773) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 773) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 773);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 773);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 2);
                if (obj_is_carrying_obj_pid(self_obj, 774) < restock_amt) then begin
                    if (25 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 774) < restock_amt) then begin
                            restock_obj := create_object(774, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 774));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 774) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 774);
                                if ((obj_is_carrying_obj_pid(self_obj, 774) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 774) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 774);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 774);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 774) < restock_amt) then begin
                        restock_obj := create_object(774, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 774));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 774) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 774);
                            if ((obj_is_carrying_obj_pid(self_obj, 774) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 774) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 774);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 774);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 2);
                if (obj_is_carrying_obj_pid(self_obj, 775) < restock_amt) then begin
                    if (25 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 775) < restock_amt) then begin
                            restock_obj := create_object(775, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 775));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 775) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 775);
                                if ((obj_is_carrying_obj_pid(self_obj, 775) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 775) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 775);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 775);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 775) < restock_amt) then begin
                        restock_obj := create_object(775, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 775));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 775) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 775);
                            if ((obj_is_carrying_obj_pid(self_obj, 775) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 775) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 775);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 775);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 2);
                if (obj_is_carrying_obj_pid(self_obj, 776) < restock_amt) then begin
                    if (30 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 776) < restock_amt) then begin
                            restock_obj := create_object(776, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 776));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 776) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 776);
                                if ((obj_is_carrying_obj_pid(self_obj, 776) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 776) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 776);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 776);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 776) < restock_amt) then begin
                        restock_obj := create_object(776, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 776));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 776) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 776);
                            if ((obj_is_carrying_obj_pid(self_obj, 776) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 776) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 776);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 776);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(6, 8);
                if (obj_is_carrying_obj_pid(self_obj, 777) < restock_amt) then begin
                    if (40 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 777) < restock_amt) then begin
                            restock_obj := create_object(777, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 777));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 777) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 777);
                                if ((obj_is_carrying_obj_pid(self_obj, 777) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 777) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 777);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 777);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 777) < restock_amt) then begin
                        restock_obj := create_object(777, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 777));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 777) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 777);
                            if ((obj_is_carrying_obj_pid(self_obj, 777) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 777) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 777);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 777);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 3);
                if (obj_is_carrying_obj_pid(self_obj, 98) < restock_amt) then begin
                    if (100 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 98) < restock_amt) then begin
                            restock_obj := create_object(98, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 98));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 98) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 98);
                                if ((obj_is_carrying_obj_pid(self_obj, 98) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 98) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 98);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 98);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 98) < restock_amt) then begin
                        restock_obj := create_object(98, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 98));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 98) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 98);
                            if ((obj_is_carrying_obj_pid(self_obj, 98) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 98) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 98);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 98);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                move_obj_inven_to_obj(LVar0, self_obj);
                destroy_object(LVar0);
            end
            if (tile_num(self_obj) == 17724) then begin
                LVar0 := create_object(128, 5, 0);
                if (obj_is_carrying_obj_pid(self_obj, 479) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 479);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 356) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 356);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 377) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 377);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 366) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 366);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 446) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 446);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 492) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 492);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 288) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 288);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 253) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 253);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 254) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 254);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 266) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 266);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 267) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 267);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 258) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 258);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 255) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 255);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 256) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 256);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 257) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 257);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 96) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 96);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 97) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 97);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 99) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 99);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 223) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 223);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 252) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 252);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 298) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 298);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 302) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 302);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 303) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 303);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 305) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 305);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 306) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 306);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 307) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 307);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 335) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 335);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 336) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 336);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 337) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 337);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 338) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 338);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 339) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 339);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 340) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 340);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 341) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 341);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 414) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 414);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 422) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 422);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 431) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 431);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 431) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 431);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 432) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 432);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 431) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 431);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 447) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 447);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 448) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 448);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 449) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 449);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 456) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 456);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 468) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 468);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 471) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 471);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 476) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 476);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 488) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 488);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                if (obj_is_carrying_obj_pid(self_obj, 495) > 0) then begin
                    LVar1 := obj_carrying_pid_obj(self_obj, 495);
                    rm_obj_from_inven(self_obj, LVar1);
                    add_obj_to_inven(LVar0, LVar1);
                end
                global_temp := create_object(128, 0, 0);
                move_obj_inven_to_obj(self_obj, global_temp);
                destroy_object(global_temp);
                if ((CUR_MAP_ARCAVES) or (CUR_MAP_ARVILLAG) or (CUR_MAP_ARCAVES5) or (CUR_MAP_ARBRIDGE)) then begin
                    current_town := "Arroyo";
                end
                if ((CUR_MAP_KLADWTWN) or (CUR_MAP_KLAMALL) or (CUR_MAP_KLARATCV) or (CUR_MAP_KLATRAP) or (CUR_MAP_KLAGRAZ) or (CUR_MAP_KLACANYN) or (CUR_MAP_KLACVENT)) then begin
                    current_town := "Klamath";
                end
                if (CUR_MAP_KLATOXCV) then begin
                    current_town := "Klamath Toxic Caves";
                end
                if (CUR_MAP_RNDMDDG) then begin
                    current_town := "Mad Dog Area";
                end
                if ((CUR_MAP_DENBUS1) or (CUR_MAP_DENBUS2) or (CUR_MAP_DENRES1)) then begin
                    current_town := "Den";
                end
                if ((CUR_MAP_PRIMIT) or (CUR_MAP_TRIBE02) or (CUR_MAP_SLVCAMP) or (CUR_MAP_TRIBE2)) then begin
                    current_town := "Primitive Tribes";
                end
                if (CUR_MAP_TRIBE01) then begin
                    current_town := "Primitive Tribe";
                end
                if (CUR_MAP_DNSLVRUN) then begin
                    current_town := "Den Slave Run";
                end
                if (CUR_MAP_JENFARM7) then begin
                    current_town := "Jennings Farm Area";
                end
                if (CUR_MAP_TRUCK) then begin
                    current_town := "Truck";
                end
                if (CUR_MAP_SCRAPT) then begin
                    current_town := "Scraptown";
                end
                if ((CUR_MAP_MODMAIN) or (CUR_MAP_MODINN) or (CUR_MAP_MODBRAH) or (CUR_MAP_MODGARD) or (CUR_MAP_MODSHIT) or (CUR_MAP_MODWELL)) then begin
                    current_town := "Modoc";
                end
                if (CUR_MAP_CRISIENT) then begin
                    current_town := "Vault 23";
                end
                if ((CUR_MAP_GSTFARM) or (CUR_MAP_GSTCAV1) or (CUR_MAP_GSTCAV2)) then begin
                    current_town := "Ghost Farm";
                end
                if (CUR_MAP_MODOCT) then begin
                    current_town := "Modoc Thieves Guild";
                end
                if (CUR_MAP_MODOCT2) then begin
                    current_town := "Salvatore's Gun Stash";
                end
                if (CUR_MAP_MODOCT3) then begin
                    current_town := "Special Salvatore";
                end
                if (CUR_MAP_MODOCT4) then begin
                    current_town := "Salvatore Meeting";
                end
                if ((CUR_MAP_GECKSETL) or (CUR_MAP_GECKPWPL) or (CUR_MAP_GECKJUNK) or (CUR_MAP_GECKTUNL)) then begin
                    current_town := "Gecko";
                end
                if ((CUR_MAP_VCTYCTYD) or (CUR_MAP_VCTYDWTN) or (CUR_MAP_VCTYCOCL) or (CUR_MAP_VCTYVLT)) then begin
                    current_town := "Vault City";
                end
                if ((CUR_MAP_RAIDERS1) or (CUR_MAP_RAIDERS2)) then begin
                    current_town := "Raiders";
                end
                if ((CUR_MAP_BROKEN1) or (CUR_MAP_BROKEN2)) then begin
                    current_town := "Broken Hills";
                end
                if ((CUR_MAP_REDDOWN) or (CUR_MAP_REDWAME) or (CUR_MAP_REDWAN1) or (CUR_MAP_REDMENT) or (CUR_MAP_REDDTUN) or (CUR_MAP_REDMTUN)) then begin
                    current_town := "Redding";
                end
                if ((CUR_MAP_NEWR1) or (CUR_MAP_NEWR2) or (CUR_MAP_NEWR3) or (CUR_MAP_NEWR4) or (CUR_MAP_NEWRCS) or (CUR_MAP_NEWRBA) or (CUR_MAP_NEWRVB)) then begin
                    current_town := "New Reno";
                end
                if ((CUR_MAP_LARS1) or (CUR_MAP_LARS3) or (CUR_MAP_LARSSCRP) or (CUR_MAP_LARS2)) then begin
                    current_town := "Lars-City";
                end
                if (CUR_MAP_CRSNMAIN) then begin
                    current_town := "Lars-City Carson";
                end
                if (CUR_MAP_ABBEY) then begin
                    current_town := "Abbey";
                end
                if ((CUR_MAP_EPAMAIN) or (CUR_MAP_EPAWRHSE)) then begin
                    current_town := "EPA";
                end
                if ((CUR_MAP_COLLY) or (CUR_MAP_COLLY1)) then begin
                    current_town := "Collyweb";
                end
                if (CUR_MAP_NEWRGO) then begin
                    current_town := "Golgotha";
                end
                if (CUR_MAP_NEWRST) then begin
                    current_town := "Reno Stables";
                end
                if ((CUR_MAP_DEPOLV1) or (CUR_MAP_DEPOLVA) or (CUR_MAP_DEPOLVB)) then begin
                    current_town := "Sierra Army Base";
                end
                if ((CUR_MAP_NCRENT) or (CUR_MAP_NCR2) or (CUR_MAP_NCR1) or (CUR_MAP_NCR3) or (CUR_MAP_NCR4)) then begin
                    current_town := "NCR";
                end
                if (CUR_MAP_B21) then begin
                    current_town := "B21";
                end
                if ((CUR_MAP_V15ENT) or (CUR_MAP_V15ENTB) or (CUR_MAP_VAULT15) or (CUR_MAP_V15SENT)) then begin
                    current_town := "Vault 15";
                end
                if ((CUR_MAP_VAULT13) or (CUR_MAP_V13ENT)) then begin
                    current_town := "Vault 13";
                end
                if ((CUR_MAP_MBASE12) or (CUR_MAP_MBASE34) or (CUR_MAP_MBCLOSE)) then begin
                    current_town := "Military Base";
                end
                if ((CUR_MAP_SFCHINA) or (CUR_MAP_SFDOCK) or (CUR_MAP_SFTANKER) or (CUR_MAP_SFSHUTL1) or (CUR_MAP_SFSHUTL2) or (CUR_MAP_SFELRONB) or (CUR_MAP_SFCHINA2)) then begin
                    current_town := "San Francisco";
                end
                if ((CUR_MAP_BROHDENT1) or (CUR_MAP_BROHD121) or (CUR_MAP_BROHD341) or (CUR_MAP_BROHD1K)) then begin
                    current_town := "Brohdent";
                end
                if ((CUR_MAP_V14ENT) or (CUR_MAP_VAULT14) or (CUR_MAP_VAULT14B)) then begin
                    current_town := "Vault 14";
                end
                if (CUR_MAP_NAVARRO) then begin
                    current_town := "Navarro";
                end
                if ((CUR_MAP_ENCDOCK) or (CUR_MAP_ENCDET) or (CUR_MAP_ENCFITE) or (CUR_MAP_ENCGD) or (CUR_MAP_ENCPRES) or (CUR_MAP_ENCRCTR) or (CUR_MAP_ENCTRP) or (CUR_MAP_ENCVERT) or (CUR_MAP_ENCFT2)) then begin
                    current_town := "Enclave";
                end
                if ((CUR_MAP_BROHDENT) or (CUR_MAP_CITYCH3) or (CUR_MAP_BROHD34)) then begin
                    current_town := "BoS Bunker";
                end
                if (CUR_MAP_BRHDHLP) then begin
                    current_town := "BoS Help";
                end
                if ((CUR_MAP_EPAENT) or (CUR_MAP_EPAX)) then begin
                    current_town := "BOS Facility";
                end
                if (CUR_MAP_RNDWHALE) then begin
                    current_town := "Special Whale";
                end
                if (CUR_MAP_RNDTINWD) then begin
                    current_town := "Special Woodsman";
                end
                if (CUR_MAP_RNDBHEAD) then begin
                    current_town := "Special Head";
                end
                if (CUR_MAP_RNDSHUTL) then begin
                    current_town := "Special Shuttle";
                end
                if (CUR_MAP_RNDUVILG) then begin
                    current_town := "Special Unwashed";
                end
                if (CUR_MAP_RNDBRIDG) then begin
                    current_town := "Special Bridge";
                end
                if (CUR_MAP_RNDCAFE) then begin
                    current_town := "Special Cafe";
                end
                if (CUR_MAP_RNDHOLY1) then begin
                    current_town := "Special Holy 1";
                end
                if (CUR_MAP_RNDHOLY2) then begin
                    current_town := "Special Holy 2";
                end
                if (CUR_MAP_RNDFORVR) then begin
                    current_town := "Special Guardian";
                end
                if (CUR_MAP_RNDTOXIC) then begin
                    current_town := "Special Toxic";
                end
                if (CUR_MAP_RNDPARIH) then begin
                    current_town := "Special Pariah";
                end
                if (CUR_MAP_RNDEXCOW) then begin
                    current_town := "Special Brahmin";
                end
                if (CUR_MAP_RNDPOSTM) then begin
                    current_town := "Special Postman";
                end
                if (CUR_MAP_MODOCT3) then begin
                    current_town := "Special Salvator";
                end
                if (CUR_MAP_RNDMSTR) then begin
                    current_town := "Dead Soldiers of Master Army";
                end
                if ((CUR_MAP_BHRNDMNT) or (CUR_MAP_BHRNDDST)) then begin
                    current_town := "Caravan Encounters";
                end
                if (CUR_MAP_GAMMOVIE) then begin
                    current_town := "In Game Movie";
                end
                if (CUR_MAP_RNDBESS) then begin
                    current_town := "Bess Dead";
                end
                if ((CUR_MAP_RNDBD) or (CUR_MAP_RNDBD)) then begin
                    current_town := "DeathClaw Encounters";
                end
                if ((CUR_MAP_DESERT1) or (CUR_MAP_DESERT2) or (CUR_MAP_DESERT3) or (CUR_MAP_DESERT4) or (CUR_MAP_DESERT5) or (CUR_MAP_DESERT6) or (CUR_MAP_DESERT7) or (CUR_MAP_DESERT213) or (CUR_MAP_DESERT214) or (CUR_MAP_DESERT215) or (CUR_MAP_DESERT216) or (CUR_MAP_DESERT217)) then begin
                    current_town := "Random Encounter Desert";
                end
                if ((CUR_MAP_MOUNTN1) or (CUR_MAP_MOUNTN2) or (CUR_MAP_MOUNTN3) or (CUR_MAP_MOUNTN4) or (CUR_MAP_MOUNTN5) or (CUR_MAP_MOUNTN6)) then begin
                    current_town := "Random Encounter Mountain";
                end
                if ((CUR_MAP_CITY1) or (CUR_MAP_CITY2) or (CUR_MAP_CITY3) or (CUR_MAP_CITY4) or (CUR_MAP_CITY5) or (CUR_MAP_CITY6) or (CUR_MAP_CITY7) or (CUR_MAP_CITY8)) then begin
                    current_town := "Random Encounter City";
                end
                if ((CUR_MAP_COAST1) or (CUR_MAP_COAST2) or (CUR_MAP_COAST3) or (CUR_MAP_COAST4) or (CUR_MAP_COAST5) or (CUR_MAP_COAST6) or (CUR_MAP_COAST7) or (CUR_MAP_COAST8) or (CUR_MAP_COAST9) or (CUR_MAP_COAST10) or (CUR_MAP_COAST11) or (CUR_MAP_07DESERT)) then begin
                    current_town := "Random Encounter Coast";
                end
                if ((CUR_MAP_CAVE0) or (CUR_MAP_CAVE1) or (CUR_MAP_CAVE2) or (CUR_MAP_CAVE3) or (CUR_MAP_CAVE4) or (CUR_MAP_CAVE5) or (CUR_MAP_CAVE6) or (CUR_MAP_CAVE7)) then begin
                    current_town := "Random Encounter Cavern";
                end
                if ((current_town == "Arroyo") or (current_town == "Klamath") or (current_town == "Klamath Toxic Caves") or (current_town == "Mad Dog Area")) then begin
                    town_level := 1;
                end
                if ((current_town == "Den") or (current_town == "Den Slave Run") or (current_town == "Modoc") or (current_town == "Vault 23") or (current_town == "Jennings Farm Area") or (current_town == "Truck") or (current_town == "Scraptown") or (current_town == "Modoc Thieves Guild") or (current_town == "Salvatore's Gun Stash") or (current_town == "Special Salvatore") or (current_town == "Salvatore Meeting") or (current_town == "Collyweb") or (current_town == "Primitive Tribe") or (current_town == "Ghost Farm")) then begin
                    town_level := 2;
                end
                if ((current_town == "Gecko") or (current_town == "Vault City") or (current_town == "Raiders") or (current_town == "Special Whale") or (current_town == "Special Woodsman") or (current_town == "Special Head") or (current_town == "Special Shuttle") or (current_town == "Special Unwashed") or (current_town == "Special Bridge") or (current_town == "Special Cafe") or (current_town == "Special Holy 1") or (current_town == "Special Holy 2") or (current_town == "Special Guardian") or (current_town == "Special Toxic") or (current_town == "Special Pariah") or (current_town == "Special Brahmin") or (current_town == "Special Postman") or (current_town == "Special Salvator") or (current_town == "Dead Soldiers of Master Army") or (current_town == "Caravan Encounters") or (current_town == "DeathClaw Encounters") or (current_town == "Random Encounter Desert") or (current_town == "Random Encounter Mountain") or (current_town == "Random Encounter City") or (current_town == "Random Encounter Coast") or (current_town == "Random Encounter Cavern") or (current_town == "Bess Dead") or (current_town == "In Game Movie")) then begin
                    town_level := 3;
                end
                if ((current_town == "Broken Hills") or (current_town == "New Reno") or (current_town == "Salvatore's Gun Stash") or (current_town == "Special Salvatore") or (current_town == "Salvatore Meeting") or (current_town == "Golgotha") or (current_town == "Reno Stables") or (current_town == "Redding") or (current_town == "Abbey") or (current_town == "Lars-City Carson") or (current_town == "Lars-City") or (current_town == "EPA") or (current_town == "Sierra Army Base")) then begin
                    town_level := 4;
                end
                if ((current_town == "NCR") or (current_town == "Vault 15") or (current_town == "B21") or (current_town == "Vault 13")) then begin
                    town_level := 5;
                end
                if ((current_town == "Military Base") or (current_town == "Navarro") or (current_town == "San Francisco") or (current_town == "Vault 14") or (current_town == "Brohdent") or (current_town == "BOS Facility") or (current_town == "BoS Help") or (current_town == "BoS Bunker") or (current_town == "Enclave")) then begin
                    town_level := 6;
                end
                if (current_town == "") then begin
                    town_level := 4;
                end
                if (town_level == 1) then begin
                    random_book := random(0, 1);
                end
                else begin
                    if (town_level == 2) then begin
                        random_book := random(0, 2);
                    end
                    else begin
                        if (town_level == 3) then begin
                            random_book := random(0, 3);
                        end
                        else begin
                            if (town_level == 4) then begin
                                random_book := random(1, 3);
                            end
                            else begin
                                if (town_level == 5) then begin
                                    random_book := random(1, 4);
                                end
                                else begin
                                    if (town_level == 6) then begin
                                        random_book := random(3, 5);
                                    end
                                    else begin
                                        random_book := 0;
                                    end
                                end
                            end
                        end
                    end
                end
                if ((CUR_MAP_ARCAVES) or (CUR_MAP_ARVILLAG) or (CUR_MAP_ARCAVES5) or (CUR_MAP_ARBRIDGE)) then begin
                    current_town := "Arroyo";
                end
                if ((CUR_MAP_KLADWTWN) or (CUR_MAP_KLAMALL) or (CUR_MAP_KLARATCV) or (CUR_MAP_KLATRAP) or (CUR_MAP_KLAGRAZ) or (CUR_MAP_KLACANYN) or (CUR_MAP_KLACVENT)) then begin
                    current_town := "Klamath";
                end
                if (CUR_MAP_KLATOXCV) then begin
                    current_town := "Klamath Toxic Caves";
                end
                if (CUR_MAP_RNDMDDG) then begin
                    current_town := "Mad Dog Area";
                end
                if ((CUR_MAP_DENBUS1) or (CUR_MAP_DENBUS2) or (CUR_MAP_DENRES1)) then begin
                    current_town := "Den";
                end
                if ((CUR_MAP_PRIMIT) or (CUR_MAP_TRIBE02) or (CUR_MAP_SLVCAMP) or (CUR_MAP_TRIBE2)) then begin
                    current_town := "Primitive Tribes";
                end
                if (CUR_MAP_TRIBE01) then begin
                    current_town := "Primitive Tribe";
                end
                if (CUR_MAP_DNSLVRUN) then begin
                    current_town := "Den Slave Run";
                end
                if (CUR_MAP_JENFARM7) then begin
                    current_town := "Jennings Farm Area";
                end
                if (CUR_MAP_TRUCK) then begin
                    current_town := "Truck";
                end
                if (CUR_MAP_SCRAPT) then begin
                    current_town := "Scraptown";
                end
                if ((CUR_MAP_MODMAIN) or (CUR_MAP_MODINN) or (CUR_MAP_MODBRAH) or (CUR_MAP_MODGARD) or (CUR_MAP_MODSHIT) or (CUR_MAP_MODWELL)) then begin
                    current_town := "Modoc";
                end
                if (CUR_MAP_CRISIENT) then begin
                    current_town := "Vault 23";
                end
                if ((CUR_MAP_GSTFARM) or (CUR_MAP_GSTCAV1) or (CUR_MAP_GSTCAV2)) then begin
                    current_town := "Ghost Farm";
                end
                if (CUR_MAP_MODOCT) then begin
                    current_town := "Modoc Thieves Guild";
                end
                if (CUR_MAP_MODOCT2) then begin
                    current_town := "Salvatore's Gun Stash";
                end
                if (CUR_MAP_MODOCT3) then begin
                    current_town := "Special Salvatore";
                end
                if (CUR_MAP_MODOCT4) then begin
                    current_town := "Salvatore Meeting";
                end
                if ((CUR_MAP_GECKSETL) or (CUR_MAP_GECKPWPL) or (CUR_MAP_GECKJUNK) or (CUR_MAP_GECKTUNL)) then begin
                    current_town := "Gecko";
                end
                if ((CUR_MAP_VCTYCTYD) or (CUR_MAP_VCTYDWTN) or (CUR_MAP_VCTYCOCL) or (CUR_MAP_VCTYVLT)) then begin
                    current_town := "Vault City";
                end
                if ((CUR_MAP_RAIDERS1) or (CUR_MAP_RAIDERS2)) then begin
                    current_town := "Raiders";
                end
                if ((CUR_MAP_BROKEN1) or (CUR_MAP_BROKEN2)) then begin
                    current_town := "Broken Hills";
                end
                if ((CUR_MAP_REDDOWN) or (CUR_MAP_REDWAME) or (CUR_MAP_REDWAN1) or (CUR_MAP_REDMENT) or (CUR_MAP_REDDTUN) or (CUR_MAP_REDMTUN)) then begin
                    current_town := "Redding";
                end
                if ((CUR_MAP_NEWR1) or (CUR_MAP_NEWR2) or (CUR_MAP_NEWR3) or (CUR_MAP_NEWR4) or (CUR_MAP_NEWRCS) or (CUR_MAP_NEWRBA) or (CUR_MAP_NEWRVB)) then begin
                    current_town := "New Reno";
                end
                if ((CUR_MAP_LARS1) or (CUR_MAP_LARS3) or (CUR_MAP_LARSSCRP) or (CUR_MAP_LARS2)) then begin
                    current_town := "Lars-City";
                end
                if (CUR_MAP_CRSNMAIN) then begin
                    current_town := "Lars-City Carson";
                end
                if (CUR_MAP_ABBEY) then begin
                    current_town := "Abbey";
                end
                if ((CUR_MAP_EPAMAIN) or (CUR_MAP_EPAWRHSE)) then begin
                    current_town := "EPA";
                end
                if ((CUR_MAP_COLLY) or (CUR_MAP_COLLY1)) then begin
                    current_town := "Collyweb";
                end
                if (CUR_MAP_NEWRGO) then begin
                    current_town := "Golgotha";
                end
                if (CUR_MAP_NEWRST) then begin
                    current_town := "Reno Stables";
                end
                if ((CUR_MAP_DEPOLV1) or (CUR_MAP_DEPOLVA) or (CUR_MAP_DEPOLVB)) then begin
                    current_town := "Sierra Army Base";
                end
                if ((CUR_MAP_NCRENT) or (CUR_MAP_NCR2) or (CUR_MAP_NCR1) or (CUR_MAP_NCR3) or (CUR_MAP_NCR4)) then begin
                    current_town := "NCR";
                end
                if (CUR_MAP_B21) then begin
                    current_town := "B21";
                end
                if ((CUR_MAP_V15ENT) or (CUR_MAP_V15ENTB) or (CUR_MAP_VAULT15) or (CUR_MAP_V15SENT)) then begin
                    current_town := "Vault 15";
                end
                if ((CUR_MAP_VAULT13) or (CUR_MAP_V13ENT)) then begin
                    current_town := "Vault 13";
                end
                if ((CUR_MAP_MBASE12) or (CUR_MAP_MBASE34) or (CUR_MAP_MBCLOSE)) then begin
                    current_town := "Military Base";
                end
                if ((CUR_MAP_SFCHINA) or (CUR_MAP_SFDOCK) or (CUR_MAP_SFTANKER) or (CUR_MAP_SFSHUTL1) or (CUR_MAP_SFSHUTL2) or (CUR_MAP_SFELRONB) or (CUR_MAP_SFCHINA2)) then begin
                    current_town := "San Francisco";
                end
                if ((CUR_MAP_BROHDENT1) or (CUR_MAP_BROHD121) or (CUR_MAP_BROHD341) or (CUR_MAP_BROHD1K)) then begin
                    current_town := "Brohdent";
                end
                if ((CUR_MAP_V14ENT) or (CUR_MAP_VAULT14) or (CUR_MAP_VAULT14B)) then begin
                    current_town := "Vault 14";
                end
                if (CUR_MAP_NAVARRO) then begin
                    current_town := "Navarro";
                end
                if ((CUR_MAP_ENCDOCK) or (CUR_MAP_ENCDET) or (CUR_MAP_ENCFITE) or (CUR_MAP_ENCGD) or (CUR_MAP_ENCPRES) or (CUR_MAP_ENCRCTR) or (CUR_MAP_ENCTRP) or (CUR_MAP_ENCVERT) or (CUR_MAP_ENCFT2)) then begin
                    current_town := "Enclave";
                end
                if ((CUR_MAP_BROHDENT) or (CUR_MAP_CITYCH3) or (CUR_MAP_BROHD34)) then begin
                    current_town := "BoS Bunker";
                end
                if (CUR_MAP_BRHDHLP) then begin
                    current_town := "BoS Help";
                end
                if ((CUR_MAP_EPAENT) or (CUR_MAP_EPAX)) then begin
                    current_town := "BOS Facility";
                end
                if (CUR_MAP_RNDWHALE) then begin
                    current_town := "Special Whale";
                end
                if (CUR_MAP_RNDTINWD) then begin
                    current_town := "Special Woodsman";
                end
                if (CUR_MAP_RNDBHEAD) then begin
                    current_town := "Special Head";
                end
                if (CUR_MAP_RNDSHUTL) then begin
                    current_town := "Special Shuttle";
                end
                if (CUR_MAP_RNDUVILG) then begin
                    current_town := "Special Unwashed";
                end
                if (CUR_MAP_RNDBRIDG) then begin
                    current_town := "Special Bridge";
                end
                if (CUR_MAP_RNDCAFE) then begin
                    current_town := "Special Cafe";
                end
                if (CUR_MAP_RNDHOLY1) then begin
                    current_town := "Special Holy 1";
                end
                if (CUR_MAP_RNDHOLY2) then begin
                    current_town := "Special Holy 2";
                end
                if (CUR_MAP_RNDFORVR) then begin
                    current_town := "Special Guardian";
                end
                if (CUR_MAP_RNDTOXIC) then begin
                    current_town := "Special Toxic";
                end
                if (CUR_MAP_RNDPARIH) then begin
                    current_town := "Special Pariah";
                end
                if (CUR_MAP_RNDEXCOW) then begin
                    current_town := "Special Brahmin";
                end
                if (CUR_MAP_RNDPOSTM) then begin
                    current_town := "Special Postman";
                end
                if (CUR_MAP_MODOCT3) then begin
                    current_town := "Special Salvator";
                end
                if (CUR_MAP_RNDMSTR) then begin
                    current_town := "Dead Soldiers of Master Army";
                end
                if ((CUR_MAP_BHRNDMNT) or (CUR_MAP_BHRNDDST)) then begin
                    current_town := "Caravan Encounters";
                end
                if (CUR_MAP_GAMMOVIE) then begin
                    current_town := "In Game Movie";
                end
                if (CUR_MAP_RNDBESS) then begin
                    current_town := "Bess Dead";
                end
                if ((CUR_MAP_RNDBD) or (CUR_MAP_RNDBD)) then begin
                    current_town := "DeathClaw Encounters";
                end
                if ((CUR_MAP_DESERT1) or (CUR_MAP_DESERT2) or (CUR_MAP_DESERT3) or (CUR_MAP_DESERT4) or (CUR_MAP_DESERT5) or (CUR_MAP_DESERT6) or (CUR_MAP_DESERT7) or (CUR_MAP_DESERT213) or (CUR_MAP_DESERT214) or (CUR_MAP_DESERT215) or (CUR_MAP_DESERT216) or (CUR_MAP_DESERT217)) then begin
                    current_town := "Random Encounter Desert";
                end
                if ((CUR_MAP_MOUNTN1) or (CUR_MAP_MOUNTN2) or (CUR_MAP_MOUNTN3) or (CUR_MAP_MOUNTN4) or (CUR_MAP_MOUNTN5) or (CUR_MAP_MOUNTN6)) then begin
                    current_town := "Random Encounter Mountain";
                end
                if ((CUR_MAP_CITY1) or (CUR_MAP_CITY2) or (CUR_MAP_CITY3) or (CUR_MAP_CITY4) or (CUR_MAP_CITY5) or (CUR_MAP_CITY6) or (CUR_MAP_CITY7) or (CUR_MAP_CITY8)) then begin
                    current_town := "Random Encounter City";
                end
                if ((CUR_MAP_COAST1) or (CUR_MAP_COAST2) or (CUR_MAP_COAST3) or (CUR_MAP_COAST4) or (CUR_MAP_COAST5) or (CUR_MAP_COAST6) or (CUR_MAP_COAST7) or (CUR_MAP_COAST8) or (CUR_MAP_COAST9) or (CUR_MAP_COAST10) or (CUR_MAP_COAST11) or (CUR_MAP_07DESERT)) then begin
                    current_town := "Random Encounter Coast";
                end
                if ((CUR_MAP_CAVE0) or (CUR_MAP_CAVE1) or (CUR_MAP_CAVE2) or (CUR_MAP_CAVE3) or (CUR_MAP_CAVE4) or (CUR_MAP_CAVE5) or (CUR_MAP_CAVE6) or (CUR_MAP_CAVE7)) then begin
                    current_town := "Random Encounter Cavern";
                end
                if ((current_town == "Arroyo") or (current_town == "Klamath") or (current_town == "Klamath Toxic Caves") or (current_town == "Mad Dog Area")) then begin
                    town_level := 1;
                end
                if ((current_town == "Den") or (current_town == "Den Slave Run") or (current_town == "Modoc") or (current_town == "Vault 23") or (current_town == "Jennings Farm Area") or (current_town == "Truck") or (current_town == "Scraptown") or (current_town == "Modoc Thieves Guild") or (current_town == "Salvatore's Gun Stash") or (current_town == "Special Salvatore") or (current_town == "Salvatore Meeting") or (current_town == "Collyweb") or (current_town == "Primitive Tribe") or (current_town == "Ghost Farm")) then begin
                    town_level := 2;
                end
                if ((current_town == "Gecko") or (current_town == "Vault City") or (current_town == "Raiders") or (current_town == "Special Whale") or (current_town == "Special Woodsman") or (current_town == "Special Head") or (current_town == "Special Shuttle") or (current_town == "Special Unwashed") or (current_town == "Special Bridge") or (current_town == "Special Cafe") or (current_town == "Special Holy 1") or (current_town == "Special Holy 2") or (current_town == "Special Guardian") or (current_town == "Special Toxic") or (current_town == "Special Pariah") or (current_town == "Special Brahmin") or (current_town == "Special Postman") or (current_town == "Special Salvator") or (current_town == "Dead Soldiers of Master Army") or (current_town == "Caravan Encounters") or (current_town == "DeathClaw Encounters") or (current_town == "Random Encounter Desert") or (current_town == "Random Encounter Mountain") or (current_town == "Random Encounter City") or (current_town == "Random Encounter Coast") or (current_town == "Random Encounter Cavern") or (current_town == "Bess Dead") or (current_town == "In Game Movie")) then begin
                    town_level := 3;
                end
                if ((current_town == "Broken Hills") or (current_town == "New Reno") or (current_town == "Salvatore's Gun Stash") or (current_town == "Special Salvatore") or (current_town == "Salvatore Meeting") or (current_town == "Golgotha") or (current_town == "Reno Stables") or (current_town == "Redding") or (current_town == "Abbey") or (current_town == "Lars-City Carson") or (current_town == "Lars-City") or (current_town == "EPA") or (current_town == "Sierra Army Base")) then begin
                    town_level := 4;
                end
                if ((current_town == "NCR") or (current_town == "Vault 15") or (current_town == "B21") or (current_town == "Vault 13")) then begin
                    town_level := 5;
                end
                if ((current_town == "Military Base") or (current_town == "Navarro") or (current_town == "San Francisco") or (current_town == "Vault 14") or (current_town == "Brohdent") or (current_town == "BOS Facility") or (current_town == "BoS Help") or (current_town == "BoS Bunker") or (current_town == "Enclave")) then begin
                    town_level := 6;
                end
                if (current_town == "") then begin
                    town_level := 4;
                end
                if (town_level == 1) then begin
                    min := 0;
                    max := 1;
                end
                else begin
                    if (town_level == 2) then begin
                        min := 0;
                        max := 1;
                    end
                    else begin
                        if (town_level == 3) then begin
                            min := 1;
                            max := 1;
                        end
                        else begin
                            if (town_level == 4) then begin
                                min := 1;
                                max := 1;
                            end
                            else begin
                                if (town_level == 5) then begin
                                    min := 1;
                                    max := 2;
                                end
                                else begin
                                    if (town_level == 6) then begin
                                        min := 2;
                                        max := 3;
                                    end
                                end
                            end
                        end
                    end
                end
                if ((CUR_MAP_ARCAVES) or (CUR_MAP_ARVILLAG) or (CUR_MAP_ARCAVES5) or (CUR_MAP_ARBRIDGE)) then begin
                    current_town := "Arroyo";
                end
                if ((CUR_MAP_KLADWTWN) or (CUR_MAP_KLAMALL) or (CUR_MAP_KLARATCV) or (CUR_MAP_KLATRAP) or (CUR_MAP_KLAGRAZ) or (CUR_MAP_KLACANYN) or (CUR_MAP_KLACVENT)) then begin
                    current_town := "Klamath";
                end
                if (CUR_MAP_KLATOXCV) then begin
                    current_town := "Klamath Toxic Caves";
                end
                if (CUR_MAP_RNDMDDG) then begin
                    current_town := "Mad Dog Area";
                end
                if ((CUR_MAP_DENBUS1) or (CUR_MAP_DENBUS2) or (CUR_MAP_DENRES1)) then begin
                    current_town := "Den";
                end
                if ((CUR_MAP_PRIMIT) or (CUR_MAP_TRIBE02) or (CUR_MAP_SLVCAMP) or (CUR_MAP_TRIBE2)) then begin
                    current_town := "Primitive Tribes";
                end
                if (CUR_MAP_TRIBE01) then begin
                    current_town := "Primitive Tribe";
                end
                if (CUR_MAP_DNSLVRUN) then begin
                    current_town := "Den Slave Run";
                end
                if (CUR_MAP_JENFARM7) then begin
                    current_town := "Jennings Farm Area";
                end
                if (CUR_MAP_TRUCK) then begin
                    current_town := "Truck";
                end
                if (CUR_MAP_SCRAPT) then begin
                    current_town := "Scraptown";
                end
                if ((CUR_MAP_MODMAIN) or (CUR_MAP_MODINN) or (CUR_MAP_MODBRAH) or (CUR_MAP_MODGARD) or (CUR_MAP_MODSHIT) or (CUR_MAP_MODWELL)) then begin
                    current_town := "Modoc";
                end
                if (CUR_MAP_CRISIENT) then begin
                    current_town := "Vault 23";
                end
                if ((CUR_MAP_GSTFARM) or (CUR_MAP_GSTCAV1) or (CUR_MAP_GSTCAV2)) then begin
                    current_town := "Ghost Farm";
                end
                if (CUR_MAP_MODOCT) then begin
                    current_town := "Modoc Thieves Guild";
                end
                if (CUR_MAP_MODOCT2) then begin
                    current_town := "Salvatore's Gun Stash";
                end
                if (CUR_MAP_MODOCT3) then begin
                    current_town := "Special Salvatore";
                end
                if (CUR_MAP_MODOCT4) then begin
                    current_town := "Salvatore Meeting";
                end
                if ((CUR_MAP_GECKSETL) or (CUR_MAP_GECKPWPL) or (CUR_MAP_GECKJUNK) or (CUR_MAP_GECKTUNL)) then begin
                    current_town := "Gecko";
                end
                if ((CUR_MAP_VCTYCTYD) or (CUR_MAP_VCTYDWTN) or (CUR_MAP_VCTYCOCL) or (CUR_MAP_VCTYVLT)) then begin
                    current_town := "Vault City";
                end
                if ((CUR_MAP_RAIDERS1) or (CUR_MAP_RAIDERS2)) then begin
                    current_town := "Raiders";
                end
                if ((CUR_MAP_BROKEN1) or (CUR_MAP_BROKEN2)) then begin
                    current_town := "Broken Hills";
                end
                if ((CUR_MAP_REDDOWN) or (CUR_MAP_REDWAME) or (CUR_MAP_REDWAN1) or (CUR_MAP_REDMENT) or (CUR_MAP_REDDTUN) or (CUR_MAP_REDMTUN)) then begin
                    current_town := "Redding";
                end
                if ((CUR_MAP_NEWR1) or (CUR_MAP_NEWR2) or (CUR_MAP_NEWR3) or (CUR_MAP_NEWR4) or (CUR_MAP_NEWRCS) or (CUR_MAP_NEWRBA) or (CUR_MAP_NEWRVB)) then begin
                    current_town := "New Reno";
                end
                if ((CUR_MAP_LARS1) or (CUR_MAP_LARS3) or (CUR_MAP_LARSSCRP) or (CUR_MAP_LARS2)) then begin
                    current_town := "Lars-City";
                end
                if (CUR_MAP_CRSNMAIN) then begin
                    current_town := "Lars-City Carson";
                end
                if (CUR_MAP_ABBEY) then begin
                    current_town := "Abbey";
                end
                if ((CUR_MAP_EPAMAIN) or (CUR_MAP_EPAWRHSE)) then begin
                    current_town := "EPA";
                end
                if ((CUR_MAP_COLLY) or (CUR_MAP_COLLY1)) then begin
                    current_town := "Collyweb";
                end
                if (CUR_MAP_NEWRGO) then begin
                    current_town := "Golgotha";
                end
                if (CUR_MAP_NEWRST) then begin
                    current_town := "Reno Stables";
                end
                if ((CUR_MAP_DEPOLV1) or (CUR_MAP_DEPOLVA) or (CUR_MAP_DEPOLVB)) then begin
                    current_town := "Sierra Army Base";
                end
                if ((CUR_MAP_NCRENT) or (CUR_MAP_NCR2) or (CUR_MAP_NCR1) or (CUR_MAP_NCR3) or (CUR_MAP_NCR4)) then begin
                    current_town := "NCR";
                end
                if (CUR_MAP_B21) then begin
                    current_town := "B21";
                end
                if ((CUR_MAP_V15ENT) or (CUR_MAP_V15ENTB) or (CUR_MAP_VAULT15) or (CUR_MAP_V15SENT)) then begin
                    current_town := "Vault 15";
                end
                if ((CUR_MAP_VAULT13) or (CUR_MAP_V13ENT)) then begin
                    current_town := "Vault 13";
                end
                if ((CUR_MAP_MBASE12) or (CUR_MAP_MBASE34) or (CUR_MAP_MBCLOSE)) then begin
                    current_town := "Military Base";
                end
                if ((CUR_MAP_SFCHINA) or (CUR_MAP_SFDOCK) or (CUR_MAP_SFTANKER) or (CUR_MAP_SFSHUTL1) or (CUR_MAP_SFSHUTL2) or (CUR_MAP_SFELRONB) or (CUR_MAP_SFCHINA2)) then begin
                    current_town := "San Francisco";
                end
                if ((CUR_MAP_BROHDENT1) or (CUR_MAP_BROHD121) or (CUR_MAP_BROHD341) or (CUR_MAP_BROHD1K)) then begin
                    current_town := "Brohdent";
                end
                if ((CUR_MAP_V14ENT) or (CUR_MAP_VAULT14) or (CUR_MAP_VAULT14B)) then begin
                    current_town := "Vault 14";
                end
                if (CUR_MAP_NAVARRO) then begin
                    current_town := "Navarro";
                end
                if ((CUR_MAP_ENCDOCK) or (CUR_MAP_ENCDET) or (CUR_MAP_ENCFITE) or (CUR_MAP_ENCGD) or (CUR_MAP_ENCPRES) or (CUR_MAP_ENCRCTR) or (CUR_MAP_ENCTRP) or (CUR_MAP_ENCVERT) or (CUR_MAP_ENCFT2)) then begin
                    current_town := "Enclave";
                end
                if ((CUR_MAP_BROHDENT) or (CUR_MAP_CITYCH3) or (CUR_MAP_BROHD34)) then begin
                    current_town := "BoS Bunker";
                end
                if (CUR_MAP_BRHDHLP) then begin
                    current_town := "BoS Help";
                end
                if ((CUR_MAP_EPAENT) or (CUR_MAP_EPAX)) then begin
                    current_town := "BOS Facility";
                end
                if (CUR_MAP_RNDWHALE) then begin
                    current_town := "Special Whale";
                end
                if (CUR_MAP_RNDTINWD) then begin
                    current_town := "Special Woodsman";
                end
                if (CUR_MAP_RNDBHEAD) then begin
                    current_town := "Special Head";
                end
                if (CUR_MAP_RNDSHUTL) then begin
                    current_town := "Special Shuttle";
                end
                if (CUR_MAP_RNDUVILG) then begin
                    current_town := "Special Unwashed";
                end
                if (CUR_MAP_RNDBRIDG) then begin
                    current_town := "Special Bridge";
                end
                if (CUR_MAP_RNDCAFE) then begin
                    current_town := "Special Cafe";
                end
                if (CUR_MAP_RNDHOLY1) then begin
                    current_town := "Special Holy 1";
                end
                if (CUR_MAP_RNDHOLY2) then begin
                    current_town := "Special Holy 2";
                end
                if (CUR_MAP_RNDFORVR) then begin
                    current_town := "Special Guardian";
                end
                if (CUR_MAP_RNDTOXIC) then begin
                    current_town := "Special Toxic";
                end
                if (CUR_MAP_RNDPARIH) then begin
                    current_town := "Special Pariah";
                end
                if (CUR_MAP_RNDEXCOW) then begin
                    current_town := "Special Brahmin";
                end
                if (CUR_MAP_RNDPOSTM) then begin
                    current_town := "Special Postman";
                end
                if (CUR_MAP_MODOCT3) then begin
                    current_town := "Special Salvator";
                end
                if (CUR_MAP_RNDMSTR) then begin
                    current_town := "Dead Soldiers of Master Army";
                end
                if ((CUR_MAP_BHRNDMNT) or (CUR_MAP_BHRNDDST)) then begin
                    current_town := "Caravan Encounters";
                end
                if (CUR_MAP_GAMMOVIE) then begin
                    current_town := "In Game Movie";
                end
                if (CUR_MAP_RNDBESS) then begin
                    current_town := "Bess Dead";
                end
                if ((CUR_MAP_RNDBD) or (CUR_MAP_RNDBD)) then begin
                    current_town := "DeathClaw Encounters";
                end
                if ((CUR_MAP_DESERT1) or (CUR_MAP_DESERT2) or (CUR_MAP_DESERT3) or (CUR_MAP_DESERT4) or (CUR_MAP_DESERT5) or (CUR_MAP_DESERT6) or (CUR_MAP_DESERT7) or (CUR_MAP_DESERT213) or (CUR_MAP_DESERT214) or (CUR_MAP_DESERT215) or (CUR_MAP_DESERT216) or (CUR_MAP_DESERT217)) then begin
                    current_town := "Random Encounter Desert";
                end
                if ((CUR_MAP_MOUNTN1) or (CUR_MAP_MOUNTN2) or (CUR_MAP_MOUNTN3) or (CUR_MAP_MOUNTN4) or (CUR_MAP_MOUNTN5) or (CUR_MAP_MOUNTN6)) then begin
                    current_town := "Random Encounter Mountain";
                end
                if ((CUR_MAP_CITY1) or (CUR_MAP_CITY2) or (CUR_MAP_CITY3) or (CUR_MAP_CITY4) or (CUR_MAP_CITY5) or (CUR_MAP_CITY6) or (CUR_MAP_CITY7) or (CUR_MAP_CITY8)) then begin
                    current_town := "Random Encounter City";
                end
                if ((CUR_MAP_COAST1) or (CUR_MAP_COAST2) or (CUR_MAP_COAST3) or (CUR_MAP_COAST4) or (CUR_MAP_COAST5) or (CUR_MAP_COAST6) or (CUR_MAP_COAST7) or (CUR_MAP_COAST8) or (CUR_MAP_COAST9) or (CUR_MAP_COAST10) or (CUR_MAP_COAST11) or (CUR_MAP_07DESERT)) then begin
                    current_town := "Random Encounter Coast";
                end
                if ((CUR_MAP_CAVE0) or (CUR_MAP_CAVE1) or (CUR_MAP_CAVE2) or (CUR_MAP_CAVE3) or (CUR_MAP_CAVE4) or (CUR_MAP_CAVE5) or (CUR_MAP_CAVE6) or (CUR_MAP_CAVE7)) then begin
                    current_town := "Random Encounter Cavern";
                end
                if ((current_town == "Arroyo") or (current_town == "Klamath") or (current_town == "Klamath Toxic Caves") or (current_town == "Mad Dog Area")) then begin
                    town_level := 1;
                end
                if ((current_town == "Den") or (current_town == "Den Slave Run") or (current_town == "Modoc") or (current_town == "Vault 23") or (current_town == "Jennings Farm Area") or (current_town == "Truck") or (current_town == "Scraptown") or (current_town == "Modoc Thieves Guild") or (current_town == "Salvatore's Gun Stash") or (current_town == "Special Salvatore") or (current_town == "Salvatore Meeting") or (current_town == "Collyweb") or (current_town == "Primitive Tribe") or (current_town == "Ghost Farm")) then begin
                    town_level := 2;
                end
                if ((current_town == "Gecko") or (current_town == "Vault City") or (current_town == "Raiders") or (current_town == "Special Whale") or (current_town == "Special Woodsman") or (current_town == "Special Head") or (current_town == "Special Shuttle") or (current_town == "Special Unwashed") or (current_town == "Special Bridge") or (current_town == "Special Cafe") or (current_town == "Special Holy 1") or (current_town == "Special Holy 2") or (current_town == "Special Guardian") or (current_town == "Special Toxic") or (current_town == "Special Pariah") or (current_town == "Special Brahmin") or (current_town == "Special Postman") or (current_town == "Special Salvator") or (current_town == "Dead Soldiers of Master Army") or (current_town == "Caravan Encounters") or (current_town == "DeathClaw Encounters") or (current_town == "Random Encounter Desert") or (current_town == "Random Encounter Mountain") or (current_town == "Random Encounter City") or (current_town == "Random Encounter Coast") or (current_town == "Random Encounter Cavern") or (current_town == "Bess Dead") or (current_town == "In Game Movie")) then begin
                    town_level := 3;
                end
                if ((current_town == "Broken Hills") or (current_town == "New Reno") or (current_town == "Salvatore's Gun Stash") or (current_town == "Special Salvatore") or (current_town == "Salvatore Meeting") or (current_town == "Golgotha") or (current_town == "Reno Stables") or (current_town == "Redding") or (current_town == "Abbey") or (current_town == "Lars-City Carson") or (current_town == "Lars-City") or (current_town == "EPA") or (current_town == "Sierra Army Base")) then begin
                    town_level := 4;
                end
                if ((current_town == "NCR") or (current_town == "Vault 15") or (current_town == "B21") or (current_town == "Vault 13")) then begin
                    town_level := 5;
                end
                if ((current_town == "Military Base") or (current_town == "Navarro") or (current_town == "San Francisco") or (current_town == "Vault 14") or (current_town == "Brohdent") or (current_town == "BOS Facility") or (current_town == "BoS Help") or (current_town == "BoS Bunker") or (current_town == "Enclave")) then begin
                    town_level := 6;
                end
                if (current_town == "") then begin
                    town_level := 4;
                end
                if (town_level == 1) then begin
                    percent := 10;
                end
                else begin
                    if (town_level == 2) then begin
                        percent := 20;
                    end
                    else begin
                        if (town_level == 3) then begin
                            percent := 30;
                        end
                        else begin
                            if (town_level == 4) then begin
                                percent := 40;
                            end
                            else begin
                                if (town_level == 5) then begin
                                    percent := 50;
                                end
                                else begin
                                    if (town_level == 6) then begin
                                        percent := 60;
                                    end
                                end
                            end
                        end
                    end
                end
                if (random_book == 5) then begin
                    random_books := random(1, 18);
                    if ((random_books == 18) and (book_eighteen == 0)) then begin
                        book_eighteen := 1;
                        case := 778;
                    end
                    else begin
                        if ((random_books == 17) and (book_seventeen == 0)) then begin
                            book_seventeen := 1;
                            case := 779;
                        end
                        else begin
                            if ((random_books == 16) and (book_sixteen == 0)) then begin
                                book_sixteen := 1;
                                case := 780;
                            end
                            else begin
                                if ((random_books == 15) and (book_fifteen == 0)) then begin
                                    book_fifteen := 1;
                                    case := 781;
                                end
                                else begin
                                    if ((random_books == 14) and (book_fourteen == 0)) then begin
                                        book_fourteen := 1;
                                        case := 782;
                                    end
                                    else begin
                                        if ((random_books == 13) and (book_thirteen == 0)) then begin
                                            book_thirteen := 1;
                                            case := 783;
                                        end
                                        else begin
                                            if ((random_books == 12) and (book_twelve == 0)) then begin
                                                book_twelve := 1;
                                                case := 784;
                                            end
                                            else begin
                                                if ((random_books == 11) and (book_eleven == 0)) then begin
                                                    book_eleven := 1;
                                                    case := 785;
                                                end
                                                else begin
                                                    if ((random_books == 10) and (book_ten == 0)) then begin
                                                        book_ten := 1;
                                                        case := 786;
                                                    end
                                                    else begin
                                                        if ((random_books == 9) and (book_nine == 0)) then begin
                                                            book_nine := 1;
                                                            case := 787;
                                                        end
                                                        else begin
                                                            if ((random_books == 8) and (book_eight == 0)) then begin
                                                                book_eight := 1;
                                                                case := 788;
                                                            end
                                                            else begin
                                                                if ((random_books == 7) and (book_seven == 0)) then begin
                                                                    book_seven := 1;
                                                                    case := 789;
                                                                end
                                                                else begin
                                                                    if ((random_books == 6) and (book_six == 0)) then begin
                                                                        book_six := 1;
                                                                        case := 790;
                                                                    end
                                                                    else begin
                                                                        if ((random_books == 5) and (book_five == 0)) then begin
                                                                            book_five := 1;
                                                                            case := 791;
                                                                        end
                                                                        else begin
                                                                            if ((random_books == 4) and (book_four == 0)) then begin
                                                                                book_four := 1;
                                                                                case := 792;
                                                                            end
                                                                            else begin
                                                                                if ((random_books == 3) and (book_three == 0)) then begin
                                                                                    book_three := 1;
                                                                                    case := 793;
                                                                                end
                                                                                else begin
                                                                                    if ((random_books == 2) and (book_two == 0)) then begin
                                                                                        book_two := 1;
                                                                                        case := 794;
                                                                                    end
                                                                                    else begin
                                                                                        if ((random_books == 1) and (book_one == 0)) then begin
                                                                                            book_one := 1;
                                                                                            case := 795;
                                                                                        end
                                                                                        else begin
                                                                                            case := -1;
                                                                                        end
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                    while (case == -1) do begin
                        random_books := random(1, 18);
                        if ((random_books == 18) and (book_eighteen == 0)) then begin
                            book_eighteen := 1;
                            case := 778;
                        end
                        else begin
                            if ((random_books == 17) and (book_seventeen == 0)) then begin
                                book_seventeen := 1;
                                case := 779;
                            end
                            else begin
                                if ((random_books == 16) and (book_sixteen == 0)) then begin
                                    book_sixteen := 1;
                                    case := 780;
                                end
                                else begin
                                    if ((random_books == 15) and (book_fifteen == 0)) then begin
                                        book_fifteen := 1;
                                        case := 781;
                                    end
                                    else begin
                                        if ((random_books == 14) and (book_fourteen == 0)) then begin
                                            book_fourteen := 1;
                                            case := 782;
                                        end
                                        else begin
                                            if ((random_books == 13) and (book_thirteen == 0)) then begin
                                                book_thirteen := 1;
                                                case := 783;
                                            end
                                            else begin
                                                if ((random_books == 12) and (book_twelve == 0)) then begin
                                                    book_twelve := 1;
                                                    case := 784;
                                                end
                                                else begin
                                                    if ((random_books == 11) and (book_eleven == 0)) then begin
                                                        book_eleven := 1;
                                                        case := 785;
                                                    end
                                                    else begin
                                                        if ((random_books == 10) and (book_ten == 0)) then begin
                                                            book_ten := 1;
                                                            case := 786;
                                                        end
                                                        else begin
                                                            if ((random_books == 9) and (book_nine == 0)) then begin
                                                                book_nine := 1;
                                                                case := 787;
                                                            end
                                                            else begin
                                                                if ((random_books == 8) and (book_eight == 0)) then begin
                                                                    book_eight := 1;
                                                                    case := 788;
                                                                end
                                                                else begin
                                                                    if ((random_books == 7) and (book_seven == 0)) then begin
                                                                        book_seven := 1;
                                                                        case := 789;
                                                                    end
                                                                    else begin
                                                                        if ((random_books == 6) and (book_six == 0)) then begin
                                                                            book_six := 1;
                                                                            case := 790;
                                                                        end
                                                                        else begin
                                                                            if ((random_books == 5) and (book_five == 0)) then begin
                                                                                book_five := 1;
                                                                                case := 791;
                                                                            end
                                                                            else begin
                                                                                if ((random_books == 4) and (book_four == 0)) then begin
                                                                                    book_four := 1;
                                                                                    case := 792;
                                                                                end
                                                                                else begin
                                                                                    if ((random_books == 3) and (book_three == 0)) then begin
                                                                                        book_three := 1;
                                                                                        case := 793;
                                                                                    end
                                                                                    else begin
                                                                                        if ((random_books == 2) and (book_two == 0)) then begin
                                                                                            book_two := 1;
                                                                                            case := 794;
                                                                                        end
                                                                                        else begin
                                                                                            if ((random_books == 1) and (book_one == 0)) then begin
                                                                                                book_one := 1;
                                                                                                case := 795;
                                                                                            end
                                                                                            else begin
                                                                                                case := -1;
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                    restock_amt := random(min, max);
                    if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                        if (percent >= random(1, 100)) then begin
                            if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                                restock_obj := create_object(case, 0, 0);
                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, case));
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, case) > restock_amt) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, case);
                                    if ((obj_is_carrying_obj_pid(self_obj, case) - restock_amt) < removed_qty) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, case) - restock_amt;
                                    end
                                    if (removed_qty > 0) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, case);
                                        if (obj_type(self_obj) == 1) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, case);
                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                    add_obj_to_inven(self_obj, restock_obj);
                                                end
                                            end
                                            else begin
                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                    inven_unwield(self_obj);
                                                end
                                            end
                                        end
                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                        destroy_object(restock_obj);
                                    end
                                    restock_obj := 0;
                                    restock_amt := 0;
                                end
                                else begin
                                    restock_obj := 0;
                                end
                            end
                        end
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                            restock_obj := create_object(case, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, case));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, case) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, case);
                                if ((obj_is_carrying_obj_pid(self_obj, case) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, case) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, case);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, case);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                    random_books := random(1, 18);
                    if ((random_books == 18) and (book_eighteen == 0)) then begin
                        book_eighteen := 1;
                        case := 778;
                    end
                    else begin
                        if ((random_books == 17) and (book_seventeen == 0)) then begin
                            book_seventeen := 1;
                            case := 779;
                        end
                        else begin
                            if ((random_books == 16) and (book_sixteen == 0)) then begin
                                book_sixteen := 1;
                                case := 780;
                            end
                            else begin
                                if ((random_books == 15) and (book_fifteen == 0)) then begin
                                    book_fifteen := 1;
                                    case := 781;
                                end
                                else begin
                                    if ((random_books == 14) and (book_fourteen == 0)) then begin
                                        book_fourteen := 1;
                                        case := 782;
                                    end
                                    else begin
                                        if ((random_books == 13) and (book_thirteen == 0)) then begin
                                            book_thirteen := 1;
                                            case := 783;
                                        end
                                        else begin
                                            if ((random_books == 12) and (book_twelve == 0)) then begin
                                                book_twelve := 1;
                                                case := 784;
                                            end
                                            else begin
                                                if ((random_books == 11) and (book_eleven == 0)) then begin
                                                    book_eleven := 1;
                                                    case := 785;
                                                end
                                                else begin
                                                    if ((random_books == 10) and (book_ten == 0)) then begin
                                                        book_ten := 1;
                                                        case := 786;
                                                    end
                                                    else begin
                                                        if ((random_books == 9) and (book_nine == 0)) then begin
                                                            book_nine := 1;
                                                            case := 787;
                                                        end
                                                        else begin
                                                            if ((random_books == 8) and (book_eight == 0)) then begin
                                                                book_eight := 1;
                                                                case := 788;
                                                            end
                                                            else begin
                                                                if ((random_books == 7) and (book_seven == 0)) then begin
                                                                    book_seven := 1;
                                                                    case := 789;
                                                                end
                                                                else begin
                                                                    if ((random_books == 6) and (book_six == 0)) then begin
                                                                        book_six := 1;
                                                                        case := 790;
                                                                    end
                                                                    else begin
                                                                        if ((random_books == 5) and (book_five == 0)) then begin
                                                                            book_five := 1;
                                                                            case := 791;
                                                                        end
                                                                        else begin
                                                                            if ((random_books == 4) and (book_four == 0)) then begin
                                                                                book_four := 1;
                                                                                case := 792;
                                                                            end
                                                                            else begin
                                                                                if ((random_books == 3) and (book_three == 0)) then begin
                                                                                    book_three := 1;
                                                                                    case := 793;
                                                                                end
                                                                                else begin
                                                                                    if ((random_books == 2) and (book_two == 0)) then begin
                                                                                        book_two := 1;
                                                                                        case := 794;
                                                                                    end
                                                                                    else begin
                                                                                        if ((random_books == 1) and (book_one == 0)) then begin
                                                                                            book_one := 1;
                                                                                            case := 795;
                                                                                        end
                                                                                        else begin
                                                                                            case := -1;
                                                                                        end
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                    while (case == -1) do begin
                        random_books := random(1, 18);
                        if ((random_books == 18) and (book_eighteen == 0)) then begin
                            book_eighteen := 1;
                            case := 778;
                        end
                        else begin
                            if ((random_books == 17) and (book_seventeen == 0)) then begin
                                book_seventeen := 1;
                                case := 779;
                            end
                            else begin
                                if ((random_books == 16) and (book_sixteen == 0)) then begin
                                    book_sixteen := 1;
                                    case := 780;
                                end
                                else begin
                                    if ((random_books == 15) and (book_fifteen == 0)) then begin
                                        book_fifteen := 1;
                                        case := 781;
                                    end
                                    else begin
                                        if ((random_books == 14) and (book_fourteen == 0)) then begin
                                            book_fourteen := 1;
                                            case := 782;
                                        end
                                        else begin
                                            if ((random_books == 13) and (book_thirteen == 0)) then begin
                                                book_thirteen := 1;
                                                case := 783;
                                            end
                                            else begin
                                                if ((random_books == 12) and (book_twelve == 0)) then begin
                                                    book_twelve := 1;
                                                    case := 784;
                                                end
                                                else begin
                                                    if ((random_books == 11) and (book_eleven == 0)) then begin
                                                        book_eleven := 1;
                                                        case := 785;
                                                    end
                                                    else begin
                                                        if ((random_books == 10) and (book_ten == 0)) then begin
                                                            book_ten := 1;
                                                            case := 786;
                                                        end
                                                        else begin
                                                            if ((random_books == 9) and (book_nine == 0)) then begin
                                                                book_nine := 1;
                                                                case := 787;
                                                            end
                                                            else begin
                                                                if ((random_books == 8) and (book_eight == 0)) then begin
                                                                    book_eight := 1;
                                                                    case := 788;
                                                                end
                                                                else begin
                                                                    if ((random_books == 7) and (book_seven == 0)) then begin
                                                                        book_seven := 1;
                                                                        case := 789;
                                                                    end
                                                                    else begin
                                                                        if ((random_books == 6) and (book_six == 0)) then begin
                                                                            book_six := 1;
                                                                            case := 790;
                                                                        end
                                                                        else begin
                                                                            if ((random_books == 5) and (book_five == 0)) then begin
                                                                                book_five := 1;
                                                                                case := 791;
                                                                            end
                                                                            else begin
                                                                                if ((random_books == 4) and (book_four == 0)) then begin
                                                                                    book_four := 1;
                                                                                    case := 792;
                                                                                end
                                                                                else begin
                                                                                    if ((random_books == 3) and (book_three == 0)) then begin
                                                                                        book_three := 1;
                                                                                        case := 793;
                                                                                    end
                                                                                    else begin
                                                                                        if ((random_books == 2) and (book_two == 0)) then begin
                                                                                            book_two := 1;
                                                                                            case := 794;
                                                                                        end
                                                                                        else begin
                                                                                            if ((random_books == 1) and (book_one == 0)) then begin
                                                                                                book_one := 1;
                                                                                                case := 795;
                                                                                            end
                                                                                            else begin
                                                                                                case := -1;
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                    restock_amt := random(min, max);
                    if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                        if (percent >= random(1, 100)) then begin
                            if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                                restock_obj := create_object(case, 0, 0);
                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, case));
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, case) > restock_amt) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, case);
                                    if ((obj_is_carrying_obj_pid(self_obj, case) - restock_amt) < removed_qty) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, case) - restock_amt;
                                    end
                                    if (removed_qty > 0) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, case);
                                        if (obj_type(self_obj) == 1) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, case);
                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                    add_obj_to_inven(self_obj, restock_obj);
                                                end
                                            end
                                            else begin
                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                    inven_unwield(self_obj);
                                                end
                                            end
                                        end
                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                        destroy_object(restock_obj);
                                    end
                                    restock_obj := 0;
                                    restock_amt := 0;
                                end
                                else begin
                                    restock_obj := 0;
                                end
                            end
                        end
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                            restock_obj := create_object(case, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, case));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, case) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, case);
                                if ((obj_is_carrying_obj_pid(self_obj, case) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, case) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, case);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, case);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                    random_books := random(1, 18);
                    if ((random_books == 18) and (book_eighteen == 0)) then begin
                        book_eighteen := 1;
                        case := 778;
                    end
                    else begin
                        if ((random_books == 17) and (book_seventeen == 0)) then begin
                            book_seventeen := 1;
                            case := 779;
                        end
                        else begin
                            if ((random_books == 16) and (book_sixteen == 0)) then begin
                                book_sixteen := 1;
                                case := 780;
                            end
                            else begin
                                if ((random_books == 15) and (book_fifteen == 0)) then begin
                                    book_fifteen := 1;
                                    case := 781;
                                end
                                else begin
                                    if ((random_books == 14) and (book_fourteen == 0)) then begin
                                        book_fourteen := 1;
                                        case := 782;
                                    end
                                    else begin
                                        if ((random_books == 13) and (book_thirteen == 0)) then begin
                                            book_thirteen := 1;
                                            case := 783;
                                        end
                                        else begin
                                            if ((random_books == 12) and (book_twelve == 0)) then begin
                                                book_twelve := 1;
                                                case := 784;
                                            end
                                            else begin
                                                if ((random_books == 11) and (book_eleven == 0)) then begin
                                                    book_eleven := 1;
                                                    case := 785;
                                                end
                                                else begin
                                                    if ((random_books == 10) and (book_ten == 0)) then begin
                                                        book_ten := 1;
                                                        case := 786;
                                                    end
                                                    else begin
                                                        if ((random_books == 9) and (book_nine == 0)) then begin
                                                            book_nine := 1;
                                                            case := 787;
                                                        end
                                                        else begin
                                                            if ((random_books == 8) and (book_eight == 0)) then begin
                                                                book_eight := 1;
                                                                case := 788;
                                                            end
                                                            else begin
                                                                if ((random_books == 7) and (book_seven == 0)) then begin
                                                                    book_seven := 1;
                                                                    case := 789;
                                                                end
                                                                else begin
                                                                    if ((random_books == 6) and (book_six == 0)) then begin
                                                                        book_six := 1;
                                                                        case := 790;
                                                                    end
                                                                    else begin
                                                                        if ((random_books == 5) and (book_five == 0)) then begin
                                                                            book_five := 1;
                                                                            case := 791;
                                                                        end
                                                                        else begin
                                                                            if ((random_books == 4) and (book_four == 0)) then begin
                                                                                book_four := 1;
                                                                                case := 792;
                                                                            end
                                                                            else begin
                                                                                if ((random_books == 3) and (book_three == 0)) then begin
                                                                                    book_three := 1;
                                                                                    case := 793;
                                                                                end
                                                                                else begin
                                                                                    if ((random_books == 2) and (book_two == 0)) then begin
                                                                                        book_two := 1;
                                                                                        case := 794;
                                                                                    end
                                                                                    else begin
                                                                                        if ((random_books == 1) and (book_one == 0)) then begin
                                                                                            book_one := 1;
                                                                                            case := 795;
                                                                                        end
                                                                                        else begin
                                                                                            case := -1;
                                                                                        end
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                    while (case == -1) do begin
                        random_books := random(1, 18);
                        if ((random_books == 18) and (book_eighteen == 0)) then begin
                            book_eighteen := 1;
                            case := 778;
                        end
                        else begin
                            if ((random_books == 17) and (book_seventeen == 0)) then begin
                                book_seventeen := 1;
                                case := 779;
                            end
                            else begin
                                if ((random_books == 16) and (book_sixteen == 0)) then begin
                                    book_sixteen := 1;
                                    case := 780;
                                end
                                else begin
                                    if ((random_books == 15) and (book_fifteen == 0)) then begin
                                        book_fifteen := 1;
                                        case := 781;
                                    end
                                    else begin
                                        if ((random_books == 14) and (book_fourteen == 0)) then begin
                                            book_fourteen := 1;
                                            case := 782;
                                        end
                                        else begin
                                            if ((random_books == 13) and (book_thirteen == 0)) then begin
                                                book_thirteen := 1;
                                                case := 783;
                                            end
                                            else begin
                                                if ((random_books == 12) and (book_twelve == 0)) then begin
                                                    book_twelve := 1;
                                                    case := 784;
                                                end
                                                else begin
                                                    if ((random_books == 11) and (book_eleven == 0)) then begin
                                                        book_eleven := 1;
                                                        case := 785;
                                                    end
                                                    else begin
                                                        if ((random_books == 10) and (book_ten == 0)) then begin
                                                            book_ten := 1;
                                                            case := 786;
                                                        end
                                                        else begin
                                                            if ((random_books == 9) and (book_nine == 0)) then begin
                                                                book_nine := 1;
                                                                case := 787;
                                                            end
                                                            else begin
                                                                if ((random_books == 8) and (book_eight == 0)) then begin
                                                                    book_eight := 1;
                                                                    case := 788;
                                                                end
                                                                else begin
                                                                    if ((random_books == 7) and (book_seven == 0)) then begin
                                                                        book_seven := 1;
                                                                        case := 789;
                                                                    end
                                                                    else begin
                                                                        if ((random_books == 6) and (book_six == 0)) then begin
                                                                            book_six := 1;
                                                                            case := 790;
                                                                        end
                                                                        else begin
                                                                            if ((random_books == 5) and (book_five == 0)) then begin
                                                                                book_five := 1;
                                                                                case := 791;
                                                                            end
                                                                            else begin
                                                                                if ((random_books == 4) and (book_four == 0)) then begin
                                                                                    book_four := 1;
                                                                                    case := 792;
                                                                                end
                                                                                else begin
                                                                                    if ((random_books == 3) and (book_three == 0)) then begin
                                                                                        book_three := 1;
                                                                                        case := 793;
                                                                                    end
                                                                                    else begin
                                                                                        if ((random_books == 2) and (book_two == 0)) then begin
                                                                                            book_two := 1;
                                                                                            case := 794;
                                                                                        end
                                                                                        else begin
                                                                                            if ((random_books == 1) and (book_one == 0)) then begin
                                                                                                book_one := 1;
                                                                                                case := 795;
                                                                                            end
                                                                                            else begin
                                                                                                case := -1;
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                    restock_amt := random(min, max);
                    if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                        if (percent >= random(1, 100)) then begin
                            if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                                restock_obj := create_object(case, 0, 0);
                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, case));
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, case) > restock_amt) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, case);
                                    if ((obj_is_carrying_obj_pid(self_obj, case) - restock_amt) < removed_qty) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, case) - restock_amt;
                                    end
                                    if (removed_qty > 0) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, case);
                                        if (obj_type(self_obj) == 1) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, case);
                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                    add_obj_to_inven(self_obj, restock_obj);
                                                end
                                            end
                                            else begin
                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                    inven_unwield(self_obj);
                                                end
                                            end
                                        end
                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                        destroy_object(restock_obj);
                                    end
                                    restock_obj := 0;
                                    restock_amt := 0;
                                end
                                else begin
                                    restock_obj := 0;
                                end
                            end
                        end
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                            restock_obj := create_object(case, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, case));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, case) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, case);
                                if ((obj_is_carrying_obj_pid(self_obj, case) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, case) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, case);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, case);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                    random_books := random(1, 18);
                    if ((random_books == 18) and (book_eighteen == 0)) then begin
                        book_eighteen := 1;
                        case := 778;
                    end
                    else begin
                        if ((random_books == 17) and (book_seventeen == 0)) then begin
                            book_seventeen := 1;
                            case := 779;
                        end
                        else begin
                            if ((random_books == 16) and (book_sixteen == 0)) then begin
                                book_sixteen := 1;
                                case := 780;
                            end
                            else begin
                                if ((random_books == 15) and (book_fifteen == 0)) then begin
                                    book_fifteen := 1;
                                    case := 781;
                                end
                                else begin
                                    if ((random_books == 14) and (book_fourteen == 0)) then begin
                                        book_fourteen := 1;
                                        case := 782;
                                    end
                                    else begin
                                        if ((random_books == 13) and (book_thirteen == 0)) then begin
                                            book_thirteen := 1;
                                            case := 783;
                                        end
                                        else begin
                                            if ((random_books == 12) and (book_twelve == 0)) then begin
                                                book_twelve := 1;
                                                case := 784;
                                            end
                                            else begin
                                                if ((random_books == 11) and (book_eleven == 0)) then begin
                                                    book_eleven := 1;
                                                    case := 785;
                                                end
                                                else begin
                                                    if ((random_books == 10) and (book_ten == 0)) then begin
                                                        book_ten := 1;
                                                        case := 786;
                                                    end
                                                    else begin
                                                        if ((random_books == 9) and (book_nine == 0)) then begin
                                                            book_nine := 1;
                                                            case := 787;
                                                        end
                                                        else begin
                                                            if ((random_books == 8) and (book_eight == 0)) then begin
                                                                book_eight := 1;
                                                                case := 788;
                                                            end
                                                            else begin
                                                                if ((random_books == 7) and (book_seven == 0)) then begin
                                                                    book_seven := 1;
                                                                    case := 789;
                                                                end
                                                                else begin
                                                                    if ((random_books == 6) and (book_six == 0)) then begin
                                                                        book_six := 1;
                                                                        case := 790;
                                                                    end
                                                                    else begin
                                                                        if ((random_books == 5) and (book_five == 0)) then begin
                                                                            book_five := 1;
                                                                            case := 791;
                                                                        end
                                                                        else begin
                                                                            if ((random_books == 4) and (book_four == 0)) then begin
                                                                                book_four := 1;
                                                                                case := 792;
                                                                            end
                                                                            else begin
                                                                                if ((random_books == 3) and (book_three == 0)) then begin
                                                                                    book_three := 1;
                                                                                    case := 793;
                                                                                end
                                                                                else begin
                                                                                    if ((random_books == 2) and (book_two == 0)) then begin
                                                                                        book_two := 1;
                                                                                        case := 794;
                                                                                    end
                                                                                    else begin
                                                                                        if ((random_books == 1) and (book_one == 0)) then begin
                                                                                            book_one := 1;
                                                                                            case := 795;
                                                                                        end
                                                                                        else begin
                                                                                            case := -1;
                                                                                        end
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                    while (case == -1) do begin
                        random_books := random(1, 18);
                        if ((random_books == 18) and (book_eighteen == 0)) then begin
                            book_eighteen := 1;
                            case := 778;
                        end
                        else begin
                            if ((random_books == 17) and (book_seventeen == 0)) then begin
                                book_seventeen := 1;
                                case := 779;
                            end
                            else begin
                                if ((random_books == 16) and (book_sixteen == 0)) then begin
                                    book_sixteen := 1;
                                    case := 780;
                                end
                                else begin
                                    if ((random_books == 15) and (book_fifteen == 0)) then begin
                                        book_fifteen := 1;
                                        case := 781;
                                    end
                                    else begin
                                        if ((random_books == 14) and (book_fourteen == 0)) then begin
                                            book_fourteen := 1;
                                            case := 782;
                                        end
                                        else begin
                                            if ((random_books == 13) and (book_thirteen == 0)) then begin
                                                book_thirteen := 1;
                                                case := 783;
                                            end
                                            else begin
                                                if ((random_books == 12) and (book_twelve == 0)) then begin
                                                    book_twelve := 1;
                                                    case := 784;
                                                end
                                                else begin
                                                    if ((random_books == 11) and (book_eleven == 0)) then begin
                                                        book_eleven := 1;
                                                        case := 785;
                                                    end
                                                    else begin
                                                        if ((random_books == 10) and (book_ten == 0)) then begin
                                                            book_ten := 1;
                                                            case := 786;
                                                        end
                                                        else begin
                                                            if ((random_books == 9) and (book_nine == 0)) then begin
                                                                book_nine := 1;
                                                                case := 787;
                                                            end
                                                            else begin
                                                                if ((random_books == 8) and (book_eight == 0)) then begin
                                                                    book_eight := 1;
                                                                    case := 788;
                                                                end
                                                                else begin
                                                                    if ((random_books == 7) and (book_seven == 0)) then begin
                                                                        book_seven := 1;
                                                                        case := 789;
                                                                    end
                                                                    else begin
                                                                        if ((random_books == 6) and (book_six == 0)) then begin
                                                                            book_six := 1;
                                                                            case := 790;
                                                                        end
                                                                        else begin
                                                                            if ((random_books == 5) and (book_five == 0)) then begin
                                                                                book_five := 1;
                                                                                case := 791;
                                                                            end
                                                                            else begin
                                                                                if ((random_books == 4) and (book_four == 0)) then begin
                                                                                    book_four := 1;
                                                                                    case := 792;
                                                                                end
                                                                                else begin
                                                                                    if ((random_books == 3) and (book_three == 0)) then begin
                                                                                        book_three := 1;
                                                                                        case := 793;
                                                                                    end
                                                                                    else begin
                                                                                        if ((random_books == 2) and (book_two == 0)) then begin
                                                                                            book_two := 1;
                                                                                            case := 794;
                                                                                        end
                                                                                        else begin
                                                                                            if ((random_books == 1) and (book_one == 0)) then begin
                                                                                                book_one := 1;
                                                                                                case := 795;
                                                                                            end
                                                                                            else begin
                                                                                                case := -1;
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                    restock_amt := random(min, max);
                    if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                        if (percent >= random(1, 100)) then begin
                            if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                                restock_obj := create_object(case, 0, 0);
                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, case));
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, case) > restock_amt) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, case);
                                    if ((obj_is_carrying_obj_pid(self_obj, case) - restock_amt) < removed_qty) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, case) - restock_amt;
                                    end
                                    if (removed_qty > 0) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, case);
                                        if (obj_type(self_obj) == 1) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, case);
                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                    add_obj_to_inven(self_obj, restock_obj);
                                                end
                                            end
                                            else begin
                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                    inven_unwield(self_obj);
                                                end
                                            end
                                        end
                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                        destroy_object(restock_obj);
                                    end
                                    restock_obj := 0;
                                    restock_amt := 0;
                                end
                                else begin
                                    restock_obj := 0;
                                end
                            end
                        end
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                            restock_obj := create_object(case, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, case));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, case) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, case);
                                if ((obj_is_carrying_obj_pid(self_obj, case) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, case) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, case);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, case);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                    random_books := random(1, 18);
                    if ((random_books == 18) and (book_eighteen == 0)) then begin
                        book_eighteen := 1;
                        case := 778;
                    end
                    else begin
                        if ((random_books == 17) and (book_seventeen == 0)) then begin
                            book_seventeen := 1;
                            case := 779;
                        end
                        else begin
                            if ((random_books == 16) and (book_sixteen == 0)) then begin
                                book_sixteen := 1;
                                case := 780;
                            end
                            else begin
                                if ((random_books == 15) and (book_fifteen == 0)) then begin
                                    book_fifteen := 1;
                                    case := 781;
                                end
                                else begin
                                    if ((random_books == 14) and (book_fourteen == 0)) then begin
                                        book_fourteen := 1;
                                        case := 782;
                                    end
                                    else begin
                                        if ((random_books == 13) and (book_thirteen == 0)) then begin
                                            book_thirteen := 1;
                                            case := 783;
                                        end
                                        else begin
                                            if ((random_books == 12) and (book_twelve == 0)) then begin
                                                book_twelve := 1;
                                                case := 784;
                                            end
                                            else begin
                                                if ((random_books == 11) and (book_eleven == 0)) then begin
                                                    book_eleven := 1;
                                                    case := 785;
                                                end
                                                else begin
                                                    if ((random_books == 10) and (book_ten == 0)) then begin
                                                        book_ten := 1;
                                                        case := 786;
                                                    end
                                                    else begin
                                                        if ((random_books == 9) and (book_nine == 0)) then begin
                                                            book_nine := 1;
                                                            case := 787;
                                                        end
                                                        else begin
                                                            if ((random_books == 8) and (book_eight == 0)) then begin
                                                                book_eight := 1;
                                                                case := 788;
                                                            end
                                                            else begin
                                                                if ((random_books == 7) and (book_seven == 0)) then begin
                                                                    book_seven := 1;
                                                                    case := 789;
                                                                end
                                                                else begin
                                                                    if ((random_books == 6) and (book_six == 0)) then begin
                                                                        book_six := 1;
                                                                        case := 790;
                                                                    end
                                                                    else begin
                                                                        if ((random_books == 5) and (book_five == 0)) then begin
                                                                            book_five := 1;
                                                                            case := 791;
                                                                        end
                                                                        else begin
                                                                            if ((random_books == 4) and (book_four == 0)) then begin
                                                                                book_four := 1;
                                                                                case := 792;
                                                                            end
                                                                            else begin
                                                                                if ((random_books == 3) and (book_three == 0)) then begin
                                                                                    book_three := 1;
                                                                                    case := 793;
                                                                                end
                                                                                else begin
                                                                                    if ((random_books == 2) and (book_two == 0)) then begin
                                                                                        book_two := 1;
                                                                                        case := 794;
                                                                                    end
                                                                                    else begin
                                                                                        if ((random_books == 1) and (book_one == 0)) then begin
                                                                                            book_one := 1;
                                                                                            case := 795;
                                                                                        end
                                                                                        else begin
                                                                                            case := -1;
                                                                                        end
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                    while (case == -1) do begin
                        random_books := random(1, 18);
                        if ((random_books == 18) and (book_eighteen == 0)) then begin
                            book_eighteen := 1;
                            case := 778;
                        end
                        else begin
                            if ((random_books == 17) and (book_seventeen == 0)) then begin
                                book_seventeen := 1;
                                case := 779;
                            end
                            else begin
                                if ((random_books == 16) and (book_sixteen == 0)) then begin
                                    book_sixteen := 1;
                                    case := 780;
                                end
                                else begin
                                    if ((random_books == 15) and (book_fifteen == 0)) then begin
                                        book_fifteen := 1;
                                        case := 781;
                                    end
                                    else begin
                                        if ((random_books == 14) and (book_fourteen == 0)) then begin
                                            book_fourteen := 1;
                                            case := 782;
                                        end
                                        else begin
                                            if ((random_books == 13) and (book_thirteen == 0)) then begin
                                                book_thirteen := 1;
                                                case := 783;
                                            end
                                            else begin
                                                if ((random_books == 12) and (book_twelve == 0)) then begin
                                                    book_twelve := 1;
                                                    case := 784;
                                                end
                                                else begin
                                                    if ((random_books == 11) and (book_eleven == 0)) then begin
                                                        book_eleven := 1;
                                                        case := 785;
                                                    end
                                                    else begin
                                                        if ((random_books == 10) and (book_ten == 0)) then begin
                                                            book_ten := 1;
                                                            case := 786;
                                                        end
                                                        else begin
                                                            if ((random_books == 9) and (book_nine == 0)) then begin
                                                                book_nine := 1;
                                                                case := 787;
                                                            end
                                                            else begin
                                                                if ((random_books == 8) and (book_eight == 0)) then begin
                                                                    book_eight := 1;
                                                                    case := 788;
                                                                end
                                                                else begin
                                                                    if ((random_books == 7) and (book_seven == 0)) then begin
                                                                        book_seven := 1;
                                                                        case := 789;
                                                                    end
                                                                    else begin
                                                                        if ((random_books == 6) and (book_six == 0)) then begin
                                                                            book_six := 1;
                                                                            case := 790;
                                                                        end
                                                                        else begin
                                                                            if ((random_books == 5) and (book_five == 0)) then begin
                                                                                book_five := 1;
                                                                                case := 791;
                                                                            end
                                                                            else begin
                                                                                if ((random_books == 4) and (book_four == 0)) then begin
                                                                                    book_four := 1;
                                                                                    case := 792;
                                                                                end
                                                                                else begin
                                                                                    if ((random_books == 3) and (book_three == 0)) then begin
                                                                                        book_three := 1;
                                                                                        case := 793;
                                                                                    end
                                                                                    else begin
                                                                                        if ((random_books == 2) and (book_two == 0)) then begin
                                                                                            book_two := 1;
                                                                                            case := 794;
                                                                                        end
                                                                                        else begin
                                                                                            if ((random_books == 1) and (book_one == 0)) then begin
                                                                                                book_one := 1;
                                                                                                case := 795;
                                                                                            end
                                                                                            else begin
                                                                                                case := -1;
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                    restock_amt := random(min, max);
                    if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                        if (percent >= random(1, 100)) then begin
                            if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                                restock_obj := create_object(case, 0, 0);
                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, case));
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, case) > restock_amt) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, case);
                                    if ((obj_is_carrying_obj_pid(self_obj, case) - restock_amt) < removed_qty) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, case) - restock_amt;
                                    end
                                    if (removed_qty > 0) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, case);
                                        if (obj_type(self_obj) == 1) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, case);
                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                    add_obj_to_inven(self_obj, restock_obj);
                                                end
                                            end
                                            else begin
                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                    inven_unwield(self_obj);
                                                end
                                            end
                                        end
                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                        destroy_object(restock_obj);
                                    end
                                    restock_obj := 0;
                                    restock_amt := 0;
                                end
                                else begin
                                    restock_obj := 0;
                                end
                            end
                        end
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                            restock_obj := create_object(case, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, case));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, case) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, case);
                                if ((obj_is_carrying_obj_pid(self_obj, case) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, case) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, case);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, case);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (random_book == 4) then begin
                        random_books := random(1, 18);
                        if ((random_books == 18) and (book_eighteen == 0)) then begin
                            book_eighteen := 1;
                            case := 778;
                        end
                        else begin
                            if ((random_books == 17) and (book_seventeen == 0)) then begin
                                book_seventeen := 1;
                                case := 779;
                            end
                            else begin
                                if ((random_books == 16) and (book_sixteen == 0)) then begin
                                    book_sixteen := 1;
                                    case := 780;
                                end
                                else begin
                                    if ((random_books == 15) and (book_fifteen == 0)) then begin
                                        book_fifteen := 1;
                                        case := 781;
                                    end
                                    else begin
                                        if ((random_books == 14) and (book_fourteen == 0)) then begin
                                            book_fourteen := 1;
                                            case := 782;
                                        end
                                        else begin
                                            if ((random_books == 13) and (book_thirteen == 0)) then begin
                                                book_thirteen := 1;
                                                case := 783;
                                            end
                                            else begin
                                                if ((random_books == 12) and (book_twelve == 0)) then begin
                                                    book_twelve := 1;
                                                    case := 784;
                                                end
                                                else begin
                                                    if ((random_books == 11) and (book_eleven == 0)) then begin
                                                        book_eleven := 1;
                                                        case := 785;
                                                    end
                                                    else begin
                                                        if ((random_books == 10) and (book_ten == 0)) then begin
                                                            book_ten := 1;
                                                            case := 786;
                                                        end
                                                        else begin
                                                            if ((random_books == 9) and (book_nine == 0)) then begin
                                                                book_nine := 1;
                                                                case := 787;
                                                            end
                                                            else begin
                                                                if ((random_books == 8) and (book_eight == 0)) then begin
                                                                    book_eight := 1;
                                                                    case := 788;
                                                                end
                                                                else begin
                                                                    if ((random_books == 7) and (book_seven == 0)) then begin
                                                                        book_seven := 1;
                                                                        case := 789;
                                                                    end
                                                                    else begin
                                                                        if ((random_books == 6) and (book_six == 0)) then begin
                                                                            book_six := 1;
                                                                            case := 790;
                                                                        end
                                                                        else begin
                                                                            if ((random_books == 5) and (book_five == 0)) then begin
                                                                                book_five := 1;
                                                                                case := 791;
                                                                            end
                                                                            else begin
                                                                                if ((random_books == 4) and (book_four == 0)) then begin
                                                                                    book_four := 1;
                                                                                    case := 792;
                                                                                end
                                                                                else begin
                                                                                    if ((random_books == 3) and (book_three == 0)) then begin
                                                                                        book_three := 1;
                                                                                        case := 793;
                                                                                    end
                                                                                    else begin
                                                                                        if ((random_books == 2) and (book_two == 0)) then begin
                                                                                            book_two := 1;
                                                                                            case := 794;
                                                                                        end
                                                                                        else begin
                                                                                            if ((random_books == 1) and (book_one == 0)) then begin
                                                                                                book_one := 1;
                                                                                                case := 795;
                                                                                            end
                                                                                            else begin
                                                                                                case := -1;
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                        while (case == -1) do begin
                            random_books := random(1, 18);
                            if ((random_books == 18) and (book_eighteen == 0)) then begin
                                book_eighteen := 1;
                                case := 778;
                            end
                            else begin
                                if ((random_books == 17) and (book_seventeen == 0)) then begin
                                    book_seventeen := 1;
                                    case := 779;
                                end
                                else begin
                                    if ((random_books == 16) and (book_sixteen == 0)) then begin
                                        book_sixteen := 1;
                                        case := 780;
                                    end
                                    else begin
                                        if ((random_books == 15) and (book_fifteen == 0)) then begin
                                            book_fifteen := 1;
                                            case := 781;
                                        end
                                        else begin
                                            if ((random_books == 14) and (book_fourteen == 0)) then begin
                                                book_fourteen := 1;
                                                case := 782;
                                            end
                                            else begin
                                                if ((random_books == 13) and (book_thirteen == 0)) then begin
                                                    book_thirteen := 1;
                                                    case := 783;
                                                end
                                                else begin
                                                    if ((random_books == 12) and (book_twelve == 0)) then begin
                                                        book_twelve := 1;
                                                        case := 784;
                                                    end
                                                    else begin
                                                        if ((random_books == 11) and (book_eleven == 0)) then begin
                                                            book_eleven := 1;
                                                            case := 785;
                                                        end
                                                        else begin
                                                            if ((random_books == 10) and (book_ten == 0)) then begin
                                                                book_ten := 1;
                                                                case := 786;
                                                            end
                                                            else begin
                                                                if ((random_books == 9) and (book_nine == 0)) then begin
                                                                    book_nine := 1;
                                                                    case := 787;
                                                                end
                                                                else begin
                                                                    if ((random_books == 8) and (book_eight == 0)) then begin
                                                                        book_eight := 1;
                                                                        case := 788;
                                                                    end
                                                                    else begin
                                                                        if ((random_books == 7) and (book_seven == 0)) then begin
                                                                            book_seven := 1;
                                                                            case := 789;
                                                                        end
                                                                        else begin
                                                                            if ((random_books == 6) and (book_six == 0)) then begin
                                                                                book_six := 1;
                                                                                case := 790;
                                                                            end
                                                                            else begin
                                                                                if ((random_books == 5) and (book_five == 0)) then begin
                                                                                    book_five := 1;
                                                                                    case := 791;
                                                                                end
                                                                                else begin
                                                                                    if ((random_books == 4) and (book_four == 0)) then begin
                                                                                        book_four := 1;
                                                                                        case := 792;
                                                                                    end
                                                                                    else begin
                                                                                        if ((random_books == 3) and (book_three == 0)) then begin
                                                                                            book_three := 1;
                                                                                            case := 793;
                                                                                        end
                                                                                        else begin
                                                                                            if ((random_books == 2) and (book_two == 0)) then begin
                                                                                                book_two := 1;
                                                                                                case := 794;
                                                                                            end
                                                                                            else begin
                                                                                                if ((random_books == 1) and (book_one == 0)) then begin
                                                                                                    book_one := 1;
                                                                                                    case := 795;
                                                                                                end
                                                                                                else begin
                                                                                                    case := -1;
                                                                                                end
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                        restock_amt := random(min, max);
                        if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                            if (percent >= random(1, 100)) then begin
                                if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                                    restock_obj := create_object(case, 0, 0);
                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, case));
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, case) > restock_amt) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, case);
                                        if ((obj_is_carrying_obj_pid(self_obj, case) - restock_amt) < removed_qty) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, case) - restock_amt;
                                        end
                                        if (removed_qty > 0) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, case);
                                            if (obj_type(self_obj) == 1) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, case);
                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                        add_obj_to_inven(self_obj, restock_obj);
                                                    end
                                                end
                                                else begin
                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                        inven_unwield(self_obj);
                                                    end
                                                end
                                            end
                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                            destroy_object(restock_obj);
                                        end
                                        restock_obj := 0;
                                        restock_amt := 0;
                                    end
                                    else begin
                                        restock_obj := 0;
                                    end
                                end
                            end
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                                restock_obj := create_object(case, 0, 0);
                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, case));
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, case) > restock_amt) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, case);
                                    if ((obj_is_carrying_obj_pid(self_obj, case) - restock_amt) < removed_qty) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, case) - restock_amt;
                                    end
                                    if (removed_qty > 0) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, case);
                                        if (obj_type(self_obj) == 1) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, case);
                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                    add_obj_to_inven(self_obj, restock_obj);
                                                end
                                            end
                                            else begin
                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                    inven_unwield(self_obj);
                                                end
                                            end
                                        end
                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                        destroy_object(restock_obj);
                                    end
                                    restock_obj := 0;
                                    restock_amt := 0;
                                end
                                else begin
                                    restock_obj := 0;
                                end
                            end
                        end
                        random_books := random(1, 18);
                        if ((random_books == 18) and (book_eighteen == 0)) then begin
                            book_eighteen := 1;
                            case := 778;
                        end
                        else begin
                            if ((random_books == 17) and (book_seventeen == 0)) then begin
                                book_seventeen := 1;
                                case := 779;
                            end
                            else begin
                                if ((random_books == 16) and (book_sixteen == 0)) then begin
                                    book_sixteen := 1;
                                    case := 780;
                                end
                                else begin
                                    if ((random_books == 15) and (book_fifteen == 0)) then begin
                                        book_fifteen := 1;
                                        case := 781;
                                    end
                                    else begin
                                        if ((random_books == 14) and (book_fourteen == 0)) then begin
                                            book_fourteen := 1;
                                            case := 782;
                                        end
                                        else begin
                                            if ((random_books == 13) and (book_thirteen == 0)) then begin
                                                book_thirteen := 1;
                                                case := 783;
                                            end
                                            else begin
                                                if ((random_books == 12) and (book_twelve == 0)) then begin
                                                    book_twelve := 1;
                                                    case := 784;
                                                end
                                                else begin
                                                    if ((random_books == 11) and (book_eleven == 0)) then begin
                                                        book_eleven := 1;
                                                        case := 785;
                                                    end
                                                    else begin
                                                        if ((random_books == 10) and (book_ten == 0)) then begin
                                                            book_ten := 1;
                                                            case := 786;
                                                        end
                                                        else begin
                                                            if ((random_books == 9) and (book_nine == 0)) then begin
                                                                book_nine := 1;
                                                                case := 787;
                                                            end
                                                            else begin
                                                                if ((random_books == 8) and (book_eight == 0)) then begin
                                                                    book_eight := 1;
                                                                    case := 788;
                                                                end
                                                                else begin
                                                                    if ((random_books == 7) and (book_seven == 0)) then begin
                                                                        book_seven := 1;
                                                                        case := 789;
                                                                    end
                                                                    else begin
                                                                        if ((random_books == 6) and (book_six == 0)) then begin
                                                                            book_six := 1;
                                                                            case := 790;
                                                                        end
                                                                        else begin
                                                                            if ((random_books == 5) and (book_five == 0)) then begin
                                                                                book_five := 1;
                                                                                case := 791;
                                                                            end
                                                                            else begin
                                                                                if ((random_books == 4) and (book_four == 0)) then begin
                                                                                    book_four := 1;
                                                                                    case := 792;
                                                                                end
                                                                                else begin
                                                                                    if ((random_books == 3) and (book_three == 0)) then begin
                                                                                        book_three := 1;
                                                                                        case := 793;
                                                                                    end
                                                                                    else begin
                                                                                        if ((random_books == 2) and (book_two == 0)) then begin
                                                                                            book_two := 1;
                                                                                            case := 794;
                                                                                        end
                                                                                        else begin
                                                                                            if ((random_books == 1) and (book_one == 0)) then begin
                                                                                                book_one := 1;
                                                                                                case := 795;
                                                                                            end
                                                                                            else begin
                                                                                                case := -1;
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                        while (case == -1) do begin
                            random_books := random(1, 18);
                            if ((random_books == 18) and (book_eighteen == 0)) then begin
                                book_eighteen := 1;
                                case := 778;
                            end
                            else begin
                                if ((random_books == 17) and (book_seventeen == 0)) then begin
                                    book_seventeen := 1;
                                    case := 779;
                                end
                                else begin
                                    if ((random_books == 16) and (book_sixteen == 0)) then begin
                                        book_sixteen := 1;
                                        case := 780;
                                    end
                                    else begin
                                        if ((random_books == 15) and (book_fifteen == 0)) then begin
                                            book_fifteen := 1;
                                            case := 781;
                                        end
                                        else begin
                                            if ((random_books == 14) and (book_fourteen == 0)) then begin
                                                book_fourteen := 1;
                                                case := 782;
                                            end
                                            else begin
                                                if ((random_books == 13) and (book_thirteen == 0)) then begin
                                                    book_thirteen := 1;
                                                    case := 783;
                                                end
                                                else begin
                                                    if ((random_books == 12) and (book_twelve == 0)) then begin
                                                        book_twelve := 1;
                                                        case := 784;
                                                    end
                                                    else begin
                                                        if ((random_books == 11) and (book_eleven == 0)) then begin
                                                            book_eleven := 1;
                                                            case := 785;
                                                        end
                                                        else begin
                                                            if ((random_books == 10) and (book_ten == 0)) then begin
                                                                book_ten := 1;
                                                                case := 786;
                                                            end
                                                            else begin
                                                                if ((random_books == 9) and (book_nine == 0)) then begin
                                                                    book_nine := 1;
                                                                    case := 787;
                                                                end
                                                                else begin
                                                                    if ((random_books == 8) and (book_eight == 0)) then begin
                                                                        book_eight := 1;
                                                                        case := 788;
                                                                    end
                                                                    else begin
                                                                        if ((random_books == 7) and (book_seven == 0)) then begin
                                                                            book_seven := 1;
                                                                            case := 789;
                                                                        end
                                                                        else begin
                                                                            if ((random_books == 6) and (book_six == 0)) then begin
                                                                                book_six := 1;
                                                                                case := 790;
                                                                            end
                                                                            else begin
                                                                                if ((random_books == 5) and (book_five == 0)) then begin
                                                                                    book_five := 1;
                                                                                    case := 791;
                                                                                end
                                                                                else begin
                                                                                    if ((random_books == 4) and (book_four == 0)) then begin
                                                                                        book_four := 1;
                                                                                        case := 792;
                                                                                    end
                                                                                    else begin
                                                                                        if ((random_books == 3) and (book_three == 0)) then begin
                                                                                            book_three := 1;
                                                                                            case := 793;
                                                                                        end
                                                                                        else begin
                                                                                            if ((random_books == 2) and (book_two == 0)) then begin
                                                                                                book_two := 1;
                                                                                                case := 794;
                                                                                            end
                                                                                            else begin
                                                                                                if ((random_books == 1) and (book_one == 0)) then begin
                                                                                                    book_one := 1;
                                                                                                    case := 795;
                                                                                                end
                                                                                                else begin
                                                                                                    case := -1;
                                                                                                end
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                        restock_amt := random(min, max);
                        if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                            if (percent >= random(1, 100)) then begin
                                if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                                    restock_obj := create_object(case, 0, 0);
                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, case));
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, case) > restock_amt) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, case);
                                        if ((obj_is_carrying_obj_pid(self_obj, case) - restock_amt) < removed_qty) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, case) - restock_amt;
                                        end
                                        if (removed_qty > 0) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, case);
                                            if (obj_type(self_obj) == 1) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, case);
                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                        add_obj_to_inven(self_obj, restock_obj);
                                                    end
                                                end
                                                else begin
                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                        inven_unwield(self_obj);
                                                    end
                                                end
                                            end
                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                            destroy_object(restock_obj);
                                        end
                                        restock_obj := 0;
                                        restock_amt := 0;
                                    end
                                    else begin
                                        restock_obj := 0;
                                    end
                                end
                            end
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                                restock_obj := create_object(case, 0, 0);
                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, case));
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, case) > restock_amt) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, case);
                                    if ((obj_is_carrying_obj_pid(self_obj, case) - restock_amt) < removed_qty) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, case) - restock_amt;
                                    end
                                    if (removed_qty > 0) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, case);
                                        if (obj_type(self_obj) == 1) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, case);
                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                    add_obj_to_inven(self_obj, restock_obj);
                                                end
                                            end
                                            else begin
                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                    inven_unwield(self_obj);
                                                end
                                            end
                                        end
                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                        destroy_object(restock_obj);
                                    end
                                    restock_obj := 0;
                                    restock_amt := 0;
                                end
                                else begin
                                    restock_obj := 0;
                                end
                            end
                        end
                        random_books := random(1, 18);
                        if ((random_books == 18) and (book_eighteen == 0)) then begin
                            book_eighteen := 1;
                            case := 778;
                        end
                        else begin
                            if ((random_books == 17) and (book_seventeen == 0)) then begin
                                book_seventeen := 1;
                                case := 779;
                            end
                            else begin
                                if ((random_books == 16) and (book_sixteen == 0)) then begin
                                    book_sixteen := 1;
                                    case := 780;
                                end
                                else begin
                                    if ((random_books == 15) and (book_fifteen == 0)) then begin
                                        book_fifteen := 1;
                                        case := 781;
                                    end
                                    else begin
                                        if ((random_books == 14) and (book_fourteen == 0)) then begin
                                            book_fourteen := 1;
                                            case := 782;
                                        end
                                        else begin
                                            if ((random_books == 13) and (book_thirteen == 0)) then begin
                                                book_thirteen := 1;
                                                case := 783;
                                            end
                                            else begin
                                                if ((random_books == 12) and (book_twelve == 0)) then begin
                                                    book_twelve := 1;
                                                    case := 784;
                                                end
                                                else begin
                                                    if ((random_books == 11) and (book_eleven == 0)) then begin
                                                        book_eleven := 1;
                                                        case := 785;
                                                    end
                                                    else begin
                                                        if ((random_books == 10) and (book_ten == 0)) then begin
                                                            book_ten := 1;
                                                            case := 786;
                                                        end
                                                        else begin
                                                            if ((random_books == 9) and (book_nine == 0)) then begin
                                                                book_nine := 1;
                                                                case := 787;
                                                            end
                                                            else begin
                                                                if ((random_books == 8) and (book_eight == 0)) then begin
                                                                    book_eight := 1;
                                                                    case := 788;
                                                                end
                                                                else begin
                                                                    if ((random_books == 7) and (book_seven == 0)) then begin
                                                                        book_seven := 1;
                                                                        case := 789;
                                                                    end
                                                                    else begin
                                                                        if ((random_books == 6) and (book_six == 0)) then begin
                                                                            book_six := 1;
                                                                            case := 790;
                                                                        end
                                                                        else begin
                                                                            if ((random_books == 5) and (book_five == 0)) then begin
                                                                                book_five := 1;
                                                                                case := 791;
                                                                            end
                                                                            else begin
                                                                                if ((random_books == 4) and (book_four == 0)) then begin
                                                                                    book_four := 1;
                                                                                    case := 792;
                                                                                end
                                                                                else begin
                                                                                    if ((random_books == 3) and (book_three == 0)) then begin
                                                                                        book_three := 1;
                                                                                        case := 793;
                                                                                    end
                                                                                    else begin
                                                                                        if ((random_books == 2) and (book_two == 0)) then begin
                                                                                            book_two := 1;
                                                                                            case := 794;
                                                                                        end
                                                                                        else begin
                                                                                            if ((random_books == 1) and (book_one == 0)) then begin
                                                                                                book_one := 1;
                                                                                                case := 795;
                                                                                            end
                                                                                            else begin
                                                                                                case := -1;
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                        while (case == -1) do begin
                            random_books := random(1, 18);
                            if ((random_books == 18) and (book_eighteen == 0)) then begin
                                book_eighteen := 1;
                                case := 778;
                            end
                            else begin
                                if ((random_books == 17) and (book_seventeen == 0)) then begin
                                    book_seventeen := 1;
                                    case := 779;
                                end
                                else begin
                                    if ((random_books == 16) and (book_sixteen == 0)) then begin
                                        book_sixteen := 1;
                                        case := 780;
                                    end
                                    else begin
                                        if ((random_books == 15) and (book_fifteen == 0)) then begin
                                            book_fifteen := 1;
                                            case := 781;
                                        end
                                        else begin
                                            if ((random_books == 14) and (book_fourteen == 0)) then begin
                                                book_fourteen := 1;
                                                case := 782;
                                            end
                                            else begin
                                                if ((random_books == 13) and (book_thirteen == 0)) then begin
                                                    book_thirteen := 1;
                                                    case := 783;
                                                end
                                                else begin
                                                    if ((random_books == 12) and (book_twelve == 0)) then begin
                                                        book_twelve := 1;
                                                        case := 784;
                                                    end
                                                    else begin
                                                        if ((random_books == 11) and (book_eleven == 0)) then begin
                                                            book_eleven := 1;
                                                            case := 785;
                                                        end
                                                        else begin
                                                            if ((random_books == 10) and (book_ten == 0)) then begin
                                                                book_ten := 1;
                                                                case := 786;
                                                            end
                                                            else begin
                                                                if ((random_books == 9) and (book_nine == 0)) then begin
                                                                    book_nine := 1;
                                                                    case := 787;
                                                                end
                                                                else begin
                                                                    if ((random_books == 8) and (book_eight == 0)) then begin
                                                                        book_eight := 1;
                                                                        case := 788;
                                                                    end
                                                                    else begin
                                                                        if ((random_books == 7) and (book_seven == 0)) then begin
                                                                            book_seven := 1;
                                                                            case := 789;
                                                                        end
                                                                        else begin
                                                                            if ((random_books == 6) and (book_six == 0)) then begin
                                                                                book_six := 1;
                                                                                case := 790;
                                                                            end
                                                                            else begin
                                                                                if ((random_books == 5) and (book_five == 0)) then begin
                                                                                    book_five := 1;
                                                                                    case := 791;
                                                                                end
                                                                                else begin
                                                                                    if ((random_books == 4) and (book_four == 0)) then begin
                                                                                        book_four := 1;
                                                                                        case := 792;
                                                                                    end
                                                                                    else begin
                                                                                        if ((random_books == 3) and (book_three == 0)) then begin
                                                                                            book_three := 1;
                                                                                            case := 793;
                                                                                        end
                                                                                        else begin
                                                                                            if ((random_books == 2) and (book_two == 0)) then begin
                                                                                                book_two := 1;
                                                                                                case := 794;
                                                                                            end
                                                                                            else begin
                                                                                                if ((random_books == 1) and (book_one == 0)) then begin
                                                                                                    book_one := 1;
                                                                                                    case := 795;
                                                                                                end
                                                                                                else begin
                                                                                                    case := -1;
                                                                                                end
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                        restock_amt := random(min, max);
                        if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                            if (percent >= random(1, 100)) then begin
                                if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                                    restock_obj := create_object(case, 0, 0);
                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, case));
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, case) > restock_amt) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, case);
                                        if ((obj_is_carrying_obj_pid(self_obj, case) - restock_amt) < removed_qty) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, case) - restock_amt;
                                        end
                                        if (removed_qty > 0) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, case);
                                            if (obj_type(self_obj) == 1) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, case);
                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                        add_obj_to_inven(self_obj, restock_obj);
                                                    end
                                                end
                                                else begin
                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                        inven_unwield(self_obj);
                                                    end
                                                end
                                            end
                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                            destroy_object(restock_obj);
                                        end
                                        restock_obj := 0;
                                        restock_amt := 0;
                                    end
                                    else begin
                                        restock_obj := 0;
                                    end
                                end
                            end
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                                restock_obj := create_object(case, 0, 0);
                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, case));
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, case) > restock_amt) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, case);
                                    if ((obj_is_carrying_obj_pid(self_obj, case) - restock_amt) < removed_qty) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, case) - restock_amt;
                                    end
                                    if (removed_qty > 0) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, case);
                                        if (obj_type(self_obj) == 1) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, case);
                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                    add_obj_to_inven(self_obj, restock_obj);
                                                end
                                            end
                                            else begin
                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                    inven_unwield(self_obj);
                                                end
                                            end
                                        end
                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                        destroy_object(restock_obj);
                                    end
                                    restock_obj := 0;
                                    restock_amt := 0;
                                end
                                else begin
                                    restock_obj := 0;
                                end
                            end
                        end
                        random_books := random(1, 18);
                        if ((random_books == 18) and (book_eighteen == 0)) then begin
                            book_eighteen := 1;
                            case := 778;
                        end
                        else begin
                            if ((random_books == 17) and (book_seventeen == 0)) then begin
                                book_seventeen := 1;
                                case := 779;
                            end
                            else begin
                                if ((random_books == 16) and (book_sixteen == 0)) then begin
                                    book_sixteen := 1;
                                    case := 780;
                                end
                                else begin
                                    if ((random_books == 15) and (book_fifteen == 0)) then begin
                                        book_fifteen := 1;
                                        case := 781;
                                    end
                                    else begin
                                        if ((random_books == 14) and (book_fourteen == 0)) then begin
                                            book_fourteen := 1;
                                            case := 782;
                                        end
                                        else begin
                                            if ((random_books == 13) and (book_thirteen == 0)) then begin
                                                book_thirteen := 1;
                                                case := 783;
                                            end
                                            else begin
                                                if ((random_books == 12) and (book_twelve == 0)) then begin
                                                    book_twelve := 1;
                                                    case := 784;
                                                end
                                                else begin
                                                    if ((random_books == 11) and (book_eleven == 0)) then begin
                                                        book_eleven := 1;
                                                        case := 785;
                                                    end
                                                    else begin
                                                        if ((random_books == 10) and (book_ten == 0)) then begin
                                                            book_ten := 1;
                                                            case := 786;
                                                        end
                                                        else begin
                                                            if ((random_books == 9) and (book_nine == 0)) then begin
                                                                book_nine := 1;
                                                                case := 787;
                                                            end
                                                            else begin
                                                                if ((random_books == 8) and (book_eight == 0)) then begin
                                                                    book_eight := 1;
                                                                    case := 788;
                                                                end
                                                                else begin
                                                                    if ((random_books == 7) and (book_seven == 0)) then begin
                                                                        book_seven := 1;
                                                                        case := 789;
                                                                    end
                                                                    else begin
                                                                        if ((random_books == 6) and (book_six == 0)) then begin
                                                                            book_six := 1;
                                                                            case := 790;
                                                                        end
                                                                        else begin
                                                                            if ((random_books == 5) and (book_five == 0)) then begin
                                                                                book_five := 1;
                                                                                case := 791;
                                                                            end
                                                                            else begin
                                                                                if ((random_books == 4) and (book_four == 0)) then begin
                                                                                    book_four := 1;
                                                                                    case := 792;
                                                                                end
                                                                                else begin
                                                                                    if ((random_books == 3) and (book_three == 0)) then begin
                                                                                        book_three := 1;
                                                                                        case := 793;
                                                                                    end
                                                                                    else begin
                                                                                        if ((random_books == 2) and (book_two == 0)) then begin
                                                                                            book_two := 1;
                                                                                            case := 794;
                                                                                        end
                                                                                        else begin
                                                                                            if ((random_books == 1) and (book_one == 0)) then begin
                                                                                                book_one := 1;
                                                                                                case := 795;
                                                                                            end
                                                                                            else begin
                                                                                                case := -1;
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                        while (case == -1) do begin
                            random_books := random(1, 18);
                            if ((random_books == 18) and (book_eighteen == 0)) then begin
                                book_eighteen := 1;
                                case := 778;
                            end
                            else begin
                                if ((random_books == 17) and (book_seventeen == 0)) then begin
                                    book_seventeen := 1;
                                    case := 779;
                                end
                                else begin
                                    if ((random_books == 16) and (book_sixteen == 0)) then begin
                                        book_sixteen := 1;
                                        case := 780;
                                    end
                                    else begin
                                        if ((random_books == 15) and (book_fifteen == 0)) then begin
                                            book_fifteen := 1;
                                            case := 781;
                                        end
                                        else begin
                                            if ((random_books == 14) and (book_fourteen == 0)) then begin
                                                book_fourteen := 1;
                                                case := 782;
                                            end
                                            else begin
                                                if ((random_books == 13) and (book_thirteen == 0)) then begin
                                                    book_thirteen := 1;
                                                    case := 783;
                                                end
                                                else begin
                                                    if ((random_books == 12) and (book_twelve == 0)) then begin
                                                        book_twelve := 1;
                                                        case := 784;
                                                    end
                                                    else begin
                                                        if ((random_books == 11) and (book_eleven == 0)) then begin
                                                            book_eleven := 1;
                                                            case := 785;
                                                        end
                                                        else begin
                                                            if ((random_books == 10) and (book_ten == 0)) then begin
                                                                book_ten := 1;
                                                                case := 786;
                                                            end
                                                            else begin
                                                                if ((random_books == 9) and (book_nine == 0)) then begin
                                                                    book_nine := 1;
                                                                    case := 787;
                                                                end
                                                                else begin
                                                                    if ((random_books == 8) and (book_eight == 0)) then begin
                                                                        book_eight := 1;
                                                                        case := 788;
                                                                    end
                                                                    else begin
                                                                        if ((random_books == 7) and (book_seven == 0)) then begin
                                                                            book_seven := 1;
                                                                            case := 789;
                                                                        end
                                                                        else begin
                                                                            if ((random_books == 6) and (book_six == 0)) then begin
                                                                                book_six := 1;
                                                                                case := 790;
                                                                            end
                                                                            else begin
                                                                                if ((random_books == 5) and (book_five == 0)) then begin
                                                                                    book_five := 1;
                                                                                    case := 791;
                                                                                end
                                                                                else begin
                                                                                    if ((random_books == 4) and (book_four == 0)) then begin
                                                                                        book_four := 1;
                                                                                        case := 792;
                                                                                    end
                                                                                    else begin
                                                                                        if ((random_books == 3) and (book_three == 0)) then begin
                                                                                            book_three := 1;
                                                                                            case := 793;
                                                                                        end
                                                                                        else begin
                                                                                            if ((random_books == 2) and (book_two == 0)) then begin
                                                                                                book_two := 1;
                                                                                                case := 794;
                                                                                            end
                                                                                            else begin
                                                                                                if ((random_books == 1) and (book_one == 0)) then begin
                                                                                                    book_one := 1;
                                                                                                    case := 795;
                                                                                                end
                                                                                                else begin
                                                                                                    case := -1;
                                                                                                end
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                        restock_amt := random(min, max);
                        if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                            if (percent >= random(1, 100)) then begin
                                if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                                    restock_obj := create_object(case, 0, 0);
                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, case));
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, case) > restock_amt) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, case);
                                        if ((obj_is_carrying_obj_pid(self_obj, case) - restock_amt) < removed_qty) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, case) - restock_amt;
                                        end
                                        if (removed_qty > 0) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, case);
                                            if (obj_type(self_obj) == 1) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, case);
                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                        add_obj_to_inven(self_obj, restock_obj);
                                                    end
                                                end
                                                else begin
                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                        inven_unwield(self_obj);
                                                    end
                                                end
                                            end
                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                            destroy_object(restock_obj);
                                        end
                                        restock_obj := 0;
                                        restock_amt := 0;
                                    end
                                    else begin
                                        restock_obj := 0;
                                    end
                                end
                            end
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                                restock_obj := create_object(case, 0, 0);
                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, case));
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, case) > restock_amt) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, case);
                                    if ((obj_is_carrying_obj_pid(self_obj, case) - restock_amt) < removed_qty) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, case) - restock_amt;
                                    end
                                    if (removed_qty > 0) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, case);
                                        if (obj_type(self_obj) == 1) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, case);
                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                    add_obj_to_inven(self_obj, restock_obj);
                                                end
                                            end
                                            else begin
                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                    inven_unwield(self_obj);
                                                end
                                            end
                                        end
                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                        destroy_object(restock_obj);
                                    end
                                    restock_obj := 0;
                                    restock_amt := 0;
                                end
                                else begin
                                    restock_obj := 0;
                                end
                            end
                        end
                    end
                    else begin
                        if (random_book == 3) then begin
                            random_books := random(1, 18);
                            if ((random_books == 18) and (book_eighteen == 0)) then begin
                                book_eighteen := 1;
                                case := 778;
                            end
                            else begin
                                if ((random_books == 17) and (book_seventeen == 0)) then begin
                                    book_seventeen := 1;
                                    case := 779;
                                end
                                else begin
                                    if ((random_books == 16) and (book_sixteen == 0)) then begin
                                        book_sixteen := 1;
                                        case := 780;
                                    end
                                    else begin
                                        if ((random_books == 15) and (book_fifteen == 0)) then begin
                                            book_fifteen := 1;
                                            case := 781;
                                        end
                                        else begin
                                            if ((random_books == 14) and (book_fourteen == 0)) then begin
                                                book_fourteen := 1;
                                                case := 782;
                                            end
                                            else begin
                                                if ((random_books == 13) and (book_thirteen == 0)) then begin
                                                    book_thirteen := 1;
                                                    case := 783;
                                                end
                                                else begin
                                                    if ((random_books == 12) and (book_twelve == 0)) then begin
                                                        book_twelve := 1;
                                                        case := 784;
                                                    end
                                                    else begin
                                                        if ((random_books == 11) and (book_eleven == 0)) then begin
                                                            book_eleven := 1;
                                                            case := 785;
                                                        end
                                                        else begin
                                                            if ((random_books == 10) and (book_ten == 0)) then begin
                                                                book_ten := 1;
                                                                case := 786;
                                                            end
                                                            else begin
                                                                if ((random_books == 9) and (book_nine == 0)) then begin
                                                                    book_nine := 1;
                                                                    case := 787;
                                                                end
                                                                else begin
                                                                    if ((random_books == 8) and (book_eight == 0)) then begin
                                                                        book_eight := 1;
                                                                        case := 788;
                                                                    end
                                                                    else begin
                                                                        if ((random_books == 7) and (book_seven == 0)) then begin
                                                                            book_seven := 1;
                                                                            case := 789;
                                                                        end
                                                                        else begin
                                                                            if ((random_books == 6) and (book_six == 0)) then begin
                                                                                book_six := 1;
                                                                                case := 790;
                                                                            end
                                                                            else begin
                                                                                if ((random_books == 5) and (book_five == 0)) then begin
                                                                                    book_five := 1;
                                                                                    case := 791;
                                                                                end
                                                                                else begin
                                                                                    if ((random_books == 4) and (book_four == 0)) then begin
                                                                                        book_four := 1;
                                                                                        case := 792;
                                                                                    end
                                                                                    else begin
                                                                                        if ((random_books == 3) and (book_three == 0)) then begin
                                                                                            book_three := 1;
                                                                                            case := 793;
                                                                                        end
                                                                                        else begin
                                                                                            if ((random_books == 2) and (book_two == 0)) then begin
                                                                                                book_two := 1;
                                                                                                case := 794;
                                                                                            end
                                                                                            else begin
                                                                                                if ((random_books == 1) and (book_one == 0)) then begin
                                                                                                    book_one := 1;
                                                                                                    case := 795;
                                                                                                end
                                                                                                else begin
                                                                                                    case := -1;
                                                                                                end
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                            while (case == -1) do begin
                                random_books := random(1, 18);
                                if ((random_books == 18) and (book_eighteen == 0)) then begin
                                    book_eighteen := 1;
                                    case := 778;
                                end
                                else begin
                                    if ((random_books == 17) and (book_seventeen == 0)) then begin
                                        book_seventeen := 1;
                                        case := 779;
                                    end
                                    else begin
                                        if ((random_books == 16) and (book_sixteen == 0)) then begin
                                            book_sixteen := 1;
                                            case := 780;
                                        end
                                        else begin
                                            if ((random_books == 15) and (book_fifteen == 0)) then begin
                                                book_fifteen := 1;
                                                case := 781;
                                            end
                                            else begin
                                                if ((random_books == 14) and (book_fourteen == 0)) then begin
                                                    book_fourteen := 1;
                                                    case := 782;
                                                end
                                                else begin
                                                    if ((random_books == 13) and (book_thirteen == 0)) then begin
                                                        book_thirteen := 1;
                                                        case := 783;
                                                    end
                                                    else begin
                                                        if ((random_books == 12) and (book_twelve == 0)) then begin
                                                            book_twelve := 1;
                                                            case := 784;
                                                        end
                                                        else begin
                                                            if ((random_books == 11) and (book_eleven == 0)) then begin
                                                                book_eleven := 1;
                                                                case := 785;
                                                            end
                                                            else begin
                                                                if ((random_books == 10) and (book_ten == 0)) then begin
                                                                    book_ten := 1;
                                                                    case := 786;
                                                                end
                                                                else begin
                                                                    if ((random_books == 9) and (book_nine == 0)) then begin
                                                                        book_nine := 1;
                                                                        case := 787;
                                                                    end
                                                                    else begin
                                                                        if ((random_books == 8) and (book_eight == 0)) then begin
                                                                            book_eight := 1;
                                                                            case := 788;
                                                                        end
                                                                        else begin
                                                                            if ((random_books == 7) and (book_seven == 0)) then begin
                                                                                book_seven := 1;
                                                                                case := 789;
                                                                            end
                                                                            else begin
                                                                                if ((random_books == 6) and (book_six == 0)) then begin
                                                                                    book_six := 1;
                                                                                    case := 790;
                                                                                end
                                                                                else begin
                                                                                    if ((random_books == 5) and (book_five == 0)) then begin
                                                                                        book_five := 1;
                                                                                        case := 791;
                                                                                    end
                                                                                    else begin
                                                                                        if ((random_books == 4) and (book_four == 0)) then begin
                                                                                            book_four := 1;
                                                                                            case := 792;
                                                                                        end
                                                                                        else begin
                                                                                            if ((random_books == 3) and (book_three == 0)) then begin
                                                                                                book_three := 1;
                                                                                                case := 793;
                                                                                            end
                                                                                            else begin
                                                                                                if ((random_books == 2) and (book_two == 0)) then begin
                                                                                                    book_two := 1;
                                                                                                    case := 794;
                                                                                                end
                                                                                                else begin
                                                                                                    if ((random_books == 1) and (book_one == 0)) then begin
                                                                                                        book_one := 1;
                                                                                                        case := 795;
                                                                                                    end
                                                                                                    else begin
                                                                                                        case := -1;
                                                                                                    end
                                                                                                end
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                            restock_amt := random(min, max);
                            if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                                if (percent >= random(1, 100)) then begin
                                    if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                                        restock_obj := create_object(case, 0, 0);
                                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, case));
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, case) > restock_amt) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, case);
                                            if ((obj_is_carrying_obj_pid(self_obj, case) - restock_amt) < removed_qty) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, case) - restock_amt;
                                            end
                                            if (removed_qty > 0) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, case);
                                                if (obj_type(self_obj) == 1) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, case);
                                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                            restock_obj := critter_inven_obj(self_obj, 0);
                                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                                            rm_obj_from_inven(self_obj, restock_obj);
                                                            add_obj_to_inven(self_obj, restock_obj);
                                                        end
                                                    end
                                                    else begin
                                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                            inven_unwield(self_obj);
                                                        end
                                                    end
                                                end
                                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                destroy_object(restock_obj);
                                            end
                                            restock_obj := 0;
                                            restock_amt := 0;
                                        end
                                        else begin
                                            restock_obj := 0;
                                        end
                                    end
                                end
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                                    restock_obj := create_object(case, 0, 0);
                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, case));
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, case) > restock_amt) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, case);
                                        if ((obj_is_carrying_obj_pid(self_obj, case) - restock_amt) < removed_qty) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, case) - restock_amt;
                                        end
                                        if (removed_qty > 0) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, case);
                                            if (obj_type(self_obj) == 1) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, case);
                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                        add_obj_to_inven(self_obj, restock_obj);
                                                    end
                                                end
                                                else begin
                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                        inven_unwield(self_obj);
                                                    end
                                                end
                                            end
                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                            destroy_object(restock_obj);
                                        end
                                        restock_obj := 0;
                                        restock_amt := 0;
                                    end
                                    else begin
                                        restock_obj := 0;
                                    end
                                end
                            end
                            random_books := random(1, 18);
                            if ((random_books == 18) and (book_eighteen == 0)) then begin
                                book_eighteen := 1;
                                case := 778;
                            end
                            else begin
                                if ((random_books == 17) and (book_seventeen == 0)) then begin
                                    book_seventeen := 1;
                                    case := 779;
                                end
                                else begin
                                    if ((random_books == 16) and (book_sixteen == 0)) then begin
                                        book_sixteen := 1;
                                        case := 780;
                                    end
                                    else begin
                                        if ((random_books == 15) and (book_fifteen == 0)) then begin
                                            book_fifteen := 1;
                                            case := 781;
                                        end
                                        else begin
                                            if ((random_books == 14) and (book_fourteen == 0)) then begin
                                                book_fourteen := 1;
                                                case := 782;
                                            end
                                            else begin
                                                if ((random_books == 13) and (book_thirteen == 0)) then begin
                                                    book_thirteen := 1;
                                                    case := 783;
                                                end
                                                else begin
                                                    if ((random_books == 12) and (book_twelve == 0)) then begin
                                                        book_twelve := 1;
                                                        case := 784;
                                                    end
                                                    else begin
                                                        if ((random_books == 11) and (book_eleven == 0)) then begin
                                                            book_eleven := 1;
                                                            case := 785;
                                                        end
                                                        else begin
                                                            if ((random_books == 10) and (book_ten == 0)) then begin
                                                                book_ten := 1;
                                                                case := 786;
                                                            end
                                                            else begin
                                                                if ((random_books == 9) and (book_nine == 0)) then begin
                                                                    book_nine := 1;
                                                                    case := 787;
                                                                end
                                                                else begin
                                                                    if ((random_books == 8) and (book_eight == 0)) then begin
                                                                        book_eight := 1;
                                                                        case := 788;
                                                                    end
                                                                    else begin
                                                                        if ((random_books == 7) and (book_seven == 0)) then begin
                                                                            book_seven := 1;
                                                                            case := 789;
                                                                        end
                                                                        else begin
                                                                            if ((random_books == 6) and (book_six == 0)) then begin
                                                                                book_six := 1;
                                                                                case := 790;
                                                                            end
                                                                            else begin
                                                                                if ((random_books == 5) and (book_five == 0)) then begin
                                                                                    book_five := 1;
                                                                                    case := 791;
                                                                                end
                                                                                else begin
                                                                                    if ((random_books == 4) and (book_four == 0)) then begin
                                                                                        book_four := 1;
                                                                                        case := 792;
                                                                                    end
                                                                                    else begin
                                                                                        if ((random_books == 3) and (book_three == 0)) then begin
                                                                                            book_three := 1;
                                                                                            case := 793;
                                                                                        end
                                                                                        else begin
                                                                                            if ((random_books == 2) and (book_two == 0)) then begin
                                                                                                book_two := 1;
                                                                                                case := 794;
                                                                                            end
                                                                                            else begin
                                                                                                if ((random_books == 1) and (book_one == 0)) then begin
                                                                                                    book_one := 1;
                                                                                                    case := 795;
                                                                                                end
                                                                                                else begin
                                                                                                    case := -1;
                                                                                                end
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                            while (case == -1) do begin
                                random_books := random(1, 18);
                                if ((random_books == 18) and (book_eighteen == 0)) then begin
                                    book_eighteen := 1;
                                    case := 778;
                                end
                                else begin
                                    if ((random_books == 17) and (book_seventeen == 0)) then begin
                                        book_seventeen := 1;
                                        case := 779;
                                    end
                                    else begin
                                        if ((random_books == 16) and (book_sixteen == 0)) then begin
                                            book_sixteen := 1;
                                            case := 780;
                                        end
                                        else begin
                                            if ((random_books == 15) and (book_fifteen == 0)) then begin
                                                book_fifteen := 1;
                                                case := 781;
                                            end
                                            else begin
                                                if ((random_books == 14) and (book_fourteen == 0)) then begin
                                                    book_fourteen := 1;
                                                    case := 782;
                                                end
                                                else begin
                                                    if ((random_books == 13) and (book_thirteen == 0)) then begin
                                                        book_thirteen := 1;
                                                        case := 783;
                                                    end
                                                    else begin
                                                        if ((random_books == 12) and (book_twelve == 0)) then begin
                                                            book_twelve := 1;
                                                            case := 784;
                                                        end
                                                        else begin
                                                            if ((random_books == 11) and (book_eleven == 0)) then begin
                                                                book_eleven := 1;
                                                                case := 785;
                                                            end
                                                            else begin
                                                                if ((random_books == 10) and (book_ten == 0)) then begin
                                                                    book_ten := 1;
                                                                    case := 786;
                                                                end
                                                                else begin
                                                                    if ((random_books == 9) and (book_nine == 0)) then begin
                                                                        book_nine := 1;
                                                                        case := 787;
                                                                    end
                                                                    else begin
                                                                        if ((random_books == 8) and (book_eight == 0)) then begin
                                                                            book_eight := 1;
                                                                            case := 788;
                                                                        end
                                                                        else begin
                                                                            if ((random_books == 7) and (book_seven == 0)) then begin
                                                                                book_seven := 1;
                                                                                case := 789;
                                                                            end
                                                                            else begin
                                                                                if ((random_books == 6) and (book_six == 0)) then begin
                                                                                    book_six := 1;
                                                                                    case := 790;
                                                                                end
                                                                                else begin
                                                                                    if ((random_books == 5) and (book_five == 0)) then begin
                                                                                        book_five := 1;
                                                                                        case := 791;
                                                                                    end
                                                                                    else begin
                                                                                        if ((random_books == 4) and (book_four == 0)) then begin
                                                                                            book_four := 1;
                                                                                            case := 792;
                                                                                        end
                                                                                        else begin
                                                                                            if ((random_books == 3) and (book_three == 0)) then begin
                                                                                                book_three := 1;
                                                                                                case := 793;
                                                                                            end
                                                                                            else begin
                                                                                                if ((random_books == 2) and (book_two == 0)) then begin
                                                                                                    book_two := 1;
                                                                                                    case := 794;
                                                                                                end
                                                                                                else begin
                                                                                                    if ((random_books == 1) and (book_one == 0)) then begin
                                                                                                        book_one := 1;
                                                                                                        case := 795;
                                                                                                    end
                                                                                                    else begin
                                                                                                        case := -1;
                                                                                                    end
                                                                                                end
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                            restock_amt := random(min, max);
                            if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                                if (percent >= random(1, 100)) then begin
                                    if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                                        restock_obj := create_object(case, 0, 0);
                                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, case));
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, case) > restock_amt) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, case);
                                            if ((obj_is_carrying_obj_pid(self_obj, case) - restock_amt) < removed_qty) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, case) - restock_amt;
                                            end
                                            if (removed_qty > 0) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, case);
                                                if (obj_type(self_obj) == 1) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, case);
                                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                            restock_obj := critter_inven_obj(self_obj, 0);
                                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                                            rm_obj_from_inven(self_obj, restock_obj);
                                                            add_obj_to_inven(self_obj, restock_obj);
                                                        end
                                                    end
                                                    else begin
                                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                            inven_unwield(self_obj);
                                                        end
                                                    end
                                                end
                                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                destroy_object(restock_obj);
                                            end
                                            restock_obj := 0;
                                            restock_amt := 0;
                                        end
                                        else begin
                                            restock_obj := 0;
                                        end
                                    end
                                end
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                                    restock_obj := create_object(case, 0, 0);
                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, case));
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, case) > restock_amt) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, case);
                                        if ((obj_is_carrying_obj_pid(self_obj, case) - restock_amt) < removed_qty) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, case) - restock_amt;
                                        end
                                        if (removed_qty > 0) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, case);
                                            if (obj_type(self_obj) == 1) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, case);
                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                        add_obj_to_inven(self_obj, restock_obj);
                                                    end
                                                end
                                                else begin
                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                        inven_unwield(self_obj);
                                                    end
                                                end
                                            end
                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                            destroy_object(restock_obj);
                                        end
                                        restock_obj := 0;
                                        restock_amt := 0;
                                    end
                                    else begin
                                        restock_obj := 0;
                                    end
                                end
                            end
                            random_books := random(1, 18);
                            if ((random_books == 18) and (book_eighteen == 0)) then begin
                                book_eighteen := 1;
                                case := 778;
                            end
                            else begin
                                if ((random_books == 17) and (book_seventeen == 0)) then begin
                                    book_seventeen := 1;
                                    case := 779;
                                end
                                else begin
                                    if ((random_books == 16) and (book_sixteen == 0)) then begin
                                        book_sixteen := 1;
                                        case := 780;
                                    end
                                    else begin
                                        if ((random_books == 15) and (book_fifteen == 0)) then begin
                                            book_fifteen := 1;
                                            case := 781;
                                        end
                                        else begin
                                            if ((random_books == 14) and (book_fourteen == 0)) then begin
                                                book_fourteen := 1;
                                                case := 782;
                                            end
                                            else begin
                                                if ((random_books == 13) and (book_thirteen == 0)) then begin
                                                    book_thirteen := 1;
                                                    case := 783;
                                                end
                                                else begin
                                                    if ((random_books == 12) and (book_twelve == 0)) then begin
                                                        book_twelve := 1;
                                                        case := 784;
                                                    end
                                                    else begin
                                                        if ((random_books == 11) and (book_eleven == 0)) then begin
                                                            book_eleven := 1;
                                                            case := 785;
                                                        end
                                                        else begin
                                                            if ((random_books == 10) and (book_ten == 0)) then begin
                                                                book_ten := 1;
                                                                case := 786;
                                                            end
                                                            else begin
                                                                if ((random_books == 9) and (book_nine == 0)) then begin
                                                                    book_nine := 1;
                                                                    case := 787;
                                                                end
                                                                else begin
                                                                    if ((random_books == 8) and (book_eight == 0)) then begin
                                                                        book_eight := 1;
                                                                        case := 788;
                                                                    end
                                                                    else begin
                                                                        if ((random_books == 7) and (book_seven == 0)) then begin
                                                                            book_seven := 1;
                                                                            case := 789;
                                                                        end
                                                                        else begin
                                                                            if ((random_books == 6) and (book_six == 0)) then begin
                                                                                book_six := 1;
                                                                                case := 790;
                                                                            end
                                                                            else begin
                                                                                if ((random_books == 5) and (book_five == 0)) then begin
                                                                                    book_five := 1;
                                                                                    case := 791;
                                                                                end
                                                                                else begin
                                                                                    if ((random_books == 4) and (book_four == 0)) then begin
                                                                                        book_four := 1;
                                                                                        case := 792;
                                                                                    end
                                                                                    else begin
                                                                                        if ((random_books == 3) and (book_three == 0)) then begin
                                                                                            book_three := 1;
                                                                                            case := 793;
                                                                                        end
                                                                                        else begin
                                                                                            if ((random_books == 2) and (book_two == 0)) then begin
                                                                                                book_two := 1;
                                                                                                case := 794;
                                                                                            end
                                                                                            else begin
                                                                                                if ((random_books == 1) and (book_one == 0)) then begin
                                                                                                    book_one := 1;
                                                                                                    case := 795;
                                                                                                end
                                                                                                else begin
                                                                                                    case := -1;
                                                                                                end
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                            while (case == -1) do begin
                                random_books := random(1, 18);
                                if ((random_books == 18) and (book_eighteen == 0)) then begin
                                    book_eighteen := 1;
                                    case := 778;
                                end
                                else begin
                                    if ((random_books == 17) and (book_seventeen == 0)) then begin
                                        book_seventeen := 1;
                                        case := 779;
                                    end
                                    else begin
                                        if ((random_books == 16) and (book_sixteen == 0)) then begin
                                            book_sixteen := 1;
                                            case := 780;
                                        end
                                        else begin
                                            if ((random_books == 15) and (book_fifteen == 0)) then begin
                                                book_fifteen := 1;
                                                case := 781;
                                            end
                                            else begin
                                                if ((random_books == 14) and (book_fourteen == 0)) then begin
                                                    book_fourteen := 1;
                                                    case := 782;
                                                end
                                                else begin
                                                    if ((random_books == 13) and (book_thirteen == 0)) then begin
                                                        book_thirteen := 1;
                                                        case := 783;
                                                    end
                                                    else begin
                                                        if ((random_books == 12) and (book_twelve == 0)) then begin
                                                            book_twelve := 1;
                                                            case := 784;
                                                        end
                                                        else begin
                                                            if ((random_books == 11) and (book_eleven == 0)) then begin
                                                                book_eleven := 1;
                                                                case := 785;
                                                            end
                                                            else begin
                                                                if ((random_books == 10) and (book_ten == 0)) then begin
                                                                    book_ten := 1;
                                                                    case := 786;
                                                                end
                                                                else begin
                                                                    if ((random_books == 9) and (book_nine == 0)) then begin
                                                                        book_nine := 1;
                                                                        case := 787;
                                                                    end
                                                                    else begin
                                                                        if ((random_books == 8) and (book_eight == 0)) then begin
                                                                            book_eight := 1;
                                                                            case := 788;
                                                                        end
                                                                        else begin
                                                                            if ((random_books == 7) and (book_seven == 0)) then begin
                                                                                book_seven := 1;
                                                                                case := 789;
                                                                            end
                                                                            else begin
                                                                                if ((random_books == 6) and (book_six == 0)) then begin
                                                                                    book_six := 1;
                                                                                    case := 790;
                                                                                end
                                                                                else begin
                                                                                    if ((random_books == 5) and (book_five == 0)) then begin
                                                                                        book_five := 1;
                                                                                        case := 791;
                                                                                    end
                                                                                    else begin
                                                                                        if ((random_books == 4) and (book_four == 0)) then begin
                                                                                            book_four := 1;
                                                                                            case := 792;
                                                                                        end
                                                                                        else begin
                                                                                            if ((random_books == 3) and (book_three == 0)) then begin
                                                                                                book_three := 1;
                                                                                                case := 793;
                                                                                            end
                                                                                            else begin
                                                                                                if ((random_books == 2) and (book_two == 0)) then begin
                                                                                                    book_two := 1;
                                                                                                    case := 794;
                                                                                                end
                                                                                                else begin
                                                                                                    if ((random_books == 1) and (book_one == 0)) then begin
                                                                                                        book_one := 1;
                                                                                                        case := 795;
                                                                                                    end
                                                                                                    else begin
                                                                                                        case := -1;
                                                                                                    end
                                                                                                end
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                            restock_amt := random(min, max);
                            if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                                if (percent >= random(1, 100)) then begin
                                    if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                                        restock_obj := create_object(case, 0, 0);
                                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, case));
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, case) > restock_amt) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, case);
                                            if ((obj_is_carrying_obj_pid(self_obj, case) - restock_amt) < removed_qty) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, case) - restock_amt;
                                            end
                                            if (removed_qty > 0) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, case);
                                                if (obj_type(self_obj) == 1) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, case);
                                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                            restock_obj := critter_inven_obj(self_obj, 0);
                                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                                            rm_obj_from_inven(self_obj, restock_obj);
                                                            add_obj_to_inven(self_obj, restock_obj);
                                                        end
                                                    end
                                                    else begin
                                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                            inven_unwield(self_obj);
                                                        end
                                                    end
                                                end
                                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                destroy_object(restock_obj);
                                            end
                                            restock_obj := 0;
                                            restock_amt := 0;
                                        end
                                        else begin
                                            restock_obj := 0;
                                        end
                                    end
                                end
                            end
                            else begin
                                if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                                    restock_obj := create_object(case, 0, 0);
                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, case));
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, case) > restock_amt) then begin
                                        removed_qty := obj_is_carrying_obj_pid(self_obj, case);
                                        if ((obj_is_carrying_obj_pid(self_obj, case) - restock_amt) < removed_qty) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, case) - restock_amt;
                                        end
                                        if (removed_qty > 0) then begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, case);
                                            if (obj_type(self_obj) == 1) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, case);
                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                        add_obj_to_inven(self_obj, restock_obj);
                                                    end
                                                end
                                                else begin
                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                        inven_unwield(self_obj);
                                                    end
                                                end
                                            end
                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                            destroy_object(restock_obj);
                                        end
                                        restock_obj := 0;
                                        restock_amt := 0;
                                    end
                                    else begin
                                        restock_obj := 0;
                                    end
                                end
                            end
                        end
                        else begin
                            if (random_book == 2) then begin
                                random_books := random(1, 18);
                                if ((random_books == 18) and (book_eighteen == 0)) then begin
                                    book_eighteen := 1;
                                    case := 778;
                                end
                                else begin
                                    if ((random_books == 17) and (book_seventeen == 0)) then begin
                                        book_seventeen := 1;
                                        case := 779;
                                    end
                                    else begin
                                        if ((random_books == 16) and (book_sixteen == 0)) then begin
                                            book_sixteen := 1;
                                            case := 780;
                                        end
                                        else begin
                                            if ((random_books == 15) and (book_fifteen == 0)) then begin
                                                book_fifteen := 1;
                                                case := 781;
                                            end
                                            else begin
                                                if ((random_books == 14) and (book_fourteen == 0)) then begin
                                                    book_fourteen := 1;
                                                    case := 782;
                                                end
                                                else begin
                                                    if ((random_books == 13) and (book_thirteen == 0)) then begin
                                                        book_thirteen := 1;
                                                        case := 783;
                                                    end
                                                    else begin
                                                        if ((random_books == 12) and (book_twelve == 0)) then begin
                                                            book_twelve := 1;
                                                            case := 784;
                                                        end
                                                        else begin
                                                            if ((random_books == 11) and (book_eleven == 0)) then begin
                                                                book_eleven := 1;
                                                                case := 785;
                                                            end
                                                            else begin
                                                                if ((random_books == 10) and (book_ten == 0)) then begin
                                                                    book_ten := 1;
                                                                    case := 786;
                                                                end
                                                                else begin
                                                                    if ((random_books == 9) and (book_nine == 0)) then begin
                                                                        book_nine := 1;
                                                                        case := 787;
                                                                    end
                                                                    else begin
                                                                        if ((random_books == 8) and (book_eight == 0)) then begin
                                                                            book_eight := 1;
                                                                            case := 788;
                                                                        end
                                                                        else begin
                                                                            if ((random_books == 7) and (book_seven == 0)) then begin
                                                                                book_seven := 1;
                                                                                case := 789;
                                                                            end
                                                                            else begin
                                                                                if ((random_books == 6) and (book_six == 0)) then begin
                                                                                    book_six := 1;
                                                                                    case := 790;
                                                                                end
                                                                                else begin
                                                                                    if ((random_books == 5) and (book_five == 0)) then begin
                                                                                        book_five := 1;
                                                                                        case := 791;
                                                                                    end
                                                                                    else begin
                                                                                        if ((random_books == 4) and (book_four == 0)) then begin
                                                                                            book_four := 1;
                                                                                            case := 792;
                                                                                        end
                                                                                        else begin
                                                                                            if ((random_books == 3) and (book_three == 0)) then begin
                                                                                                book_three := 1;
                                                                                                case := 793;
                                                                                            end
                                                                                            else begin
                                                                                                if ((random_books == 2) and (book_two == 0)) then begin
                                                                                                    book_two := 1;
                                                                                                    case := 794;
                                                                                                end
                                                                                                else begin
                                                                                                    if ((random_books == 1) and (book_one == 0)) then begin
                                                                                                        book_one := 1;
                                                                                                        case := 795;
                                                                                                    end
                                                                                                    else begin
                                                                                                        case := -1;
                                                                                                    end
                                                                                                end
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                                while (case == -1) do begin
                                    random_books := random(1, 18);
                                    if ((random_books == 18) and (book_eighteen == 0)) then begin
                                        book_eighteen := 1;
                                        case := 778;
                                    end
                                    else begin
                                        if ((random_books == 17) and (book_seventeen == 0)) then begin
                                            book_seventeen := 1;
                                            case := 779;
                                        end
                                        else begin
                                            if ((random_books == 16) and (book_sixteen == 0)) then begin
                                                book_sixteen := 1;
                                                case := 780;
                                            end
                                            else begin
                                                if ((random_books == 15) and (book_fifteen == 0)) then begin
                                                    book_fifteen := 1;
                                                    case := 781;
                                                end
                                                else begin
                                                    if ((random_books == 14) and (book_fourteen == 0)) then begin
                                                        book_fourteen := 1;
                                                        case := 782;
                                                    end
                                                    else begin
                                                        if ((random_books == 13) and (book_thirteen == 0)) then begin
                                                            book_thirteen := 1;
                                                            case := 783;
                                                        end
                                                        else begin
                                                            if ((random_books == 12) and (book_twelve == 0)) then begin
                                                                book_twelve := 1;
                                                                case := 784;
                                                            end
                                                            else begin
                                                                if ((random_books == 11) and (book_eleven == 0)) then begin
                                                                    book_eleven := 1;
                                                                    case := 785;
                                                                end
                                                                else begin
                                                                    if ((random_books == 10) and (book_ten == 0)) then begin
                                                                        book_ten := 1;
                                                                        case := 786;
                                                                    end
                                                                    else begin
                                                                        if ((random_books == 9) and (book_nine == 0)) then begin
                                                                            book_nine := 1;
                                                                            case := 787;
                                                                        end
                                                                        else begin
                                                                            if ((random_books == 8) and (book_eight == 0)) then begin
                                                                                book_eight := 1;
                                                                                case := 788;
                                                                            end
                                                                            else begin
                                                                                if ((random_books == 7) and (book_seven == 0)) then begin
                                                                                    book_seven := 1;
                                                                                    case := 789;
                                                                                end
                                                                                else begin
                                                                                    if ((random_books == 6) and (book_six == 0)) then begin
                                                                                        book_six := 1;
                                                                                        case := 790;
                                                                                    end
                                                                                    else begin
                                                                                        if ((random_books == 5) and (book_five == 0)) then begin
                                                                                            book_five := 1;
                                                                                            case := 791;
                                                                                        end
                                                                                        else begin
                                                                                            if ((random_books == 4) and (book_four == 0)) then begin
                                                                                                book_four := 1;
                                                                                                case := 792;
                                                                                            end
                                                                                            else begin
                                                                                                if ((random_books == 3) and (book_three == 0)) then begin
                                                                                                    book_three := 1;
                                                                                                    case := 793;
                                                                                                end
                                                                                                else begin
                                                                                                    if ((random_books == 2) and (book_two == 0)) then begin
                                                                                                        book_two := 1;
                                                                                                        case := 794;
                                                                                                    end
                                                                                                    else begin
                                                                                                        if ((random_books == 1) and (book_one == 0)) then begin
                                                                                                            book_one := 1;
                                                                                                            case := 795;
                                                                                                        end
                                                                                                        else begin
                                                                                                            case := -1;
                                                                                                        end
                                                                                                    end
                                                                                                end
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                                restock_amt := random(min, max);
                                if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                                    if (percent >= random(1, 100)) then begin
                                        if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                                            restock_obj := create_object(case, 0, 0);
                                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, case));
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, case) > restock_amt) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, case);
                                                if ((obj_is_carrying_obj_pid(self_obj, case) - restock_amt) < removed_qty) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, case) - restock_amt;
                                                end
                                                if (removed_qty > 0) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, case);
                                                    if (obj_type(self_obj) == 1) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, case);
                                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                rm_obj_from_inven(self_obj, restock_obj);
                                                                add_obj_to_inven(self_obj, restock_obj);
                                                            end
                                                        end
                                                        else begin
                                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                inven_unwield(self_obj);
                                                            end
                                                        end
                                                    end
                                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                    destroy_object(restock_obj);
                                                end
                                                restock_obj := 0;
                                                restock_amt := 0;
                                            end
                                            else begin
                                                restock_obj := 0;
                                            end
                                        end
                                    end
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                                        restock_obj := create_object(case, 0, 0);
                                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, case));
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, case) > restock_amt) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, case);
                                            if ((obj_is_carrying_obj_pid(self_obj, case) - restock_amt) < removed_qty) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, case) - restock_amt;
                                            end
                                            if (removed_qty > 0) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, case);
                                                if (obj_type(self_obj) == 1) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, case);
                                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                            restock_obj := critter_inven_obj(self_obj, 0);
                                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                                            rm_obj_from_inven(self_obj, restock_obj);
                                                            add_obj_to_inven(self_obj, restock_obj);
                                                        end
                                                    end
                                                    else begin
                                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                            inven_unwield(self_obj);
                                                        end
                                                    end
                                                end
                                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                destroy_object(restock_obj);
                                            end
                                            restock_obj := 0;
                                            restock_amt := 0;
                                        end
                                        else begin
                                            restock_obj := 0;
                                        end
                                    end
                                end
                                random_books := random(1, 18);
                                if ((random_books == 18) and (book_eighteen == 0)) then begin
                                    book_eighteen := 1;
                                    case := 778;
                                end
                                else begin
                                    if ((random_books == 17) and (book_seventeen == 0)) then begin
                                        book_seventeen := 1;
                                        case := 779;
                                    end
                                    else begin
                                        if ((random_books == 16) and (book_sixteen == 0)) then begin
                                            book_sixteen := 1;
                                            case := 780;
                                        end
                                        else begin
                                            if ((random_books == 15) and (book_fifteen == 0)) then begin
                                                book_fifteen := 1;
                                                case := 781;
                                            end
                                            else begin
                                                if ((random_books == 14) and (book_fourteen == 0)) then begin
                                                    book_fourteen := 1;
                                                    case := 782;
                                                end
                                                else begin
                                                    if ((random_books == 13) and (book_thirteen == 0)) then begin
                                                        book_thirteen := 1;
                                                        case := 783;
                                                    end
                                                    else begin
                                                        if ((random_books == 12) and (book_twelve == 0)) then begin
                                                            book_twelve := 1;
                                                            case := 784;
                                                        end
                                                        else begin
                                                            if ((random_books == 11) and (book_eleven == 0)) then begin
                                                                book_eleven := 1;
                                                                case := 785;
                                                            end
                                                            else begin
                                                                if ((random_books == 10) and (book_ten == 0)) then begin
                                                                    book_ten := 1;
                                                                    case := 786;
                                                                end
                                                                else begin
                                                                    if ((random_books == 9) and (book_nine == 0)) then begin
                                                                        book_nine := 1;
                                                                        case := 787;
                                                                    end
                                                                    else begin
                                                                        if ((random_books == 8) and (book_eight == 0)) then begin
                                                                            book_eight := 1;
                                                                            case := 788;
                                                                        end
                                                                        else begin
                                                                            if ((random_books == 7) and (book_seven == 0)) then begin
                                                                                book_seven := 1;
                                                                                case := 789;
                                                                            end
                                                                            else begin
                                                                                if ((random_books == 6) and (book_six == 0)) then begin
                                                                                    book_six := 1;
                                                                                    case := 790;
                                                                                end
                                                                                else begin
                                                                                    if ((random_books == 5) and (book_five == 0)) then begin
                                                                                        book_five := 1;
                                                                                        case := 791;
                                                                                    end
                                                                                    else begin
                                                                                        if ((random_books == 4) and (book_four == 0)) then begin
                                                                                            book_four := 1;
                                                                                            case := 792;
                                                                                        end
                                                                                        else begin
                                                                                            if ((random_books == 3) and (book_three == 0)) then begin
                                                                                                book_three := 1;
                                                                                                case := 793;
                                                                                            end
                                                                                            else begin
                                                                                                if ((random_books == 2) and (book_two == 0)) then begin
                                                                                                    book_two := 1;
                                                                                                    case := 794;
                                                                                                end
                                                                                                else begin
                                                                                                    if ((random_books == 1) and (book_one == 0)) then begin
                                                                                                        book_one := 1;
                                                                                                        case := 795;
                                                                                                    end
                                                                                                    else begin
                                                                                                        case := -1;
                                                                                                    end
                                                                                                end
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                                while (case == -1) do begin
                                    random_books := random(1, 18);
                                    if ((random_books == 18) and (book_eighteen == 0)) then begin
                                        book_eighteen := 1;
                                        case := 778;
                                    end
                                    else begin
                                        if ((random_books == 17) and (book_seventeen == 0)) then begin
                                            book_seventeen := 1;
                                            case := 779;
                                        end
                                        else begin
                                            if ((random_books == 16) and (book_sixteen == 0)) then begin
                                                book_sixteen := 1;
                                                case := 780;
                                            end
                                            else begin
                                                if ((random_books == 15) and (book_fifteen == 0)) then begin
                                                    book_fifteen := 1;
                                                    case := 781;
                                                end
                                                else begin
                                                    if ((random_books == 14) and (book_fourteen == 0)) then begin
                                                        book_fourteen := 1;
                                                        case := 782;
                                                    end
                                                    else begin
                                                        if ((random_books == 13) and (book_thirteen == 0)) then begin
                                                            book_thirteen := 1;
                                                            case := 783;
                                                        end
                                                        else begin
                                                            if ((random_books == 12) and (book_twelve == 0)) then begin
                                                                book_twelve := 1;
                                                                case := 784;
                                                            end
                                                            else begin
                                                                if ((random_books == 11) and (book_eleven == 0)) then begin
                                                                    book_eleven := 1;
                                                                    case := 785;
                                                                end
                                                                else begin
                                                                    if ((random_books == 10) and (book_ten == 0)) then begin
                                                                        book_ten := 1;
                                                                        case := 786;
                                                                    end
                                                                    else begin
                                                                        if ((random_books == 9) and (book_nine == 0)) then begin
                                                                            book_nine := 1;
                                                                            case := 787;
                                                                        end
                                                                        else begin
                                                                            if ((random_books == 8) and (book_eight == 0)) then begin
                                                                                book_eight := 1;
                                                                                case := 788;
                                                                            end
                                                                            else begin
                                                                                if ((random_books == 7) and (book_seven == 0)) then begin
                                                                                    book_seven := 1;
                                                                                    case := 789;
                                                                                end
                                                                                else begin
                                                                                    if ((random_books == 6) and (book_six == 0)) then begin
                                                                                        book_six := 1;
                                                                                        case := 790;
                                                                                    end
                                                                                    else begin
                                                                                        if ((random_books == 5) and (book_five == 0)) then begin
                                                                                            book_five := 1;
                                                                                            case := 791;
                                                                                        end
                                                                                        else begin
                                                                                            if ((random_books == 4) and (book_four == 0)) then begin
                                                                                                book_four := 1;
                                                                                                case := 792;
                                                                                            end
                                                                                            else begin
                                                                                                if ((random_books == 3) and (book_three == 0)) then begin
                                                                                                    book_three := 1;
                                                                                                    case := 793;
                                                                                                end
                                                                                                else begin
                                                                                                    if ((random_books == 2) and (book_two == 0)) then begin
                                                                                                        book_two := 1;
                                                                                                        case := 794;
                                                                                                    end
                                                                                                    else begin
                                                                                                        if ((random_books == 1) and (book_one == 0)) then begin
                                                                                                            book_one := 1;
                                                                                                            case := 795;
                                                                                                        end
                                                                                                        else begin
                                                                                                            case := -1;
                                                                                                        end
                                                                                                    end
                                                                                                end
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                                restock_amt := random(min, max);
                                if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                                    if (percent >= random(1, 100)) then begin
                                        if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                                            restock_obj := create_object(case, 0, 0);
                                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, case));
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, case) > restock_amt) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, case);
                                                if ((obj_is_carrying_obj_pid(self_obj, case) - restock_amt) < removed_qty) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, case) - restock_amt;
                                                end
                                                if (removed_qty > 0) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, case);
                                                    if (obj_type(self_obj) == 1) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, case);
                                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                rm_obj_from_inven(self_obj, restock_obj);
                                                                add_obj_to_inven(self_obj, restock_obj);
                                                            end
                                                        end
                                                        else begin
                                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                inven_unwield(self_obj);
                                                            end
                                                        end
                                                    end
                                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                    destroy_object(restock_obj);
                                                end
                                                restock_obj := 0;
                                                restock_amt := 0;
                                            end
                                            else begin
                                                restock_obj := 0;
                                            end
                                        end
                                    end
                                end
                                else begin
                                    if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                                        restock_obj := create_object(case, 0, 0);
                                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, case));
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, case) > restock_amt) then begin
                                            removed_qty := obj_is_carrying_obj_pid(self_obj, case);
                                            if ((obj_is_carrying_obj_pid(self_obj, case) - restock_amt) < removed_qty) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, case) - restock_amt;
                                            end
                                            if (removed_qty > 0) then begin
                                                restock_obj := obj_carrying_pid_obj(self_obj, case);
                                                if (obj_type(self_obj) == 1) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, case);
                                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                            restock_obj := critter_inven_obj(self_obj, 0);
                                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                                            rm_obj_from_inven(self_obj, restock_obj);
                                                            add_obj_to_inven(self_obj, restock_obj);
                                                        end
                                                    end
                                                    else begin
                                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                            inven_unwield(self_obj);
                                                        end
                                                    end
                                                end
                                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                destroy_object(restock_obj);
                                            end
                                            restock_obj := 0;
                                            restock_amt := 0;
                                        end
                                        else begin
                                            restock_obj := 0;
                                        end
                                    end
                                end
                            end
                            else begin
                                if (random_book == 1) then begin
                                    random_books := random(1, 18);
                                    if ((random_books == 18) and (book_eighteen == 0)) then begin
                                        book_eighteen := 1;
                                        case := 778;
                                    end
                                    else begin
                                        if ((random_books == 17) and (book_seventeen == 0)) then begin
                                            book_seventeen := 1;
                                            case := 779;
                                        end
                                        else begin
                                            if ((random_books == 16) and (book_sixteen == 0)) then begin
                                                book_sixteen := 1;
                                                case := 780;
                                            end
                                            else begin
                                                if ((random_books == 15) and (book_fifteen == 0)) then begin
                                                    book_fifteen := 1;
                                                    case := 781;
                                                end
                                                else begin
                                                    if ((random_books == 14) and (book_fourteen == 0)) then begin
                                                        book_fourteen := 1;
                                                        case := 782;
                                                    end
                                                    else begin
                                                        if ((random_books == 13) and (book_thirteen == 0)) then begin
                                                            book_thirteen := 1;
                                                            case := 783;
                                                        end
                                                        else begin
                                                            if ((random_books == 12) and (book_twelve == 0)) then begin
                                                                book_twelve := 1;
                                                                case := 784;
                                                            end
                                                            else begin
                                                                if ((random_books == 11) and (book_eleven == 0)) then begin
                                                                    book_eleven := 1;
                                                                    case := 785;
                                                                end
                                                                else begin
                                                                    if ((random_books == 10) and (book_ten == 0)) then begin
                                                                        book_ten := 1;
                                                                        case := 786;
                                                                    end
                                                                    else begin
                                                                        if ((random_books == 9) and (book_nine == 0)) then begin
                                                                            book_nine := 1;
                                                                            case := 787;
                                                                        end
                                                                        else begin
                                                                            if ((random_books == 8) and (book_eight == 0)) then begin
                                                                                book_eight := 1;
                                                                                case := 788;
                                                                            end
                                                                            else begin
                                                                                if ((random_books == 7) and (book_seven == 0)) then begin
                                                                                    book_seven := 1;
                                                                                    case := 789;
                                                                                end
                                                                                else begin
                                                                                    if ((random_books == 6) and (book_six == 0)) then begin
                                                                                        book_six := 1;
                                                                                        case := 790;
                                                                                    end
                                                                                    else begin
                                                                                        if ((random_books == 5) and (book_five == 0)) then begin
                                                                                            book_five := 1;
                                                                                            case := 791;
                                                                                        end
                                                                                        else begin
                                                                                            if ((random_books == 4) and (book_four == 0)) then begin
                                                                                                book_four := 1;
                                                                                                case := 792;
                                                                                            end
                                                                                            else begin
                                                                                                if ((random_books == 3) and (book_three == 0)) then begin
                                                                                                    book_three := 1;
                                                                                                    case := 793;
                                                                                                end
                                                                                                else begin
                                                                                                    if ((random_books == 2) and (book_two == 0)) then begin
                                                                                                        book_two := 1;
                                                                                                        case := 794;
                                                                                                    end
                                                                                                    else begin
                                                                                                        if ((random_books == 1) and (book_one == 0)) then begin
                                                                                                            book_one := 1;
                                                                                                            case := 795;
                                                                                                        end
                                                                                                        else begin
                                                                                                            case := -1;
                                                                                                        end
                                                                                                    end
                                                                                                end
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                    while (case == -1) do begin
                                        random_books := random(1, 18);
                                        if ((random_books == 18) and (book_eighteen == 0)) then begin
                                            book_eighteen := 1;
                                            case := 778;
                                        end
                                        else begin
                                            if ((random_books == 17) and (book_seventeen == 0)) then begin
                                                book_seventeen := 1;
                                                case := 779;
                                            end
                                            else begin
                                                if ((random_books == 16) and (book_sixteen == 0)) then begin
                                                    book_sixteen := 1;
                                                    case := 780;
                                                end
                                                else begin
                                                    if ((random_books == 15) and (book_fifteen == 0)) then begin
                                                        book_fifteen := 1;
                                                        case := 781;
                                                    end
                                                    else begin
                                                        if ((random_books == 14) and (book_fourteen == 0)) then begin
                                                            book_fourteen := 1;
                                                            case := 782;
                                                        end
                                                        else begin
                                                            if ((random_books == 13) and (book_thirteen == 0)) then begin
                                                                book_thirteen := 1;
                                                                case := 783;
                                                            end
                                                            else begin
                                                                if ((random_books == 12) and (book_twelve == 0)) then begin
                                                                    book_twelve := 1;
                                                                    case := 784;
                                                                end
                                                                else begin
                                                                    if ((random_books == 11) and (book_eleven == 0)) then begin
                                                                        book_eleven := 1;
                                                                        case := 785;
                                                                    end
                                                                    else begin
                                                                        if ((random_books == 10) and (book_ten == 0)) then begin
                                                                            book_ten := 1;
                                                                            case := 786;
                                                                        end
                                                                        else begin
                                                                            if ((random_books == 9) and (book_nine == 0)) then begin
                                                                                book_nine := 1;
                                                                                case := 787;
                                                                            end
                                                                            else begin
                                                                                if ((random_books == 8) and (book_eight == 0)) then begin
                                                                                    book_eight := 1;
                                                                                    case := 788;
                                                                                end
                                                                                else begin
                                                                                    if ((random_books == 7) and (book_seven == 0)) then begin
                                                                                        book_seven := 1;
                                                                                        case := 789;
                                                                                    end
                                                                                    else begin
                                                                                        if ((random_books == 6) and (book_six == 0)) then begin
                                                                                            book_six := 1;
                                                                                            case := 790;
                                                                                        end
                                                                                        else begin
                                                                                            if ((random_books == 5) and (book_five == 0)) then begin
                                                                                                book_five := 1;
                                                                                                case := 791;
                                                                                            end
                                                                                            else begin
                                                                                                if ((random_books == 4) and (book_four == 0)) then begin
                                                                                                    book_four := 1;
                                                                                                    case := 792;
                                                                                                end
                                                                                                else begin
                                                                                                    if ((random_books == 3) and (book_three == 0)) then begin
                                                                                                        book_three := 1;
                                                                                                        case := 793;
                                                                                                    end
                                                                                                    else begin
                                                                                                        if ((random_books == 2) and (book_two == 0)) then begin
                                                                                                            book_two := 1;
                                                                                                            case := 794;
                                                                                                        end
                                                                                                        else begin
                                                                                                            if ((random_books == 1) and (book_one == 0)) then begin
                                                                                                                book_one := 1;
                                                                                                                case := 795;
                                                                                                            end
                                                                                                            else begin
                                                                                                                case := -1;
                                                                                                            end
                                                                                                        end
                                                                                                    end
                                                                                                end
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                    restock_amt := random(min, max);
                                    if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                                        if (percent >= random(1, 100)) then begin
                                            if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                                                restock_obj := create_object(case, 0, 0);
                                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, case));
                                            end
                                            else begin
                                                if (obj_is_carrying_obj_pid(self_obj, case) > restock_amt) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, case);
                                                    if ((obj_is_carrying_obj_pid(self_obj, case) - restock_amt) < removed_qty) then begin
                                                        removed_qty := obj_is_carrying_obj_pid(self_obj, case) - restock_amt;
                                                    end
                                                    if (removed_qty > 0) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, case);
                                                        if (obj_type(self_obj) == 1) then begin
                                                            restock_obj := obj_carrying_pid_obj(self_obj, case);
                                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                                    add_obj_to_inven(self_obj, restock_obj);
                                                                end
                                                            end
                                                            else begin
                                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                    inven_unwield(self_obj);
                                                                end
                                                            end
                                                        end
                                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                        destroy_object(restock_obj);
                                                    end
                                                    restock_obj := 0;
                                                    restock_amt := 0;
                                                end
                                                else begin
                                                    restock_obj := 0;
                                                end
                                            end
                                        end
                                    end
                                    else begin
                                        if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                                            restock_obj := create_object(case, 0, 0);
                                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, case));
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, case) > restock_amt) then begin
                                                removed_qty := obj_is_carrying_obj_pid(self_obj, case);
                                                if ((obj_is_carrying_obj_pid(self_obj, case) - restock_amt) < removed_qty) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, case) - restock_amt;
                                                end
                                                if (removed_qty > 0) then begin
                                                    restock_obj := obj_carrying_pid_obj(self_obj, case);
                                                    if (obj_type(self_obj) == 1) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, case);
                                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                rm_obj_from_inven(self_obj, restock_obj);
                                                                add_obj_to_inven(self_obj, restock_obj);
                                                            end
                                                        end
                                                        else begin
                                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                inven_unwield(self_obj);
                                                            end
                                                        end
                                                    end
                                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                    destroy_object(restock_obj);
                                                end
                                                restock_obj := 0;
                                                restock_amt := 0;
                                            end
                                            else begin
                                                restock_obj := 0;
                                            end
                                        end
                                    end
                                end
                                else begin
                                    if (random_book == 0) then begin
                                        random_books := random(1, 18);
                                        if ((random_books == 18) and (book_eighteen == 0)) then begin
                                            book_eighteen := 1;
                                            case := 778;
                                        end
                                        else begin
                                            if ((random_books == 17) and (book_seventeen == 0)) then begin
                                                book_seventeen := 1;
                                                case := 779;
                                            end
                                            else begin
                                                if ((random_books == 16) and (book_sixteen == 0)) then begin
                                                    book_sixteen := 1;
                                                    case := 780;
                                                end
                                                else begin
                                                    if ((random_books == 15) and (book_fifteen == 0)) then begin
                                                        book_fifteen := 1;
                                                        case := 781;
                                                    end
                                                    else begin
                                                        if ((random_books == 14) and (book_fourteen == 0)) then begin
                                                            book_fourteen := 1;
                                                            case := 782;
                                                        end
                                                        else begin
                                                            if ((random_books == 13) and (book_thirteen == 0)) then begin
                                                                book_thirteen := 1;
                                                                case := 783;
                                                            end
                                                            else begin
                                                                if ((random_books == 12) and (book_twelve == 0)) then begin
                                                                    book_twelve := 1;
                                                                    case := 784;
                                                                end
                                                                else begin
                                                                    if ((random_books == 11) and (book_eleven == 0)) then begin
                                                                        book_eleven := 1;
                                                                        case := 785;
                                                                    end
                                                                    else begin
                                                                        if ((random_books == 10) and (book_ten == 0)) then begin
                                                                            book_ten := 1;
                                                                            case := 786;
                                                                        end
                                                                        else begin
                                                                            if ((random_books == 9) and (book_nine == 0)) then begin
                                                                                book_nine := 1;
                                                                                case := 787;
                                                                            end
                                                                            else begin
                                                                                if ((random_books == 8) and (book_eight == 0)) then begin
                                                                                    book_eight := 1;
                                                                                    case := 788;
                                                                                end
                                                                                else begin
                                                                                    if ((random_books == 7) and (book_seven == 0)) then begin
                                                                                        book_seven := 1;
                                                                                        case := 789;
                                                                                    end
                                                                                    else begin
                                                                                        if ((random_books == 6) and (book_six == 0)) then begin
                                                                                            book_six := 1;
                                                                                            case := 790;
                                                                                        end
                                                                                        else begin
                                                                                            if ((random_books == 5) and (book_five == 0)) then begin
                                                                                                book_five := 1;
                                                                                                case := 791;
                                                                                            end
                                                                                            else begin
                                                                                                if ((random_books == 4) and (book_four == 0)) then begin
                                                                                                    book_four := 1;
                                                                                                    case := 792;
                                                                                                end
                                                                                                else begin
                                                                                                    if ((random_books == 3) and (book_three == 0)) then begin
                                                                                                        book_three := 1;
                                                                                                        case := 793;
                                                                                                    end
                                                                                                    else begin
                                                                                                        if ((random_books == 2) and (book_two == 0)) then begin
                                                                                                            book_two := 1;
                                                                                                            case := 794;
                                                                                                        end
                                                                                                        else begin
                                                                                                            if ((random_books == 1) and (book_one == 0)) then begin
                                                                                                                book_one := 1;
                                                                                                                case := 795;
                                                                                                            end
                                                                                                            else begin
                                                                                                                case := -1;
                                                                                                            end
                                                                                                        end
                                                                                                    end
                                                                                                end
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                        while (case == -1) do begin
                                            random_books := random(1, 18);
                                            if ((random_books == 18) and (book_eighteen == 0)) then begin
                                                book_eighteen := 1;
                                                case := 778;
                                            end
                                            else begin
                                                if ((random_books == 17) and (book_seventeen == 0)) then begin
                                                    book_seventeen := 1;
                                                    case := 779;
                                                end
                                                else begin
                                                    if ((random_books == 16) and (book_sixteen == 0)) then begin
                                                        book_sixteen := 1;
                                                        case := 780;
                                                    end
                                                    else begin
                                                        if ((random_books == 15) and (book_fifteen == 0)) then begin
                                                            book_fifteen := 1;
                                                            case := 781;
                                                        end
                                                        else begin
                                                            if ((random_books == 14) and (book_fourteen == 0)) then begin
                                                                book_fourteen := 1;
                                                                case := 782;
                                                            end
                                                            else begin
                                                                if ((random_books == 13) and (book_thirteen == 0)) then begin
                                                                    book_thirteen := 1;
                                                                    case := 783;
                                                                end
                                                                else begin
                                                                    if ((random_books == 12) and (book_twelve == 0)) then begin
                                                                        book_twelve := 1;
                                                                        case := 784;
                                                                    end
                                                                    else begin
                                                                        if ((random_books == 11) and (book_eleven == 0)) then begin
                                                                            book_eleven := 1;
                                                                            case := 785;
                                                                        end
                                                                        else begin
                                                                            if ((random_books == 10) and (book_ten == 0)) then begin
                                                                                book_ten := 1;
                                                                                case := 786;
                                                                            end
                                                                            else begin
                                                                                if ((random_books == 9) and (book_nine == 0)) then begin
                                                                                    book_nine := 1;
                                                                                    case := 787;
                                                                                end
                                                                                else begin
                                                                                    if ((random_books == 8) and (book_eight == 0)) then begin
                                                                                        book_eight := 1;
                                                                                        case := 788;
                                                                                    end
                                                                                    else begin
                                                                                        if ((random_books == 7) and (book_seven == 0)) then begin
                                                                                            book_seven := 1;
                                                                                            case := 789;
                                                                                        end
                                                                                        else begin
                                                                                            if ((random_books == 6) and (book_six == 0)) then begin
                                                                                                book_six := 1;
                                                                                                case := 790;
                                                                                            end
                                                                                            else begin
                                                                                                if ((random_books == 5) and (book_five == 0)) then begin
                                                                                                    book_five := 1;
                                                                                                    case := 791;
                                                                                                end
                                                                                                else begin
                                                                                                    if ((random_books == 4) and (book_four == 0)) then begin
                                                                                                        book_four := 1;
                                                                                                        case := 792;
                                                                                                    end
                                                                                                    else begin
                                                                                                        if ((random_books == 3) and (book_three == 0)) then begin
                                                                                                            book_three := 1;
                                                                                                            case := 793;
                                                                                                        end
                                                                                                        else begin
                                                                                                            if ((random_books == 2) and (book_two == 0)) then begin
                                                                                                                book_two := 1;
                                                                                                                case := 794;
                                                                                                            end
                                                                                                            else begin
                                                                                                                if ((random_books == 1) and (book_one == 0)) then begin
                                                                                                                    book_one := 1;
                                                                                                                    case := 795;
                                                                                                                end
                                                                                                                else begin
                                                                                                                    case := -1;
                                                                                                                end
                                                                                                            end
                                                                                                        end
                                                                                                    end
                                                                                                end
                                                                                            end
                                                                                        end
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                        restock_amt := random(0, 0);
                                        if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                                            if (0 >= random(1, 100)) then begin
                                                if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                                                    restock_obj := create_object(case, 0, 0);
                                                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, case));
                                                end
                                                else begin
                                                    if (obj_is_carrying_obj_pid(self_obj, case) > restock_amt) then begin
                                                        removed_qty := obj_is_carrying_obj_pid(self_obj, case);
                                                        if ((obj_is_carrying_obj_pid(self_obj, case) - restock_amt) < removed_qty) then begin
                                                            removed_qty := obj_is_carrying_obj_pid(self_obj, case) - restock_amt;
                                                        end
                                                        if (removed_qty > 0) then begin
                                                            restock_obj := obj_carrying_pid_obj(self_obj, case);
                                                            if (obj_type(self_obj) == 1) then begin
                                                                restock_obj := obj_carrying_pid_obj(self_obj, case);
                                                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                        restock_obj := critter_inven_obj(self_obj, 0);
                                                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                        rm_obj_from_inven(self_obj, restock_obj);
                                                                        add_obj_to_inven(self_obj, restock_obj);
                                                                    end
                                                                end
                                                                else begin
                                                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                        inven_unwield(self_obj);
                                                                    end
                                                                end
                                                            end
                                                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                            destroy_object(restock_obj);
                                                        end
                                                        restock_obj := 0;
                                                        restock_amt := 0;
                                                    end
                                                    else begin
                                                        restock_obj := 0;
                                                    end
                                                end
                                            end
                                        end
                                        else begin
                                            if (obj_is_carrying_obj_pid(self_obj, case) < restock_amt) then begin
                                                restock_obj := create_object(case, 0, 0);
                                                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, case));
                                            end
                                            else begin
                                                if (obj_is_carrying_obj_pid(self_obj, case) > restock_amt) then begin
                                                    removed_qty := obj_is_carrying_obj_pid(self_obj, case);
                                                    if ((obj_is_carrying_obj_pid(self_obj, case) - restock_amt) < removed_qty) then begin
                                                        removed_qty := obj_is_carrying_obj_pid(self_obj, case) - restock_amt;
                                                    end
                                                    if (removed_qty > 0) then begin
                                                        restock_obj := obj_carrying_pid_obj(self_obj, case);
                                                        if (obj_type(self_obj) == 1) then begin
                                                            restock_obj := obj_carrying_pid_obj(self_obj, case);
                                                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                                    restock_obj := critter_inven_obj(self_obj, 0);
                                                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                                                    rm_obj_from_inven(self_obj, restock_obj);
                                                                    add_obj_to_inven(self_obj, restock_obj);
                                                                end
                                                            end
                                                            else begin
                                                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                                    inven_unwield(self_obj);
                                                                end
                                                            end
                                                        end
                                                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                                        destroy_object(restock_obj);
                                                    end
                                                    restock_obj := 0;
                                                    restock_amt := 0;
                                                end
                                                else begin
                                                    restock_obj := 0;
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                book_one := 0;
                book_two := 0;
                book_three := 0;
                book_four := 0;
                book_five := 0;
                book_six := 0;
                book_seven := 0;
                book_eight := 0;
                book_nine := 0;
                book_ten := 0;
                book_eleven := 0;
                book_twelve := 0;
                book_thirteen := 0;
                book_fourteen := 0;
                book_fifteen := 0;
                book_sixteen := 0;
                book_seventeen := 0;
                book_eighteen := 0;
                restock_amt := random(1, 5);
                if (obj_is_carrying_obj_pid(self_obj, 360) < restock_amt) then begin
                    if (100 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 360) < restock_amt) then begin
                            restock_obj := create_object(360, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 360));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 360) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 360);
                                if ((obj_is_carrying_obj_pid(self_obj, 360) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 360) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 360);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 360);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 360) < restock_amt) then begin
                        restock_obj := create_object(360, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 360));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 360) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 360);
                            if ((obj_is_carrying_obj_pid(self_obj, 360) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 360) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 360);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 360);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(10, 20);
                if (obj_is_carrying_obj_pid(self_obj, 163) < restock_amt) then begin
                    if (100 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 163) < restock_amt) then begin
                            restock_obj := create_object(163, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 163));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 163) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 163);
                                if ((obj_is_carrying_obj_pid(self_obj, 163) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 163) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 163);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 163);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 163) < restock_amt) then begin
                        restock_obj := create_object(163, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 163));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 163) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 163);
                            if ((obj_is_carrying_obj_pid(self_obj, 163) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 163) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 163);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 163);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(5, 10);
                if (obj_is_carrying_obj_pid(self_obj, 35) < restock_amt) then begin
                    if (100 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 35) < restock_amt) then begin
                            restock_obj := create_object(35, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 35));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 35) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 35);
                                if ((obj_is_carrying_obj_pid(self_obj, 35) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 35) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 35);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 35);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 35) < restock_amt) then begin
                        restock_obj := create_object(35, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 35));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 35) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 35);
                            if ((obj_is_carrying_obj_pid(self_obj, 35) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 35) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 35);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 35);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 5);
                if (obj_is_carrying_obj_pid(self_obj, 31) < restock_amt) then begin
                    if (100 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 31) < restock_amt) then begin
                            restock_obj := create_object(31, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 31));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 31) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 31);
                                if ((obj_is_carrying_obj_pid(self_obj, 31) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 31) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 31);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 31);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 31) < restock_amt) then begin
                        restock_obj := create_object(31, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 31));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 31) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 31);
                            if ((obj_is_carrying_obj_pid(self_obj, 31) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 31) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 31);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 31);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(5, 15);
                if (obj_is_carrying_obj_pid(self_obj, 34) < restock_amt) then begin
                    if (100 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 34) < restock_amt) then begin
                            restock_obj := create_object(34, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 34));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 34) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 34);
                                if ((obj_is_carrying_obj_pid(self_obj, 34) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 34) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 34);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 34);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 34) < restock_amt) then begin
                        restock_obj := create_object(34, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 34));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 34) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 34);
                            if ((obj_is_carrying_obj_pid(self_obj, 34) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 34) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 34);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 34);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 10);
                if (obj_is_carrying_obj_pid(self_obj, 33) < restock_amt) then begin
                    if (100 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 33) < restock_amt) then begin
                            restock_obj := create_object(33, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 33));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 33) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 33);
                                if ((obj_is_carrying_obj_pid(self_obj, 33) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 33) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 33);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 33);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 33) < restock_amt) then begin
                        restock_obj := create_object(33, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 33));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 33) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 33);
                            if ((obj_is_carrying_obj_pid(self_obj, 33) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 33) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 33);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 33);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(20, 20);
                if (obj_is_carrying_obj_pid(self_obj, 95) < restock_amt) then begin
                    if (100 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 95) < restock_amt) then begin
                            restock_obj := create_object(95, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 95));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 95) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 95);
                                if ((obj_is_carrying_obj_pid(self_obj, 95) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 95) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 95);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 95);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 95) < restock_amt) then begin
                        restock_obj := create_object(95, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 95));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 95) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 95);
                            if ((obj_is_carrying_obj_pid(self_obj, 95) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 95) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 95);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 95);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(10, 10);
                if (obj_is_carrying_obj_pid(self_obj, 363) < restock_amt) then begin
                    if (100 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 363) < restock_amt) then begin
                            restock_obj := create_object(363, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 363));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 363) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 363);
                                if ((obj_is_carrying_obj_pid(self_obj, 363) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 363) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 363);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 363);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 363) < restock_amt) then begin
                        restock_obj := create_object(363, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 363));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 363) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 363);
                            if ((obj_is_carrying_obj_pid(self_obj, 363) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 363) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 363);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 363);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 3);
                if (obj_is_carrying_obj_pid(self_obj, 500) < restock_amt) then begin
                    if (100 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 500) < restock_amt) then begin
                            restock_obj := create_object(500, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 500));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 500) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 500);
                                if ((obj_is_carrying_obj_pid(self_obj, 500) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 500) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 500);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 500);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 500) < restock_amt) then begin
                        restock_obj := create_object(500, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 500));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 500) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 500);
                            if ((obj_is_carrying_obj_pid(self_obj, 500) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 500) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 500);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 500);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 2);
                if (obj_is_carrying_obj_pid(self_obj, 296) < restock_amt) then begin
                    if (100 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 296) < restock_amt) then begin
                            restock_obj := create_object(296, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 296));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 296) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 296);
                                if ((obj_is_carrying_obj_pid(self_obj, 296) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 296) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 296);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 296);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 296) < restock_amt) then begin
                        restock_obj := create_object(296, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 296));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 296) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 296);
                            if ((obj_is_carrying_obj_pid(self_obj, 296) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 296) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 296);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 296);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(0, 2);
                if (obj_is_carrying_obj_pid(self_obj, 235) < restock_amt) then begin
                    if (100 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 235) < restock_amt) then begin
                            restock_obj := create_object(235, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 235));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 235) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 235);
                                if ((obj_is_carrying_obj_pid(self_obj, 235) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 235) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 235);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 235);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 235) < restock_amt) then begin
                        restock_obj := create_object(235, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 235));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 235) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 235);
                            if ((obj_is_carrying_obj_pid(self_obj, 235) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 235) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 235);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 235);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(5, 10);
                if (obj_is_carrying_obj_pid(self_obj, 30) < restock_amt) then begin
                    if (100 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 30) < restock_amt) then begin
                            restock_obj := create_object(30, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 30));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 30) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 30);
                                if ((obj_is_carrying_obj_pid(self_obj, 30) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 30) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 30);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 30);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 30) < restock_amt) then begin
                        restock_obj := create_object(30, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 30));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 30) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 30);
                            if ((obj_is_carrying_obj_pid(self_obj, 30) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 30) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 30);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 30);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 7);
                if (obj_is_carrying_obj_pid(self_obj, 25) < restock_amt) then begin
                    if (60 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 25) < restock_amt) then begin
                            restock_obj := create_object(25, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 25));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 25) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 25);
                                if ((obj_is_carrying_obj_pid(self_obj, 25) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 25) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 25);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 25);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 25) < restock_amt) then begin
                        restock_obj := create_object(25, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 25));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 25) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 25);
                            if ((obj_is_carrying_obj_pid(self_obj, 25) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 25) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 25);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 25);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(7, 10);
                if (obj_is_carrying_obj_pid(self_obj, 45) < restock_amt) then begin
                    if (45 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 45) < restock_amt) then begin
                            restock_obj := create_object(45, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 45));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 45) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 45);
                                if ((obj_is_carrying_obj_pid(self_obj, 45) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 45) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 45);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 45);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 45) < restock_amt) then begin
                        restock_obj := create_object(45, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 45));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 45) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 45);
                            if ((obj_is_carrying_obj_pid(self_obj, 45) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 45) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 45);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 45);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(2, 4);
                if (obj_is_carrying_obj_pid(self_obj, 234) < restock_amt) then begin
                    if (50 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 234) < restock_amt) then begin
                            restock_obj := create_object(234, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 234));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 234) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 234);
                                if ((obj_is_carrying_obj_pid(self_obj, 234) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 234) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 234);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 234);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 234) < restock_amt) then begin
                        restock_obj := create_object(234, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 234));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 234) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 234);
                            if ((obj_is_carrying_obj_pid(self_obj, 234) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 234) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 234);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 234);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(2, 4);
                if (obj_is_carrying_obj_pid(self_obj, 236) < restock_amt) then begin
                    if (50 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 236) < restock_amt) then begin
                            restock_obj := create_object(236, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 236));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 236) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 236);
                                if ((obj_is_carrying_obj_pid(self_obj, 236) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 236) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 236);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 236);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 236) < restock_amt) then begin
                        restock_obj := create_object(236, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 236));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 236) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 236);
                            if ((obj_is_carrying_obj_pid(self_obj, 236) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 236) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 236);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 236);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 1);
                if (obj_is_carrying_obj_pid(self_obj, 292) < restock_amt) then begin
                    if (25 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 292) < restock_amt) then begin
                            restock_obj := create_object(292, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 292));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 292) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 292);
                                if ((obj_is_carrying_obj_pid(self_obj, 292) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 292) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 292);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 292);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 292) < restock_amt) then begin
                        restock_obj := create_object(292, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 292));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 292) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 292);
                            if ((obj_is_carrying_obj_pid(self_obj, 292) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 292) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 292);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 292);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 1);
                if (obj_is_carrying_obj_pid(self_obj, 17) < restock_amt) then begin
                    if (25 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 17) < restock_amt) then begin
                            restock_obj := create_object(17, 0, 0);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 17));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 17) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 17);
                                if ((obj_is_carrying_obj_pid(self_obj, 17) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 17) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 17);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 17);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                inven_unwield(self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    destroy_object(restock_obj);
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 17) < restock_amt) then begin
                        restock_obj := create_object(17, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 17));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 17) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 17);
                            if ((obj_is_carrying_obj_pid(self_obj, 17) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 17) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 17);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 17);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                move_obj_inven_to_obj(LVar0, self_obj);
                destroy_object(LVar0);
            end
            set_local_var(7, (7 * (24 * (60 * (60 * 10)))) + game_time);
        end
    end
    return 0;
    LVar0 := 0;
    LVar1 := 0;
end

procedure map_update_p_proc
begin
    if (local_var(0) == 0) then begin
        obj_lock(self_obj);
    end
    else begin
        obj_unlock(self_obj);
    end
end

procedure Look_Traps_And_Locks
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    LVar0 := do_check(dude_obj, 1, 0);
    LVar1 := roll_vs_skill(dude_obj, 11, 0);
    LVar2 := roll_vs_skill(dude_obj, 9, 0);
    if (is_success(LVar0)) then begin
        if (is_critical(LVar0)) then begin
            if (is_success(LVar1)) then begin
                set_local_var(2, 1);
                if (is_critical(LVar1)) then begin
                    if (is_success(LVar2)) then begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(SCRIPT_CONTAINR, 102));
                        end
                        else begin
                            display_msg(message_str(SCRIPT_CONTAINR, 103));
                        end
                    end
                    else begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(SCRIPT_CONTAINR, 104));
                        end
                        else begin
                            display_msg(message_str(SCRIPT_CONTAINR, 105));
                        end
                    end
                end
                else begin
                    if (is_success(LVar2)) then begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(SCRIPT_CONTAINR, 106));
                        end
                        else begin
                            display_msg(message_str(SCRIPT_CONTAINR, 107));
                        end
                    end
                    else begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(SCRIPT_CONTAINR, 108));
                        end
                        else begin
                            display_msg(message_str(SCRIPT_CONTAINR, 109));
                        end
                    end
                end
            end
            else begin
                if (is_critical(LVar1)) then begin
                    if (is_success(LVar2)) then begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(SCRIPT_CONTAINR, 110));
                        end
                        else begin
                            display_msg(message_str(SCRIPT_CONTAINR, 111));
                        end
                    end
                    else begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(SCRIPT_CONTAINR, 112));
                        end
                        else begin
                            display_msg(message_str(SCRIPT_CONTAINR, 113));
                        end
                    end
                end
                else begin
                    if (is_success(LVar2)) then begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(SCRIPT_CONTAINR, 114));
                        end
                        else begin
                            display_msg(message_str(SCRIPT_CONTAINR, 115));
                        end
                    end
                    else begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(SCRIPT_CONTAINR, 116));
                        end
                        else begin
                            display_msg(message_str(SCRIPT_CONTAINR, 117));
                        end
                    end
                end
            end
        end
        else begin
            if (is_success(LVar1)) then begin
                set_local_var(2, 1);
                if (is_critical(LVar1)) then begin
                    if (is_success(LVar2)) then begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(SCRIPT_CONTAINR, 118));
                        end
                        else begin
                            display_msg(message_str(SCRIPT_CONTAINR, 119));
                        end
                    end
                    else begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(SCRIPT_CONTAINR, 120));
                        end
                        else begin
                            display_msg(message_str(SCRIPT_CONTAINR, 121));
                        end
                    end
                end
                else begin
                    if (is_success(LVar2)) then begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(SCRIPT_CONTAINR, 122));
                        end
                        else begin
                            display_msg(message_str(SCRIPT_CONTAINR, 123));
                        end
                    end
                    else begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(SCRIPT_CONTAINR, 124));
                        end
                        else begin
                            display_msg(message_str(SCRIPT_CONTAINR, 125));
                        end
                    end
                end
            end
            else begin
                if (is_critical(LVar1)) then begin
                    if (is_success(LVar2)) then begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(SCRIPT_CONTAINR, 126));
                        end
                        else begin
                            display_msg(message_str(SCRIPT_CONTAINR, 127));
                        end
                    end
                    else begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(SCRIPT_CONTAINR, 128));
                        end
                        else begin
                            display_msg(message_str(SCRIPT_CONTAINR, 129));
                        end
                    end
                end
                else begin
                    if (is_success(LVar2)) then begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(SCRIPT_CONTAINR, 130));
                        end
                        else begin
                            display_msg(message_str(SCRIPT_CONTAINR, 131));
                        end
                    end
                    else begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(SCRIPT_CONTAINR, 132));
                        end
                        else begin
                            display_msg(message_str(SCRIPT_CONTAINR, 133));
                        end
                    end
                end
            end
        end
    end
    else begin
        if (is_critical(LVar0)) then begin
            if (is_success(LVar1)) then begin
                set_local_var(2, 1);
                if (is_critical(LVar1)) then begin
                    if (is_success(LVar2)) then begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(SCRIPT_CONTAINR, 134));
                        end
                        else begin
                            display_msg(message_str(SCRIPT_CONTAINR, 135));
                        end
                    end
                    else begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(SCRIPT_CONTAINR, 136));
                        end
                        else begin
                            display_msg(message_str(SCRIPT_CONTAINR, 137));
                        end
                    end
                end
                else begin
                    if (is_success(LVar2)) then begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(SCRIPT_CONTAINR, 138));
                        end
                        else begin
                            display_msg(message_str(SCRIPT_CONTAINR, 139));
                        end
                    end
                    else begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(SCRIPT_CONTAINR, 140));
                        end
                        else begin
                            display_msg(message_str(SCRIPT_CONTAINR, 141));
                        end
                    end
                end
            end
            else begin
                if (is_critical(LVar1)) then begin
                    if (is_success(LVar2)) then begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(SCRIPT_CONTAINR, 142));
                        end
                        else begin
                            display_msg(message_str(SCRIPT_CONTAINR, 143));
                        end
                    end
                    else begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(SCRIPT_CONTAINR, 144));
                        end
                        else begin
                            display_msg(message_str(SCRIPT_CONTAINR, 145));
                        end
                    end
                end
                else begin
                    if (is_success(LVar2)) then begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(SCRIPT_CONTAINR, 146));
                        end
                        else begin
                            display_msg(message_str(SCRIPT_CONTAINR, 147));
                        end
                    end
                    else begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(SCRIPT_CONTAINR, 148));
                        end
                        else begin
                            display_msg(message_str(SCRIPT_CONTAINR, 149));
                        end
                    end
                end
            end
        end
        else begin
            if (is_success(LVar1)) then begin
                set_local_var(2, 1);
                if (is_critical(LVar1)) then begin
                    if (is_success(LVar2)) then begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(SCRIPT_CONTAINR, 150));
                        end
                        else begin
                            display_msg(message_str(SCRIPT_CONTAINR, 151));
                        end
                    end
                    else begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(SCRIPT_CONTAINR, 152));
                        end
                        else begin
                            display_msg(message_str(SCRIPT_CONTAINR, 153));
                        end
                    end
                end
                else begin
                    if (is_success(LVar2)) then begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(SCRIPT_CONTAINR, 154));
                        end
                        else begin
                            display_msg(message_str(SCRIPT_CONTAINR, 155));
                        end
                    end
                    else begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(SCRIPT_CONTAINR, 156));
                        end
                        else begin
                            display_msg(message_str(SCRIPT_CONTAINR, 157));
                        end
                    end
                end
            end
            else begin
                if (is_critical(LVar1)) then begin
                    if (is_success(LVar2)) then begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(SCRIPT_CONTAINR, 158));
                        end
                        else begin
                            display_msg(message_str(SCRIPT_CONTAINR, 159));
                        end
                    end
                    else begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(SCRIPT_CONTAINR, 160));
                        end
                        else begin
                            display_msg(message_str(SCRIPT_CONTAINR, 161));
                        end
                    end
                end
                else begin
                    if (is_success(LVar2)) then begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(SCRIPT_CONTAINR, 162));
                        end
                        else begin
                            display_msg(message_str(SCRIPT_CONTAINR, 163));
                        end
                    end
                    else begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(SCRIPT_CONTAINR, 164));
                        end
                        else begin
                            display_msg(message_str(SCRIPT_CONTAINR, 165));
                        end
                    end
                end
            end
        end
    end
    return 0;
    LVar0 := 0;
    LVar1 := 0;
    LVar2 := 0;
end

procedure Look_Traps
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    LVar0 := do_check(dude_obj, 1, 0);
    LVar1 := roll_vs_skill(dude_obj, 11, 0);
    if (is_success(LVar0)) then begin
        if (is_critical(LVar0)) then begin
            if (is_success(LVar1)) then begin
                if (is_critical(LVar1)) then begin
                    display_msg(message_str(SCRIPT_CONTAINR, 104));
                end
                else begin
                    display_msg(message_str(SCRIPT_CONTAINR, 108));
                end
            end
            else begin
                if (is_critical(LVar1)) then begin
                    display_msg(message_str(SCRIPT_CONTAINR, 112));
                end
                else begin
                    display_msg(message_str(SCRIPT_CONTAINR, 116));
                end
            end
        end
        else begin
            if (is_success(LVar1)) then begin
                if (is_critical(LVar1)) then begin
                    display_msg(message_str(SCRIPT_CONTAINR, 120));
                end
                else begin
                    display_msg(message_str(SCRIPT_CONTAINR, 124));
                end
            end
            else begin
                if (is_critical(LVar1)) then begin
                    display_msg(message_str(SCRIPT_CONTAINR, 128));
                end
                else begin
                    display_msg(message_str(SCRIPT_CONTAINR, 132));
                end
            end
        end
    end
    else begin
        if (is_critical(LVar0)) then begin
            if (is_success(LVar1)) then begin
                if (is_critical(LVar1)) then begin
                    display_msg(message_str(SCRIPT_CONTAINR, 136));
                end
                else begin
                    display_msg(message_str(SCRIPT_CONTAINR, 140));
                end
            end
            else begin
                if (is_critical(LVar1)) then begin
                    display_msg(message_str(SCRIPT_CONTAINR, 144));
                end
                else begin
                    display_msg(message_str(SCRIPT_CONTAINR, 148));
                end
            end
        end
        else begin
            if (is_success(LVar1)) then begin
                if (is_critical(LVar1)) then begin
                    display_msg(message_str(SCRIPT_CONTAINR, 152));
                end
                else begin
                    display_msg(message_str(SCRIPT_CONTAINR, 156));
                end
            end
            else begin
                if (is_critical(LVar1)) then begin
                    display_msg(message_str(SCRIPT_CONTAINR, 160));
                end
                else begin
                    display_msg(message_str(SCRIPT_CONTAINR, 164));
                end
            end
        end
    end
    return 0;
    LVar0 := 0;
    LVar1 := 0;
end

procedure Look_Locks
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    LVar0 := do_check(dude_obj, 1, 0);
    LVar1 := roll_vs_skill(dude_obj, 9, 0);
    if (is_success(LVar0)) then begin
        if (is_critical(LVar0)) then begin
            if (is_success(LVar1)) then begin
                if (is_critical(LVar1)) then begin
                    display_msg(message_str(SCRIPT_CONTAINR, 114));
                end
                else begin
                    display_msg(message_str(SCRIPT_CONTAINR, 115));
                end
            end
            else begin
                if (is_critical(LVar1)) then begin
                    display_msg(message_str(SCRIPT_CONTAINR, 116));
                end
                else begin
                    display_msg(message_str(SCRIPT_CONTAINR, 117));
                end
            end
        end
        else begin
            if (is_success(LVar1)) then begin
                if (is_critical(LVar1)) then begin
                    display_msg(message_str(SCRIPT_CONTAINR, 130));
                end
                else begin
                    display_msg(message_str(SCRIPT_CONTAINR, 131));
                end
            end
            else begin
                if (is_critical(LVar1)) then begin
                    display_msg(message_str(SCRIPT_CONTAINR, 132));
                end
                else begin
                    display_msg(message_str(SCRIPT_CONTAINR, 133));
                end
            end
        end
    end
    else begin
        if (is_critical(LVar0)) then begin
            if (is_success(LVar1)) then begin
                if (is_critical(LVar1)) then begin
                    display_msg(message_str(SCRIPT_CONTAINR, 146));
                end
                else begin
                    display_msg(message_str(SCRIPT_CONTAINR, 147));
                end
            end
            else begin
                if (is_critical(LVar1)) then begin
                    display_msg(message_str(SCRIPT_CONTAINR, 148));
                end
                else begin
                    display_msg(message_str(SCRIPT_CONTAINR, 149));
                end
            end
        end
        else begin
            if (is_success(LVar1)) then begin
                if (is_critical(LVar1)) then begin
                    display_msg(message_str(SCRIPT_CONTAINR, 162));
                end
                else begin
                    display_msg(message_str(SCRIPT_CONTAINR, 163));
                end
            end
            else begin
                if (is_critical(LVar1)) then begin
                    display_msg(message_str(SCRIPT_CONTAINR, 164));
                end
                else begin
                    display_msg(message_str(SCRIPT_CONTAINR, 165));
                end
            end
        end
    end
    return 0;
    LVar0 := 0;
    LVar1 := 0;
end

procedure Skill_Disarm_Traps
begin
    Traps_Roll := roll_vs_skill(source_obj, 11, 0);
    call Disarm_Traps();
end

procedure Disarm_Traps
begin
    if (is_success(Traps_Roll)) then begin
        if (local_var(2) == 0) then begin
            set_local_var(2, 1);
            if (source_obj == dude_obj) then begin
                display_msg(message_str(SCRIPT_CONTAINR, 194));
            end
            else begin
                display_msg(message_str(SCRIPT_CONTAINR, 199));
            end
            if (local_var(6) == 0) then begin
                set_local_var(6, 1);
                give_exp_points(25);
                display_msg(g_mstr(100) + 25 + g_mstr(101));
            end
        end
        else begin
            set_local_var(1, 1);
            if (source_obj == dude_obj) then begin
                display_msg(message_str(SCRIPT_CONTAINR, 196));
            end
            else begin
                display_msg(obj_name(source_obj) + message_str(SCRIPT_CONTAINR, 201));
            end
        end
    end
    else begin
        if (is_critical(Traps_Roll)) then begin
            call Damage_Critter();
        end
        else begin
            if (local_var(2) == 0) then begin
                if (source_obj == dude_obj) then begin
                    display_msg(message_str(SCRIPT_CONTAINR, 195));
                end
                else begin
                    display_msg(obj_name(source_obj) + message_str(SCRIPT_CONTAINR, 200));
                end
            end
            else begin
                display_msg(obj_name(source_obj) + message_str(SCRIPT_CONTAINR, 202));
            end
        end
    end
end

procedure Unlock_Lock
begin
    Locks_Roll := roll_vs_skill(source_obj, 9, -20);
    call Lockpick_Door();
end

procedure Lockpick_Lock
begin
    Locks_Roll := roll_vs_skill(source_obj, 9, 0);
    call Lockpick_Door();
end

procedure Lockpick_Door
begin
    if (is_success(Locks_Roll)) then begin
        set_local_var(0, 1);
        obj_unlock(self_obj);
        if (source_obj == dude_obj) then begin
            display_msg(message_str(SCRIPT_CONTAINR, 170));
        end
        else begin
            display_msg(obj_name(source_obj) + message_str(SCRIPT_CONTAINR, 173));
        end
        if (local_var(5) == 0) then begin
            set_local_var(5, 1);
            give_exp_points(25);
            display_msg(g_mstr(100) + 25 + g_mstr(101));
        end
    end
    else begin
        if (is_critical(Locks_Roll)) then begin
            jam_lock(self_obj);
            if (source_obj == dude_obj) then begin
                display_msg(message_str(SCRIPT_CONTAINR, 171));
            end
            else begin
                display_msg(obj_name(source_obj) + message_str(SCRIPT_CONTAINR, 174));
            end
        end
        else begin
            if (source_obj == dude_obj) then begin
                display_msg(message_str(SCRIPT_CONTAINR, 172));
            end
            else begin
                display_msg(obj_name(source_obj) + message_str(SCRIPT_CONTAINR, 175));
            end
        end
    end
end

procedure Lock_Door
begin
    if (is_success(Locks_Roll)) then begin
        set_local_var(0, 0);
        obj_lock(self_obj);
        if (source_obj == dude_obj) then begin
            display_msg(message_str(SCRIPT_CONTAINR, 189));
        end
        else begin
            display_msg(obj_name(source_obj) + message_str(SCRIPT_CONTAINR, 191));
        end
        if (local_var(5) == 0) then begin
            set_local_var(5, 1);
            give_exp_points(25);
            display_msg(g_mstr(100) + 25 + g_mstr(101));
        end
    end
    else begin
        if (source_obj == dude_obj) then begin
            display_msg(message_str(SCRIPT_CONTAINR, 190));
        end
        else begin
            display_msg(obj_name(source_obj) + message_str(SCRIPT_CONTAINR, 192));
        end
    end
end

procedure Set_Lock
begin
    Locks_Roll := roll_vs_skill(source_obj, 9, -20);
    call Lock_Door();
end

procedure Set_Lockpick_Lock
begin
    Locks_Roll := roll_vs_skill(source_obj, 9, 0);
    call Lock_Door();
end

procedure Set_Trap
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    Traps_Roll := roll_vs_skill(source_obj, 11, -10);
    LVar0 := obj_being_used_with;
    if (obj_is_open(self_obj)) then begin
        script_overrides;
        if (source_obj == dude_obj) then begin
            display_msg(message_str(SCRIPT_CONTAINR, 206));
        end
        else begin
            display_msg(obj_name(source_obj) + message_str(SCRIPT_CONTAINR, 207));
        end
    end
    else begin
        script_overrides;
        LVar1 := rm_mult_objs_from_inven(source_obj, LVar0, 1);
        if (is_success(Traps_Roll)) then begin
            set_local_var(1, 0);
            if (source_obj == dude_obj) then begin
                display_msg(message_str(SCRIPT_CONTAINR, 208));
            end
            else begin
                display_msg(obj_name(source_obj) + message_str(SCRIPT_CONTAINR, 210));
            end
        end
        else begin
            if (is_critical(Traps_Roll)) then begin
                call Damage_Critter();
            end
            else begin
                if (source_obj == dude_obj) then begin
                    display_msg(message_str(SCRIPT_CONTAINR, 209));
                end
                else begin
                    display_msg(obj_name(source_obj) + message_str(SCRIPT_CONTAINR, 211));
                end
            end
        end
    end
    return 0;
    LVar0 := 0;
    LVar1 := 0;
end

procedure Pry_Door
begin
    variable LVar0 := 0;
    LVar0 := do_check(source_obj, 0, 0);
    if (is_success(LVar0)) then begin
        set_local_var(0, 1);
        obj_unlock(self_obj);
        if (source_obj == dude_obj) then begin
            display_msg(message_str(SCRIPT_CONTAINR, 176));
        end
        else begin
            display_msg(message_str(SCRIPT_CONTAINR, 181));
        end
    end
    else begin
        if (is_critical(LVar0)) then begin
            critter_dmg(source_obj, 2, 0 bwor 256);
            if (source_obj == dude_obj) then begin
                if (2 == 1) then begin
                    display_msg(message_str(SCRIPT_CONTAINR, 177));
                end
                else begin
                    display_msg(message_str(SCRIPT_CONTAINR, 178) + 2 + message_str(SCRIPT_CONTAINR, 179));
                end
            end
            else begin
                if (get_critter_stat(source_obj, STAT_gender) == 0) then begin
                    if (2 == 1) then begin
                        display_msg(message_str(SCRIPT_CONTAINR, 182));
                    end
                    else begin
                        display_msg(message_str(SCRIPT_CONTAINR, 183) + 2 + message_str(SCRIPT_CONTAINR, 184));
                    end
                end
                else begin
                    if (2 == 1) then begin
                        display_msg(message_str(SCRIPT_CONTAINR, 186));
                    end
                    else begin
                        display_msg(message_str(SCRIPT_CONTAINR, 187) + 2 + message_str(SCRIPT_CONTAINR, 188));
                    end
                end
            end
        end
        else begin
            if (source_obj == dude_obj) then begin
                display_msg(message_str(SCRIPT_CONTAINR, 180));
            end
            else begin
                display_msg(message_str(SCRIPT_CONTAINR, 185));
            end
        end
    end
    return 0;
    LVar0 := 0;
end

procedure Damage_Critter
begin
    variable LVar0 := 0;
    LVar0 := random(10, 20);
    if (source_obj == dude_obj) then begin
        critter_dmg(dude_obj, LVar0, 6 bwor 256);
        display_msg(message_str(SCRIPT_CONTAINR, 166) + LVar0 + message_str(SCRIPT_CONTAINR, 167));
    end
    else begin
        critter_dmg(source_obj, LVar0, 6 bwor 256);
        display_msg(obj_name(source_obj) + message_str(SCRIPT_CONTAINR, 168) + LVar0 + message_str(SCRIPT_CONTAINR, 169));
    end
    set_local_var(1, 1);
    return 0;
    LVar0 := 0;
end

procedure Super_Lockpick_Lock
begin
    Locks_Roll := roll_vs_skill(source_obj, 9, 20);
    call Lockpick_Door();
end

procedure Super_Set_Lockpick_Lock
begin
    Locks_Roll := roll_vs_skill(source_obj, 9, 20);
    call Lock_Door();
end
