variable ProtoOfItemGiven;
variable ValueOfRollCheck;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure EvaluateKarma;
procedure CheckRep;

variable active;
variable area;
variable needtomove;
variable lock_out_events;

procedure checkarea;
procedure should_i_be_here;
procedure gettarget;
procedure critter_p_proc;
procedure timed_event_p_proc;
procedure pickup_p_proc;
procedure destroy_p_proc;
procedure damage_p_proc;
procedure push_p_proc;
procedure map_enter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure talk_p_proc;
procedure start;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure EvaluateKarma
begin
    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
    set_global_var(GVAR_KARMA_DEFENDER, 0);
    set_global_var(GVAR_KARMA_WANDERER, 0);
    set_global_var(GVAR_KARMA_BETRAYER, 0);
    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
    set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
    if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
    end
    else begin
        if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                    set_global_var(GVAR_KARMA_DEFENDER, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                        set_global_var(GVAR_KARMA_WANDERER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                            set_global_var(GVAR_KARMA_BETRAYER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                end
                                else begin
                                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure CheckRep
begin
    if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
        set_global_var(GVAR_CHAMPION_REPUTATION, 1);
        set_global_var(GVAR_BERSERKER_REPUTATION, 0);
    end
    if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
        set_global_var(GVAR_BERSERKER_REPUTATION, 1);
        set_global_var(GVAR_CHAMPION_REPUTATION, 0);
    end
end

procedure checkarea
begin
    variable LVar0 := 0;
    LVar0 := tile_num(self_obj);
    area := 0;
    if (tile_distance(LVar0, 31294) <= 1) then begin
        area := 1;
    end
    else begin
        if (tile_distance(LVar0, 32487) <= 1) then begin
            area := 2;
        end
    end
end

procedure should_i_be_here
begin
    if (area == 2) then begin
        set_obj_visibility(self_obj, 1);
        active := 0;
    end
    else begin
        set_obj_visibility(self_obj, 0);
        active := 1;
    end
end

procedure gettarget
begin
    if ((area != 2) and ((tile_distance_objs(self_obj, dude_obj) < 10) or (local_var(13) == 1))) then begin
        needtomove := 1;
        set_local_var(13, 1);
        set_local_var(10, 32487);
        set_local_var(11, 1);
        set_global_var(GVAR_KCSAJAG_SKINS, 11);
        if (local_var(12) == 0) then begin
            set_local_var(12, 1);
            display_mstr(200);
        end
    end
    else begin
        if ((game_time_hour >= 0) and (game_time_hour <= 300) and (global_var(GVAR_KCSAJAG_SKINS) == 10) and (tile_distance_objs(self_obj, dude_obj) > 20) and (map_var(18) == 1) and (global_var(GVAR_MODOC_JONNY_PIP) == 0) and (area != 1)) then begin
            needtomove := 1;
            set_local_var(10, 31294);
            set_local_var(11, 0);
        end
        else begin
            if ((game_time_hour > 300) and (area != 2)) then begin
                needtomove := 1;
                set_local_var(10, 32487);
                set_local_var(11, 0);
            end
        end
    end
end

procedure critter_p_proc
begin
    if (CUR_MAP_KLADWTWN) then begin
        if ((map_var(19) == 1) and (global_var(GVAR_MODOC_JONNY_PIP) != 1) and obj_can_see_obj(self_obj, dude_obj)) then begin
            attack(dude_obj);
        end
    end
    else begin
        if (local_var(5) == 1) then begin
            attack(dude_obj);
        end
        else begin
            call checkarea();
            call should_i_be_here();
            needtomove := 0;
            call gettarget();
            if (needtomove == 1) then begin
                if (local_var(10) > 0) then begin
                    animate_move_obj_to_tile(self_obj, local_var(10), local_var(11));
                end
            end
            else begin
                if (lock_out_events == 0) then begin
                    if (area == 1) then begin
                        lock_out_events := 1;
                        add_timer_event(self_obj, random(5, 7) * 10, 0);
                    end
                end
            end
        end
    end
end

procedure timed_event_p_proc
begin
    if (active) then begin
        if (fixed_param == 0) then begin
            call checkarea();
            if ((area == 1) and (global_var(GVAR_KCSAJAG_SKINS) != 11)) then begin
                float_msg(self_obj, mstr(random(300, 302)), FLOAT_MSG_NORMAL);
            end
            lock_out_events := 0;
        end
    end
end

procedure pickup_p_proc
begin
    if ((CUR_MAP_KLADWTWN) and (source_obj == dude_obj)) then begin
        set_map_var(19, 1);
    end
    else begin
        if ((CUR_MAP_KLAMALL) and (source_obj == dude_obj)) then begin
            set_local_var(5, 1);
        end
    end
end

procedure destroy_p_proc
begin
    variable LVar0 := 0;
    if (CUR_MAP_KLAMALL) then begin
        set_map_var(19, self_obj);
        set_global_var(GVAR_NEW_RENO_FLAG_4, 1);
    end
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - 15);
        call EvaluateKarma();
        set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
    end
end

procedure damage_p_proc
begin
    if ((CUR_MAP_KLADWTWN) and (source_obj == dude_obj)) then begin
        set_map_var(19, 1);
    end
    else begin
        if ((CUR_MAP_KLAMALL) and (source_obj == dude_obj)) then begin
            set_local_var(5, 1);
        end
    end
end

procedure push_p_proc
begin
    script_overrides;
end

procedure map_enter_p_proc
begin
    if (CUR_MAP_KLADWTWN) then begin
        if ((global_var(GVAR_KCSAJAG_SKINS) == 11) and (global_var(GVAR_NEW_RENO_FLAG_4) == 0)) then begin
            active := 1;
            set_obj_visibility(self_obj, 0);
        end
        else begin
            if (global_var(GVAR_MODOC_JONNY_PIP) == 1) then begin
                destroy_object(self_obj);
            end
            else begin
                active := 0;
                set_obj_visibility(self_obj, 1);
            end
        end
    end
    else begin
        call checkarea();
        call should_i_be_here();
        if ((game_time_hour >= 0) and (game_time_hour <= 300) and (global_var(GVAR_KCSAJAG_SKINS) == 10) and (map_var(18) == 1) and (global_var(GVAR_MODOC_JONNY_PIP) == 0) and (area == 2)) then begin
            move_to(self_obj, 31294, elevation(self_obj));
        end
        else begin
            if ((game_time_hour > 300) and (area == 1)) then begin
                move_to(self_obj, 32487, elevation(self_obj));
            end
        end
    end
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 1);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_BRAHMIN_WIMPY);
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure description_p_proc
begin
    script_overrides;
    if (CUR_MAP_KLAMALL) then begin
        display_mstr(101);
    end
    else begin
        display_mstr(102);
    end
end

procedure talk_p_proc
begin
    display_mstr(104);
end

procedure start
begin
end
