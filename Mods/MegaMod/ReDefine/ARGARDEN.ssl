variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure Make_Geckos;
procedure Make_Plants;
procedure Kill_Brat;

export variable Nagor_Tile;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure map_enter_p_proc
begin
    variable LVar0 := 0;
    if ((get_month >= 3) and (get_month < 5)) then begin
        if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
            set_light_level(game_time_hour - 600 + 40);
        end
        else begin
            if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                set_light_level(100);
            end
            else begin
                if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                    set_light_level(100 - (game_time_hour - 1800));
                end
                else begin
                    set_light_level(40);
                end
            end
        end
    end
    else begin
        if ((get_month >= 5) and (get_month < 9)) then begin
            if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                set_light_level(game_time_hour - 500 + 40);
            end
            else begin
                if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1900));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 9) and (get_month < 11)) then begin
                if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                    set_light_level(game_time_hour - 600 + 40);
                end
                else begin
                    if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1800));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                    set_light_level(game_time_hour - 700 + 40);
                end
                else begin
                    if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1700));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
        end
    end
    if (map_var(0) == 0) then begin
        set_map_var(0, game_time);
        call Make_Geckos();
        call Make_Plants();
        if (not(tile_contains_obj_pid(24298, 0, 272))) then begin
            LVar0 := create_object(272, 0, 0);
            move_to(LVar0, 24298, 0);
        end
    end
    if (((game_time - map_var(0)) >= (24 * (60 * (60 * 10)))) and not(is_loading_game)) then begin
        set_map_var(0, game_time);
        call Make_Geckos();
        call Make_Plants();
        if (not(tile_contains_obj_pid(24298, 0, 272))) then begin
            LVar0 := create_object(272, 0, 0);
            move_to(LVar0, 24298, 0);
        end
    end
    if ((global_var(GVAR_ARROYO_DOG) == 3) and (map_var(6) == 0)) then begin
        set_map_var(6, 1);
        call Kill_Brat();
    end
    set_global_var(GVAR_LOAD_MAP_INDEX, 0);
end

procedure map_update_p_proc
begin
    if ((get_month >= 3) and (get_month < 5)) then begin
        if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
            set_light_level(game_time_hour - 600 + 40);
        end
        else begin
            if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                set_light_level(100);
            end
            else begin
                if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                    set_light_level(100 - (game_time_hour - 1800));
                end
                else begin
                    set_light_level(40);
                end
            end
        end
    end
    else begin
        if ((get_month >= 5) and (get_month < 9)) then begin
            if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                set_light_level(game_time_hour - 500 + 40);
            end
            else begin
                if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1900));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 9) and (get_month < 11)) then begin
                if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                    set_light_level(game_time_hour - 600 + 40);
                end
                else begin
                    if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1800));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                    set_light_level(game_time_hour - 700 + 40);
                end
                else begin
                    if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1700));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
        end
    end
end

procedure Make_Geckos
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    variable LVar3 := 0;
    variable LVar4 := 0;
    variable LVar5 := 0;
    if (map_var(1) < 4) then begin
        LVar3 := random(4, 7);
        debug_msg("Making " + LVar3 + " new small Geckos.");
        while (LVar1 < LVar3) do begin
            if (map_var(5) == 0) then begin
                set_map_var(5, 18682);
            end
            else begin
                if (map_var(5) == 18682) then begin
                    set_map_var(5, 23323);
                end
                else begin
                    if (map_var(5) == 23323) then begin
                        set_map_var(5, 28695);
                    end
                    else begin
                        if (map_var(5) == 28695) then begin
                            set_map_var(5, 18682);
                        end
                    end
                end
            end
            LVar4 := create_object_sid(16777296, 0, 0, SCRIPT_ACGECKO);
            while (LVar5 <= 0) do begin
                LVar5 := tile_num_in_direction(map_var(5), random(0, 5), random(0, 10));
            end
            set_map_var(1, map_var(1) + 1);
            critter_attempt_placement(LVar4, LVar5, 0);
            LVar1 := LVar1 + 1;
            LVar5 := 0;
        end
    end
    else begin
        if ((map_var(1) >= 4) and (map_var(1) < 7)) then begin
            LVar3 := random(0, 7 - 4);
            debug_msg("Making " + LVar3 + " new small Geckos.");
            while (LVar1 < LVar3) do begin
                if (map_var(5) == 0) then begin
                    set_map_var(5, 18682);
                end
                else begin
                    if (map_var(5) == 18682) then begin
                        set_map_var(5, 23323);
                    end
                    else begin
                        if (map_var(5) == 23323) then begin
                            set_map_var(5, 28695);
                        end
                        else begin
                            if (map_var(5) == 28695) then begin
                                set_map_var(5, 18682);
                            end
                        end
                    end
                end
                LVar4 := create_object_sid(16777296, 0, 0, SCRIPT_ACGECKO);
                while (LVar5 <= 0) do begin
                    LVar5 := tile_num_in_direction(map_var(5), random(0, 5), random(0, 10));
                end
                set_map_var(1, map_var(1) + 1);
                LVar1 := LVar1 + 1;
                critter_attempt_placement(LVar4, LVar5, 0);
                LVar5 := 0;
            end
        end
    end
    LVar5 := 0;
    if (map_var(2) < 1) then begin
        LVar2 := 1;
        debug_msg("Making " + LVar2 + " new small tough Geckos.");
        while (LVar0 < LVar2) do begin
            if (map_var(5) == 0) then begin
                set_map_var(5, 18682);
            end
            else begin
                if (map_var(5) == 18682) then begin
                    set_map_var(5, 23323);
                end
                else begin
                    if (map_var(5) == 23323) then begin
                        set_map_var(5, 28695);
                    end
                    else begin
                        if (map_var(5) == 28695) then begin
                            set_map_var(5, 18682);
                        end
                    end
                end
            end
            LVar4 := create_object_sid(16777297, 0, 0, SCRIPT_ACGECKO);
            while (LVar5 <= 0) do begin
                LVar5 := tile_num_in_direction(map_var(5), random(0, 5), random(0, 10));
            end
            set_map_var(2, map_var(2) + 1);
            critter_attempt_placement(LVar4, LVar5, 0);
            LVar0 := LVar0 + 1;
            LVar5 := 0;
        end
    end
    else begin
        if ((map_var(2) >= 1) and (map_var(2) < 3)) then begin
            LVar2 := random(0, 3 - 1);
            debug_msg("Making " + LVar2 + " new small tough Geckos.");
            while (LVar0 < LVar2) do begin
                if (map_var(5) == 0) then begin
                    set_map_var(5, 18682);
                end
                else begin
                    if (map_var(5) == 18682) then begin
                        set_map_var(5, 23323);
                    end
                    else begin
                        if (map_var(5) == 23323) then begin
                            set_map_var(5, 28695);
                        end
                        else begin
                            if (map_var(5) == 28695) then begin
                                set_map_var(5, 18682);
                            end
                        end
                    end
                end
                LVar4 := create_object_sid(16777297, 0, 0, SCRIPT_ACGECKO);
                while (LVar5 <= 0) do begin
                    LVar5 := tile_num_in_direction(map_var(5), random(0, 5), random(0, 10));
                end
                set_map_var(2, map_var(2) + 1);
                critter_attempt_placement(LVar4, LVar5, 0);
                LVar0 := LVar0 + 1;
                LVar5 := 0;
            end
        end
    end
end

procedure Make_Plants
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    variable LVar3 := 0;
    variable LVar4 := 0;
    variable LVar5 := 0;
    variable LVar6 := 0;
    variable LVar7 := 0;
    variable LVar8 := 0;
    variable LVar9 := 0;
    variable LVar10 := 0;
    variable LVar11 := 0;
    LVar1 := random(2, 4);
    debug_msg("Making " + LVar1 + " new Xander Roots.");
    while (LVar0 < LVar1) do begin
        if (map_var(5) == 0) then begin
            set_map_var(5, 18682);
        end
        else begin
            if (map_var(5) == 18682) then begin
                set_map_var(5, 23323);
            end
            else begin
                if (map_var(5) == 23323) then begin
                    set_map_var(5, 28695);
                end
                else begin
                    if (map_var(5) == 28695) then begin
                        set_map_var(5, 18682);
                    end
                end
            end
        end
        LVar10 := create_object(272, 0, 0);
        LVar11 := tile_num_in_direction(map_var(5), random(0, 5), random(0, 10));
        move_to(LVar10, LVar11, 0);
        LVar0 := LVar0 + 1;
    end
    LVar3 := random(2, 4);
    debug_msg("Making " + LVar3 + " new Broc Flowers.");
    while (LVar2 < LVar3) do begin
        if (map_var(5) == 0) then begin
            set_map_var(5, 18682);
        end
        else begin
            if (map_var(5) == 18682) then begin
                set_map_var(5, 23323);
            end
            else begin
                if (map_var(5) == 23323) then begin
                    set_map_var(5, 28695);
                end
                else begin
                    if (map_var(5) == 28695) then begin
                        set_map_var(5, 18682);
                    end
                end
            end
        end
        LVar10 := create_object(271, 0, 0);
        LVar11 := tile_num_in_direction(map_var(5), random(0, 5), random(0, 10));
        move_to(LVar10, LVar11, 0);
        LVar2 := LVar2 + 1;
    end
    LVar5 := random(2, 4);
    debug_msg("Making " + LVar5 + " new Suomi.");
    while (LVar4 < LVar5) do begin
        if (map_var(5) == 0) then begin
            set_map_var(5, 18682);
        end
        else begin
            if (map_var(5) == 18682) then begin
                set_map_var(5, 23323);
            end
            else begin
                if (map_var(5) == 23323) then begin
                    set_map_var(5, 28695);
                end
                else begin
                    if (map_var(5) == 28695) then begin
                        set_map_var(5, 18682);
                    end
                end
            end
        end
        LVar10 := create_object(544, 0, 0);
        LVar11 := tile_num_in_direction(map_var(5), random(0, 5), random(0, 10));
        move_to(LVar10, LVar11, 0);
        LVar4 := LVar4 + 1;
    end
    LVar7 := random(2, 4);
    debug_msg("Making " + LVar7 + " new Hell Grass.");
    while (LVar6 < LVar7) do begin
        if (map_var(5) == 0) then begin
            set_map_var(5, 18682);
        end
        else begin
            if (map_var(5) == 18682) then begin
                set_map_var(5, 23323);
            end
            else begin
                if (map_var(5) == 23323) then begin
                    set_map_var(5, 28695);
                end
                else begin
                    if (map_var(5) == 28695) then begin
                        set_map_var(5, 18682);
                    end
                end
            end
        end
        LVar10 := create_object(548, 0, 0);
        LVar11 := tile_num_in_direction(map_var(5), random(0, 5), random(0, 10));
        move_to(LVar10, LVar11, 0);
        LVar6 := LVar6 + 1;
    end
    LVar9 := random(2, 4);
    debug_msg("Making " + LVar9 + " new Peyote.");
    while (LVar8 < LVar9) do begin
        if (map_var(5) == 0) then begin
            set_map_var(5, 18682);
        end
        else begin
            if (map_var(5) == 18682) then begin
                set_map_var(5, 23323);
            end
            else begin
                if (map_var(5) == 23323) then begin
                    set_map_var(5, 28695);
                end
                else begin
                    if (map_var(5) == 28695) then begin
                        set_map_var(5, 18682);
                    end
                end
            end
        end
        LVar10 := create_object(759, 0, 0);
        LVar11 := tile_num_in_direction(map_var(5), random(0, 5), random(0, 10));
        move_to(LVar10, LVar11, 0);
        LVar8 := LVar8 + 1;
    end
end

procedure Kill_Brat
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    variable LVar3 := 0;
    kill_critter_type(16777225, 0);
    LVar1 := create_object(16777219, 0, 0);
    LVar2 := create_object(16777297, 0, 0);
    LVar3 := create_object(7, 0, 0);
    critter_attempt_placement(LVar1, 23894, 0);
    critter_attempt_placement(LVar2, 23491, 0);
    if (map_var(7) == 0) then begin
        LVar0 := create_object(16777225, 0, 0);
        critter_attempt_placement(LVar0, 23491, 0);
    end
    anim(LVar2, 1000, rotation_to_tile(tile_num(LVar2), tile_num(LVar1)));
    add_mult_objs_to_inven(LVar1, LVar3, 1);
    kill_critter(LVar0, 62);
    kill_critter(LVar1, 62);
    kill_critter(LVar2, 61);
end
