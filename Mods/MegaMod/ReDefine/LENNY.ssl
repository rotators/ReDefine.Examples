procedure start;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure talk_p_proc;
procedure critter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure do_dialogue;
procedure Node999;
procedure Node000;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node004a;
procedure Node004b;
procedure Node005;
procedure Node006;
procedure Node006a;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure LennyCombat;

variable known;
variable hostile;
variable Only_Once := 1;
variable my_tile;
variable knowstart;

import variable know_fools;
import variable know_crypts;
import variable know_power;

procedure get_reaction;
procedure ReactToLevel;
procedure LevelToReact;
procedure UpReact;
procedure DownReact;
procedure BottomReact;
procedure TopReact;
procedure BigUpReact;
procedure BigDownReact;
procedure UpReactLevel;
procedure DownReactLevel;
procedure Goodbyes;

variable reaction := 50;
variable reaction_level := 2;
variable got_reaction;
variable badguy;
variable exit_line;


procedure start
begin
    if (local_var(0) == 0) then begin
        set_local_var(0, 1);
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 184);
        set_local_var(1, tile_num(self_obj));
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        attack(dude_obj);
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (critter_kill_type(self_obj) == 2) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(GVAR_GANG_2, global_var(GVAR_GANG_2) + -5);
                debug_msg("Added " + -5 + " to Town Rep");
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -5);
        debug_msg("Player gains " + -5 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(GVAR_GANG_2, global_var(GVAR_GANG_2) + -3);
        debug_msg("Added " + -3 + " to Town Rep");
    end
end

procedure talk_p_proc
begin
    call do_dialogue();
end

procedure critter_p_proc
begin
    if (map_var(5) == 1) then begin
        animate_move_obj_to_tile(self_obj, 19495, 0);
    end
    else begin
        if (map_var(5) == 2) then begin
            animate_move_obj_to_tile(self_obj, local_var(1), 0);
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (known == 1) then begin
        display_mstr(101);
    end
    else begin
        display_mstr(100);
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure do_dialogue
begin
    start_gdialog(1498, self_obj, 4, -1, -1);
    gsay_start;
    if (reaction_level < 2) then begin
        call Node014();
    end
    else begin
        if (known) then begin
            call Node009();
        end
        else begin
            call Node001();
        end
    end
    gsay_end;
    end_dialogue;
end

procedure Node999
begin
end

procedure Node000
begin
    known := 1;
    Reply(104);
    giq_option(4, NAME, 103, Node999, NEUTRAL_REACTION);
    call LennyCombat();
end

procedure Node001
begin
    Reply(105);
    giq_option(4, NAME, 106, Node015, NEUTRAL_REACTION);
    giq_option(4, NAME, 107, Node003, NEUTRAL_REACTION);
    giq_option(4, NAME, 108, Node002, NEUTRAL_REACTION);
end

procedure Node002
begin
    Reply(109);
    giq_option(4, NAME, 106, Node003, NEUTRAL_REACTION);
    sayReply(0, mstr(109));
end

procedure Node003
begin
    Reply(110);
    giq_option(4, NAME, 111, Node008, NEUTRAL_REACTION);
    giq_option(4, NAME, 112, Node004, NEUTRAL_REACTION);
end

procedure Node004
begin
    Reply(113);
    giq_option(4, NAME, 114, Node004a, NEUTRAL_REACTION);
    giq_option(4, NAME, 115, Node004b, NEUTRAL_REACTION);
    giq_option(4, NAME, 116, Node006, NEUTRAL_REACTION);
end

procedure Node004a
begin
    if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
        call Node005();
    end
    else begin
        call Node006();
    end
end

procedure Node004b
begin
    if (is_success(roll_vs_skill(dude_obj, 14, 20))) then begin
        call Node007();
    end
    else begin
        call Node006();
    end
end

procedure Node005
begin
    Reply(117);
    giq_option(4, NAME, 118, Node999, NEUTRAL_REACTION);
end

procedure Node006
begin
    Reply(119);
    giq_option(4, NAME, 120, Node006a, NEUTRAL_REACTION);
end

procedure Node006a
begin
    reaction_level := 1;
    call LevelToReact();
end

procedure Node007
begin
    Reply(121);
    giq_option(4, NAME, 122, Node999, NEUTRAL_REACTION);
end

procedure Node008
begin
    Reply(123);
    giq_option(4, NAME, 122, Node999, NEUTRAL_REACTION);
end

procedure Node009
begin
    Reply(124);
    if (know_fools) then begin
        giq_option(4, NAME, 125, Node010, NEUTRAL_REACTION);
    end
    if (know_crypts) then begin
        giq_option(4, NAME, 126, Node011, NEUTRAL_REACTION);
    end
    if (know_power) then begin
        giq_option(4, NAME, 127, Node012, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 128, Node999, NEUTRAL_REACTION);
end

procedure Node010
begin
    Reply(129);
    giq_option(4, NAME, 130, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 126, Node011, NEUTRAL_REACTION);
    giq_option(4, NAME, 127, Node012, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(131);
    giq_option(4, NAME, 130, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 132, Node013, NEUTRAL_REACTION);
    giq_option(4, NAME, 125, Node010, NEUTRAL_REACTION);
    giq_option(4, NAME, 127, Node012, NEUTRAL_REACTION);
end

procedure Node012
begin
    Reply(133);
    giq_option(4, NAME, 130, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 125, Node010, NEUTRAL_REACTION);
    giq_option(4, NAME, 126, Node011, NEUTRAL_REACTION);
end

procedure Node013
begin
    Reply(134);
    giq_option(4, NAME, 130, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 125, Node010, NEUTRAL_REACTION);
    giq_option(4, NAME, 126, Node011, NEUTRAL_REACTION);
    giq_option(4, NAME, 127, Node012, NEUTRAL_REACTION);
end

procedure Node014
begin
    Reply(135);
    giq_option(-4, NAME, 103, Node999, NEUTRAL_REACTION);
    call Node999();
end

procedure Node015
begin
    Reply(136);
    giq_option(4, NAME, 137, Node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 138, Node017, NEUTRAL_REACTION);
end

procedure Node016
begin
    Reply(139);
    giq_option(4, NAME, 140, Node003, NEUTRAL_REACTION);
    giq_option(4, NAME, 141, Node018, NEUTRAL_REACTION);
end

procedure Node017
begin
    Reply(142);
    giq_option(4, NAME, 130, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 143, Node003, NEUTRAL_REACTION);
end

procedure Node018
begin
    Reply(144);
    giq_option(4, NAME, 145, Node003, NEUTRAL_REACTION);
    giq_option(4, NAME, 146, Node019, NEUTRAL_REACTION);
end

procedure Node019
begin
    Reply(147);
    giq_option(4, NAME, 103, LennyCombat, NEUTRAL_REACTION);
end

procedure LennyCombat
begin
    hostile := 1;
end

procedure get_reaction
begin
    if (not(got_reaction)) then begin
        got_reaction := 1;
        reaction := reaction + ((dude_charisma - 5) * 5);
        if (badguy) then begin
            reaction := reaction - map_var(8);
        end
        else begin
            reaction := reaction + map_var(8);
        end
        if (global_var(GVAR_CHILDKILLER_REPUTATION) > 2) then begin
            reaction := reaction - 30;
        end
        if ((global_var(GVAR_BAD_MONSTER) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) then begin
            reaction := reaction + 20;
        end
        if ((global_var(GVAR_GECKO_REQ_FORM) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1)) then begin
            reaction := reaction - 20;
        end
        call ReactToLevel();
    end
end

procedure ReactToLevel
begin
    if (reaction < 24) then begin
        reaction_level := 1;
    end
    else begin
        if (reaction < 74) then begin
            reaction_level := 2;
        end
        else begin
            reaction_level := 3;
        end
    end
end

procedure LevelToReact
begin
    if (reaction_level == 1) then begin
        reaction := random(1, 24);
    end
    else begin
        if (reaction_level == 2) then begin
            reaction := random(25, 74);
        end
        else begin
            reaction := random(75, 100);
        end
    end
end

procedure UpReact
begin
    reaction := reaction + 10;
    call ReactToLevel();
end

procedure DownReact
begin
    reaction := reaction - 10;
    call ReactToLevel();
end

procedure BottomReact
begin
    reaction_level := 1;
    reaction := 1;
end

procedure TopReact
begin
    reaction := 100;
    reaction_level := 3;
end

procedure BigUpReact
begin
    reaction := reaction + 25;
    call ReactToLevel();
end

procedure BigDownReact
begin
    reaction := reaction - 25;
    call ReactToLevel();
end

procedure UpReactLevel
begin
    reaction_level := reaction_level + 1;
    if (reaction_level > 3) then begin
        reaction_level := 3;
    end
    call LevelToReact();
end

procedure DownReactLevel
begin
    reaction_level := reaction_level - 1;
    if (reaction_level < 1) then begin
        reaction_level := 1;
    end
    call LevelToReact();
end

procedure Goodbyes
begin
    variable LVar0 := 0;
    LVar0 := random(1, 6);
    if (LVar0 == 1) then begin
        exit_line := "Thanks, bye.";
    end
    if (LVar0 == 2) then begin
        exit_line := "Okay, thanks.";
    end
    if (LVar0 == 3) then begin
        exit_line := "Hmm. Bye.";
    end
    if (LVar0 == 4) then begin
        exit_line := "See ya.";
    end
    if (LVar0 == 5) then begin
        exit_line := "Thanks.";
    end
    if (LVar0 == 6) then begin
        exit_line := "Okay, bye.";
    end
    return 0;
    LVar0 := 0;
end
