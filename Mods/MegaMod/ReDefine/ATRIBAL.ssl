variable tmp_gen_rep;
variable global_temp;
variable restock_amt;
variable restock_obj;

procedure start;
procedure timed_event_p_proc;
procedure talk_p_proc;
procedure map_enter_p_proc;
procedure destroy_p_proc;
procedure pickup_p_proc;
procedure Node001;
procedure critter_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure damage_p_proc;
procedure Node999;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;


procedure start
begin
end

procedure timed_event_p_proc
begin
    if (fixed_param == 20) then begin
        rm_fixed_timer_event(self_obj, 20);
        if ((combat_is_initialized == 0) and obj_can_see_obj(self_obj, dude_obj) and (tile_distance(tile_num(self_obj), dude_tile) <= 5)) then begin
            call Node001();
        end
        add_timer_event(self_obj, game_ticks(random(5, 10) * 10), 1);
    end
end

procedure talk_p_proc
begin
    if (global_var(GVAR_REPUTATION_SLAVER) != 0) then begin
        float_msg(self_obj, mstr(600), FLOAT_MSG_RED);
    end
    else begin
        if (local_var(4) == 1) then begin
            call Node001();
        end
        else begin
            start_gdialog(1479, self_obj, 4, -1, -1);
            gsay_start;
            call Node010();
            gsay_end;
            end_dialogue;
            set_local_var(4, 1);
        end
    end
end

procedure map_enter_p_proc
begin
    add_timer_event(self_obj, game_ticks(random(5, 10) * 10), 20);
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
        if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
            tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
        end
        if (tmp_gen_rep >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (tmp_gen_rep >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (tmp_gen_rep >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (tmp_gen_rep >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(GVAR_TOWN_REP_ABBEY, global_var(GVAR_TOWN_REP_ABBEY) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (local_var(7) == 1) then begin
            set_local_var(5, 2);
            set_global_var(GVAR_TOWN_REP_ABBEY, global_var(GVAR_TOWN_REP_ABBEY) - 30);
            attack(dude_obj);
        end
        else begin
            float_msg(self_obj, mstr(500), FLOAT_MSG_RED);
            set_local_var(7, 1);
        end
    end
end

procedure Node001
begin
    float_msg(self_obj, mstr(random(200, 207)), FLOAT_MSG_YELLOW);
end

procedure critter_p_proc
begin
    if ((global_var(GVAR_TOWN_REP_ABBEY) <= -30) or (local_var(5) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
        attack(dude_obj);
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(101);
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
        set_global_var(GVAR_TOWN_REP_ABBEY, global_var(GVAR_TOWN_REP_ABBEY) - 30);
    end
end

procedure Node999
begin
end

procedure Node010
begin
    Reply(700);
    giq_option(4, NAME, mstr(701) + dude_name + mstr(702), Node012, GOOD_REACTION);
    giq_option(4, NAME, 703, Node012, NEUTRAL_REACTION);
    giq_option(6, NAME, 704, Node012, NEUTRAL_REACTION);
    giq_option(-3, NAME, mstr(705) + dude_name + mstr(706), Node011, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(710);
    giq_option(-3, NAME, 711, Node999, NEUTRAL_REACTION);
end

procedure Node012
begin
    Reply(720);
    giq_option(4, NAME, 721, Node013, NEUTRAL_REACTION);
    giq_option(4, NAME, 722, Node013, NEUTRAL_REACTION);
    giq_option(4, NAME, 723, Node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 724, Node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 725, Node999, NEUTRAL_REACTION);
end

procedure Node013
begin
    Reply(730);
    giq_option(4, NAME, 731, Node014, NEUTRAL_REACTION);
    giq_option(4, NAME, 732, Node015, NEUTRAL_REACTION);
    giq_option(4, NAME, 733, Node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 734, Node999, NEUTRAL_REACTION);
end

procedure Node014
begin
    Reply(760);
    giq_option(4, NAME, 732, Node015, NEUTRAL_REACTION);
    giq_option(4, NAME, 733, Node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 761, Node999, NEUTRAL_REACTION);
end

procedure Node015
begin
    Reply(770);
    giq_option(4, NAME, 771, Node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 731, Node014, NEUTRAL_REACTION);
    giq_option(4, NAME, 772, Node999, NEUTRAL_REACTION);
end

procedure Node016
begin
    Reply(740);
    giq_option(4, NAME, 741, Node017, NEUTRAL_REACTION);
    giq_option(4, NAME, 742, Node017, NEUTRAL_REACTION);
    giq_option(4, NAME, 743, Node999, NEUTRAL_REACTION);
end

procedure Node017
begin
    Reply(750);
    giq_option(4, NAME, 751, Node018, NEUTRAL_REACTION);
    giq_option(6, NAME, 752, Node018, NEUTRAL_REACTION);
    giq_option(4, NAME, 743, Node999, NEUTRAL_REACTION);
end

procedure Node018
begin
    Reply(755);
    giq_option(4, NAME, 756, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 757, Node999, NEUTRAL_REACTION);
end
