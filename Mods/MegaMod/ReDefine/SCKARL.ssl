procedure checkPartyMembersNearDoor;

variable tmp_gen_rep;
variable global_temp;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure Node998;
procedure Node999;
procedure anim_end_call;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure walkUnLock;
procedure walkBack;

import variable i_cell_door_obj;

variable doWalking;
variable openCloseDoor;
variable anim_flag;
variable Node1Count;

procedure timed_event_p_proc;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777718) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777718)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777719) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777719)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777720) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777720)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if ((local_var(5) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack(dude_obj);
    end
    if (anim_busy(self_obj)) then begin
        anim_flag := 1;
    end
    else begin
        if (anim_flag == 1) then begin
            anim_flag := 0;
            call anim_end_call();
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure talk_p_proc
begin
    Node1Count := 0;
    Evil_Critter := 0;
    Slavery_Tolerant := 0;
    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
    set_global_var(GVAR_KARMA_DEFENDER, 0);
    set_global_var(GVAR_KARMA_WANDERER, 0);
    set_global_var(GVAR_KARMA_BETRAYER, 0);
    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
    set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
    tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
    if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
    end
    if (tmp_gen_rep >= 1000) then begin
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
    end
    else begin
        if (tmp_gen_rep >= 750) then begin
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
        end
        else begin
            if (tmp_gen_rep >= 500) then begin
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
            end
            else begin
                if (tmp_gen_rep >= 250) then begin
                    set_global_var(GVAR_KARMA_DEFENDER, 1);
                end
                else begin
                    if (tmp_gen_rep > -250) then begin
                        set_global_var(GVAR_KARMA_WANDERER, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -500) then begin
                            set_global_var(GVAR_KARMA_BETRAYER, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -750) then begin
                                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -1000) then begin
                                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                end
                                else begin
                                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    if (local_var(2) == 0) then begin
        set_local_var(2, 1);
        set_local_var(3, (dude_charisma - self_charisma) * 5);
        debug_msg("Base Reaction == " + local_var(3));
    end
    Static_Reaction := 0;
    set_local_var(0, 0);
    debug_msg("Start Reaction == " + local_var(0));
    reaction_bonus_karma := floor(reaction_bonus_karma / 1000);
    reaction_bonus_town_rep := floor(global_var(GVAR_TOWN_REP_NCR) / 2);
    if (has_trait(TRAIT_TRAIT, dude_obj, TRAIT_sex_appeal)) then begin
        if (dude_gender == self_gender) then begin
            Static_Reaction := Static_Reaction + -20;
        end
        else begin
            Static_Reaction := Static_Reaction + 20;
        end
        debug_msg("Sex Appeal Bonus == " + Static_Reaction);
    end
    else begin
        debug_msg("Sex Appeal Bonus == 0");
    end
    if (Evil_Critter == 1) then begin
        if (reaction_bonus_karma >= 0) then begin
            Static_Reaction := Static_Reaction - reaction_bonus_karma;
        end
        else begin
            Static_Reaction := Static_Reaction + reaction_bonus_karma;
        end
        debug_msg("Karma Reaction Bonus == " + Static_Reaction);
        if (reaction_bonus_town_rep >= 0) then begin
            Static_Reaction := Static_Reaction - reaction_bonus_town_rep;
        end
        else begin
            Static_Reaction := Static_Reaction + reaction_bonus_town_rep;
        end
        debug_msg("Town Rep Bonus == " + Static_Reaction);
        if (global_var(GVAR_KARMA_HOLY_WARRIOR) == 1) then begin
            Static_Reaction := Static_Reaction - 20;
        end
        else begin
            if (global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES) == 1) then begin
                Static_Reaction := Static_Reaction - 15;
            end
            else begin
                if (global_var(GVAR_KARMA_SHIELD_OF_HOPE) == 1) then begin
                    Static_Reaction := Static_Reaction - 10;
                end
                else begin
                    if (global_var(GVAR_KARMA_DEFENDER) == 1) then begin
                        Static_Reaction := Static_Reaction - 5;
                    end
                    else begin
                        if (global_var(GVAR_KARMA_WANDERER) == 1) then begin
                            Static_Reaction := Static_Reaction - 0;
                        end
                        else begin
                            if (global_var(GVAR_KARMA_BETRAYER) == 1) then begin
                                Static_Reaction := Static_Reaction + 5;
                            end
                            else begin
                                if (global_var(GVAR_KARMA_SWORD_OF_DESPAIR) == 1) then begin
                                    Static_Reaction := Static_Reaction + 10;
                                end
                                else begin
                                    if (global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE) == 1) then begin
                                        Static_Reaction := Static_Reaction + 15;
                                    end
                                    else begin
                                        Static_Reaction := Static_Reaction + 20;
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        debug_msg("Bad Person Reaction Bonus == " + Static_Reaction);
    end
    else begin
        Static_Reaction := Static_Reaction + reaction_bonus_karma;
        debug_msg("Karma Reaction Bonus == " + Static_Reaction);
        Static_Reaction := Static_Reaction + reaction_bonus_town_rep;
        debug_msg("Town Rep Bonus == " + Static_Reaction);
        if (global_var(GVAR_KARMA_HOLY_WARRIOR) == 1) then begin
            Static_Reaction := Static_Reaction + 20;
        end
        else begin
            if (global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES) == 1) then begin
                Static_Reaction := Static_Reaction + 15;
            end
            else begin
                if (global_var(GVAR_KARMA_SHIELD_OF_HOPE) == 1) then begin
                    Static_Reaction := Static_Reaction + 10;
                end
                else begin
                    if (global_var(GVAR_KARMA_DEFENDER) == 1) then begin
                        Static_Reaction := Static_Reaction + 5;
                    end
                    else begin
                        if (global_var(GVAR_KARMA_WANDERER) == 1) then begin
                            Static_Reaction := Static_Reaction + 0;
                        end
                        else begin
                            if (global_var(GVAR_KARMA_BETRAYER) == 1) then begin
                                Static_Reaction := Static_Reaction + -5;
                            end
                            else begin
                                if (global_var(GVAR_KARMA_SWORD_OF_DESPAIR) == 1) then begin
                                    Static_Reaction := Static_Reaction + -10;
                                end
                                else begin
                                    if (global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE) == 1) then begin
                                        Static_Reaction := Static_Reaction + -15;
                                    end
                                    else begin
                                        Static_Reaction := Static_Reaction + -20;
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        debug_msg("Good Person Reaction Bonus == " + Static_Reaction);
    end
    if (Slavery_Tolerant == 0) then begin
        if (global_var(GVAR_REPUTATION_SLAVER) == 1) then begin
            Static_Reaction := Static_Reaction - 50;
        end
    end
    else begin
        if (Slavery_Tolerant == 1) then begin
            if (global_var(GVAR_REPUTATION_SLAVER) == 1) then begin
                Static_Reaction := Static_Reaction - 25;
            end
        end
        else begin
            if (Slavery_Tolerant == 3) then begin
                if (global_var(GVAR_REPUTATION_SLAVER) == 1) then begin
                    Static_Reaction := Static_Reaction + 25;
                end
            end
        end
    end
    debug_msg("Slaver + Aligned Reaction == " + Static_Reaction);
    Static_Reaction := Static_Reaction + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence));
    debug_msg("Presence Reaction == " + Static_Reaction);
    if (global_var(GVAR_CHILDKILLER_REPUTATION) >= 2) then begin
        Static_Reaction := Static_Reaction + -30;
    end
    debug_msg("Childkiller Reaction == " + Static_Reaction);
    if (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality)) then begin
        if (Evil_Critter == 1) then begin
            if (Static_Reaction > 0) then begin
                Static_Reaction := Static_Reaction * -1;
            end
        end
        else begin
            if (Static_Reaction < 0) then begin
                Static_Reaction := Static_Reaction * -1;
            end
        end
    end
    set_local_var(0, local_var(3) + Static_Reaction);
    debug_msg("Initial Reaction == " + local_var(0));
    if (local_var(0) <= -75) then begin
        set_local_var(1, -4);
    end
    else begin
        if (local_var(0) <= -50) then begin
            set_local_var(1, -3);
        end
        else begin
            if (local_var(0) <= -25) then begin
                set_local_var(1, -2);
            end
            else begin
                if (local_var(0) <= -10) then begin
                    set_local_var(1, -1);
                end
                else begin
                    if (local_var(0) <= 10) then begin
                        set_local_var(1, 0);
                    end
                    else begin
                        if (local_var(0) <= 25) then begin
                            set_local_var(1, 1);
                        end
                        else begin
                            if (local_var(0) <= 50) then begin
                                set_local_var(1, 2);
                            end
                            else begin
                                if (local_var(0) <= 75) then begin
                                    set_local_var(1, 3);
                                end
                                else begin
                                    set_local_var(1, 4);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    if (doWalking == 0) then begin
        start_gdialog(454, self_obj, 4, -1, -1);
        gsay_start;
        call Node001();
        gsay_end;
        end_dialogue;
        if (doWalking) then begin
            set_map_var(0, 1);
            call walkUnLock();
        end
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
        if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
            tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
        end
        if (tmp_gen_rep >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (tmp_gen_rep >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (tmp_gen_rep >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (tmp_gen_rep >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(GVAR_TOWN_REP_NCR, global_var(GVAR_TOWN_REP_NCR) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 0) then begin
        display_mstr(100);
    end
    else begin
        display_mstr(101);
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(102);
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 80);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_TOUGH_GUARD);
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
end

procedure anim_end_call
begin
    if (doWalking == 1) then begin
        if (i_cell_door_obj != -1) then begin
            if (openCloseDoor == 0) then begin
                debug_msg("opening door");
                obj_unlock(i_cell_door_obj);
                if (not(obj_is_open(i_cell_door_obj))) then begin
                    use_obj(i_cell_door_obj);
                end
                openCloseDoor := 1;
            end
            else begin
                debug_msg("closing door");
                if (obj_is_open(i_cell_door_obj)) then begin
                    use_obj(i_cell_door_obj);
                end
                if (obj_is_locked(i_cell_door_obj)) then begin
                    obj_unlock(i_cell_door_obj);
                end
                openCloseDoor := 0;
            end
            doWalking := 2;
        end
    end
    else begin
        if (doWalking == 2) then begin
            debug_msg("doWalk == 2");
            doWalking := 3;
            call walkBack();
            if (openCloseDoor == 0) then begin
                obj_lock(i_cell_door_obj);
            end
        end
        else begin
            if ((doWalking == 3) and (openCloseDoor == 1)) then begin
                doWalking := 0;
                add_timer_event(self_obj, game_ticks(2), 1);
            end
            else begin
                if ((doWalking == 3) and (openCloseDoor == 0)) then begin
                    doWalking := 0;
                end
            end
        end
    end
end

procedure Node001
begin
    Node1Count := Node1Count + 1;
    if (Node1Count == 1) then begin
        Reply(103);
    end
    else begin
        Reply(104);
    end
    giq_option(-3, NAME, 105, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 106, Node003, NEUTRAL_REACTION);
    if (town_known(11) < MARK_STATE_KNOWN) then begin
        giq_option(4, NAME, 107, Node004, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_NCR_TANDI_JOB_ACCEPT) == 1) and not(global_var(GVAR_NCR_GENERIC_STATE) bwand 128)) then begin
        giq_option(4, NAME, 108, Node005, NEUTRAL_REACTION);
        giq_option(-3, NAME, 153, Node005, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, mstr(109) + dude_name + mstr(152), Node006, NEUTRAL_REACTION);
    if (global_var(GVAR_NCR_MIRA_STATE) == 3) then begin
        giq_option(4, NAME, 110, Node007, BAD_REACTION);
    end
    if (((global_var(GVAR_NEWRENO_SNUFF_WESTIN) bwand 1) != 0) and not((global_var(GVAR_NEWRENO_SNUFF_WESTIN) bwand 2) != 0)) then begin
        giq_option(4, NAME, 111, Node008, NEUTRAL_REACTION);
    end
end

procedure Node002
begin
    if (party_member_count(DONT_LIST_HIDDEN_MEMBERS) > 1) then begin
        Reply(113);
    end
    else begin
        Reply(112);
    end
    giq_option(0, NAME, g_mstr(350), Node999, NEUTRAL_REACTION);
end

procedure Node003
begin
    Reply(114);
    giq_option(4, NAME, 115, Node001, NEUTRAL_REACTION);
    giq_option(4, NAME, 116, Node999, NEUTRAL_REACTION);
end

procedure Node004
begin
    Reply(117);
    giq_option(4, NAME, 118, Node001, NEUTRAL_REACTION);
    giq_option(4, NAME, 119, Node999, NEUTRAL_REACTION);
end

procedure Node005
begin
    Reply(120);
    giq_option(4, NAME, 121, Node009, NEUTRAL_REACTION);
    giq_option(4, NAME, 122, Node010, NEUTRAL_REACTION);
    giq_option(-3, NAME, 154, Node015, NEUTRAL_REACTION);
end

procedure Node006
begin
    if (local_var(1) >= 2) then begin
        set_global_var(GVAR_NCR_GENERIC_STATE, global_var(GVAR_NCR_GENERIC_STATE) bwor 1);
        Reply(123);
    end
    else begin
        set_global_var(GVAR_NCR_TANDI_WORK, 1);
        Reply(124);
    end
    giq_option(4, NAME, 125, Node001, NEUTRAL_REACTION);
    if (local_var(1) >= 2) then begin
        giq_option(4, NAME, 133, Node999, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 126, Node999, NEUTRAL_REACTION);
    end
end

procedure Node007
begin
    set_local_var(3, local_var(3) + -10);
    set_local_var(0, local_var(0) + -10);
    if (local_var(0) <= -75) then begin
        set_local_var(1, -4);
    end
    else begin
        if (local_var(0) <= -50) then begin
            set_local_var(1, -3);
        end
        else begin
            if (local_var(0) <= -25) then begin
                set_local_var(1, -2);
            end
            else begin
                if (local_var(0) <= -10) then begin
                    set_local_var(1, -1);
                end
                else begin
                    if (local_var(0) <= 10) then begin
                        set_local_var(1, 0);
                    end
                    else begin
                        if (local_var(0) <= 25) then begin
                            set_local_var(1, 1);
                        end
                        else begin
                            if (local_var(0) <= 50) then begin
                                set_local_var(1, 2);
                            end
                            else begin
                                if (local_var(0) <= 75) then begin
                                    set_local_var(1, 3);
                                end
                                else begin
                                    set_local_var(1, 4);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    Reply(127);
    giq_option(4, NAME, 128, Node011, NEUTRAL_REACTION);
    giq_option(4, NAME, 129, Node012, NEUTRAL_REACTION);
end

procedure Node008
begin
    Reply(130);
    giq_option(4, NAME, 131, Node013, NEUTRAL_REACTION);
    giq_option(4, NAME, 132, Node001, NEUTRAL_REACTION);
    giq_option(4, NAME, 133, Node999, NEUTRAL_REACTION);
end

procedure Node009
begin
    Reply(134);
    giq_option(4, NAME, 135, Node014, NEUTRAL_REACTION);
    giq_option(4, NAME, 136, Node015, NEUTRAL_REACTION);
end

procedure Node010
begin
    Reply(137);
    giq_option(4, NAME, 138, Node015, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(139);
    giq_option(4, NAME, 140, Node001, NEUTRAL_REACTION);
    giq_option(4, NAME, 141, Node999, NEUTRAL_REACTION);
end

procedure Node012
begin
    Reply(142);
    giq_option(4, NAME, 143, Node001, NEUTRAL_REACTION);
    giq_option(4, NAME, 144, Node999, NEUTRAL_REACTION);
end

procedure Node013
begin
    Reply(145);
    giq_option(4, NAME, 146, Node016, BAD_REACTION);
    giq_option(4, NAME, 147, Node999, NEUTRAL_REACTION);
end

procedure Node014
begin
    Reply(148);
    doWalking := 1;
    giq_option(0, NAME, g_mstr(350), Node999, NEUTRAL_REACTION);
end

procedure Node015
begin
    Reply(149);
    doWalking := 1;
    giq_option(0, NAME, g_mstr(350), Node999, NEUTRAL_REACTION);
end

procedure Node016
begin
    Reply(150);
    giq_option(4, NAME, 151, Node999, NEUTRAL_REACTION);
end

procedure walkUnLock
begin
    reg_anim_func(2, self_obj);
    reg_anim_func(1, 1);
    animate_move_obj_to_tile(self_obj, 16291, 0);
    reg_anim_func(3, 0);
end

procedure walkBack
begin
    reg_anim_func(2, self_obj);
    reg_anim_func(1, 1);
    animate_move_obj_to_tile(self_obj, 16697, 0);
    reg_anim_func(3, 0);
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if (obj_can_see_obj(self_obj, dude_obj) and (tile_distance_objs(self_obj, dude_obj) <= 3)) then begin
            doWalking := 1;
            call walkUnLock();
        end
        else begin
            add_timer_event(self_obj, game_ticks(2), 1);
        end
    end
    else begin
        if (fixed_param == 2) then begin
            call walkBack();
        end
    end
end
