variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure Node997;
procedure Node998;
procedure Node999;
procedure NodeBarter;
procedure BarterDrug;
procedure BarterWeapon;
procedure BarterMisc;
procedure NodeRiddle;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure Node035;
procedure Node036;
procedure Node037;
procedure Node038;
procedure Node039;
procedure Node040;
procedure Node041;
procedure Node042;
procedure Node043;
procedure Node044;
procedure Node045;
procedure Node046;
procedure Node047;
procedure Node048;
procedure Node049;
procedure Node050;
procedure Node051;
procedure Node052;
procedure SelectBag;
procedure SelectFirst;
procedure SelectSecond;
procedure SelectThird;
procedure SelectCaps;
procedure Select1;
procedure Select2;
procedure Select3;
procedure Select4;
procedure Select5;
procedure SelectWeigh;
procedure Answer1;
procedure Answer2;
procedure Answer3;
procedure CheckAnswer;
procedure NodeAngry1;
procedure NodeAngry2;
procedure NodeFailed;
procedure NodeSuccess;
procedure NodeSuccessA;
procedure NodeSuccessB;

variable Only_Once;
variable do_replace;
variable fake_num;
variable cur_num;
variable cur_weight;
variable cur_caps1;
variable cur_caps2;
variable cur_caps3;

import variable arroyo_slik_box_drug;
import variable arroyo_slik_box_weapon;
import variable arroyo_slik_box_misc;


procedure start
begin
end

procedure critter_p_proc
begin
    variable LVar0 := 0;
    if ((local_var(5) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack(dude_obj);
    end
    LVar0 := game_time_hour;
    if ((LVar0 >= 800) and (LVar0 < 2000)) then begin
        if ((tile_num(self_obj) != 18684) and not(in_dialog)) then begin
            if ((tile_num(self_obj) != 18684) and (18684 != 0)) then begin
                if ((dest_tile == 18684) and (step_tile < 0)) then begin
                    step_tile := step_tile + 1;
                end
                else begin
                    if (anim_busy(self_obj) == 0) then begin
                        dest_tile := 18684;
                        step_tile := 18684;
                        animate_move_obj_to_tile(self_obj, step_tile, 0);
                        debug_msg("move_to_point: self_tile == " + tile_num(self_obj));
                        while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), 18684) >= tile_distance(step_tile, 18684))) do begin
                            step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), 1 % tile_distance(step_tile, tile_num(self_obj)));
                            debug_msg("move_to_point: step_tile == " + step_tile);
                            animate_move_obj_to_tile(self_obj, step_tile, 0);
                        end
                        if (anim_busy(self_obj) == 0) then begin
                            if (metarule3(106, tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), elevation(self_obj), 0) != 0) then begin
                                if (anim_busy(self_obj) == 0) then begin
                                    global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                    global_temp := (global_temp + 1) % 6;
                                    while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                        debug_msg("flee loop: rot == " + global_temp);
                                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                        global_temp := (global_temp + 1) % 6;
                                    end
                                end
                            end
                            else begin
                                step_tile := -10;
                            end
                        end
                    end
                    else begin
                        if (tile_distance(tile_num(self_obj), 18684) < tile_distance(dest_tile, 18684)) then begin
                            reg_anim_func(2, self_obj);
                        end
                    end
                end
            end
        end
    end
    else begin
        if ((tile_num(self_obj) != 16480) and not(in_dialog)) then begin
            if ((tile_num(self_obj) != 16480) and (16480 != 0)) then begin
                if ((dest_tile == 16480) and (step_tile < 0)) then begin
                    step_tile := step_tile + 1;
                end
                else begin
                    if (anim_busy(self_obj) == 0) then begin
                        dest_tile := 16480;
                        step_tile := 16480;
                        animate_move_obj_to_tile(self_obj, step_tile, 0);
                        debug_msg("move_to_point: self_tile == " + tile_num(self_obj));
                        while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), 16480) >= tile_distance(step_tile, 16480))) do begin
                            step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), 1 % tile_distance(step_tile, tile_num(self_obj)));
                            debug_msg("move_to_point: step_tile == " + step_tile);
                            animate_move_obj_to_tile(self_obj, step_tile, 0);
                        end
                        if (anim_busy(self_obj) == 0) then begin
                            if (metarule3(106, tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), elevation(self_obj), 0) != 0) then begin
                                if (anim_busy(self_obj) == 0) then begin
                                    global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                    global_temp := (global_temp + 1) % 6;
                                    while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                        debug_msg("flee loop: rot == " + global_temp);
                                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                        global_temp := (global_temp + 1) % 6;
                                    end
                                end
                            end
                            else begin
                                step_tile := -10;
                            end
                        end
                    end
                    else begin
                        if (tile_distance(tile_num(self_obj), 16480) < tile_distance(dest_tile, 16480)) then begin
                            reg_anim_func(2, self_obj);
                        end
                    end
                end
            end
        end
    end
    if ((anim_busy(self_obj) == 0) and (obj_get_rot(self_obj) != 3)) then begin
        anim(self_obj, 1000, 3);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure talk_p_proc
begin
    variable LVar0 := 0;
    LVar0 := game_time_hour;
    Evil_Critter := 0;
    Slavery_Tolerant := 1;
    Karma_Perception := 10;
    if (local_var(2) == 0) then begin
        set_local_var(2, 1);
        set_local_var(3, (dude_charisma - self_charisma) * 5);
        debug_msg("Base Reaction == " + local_var(3));
    end
    Static_Reaction := 0;
    set_local_var(0, 0);
    debug_msg("Start Reaction == " + local_var(0));
    if (reaction_bonus_karma >= 0) then begin
        reaction_bonus_karma := reaction_bonus_karma / 1000;
    end
    else begin
        reaction_bonus_karma := -1 * (-1 * reaction_bonus_karma / 1000);
    end
    if (global_var(GVAR_TOWN_REP_ARROYO) >= 0) then begin
        reaction_bonus_town_rep := global_var(GVAR_TOWN_REP_ARROYO) / 2;
    end
    else begin
        reaction_bonus_town_rep := -1 * (-1 * global_var(GVAR_TOWN_REP_ARROYO) / 2);
    end
    if (has_trait(TRAIT_TRAIT, dude_obj, TRAIT_sex_appeal)) then begin
        if (dude_gender == self_gender) then begin
            Static_Reaction := Static_Reaction + -20;
        end
        else begin
            Static_Reaction := Static_Reaction + 20;
        end
        debug_msg("Sex Appeal Bonus == " + Static_Reaction);
    end
    else begin
        debug_msg("Sex Appeal Bonus == 0");
    end
    if (Evil_Critter == 1) then begin
        Static_Reaction := Static_Reaction - reaction_bonus_karma;
        debug_msg("Karma Reaction Bonus == " + Static_Reaction);
        Static_Reaction := Static_Reaction - reaction_bonus_town_rep;
        debug_msg("Town Rep Bonus == " + Static_Reaction);
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (global_var(GVAR_KARMA_HOLY_WARRIOR) == 1) then begin
            Static_Reaction := Static_Reaction - 20;
        end
        else begin
            if (global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES) == 1) then begin
                Static_Reaction := Static_Reaction - 15;
            end
            else begin
                if (global_var(GVAR_KARMA_SHIELD_OF_HOPE) == 1) then begin
                    Static_Reaction := Static_Reaction - 10;
                end
                else begin
                    if (global_var(GVAR_KARMA_DEFENDER) == 1) then begin
                        Static_Reaction := Static_Reaction - 5;
                    end
                    else begin
                        if (global_var(GVAR_KARMA_WANDERER) == 1) then begin
                            Static_Reaction := Static_Reaction - 0;
                        end
                        else begin
                            if (global_var(GVAR_KARMA_BETRAYER) == 1) then begin
                                Static_Reaction := Static_Reaction - -5;
                            end
                            else begin
                                if (global_var(GVAR_KARMA_SWORD_OF_DESPAIR) == 1) then begin
                                    Static_Reaction := Static_Reaction - -10;
                                end
                                else begin
                                    if (global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE) == 1) then begin
                                        Static_Reaction := Static_Reaction - -15;
                                    end
                                    else begin
                                        Static_Reaction := Static_Reaction - -20;
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        debug_msg("Bad Person Reaction Bonus == " + Static_Reaction);
    end
    else begin
        Static_Reaction := Static_Reaction + reaction_bonus_karma;
        debug_msg("Karma Reaction Bonus == " + Static_Reaction);
        Static_Reaction := Static_Reaction + reaction_bonus_town_rep;
        debug_msg("Town Rep Bonus == " + Static_Reaction);
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (global_var(GVAR_KARMA_HOLY_WARRIOR) == 1) then begin
            Static_Reaction := Static_Reaction + 20;
        end
        else begin
            if (global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES) == 1) then begin
                Static_Reaction := Static_Reaction + 15;
            end
            else begin
                if (global_var(GVAR_KARMA_SHIELD_OF_HOPE) == 1) then begin
                    Static_Reaction := Static_Reaction + 10;
                end
                else begin
                    if (global_var(GVAR_KARMA_DEFENDER) == 1) then begin
                        Static_Reaction := Static_Reaction + 5;
                    end
                    else begin
                        if (global_var(GVAR_KARMA_WANDERER) == 1) then begin
                            Static_Reaction := Static_Reaction + 0;
                        end
                        else begin
                            if (global_var(GVAR_KARMA_BETRAYER) == 1) then begin
                                Static_Reaction := Static_Reaction + -5;
                            end
                            else begin
                                if (global_var(GVAR_KARMA_SWORD_OF_DESPAIR) == 1) then begin
                                    Static_Reaction := Static_Reaction + -10;
                                end
                                else begin
                                    if (global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE) == 1) then begin
                                        Static_Reaction := Static_Reaction + -15;
                                    end
                                    else begin
                                        Static_Reaction := Static_Reaction + -20;
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        debug_msg("Good Person Reaction Bonus == " + Static_Reaction);
    end
    if (Slavery_Tolerant == 0) then begin
        if (global_var(GVAR_REPUTATION_SLAVER) == 1) then begin
            Static_Reaction := Static_Reaction + (2 * -25);
        end
    end
    else begin
        if (Slavery_Tolerant == 1) then begin
            if (global_var(GVAR_REPUTATION_SLAVER) == 1) then begin
                Static_Reaction := Static_Reaction + -25;
            end
        end
        else begin
            if (Slavery_Tolerant == 3) then begin
                if (global_var(GVAR_REPUTATION_SLAVER) == 1) then begin
                    Static_Reaction := Static_Reaction - -25;
                end
            end
        end
    end
    debug_msg("Slaver + Aligned Reaction == " + Static_Reaction);
    Static_Reaction := Static_Reaction + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence));
    debug_msg("Presence Reaction == " + Static_Reaction);
    if (global_var(GVAR_CHILDKILLER_REPUTATION) >= 2) then begin
        Static_Reaction := Static_Reaction + -30;
    end
    debug_msg("Childkiller Reaction == " + Static_Reaction);
    set_local_var(0, local_var(3) + Static_Reaction);
    debug_msg("Initial Reaction == " + local_var(0));
    in_dialog := 1;
    if (local_var(6) == 1) then begin
        float_msg(self_obj, mstr(105), 8 + ((2 - 8) * has_trait(TRAIT_PERK, dude_obj, PERK_empathy)));
    end
    else begin
        if (local_var(4) == 0) then begin
            start_gdialog(1349, self_obj, 4, -1, -1);
            gsay_start;
            if (dude_iq == 1) then begin
                if (local_var(1) <= -2) then begin
                    call Node001();
                end
                else begin
                    call Node004();
                end
            end
            else begin
                if (local_var(1) <= -2) then begin
                    call Node008();
                end
                else begin
                    call Node015();
                end
            end
            gsay_end;
            end_dialogue;
            set_local_var(4, 1);
        end
        else begin
            if ((LVar0 >= 2000) or (LVar0 < 800)) then begin
                start_gdialog(1349, self_obj, 4, -1, -1);
                gsay_start;
                if ((local_var(1) <= -2) or (dude_iq == 1)) then begin
                    call Node014();
                end
                else begin
                    call Node050();
                end
                gsay_end;
                end_dialogue;
            end
            else begin
                if (local_var(1) <= -2) then begin
                    start_gdialog(1349, self_obj, 4, -1, -1);
                    gsay_start;
                    if (dude_iq == 1) then begin
                        call Node003();
                    end
                    else begin
                        call Node013();
                    end
                    gsay_end;
                    end_dialogue;
                end
                else begin
                    start_gdialog(1349, self_obj, 4, -1, -1);
                    gsay_start;
                    if (dude_iq == 1) then begin
                        call Node007();
                    end
                    else begin
                        call Node048();
                    end
                    gsay_end;
                    end_dialogue;
                end
            end
        end
    end
    if (do_replace == 1) then begin
        do_replace := 0;
        move_obj_inven_to_obj(self_obj, arroyo_slik_box_drug);
    end
    else begin
        if (do_replace == 2) then begin
            do_replace := 0;
            move_obj_inven_to_obj(self_obj, arroyo_slik_box_weapon);
        end
        else begin
            if (do_replace == 3) then begin
                do_replace := 0;
                move_obj_inven_to_obj(self_obj, arroyo_slik_box_misc);
            end
        end
    end
    in_dialog := 0;
end

procedure destroy_p_proc
begin
    move_obj_inven_to_obj(arroyo_slik_box_drug, self_obj);
    move_obj_inven_to_obj(arroyo_slik_box_weapon, self_obj);
    move_obj_inven_to_obj(arroyo_slik_box_misc, self_obj);
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (critter_kill_type(self_obj) == 2) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(GVAR_TOWN_REP_ARROYO, global_var(GVAR_TOWN_REP_ARROYO) + -8);
                debug_msg("Added " + -8 + " to Town Rep");
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(GVAR_TOWN_REP_ARROYO, global_var(GVAR_TOWN_REP_ARROYO) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure description_p_proc
begin
    script_overrides;
    if ((dude_iq >= 4) and (dude_perception < 8)) then begin
        display_mstr(101);
    end
    else begin
        if ((dude_iq >= 4) and (dude_perception >= 8)) then begin
            display_mstr(102);
        end
        else begin
            if (dude_is_stupid) then begin
                display_mstr(103);
            end
        end
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(6, 1);
        set_global_var(GVAR_ENEMY_ARROYO, 1);
    end
end

procedure map_enter_p_proc
begin
    variable LVar0 := 0;
    Only_Once := 0;
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 1);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_ARROYO_VILLAGER);
    LVar0 := game_time_hour;
    if ((LVar0 >= 800) and (LVar0 < 2000)) then begin
        move_to(self_obj, 18684, 0);
        anim(self_obj, 1000, 3);
    end
    else begin
        move_to(self_obj, 16480, 0);
        anim(self_obj, 1000, 3);
    end
end

procedure Node997
begin
    set_local_var(1, -4);
    set_local_var(3, -100);
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
end

procedure NodeBarter
begin
    Reply(492);
    giq_option(4, NAME, 494, BarterDrug, NEUTRAL_REACTION);
    giq_option(-3, NAME, 496, BarterDrug, NEUTRAL_REACTION);
    giq_option(4, NAME, 498, BarterWeapon, NEUTRAL_REACTION);
    giq_option(-3, NAME, 500, BarterWeapon, NEUTRAL_REACTION);
    giq_option(4, NAME, 502, BarterMisc, NEUTRAL_REACTION);
    giq_option(-3, NAME, 504, BarterMisc, NEUTRAL_REACTION);
    giq_option(4, NAME, 506, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 508, Node999, NEUTRAL_REACTION);
end

procedure BarterDrug
begin
    do_replace := 1;
    move_obj_inven_to_obj(arroyo_slik_box_drug, self_obj);
    gdialog_barter;
    gsay_message(NAME, " ", NEUTRAL_REACTION);
end

procedure BarterWeapon
begin
    do_replace := 2;
    move_obj_inven_to_obj(arroyo_slik_box_weapon, self_obj);
    gdialog_barter;
    gsay_message(NAME, " ", NEUTRAL_REACTION);
end

procedure BarterMisc
begin
    do_replace := 3;
    move_obj_inven_to_obj(arroyo_slik_box_misc, self_obj);
    gdialog_barter;
    gsay_message(NAME, " ", NEUTRAL_REACTION);
end

procedure NodeRiddle
begin
    set_local_var(7, 1);
    fake_num := random(1, 3);
    cur_num := 0;
    cur_weight := 0;
    cur_caps1 := 5;
    cur_caps2 := 5;
    cur_caps3 := 5;
    call SelectBag();
end

procedure Node001
begin
    if (dude_gender == 0) then begin
        Reply(110);
    end
    else begin
        Reply(111);
    end
    giq_option(1, NAME, 112, Node002, NEUTRAL_REACTION);
    giq_option(1, NAME, 114, Node002, NEUTRAL_REACTION);
    giq_option(1, NAME, 116, Node999, NEUTRAL_REACTION);
end

procedure Node002
begin
    Reply(118);
    giq_option(1, NAME, 120, Node999, NEUTRAL_REACTION);
end

procedure Node003
begin
    gsay_message(NAME, 122, NEUTRAL_REACTION);
end

procedure Node004
begin
    if (dude_gender == 0) then begin
        Reply(124);
    end
    else begin
        Reply(125);
    end
    giq_option(1, NAME, 126, Node005, NEUTRAL_REACTION);
    giq_option(1, NAME, 128, Node005, NEUTRAL_REACTION);
    giq_option(1, NAME, 130, Node999, NEUTRAL_REACTION);
end

procedure Node005
begin
    Reply(132);
    giq_option(1, NAME, 134, Node006, NEUTRAL_REACTION);
    giq_option(1, NAME, 136, Node999, NEUTRAL_REACTION);
end

procedure Node006
begin
    if (town_known(2) == 0) then begin
        debug_msg("  mark_on_map(" + 2 + ")");
        mark_area_known(0, 2, 1);
    end
    gsay_message(NAME, 138, NEUTRAL_REACTION);
end

procedure Node007
begin
    if (dude_gender == 0) then begin
        Reply(140);
    end
    else begin
        Reply(142);
    end
    giq_option(1, NAME, 144, Node005, NEUTRAL_REACTION);
    giq_option(1, NAME, 146, Node999, NEUTRAL_REACTION);
end

procedure Node008
begin
    if (dude_gender == 0) then begin
        Reply(148);
    end
    else begin
        Reply(150);
    end
    giq_option(4, NAME, 152, Node010, NEUTRAL_REACTION);
    giq_option(-3, NAME, 154, Node010, NEUTRAL_REACTION);
    giq_option(4, NAME, 156, Node009, BAD_REACTION);
    giq_option(-3, NAME, 158, Node009, BAD_REACTION);
    giq_option(4, NAME, 160, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 162, Node999, NEUTRAL_REACTION);
end

procedure Node009
begin
    set_local_var(1, -4);
    set_local_var(3, -100);
    Reply(164);
    giq_option(4, NAME, 166, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 168, Node999, NEUTRAL_REACTION);
end

procedure Node010
begin
    Reply(170);
    giq_option(4, NAME, 172, Node011, NEUTRAL_REACTION);
    giq_option(-3, NAME, 174, Node011, NEUTRAL_REACTION);
    giq_option(4, NAME, 176, Node012, BAD_REACTION);
    giq_option(-3, NAME, 178, Node012, BAD_REACTION);
    giq_option(4, NAME, 180, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 182, Node999, NEUTRAL_REACTION);
end

procedure Node011
begin
    if (dude_gender == 0) then begin
        Reply(184);
    end
    else begin
        Reply(186);
    end
    giq_option(4, NAME, 188, Node012, NEUTRAL_REACTION);
    giq_option(-3, NAME, 190, Node012, NEUTRAL_REACTION);
    giq_option(4, NAME, 192, Node997, BAD_REACTION);
    giq_option(-3, NAME, 194, Node997, BAD_REACTION);
    giq_option(4, NAME, 196, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 198, Node999, NEUTRAL_REACTION);
end

procedure Node012
begin
    Reply(200);
    giq_option(4, NAME, 202, Node997, BAD_REACTION);
    giq_option(-3, NAME, 204, Node997, BAD_REACTION);
    giq_option(4, NAME, 206, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 208, Node999, NEUTRAL_REACTION);
end

procedure Node013
begin
    gsay_message(NAME, 210, NEUTRAL_REACTION);
end

procedure Node014
begin
    gsay_message(NAME, 212, NEUTRAL_REACTION);
end

procedure Node015
begin
    if (dude_gender == 0) then begin
        Reply(214);
    end
    else begin
        Reply(216);
    end
    giq_option(4, NAME, 218, Node016, NEUTRAL_REACTION);
    giq_option(-3, NAME, 220, Node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 222, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 224, Node999, NEUTRAL_REACTION);
end

procedure Node016
begin
    Reply(226);
    giq_option(4, NAME, 228, Node018, NEUTRAL_REACTION);
    giq_option(-3, NAME, 230, Node018, NEUTRAL_REACTION);
    giq_option(4, NAME, 232, Node018, NEUTRAL_REACTION);
    giq_option(-3, NAME, 234, Node018, NEUTRAL_REACTION);
    giq_option(4, NAME, 236, Node017, BAD_REACTION);
    giq_option(-3, NAME, 238, Node017, BAD_REACTION);
end

procedure Node017
begin
    set_local_var(1, -4);
    set_local_var(3, -100);
    gsay_message(NAME, 240, NEUTRAL_REACTION);
end

procedure Node018
begin
    Reply(242);
    giq_option(8, NAME, 244, Node019, NEUTRAL_REACTION);
    giq_option(4, NAME, 246, Node020, NEUTRAL_REACTION);
    giq_option(-3, NAME, 248, Node020, NEUTRAL_REACTION);
    giq_option(4, NAME, 250, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 252, Node999, NEUTRAL_REACTION);
end

procedure Node019
begin
    Reply(254);
    giq_option(8, NAME, 256, Node020, NEUTRAL_REACTION);
    giq_option(8, NAME, 260, Node999, NEUTRAL_REACTION);
end

procedure Node020
begin
    Reply(264);
    giq_option(-3, NAME, 266, Node025, NEUTRAL_REACTION);
    giq_option(4, NAME, 278, Node021, NEUTRAL_REACTION);
    giq_option(4, NAME, 280, Node022, NEUTRAL_REACTION);
    giq_option(4, NAME, 282, Node023, NEUTRAL_REACTION);
    giq_option(4, NAME, 284, Node024, NEUTRAL_REACTION);
end

procedure Node021
begin
    Reply(268);
    giq_option(4, NAME, 280, Node022, NEUTRAL_REACTION);
    giq_option(4, NAME, 282, Node023, NEUTRAL_REACTION);
    giq_option(4, NAME, 284, Node024, NEUTRAL_REACTION);
    giq_option(4, NAME, 286, Node026, NEUTRAL_REACTION);
    giq_option(4, NAME, 288, Node999, NEUTRAL_REACTION);
end

procedure Node022
begin
    Reply(270);
    giq_option(4, NAME, 278, Node021, NEUTRAL_REACTION);
    giq_option(4, NAME, 282, Node023, NEUTRAL_REACTION);
    giq_option(4, NAME, 284, Node024, NEUTRAL_REACTION);
    giq_option(4, NAME, 286, Node026, NEUTRAL_REACTION);
    giq_option(4, NAME, 288, Node999, NEUTRAL_REACTION);
end

procedure Node023
begin
    Reply(272);
    giq_option(4, NAME, 278, Node021, NEUTRAL_REACTION);
    giq_option(4, NAME, 280, Node022, NEUTRAL_REACTION);
    giq_option(4, NAME, 284, Node024, NEUTRAL_REACTION);
    giq_option(4, NAME, 286, Node026, NEUTRAL_REACTION);
    giq_option(4, NAME, 288, Node999, NEUTRAL_REACTION);
end

procedure Node024
begin
    if (town_known(2) == 0) then begin
        debug_msg("  mark_on_map(" + 2 + ")");
        mark_area_known(0, 2, 1);
    end
    Reply(274);
    giq_option(4, NAME, 278, Node021, NEUTRAL_REACTION);
    giq_option(4, NAME, 280, Node022, NEUTRAL_REACTION);
    giq_option(4, NAME, 282, Node023, NEUTRAL_REACTION);
    giq_option(4, NAME, 286, Node026, NEUTRAL_REACTION);
    giq_option(4, NAME, 288, Node999, NEUTRAL_REACTION);
end

procedure Node025
begin
    if (town_known(2) == 0) then begin
        debug_msg("  mark_on_map(" + 2 + ")");
        mark_area_known(0, 2, 1);
    end
    Reply(290);
    giq_option(-3, NAME, 292, Node026, NEUTRAL_REACTION);
    giq_option(-3, NAME, 294, Node999, NEUTRAL_REACTION);
end

procedure Node026
begin
    Reply(296);
    giq_option(4, NAME, 298, Node020, NEUTRAL_REACTION);
    giq_option(-3, NAME, 300, Node020, NEUTRAL_REACTION);
    giq_option(4, NAME, 302, Node027, NEUTRAL_REACTION);
    giq_option(-3, NAME, 304, Node027, NEUTRAL_REACTION);
    if (global_var(GVAR_ARROYO_SPEAR) == 2) then begin
        giq_option(4, NAME, 306, Node049, NEUTRAL_REACTION);
        giq_option(-3, NAME, 308, Node049, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 310, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 312, Node999, NEUTRAL_REACTION);
end

procedure Node027
begin
    Reply(314);
    giq_option(4, NAME, 316, Node028, NEUTRAL_REACTION);
    giq_option(-3, NAME, 318, Node028, NEUTRAL_REACTION);
    giq_option(4, NAME, 320, Node029, NEUTRAL_REACTION);
    giq_option(-3, NAME, 322, Node029, NEUTRAL_REACTION);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 324, Node030, NEUTRAL_REACTION);
        giq_option(-3, NAME, 326, Node030, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 328, Node031, NEUTRAL_REACTION);
    giq_option(-3, NAME, 330, Node031, NEUTRAL_REACTION);
    giq_option(4, NAME, 332, Node026, NEUTRAL_REACTION);
    giq_option(-3, NAME, 334, Node026, NEUTRAL_REACTION);
    giq_option(4, NAME, 336, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 338, Node999, NEUTRAL_REACTION);
end

procedure Node028
begin
    Reply(340);
    giq_option(4, NAME, 352, Node027, NEUTRAL_REACTION);
    giq_option(-3, NAME, 354, Node027, NEUTRAL_REACTION);
    giq_option(4, NAME, 356, Node026, NEUTRAL_REACTION);
    giq_option(-3, NAME, 358, Node026, NEUTRAL_REACTION);
    giq_option(4, NAME, 360, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 362, Node999, NEUTRAL_REACTION);
end

procedure Node029
begin
    Reply(342);
    giq_option(4, NAME, 352, Node027, NEUTRAL_REACTION);
    giq_option(-3, NAME, 354, Node027, NEUTRAL_REACTION);
    giq_option(4, NAME, 356, Node026, NEUTRAL_REACTION);
    giq_option(-3, NAME, 358, Node026, NEUTRAL_REACTION);
    giq_option(4, NAME, 360, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 362, Node999, NEUTRAL_REACTION);
end

procedure Node030
begin
    Reply(344);
    giq_option(4, NAME, 352, Node027, NEUTRAL_REACTION);
    giq_option(-3, NAME, 354, Node027, NEUTRAL_REACTION);
    giq_option(4, NAME, 356, Node026, NEUTRAL_REACTION);
    giq_option(-3, NAME, 358, Node026, NEUTRAL_REACTION);
    giq_option(4, NAME, 360, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 362, Node999, NEUTRAL_REACTION);
end

procedure Node031
begin
    Reply(346);
    giq_option(4, NAME, 348, Node032, NEUTRAL_REACTION);
    giq_option(4, NAME, 350, NodeBarter, NEUTRAL_REACTION);
    giq_option(-3, NAME, 351, NodeBarter, NEUTRAL_REACTION);
    giq_option(4, NAME, 352, Node027, NEUTRAL_REACTION);
    giq_option(-3, NAME, 354, Node027, NEUTRAL_REACTION);
    giq_option(4, NAME, 356, Node026, NEUTRAL_REACTION);
    giq_option(-3, NAME, 358, Node026, NEUTRAL_REACTION);
    giq_option(4, NAME, 360, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 362, Node999, NEUTRAL_REACTION);
end

procedure Node032
begin
    Reply(364);
    giq_option(4, NAME, 366, Node033, NEUTRAL_REACTION);
    giq_option(4, NAME, 368, Node999, NEUTRAL_REACTION);
end

procedure Node033
begin
    Reply(370);
    giq_option(4, NAME, 372, Node034, NEUTRAL_REACTION);
end

procedure Node034
begin
    Reply(374);
    giq_option(4, NAME, 378, Node035, NEUTRAL_REACTION);
end

procedure Node035
begin
    Reply(380);
    giq_option(4, NAME, 382, Node036, NEUTRAL_REACTION);
    giq_option(4, NAME, 384, Node026, NEUTRAL_REACTION);
end

procedure Node036
begin
    Reply(386);
    giq_option(4, NAME, 388, Node037, NEUTRAL_REACTION);
end

procedure Node037
begin
    Reply(390);
    giq_option(4, NAME, 392, Node038, NEUTRAL_REACTION);
    giq_option(4, NAME, 394, Node026, NEUTRAL_REACTION);
end

procedure Node038
begin
    Reply(396);
    if ((local_var(7) == 0) and (has_skill(dude_obj, SKILL_BARTER) <= 60) and (dude_charisma >= 8)) then begin
        giq_option(4, NAME, 398, Node039, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 399, Node052, NEUTRAL_REACTION);
    giq_option(4, NAME, 400, Node026, NEUTRAL_REACTION);
    giq_option(4, NAME, 402, Node999, NEUTRAL_REACTION);
end

procedure Node039
begin
    Reply(404);
    giq_option(4, NAME, 406, Node040, NEUTRAL_REACTION);
    giq_option(4, NAME, 408, Node999, NEUTRAL_REACTION);
end

procedure Node040
begin
    Reply(410);
    giq_option(4, NAME, 412, Node041, NEUTRAL_REACTION);
    giq_option(4, NAME, 414, Node999, NEUTRAL_REACTION);
end

procedure Node041
begin
    Reply(416);
    giq_option(4, NAME, 418, Node042, NEUTRAL_REACTION);
    giq_option(4, NAME, 420, Node999, NEUTRAL_REACTION);
end

procedure Node042
begin
    Reply(422);
    giq_option(4, NAME, 424, Node043, NEUTRAL_REACTION);
    giq_option(4, NAME, 426, Node999, NEUTRAL_REACTION);
end

procedure Node043
begin
    Reply(428);
    giq_option(4, NAME, 430, Node044, NEUTRAL_REACTION);
end

procedure Node044
begin
    Reply(432);
    giq_option(4, NAME, 434, Node045, NEUTRAL_REACTION);
end

procedure Node045
begin
    Reply(436);
    giq_option(4, NAME, 438, Node046, NEUTRAL_REACTION);
end

procedure Node046
begin
    Reply(440);
    giq_option(4, NAME, 442, Node047, NEUTRAL_REACTION);
end

procedure Node047
begin
    Reply(444);
    giq_option(4, NAME, 446, NodeRiddle, NEUTRAL_REACTION);
    giq_option(4, NAME, 448, Node999, NEUTRAL_REACTION);
end

procedure Node048
begin
    if (dude_gender == 0) then begin
        Reply(450);
    end
    else begin
        Reply(452);
    end
    giq_option(4, NAME, 476, Node026, NEUTRAL_REACTION);
    giq_option(-3, NAME, 478, Node026, NEUTRAL_REACTION);
    giq_option(4, NAME, 480, NodeBarter, NEUTRAL_REACTION);
    giq_option(-3, NAME, 482, NodeBarter, NEUTRAL_REACTION);
    giq_option(4, NAME, 484, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 486, Node999, NEUTRAL_REACTION);
end

procedure Node049
begin
    set_global_var(GVAR_RNDSHAMAN_ENC, 1);
    Reply(454);
    giq_option(4, NAME, 456, Node026, NEUTRAL_REACTION);
    giq_option(-3, NAME, 458, Node026, NEUTRAL_REACTION);
end

procedure Node050
begin
    if (dude_gender == 0) then begin
        Reply(460);
    end
    else begin
        Reply(462);
    end
    giq_option(4, NAME, 464, Node051, NEUTRAL_REACTION);
    giq_option(-3, NAME, 468, Node051, NEUTRAL_REACTION);
    giq_option(4, NAME, 470, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 472, Node999, NEUTRAL_REACTION);
end

procedure Node051
begin
    Reply(474);
    giq_option(4, NAME, 476, Node026, NEUTRAL_REACTION);
    giq_option(-3, NAME, 478, Node026, NEUTRAL_REACTION);
    giq_option(4, NAME, 480, NodeBarter, NEUTRAL_REACTION);
    giq_option(-3, NAME, 482, NodeBarter, NEUTRAL_REACTION);
    giq_option(4, NAME, 484, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 486, Node999, NEUTRAL_REACTION);
end

procedure Node052
begin
    if (town_known(18) == 0) then begin
        debug_msg("  mark_on_map(" + 18 + ")");
        mark_area_known(0, 18, 1);
    end
    Reply(700);
    giq_option(4, NAME, 702, Node026, NEUTRAL_REACTION);
    giq_option(4, NAME, 704, Node999, NEUTRAL_REACTION);
end

procedure SelectBag
begin
    Reply(600);
    giq_option(4, NAME, 601, SelectFirst, NEUTRAL_REACTION);
    giq_option(4, NAME, 602, SelectSecond, NEUTRAL_REACTION);
    giq_option(4, NAME, 603, SelectThird, NEUTRAL_REACTION);
    giq_option(4, NAME, 604, SelectWeigh, NEUTRAL_REACTION);
    giq_option(4, NAME, 605, Node999, NEUTRAL_REACTION);
end

procedure SelectFirst
begin
    cur_num := 1;
    call SelectCaps();
end

procedure SelectSecond
begin
    cur_num := 2;
    call SelectCaps();
end

procedure SelectThird
begin
    cur_num := 3;
    call SelectCaps();
end

procedure SelectCaps
begin
    Reply(606);
    if ((cur_num == 1) and (cur_caps1 >= 1) or ((cur_num == 2) and (cur_caps2 >= 1)) or ((cur_num == 3) and (cur_caps3 >= 1))) then begin
        giq_option(4, NAME, 607, Select1, NEUTRAL_REACTION);
    end
    if ((cur_num == 1) and (cur_caps1 >= 2) or ((cur_num == 2) and (cur_caps2 >= 2)) or ((cur_num == 3) and (cur_caps3 >= 2))) then begin
        giq_option(4, NAME, 608, Select2, NEUTRAL_REACTION);
    end
    if ((cur_num == 1) and (cur_caps1 >= 3) or ((cur_num == 2) and (cur_caps2 >= 3)) or ((cur_num == 3) and (cur_caps3 >= 3))) then begin
        giq_option(4, NAME, 609, Select3, NEUTRAL_REACTION);
    end
    if ((cur_num == 1) and (cur_caps1 >= 4) or ((cur_num == 2) and (cur_caps2 >= 4)) or ((cur_num == 3) and (cur_caps3 >= 4))) then begin
        giq_option(4, NAME, 610, Select4, NEUTRAL_REACTION);
    end
    if ((cur_num == 1) and (cur_caps1 >= 5) or ((cur_num == 2) and (cur_caps2 >= 5)) or ((cur_num == 3) and (cur_caps3 >= 5))) then begin
        giq_option(4, NAME, 611, Select5, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 612, SelectBag, NEUTRAL_REACTION);
    giq_option(4, NAME, 613, SelectWeigh, NEUTRAL_REACTION);
    giq_option(4, NAME, 614, NodeRiddle, NEUTRAL_REACTION);
    giq_option(4, NAME, 615, Node999, NEUTRAL_REACTION);
end

procedure Select1
begin
    if (cur_num == 1) then begin
        cur_caps1 := cur_caps1 - 1;
    end
    else begin
        if (cur_num == 2) then begin
            cur_caps2 := cur_caps2 - 1;
        end
        else begin
            if (cur_num == 3) then begin
                cur_caps3 := cur_caps3 - 1;
            end
        end
    end
    cur_weight := cur_weight + (2 + (cur_num != fake_num));
    call SelectBag();
end

procedure Select2
begin
    if (cur_num == 1) then begin
        cur_caps1 := cur_caps1 - 2;
    end
    else begin
        if (cur_num == 2) then begin
            cur_caps2 := cur_caps2 - 2;
        end
        else begin
            if (cur_num == 3) then begin
                cur_caps3 := cur_caps3 - 2;
            end
        end
    end
    cur_weight := cur_weight + (2 * (2 + (cur_num != fake_num)));
    call SelectBag();
end

procedure Select3
begin
    if (cur_num == 1) then begin
        cur_caps1 := cur_caps1 - 3;
    end
    else begin
        if (cur_num == 2) then begin
            cur_caps2 := cur_caps2 - 3;
        end
        else begin
            if (cur_num == 3) then begin
                cur_caps3 := cur_caps3 - 3;
            end
        end
    end
    cur_weight := cur_weight + (3 * (2 + (cur_num != fake_num)));
    call SelectBag();
end

procedure Select4
begin
    if (cur_num == 1) then begin
        cur_caps1 := cur_caps1 - 4;
    end
    else begin
        if (cur_num == 2) then begin
            cur_caps2 := cur_caps2 - 4;
        end
        else begin
            if (cur_num == 3) then begin
                cur_caps3 := cur_caps3 - 4;
            end
        end
    end
    cur_weight := cur_weight + (4 * (2 + (cur_num != fake_num)));
    call SelectBag();
end

procedure Select5
begin
    if (cur_num == 1) then begin
        cur_caps1 := cur_caps1 - 5;
    end
    else begin
        if (cur_num == 2) then begin
            cur_caps2 := cur_caps2 - 5;
        end
        else begin
            if (cur_num == 3) then begin
                cur_caps3 := cur_caps3 - 5;
            end
        end
    end
    cur_weight := cur_weight + (5 * (2 + (cur_num != fake_num)));
    call SelectBag();
end

procedure SelectWeigh
begin
    Reply(mstr(616) + cur_weight + mstr(617));
    giq_option(4, NAME, 618, Answer1, NEUTRAL_REACTION);
    giq_option(4, NAME, 619, Answer2, NEUTRAL_REACTION);
    giq_option(4, NAME, 620, Answer3, NEUTRAL_REACTION);
    giq_option(4, NAME, 621, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 622, Node999, NEUTRAL_REACTION);
end

procedure Answer1
begin
    cur_num := 1;
    call CheckAnswer();
end

procedure Answer2
begin
    cur_num := 2;
    call CheckAnswer();
end

procedure Answer3
begin
    cur_num := 3;
    call CheckAnswer();
end

procedure CheckAnswer
begin
    if (cur_weight == 0) then begin
        call NodeAngry1();
    end
    else begin
        if ((cur_num == fake_num) and ((cur_caps1 == cur_caps2) or (cur_caps1 == cur_caps3) or (cur_caps2 == cur_caps3))) then begin
            call NodeAngry2();
        end
        else begin
            if (cur_num != fake_num) then begin
                call NodeFailed();
            end
            else begin
                if (cur_num == fake_num) then begin
                    call NodeSuccess();
                end
            end
        end
    end
end

procedure NodeAngry1
begin
    if (dude_gender == 0) then begin
        gsay_message(NAME, 630, NEUTRAL_REACTION);
    end
    else begin
        gsay_message(NAME, 631, NEUTRAL_REACTION);
    end
end

procedure NodeAngry2
begin
    if (dude_gender == 0) then begin
        gsay_message(NAME, 632, NEUTRAL_REACTION);
    end
    else begin
        gsay_message(NAME, 633, NEUTRAL_REACTION);
    end
end

procedure NodeFailed
begin
    if (dude_gender == 0) then begin
        gsay_message(NAME, mstr(634) + mstr(635 + fake_num) + mstr(639), NEUTRAL_REACTION);
    end
    else begin
        gsay_message(NAME, mstr(635) + mstr(635 + fake_num) + mstr(639), NEUTRAL_REACTION);
    end
end

procedure NodeSuccess
begin
    Reply(640);
    giq_option(4, NAME, 650, NodeSuccessA, NEUTRAL_REACTION);
end

procedure NodeSuccessA
begin
    variable LVar0 := 0;
    game_time_advance(8 * (60 * (60 * 10)));
    LVar0 := has_skill(dude_obj, SKILL_BARTER);
    critter_mod_skill(dude_obj, SKILL_BARTER, random(10, 20));
    LVar0 := has_skill(dude_obj, SKILL_BARTER) - LVar0;
    display_msg(g_mstr(500) + LVar0 + g_mstr(501) + g_mstr(615));
    Reply(641);
    giq_option(4, NAME, 650, NodeSuccessB, NEUTRAL_REACTION);
end

procedure NodeSuccessB
begin
    Reply(642);
    giq_option(4, NAME, 643, Node999, NEUTRAL_REACTION);
end
