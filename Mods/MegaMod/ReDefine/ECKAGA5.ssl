variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure combat_p_proc;
procedure timed_event_p_proc;
procedure Node998;
procedure Node999;
procedure Node001;
procedure NodeFleeing;
procedure NodeFighting;
procedure doSequence;

variable Only_Once;
variable sequence;
variable animated;

export variable waiting;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if ((animated == 0) and (sequence == 1) and tile_distance(tile_num(self_obj), dude_tile <= 6)) then begin
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
        anim(dude_obj, 1000, rotation_to_tile(dude_tile, tile_num(self_obj)));
        add_timer_event(self_obj, game_ticks(3), 1);
        animated := 1;
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure talk_p_proc
begin
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_BAD_MONSTER, global_var(GVAR_BAD_MONSTER) + 1);
        if (critter_kill_type(self_obj) == KILL_TYPE_children_kills) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - -15);
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 5);
        debug_msg("Player gains " + 5 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    display_mstr(124);
    set_global_var(GVAR_RND_KAGA_STATE, 6);
    set_global_var(GVAR_RESEARCH_BASE_LEVEL, 1);
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(101);
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(102);
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
end

procedure map_enter_p_proc
begin
    variable LVar0 := 0;
    display_mstr(122);
    anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
    anim(dude_obj, 1000, rotation_to_tile(dude_tile, tile_num(self_obj)));
    Only_Once := 0;
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 194);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_KAGA);
    set_global_var(GVAR_RND_KAGA_STATE, 5);
    restock_amt := random(1, 1);
    if (obj_is_carrying_obj_pid(self_obj, 28) < restock_amt) then begin
        if (100 >= random(1, 100)) then begin
            if (obj_is_carrying_obj_pid(self_obj, 28) < restock_amt) then begin
                restock_obj := create_object(28, 0, 0);
                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 28));
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 28) > restock_amt) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 28);
                    if ((obj_is_carrying_obj_pid(self_obj, 28) - restock_amt) < removed_qty) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 28) - restock_amt;
                    end
                    if (removed_qty > 0) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 28);
                        if (obj_type(self_obj) == 1) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 28);
                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                    restock_obj := critter_inven_obj(self_obj, 0);
                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    add_obj_to_inven(self_obj, restock_obj);
                                end
                            end
                            else begin
                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                    inven_unwield(self_obj);
                                end
                            end
                        end
                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                        destroy_object(restock_obj);
                    end
                    restock_obj := 0;
                    restock_amt := 0;
                end
                else begin
                    restock_obj := 0;
                end
            end
        end
    end
    else begin
        if (obj_is_carrying_obj_pid(self_obj, 28) < restock_amt) then begin
            restock_obj := create_object(28, 0, 0);
            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 28));
        end
        else begin
            if (obj_is_carrying_obj_pid(self_obj, 28) > restock_amt) then begin
                removed_qty := obj_is_carrying_obj_pid(self_obj, 28);
                if ((obj_is_carrying_obj_pid(self_obj, 28) - restock_amt) < removed_qty) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 28) - restock_amt;
                end
                if (removed_qty > 0) then begin
                    restock_obj := obj_carrying_pid_obj(self_obj, 28);
                    if (obj_type(self_obj) == 1) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 28);
                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                restock_obj := critter_inven_obj(self_obj, 0);
                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                rm_obj_from_inven(self_obj, restock_obj);
                                add_obj_to_inven(self_obj, restock_obj);
                            end
                        end
                        else begin
                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                inven_unwield(self_obj);
                            end
                        end
                    end
                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                    destroy_object(restock_obj);
                end
                restock_obj := 0;
                restock_amt := 0;
            end
            else begin
                restock_obj := 0;
            end
        end
    end
    restock_amt := random(3, 3);
    if (obj_is_carrying_obj_pid(self_obj, 26) < restock_amt) then begin
        if (100 >= random(1, 100)) then begin
            if (obj_is_carrying_obj_pid(self_obj, 26) < restock_amt) then begin
                restock_obj := create_object(26, 0, 0);
                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 26));
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 26) > restock_amt) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 26);
                    if ((obj_is_carrying_obj_pid(self_obj, 26) - restock_amt) < removed_qty) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 26) - restock_amt;
                    end
                    if (removed_qty > 0) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 26);
                        if (obj_type(self_obj) == 1) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 26);
                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                    restock_obj := critter_inven_obj(self_obj, 0);
                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    add_obj_to_inven(self_obj, restock_obj);
                                end
                            end
                            else begin
                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                    inven_unwield(self_obj);
                                end
                            end
                        end
                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                        destroy_object(restock_obj);
                    end
                    restock_obj := 0;
                    restock_amt := 0;
                end
                else begin
                    restock_obj := 0;
                end
            end
        end
    end
    else begin
        if (obj_is_carrying_obj_pid(self_obj, 26) < restock_amt) then begin
            restock_obj := create_object(26, 0, 0);
            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 26));
        end
        else begin
            if (obj_is_carrying_obj_pid(self_obj, 26) > restock_amt) then begin
                removed_qty := obj_is_carrying_obj_pid(self_obj, 26);
                if ((obj_is_carrying_obj_pid(self_obj, 26) - restock_amt) < removed_qty) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 26) - restock_amt;
                end
                if (removed_qty > 0) then begin
                    restock_obj := obj_carrying_pid_obj(self_obj, 26);
                    if (obj_type(self_obj) == 1) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 26);
                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                restock_obj := critter_inven_obj(self_obj, 0);
                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                rm_obj_from_inven(self_obj, restock_obj);
                                add_obj_to_inven(self_obj, restock_obj);
                            end
                        end
                        else begin
                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                inven_unwield(self_obj);
                            end
                        end
                    end
                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                    destroy_object(restock_obj);
                end
                restock_obj := 0;
                restock_amt := 0;
            end
            else begin
                restock_obj := 0;
            end
        end
    end
    restock_amt := random(5, 5);
    if (obj_is_carrying_obj_pid(self_obj, 40) < restock_amt) then begin
        if (100 >= random(1, 100)) then begin
            if (obj_is_carrying_obj_pid(self_obj, 40) < restock_amt) then begin
                restock_obj := create_object(40, 0, 0);
                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 40));
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 40) > restock_amt) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 40);
                    if ((obj_is_carrying_obj_pid(self_obj, 40) - restock_amt) < removed_qty) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 40) - restock_amt;
                    end
                    if (removed_qty > 0) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 40);
                        if (obj_type(self_obj) == 1) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 40);
                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                    restock_obj := critter_inven_obj(self_obj, 0);
                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    add_obj_to_inven(self_obj, restock_obj);
                                end
                            end
                            else begin
                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                    inven_unwield(self_obj);
                                end
                            end
                        end
                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                        destroy_object(restock_obj);
                    end
                    restock_obj := 0;
                    restock_amt := 0;
                end
                else begin
                    restock_obj := 0;
                end
            end
        end
    end
    else begin
        if (obj_is_carrying_obj_pid(self_obj, 40) < restock_amt) then begin
            restock_obj := create_object(40, 0, 0);
            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 40));
        end
        else begin
            if (obj_is_carrying_obj_pid(self_obj, 40) > restock_amt) then begin
                removed_qty := obj_is_carrying_obj_pid(self_obj, 40);
                if ((obj_is_carrying_obj_pid(self_obj, 40) - restock_amt) < removed_qty) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 40) - restock_amt;
                end
                if (removed_qty > 0) then begin
                    restock_obj := obj_carrying_pid_obj(self_obj, 40);
                    if (obj_type(self_obj) == 1) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 40);
                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                restock_obj := critter_inven_obj(self_obj, 0);
                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                rm_obj_from_inven(self_obj, restock_obj);
                                add_obj_to_inven(self_obj, restock_obj);
                            end
                        end
                        else begin
                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                inven_unwield(self_obj);
                            end
                        end
                    end
                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                    destroy_object(restock_obj);
                end
                restock_obj := 0;
                restock_amt := 0;
            end
            else begin
                restock_obj := 0;
            end
        end
    end
    restock_amt := random(3, 3);
    if (obj_is_carrying_obj_pid(self_obj, 39) < restock_amt) then begin
        if (100 >= random(1, 100)) then begin
            if (obj_is_carrying_obj_pid(self_obj, 39) < restock_amt) then begin
                restock_obj := create_object(39, 0, 0);
                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 39));
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 39) > restock_amt) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 39);
                    if ((obj_is_carrying_obj_pid(self_obj, 39) - restock_amt) < removed_qty) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 39) - restock_amt;
                    end
                    if (removed_qty > 0) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 39);
                        if (obj_type(self_obj) == 1) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 39);
                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                    restock_obj := critter_inven_obj(self_obj, 0);
                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    add_obj_to_inven(self_obj, restock_obj);
                                end
                            end
                            else begin
                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                    inven_unwield(self_obj);
                                end
                            end
                        end
                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                        destroy_object(restock_obj);
                    end
                    restock_obj := 0;
                    restock_amt := 0;
                end
                else begin
                    restock_obj := 0;
                end
            end
        end
    end
    else begin
        if (obj_is_carrying_obj_pid(self_obj, 39) < restock_amt) then begin
            restock_obj := create_object(39, 0, 0);
            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 39));
        end
        else begin
            if (obj_is_carrying_obj_pid(self_obj, 39) > restock_amt) then begin
                removed_qty := obj_is_carrying_obj_pid(self_obj, 39);
                if ((obj_is_carrying_obj_pid(self_obj, 39) - restock_amt) < removed_qty) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 39) - restock_amt;
                end
                if (removed_qty > 0) then begin
                    restock_obj := obj_carrying_pid_obj(self_obj, 39);
                    if (obj_type(self_obj) == 1) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 39);
                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                restock_obj := critter_inven_obj(self_obj, 0);
                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                rm_obj_from_inven(self_obj, restock_obj);
                                add_obj_to_inven(self_obj, restock_obj);
                            end
                        end
                        else begin
                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                inven_unwield(self_obj);
                            end
                        end
                    end
                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                    destroy_object(restock_obj);
                end
                restock_obj := 0;
                restock_amt := 0;
            end
            else begin
                restock_obj := 0;
            end
        end
    end
    restock_amt := random(5000, 5000);
    if (obj_is_carrying_obj_pid(self_obj, 41) < restock_amt) then begin
        if (100 >= random(1, 100)) then begin
            if (obj_is_carrying_obj_pid(self_obj, 41) < restock_amt) then begin
                restock_obj := create_object(41, 0, 0);
                add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 41));
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 41) > restock_amt) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 41);
                    if ((obj_is_carrying_obj_pid(self_obj, 41) - restock_amt) < removed_qty) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 41) - restock_amt;
                    end
                    if (removed_qty > 0) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 41);
                        if (obj_type(self_obj) == 1) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 41);
                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                    restock_obj := critter_inven_obj(self_obj, 0);
                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    add_obj_to_inven(self_obj, restock_obj);
                                end
                            end
                            else begin
                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                    inven_unwield(self_obj);
                                end
                            end
                        end
                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                        destroy_object(restock_obj);
                    end
                    restock_obj := 0;
                    restock_amt := 0;
                end
                else begin
                    restock_obj := 0;
                end
            end
        end
    end
    else begin
        if (obj_is_carrying_obj_pid(self_obj, 41) < restock_amt) then begin
            restock_obj := create_object(41, 0, 0);
            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 41));
        end
        else begin
            if (obj_is_carrying_obj_pid(self_obj, 41) > restock_amt) then begin
                removed_qty := obj_is_carrying_obj_pid(self_obj, 41);
                if ((obj_is_carrying_obj_pid(self_obj, 41) - restock_amt) < removed_qty) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, 41) - restock_amt;
                end
                if (removed_qty > 0) then begin
                    restock_obj := obj_carrying_pid_obj(self_obj, 41);
                    if (obj_type(self_obj) == 1) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, 41);
                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                restock_obj := critter_inven_obj(self_obj, 0);
                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                rm_obj_from_inven(self_obj, restock_obj);
                                add_obj_to_inven(self_obj, restock_obj);
                            end
                        end
                        else begin
                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                inven_unwield(self_obj);
                            end
                        end
                    end
                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                    destroy_object(restock_obj);
                end
                restock_obj := 0;
                restock_amt := 0;
            end
            else begin
                restock_obj := 0;
            end
        end
    end
    LVar0 := obj_carrying_pid_obj(self_obj, 28);
    if (LVar0) then begin
        wield_obj_critter(self_obj, LVar0);
    end
    game_ui_disable;
    add_timer_event(self_obj, game_ticks(3), 1);
    anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
    anim(dude_obj, 1000, rotation_to_tile(dude_tile, tile_num(self_obj)));
    float_msg(dude_obj, mstr(123), FLOAT_MSG_GREEN);
end

procedure combat_p_proc
begin
    call NodeFighting();
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        call doSequence();
    end
    else begin
        if (fixed_param == 2) then begin
            game_ui_enable;
            attack(dude_obj);
            waiting := 1;
        end
    end
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
end

procedure Node001
begin
end

procedure NodeFleeing
begin
end

procedure NodeFighting
begin
    variable LVar0 := 0;
    LVar0 := random(108, 109);
    if (LVar0 == 108) then begin
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (not(global_var(GVAR_KARMA_SHIELD_OF_HOPE) == 1)) then begin
            LVar0 := 110;
        end
    end
    if (LVar0 == 109) then begin
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (not(global_var(GVAR_KARMA_SWORD_OF_DESPAIR) == 1)) then begin
            LVar0 := 110;
        end
    end
    float_msg(self_obj, mstr(LVar0), FLOAT_MSG_RED);
end

procedure doSequence
begin
    if (sequence == 0) then begin
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
        anim(dude_obj, 1000, rotation_to_tile(dude_tile, tile_num(self_obj)));
        animate_move_obj_to_tile(self_obj, tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), 4), 1);
        sequence := sequence + 1;
    end
    else begin
        if (sequence == 1) then begin
            anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
            anim(dude_obj, 1000, rotation_to_tile(dude_tile, tile_num(self_obj)));
            sequence := sequence + 1;
            float_msg(self_obj, mstr(111) + dude_name + ".", FLOAT_MSG_YELLOW);
            add_timer_event(self_obj, game_ticks(3), 1);
        end
        else begin
            if (sequence == 2) then begin
                sequence := sequence + 1;
                float_msg(dude_obj, mstr(112), FLOAT_MSG_RED);
                add_timer_event(self_obj, game_ticks(3), 1);
            end
            else begin
                if (sequence == 3) then begin
                    sequence := sequence + 1;
                    float_msg(self_obj, mstr(113), FLOAT_MSG_YELLOW);
                    add_timer_event(self_obj, game_ticks(3), 1);
                end
                else begin
                    if (sequence == 4) then begin
                        sequence := sequence + 1;
                        float_msg(self_obj, mstr(114), FLOAT_MSG_YELLOW);
                        add_timer_event(self_obj, game_ticks(5), 1);
                    end
                    else begin
                        if (sequence == 5) then begin
                            sequence := sequence + 1;
                            float_msg(self_obj, mstr(115), FLOAT_MSG_YELLOW);
                            add_timer_event(self_obj, game_ticks(5), 1);
                        end
                        else begin
                            if (sequence == 6) then begin
                                sequence := sequence + 1;
                                if (dude_is_stupid) then begin
                                    float_msg(dude_obj, mstr(200), FLOAT_MSG_GREEN);
                                end
                                else begin
                                    if ((game_time_hour <= 600) or (game_time_hour >= 1800)) then begin
                                        float_msg(dude_obj, mstr(116), FLOAT_MSG_GREEN);
                                    end
                                    else begin
                                        float_msg(dude_obj, mstr(117), FLOAT_MSG_GREEN);
                                    end
                                end
                                add_timer_event(self_obj, game_ticks(5), 1);
                            end
                            else begin
                                if (sequence == 7) then begin
                                    sequence := sequence + 1;
                                    float_msg(self_obj, mstr(118), FLOAT_MSG_YELLOW);
                                    add_timer_event(self_obj, game_ticks(8), 1);
                                end
                                else begin
                                    if (sequence == 8) then begin
                                        sequence := sequence + 1;
                                        float_msg(self_obj, mstr(119), FLOAT_MSG_YELLOW);
                                        add_timer_event(self_obj, game_ticks(3), 1);
                                    end
                                    else begin
                                        if (sequence == 9) then begin
                                            sequence := sequence + 1;
                                            float_msg(self_obj, mstr(120), FLOAT_MSG_YELLOW);
                                            add_timer_event(self_obj, game_ticks(5), 1);
                                        end
                                        else begin
                                            if (sequence == 10) then begin
                                                sequence := sequence + 1;
                                                if (dude_is_stupid) then begin
                                                    float_msg(dude_obj, mstr(201), FLOAT_MSG_RED);
                                                end
                                                else begin
                                                    float_msg(dude_obj, mstr(121), FLOAT_MSG_GREEN);
                                                end
                                                add_timer_event(self_obj, game_ticks(3), 2);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end
