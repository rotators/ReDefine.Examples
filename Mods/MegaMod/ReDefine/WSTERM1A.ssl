variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure talk_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_p_proc;
procedure damage_p_proc;
procedure Node999;
procedure Node001;
procedure Node001a;
procedure Node001b;
procedure Node001c;
procedure Node001d;
procedure Node002;
procedure Node004;
procedure Node005;
procedure Node010;
procedure Node011;
procedure Node011a;
procedure Node011b;
procedure Node011c;
procedure Node012;
procedure Node013;
procedure Node014;

import variable Field1a_Ptr;
import variable Field1b_Ptr;
import variable Field1c_Ptr;
import variable Field1d_Ptr;
import variable Field1e_Ptr;

variable Only_Once;
variable Said_Ali_Babba;
variable Said_Sierra;
variable Said_Armageddon;
variable Said_Wrong;
variable Tried_Hack;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure talk_p_proc
begin
    if (global_var(GVAR_BRAIN_BOT_BRAIN) == 4) then begin
        start_gdialog(154, self_obj, 4, -1, -1);
        gsay_start;
        call Node005();
        gsay_end;
        end_dialogue;
    end
    else begin
        if (map_var(25) == 1) then begin
            start_gdialog(154, self_obj, 4, -1, -1);
            gsay_start;
            call Node004();
            gsay_end;
            end_dialogue;
        end
        else begin
            if (map_var(40) == 1) then begin
                start_gdialog(154, self_obj, 4, -1, -1);
                gsay_start;
                call Node002();
                gsay_end;
                end_dialogue;
            end
            else begin
                start_gdialog(154, self_obj, 4, -1, -1);
                gsay_start;
                call Node001();
                gsay_end;
                end_dialogue;
            end
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(101);
end

procedure use_skill_on_p_proc
begin
end

procedure use_p_proc
begin
    variable LVar0 := 0;
    if (global_var(GVAR_SIERRA_BASE_ENEMY) == 1) then begin
        LVar0 := random(20, 30);
        critter_dmg(source_obj, LVar0, 0);
        display_mstr(300);
    end
    else begin
        if (get_critter_stat(source_obj, STAT_iq) < 4) then begin
            if (source_obj == dude_obj) then begin
                display_mstr(102);
            end
            else begin
                display_msg(obj_name(source_obj) + mstr(200));
            end
        end
        else begin
            dialogue_system_enter;
        end
    end
end

procedure damage_p_proc
begin
end

procedure Node999
begin
end

procedure Node001
begin
    if (global_var(GVAR_SIERRA_BASE_POWER) == 1) then begin
        Reply(103);
    end
    else begin
        Reply(104);
    end
    if (global_var(GVAR_SIERRA_PASSWORD) == 1) then begin
        giq_option(4, NAME, 105, Node010, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 106, Node001a, NEUTRAL_REACTION);
    giq_option(4, NAME, 107, Node001b, NEUTRAL_REACTION);
    giq_option(4, NAME, 108, Node001c, NEUTRAL_REACTION);
    giq_option(8, NAME, 109, Node001d, NEUTRAL_REACTION);
    giq_option(4, NAME, 110, Node999, NEUTRAL_REACTION);
end

procedure Node001a
begin
    Said_Wrong := Said_Wrong + 1;
    Said_Ali_Babba := Said_Ali_Babba + 1;
    call Node011();
end

procedure Node001b
begin
    Said_Wrong := Said_Wrong + 1;
    Said_Sierra := Said_Sierra + 1;
    call Node011();
end

procedure Node001c
begin
    Said_Wrong := Said_Wrong + 1;
    Said_Armageddon := Said_Armageddon + 1;
    call Node011();
end

procedure Node001d
begin
    Tried_Hack := Tried_Hack + 1;
    if (has_skill(dude_obj, SKILL_SCIENCE) >= 75) then begin
        call Node012();
    end
    else begin
        if (is_success(roll_vs_skill(dude_obj, 12, -30))) then begin
            call Node012();
        end
        else begin
            call Node014();
        end
    end
end

procedure Node002
begin
    Reply(113);
    giq_option(4, NAME, 115, Node999, NEUTRAL_REACTION);
end

procedure Node004
begin
    Reply(117);
    giq_option(4, NAME, 119, Node999, NEUTRAL_REACTION);
end

procedure Node005
begin
    Reply(121);
    giq_option(4, NAME, 123, Node999, NEUTRAL_REACTION);
end

procedure Node010
begin
    set_map_var(40, 1);
    set_map_var(43, 3);
    set_map_var(44, 3);
    set_map_var(45, 3);
    set_map_var(46, 3);
    set_map_var(47, 3);
    destroy_object(Field1a_Ptr);
    destroy_object(Field1b_Ptr);
    destroy_object(Field1c_Ptr);
    destroy_object(Field1d_Ptr);
    destroy_object(Field1e_Ptr);
    Field1a_Ptr := 0;
    Field1b_Ptr := 0;
    Field1c_Ptr := 0;
    Field1d_Ptr := 0;
    Field1e_Ptr := 0;
    Reply(124);
    giq_option(4, NAME, 125, Node999, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(126);
    if (global_var(GVAR_SIERRA_PASSWORD) == 1) then begin
        giq_option(4, NAME, 127, Node010, NEUTRAL_REACTION);
    end
    if (Said_Ali_Babba == 0) then begin
        giq_option(4, NAME, 128, Node011a, NEUTRAL_REACTION);
    end
    if (Said_Sierra == 0) then begin
        giq_option(4, NAME, 129, Node011b, NEUTRAL_REACTION);
    end
    if (Said_Armageddon == 0) then begin
        giq_option(4, NAME, 130, Node011c, NEUTRAL_REACTION);
    end
    if (Tried_Hack == 0) then begin
        giq_option(4, NAME, 131, Node001d, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 132, Node999, NEUTRAL_REACTION);
end

procedure Node011a
begin
    Said_Ali_Babba := Said_Ali_Babba + 1;
    Said_Wrong := Said_Wrong + 1;
    if (Said_Wrong > 1) then begin
        call Node013();
    end
    else begin
        call Node011();
    end
end

procedure Node011b
begin
    Said_Sierra := Said_Sierra + 1;
    Said_Wrong := Said_Wrong + 1;
    if (Said_Wrong > 1) then begin
        call Node013();
    end
    else begin
        call Node011();
    end
end

procedure Node011c
begin
    Said_Armageddon := Said_Armageddon + 1;
    Said_Wrong := Said_Wrong + 1;
    if (Said_Wrong > 1) then begin
        call Node013();
    end
    else begin
        call Node011();
    end
end

procedure Node012
begin
    if (local_var(0) == 0) then begin
        set_local_var(0, 1);
        display_msg(g_mstr(1003));
        give_exp_points(200);
        display_msg(g_mstr(100) + 200 + g_mstr(101));
    end
    set_map_var(40, 1);
    set_map_var(43, 3);
    set_map_var(44, 3);
    set_map_var(45, 3);
    set_map_var(46, 3);
    set_map_var(47, 3);
    destroy_object(Field1a_Ptr);
    destroy_object(Field1b_Ptr);
    destroy_object(Field1c_Ptr);
    destroy_object(Field1d_Ptr);
    destroy_object(Field1e_Ptr);
    Field1a_Ptr := 0;
    Field1b_Ptr := 0;
    Field1c_Ptr := 0;
    Field1d_Ptr := 0;
    Field1e_Ptr := 0;
    Reply(133);
    giq_option(4, NAME, 134, Node999, NEUTRAL_REACTION);
end

procedure Node013
begin
    set_map_var(25, 1);
    set_global_var(GVAR_SIERRA_BASE_SECURITY, 1);
    Reply(135);
    giq_option(4, NAME, 136, Node999, NEUTRAL_REACTION);
end

procedure Node014
begin
    if (is_success(roll_vs_skill(dude_obj, 12, -30))) then begin
        Reply(137);
    end
    else begin
        set_map_var(25, 1);
        set_global_var(GVAR_SIERRA_BASE_SECURITY, 1);
        Reply(138);
    end
    giq_option(4, NAME, 139, Node999, NEUTRAL_REACTION);
end
