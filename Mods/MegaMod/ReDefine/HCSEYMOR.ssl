variable tmp_gen_rep;
variable global_temp;
variable restock_obj;

procedure start;
procedure critter_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure pickup_p_proc;
procedure use_skill_on_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure timed_event_p_proc;
procedure Node998;
procedure Node999;
procedure Node999a;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node004a;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node009a;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node015a;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;

import variable seymour_obj;

variable Move_Plant;
variable Force_Dialog;


procedure start
begin
    seymour_obj := self_obj;
end

procedure critter_p_proc
begin
    if ((local_var(5) != 0) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack(dude_obj);
    end
end

procedure talk_p_proc
begin
    Move_Plant := 0;
    set_global_var(GVAR_CLEAR_OUT_DR_SHENG_LAB, 1);
    if (Force_Dialog == 1) then begin
        Force_Dialog := 0;
        start_gdialog(1177, self_obj, 4, -1, -1);
        gsay_start;
        call Node018();
        gsay_end;
        end_dialogue;
    end
    else begin
        if (map_var(24) == 2) then begin
            start_gdialog(1177, self_obj, 4, -1, -1);
            gsay_start;
            call Node013();
            gsay_end;
            end_dialogue;
        end
        else begin
            if (map_var(24) == 1) then begin
                start_gdialog(1177, self_obj, 4, -1, -1);
                gsay_start;
                call Node015();
                gsay_end;
                end_dialogue;
            end
            else begin
                start_gdialog(1177, self_obj, 4, -1, -1);
                gsay_start;
                if (local_var(4) == 0) then begin
                    set_local_var(4, 1);
                    call Node001();
                end
                else begin
                    call Node020();
                end
                gsay_end;
                end_dialogue;
            end
        end
    end
    if (Move_Plant == 1) then begin
        Move_Plant := 0;
        set_map_var(24, 2);
        display_mstr(178);
        give_exp_points(1000);
        display_msg(g_mstr(100) + 1000 + g_mstr(101));
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 2);
        debug_msg("Player gains " + 2 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
        if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
            tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
        end
        if (tmp_gen_rep >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (tmp_gen_rep >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (tmp_gen_rep >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (tmp_gen_rep >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(GVAR_TOWN_REP_BROKEN_HILLS, global_var(GVAR_TOWN_REP_BROKEN_HILLS) + 5);
        add_timer_event(self_obj, 1, 1);
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
        if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
            tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
        end
        if (tmp_gen_rep >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (tmp_gen_rep >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (tmp_gen_rep >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (tmp_gen_rep >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(GVAR_TOWN_REP_BROKEN_HILLS, global_var(GVAR_TOWN_REP_BROKEN_HILLS) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
end

procedure pickup_p_proc
begin
    script_overrides;
    display_mstr(190);
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        script_overrides;
        display_mstr(190);
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 0) then begin
        display_mstr(100);
    end
    else begin
        display_mstr(101);
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(102);
end

procedure use_obj_on_p_proc
begin
    variable LVar0 := 0;
    LVar0 := obj_pid(obj_being_used_with);
    if (LVar0 == 289) then begin
        script_overrides;
        float_msg(self_obj, mstr(177), FLOAT_MSG_YELLOW);
    end
    else begin
        if (LVar0 == 632) then begin
            float_msg(self_obj, mstr(191), FLOAT_MSG_RED);
            add_timer_event(self_obj, game_ticks(1), 10);
        end
    end
    return 0;
    LVar0 := 0;
end

procedure damage_p_proc
begin
    if (obj_in_party(source_obj)) then begin
        set_local_var(5, 2);
    end
end

procedure map_enter_p_proc
begin
    seymour_obj := self_obj;
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 7);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_SPORE_PLANT);
    if (not(is_loading_game)) then begin
        if (map_var(24) < 2) then begin
            add_timer_event(self_obj, game_ticks(random(10, 15)), 0);
        end
    end
end

procedure map_update_p_proc
begin
    seymour_obj := self_obj;
end

procedure timed_event_p_proc
begin
    if (fixed_param == 0) then begin
        if ((local_var(4) == 0) and not(combat_is_initialized)) then begin
            float_msg(self_obj, mstr(random(172, 176)), FLOAT_MSG_YELLOW);
        end
        rm_fixed_timer_event(self_obj, 0);
        add_timer_event(self_obj, game_ticks(random(10, 15)), 0);
    end
    else begin
        if (fixed_param == 1) then begin
            rm_fixed_timer_event(self_obj, 1);
            gfade_out(600);
            move_to(self_obj, 17682, 0);
            critter_attempt_placement(self_obj, 17682, 0);
            anim(self_obj, 1000, 2);
            move_to(dude_obj, 18082, 0);
            critter_attempt_placement(dude_obj, 18082, 0);
            anim(dude_obj, 1000, 5);
            gfade_in(600);
            Force_Dialog := 1;
            dialogue_system_enter;
        end
        else begin
            if (fixed_param == 10) then begin
                rm_fixed_timer_event(self_obj, 10);
                set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
                if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
                    set_global_var(GVAR_CHAMPION_REPUTATION, 1);
                    set_global_var(GVAR_BERSERKER_REPUTATION, 0);
                end
                if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
                    set_global_var(GVAR_BERSERKER_REPUTATION, 1);
                    set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                end
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
                debug_msg("Player gains " + -10 + " Karma Points.");
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
                if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
                    tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
                end
                if (tmp_gen_rep >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (tmp_gen_rep >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (tmp_gen_rep >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (tmp_gen_rep >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (tmp_gen_rep > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (tmp_gen_rep > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(GVAR_TOWN_REP_BROKEN_HILLS, global_var(GVAR_TOWN_REP_BROKEN_HILLS) + -5);
                debug_msg("Added " + -5 + " to Town Rep");
                kill_critter(self_obj, 60);
            end
        end
    end
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
    if ((global_var(GVAR_PRIMIT_ATTACKED) == 1) and (global_var(GVAR_CLOSE_TO_KRUGER) == 2)) then begin
        Reply(181);
        set_global_var(GVAR_LARS_ATTACKED, 1);
        giq_option(-3, NAME, 182, Node999a, NEUTRAL_REACTION);
        giq_option(-3, NAME, 183, Node999a, NEUTRAL_REACTION);
        giq_option(4, NAME, 184, Node999a, NEUTRAL_REACTION);
    end
end

procedure Node999a
begin
end

procedure Node001
begin
    Reply(103);
    giq_option(-3, NAME, 104, Node002, NEUTRAL_REACTION);
    giq_option(-3, NAME, 105, Node007, NEUTRAL_REACTION);
    if (map_var(22) == 1) then begin
        giq_option(4, NAME, 107, Node010, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 106, Node008, NEUTRAL_REACTION);
    end
end

procedure Node002
begin
    Reply(109);
    giq_option(-3, NAME, 110, Node003, NEUTRAL_REACTION);
    giq_option(-3, NAME, 111, Node006, NEUTRAL_REACTION);
end

procedure Node003
begin
    Reply(112);
    giq_option(-3, NAME, 113, Node004, NEUTRAL_REACTION);
    giq_option(-3, NAME, 114, Node006, NEUTRAL_REACTION);
    giq_option(4, NAME, 115, Node009, NEUTRAL_REACTION);
    giq_option(4, NAME, 116, Node006, NEUTRAL_REACTION);
end

procedure Node004
begin
    Reply(117);
    giq_option(-3, NAME, 118, Node004a, NEUTRAL_REACTION);
    if (obj_is_carrying_obj_pid(dude_obj, 289) > 0) then begin
        giq_option(-3, NAME, 179, Node016, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 119, Node006, NEUTRAL_REACTION);
end

procedure Node004a
begin
    set_map_var(24, 1);
    call Node005();
end

procedure Node005
begin
    Reply(120);
    giq_option(-3, NAME, 121, Node999, NEUTRAL_REACTION);
end

procedure Node006
begin
    Reply(122);
    giq_option(-3, NAME, 123, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 123, Node999, NEUTRAL_REACTION);
end

procedure Node007
begin
    Reply(124);
    giq_option(-3, NAME, 125, Node003, NEUTRAL_REACTION);
    giq_option(-3, NAME, 126, Node006, NEUTRAL_REACTION);
end

procedure Node008
begin
    Reply(127);
    giq_option(4, NAME, 128, Node003, NEUTRAL_REACTION);
    giq_option(4, NAME, 129, Node006, NEUTRAL_REACTION);
end

procedure Node009
begin
    Reply(130);
    giq_option(4, NAME, 131, Node009a, NEUTRAL_REACTION);
    if (obj_is_carrying_obj_pid(dude_obj, 289) > 0) then begin
        giq_option(4, NAME, 180, Node016, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 132, Node006, NEUTRAL_REACTION);
end

procedure Node009a
begin
    set_map_var(24, 1);
    call Node999();
end

procedure Node010
begin
    Reply(133);
    giq_option(4, NAME, 134, Node011, NEUTRAL_REACTION);
    giq_option(4, NAME, 135, Node003, NEUTRAL_REACTION);
    giq_option(4, NAME, 136, Node999, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(137);
    giq_option(4, NAME, 138, Node012, NEUTRAL_REACTION);
    giq_option(4, NAME, 139, Node999, NEUTRAL_REACTION);
end

procedure Node012
begin
    Reply(140);
    giq_option(4, NAME, 141, Node009, NEUTRAL_REACTION);
    giq_option(4, NAME, 142, Node006, NEUTRAL_REACTION);
end

procedure Node013
begin
    Reply(143);
    if (map_var(19) == 0) then begin
        giq_option(-3, NAME, 144, Node014, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 171, Node999, NEUTRAL_REACTION);
    if (map_var(19) == 0) then begin
        giq_option(4, NAME, 145, Node014, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 146, Node999, NEUTRAL_REACTION);
end

procedure Node014
begin
    set_map_var(20, 1);
    Reply(147);
    giq_option(-3, NAME, 148, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 149, Node999, NEUTRAL_REACTION);
end

procedure Node015
begin
    Reply(150);
    giq_option(-3, NAME, 151, Node015a, NEUTRAL_REACTION);
    giq_option(-3, NAME, 152, Node017, NEUTRAL_REACTION);
    giq_option(4, NAME, 153, Node015a, NEUTRAL_REACTION);
    giq_option(4, NAME, 154, Node017, NEUTRAL_REACTION);
end

procedure Node015a
begin
    if (obj_is_carrying_obj_pid(dude_obj, 289) > 0) then begin
        call Node016();
    end
    else begin
        call Node021();
    end
end

procedure Node016
begin
    gsay_message(NAME, 155, GOOD_REACTION);
    Move_Plant := 1;
end

procedure Node017
begin
    Reply(157);
    giq_option(-3, NAME, 158, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 159, Node999, NEUTRAL_REACTION);
end

procedure Node018
begin
    set_map_var(20, 1);
    Reply(160);
    giq_option(-3, NAME, 161, Node019, NEUTRAL_REACTION);
    giq_option(4, NAME, 162, Node999, NEUTRAL_REACTION);
end

procedure Node019
begin
    Reply(163);
    giq_option(-3, NAME, 164, Node999, NEUTRAL_REACTION);
end

procedure Node020
begin
    Reply(165);
    giq_option(-3, NAME, 166, Node004, NEUTRAL_REACTION);
    giq_option(-3, NAME, 167, Node006, NEUTRAL_REACTION);
    giq_option(4, NAME, 168, Node009, NEUTRAL_REACTION);
    giq_option(4, NAME, 169, Node006, NEUTRAL_REACTION);
end

procedure Node021
begin
    Reply(170);
    giq_option(1, NAME, 171, Node999, NEUTRAL_REACTION);
end
