variable GVar0;
variable GVar1 := 1;
variable GVar2;
variable GVar3;
variable GVar4;
variable GVar5;
variable GVar6;
variable GVar7;
variable GVar8;
variable GVar9;
variable GVar10;
variable GVar11;
variable GVar12;
variable GVar13;
variable GVar14;
variable GVar15;
variable GVar16;
variable GVar17;
variable GVar18;
variable GVar19;
variable GVar20;
variable GVar21;
variable GVar22;
variable GVar23;
variable GVar24;
variable GVar25;
variable GVar26;
variable GVar27;
variable GVar28;
variable GVar29;
variable GVar30;
variable GVar31;
variable GVar32;
variable GVar33;
variable GVar34;
variable GVar35;
variable GVar36;
variable GVar37;
variable GVar38;
variable GVar39;
variable GVar40;
variable GVar41;
variable GVar42;
variable GVar43;
variable GVar44 := 16777218;
variable GVar45 := 1;
variable GVar46;
variable GVar47 := 1;
variable GVar48;
variable GVar49;
variable GVar50;
variable GVar51;
variable GVar52;
variable GVar53;
variable GVar54;
variable GVar55;
variable GVar56;
variable GVar57;
variable GVar58;
variable GVar59;
variable GVar60;
variable GVar61;
variable GVar62;
variable GVar63;
variable GVar64;
variable GVar65;
variable GVar66;
variable GVar67;
variable variable_all_dead;

procedure foe_equip;
procedure start;
procedure use_obj_on_p_proc;
procedure look_at_p_proc;
procedure timed_event_p_proc;
procedure PM_Add;
procedure PM_Rem;
procedure Dlg_Start;
procedure PM_ARCmbt;
procedure MMenu_00;
procedure MMenu_01;
procedure MMenu_02;
procedure Heal_Target_Chk;
procedure Heal_Target_Start;
procedure ExpMenu;
procedure Rep_Menu;
procedure Rep_Mod;
procedure Karmic_Trait_Menu;
procedure Rep_Pos;
procedure Rep_Neg;
procedure Rep_CK;
procedure Exp_100000;
procedure Exp_10000;
procedure Exp_5000;
procedure Exp_1000;
procedure Exp_100;
procedure Exp_10;
procedure Rep_Inc01;
procedure Rep_Inc05;
procedure Rep_Inc10;
procedure Rep_Dec01;
procedure Rep_Dec05;
procedure Rep_Dec10;
procedure Rep_Pos00;
procedure Rep_Pos01;
procedure Rep_Neg00;
procedure Rep_Neg01;
procedure Rep_CK00;
procedure Rep_CK01;
procedure Chk_Res_Chk;
procedure Chk_Res;
procedure Give_Armor;
procedure Give_Armor_HPA;
procedure Give_Armor_PAMkII;
procedure Give_Armor_MLA;
procedure Give_Armor_MMA;
procedure Give_Armor_MPA;
procedure Wpn_Rem;
procedure MMenu_Exit;
procedure Clear_Path;
procedure PC_Mod_Menu;
procedure Mod_Sex;
procedure PC_Perk_Menu00;
procedure PC_Perk_Menu01;
procedure PC_Perk_Menu02;
procedure PC_Perk_Menu03;
procedure PC_Perk_Menu04;
procedure PC_Perk_Menu05;
procedure PC_Perk_Menu06;
procedure PC_Perk_Menu07;
procedure PC_Perk_Menu08;
procedure PC_Perk_Menu09;
procedure PC_Perk00;
procedure PC_Perk01;
procedure PC_Perk02;
procedure PC_Perk03;
procedure PC_Perk04;
procedure PC_Perk05;
procedure PC_Perk06;
procedure PC_Perk07;
procedure PC_Perk08;
procedure PC_Perk09;
procedure PC_Perk10;
procedure PC_Perk11;
procedure PC_Perk12;
procedure PC_Perk13;
procedure PC_Perk14;
procedure PC_Perk15;
procedure PC_Perk16;
procedure PC_Perk17;
procedure PC_Perk18;
procedure PC_Perk19;
procedure PC_Perk20;
procedure PC_Perk21;
procedure PC_Perk22;
procedure PC_Perk23;
procedure PC_Perk24;
procedure PC_Perk25;
procedure PC_Perk26;
procedure PC_Perk27;
procedure PC_Perk28;
procedure PC_Perk29;
procedure PC_Perk30;
procedure PC_Perk31;
procedure PC_Perk32;
procedure PC_Perk33;
procedure PC_Perk34;
procedure PC_Perk35;
procedure PC_Perk36;
procedure PC_Perk37;
procedure PC_Perk38;
procedure PC_Perk39;
procedure PC_Perk40;
procedure PC_Perk41;
procedure PC_Perk42;
procedure PC_Perk43;
procedure PC_Perk44;
procedure PC_Perk45;
procedure PC_Perk46;
procedure PC_Perk47;
procedure PC_Perk48;
procedure PC_Perk49;
procedure PC_Perk50;
procedure Perk00_Add;
procedure Perk01_Add;
procedure Perk02_Add;
procedure Perk03_Add;
procedure Perk04_Add;
procedure Perk05_Add;
procedure Perk06_Add;
procedure Perk07_Add;
procedure Perk08_Add;
procedure Perk09_Add;
procedure Perk10_Add;
procedure Perk11_Add;
procedure Perk12_Add;
procedure Perk13_Add;
procedure Perk14_Add;
procedure Perk15_Add;
procedure Perk16_Add;
procedure Perk17_Add;
procedure Perk18_Add;
procedure Perk19_Add;
procedure Perk20_Add;
procedure Perk21_Add;
procedure Perk22_Add;
procedure Perk23_Add;
procedure Perk24_Add;
procedure Perk25_Add;
procedure Perk26_Add;
procedure Perk27_Add;
procedure Perk28_Add;
procedure Perk29_Add;
procedure Perk30_Add;
procedure Perk31_Add;
procedure Perk32_Add;
procedure Perk33_Add;
procedure Perk34_Add;
procedure Perk35_Add;
procedure Perk36_Add;
procedure Perk37_Add;
procedure Perk38_Add;
procedure Perk39_Add;
procedure Perk40_Add;
procedure Perk41_Add;
procedure Perk42_Add;
procedure Perk43_Add;
procedure Perk44_Add;
procedure Perk45_Add;
procedure Perk46_Add;
procedure Perk47_Add;
procedure Perk48_Add;
procedure Perk49_Add;
procedure Perk50_Add;
procedure PC_Skill_Menu00;
procedure PC_Skill_Menu01;
procedure PC_Skill_Menu02;
procedure PC_Skill_Menu03;
procedure PC_Skill00;
procedure PC_Skill01;
procedure PC_Skill02;
procedure PC_Skill03;
procedure PC_Skill04;
procedure PC_Skill05;
procedure PC_Skill06;
procedure PC_Skill07;
procedure PC_Skill08;
procedure PC_Skill09;
procedure PC_Skill10;
procedure PC_Skill11;
procedure PC_Skill12;
procedure PC_Skill13;
procedure PC_Skill14;
procedure PC_Skill15;
procedure PC_Skill16;
procedure PC_Skill17;
procedure Skill_00001Inc;
procedure Skill_00010Inc;
procedure Skill_00100Inc;
procedure Skill_01001Inc;
procedure Skill_01010Inc;
procedure Skill_01100Inc;
procedure Skill_02001Inc;
procedure Skill_02010Inc;
procedure Skill_02100Inc;
procedure Skill_03001Inc;
procedure Skill_03010Inc;
procedure Skill_03100Inc;
procedure Skill_04001Inc;
procedure Skill_04010Inc;
procedure Skill_04100Inc;
procedure Skill_05001Inc;
procedure Skill_05010Inc;
procedure Skill_05100Inc;
procedure Skill_06001Inc;
procedure Skill_06010Inc;
procedure Skill_06100Inc;
procedure Skill_07001Inc;
procedure Skill_07010Inc;
procedure Skill_07100Inc;
procedure Skill_08001Inc;
procedure Skill_08010Inc;
procedure Skill_08100Inc;
procedure Skill_09001Inc;
procedure Skill_09010Inc;
procedure Skill_09100Inc;
procedure Skill_10001Inc;
procedure Skill_10010Inc;
procedure Skill_10100Inc;
procedure Skill_11001Inc;
procedure Skill_11010Inc;
procedure Skill_11100Inc;
procedure Skill_12001Inc;
procedure Skill_12010Inc;
procedure Skill_12100Inc;
procedure Skill_13001Inc;
procedure Skill_13010Inc;
procedure Skill_13100Inc;
procedure Skill_14001Inc;
procedure Skill_14010Inc;
procedure Skill_14100Inc;
procedure Skill_15001Inc;
procedure Skill_15010Inc;
procedure Skill_15100Inc;
procedure Skill_16001Inc;
procedure Skill_16010Inc;
procedure Skill_16100Inc;
procedure Skill_17001Inc;
procedure Skill_17010Inc;
procedure Skill_17100Inc;
procedure PC_Stat_Menu;
procedure PC_Stat_St_Chk;
procedure PC_Stat_PA;
procedure PC_Stat_St;
procedure PC_Stat_Pe;
procedure PC_Stat_En;
procedure PC_Stat_Ch;
procedure PC_Stat_Iq;
procedure PC_Stat_Ag;
procedure PC_Stat_Lu;
procedure Stat_St_Inc;
procedure Stat_St_Dec;
procedure Stat_Pe_Inc;
procedure Stat_Pe_Dec;
procedure Stat_En_Inc;
procedure Stat_En_Dec;
procedure Stat_Ch_Inc;
procedure Stat_Ch_Dec;
procedure Stat_Iq_Inc;
procedure Stat_Iq_Dec;
procedure Stat_Ag_Inc;
procedure Stat_Ag_Dec;
procedure Stat_Lu_Inc;
procedure Stat_Lu_Dec;
procedure Drug_Menu;
procedure Drug00;
procedure Drug01;
procedure Drug02;
procedure Drug03;
procedure Drug04;
procedure Drug00_Inc;
procedure Drug00_Dec;
procedure Drug01_Inc;
procedure Drug01_Dec;
procedure Drug02_Inc;
procedure Drug02_Dec;
procedure Drug03_Inc;
procedure Drug03_Dec;
procedure Drug04_Inc;
procedure Drug04_Dec;
procedure Drug_Create;
procedure Inj_Target_Chk;
procedure Inj_MMenu;
procedure Inj_CMenu;
procedure Inj_RMenu;
procedure Inj_PMenu;
procedure Inj_CLL;
procedure Inj_CRL;
procedure Inj_CLA;
procedure Inj_CRA;
procedure Inj_CEyes;
procedure Inj_Rad001;
procedure Inj_Rad010;
procedure Inj_Psn001;
procedure Inj_Psn010;
procedure Kill_Target_Chk;
procedure Kill_Target_Confirm;
procedure Kill_Target;
procedure Res_NPC_Menu;
procedure Res_Ian;
procedure Res_Tycho;
procedure Res_Katja;
procedure Res_Dog;
procedure Res_Tandi;
procedure Res_Jacob;
procedure Res_Konrad;
procedure Res_Joe;
procedure Res_Chk;
procedure Resurrect_A;
procedure Resurrect_B;
procedure Item_Cr_Start;
procedure Item_Cr_Menu00;
procedure Item_Cr_Menu01;
procedure Item_Cr_SV00A;
procedure Item_Cr_SV00B;
procedure Item_Cr_SV01A;
procedure Item_Cr_SV01B;
procedure Item_Cr_SV02A;
procedure Item_Cr_SV02B;
procedure Item_Cr_SV03A;
procedure Item_Cr_SV03B;
procedure Item_PIDChk00;
procedure Item_PIDChk01;
procedure Item_PIDWrong;
procedure Item_PIDInv;
procedure Item_add_to_inv;
procedure Fund_Chk;
procedure Fund_Menu;
procedure caps_inc100;
procedure caps_inc010;
procedure caps_inc001;
procedure caps_dec100;
procedure caps_dec010;
procedure caps_dec001;
procedure caps_adjust_total;
procedure Fund_End;
procedure City_Menu00;
procedure City_Menu01;
procedure Map_Menu_V13;
procedure Map_Menu_V15;
procedure Map_Menu_ShS;
procedure Map_Menu_Jnk;
procedure Map_Menu_Hub;
procedure Map_Menu_Nec;
procedure Map_Menu_LAB;
procedure Map_Menu_BOS;
procedure Map_Menu_Glw;
procedure Map_Menu_MiB;
procedure Map_Menu_Cat;
procedure Map_V1300;
procedure Map_V1301;
procedure Map_V1500;
procedure Map_V1501;
procedure Map_ShS00;
procedure Map_ShS01;
procedure Map_ShS02;
procedure Map_Rai;
procedure Map_Jnk00;
procedure Map_Jnk01;
procedure Map_Jnk02;
procedure Map_Hub00;
procedure Map_Hub01;
procedure Map_Hub02;
procedure Map_Hub03;
procedure Map_Hub04;
procedure Map_Hub05;
procedure Map_Nec00;
procedure Map_Nec01;
procedure Map_Nec02;
procedure Map_Nec03;
procedure Map_LAB00;
procedure Map_LAB01;
procedure Map_LAB02;
procedure Map_LAB03;
procedure Map_LAB04;
procedure Map_BOS00;
procedure Map_BOS01;
procedure Map_BOS02;
procedure Map_Glw00;
procedure Map_Glw01;
procedure Map_Glw02;
procedure Map_MiB00;
procedure Map_MiB01;
procedure Map_MiB02;
procedure Map_Cat00;
procedure Map_Cat01;
procedure Map_Cat02;
procedure Map_Load;
procedure Inv_Tar_Msg;
procedure Foe_Cr_Menu00;
procedure Foe_Cr_Menu01;
procedure Foe_Type00;
procedure Foe_Type01;
procedure Foe_Type02;
procedure Foe_Type03;
procedure Foe_Type04;
procedure Foe_Type05;
procedure Foe_Type06;
procedure Foe_Type07;
procedure Foe_Cr_Qty_Chk;
procedure Foe_Cr_QtyA;
procedure Foe_Cr_QtyB;
procedure Foe_Cr_RM;
procedure Foe_Cr_RSm;
procedure Foe_Cr_RMd;
procedure Foe_Cr_RLg;
procedure Foe_Start;
procedure Foe_Raid_Start;
procedure Foe_SM_Start;
procedure Foe_DClaw_Start;
procedure Foe_Centaur_Start;
procedure Foe_Floater_Start;
procedure Foe_Ghoul_Start;
procedure Foe_Gecko_Start;
procedure Foe_Canib_Start;
procedure Foe_Equipment_Chk;
procedure Foe_EqYes;
procedure Foe_EqNo;
procedure Gen_Raider00;
procedure Gen_Raider01;
procedure Gen_Raider02;
procedure Gen_Raider03;
procedure Gen_Raider04;
procedure Gen_Raider05;
procedure Gen_Raider06;
procedure Gen_Raider07;
procedure Gen_Raider08;
procedure Gen_SMutant00;
procedure Gen_Ghoul00;
procedure Gen_DClaw00;
procedure Gen_Centaur00;
procedure Gen_Floater00;
procedure Gen_Gecko00;
procedure Gen_Canib00;
procedure Cr_Foe;
procedure Display_Gvar_Status;
procedure DGVar_Stat_Menu;
procedure DGVar100A;
procedure DGVar100B;
procedure DGVar010A;
procedure DGVar010B;
procedure DGVar001A;
procedure DGVar001B;
procedure DGVar_Chk;
procedure Ch_Gvar_Chk;
procedure Ch_GVar_set;
procedure Ch_Gvar_Menu;
procedure CGVar_inc;
procedure CGVar_dec;
procedure Ch_GVar;
procedure Gen_NPC_Menu;
procedure PID100A;
procedure PID100B;
procedure PID010A;
procedure PID010B;
procedure PID001A;
procedure PID001B;
procedure SID_Menu;
procedure SIDGenP_Menu;
procedure SIDGenP01;
procedure SIDGenP02;
procedure SIDGenP03;
procedure SIDGenP04;
procedure SIDGenP05;
procedure SIDGenF_Menu;
procedure SIDGenF01;
procedure SIDGenF02;
procedure SIDGenF03;
procedure SIDGenF04;
procedure SIDGenF05;
procedure SIDGenF06;
procedure SIDGenF07;
procedure SIDCus_Menu;
procedure SID100A;
procedure SID100B;
procedure SID010A;
procedure SID010B;
procedure SID001A;
procedure SID001B;
procedure NPCdir_Menu;
procedure NPC_Or;
procedure NPCdis_Menu;
procedure NPC_disA;
procedure NPC_disB;
procedure Gen_NPC_Confirm;
procedure Cr_NPC;
procedure Ch_FRM_Menu00;
procedure Ch_FRM_Menu01;
procedure Ch_FRM_Menu02;
procedure Ch_FRM_Menu03;
procedure Ch_FRM_Menu04;
procedure Ch_FRM_Menu05;
procedure Ch_FRM_Menu06;
procedure Ch_FRM_Menu07;
procedure Ch_FRM_Menu08;
procedure Ch_FRM_Menu09;
procedure Ch_FRM_Menu10;
procedure Ch_FRM_Menu11;
procedure Ch_FRM_Menu12;
procedure Ch_FRM_Menu13;
procedure Ch_FRM_Menu14;
procedure Ch_FRM_Menu15;
procedure Ch_FRM_Menu16;
procedure Ch_FRM_Menu17;
procedure Ch_FRM_Menu18;
procedure Ch_FRM_Menu19;
procedure Ch_FRM_000;
procedure Ch_FRM_001;
procedure Ch_FRM_002;
procedure Ch_FRM_003;
procedure Ch_FRM_004;
procedure Ch_FRM_005;
procedure Ch_FRM_006;
procedure Ch_FRM_007;
procedure Ch_FRM_008;
procedure Ch_FRM_009;
procedure Ch_FRM_010;
procedure Ch_FRM_011;
procedure Ch_FRM_012;
procedure Ch_FRM_013;
procedure Ch_FRM_014;
procedure Ch_FRM_015;
procedure Ch_FRM_016;
procedure Ch_FRM_017;
procedure Ch_FRM_018;
procedure Ch_FRM_019;
procedure Ch_FRM_020;
procedure Ch_FRM_021;
procedure Ch_FRM_022;
procedure Ch_FRM_023;
procedure Ch_FRM_024;
procedure Ch_FRM_025;
procedure Ch_FRM_026;
procedure Ch_FRM_027;
procedure Ch_FRM_028;
procedure Ch_FRM_029;
procedure Ch_FRM_030;
procedure Ch_FRM_031;
procedure Ch_FRM_032;
procedure Ch_FRM_033;
procedure Ch_FRM_034;
procedure Ch_FRM_035;
procedure Ch_FRM_036;
procedure Ch_FRM_037;
procedure Ch_FRM_038;
procedure Ch_FRM_039;
procedure Ch_FRM_040;
procedure Ch_FRM_041;
procedure Ch_FRM_042;
procedure Ch_FRM_043;
procedure Ch_FRM_044;
procedure Ch_FRM_045;
procedure Ch_FRM_046;
procedure Ch_FRM_047;
procedure Ch_FRM_048;
procedure Ch_FRM_049;
procedure Ch_FRM_050;
procedure Ch_FRM_051;
procedure Ch_FRM_052;
procedure Ch_FRM_053;
procedure Ch_FRM_054;
procedure Ch_FRM_055;
procedure Ch_FRM_056;
procedure Ch_FRM_057;
procedure Ch_FRM_058;
procedure Ch_FRM_059;
procedure Ch_FRM_060;
procedure Ch_FRM_061;
procedure Ch_FRM_062;
procedure Ch_FRM_063;
procedure Ch_FRM_064;
procedure Ch_FRM_065;
procedure Ch_FRM_066;
procedure Ch_FRM_067;
procedure Ch_FRM_068;
procedure Ch_FRM_069;
procedure Ch_FRM_070;
procedure Ch_FRM_071;
procedure Ch_FRM_072;
procedure Ch_FRM_073;
procedure Ch_FRM_074;
procedure Ch_FRM_075;
procedure Ch_FRM_076;
procedure Ch_FRM_077;
procedure Ch_FRM_078;
procedure Ch_FRM_079;
procedure Ch_FRM_080;
procedure Ch_FRM_081;
procedure Ch_FRM_082;
procedure Ch_FRM_083;
procedure Ch_FRM_084;
procedure Ch_FRM_085;
procedure Ch_FRM_086;
procedure Ch_FRM_087;
procedure Ch_FRM_088;
procedure Ch_FRM_089;
procedure Ch_FRM_090;
procedure Ch_FRM_091;
procedure Ch_FRM_092;
procedure Ch_FRM_093;
procedure Ch_FRM_094;
procedure Ch_FRM_095;
procedure Ch_FRM_096;
procedure Set_Coordinates;
procedure set_dest_x;
procedure DX1000A;
procedure DX1000B;
procedure DX0100A;
procedure DX0100B;
procedure DX0010A;
procedure DX0010B;
procedure DX0001A;
procedure DX0001B;
procedure set_dest_y;
procedure DY1000A;
procedure DY1000B;
procedure DY0100A;
procedure DY0100B;
procedure DY0010A;
procedure DY0010B;
procedure DY0001A;
procedure DY0001B;
procedure calc_dis_x;
procedure calc_dis_y;
procedure set_hor_dir;
procedure set_ver_dir;
procedure pre_check;
procedure dis_str;
procedure Triangulate;
procedure Approximate_Value_G;
procedure calc_00;
procedure calc_01;
procedure Recalculate;
procedure Display_distance;
procedure Node_X;
procedure use_healing_items_target;
procedure use_healing_items_on_target(variable arg0);
procedure delete_item(variable arg0);
procedure Node001;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node034;
procedure Node035;
procedure Node036;
procedure Node037;
procedure Node038;
procedure Node039;
procedure Node040;
procedure Node041;
procedure Node042;
procedure Node043;
procedure Node044;
procedure Node045;
procedure Node046;
procedure Node047;
procedure Node048;
procedure Node049;
procedure Node050;
procedure Node051;
procedure Node052;
procedure Node053;
procedure Node054;
procedure Node055;
procedure Node056;
procedure Node057;
procedure Node058;
procedure Node059;
procedure Node060;
procedure Node061;
procedure Node062;
procedure Node063;
procedure Node064;
procedure Node065;
procedure Node066;
procedure Node067;
procedure Node068;
procedure Node069;
procedure Node070;
procedure Node071;
procedure Node072;
procedure Node073;
procedure Node074;
procedure Node075;
procedure Node076;
procedure Node077;
procedure Node078;
procedure Node079;
procedure Node080;
procedure Node081;
procedure Node082;
procedure Node083;
procedure Node084;
procedure Node085;
procedure Node086;
procedure Node087;
procedure Node088;
procedure Node089;
procedure Node090;
procedure Node091;
procedure Node092;
procedure Node093;
procedure Node094;
procedure Node095;
procedure Node096;
procedure Node097;
procedure Node098;
procedure Node099;
procedure Node100;
procedure Node101;
procedure Node102;
procedure Node103;
procedure Node104;
procedure Node105;
procedure Node106;
procedure Node107;
procedure Node108;
procedure Node109;
procedure Node110;
procedure Node111;
procedure Node112;
procedure Node113;
procedure Node114;
procedure Node115;
procedure Node116;
procedure Node117;
procedure Node118;
procedure Node119;
procedure Node120;
procedure Node121;
procedure Node122;
procedure Node123;
procedure Node124;
procedure Node125;
procedure Node126;
procedure Node127;
procedure Node128;
procedure Node129;
procedure Node130;
procedure Node131;
procedure Node132;
procedure Node133;
procedure Node134;
procedure Node135;
procedure Node136;
procedure Node137;
procedure Node138;
procedure Node139;
procedure Node140;
procedure Node141;
procedure Node142;
procedure Node143;
procedure Node144;
procedure Node145;
procedure Node146;
procedure Node147;
procedure Node148;
procedure Node149;
procedure Node150;
procedure Node151;
procedure Node152;
procedure Node153;
procedure Node154;
procedure Node155;
procedure Node156;
procedure Node157;
procedure Node158;
procedure Node159;
procedure Node160;
procedure Node161;
procedure Node162;
procedure Node163;
procedure Node164;
procedure Node165;
procedure Node166;
procedure Node167;
procedure Node168;
procedure Node169;
procedure Node170;
procedure Node171;
procedure Node172;
procedure Node173;
procedure Node174;
procedure Node175;
procedure Node176;
procedure Node177;
procedure Node178;
procedure Node179;
procedure Node180;
procedure Node181;
procedure Node182;
procedure Node183;
procedure Node184;
procedure Node185;
procedure Node186;
procedure Node187;
procedure Node188;
procedure Node189;
procedure Node190;
procedure Node191;
procedure Node192;
procedure Node193;
procedure Node194;
procedure Node195;
procedure Node196;
procedure Node197;
procedure Node198;
procedure Node199;
procedure Node200;
procedure Node201;
procedure Node202;
procedure Node203;
procedure Node204;
procedure Node205;
procedure Node206;
procedure Node207;
procedure Node208;
procedure Node209;
procedure Node210;
procedure Node211;
procedure Node212;
procedure Node213;
procedure Node214;
procedure Node215;
procedure Node216;
procedure Node217;
procedure Node218;
procedure Node219;
procedure Node220;
procedure Node221;
procedure Node222;
procedure Node223;
procedure Node224;
procedure Node225;
procedure Node226;
procedure Node227;
procedure Node228;
procedure Node229;
procedure Critters_All_Dead;
procedure Hint_Book;
procedure Herbs_On_Map;
procedure Node999;
procedure Node230;
procedure Node231;
procedure Bonu_Move_Perks;
procedure thiry_k_gold;
procedure Add_Custom_Perks;
procedure Max_Carry_Weight;
procedure Sort_Ammo;
procedure Starting;

variable range_perks;
variable math;
variable float_math := 0.00000;

procedure modify_critter(variable arg0);
procedure CalculateBonuses;
procedure HealCritter(variable arg0);
procedure MapEnterHealCritter(variable arg0);


procedure foe_equip
begin
    add_obj_to_inven(GVar38, GVar39);
    add_mult_objs_to_inven(GVar38, GVar40, random(1, 4));
    wield_obj_critter(GVar38, GVar39);
    critter_add_trait(GVar38, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_ARROYO_WARRIOR);
    call Cr_Foe();
end

procedure start
begin
    if (script_action == use_obj_on_proc) then begin
        call use_obj_on_p_proc();
    end
    else begin
        if (script_action == look_at_proc) then begin
            call look_at_p_proc();
        end
        else begin
            if (script_action == timed_event_proc) then begin
                call timed_event_p_proc();
            end
        end
    end
end

procedure use_obj_on_p_proc
begin
    script_overrides;
    if (obj_pid(self_obj) == 57) then begin
        call Starting();
    end
    else begin
        if (obj_pid(self_obj) == 50) then begin
            if (not(combat_is_initialized)) then begin
                start_gdialog(1, self_obj, 4, -1, -1);
                gsay_start;
                call Node001();
                gsay_end;
                end_dialogue;
            end
            else begin
                if (get_sfall_global_int("nirran_1") == 1) then begin
                    if (not(critter_state(target_obj) bwand 1)) then begin
                        if (obj_carrying_pid_obj(dude_obj, 805) or obj_carrying_pid_obj(dude_obj, 48) or obj_carrying_pid_obj(dude_obj, 49) or obj_carrying_pid_obj(dude_obj, 103) or obj_carrying_pid_obj(dude_obj, 81) or obj_carrying_pid_obj(dude_obj, 801) or obj_carrying_pid_obj(dude_obj, 71) or obj_carrying_pid_obj(dude_obj, 802) or obj_carrying_pid_obj(dude_obj, 273) or obj_carrying_pid_obj(dude_obj, 40) or obj_carrying_pid_obj(dude_obj, 144) or obj_carrying_pid_obj(dude_obj, 808)) then begin
                            if (((obj_pid(target_obj) - 16777216) >= 0) and ((obj_pid(target_obj) - 33554431) < 0)) then begin
                                call use_healing_items_target();
                            end
                            else begin
                                display_msg("Your target is not a critter.");
                            end
                        end
                        else begin
                            display_msg(dude_name + message_str(SCRIPT_WSTERM3B, 186) + message_str(SCRIPT_WSTERM3B, 201));
                        end
                    end
                    else begin
                        display_msg("Your target is dead.");
                    end
                end
            end
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (get_sfall_global_int("nirran_3") == 0) then begin
        display_msg("Fallout Cheat-Boy, brought to you by 'Da Wasted Corpse of the Wastelands'.");
    end
    else begin
        if (get_sfall_global_int("nirran_3") == 1) then begin
            display_msg("Mod Options.");
        end
    end
end

procedure timed_event_p_proc
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    if (fixed_param == 1) then begin
        LVar0 := random(20, 21);
        LVar1 := sfx_build_char_name(GVar17, LVar0, 3);
        reg_anim_func(2, GVar17);
        reg_anim_func(1, 1);
        reg_anim_animate(GVar17, LVar0, -1);
        reg_anim_play_sfx(GVar17, LVar1, 0);
        reg_anim_func(3, 0);
        add_timer_event(self_obj, game_ticks(2), 2);
    end
    else begin
        if (fixed_param == 2) then begin
            critter_heal(GVar17, -get_critter_stat(GVar17, STAT_max_hp));
            display_msg(obj_name(target_obj) + " is dead.");
        end
    end
    return 0;
    LVar0 := 0;
    LVar1 := 0;
end

procedure PM_Add
begin
    if ((obj_type(target_obj) == 0) or (obj_type(target_obj) == 1) and (target_obj != dude_obj) and (obj_in_party(target_obj))) then begin
        party_add(target_obj);
    end
    display_msg(obj_name(target_obj) + " has joined your party.");
end

procedure PM_Rem
begin
    if ((obj_type(target_obj) == 0) or (obj_type(target_obj) == 1) and (target_obj != dude_obj) and (obj_in_party(target_obj))) then begin
        party_remove(target_obj);
    end
    display_msg(obj_name(target_obj) + " has left your party.");
end

procedure Dlg_Start
begin
    start_gdialog(961, target_obj, 4, -1, -1);
    gsay_start;
    call MMenu_00();
    gsay_end;
    end_dialogue;
end

procedure PM_ARCmbt
begin
    if ((obj_type(target_obj) == 0) or (obj_type(target_obj) == 1) and ((target_obj == dude_obj) or (obj_in_party(target_obj)))) then begin
        call Heal_Target_Chk();
    end
    else begin
        call PM_Add();
    end
end

procedure MMenu_00
begin
    gsay_reply(SCRIPT_KCROB, "CHEAT-BOY 2004                                                   How would you like to cheat?");
    if (target_obj == dude_obj) then begin
        giq_option(1, SCRIPT_KCROB, "Modify Player: Stats, skills, perks, etc.", PC_Mod_Menu, NEUTRAL_REACTION);
    end
    if ((obj_type(target_obj) == 0) or (obj_type(target_obj) == 1) and (target_obj != dude_obj) and (obj_in_party(target_obj))) then begin
        giq_option(1, SCRIPT_KCROB, "Add target to party (Valid targets: critters and items).", PM_Add, NEUTRAL_REACTION);
    end
    if ((obj_type(target_obj) == 0) or (obj_type(target_obj) == 1) and (target_obj != dude_obj) and (obj_in_party(target_obj))) then begin
        giq_option(1, SCRIPT_KCROB, "Remove target from party.", PM_Rem, NEUTRAL_REACTION);
    end
    if (obj_type(target_obj) == 1) then begin
        giq_option(1, SCRIPT_KCROB, "Heal Target.", Heal_Target_Chk, NEUTRAL_REACTION);
    end
    if (obj_type(target_obj) == 1) then begin
        giq_option(1, SCRIPT_KCROB, "Injure Target.", Inj_Target_Chk, NEUTRAL_REACTION);
    end
    if (obj_type(target_obj) == 1) then begin
        giq_option(1, SCRIPT_KCROB, "Kill Target.", Kill_Target_Chk, NEUTRAL_REACTION);
    end
    if (obj_type(target_obj) == 1) then begin
        giq_option(1, SCRIPT_KCROB, "Check resistances and thresholds.", Chk_Res_Chk, NEUTRAL_REACTION);
    end
    if (target_obj == dude_obj) then begin
        giq_option(1, SCRIPT_KCROB, "Illicit Drug Cabinet.", Drug_Menu, NEUTRAL_REACTION);
    end
    if (target_obj == dude_obj) then begin
        giq_option(1, SCRIPT_KCROB, "Adjust funds.", Fund_Chk, NEUTRAL_REACTION);
    end
    if ((obj_type(target_obj) == 2) or (obj_type(target_obj) == 3)) then begin
        giq_option(1, SCRIPT_KCROB, "Destroy Scenery or Wall: Good for clearing paths", Clear_Path, NEUTRAL_REACTION);
    end
    if (obj_type(target_obj) == 1) then begin
        giq_option(1, SCRIPT_KCROB, "[MORE]", MMenu_01, NEUTRAL_REACTION);
    end
end

procedure MMenu_01
begin
    gsay_reply(SCRIPT_KCROB, "CHEAT-BOY 2004 -- Page 2 of 3");
    if (obj_type(target_obj) == 1) then begin
        giq_option(1, SCRIPT_KCROB, "Equip armor: Create a suit of HPA on target.", Give_Armor, NEUTRAL_REACTION);
    end
    if (obj_type(target_obj) == 1) then begin
        giq_option(1, SCRIPT_KCROB, "Create Item: Creates an specific item on target.", Item_Cr_Start, NEUTRAL_REACTION);
    end
    if (obj_type(target_obj) == 1) then begin
        giq_option(1, SCRIPT_KCROB, "Change appearance.", Ch_FRM_Menu00, NEUTRAL_REACTION);
    end
    if ((obj_type(target_obj) == 1) and (target_obj != dude_obj)) then begin
        giq_option(1, SCRIPT_KCROB, "Remove Weapon: Causes an NPC to put away his/her weapon", Wpn_Rem, NEUTRAL_REACTION);
    end
    if (target_obj == dude_obj) then begin
        giq_option(1, SCRIPT_KCROB, "Spawn Enemies.", Foe_Cr_Menu00, NEUTRAL_REACTION);
    end
    if (target_obj == dude_obj) then begin
        giq_option(1, SCRIPT_KCROB, "Spawn Generic NPC.", Gen_NPC_Menu, NEUTRAL_REACTION);
    end
    if (target_obj == dude_obj) then begin
        giq_option(1, SCRIPT_KCROB, "[MORE]", MMenu_02, NEUTRAL_REACTION);
    end
    giq_option(1, SCRIPT_KCROB, "[BACK]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[EXIT]", MMenu_Exit, NEUTRAL_REACTION);
end

procedure MMenu_02
begin
    gsay_reply(SCRIPT_KCROB, "CHEAT-BOY 2004 -- Page 3 of 3");
    if (target_obj == dude_obj) then begin
        giq_option(1, SCRIPT_KCROB, "Resurrect party member.", Res_NPC_Menu, NEUTRAL_REACTION);
    end
    if (target_obj == dude_obj) then begin
        giq_option(1, SCRIPT_KCROB, "Check dis X,Y.", Set_Coordinates, NEUTRAL_REACTION);
    end
    if (target_obj == dude_obj) then begin
        giq_option(1, SCRIPT_KCROB, "Display Global Variable Status", Display_Gvar_Status, NEUTRAL_REACTION);
    end
    giq_option(1, SCRIPT_KCROB, "[BACK]", MMenu_01, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[EXIT]", MMenu_Exit, NEUTRAL_REACTION);
end

procedure Heal_Target_Chk
begin
    if (obj_type(target_obj) == 1) then begin
        call Heal_Target_Start();
    end
    else begin
        call Inv_Tar_Msg();
    end
end

procedure Heal_Target_Start
begin
    GVar14 := get_critter_stat(target_obj, STAT_max_hp) - get_critter_stat(target_obj, STAT_current_hp);
    GVar15 := get_critter_stat(dude_obj, STAT_current_rad);
    GVar16 := get_critter_stat(dude_obj, STAT_current_poison);
    if (GVar15 > 0) then begin
        gfade_out(600);
    end
    radiation_dec(dude_obj, GVar15);
    gfade_in(600);
    display_msg(dude_name + " has lost " + GVar15 + " rads.");
    if (get_poison(dude_obj)) then begin
        gfade_out(600);
    end
    set_critter_stat(dude_obj, STAT_current_poison, -GVar16);
    gfade_in(600);
    display_msg(dude_name + " has lost " + GVar16 + " poison level.");
    if (get_critter_stat(target_obj, STAT_current_hp) < get_critter_stat(target_obj, STAT_max_hp)) then begin
        script_overrides;
    end
    critter_heal(target_obj, GVar14);
    display_msg(obj_name(target_obj) + " has been healed.");
    if (get_critter_stat(target_obj, STAT_current_hp) == get_critter_stat(target_obj, STAT_max_hp)) then begin
        if (((critter_state(target_obj) bwand 4) == 0) and ((critter_state(target_obj) bwand 8) == 0) and ((critter_state(target_obj) bwand 16) == 0) and ((critter_state(target_obj) bwand 32) == 0) and ((critter_state(target_obj) bwand 64) == 0)) then begin
            display_msg(obj_name(target_obj) + " is not injured.");
        end
    end
end

procedure ExpMenu
begin
    gsay_reply(SCRIPT_KCROB, "How much experience do you need?                        WARNING: Exit dialog and check character screen everytime you level-up.  If you are a newbie, it is recomended you don't select more than 1,000 point increments.  If your character gains more than six levels before you have allocated perks and stats you may miss out on awarded perks.");
    giq_option(1, SCRIPT_KCROB, "Gain one level", Exp_100000, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "10,000 points", Exp_10000, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "5,000 points", Exp_5000, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "1,000 points", Exp_1000, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Mod_Menu, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[EXIT]", MMenu_Exit, NEUTRAL_REACTION);
end

procedure Rep_Menu
begin
    gsay_reply(SCRIPT_KCROB, "Reputation : " + global_var(GVAR_BRAIN_BOT_BRAIN));
    giq_option(1, SCRIPT_KCROB, "General Reputation", Rep_Mod, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Karmic Traits", Karmic_Trait_Menu, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Mod_Menu, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[EXIT]", MMenu_Exit, NEUTRAL_REACTION);
end

procedure Rep_Mod
begin
    gsay_reply(SCRIPT_KCROB, "Reputation : " + global_var(GVAR_BRAIN_BOT_BRAIN));
    giq_option(1, SCRIPT_KCROB, "+1 points", Rep_Inc01, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "+5 points", Rep_Inc05, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "+10 points", Rep_Inc10, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "-1 points", Rep_Dec01, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "-5 points", Rep_Dec05, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "-10 points", Rep_Dec10, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", Rep_Menu, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[EXIT]", MMenu_Exit, NEUTRAL_REACTION);
end

procedure Karmic_Trait_Menu
begin
    gsay_reply(SCRIPT_KCROB, "Reputation : " + global_var(GVAR_BRAIN_BOT_BRAIN));
    giq_option(1, SCRIPT_KCROB, "Champion", Rep_Pos, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Berserker", Rep_Neg, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Childkiller", Rep_CK, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", Rep_Menu, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[EXIT]", MMenu_Exit, NEUTRAL_REACTION);
end

procedure Rep_Pos
begin
    if (global_var(GVAR_SIERRA_PASSWORD) > 0) then begin
        GVar18 := "Remove Champion karmic trait?";
    end
    else begin
        GVar18 := "Add Champion karmic trait?";
    end
    gsay_reply(SCRIPT_KCROB, GVar18);
    if (global_var(GVAR_SIERRA_PASSWORD) == 0) then begin
        giq_option(1, SCRIPT_KCROB, "Add", Rep_Pos00, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_SIERRA_PASSWORD) > 0) then begin
        giq_option(1, SCRIPT_KCROB, "Remove", Rep_Pos01, NEUTRAL_REACTION);
    end
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", Karmic_Trait_Menu, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
end

procedure Rep_Neg
begin
    if (global_var(GVAR_SIERRA_LOCKOUT) > 0) then begin
        GVar18 := "Remove Berserker karmic trait?";
    end
    else begin
        GVar18 := "Add Berserker karmic trait?";
    end
    gsay_reply(SCRIPT_KCROB, GVar18);
    if (global_var(GVAR_SIERRA_LOCKOUT) == 0) then begin
        giq_option(1, SCRIPT_KCROB, "Add", Rep_Neg00, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_SIERRA_LOCKOUT) > 0) then begin
        giq_option(1, SCRIPT_KCROB, "Remove", Rep_Neg01, NEUTRAL_REACTION);
    end
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", Karmic_Trait_Menu, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
end

procedure Rep_CK
begin
    if (global_var(GVAR_GECKO_ECON_DISK) > 0) then begin
        GVar18 := "Remove Childkiller karmic trait?";
    end
    else begin
        GVar18 := "Add Childkiller karmic trait?";
    end
    gsay_reply(SCRIPT_KCROB, GVar18);
    if (global_var(GVAR_GECKO_ECON_DISK) == 0) then begin
        giq_option(1, SCRIPT_KCROB, "Add", Rep_CK00, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_GECKO_ECON_DISK) > 0) then begin
        giq_option(1, SCRIPT_KCROB, "Remove", Rep_CK01, NEUTRAL_REACTION);
    end
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", Karmic_Trait_Menu, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
end

procedure Exp_100000
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    LVar0 := get_pc_stat(PCSTAT_level);
    if ((get_sfall_global_int("perk0126") == 1) and (has_trait(TRAIT_PERK, dude_obj, PERK_swift_learner) == 5)) then begin
        LVar1 := LVar0 * 1000 / 2;
    end
    else begin
        LVar1 := LVar0 * 1000;
    end
    give_exp_points(LVar1);
    display_msg("You gain " + LVar1 + " experience");
    call ExpMenu();
end

procedure Exp_10000
begin
    give_exp_points(10000);
    display_msg("You gain 10,000xp");
    call ExpMenu();
end

procedure Exp_5000
begin
    give_exp_points(5000);
    display_msg("You gain 5,000xp");
    call ExpMenu();
end

procedure Exp_1000
begin
    give_exp_points(1000);
    display_msg("You gain 1,000xp");
    call ExpMenu();
end

procedure Exp_100
begin
    give_exp_points(100);
    display_msg("You gain 100xp");
    call ExpMenu();
end

procedure Exp_10
begin
    give_exp_points(10);
    display_msg("You gain 10xp");
    call ExpMenu();
end

procedure Rep_Inc01
begin
    set_global_var(GVAR_BRAIN_BOT_BRAIN, global_var(GVAR_BRAIN_BOT_BRAIN) + 1);
    display_msg("You gain 1pt of Karma");
    call Rep_Mod();
end

procedure Rep_Inc05
begin
    set_global_var(GVAR_BRAIN_BOT_BRAIN, global_var(GVAR_BRAIN_BOT_BRAIN) + 5);
    display_msg("You gain 5pts of Karma");
    call Rep_Mod();
end

procedure Rep_Inc10
begin
    set_global_var(GVAR_BRAIN_BOT_BRAIN, global_var(GVAR_BRAIN_BOT_BRAIN) + 10);
    display_msg("You gain 10pts of Karma");
    call Rep_Mod();
end

procedure Rep_Dec01
begin
    set_global_var(GVAR_BRAIN_BOT_BRAIN, global_var(GVAR_BRAIN_BOT_BRAIN) - 1);
    display_msg("You lose 1pt of Karma");
    call Rep_Mod();
end

procedure Rep_Dec05
begin
    set_global_var(GVAR_BRAIN_BOT_BRAIN, global_var(GVAR_BRAIN_BOT_BRAIN) - 5);
    display_msg("You lose 5pts of Karma");
    call Rep_Mod();
end

procedure Rep_Dec10
begin
    set_global_var(GVAR_BRAIN_BOT_BRAIN, global_var(GVAR_BRAIN_BOT_BRAIN) - 10);
    display_msg("You lose 10pts of Karma");
    call Rep_Mod();
end

procedure Rep_Pos00
begin
    if (global_var(GVAR_SIERRA_PASSWORD) < 1) then begin
        set_global_var(GVAR_SIERRA_PASSWORD, 1);
    end
    if (global_var(GVAR_SIERRA_LOCKOUT) > 0) then begin
        set_global_var(GVAR_SIERRA_LOCKOUT, 0);
    end
    call Rep_Menu();
end

procedure Rep_Pos01
begin
    if (global_var(GVAR_SIERRA_PASSWORD) > 0) then begin
        set_global_var(GVAR_SIERRA_PASSWORD, 0);
    end
    call Rep_Menu();
end

procedure Rep_Neg00
begin
    if (global_var(GVAR_SIERRA_LOCKOUT) < 1) then begin
        set_global_var(GVAR_SIERRA_LOCKOUT, 1);
    end
    if (global_var(GVAR_SIERRA_PASSWORD) > 0) then begin
        set_global_var(GVAR_SIERRA_PASSWORD, 0);
    end
    call Rep_Menu();
end

procedure Rep_Neg01
begin
    if (global_var(GVAR_SIERRA_LOCKOUT) > 0) then begin
        set_global_var(GVAR_SIERRA_LOCKOUT, 0);
    end
    call Rep_Menu();
end

procedure Rep_CK00
begin
    if (global_var(GVAR_GECKO_ECON_DISK) < 1) then begin
        set_global_var(GVAR_GECKO_ECON_DISK, global_var(GVAR_GECKO_ECON_DISK) + 1);
    end
    call Rep_Menu();
end

procedure Rep_CK01
begin
    if (global_var(GVAR_GECKO_ECON_DISK) > 0) then begin
        set_global_var(GVAR_GECKO_ECON_DISK, global_var(GVAR_GECKO_ECON_DISK) - 1);
    end
    call Rep_Menu();
end

procedure Chk_Res_Chk
begin
    if (obj_type(target_obj) == 1) then begin
        call Chk_Res();
    end
    else begin
        call Inv_Tar_Msg();
    end
end

procedure Chk_Res
begin
    script_overrides;
    display_msg("THRESHOLDS AND RESISTANCES:");
    display_msg("Normal:     " + get_critter_stat(target_obj, STAT_dmg_thresh) + "/" + get_critter_stat(target_obj, STAT_dmg_resist) + "%");
    display_msg("Laser:      " + get_critter_stat(target_obj, STAT_dmg_thresh_laser) + "/" + get_critter_stat(target_obj, STAT_dmg_resist_laser) + "%");
    display_msg("Fire:       " + get_critter_stat(target_obj, STAT_dmg_thresh_fire) + "/" + get_critter_stat(target_obj, STAT_dmg_resist_fire) + "%");
    display_msg("Plasma:     " + get_critter_stat(target_obj, STAT_dmg_thresh_plasma) + "/" + get_critter_stat(target_obj, STAT_dmg_resist_plasma) + "%");
    display_msg("Electrical: " + get_critter_stat(target_obj, STAT_dmg_thresh_electrical) + "/" + get_critter_stat(target_obj, STAT_dmg_resist_electrical) + "%");
    display_msg("EMP:        " + get_critter_stat(target_obj, STAT_dmg_thresh_emp) + "/" + get_critter_stat(target_obj, STAT_dmg_resist_emp) + "%");
    display_msg("Explode:    " + get_critter_stat(target_obj, STAT_dmg_thresh_explosion) + "/" + get_critter_stat(target_obj, STAT_dmg_resist_explosion) + "%");
    display_msg("Radiation:  " + "--/" + get_critter_stat(target_obj, STAT_rad_resist) + "%");
    display_msg("Poison:     " + "--/" + get_critter_stat(target_obj, STAT_poison_resist) + "%");
    gfade_out(600);
    gfade_in(600);
end

procedure Give_Armor
begin
    gsay_reply(SCRIPT_KCROB, "Select armour");
    giq_option(1, SCRIPT_KCROB, "Hardened PA", Give_Armor_HPA, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "APA MkII", Give_Armor_PAMkII, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Mutant Leathers", Give_Armor_MLA, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Mutant Metal Armour", Give_Armor_MMA, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Mutant Power Armour", Give_Armor_MPA, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[EXIT]", MMenu_Exit, NEUTRAL_REACTION);
end

procedure Give_Armor_HPA
begin
    GVar30 := create_object(232, 0, 0);
    add_mult_objs_to_inven(target_obj, GVar30, 1);
    wield_obj_critter(target_obj, obj_carrying_pid_obj(target_obj, 232));
end

procedure Give_Armor_PAMkII
begin
    GVar30 := create_object(349, 0, 0);
    add_mult_objs_to_inven(target_obj, GVar30, 1);
    wield_obj_critter(target_obj, obj_carrying_pid_obj(target_obj, 349));
end

procedure Give_Armor_MLA
begin
    GVar30 := create_object(536, 0, 0);
    add_mult_objs_to_inven(target_obj, GVar30, 1);
    wield_obj_critter(target_obj, obj_carrying_pid_obj(target_obj, 536));
end

procedure Give_Armor_MMA
begin
    GVar30 := create_object(537, 0, 0);
    add_mult_objs_to_inven(target_obj, GVar30, 1);
    wield_obj_critter(target_obj, obj_carrying_pid_obj(target_obj, 537));
end

procedure Give_Armor_MPA
begin
    GVar30 := create_object(538, 0, 0);
    add_mult_objs_to_inven(target_obj, GVar30, 1);
    wield_obj_critter(target_obj, obj_carrying_pid_obj(target_obj, 538));
end

procedure Wpn_Rem
begin
    GVar30 := critter_inven_obj(target_obj, INVEN_TYPE_RIGHT_HAND);
    debug_msg("armour pid == " + obj_pid(GVar30));
    rm_obj_from_inven(target_obj, GVar30);
    add_obj_to_inven(target_obj, GVar30);
end

procedure MMenu_Exit
begin
end

procedure Clear_Path
begin
    if ((obj_type(target_obj) == 2) or (obj_type(target_obj) == 3)) then begin
        gfade_out(60 * 10);
        destroy_object(target_obj);
        gfade_in(60 * 10);
    end
end

procedure PC_Mod_Menu
begin
    gsay_reply(SCRIPT_KCROB, "What do you want to modify");
    giq_option(1, SCRIPT_KCROB, "Gender", Mod_Sex, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Stats", PC_Stat_Menu, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Skills", PC_Skill_Menu00, NEUTRAL_REACTION);
    if (get_pc_stat(PCSTAT_level) >= 3) then begin
        giq_option(1, SCRIPT_KCROB, "Perks", PC_Perk_Menu00, NEUTRAL_REACTION);
    end
    giq_option(1, SCRIPT_KCROB, "Experience", ExpMenu, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Reputation", Rep_Menu, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
end

procedure Mod_Sex
begin
    if (dude_gender == 0) then begin
        script_overrides;
        gfade_out(60);
        gfade_in(60);
        set_critter_stat(dude_obj, STAT_gender, 1);
        display_msg("PC Gender changed to female.");
    end
    else begin
        if (dude_gender == 1) then begin
            script_overrides;
            gfade_out(60);
            gfade_in(60);
            set_critter_stat(dude_obj, STAT_gender, -1);
            display_msg("PC Gender changed to male.");
        end
    end
end

procedure PC_Perk_Menu00
begin
    gsay_reply(SCRIPT_KCROB, "Use this screen to add perks, perks can only be awarded if you meet their requirements.  The only perks not available are 'Tag' and 'Mutate' which can be selected on level ups.");
    giq_option(1, SCRIPT_KCROB, "Awareness", PC_Perk00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Bonus HtH Damage", PC_Perk02, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Earlier Sequence", PC_Perk06, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Faster Healing", PC_Perk07, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Night Vision", PC_Perk09, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Presence", PC_Perk10, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[MORE]", PC_Perk_Menu01, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
end

procedure PC_Perk_Menu01
begin
    gsay_reply(SCRIPT_KCROB, "Perk Menu -- Page 2/10");
    giq_option(1, SCRIPT_KCROB, "Toughness", PC_Perk12, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Strong Back", PC_Perk13, NEUTRAL_REACTION);
    giq_option(6, SCRIPT_KCROB, "Survivalist", PC_Perk16, NEUTRAL_REACTION);
    giq_option(5, SCRIPT_KCROB, "Healer", PC_Perk19, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Scout", PC_Perk45, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[MORE]", PC_Perk_Menu02, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
end

procedure PC_Perk_Menu02
begin
    gsay_reply(SCRIPT_KCROB, "Perk Menu -- Page 3/10");
    giq_option(1, SCRIPT_KCROB, "Quick Pockets", PC_Perk48, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Smooth Talker", PC_Perk49, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Swift Learner", PC_Perk50, NEUTRAL_REACTION);
    if (get_pc_stat(PCSTAT_level) >= 6) then begin
        giq_option(1, SCRIPT_KCROB, "Bonus Move", PC_Perk03, NEUTRAL_REACTION);
    end
    if (get_pc_stat(PCSTAT_level) >= 6) then begin
        giq_option(1, SCRIPT_KCROB, "Bonus Ranged Damage", PC_Perk04, NEUTRAL_REACTION);
    end
    if (get_pc_stat(PCSTAT_level) >= 6) then begin
        giq_option(1, SCRIPT_KCROB, "[MORE]", PC_Perk_Menu03, NEUTRAL_REACTION);
    end
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu01, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
end

procedure PC_Perk_Menu03
begin
    gsay_reply(SCRIPT_KCROB, "Perk Menu -- Page 4/10");
    if (get_pc_stat(PCSTAT_level) >= 6) then begin
        giq_option(1, SCRIPT_KCROB, "More Criticals", PC_Perk08, NEUTRAL_REACTION);
    end
    if (get_pc_stat(PCSTAT_level) >= 6) then begin
        giq_option(1, SCRIPT_KCROB, "Rad Resistance", PC_Perk11, NEUTRAL_REACTION);
    end
    if (get_pc_stat(PCSTAT_level) >= 6) then begin
        giq_option(1, SCRIPT_KCROB, "Silent Running", PC_Perk15, NEUTRAL_REACTION);
    end
    if (get_pc_stat(PCSTAT_level) >= 6) then begin
        giq_option(6, SCRIPT_KCROB, "Educated", PC_Perk18, NEUTRAL_REACTION);
    end
    if (get_pc_stat(PCSTAT_level) >= 6) then begin
        giq_option(1, SCRIPT_KCROB, "Fortune Finder", PC_Perk20, NEUTRAL_REACTION);
    end
    giq_option(1, SCRIPT_KCROB, "[MORE]", PC_Perk_Menu04, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu02, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
end

procedure PC_Perk_Menu04
begin
    gsay_reply(SCRIPT_KCROB, "Perk Menu -- Page 5/10");
    if (get_pc_stat(PCSTAT_level) >= 6) then begin
        giq_option(5, SCRIPT_KCROB, "Empathy", PC_Perk22, NEUTRAL_REACTION);
    end
    if (get_pc_stat(PCSTAT_level) >= 6) then begin
        giq_option(1, SCRIPT_KCROB, "Snakeater", PC_Perk30, NEUTRAL_REACTION);
    end
    if (get_pc_stat(PCSTAT_level) >= 6) then begin
        giq_option(1, SCRIPT_KCROB, "Heave Ho!", PC_Perk35, NEUTRAL_REACTION);
    end
    if (get_pc_stat(PCSTAT_level) >= 6) then begin
        giq_option(1, SCRIPT_KCROB, "Ghost", PC_Perk38, NEUTRAL_REACTION);
    end
    if (get_pc_stat(PCSTAT_level) >= 6) then begin
        giq_option(1, SCRIPT_KCROB, "Pathfinder", PC_Perk43, NEUTRAL_REACTION);
    end
    giq_option(1, SCRIPT_KCROB, "[MORE]", PC_Perk_Menu05, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu03, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
end

procedure PC_Perk_Menu05
begin
    gsay_reply(SCRIPT_KCROB, "Perk Menu -- Page 6/10");
    if (get_pc_stat(PCSTAT_level) >= 6) then begin
        giq_option(1, SCRIPT_KCROB, "Ranger", PC_Perk47, NEUTRAL_REACTION);
    end
    if (get_pc_stat(PCSTAT_level) >= 6) then begin
        giq_option(1, SCRIPT_KCROB, "Friendly Foe", PC_Perk36, NEUTRAL_REACTION);
    end
    if (get_pc_stat(PCSTAT_level) >= 9) then begin
        giq_option(1, SCRIPT_KCROB, "Flower Child", PC_Perk42, NEUTRAL_REACTION);
    end
    if (get_pc_stat(PCSTAT_level) >= 9) then begin
        giq_option(1, SCRIPT_KCROB, "Animal Friend", PC_Perk44, NEUTRAL_REACTION);
    end
    if (get_pc_stat(PCSTAT_level) >= 9) then begin
        giq_option(6, SCRIPT_KCROB, "Sharpshooter", PC_Perk14, NEUTRAL_REACTION);
    end
    if (get_pc_stat(PCSTAT_level) >= 9) then begin
        giq_option(1, SCRIPT_KCROB, "[MORE]", PC_Perk_Menu06, NEUTRAL_REACTION);
    end
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu04, NEUTRAL_REACTION);
end

procedure PC_Perk_Menu06
begin
    gsay_reply(SCRIPT_KCROB, "Perk Menu -- Page 7/10");
    if (get_pc_stat(PCSTAT_level) >= 9) then begin
        giq_option(1, SCRIPT_KCROB, "Master Trader", PC_Perk17, NEUTRAL_REACTION);
    end
    if (get_pc_stat(PCSTAT_level) >= 9) then begin
        giq_option(1, SCRIPT_KCROB, "Better Criticals", PC_Perk21, NEUTRAL_REACTION);
    end
    if (get_pc_stat(PCSTAT_level) >= 9) then begin
        giq_option(1, SCRIPT_KCROB, "Dodger", PC_Perk29, NEUTRAL_REACTION);
    end
    if (get_pc_stat(PCSTAT_level) >= 9) then begin
        giq_option(1, SCRIPT_KCROB, "Speaker", PC_Perk34, NEUTRAL_REACTION);
    end
    if (get_pc_stat(PCSTAT_level) >= 9) then begin
        giq_option(1, SCRIPT_KCROB, "Explorer", PC_Perk41, NEUTRAL_REACTION);
    end
    if (get_pc_stat(PCSTAT_level) >= 9) then begin
        giq_option(1, SCRIPT_KCROB, "[MORE]", PC_Perk_Menu07, NEUTRAL_REACTION);
    end
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu05, NEUTRAL_REACTION);
end

procedure PC_Perk_Menu07
begin
    gsay_reply(SCRIPT_KCROB, "Perk Menu -- Page 8/10");
    if (get_pc_stat(PCSTAT_level) >= 9) then begin
        giq_option(1, SCRIPT_KCROB, "Mysterious Stranger", PC_Perk46, NEUTRAL_REACTION);
    end
    if (get_pc_stat(PCSTAT_level) >= 9) then begin
        giq_option(1, SCRIPT_KCROB, "Scrounger", PC_Perk40, NEUTRAL_REACTION);
    end
    if (get_pc_stat(PCSTAT_level) >= 12) then begin
        giq_option(1, SCRIPT_KCROB, "Action Boy", PC_Perk26, NEUTRAL_REACTION);
    end
    if (get_pc_stat(PCSTAT_level) >= 12) then begin
        giq_option(1, SCRIPT_KCROB, "Lifegiver", PC_Perk28, NEUTRAL_REACTION);
    end
    if (get_pc_stat(PCSTAT_level) >= 12) then begin
        giq_option(1, SCRIPT_KCROB, "Mr. Fixit", PC_Perk31, NEUTRAL_REACTION);
    end
    if (get_pc_stat(PCSTAT_level) >= 12) then begin
        giq_option(1, SCRIPT_KCROB, "[MORE]", PC_Perk_Menu08, NEUTRAL_REACTION);
    end
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu06, NEUTRAL_REACTION);
end

procedure PC_Perk_Menu08
begin
    gsay_reply(SCRIPT_KCROB, "Perk Menu -- Page 9/10");
    if (get_pc_stat(PCSTAT_level) >= 12) then begin
        giq_option(1, SCRIPT_KCROB, "Medic", PC_Perk32, NEUTRAL_REACTION);
    end
    if (get_pc_stat(PCSTAT_level) >= 12) then begin
        giq_option(1, SCRIPT_KCROB, "Master Thief", PC_Perk33, NEUTRAL_REACTION);
    end
    if (get_pc_stat(PCSTAT_level) >= 12) then begin
        giq_option(1, SCRIPT_KCROB, "Cult of Personality", PC_Perk39, NEUTRAL_REACTION);
    end
    if (get_pc_stat(PCSTAT_level) >= 15) then begin
        giq_option(1, SCRIPT_KCROB, "Pickpocket", PC_Perk37, NEUTRAL_REACTION);
    end
    if (get_pc_stat(PCSTAT_level) >= 15) then begin
        giq_option(1, SCRIPT_KCROB, "Bonus HtH Attacks", PC_Perk01, NEUTRAL_REACTION);
    end
    if (get_pc_stat(PCSTAT_level) >= 15) then begin
        giq_option(1, SCRIPT_KCROB, "[MORE]", PC_Perk_Menu09, NEUTRAL_REACTION);
    end
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu07, NEUTRAL_REACTION);
end

procedure PC_Perk_Menu09
begin
    gsay_reply(SCRIPT_KCROB, "Perk Menu -- Page 10/10");
    if (get_pc_stat(PCSTAT_level) >= 15) then begin
        giq_option(6, SCRIPT_KCROB, "Bonus Rate of Fire", PC_Perk05, NEUTRAL_REACTION);
    end
    if (get_pc_stat(PCSTAT_level) >= 15) then begin
        giq_option(1, SCRIPT_KCROB, "Mental Block", PC_Perk27, NEUTRAL_REACTION);
    end
    if (get_pc_stat(PCSTAT_level) >= 18) then begin
        giq_option(1, SCRIPT_KCROB, "Silent Death", PC_Perk25, NEUTRAL_REACTION);
    end
    if (get_pc_stat(PCSTAT_level) >= 24) then begin
        giq_option(1, SCRIPT_KCROB, "Slayer", PC_Perk23, NEUTRAL_REACTION);
    end
    if (get_pc_stat(PCSTAT_level) >= 24) then begin
        giq_option(1, SCRIPT_KCROB, "Sniper", PC_Perk24, NEUTRAL_REACTION);
    end
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[EXIT]", MMenu_Exit, NEUTRAL_REACTION);
end

procedure PC_Perk00
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_bonus_awareness);
    gsay_reply(SCRIPT_KCROB, "Awareness: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Awareness", Perk00_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk01
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_bonus_hth_attacks);
    gsay_reply(SCRIPT_KCROB, "Bonus HtH Attacks: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Bonus HtH Attacks", Perk01_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk02
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_bonus_hth_damage);
    gsay_reply(SCRIPT_KCROB, "Bonus HtH Damage: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Bonus HtH Damage", Perk02_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk03
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_bonus_move);
    gsay_reply(SCRIPT_KCROB, "Bonus Move: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Bonus Move", Perk03_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk04
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_bonus_ranged_damage);
    gsay_reply(SCRIPT_KCROB, "Bonus Ranged Damage: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Bonus Ranged Damage", Perk04_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk05
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_bonus_rate_of_fire);
    gsay_reply(SCRIPT_KCROB, "Bonus Rate of Fire: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Bonus Rate of Fire", Perk05_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk06
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_earlier_sequence);
    gsay_reply(SCRIPT_KCROB, "Earlier Sequence: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Earlier Sequence", Perk06_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk07
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_faster_healing);
    gsay_reply(SCRIPT_KCROB, "Faster Healing: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Faster Healing", Perk07_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk08
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_more_criticals);
    gsay_reply(SCRIPT_KCROB, "More Criticals: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add More Criticals", Perk08_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk09
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_night_vision);
    gsay_reply(SCRIPT_KCROB, "Night Vision: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Night Vision", Perk09_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk10
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_presence);
    gsay_reply(SCRIPT_KCROB, "Presence: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Presence", Perk10_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk11
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_rad_resistance);
    gsay_reply(SCRIPT_KCROB, "Rad Resistance: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Rad Resistance", Perk11_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk12
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_toughness);
    gsay_reply(SCRIPT_KCROB, "Toughness: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Toughness", Perk12_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk13
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_strong_back);
    gsay_reply(SCRIPT_KCROB, "Strong Back: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Strong Back", Perk13_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk14
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_sharpshooter);
    gsay_reply(SCRIPT_KCROB, "Sharpshooter: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Sharpshooter", Perk14_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk15
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_silent_running);
    gsay_reply(SCRIPT_KCROB, "Silent Running: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Silent Running", Perk15_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk16
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_survivalist);
    gsay_reply(SCRIPT_KCROB, "Survivalist: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Survivalist", Perk16_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk17
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_master_trader);
    gsay_reply(SCRIPT_KCROB, "Master Trader: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Master Trader", Perk17_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk18
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_educated);
    gsay_reply(SCRIPT_KCROB, "Educated: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Educated", Perk18_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk19
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_healer);
    gsay_reply(SCRIPT_KCROB, "Healer: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Healer", Perk19_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk20
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_fortune_finder);
    gsay_reply(SCRIPT_KCROB, "Fortune Finder: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Fortune Finder", Perk20_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk21
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_better_criticals);
    gsay_reply(SCRIPT_KCROB, "Better Criticals: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Better Criticals", Perk21_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk22
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_empathy);
    gsay_reply(SCRIPT_KCROB, "Empathy: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Empathy", Perk22_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk23
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_slayer);
    gsay_reply(SCRIPT_KCROB, "Slayer: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Slayer", Perk23_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk24
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_sniper);
    gsay_reply(SCRIPT_KCROB, "Sniper: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Sniper", Perk24_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk25
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_silent_death);
    gsay_reply(SCRIPT_KCROB, "Silent Death: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Silent Death", Perk25_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk26
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_action_boy);
    gsay_reply(SCRIPT_KCROB, "Action Boy: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Action Boy", Perk26_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk27
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_mental_block);
    gsay_reply(SCRIPT_KCROB, "Mental Block: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Mental Block", Perk27_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk28
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_lifegiver);
    gsay_reply(SCRIPT_KCROB, "Lifegiver: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Lifegiver", Perk28_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk29
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_dodger);
    gsay_reply(SCRIPT_KCROB, "Dodger: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Dodger", Perk29_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk30
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_snakeater);
    gsay_reply(SCRIPT_KCROB, "Snakeater: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Snakeater", Perk30_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk31
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_mr_fixit);
    gsay_reply(SCRIPT_KCROB, "Mr. Fixit: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Mr. Fixit", Perk31_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk32
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_medic);
    gsay_reply(SCRIPT_KCROB, "Medic: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Medic", Perk32_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk33
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_master_thief);
    gsay_reply(SCRIPT_KCROB, "Master Thief: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Master Thief", Perk33_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk34
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_speaker);
    gsay_reply(SCRIPT_KCROB, "Speaker: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Speaker", Perk34_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk35
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_heave_ho);
    gsay_reply(SCRIPT_KCROB, "Heave Ho!: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Heave Ho!", Perk35_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk36
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_friendly_foe);
    gsay_reply(SCRIPT_KCROB, "Friendly Foe: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Friendly Foe", Perk36_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk37
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_pickpocket);
    gsay_reply(SCRIPT_KCROB, "Pickpocket: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Pickpocket", Perk37_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk38
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_ghost);
    gsay_reply(SCRIPT_KCROB, "Ghost: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Ghost", Perk38_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk39
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality);
    gsay_reply(SCRIPT_KCROB, "Cult of Personality: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Cult of Personality", Perk39_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk40
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_scrounger);
    gsay_reply(SCRIPT_KCROB, "Scrounger: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Scrounger", Perk40_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk41
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_explorer);
    gsay_reply(SCRIPT_KCROB, "Explorer: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Explorer", Perk41_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk42
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_flower_child);
    gsay_reply(SCRIPT_KCROB, "Flower Child: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Flower Child", Perk42_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk43
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_pathfinder);
    gsay_reply(SCRIPT_KCROB, "Pathfinder: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Pathfinder", Perk43_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk44
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_animal_friend);
    gsay_reply(SCRIPT_KCROB, "Animal Friend: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Animal Friend", Perk44_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk45
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_scout);
    gsay_reply(SCRIPT_KCROB, "Scout: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Scout", Perk45_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk46
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_mysterious_stranger);
    gsay_reply(SCRIPT_KCROB, "Mysterious Stranger: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Mysterious Stranger", Perk46_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk47
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_ranger);
    gsay_reply(SCRIPT_KCROB, "Ranger: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Ranger", Perk47_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk48
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_quick_pockets);
    gsay_reply(SCRIPT_KCROB, "Quick Pockets: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Quick Pockets", Perk48_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk49
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_smooth_talker);
    gsay_reply(SCRIPT_KCROB, "Smooth Talker: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Smooth Talker", Perk49_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Perk50
begin
    variable LVar0 := 0;
    LVar0 := has_trait(TRAIT_PERK, dude_obj, PERK_swift_learner);
    gsay_reply(SCRIPT_KCROB, "Swift Learner: " + LVar0);
    giq_option(1, SCRIPT_KCROB, "Add Swift Learner", Perk50_Add, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Perk_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure Perk00_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_bonus_awareness) < 1) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_awareness, 1);
    end
    display_msg("You gain a perk: Awareness.");
    call PC_Perk00();
end

procedure Perk01_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_bonus_hth_attacks) < 1) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_hth_attacks, 1);
    end
    display_msg("You gain a perk: Bonus HtH Attacks.");
    call PC_Perk01();
end

procedure Perk02_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_bonus_hth_damage) < 3) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_hth_damage, 1);
    end
    display_msg("You gain a perk: Bonus HtH Damage.");
    call PC_Perk02();
end

procedure Perk03_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_bonus_move) < 3) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    end
    display_msg("You gain a perk: Bonus Move.");
    call PC_Perk03();
end

procedure Perk04_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_bonus_ranged_damage) < 2) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_ranged_damage, 1);
    end
    display_msg("You gain a perk: Bonus Ranged Damage.");
    call PC_Perk04();
end

procedure Perk05_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_bonus_rate_of_fire) < 1) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_rate_of_fire, 1);
    end
    display_msg("You gain a perk: Bonus Rate of Fire.");
    call PC_Perk05();
end

procedure Perk06_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_earlier_sequence) < 3) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_earlier_sequence, 1);
    end
    display_msg("You gain a perk: Earlier Sequence.");
    call PC_Perk06();
end

procedure Perk07_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_faster_healing) < 3) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_faster_healing, 1);
    end
    display_msg("You gain a perk: Faster Healing.");
    call PC_Perk07();
end

procedure Perk08_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_more_criticals) < 3) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_more_criticals, 1);
    end
    display_msg("You gain a perk: More Criticals.");
    call PC_Perk08();
end

procedure Perk09_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_night_vision) < 3) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_night_vision, 1);
    end
    display_msg("You gain a perk: Night Vision.");
    call PC_Perk09();
end

procedure Perk10_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_presence) < 3) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_presence, 1);
    end
    display_msg("You gain a perk: Presence.");
    call PC_Perk10();
end

procedure Perk11_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_rad_resistance) < 2) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_rad_resistance, 1);
    end
    display_msg("You gain a perk: Rad Resistance.");
    call PC_Perk11();
end

procedure Perk12_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_toughness) < 3) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_toughness, 1);
    end
    display_msg("You gain a perk: Toughness.");
    call PC_Perk12();
end

procedure Perk13_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_strong_back) < 3) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_strong_back, 1);
    end
    display_msg("You gain a perk: Strong Back.");
    call PC_Perk13();
end

procedure Perk14_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_sharpshooter) < 2) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_sharpshooter, 1);
    end
    display_msg("You gain a perk: Sharpshooter.");
    call PC_Perk14();
end

procedure Perk15_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_silent_running) < 1) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_silent_running, 1);
    end
    display_msg("You gain a perk: Silent Running.");
    call PC_Perk15();
end

procedure Perk16_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_survivalist) < 3) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_survivalist, 1);
    end
    display_msg("You gain a perk: Survivalist.");
    call PC_Perk16();
end

procedure Perk17_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_master_trader) < 1) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_master_trader, 1);
    end
    display_msg("You gain a perk: Master Trader.");
    call PC_Perk17();
end

procedure Perk18_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_educated) < 3) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_educated, 1);
    end
    display_msg("You gain a perk: Educated.");
    call PC_Perk18();
end

procedure Perk19_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_healer) < 3) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_healer, 1);
    end
    display_msg("You gain a perk: Healer.");
    call PC_Perk19();
end

procedure Perk20_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_fortune_finder) < 1) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_fortune_finder, 1);
    end
    display_msg("You gain a perk: Fortune Finder.");
    call PC_Perk20();
end

procedure Perk21_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_better_criticals) < 1) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_better_criticals, 1);
    end
    display_msg("You gain a perk: Better Criticals.");
    call PC_Perk21();
end

procedure Perk22_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_empathy) < 1) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_empathy, 1);
    end
    display_msg("You gain a perk: Empathy.");
    call PC_Perk22();
end

procedure Perk23_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_slayer) < 1) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_slayer, 1);
    end
    display_msg("You gain a perk: Slayer.");
    call PC_Perk23();
end

procedure Perk24_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_sniper) < 1) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_sniper, 1);
    end
    display_msg("You gain a perk: Sniper.");
    call PC_Perk24();
end

procedure Perk25_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_silent_death) < 1) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_silent_death, 1);
    end
    display_msg("You gain a perk: Silent Death.");
    call PC_Perk25();
end

procedure Perk26_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_action_boy) < 1) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_action_boy, 1);
    end
    display_msg("You gain a perk: Action Boy.");
    call PC_Perk26();
end

procedure Perk27_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_mental_block) < 1) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_mental_block, 1);
    end
    display_msg("You gain a perk: Mental Block.");
    call PC_Perk27();
end

procedure Perk28_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_lifegiver) < 1) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_lifegiver, 1);
    end
    display_msg("You gain a perk: Lifegiver.");
    call PC_Perk28();
end

procedure Perk29_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_dodger) < 2) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_dodger, 1);
    end
    display_msg("You gain a perk: Dodger.");
    call PC_Perk29();
end

procedure Perk30_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_snakeater) < 1) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_snakeater, 1);
    end
    display_msg("You gain a perk: Snakeater.");
    call PC_Perk30();
end

procedure Perk31_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_mr_fixit) < 1) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_mr_fixit, 1);
    end
    display_msg("You gain a perk: Mr. Fixit.");
    call PC_Perk31();
end

procedure Perk32_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_medic) < 1) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_medic, 1);
    end
    display_msg("You gain a perk: Medic.");
    call PC_Perk32();
end

procedure Perk33_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_master_thief) < 1) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_master_thief, 1);
    end
    display_msg("You gain a perk: Master Thief.");
    call PC_Perk33();
end

procedure Perk34_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_speaker) < 1) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_speaker, 1);
    end
    display_msg("You gain a perk: Speaker.");
    call PC_Perk34();
end

procedure Perk35_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_heave_ho) < 3) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_heave_ho, 1);
    end
    display_msg("You gain a perk: Heave Ho!.");
    call PC_Perk35();
end

procedure Perk36_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_friendly_foe) < 1) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_friendly_foe, 1);
    end
    display_msg("You gain a perk: Friendly Foe.");
    call PC_Perk36();
end

procedure Perk37_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_pickpocket) < 1) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_pickpocket, 1);
    end
    display_msg("You gain a perk: Pickpocket.");
    call PC_Perk37();
end

procedure Perk38_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_ghost) < 1) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_ghost, 1);
    end
    display_msg("You gain a perk: Ghost.");
    call PC_Perk38();
end

procedure Perk39_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality) < 1) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_cult_of_personality, 1);
    end
    display_msg("You gain a perk: Cult of Personality.");
    call PC_Perk39();
end

procedure Perk40_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_scrounger) < 1) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_scrounger, 1);
    end
    display_msg("You gain a perk: Scrounger.");
    call PC_Perk40();
end

procedure Perk41_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_explorer) < 1) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_explorer, 1);
    end
    display_msg("You gain a perk: Explorer.");
    call PC_Perk41();
end

procedure Perk42_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_flower_child) < 1) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_flower_child, 1);
    end
    display_msg("You gain a perk: Flower Child.");
    call PC_Perk42();
end

procedure Perk43_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_pathfinder) < 2) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_pathfinder, 1);
    end
    display_msg("You gain a perk: Pathfinder.");
    call PC_Perk43();
end

procedure Perk44_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_animal_friend) < 1) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_animal_friend, 1);
    end
    display_msg("You gain a perk: Animal Friend.");
    call PC_Perk44();
end

procedure Perk45_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_scout) < 1) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_scout, 1);
    end
    display_msg("You gain a perk: Scout.");
    call PC_Perk45();
end

procedure Perk46_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_mysterious_stranger) < 1) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_mysterious_stranger, 1);
    end
    display_msg("You gain a perk: Mysterious Stranger.");
    call PC_Perk46();
end

procedure Perk47_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_ranger) < 3) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_ranger, 1);
    end
    display_msg("You gain a perk: Ranger.");
    call PC_Perk47();
end

procedure Perk48_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_quick_pockets) < 3) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_quick_pockets, 1);
    end
    display_msg("You gain a perk: Quick Pockets.");
    call PC_Perk48();
end

procedure Perk49_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_smooth_talker) < 3) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_smooth_talker, 1);
    end
    display_msg("You gain a perk: Smooth Talker.");
    call PC_Perk49();
end

procedure Perk50_Add
begin
    if (has_trait(TRAIT_PERK, dude_obj, PERK_swift_learner) < 3) then begin
        critter_add_trait(dude_obj, TRAIT_PERK, PERK_swift_learner, 1);
    end
    display_msg("You gain a perk: Swift Learner.");
    call PC_Perk50();
end

procedure PC_Skill_Menu00
begin
    gsay_reply(SCRIPT_KCROB, "Use this screen to increase your skills.");
    giq_option(1, SCRIPT_KCROB, "Small Guns", PC_Skill00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Big Guns", PC_Skill01, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Energy Weapons", PC_Skill02, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Unarmed Combat", PC_Skill03, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Melee Weapons", PC_Skill04, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Throwing", PC_Skill05, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[MORE]", PC_Skill_Menu01, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
end

procedure PC_Skill_Menu01
begin
    gsay_reply(SCRIPT_KCROB, "Skill Menu -- Page 2/4");
    giq_option(1, SCRIPT_KCROB, "First Aid", PC_Skill06, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Doctor", PC_Skill07, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Sneak", PC_Skill08, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Lockpick", PC_Skill09, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Steal", PC_Skill10, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[MORE]", PC_Skill_Menu02, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Skill_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
end

procedure PC_Skill_Menu02
begin
    gsay_reply(SCRIPT_KCROB, "Skill Menu -- Page 3/4");
    giq_option(1, SCRIPT_KCROB, "Traps", PC_Skill11, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Science", PC_Skill12, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Repair", PC_Skill13, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Speech", PC_Skill14, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Barter", PC_Skill15, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[MORE]", PC_Skill_Menu03, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Skill_Menu01, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
end

procedure PC_Skill_Menu03
begin
    gsay_reply(SCRIPT_KCROB, "Skill Menu -- Page 4/4");
    giq_option(1, SCRIPT_KCROB, "Gambling", PC_Skill16, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Outdoorsman", PC_Skill17, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Skill_Menu02, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[EXIT]", MMenu_Exit, NEUTRAL_REACTION);
end

procedure PC_Skill00
begin
    variable LVar0 := 0;
    LVar0 := dude_skill(SKILL_SMALL_GUNS);
    gsay_reply(SCRIPT_KCROB, "Small Guns :" + LVar0);
    giq_option(1, SCRIPT_KCROB, "100+", Skill_00100Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "10+", Skill_00010Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "1+", Skill_00001Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Done", PC_Skill_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Exit", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Skill01
begin
    variable LVar0 := 0;
    LVar0 := dude_skill(SKILL_BIG_GUNS);
    gsay_reply(SCRIPT_KCROB, "Big Guns :" + LVar0);
    giq_option(1, SCRIPT_KCROB, "100+", Skill_01100Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "10+", Skill_01010Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "1+", Skill_01001Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Done", PC_Skill_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Exit", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Skill02
begin
    variable LVar0 := 0;
    LVar0 := dude_skill(SKILL_ENERGY_WEAPONS);
    gsay_reply(SCRIPT_KCROB, "Energy Weapons :" + LVar0);
    giq_option(1, SCRIPT_KCROB, "100+", Skill_02100Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "10+", Skill_02010Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "1+", Skill_02001Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Done", PC_Skill_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Exit", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Skill03
begin
    variable LVar0 := 0;
    LVar0 := dude_skill(SKILL_UNARMED_COMBAT);
    gsay_reply(SCRIPT_KCROB, "Unarmed Combat :" + LVar0);
    giq_option(1, SCRIPT_KCROB, "100+", Skill_03100Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "10+", Skill_03010Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "1+", Skill_03001Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Done", PC_Skill_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Exit", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Skill04
begin
    variable LVar0 := 0;
    LVar0 := dude_skill(SKILL_MELEE);
    gsay_reply(SCRIPT_KCROB, "Melee Weapons :" + LVar0);
    giq_option(1, SCRIPT_KCROB, "100+", Skill_04100Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "10+", Skill_04010Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "1+", Skill_04001Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Done", PC_Skill_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Exit", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Skill05
begin
    variable LVar0 := 0;
    LVar0 := dude_skill(SKILL_THROWING);
    gsay_reply(SCRIPT_KCROB, "Throwing :" + LVar0);
    giq_option(1, SCRIPT_KCROB, "100+", Skill_05100Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "10+", Skill_05010Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "1+", Skill_05001Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Done", PC_Skill_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Exit", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Skill06
begin
    variable LVar0 := 0;
    LVar0 := dude_skill(SKILL_FIRST_AID);
    gsay_reply(SCRIPT_KCROB, "First Aid :" + LVar0);
    giq_option(1, SCRIPT_KCROB, "100+", Skill_06100Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "10+", Skill_06010Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "1+", Skill_06001Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Done", PC_Skill_Menu01, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Exit", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Skill07
begin
    variable LVar0 := 0;
    LVar0 := dude_skill(SKILL_DOCTOR);
    gsay_reply(SCRIPT_KCROB, "Doctor :" + LVar0);
    giq_option(1, SCRIPT_KCROB, "100+", Skill_07100Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "10+", Skill_07010Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "1+", Skill_07001Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Done", PC_Skill_Menu01, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Exit", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Skill08
begin
    variable LVar0 := 0;
    LVar0 := dude_skill(SKILL_SNEAK);
    gsay_reply(SCRIPT_KCROB, "Sneak :" + LVar0);
    giq_option(1, SCRIPT_KCROB, "100+", Skill_08100Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "10+", Skill_08010Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "1+", Skill_08001Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Done", PC_Skill_Menu01, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Exit", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Skill09
begin
    variable LVar0 := 0;
    LVar0 := dude_skill(SKILL_LOCKPICK);
    gsay_reply(SCRIPT_KCROB, "Lockpick :" + LVar0);
    giq_option(1, SCRIPT_KCROB, "100+", Skill_09100Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "10+", Skill_09010Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "1+", Skill_09001Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Done", PC_Skill_Menu01, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Exit", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Skill10
begin
    variable LVar0 := 0;
    LVar0 := dude_skill(SKILL_STEAL);
    gsay_reply(SCRIPT_KCROB, "Steal :" + LVar0);
    giq_option(1, SCRIPT_KCROB, "100+", Skill_10100Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "10+", Skill_10010Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "1+", Skill_10001Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Done", PC_Skill_Menu01, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Exit", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Skill11
begin
    variable LVar0 := 0;
    LVar0 := dude_skill(SKILL_TRAPS);
    gsay_reply(SCRIPT_KCROB, "Traps :" + LVar0);
    giq_option(1, SCRIPT_KCROB, "100+", Skill_11100Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "10+", Skill_11010Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "1+", Skill_11001Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Done", PC_Skill_Menu02, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Exit", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Skill12
begin
    variable LVar0 := 0;
    LVar0 := dude_skill(SKILL_SCIENCE);
    gsay_reply(SCRIPT_KCROB, "Science :" + LVar0);
    giq_option(1, SCRIPT_KCROB, "100+", Skill_12100Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "10+", Skill_12010Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "1+", Skill_12001Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Done", PC_Skill_Menu02, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Exit", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Skill13
begin
    variable LVar0 := 0;
    LVar0 := dude_skill(SKILL_REPAIR);
    gsay_reply(SCRIPT_KCROB, "Repair :" + LVar0);
    giq_option(1, SCRIPT_KCROB, "100+", Skill_13100Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "10+", Skill_13010Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "1+", Skill_13001Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Done", PC_Skill_Menu02, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Exit", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Skill14
begin
    variable LVar0 := 0;
    LVar0 := dude_skill(SKILL_SPEECH);
    gsay_reply(SCRIPT_KCROB, "Speech :" + LVar0);
    giq_option(1, SCRIPT_KCROB, "100+", Skill_14100Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "10+", Skill_14010Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "1+", Skill_14001Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Done", PC_Skill_Menu02, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Exit", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Skill15
begin
    variable LVar0 := 0;
    LVar0 := dude_skill(SKILL_BARTER);
    gsay_reply(SCRIPT_KCROB, "Barter :" + LVar0);
    giq_option(1, SCRIPT_KCROB, "100+", Skill_15100Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "10+", Skill_15010Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "1+", Skill_15001Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Done", PC_Skill_Menu02, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Exit", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Skill16
begin
    variable LVar0 := 0;
    LVar0 := dude_skill(SKILL_GAMBLING);
    gsay_reply(SCRIPT_KCROB, "Gambling :" + LVar0);
    giq_option(1, SCRIPT_KCROB, "100+", Skill_16100Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "10+", Skill_16010Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "1+", Skill_16001Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Done", PC_Skill_Menu03, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Exit", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure PC_Skill17
begin
    variable LVar0 := 0;
    LVar0 := dude_skill(SKILL_OUTDOORSMAN);
    gsay_reply(SCRIPT_KCROB, "Outdoorsman :" + LVar0);
    giq_option(1, SCRIPT_KCROB, "100+", Skill_17100Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "10+", Skill_17010Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "1+", Skill_17001Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Done", PC_Skill_Menu03, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Exit", MMenu_Exit, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure Skill_00001Inc
begin
    if (dude_skill(SKILL_SMALL_GUNS) < 200) then begin
        critter_mod_skill(dude_obj, SKILL_SMALL_GUNS, 1);
    end
    call PC_Skill00();
end

procedure Skill_00010Inc
begin
    if (dude_skill(SKILL_SMALL_GUNS) < 190) then begin
        critter_mod_skill(dude_obj, SKILL_SMALL_GUNS, 10);
    end
    call PC_Skill00();
end

procedure Skill_00100Inc
begin
    if (dude_skill(SKILL_SMALL_GUNS) < 100) then begin
        critter_mod_skill(dude_obj, SKILL_SMALL_GUNS, 100);
    end
    call PC_Skill00();
end

procedure Skill_01001Inc
begin
    if (dude_skill(SKILL_BIG_GUNS) < 200) then begin
        critter_mod_skill(dude_obj, SKILL_BIG_GUNS, 1);
    end
    call PC_Skill01();
end

procedure Skill_01010Inc
begin
    if (dude_skill(SKILL_BIG_GUNS) < 190) then begin
        critter_mod_skill(dude_obj, SKILL_BIG_GUNS, 10);
    end
    call PC_Skill01();
end

procedure Skill_01100Inc
begin
    if (dude_skill(SKILL_BIG_GUNS) < 100) then begin
        critter_mod_skill(dude_obj, SKILL_BIG_GUNS, 100);
    end
    call PC_Skill01();
end

procedure Skill_02001Inc
begin
    if (dude_skill(SKILL_ENERGY_WEAPONS) < 200) then begin
        critter_mod_skill(dude_obj, SKILL_ENERGY_WEAPONS, 1);
    end
    call PC_Skill02();
end

procedure Skill_02010Inc
begin
    if (dude_skill(SKILL_ENERGY_WEAPONS) < 190) then begin
        critter_mod_skill(dude_obj, SKILL_ENERGY_WEAPONS, 10);
    end
    call PC_Skill02();
end

procedure Skill_02100Inc
begin
    if (dude_skill(SKILL_ENERGY_WEAPONS) < 100) then begin
        critter_mod_skill(dude_obj, SKILL_ENERGY_WEAPONS, 100);
    end
    call PC_Skill02();
end

procedure Skill_03001Inc
begin
    if (dude_skill(SKILL_UNARMED_COMBAT) < 200) then begin
        critter_mod_skill(dude_obj, SKILL_UNARMED_COMBAT, 1);
    end
    call PC_Skill03();
end

procedure Skill_03010Inc
begin
    if (dude_skill(SKILL_UNARMED_COMBAT) < 190) then begin
        critter_mod_skill(dude_obj, SKILL_UNARMED_COMBAT, 10);
    end
    call PC_Skill03();
end

procedure Skill_03100Inc
begin
    if (dude_skill(SKILL_UNARMED_COMBAT) < 100) then begin
        critter_mod_skill(dude_obj, SKILL_UNARMED_COMBAT, 100);
    end
    call PC_Skill03();
end

procedure Skill_04001Inc
begin
    if (dude_skill(SKILL_MELEE) < 200) then begin
        critter_mod_skill(dude_obj, SKILL_MELEE, 1);
    end
    call PC_Skill04();
end

procedure Skill_04010Inc
begin
    if (dude_skill(SKILL_MELEE) < 190) then begin
        critter_mod_skill(dude_obj, SKILL_MELEE, 10);
    end
    call PC_Skill04();
end

procedure Skill_04100Inc
begin
    if (dude_skill(SKILL_MELEE) < 100) then begin
        critter_mod_skill(dude_obj, SKILL_MELEE, 100);
    end
    call PC_Skill04();
end

procedure Skill_05001Inc
begin
    if (dude_skill(SKILL_THROWING) < 200) then begin
        critter_mod_skill(dude_obj, SKILL_THROWING, 1);
    end
    call PC_Skill05();
end

procedure Skill_05010Inc
begin
    if (dude_skill(SKILL_THROWING) < 190) then begin
        critter_mod_skill(dude_obj, SKILL_THROWING, 10);
    end
    call PC_Skill05();
end

procedure Skill_05100Inc
begin
    if (dude_skill(SKILL_THROWING) < 100) then begin
        critter_mod_skill(dude_obj, SKILL_THROWING, 100);
    end
    call PC_Skill05();
end

procedure Skill_06001Inc
begin
    if (dude_skill(SKILL_FIRST_AID) < 200) then begin
        critter_mod_skill(dude_obj, SKILL_FIRST_AID, 1);
    end
    call PC_Skill06();
end

procedure Skill_06010Inc
begin
    if (dude_skill(SKILL_FIRST_AID) < 190) then begin
        critter_mod_skill(dude_obj, SKILL_FIRST_AID, 10);
    end
    call PC_Skill06();
end

procedure Skill_06100Inc
begin
    if (dude_skill(SKILL_FIRST_AID) < 100) then begin
        critter_mod_skill(dude_obj, SKILL_FIRST_AID, 100);
    end
    call PC_Skill06();
end

procedure Skill_07001Inc
begin
    if (dude_skill(SKILL_DOCTOR) < 200) then begin
        critter_mod_skill(dude_obj, SKILL_DOCTOR, 1);
    end
    call PC_Skill07();
end

procedure Skill_07010Inc
begin
    if (dude_skill(SKILL_DOCTOR) < 190) then begin
        critter_mod_skill(dude_obj, SKILL_DOCTOR, 10);
    end
    call PC_Skill07();
end

procedure Skill_07100Inc
begin
    if (dude_skill(SKILL_DOCTOR) < 100) then begin
        critter_mod_skill(dude_obj, SKILL_DOCTOR, 100);
    end
    call PC_Skill07();
end

procedure Skill_08001Inc
begin
    if (dude_skill(SKILL_SNEAK) < 200) then begin
        critter_mod_skill(dude_obj, SKILL_SNEAK, 1);
    end
    call PC_Skill08();
end

procedure Skill_08010Inc
begin
    if (dude_skill(SKILL_SNEAK) < 190) then begin
        critter_mod_skill(dude_obj, SKILL_SNEAK, 10);
    end
    call PC_Skill08();
end

procedure Skill_08100Inc
begin
    if (dude_skill(SKILL_SNEAK) < 100) then begin
        critter_mod_skill(dude_obj, SKILL_SNEAK, 100);
    end
    call PC_Skill08();
end

procedure Skill_09001Inc
begin
    if (dude_skill(SKILL_LOCKPICK) < 200) then begin
        critter_mod_skill(dude_obj, SKILL_LOCKPICK, 1);
    end
    call PC_Skill09();
end

procedure Skill_09010Inc
begin
    if (dude_skill(SKILL_LOCKPICK) < 190) then begin
        critter_mod_skill(dude_obj, SKILL_LOCKPICK, 10);
    end
    call PC_Skill09();
end

procedure Skill_09100Inc
begin
    if (dude_skill(SKILL_LOCKPICK) < 100) then begin
        critter_mod_skill(dude_obj, SKILL_LOCKPICK, 100);
    end
    call PC_Skill09();
end

procedure Skill_10001Inc
begin
    if (dude_skill(SKILL_STEAL) < 200) then begin
        critter_mod_skill(dude_obj, SKILL_STEAL, 1);
    end
    call PC_Skill10();
end

procedure Skill_10010Inc
begin
    if (dude_skill(SKILL_STEAL) < 190) then begin
        critter_mod_skill(dude_obj, SKILL_STEAL, 10);
    end
    call PC_Skill10();
end

procedure Skill_10100Inc
begin
    if (dude_skill(SKILL_STEAL) < 100) then begin
        critter_mod_skill(dude_obj, SKILL_STEAL, 100);
    end
    call PC_Skill10();
end

procedure Skill_11001Inc
begin
    if (dude_skill(SKILL_TRAPS) < 200) then begin
        critter_mod_skill(dude_obj, SKILL_TRAPS, 1);
    end
    call PC_Skill11();
end

procedure Skill_11010Inc
begin
    if (dude_skill(SKILL_TRAPS) < 190) then begin
        critter_mod_skill(dude_obj, SKILL_TRAPS, 10);
    end
    call PC_Skill11();
end

procedure Skill_11100Inc
begin
    if (dude_skill(SKILL_TRAPS) < 100) then begin
        critter_mod_skill(dude_obj, SKILL_TRAPS, 100);
    end
    call PC_Skill11();
end

procedure Skill_12001Inc
begin
    if (dude_skill(SKILL_SCIENCE) < 200) then begin
        critter_mod_skill(dude_obj, SKILL_SCIENCE, 1);
    end
    call PC_Skill12();
end

procedure Skill_12010Inc
begin
    if (dude_skill(SKILL_SCIENCE) < 190) then begin
        critter_mod_skill(dude_obj, SKILL_SCIENCE, 10);
    end
    call PC_Skill12();
end

procedure Skill_12100Inc
begin
    if (dude_skill(SKILL_SCIENCE) < 100) then begin
        critter_mod_skill(dude_obj, SKILL_SCIENCE, 100);
    end
    call PC_Skill12();
end

procedure Skill_13001Inc
begin
    if (dude_skill(SKILL_REPAIR) < 200) then begin
        critter_mod_skill(dude_obj, SKILL_REPAIR, 1);
    end
    call PC_Skill13();
end

procedure Skill_13010Inc
begin
    if (dude_skill(SKILL_REPAIR) < 190) then begin
        critter_mod_skill(dude_obj, SKILL_REPAIR, 10);
    end
    call PC_Skill13();
end

procedure Skill_13100Inc
begin
    if (dude_skill(SKILL_REPAIR) < 100) then begin
        critter_mod_skill(dude_obj, SKILL_REPAIR, 100);
    end
    call PC_Skill13();
end

procedure Skill_14001Inc
begin
    if (dude_skill(SKILL_SPEECH) < 200) then begin
        critter_mod_skill(dude_obj, SKILL_SPEECH, 1);
    end
    call PC_Skill14();
end

procedure Skill_14010Inc
begin
    if (dude_skill(SKILL_SPEECH) < 190) then begin
        critter_mod_skill(dude_obj, SKILL_SPEECH, 10);
    end
    call PC_Skill14();
end

procedure Skill_14100Inc
begin
    if (dude_skill(SKILL_SPEECH) < 100) then begin
        critter_mod_skill(dude_obj, SKILL_SPEECH, 100);
    end
    call PC_Skill14();
end

procedure Skill_15001Inc
begin
    if (dude_skill(SKILL_BARTER) < 200) then begin
        critter_mod_skill(dude_obj, SKILL_BARTER, 1);
    end
    call PC_Skill15();
end

procedure Skill_15010Inc
begin
    if (dude_skill(SKILL_BARTER) < 190) then begin
        critter_mod_skill(dude_obj, SKILL_BARTER, 10);
    end
    call PC_Skill15();
end

procedure Skill_15100Inc
begin
    if (dude_skill(SKILL_BARTER) < 100) then begin
        critter_mod_skill(dude_obj, SKILL_BARTER, 100);
    end
    call PC_Skill15();
end

procedure Skill_16001Inc
begin
    if (dude_skill(SKILL_GAMBLING) < 200) then begin
        critter_mod_skill(dude_obj, SKILL_GAMBLING, 1);
    end
    call PC_Skill16();
end

procedure Skill_16010Inc
begin
    if (dude_skill(SKILL_GAMBLING) < 190) then begin
        critter_mod_skill(dude_obj, SKILL_GAMBLING, 10);
    end
    call PC_Skill16();
end

procedure Skill_16100Inc
begin
    if (dude_skill(SKILL_GAMBLING) < 100) then begin
        critter_mod_skill(dude_obj, SKILL_GAMBLING, 100);
    end
    call PC_Skill16();
end

procedure Skill_17001Inc
begin
    if (dude_skill(SKILL_OUTDOORSMAN) < 200) then begin
        critter_mod_skill(dude_obj, SKILL_OUTDOORSMAN, 1);
    end
    call PC_Skill17();
end

procedure Skill_17010Inc
begin
    if (dude_skill(SKILL_OUTDOORSMAN) < 190) then begin
        critter_mod_skill(dude_obj, SKILL_OUTDOORSMAN, 10);
    end
    call PC_Skill17();
end

procedure Skill_17100Inc
begin
    if (dude_skill(SKILL_OUTDOORSMAN) < 100) then begin
        critter_mod_skill(dude_obj, SKILL_OUTDOORSMAN, 100);
    end
    call PC_Skill17();
end

procedure PC_Stat_Menu
begin
    gsay_reply(SCRIPT_KCROB, "Which stat would you like to modify?");
    giq_option(1, SCRIPT_KCROB, "Strength", PC_Stat_St_Chk, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Perception", PC_Stat_Pe, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Endurance", PC_Stat_En, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Charisma", PC_Stat_Ch, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Intelligence", PC_Stat_Iq, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Agility", PC_Stat_Ag, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Luck", PC_Stat_Lu, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
end

procedure PC_Stat_St_Chk
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    LVar0 := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
    LVar1 := obj_pid(LVar0);
    if ((LVar1 == 3) or (LVar1 == 232)) then begin
        call PC_Stat_PA();
    end
    else begin
        call PC_Stat_St();
    end
    return 0;
    LVar0 := 0;
    LVar1 := 0;
end

procedure PC_Stat_PA
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    LVar0 := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
    LVar1 := obj_pid(LVar0);
    if (LVar1 == 3) then begin
        GVar18 := "        Remove your Power Armor before you modify this stat.";
    end
    else begin
        if (LVar1 == 232) then begin
            GVar18 := "        Remove your Hardened Power Armor before you modify this stat.";
        end
    end
    GVar19 := dude_strength;
    gsay_reply(SCRIPT_KCROB, "Strength: " + GVar19 + GVar18);
    giq_option(1, SCRIPT_KCROB, "Modify Anyway", PC_Stat_St, NEUTRAL_REACTION);
    if (LVar1 == 3) then begin
        giq_option(1, SCRIPT_KCROB, "Exit and remove your PA.", MMenu_Exit, NEUTRAL_REACTION);
    end
    if (LVar1 == 232) then begin
        giq_option(1, SCRIPT_KCROB, "Exit and remove your HPA.", MMenu_Exit, NEUTRAL_REACTION);
    end
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Stat_Menu, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
    LVar1 := 0;
end

procedure PC_Stat_St
begin
    GVar19 := dude_strength;
    gsay_reply(SCRIPT_KCROB, "Strength: " + GVar19);
    giq_option(1, SCRIPT_KCROB, "+", Stat_St_Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "-", Stat_St_Dec, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Stat_Menu, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
end

procedure PC_Stat_Pe
begin
    GVar19 := dude_perception;
    gsay_reply(SCRIPT_KCROB, "Perception: " + GVar19);
    giq_option(1, SCRIPT_KCROB, "+", Stat_Pe_Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "-", Stat_Pe_Dec, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Stat_Menu, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
end

procedure PC_Stat_En
begin
    GVar19 := dude_endurance;
    gsay_reply(SCRIPT_KCROB, "Endurance: " + GVar19);
    giq_option(1, SCRIPT_KCROB, "+", Stat_En_Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "-", Stat_En_Dec, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Stat_Menu, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
end

procedure PC_Stat_Ch
begin
    GVar19 := dude_charisma;
    gsay_reply(SCRIPT_KCROB, "Charisma: " + GVar19);
    giq_option(1, SCRIPT_KCROB, "+", Stat_Ch_Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "-", Stat_Ch_Dec, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Stat_Menu, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
end

procedure PC_Stat_Iq
begin
    GVar19 := dude_iq;
    gsay_reply(SCRIPT_KCROB, "Intelligence: " + GVar19);
    giq_option(1, SCRIPT_KCROB, "+", Stat_Iq_Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "-", Stat_Iq_Dec, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Stat_Menu, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
end

procedure PC_Stat_Ag
begin
    GVar19 := get_critter_stat(dude_obj, STAT_ag);
    gsay_reply(SCRIPT_KCROB, "Agility: " + GVar19);
    giq_option(1, SCRIPT_KCROB, "+", Stat_Ag_Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "-", Stat_Ag_Dec, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Stat_Menu, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
end

procedure PC_Stat_Lu
begin
    GVar19 := dude_luck;
    gsay_reply(SCRIPT_KCROB, "Luck: " + GVar19);
    giq_option(1, SCRIPT_KCROB, "+", Stat_Lu_Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "-", Stat_Lu_Dec, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", PC_Stat_Menu, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
end

procedure Stat_St_Inc
begin
    if (dude_strength < 10) then begin
        set_critter_stat(dude_obj, STAT_st, 1);
    end
    call PC_Stat_St();
end

procedure Stat_St_Dec
begin
    if (dude_strength > 0) then begin
        set_critter_stat(dude_obj, STAT_st, -1);
    end
    call PC_Stat_St();
end

procedure Stat_Pe_Inc
begin
    if (dude_perception < 10) then begin
        set_critter_stat(dude_obj, STAT_pe, 1);
    end
    call PC_Stat_Pe();
end

procedure Stat_Pe_Dec
begin
    if (dude_perception > 0) then begin
        set_critter_stat(dude_obj, STAT_pe, -1);
    end
    call PC_Stat_Pe();
end

procedure Stat_En_Inc
begin
    if (dude_endurance < 10) then begin
        set_critter_stat(dude_obj, STAT_en, 1);
    end
    call PC_Stat_En();
end

procedure Stat_En_Dec
begin
    if (dude_endurance > 0) then begin
        set_critter_stat(dude_obj, STAT_en, -1);
    end
    call PC_Stat_En();
end

procedure Stat_Ch_Inc
begin
    if (dude_charisma < 10) then begin
        set_critter_stat(dude_obj, STAT_ch, 1);
    end
    call PC_Stat_Ch();
end

procedure Stat_Ch_Dec
begin
    if (dude_charisma > 0) then begin
        set_critter_stat(dude_obj, STAT_ch, -1);
    end
    call PC_Stat_Ch();
end

procedure Stat_Iq_Inc
begin
    if (dude_iq < 10) then begin
        set_critter_stat(dude_obj, STAT_iq, 1);
    end
    call PC_Stat_Iq();
end

procedure Stat_Iq_Dec
begin
    if (dude_iq > 0) then begin
        set_critter_stat(dude_obj, STAT_iq, -1);
    end
    call PC_Stat_Iq();
end

procedure Stat_Ag_Inc
begin
    if (get_critter_stat(dude_obj, STAT_ag) < 10) then begin
        set_critter_stat(dude_obj, STAT_ag, 1);
    end
    call PC_Stat_Ag();
end

procedure Stat_Ag_Dec
begin
    if (get_critter_stat(dude_obj, STAT_ag) > 0) then begin
        set_critter_stat(dude_obj, STAT_ag, -1);
    end
    call PC_Stat_Ag();
end

procedure Stat_Lu_Inc
begin
    if (dude_luck < 10) then begin
        set_critter_stat(dude_obj, STAT_lu, 1);
    end
    call PC_Stat_Lu();
end

procedure Stat_Lu_Dec
begin
    if (dude_luck > 0) then begin
        set_critter_stat(dude_obj, STAT_lu, -1);
    end
    call PC_Stat_Lu();
end

procedure Drug_Menu
begin
    gsay_reply(SCRIPT_KCROB, "Here you will find stat booster drugs that are not available anywhere in the wasteland.  Select the drug you want to score.");
    giq_option(1, SCRIPT_KCROB, "HP Booster: Permanently adds +10 to Maximum Hit Points", Drug00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "HP Mega-Booster: Permanently adds +100 to Maximum Hit Points", Drug01, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "AP Booster: Permanently adds +1 to Maximum Action Points", Drug02, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "AP Mega-Booster: Permanently adds +10 to Maximum Action Points", Drug03, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "AC Booster: Permanently adds +10 to Armour Class", Drug04, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
end

procedure Drug00
begin
    GVar30 := create_object(245, 0, 0);
    gsay_reply(SCRIPT_KCROB, "HP Booster: " + GVar31 + "    Click on Add or Remove to modify item quantity, when you are finished select 'Done'");
    giq_option(1, SCRIPT_KCROB, "Add", Drug00_Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Remove", Drug00_Dec, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", Drug_Create, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
end

procedure Drug01
begin
    GVar30 := create_object(246, 0, 0);
    gsay_reply(SCRIPT_KCROB, "HP Mega-Booster: " + GVar31 + "    Click on Add or Remove to modify item quantity, when you are finished select 'Done'");
    giq_option(1, SCRIPT_KCROB, "Add", Drug01_Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Remove", Drug01_Dec, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", Drug_Create, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
end

procedure Drug02
begin
    GVar30 := create_object(247, 0, 0);
    gsay_reply(SCRIPT_KCROB, "AP Booster: " + GVar31 + "    Click on Add or Remove to modify item quantity, when you are finished select 'Done'");
    giq_option(1, SCRIPT_KCROB, "Add", Drug02_Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Remove", Drug02_Dec, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", Drug_Create, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
end

procedure Drug03
begin
    GVar30 := create_object(248, 0, 0);
    gsay_reply(SCRIPT_KCROB, "AP Mega-Booster: " + GVar31 + "    Click on Add or Remove to modify item quantity, when you are finished select 'Done'");
    giq_option(1, SCRIPT_KCROB, "Add", Drug03_Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Remove", Drug03_Dec, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", Drug_Create, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
end

procedure Drug04
begin
    GVar30 := create_object(249, 0, 0);
    gsay_reply(SCRIPT_KCROB, "AC Booster: " + GVar31 + "    Click on Add or Remove to modify item quantity, when you are finished select 'Done'");
    giq_option(1, SCRIPT_KCROB, "Add", Drug04_Inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Remove", Drug04_Dec, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", Drug_Create, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
end

procedure Drug00_Inc
begin
    GVar31 := GVar31 + 1;
    call Drug00();
end

procedure Drug00_Dec
begin
    if (GVar31 > 0) then begin
        GVar31 := GVar31 - 1;
    end
    call Drug00();
end

procedure Drug01_Inc
begin
    GVar31 := GVar31 + 1;
    call Drug01();
end

procedure Drug01_Dec
begin
    if (GVar31 > 0) then begin
        GVar31 := GVar31 - 1;
    end
    call Drug01();
end

procedure Drug02_Inc
begin
    GVar31 := GVar31 + 1;
    call Drug02();
end

procedure Drug02_Dec
begin
    if (GVar31 > 0) then begin
        GVar31 := GVar31 - 1;
    end
    call Drug02();
end

procedure Drug03_Inc
begin
    GVar31 := GVar31 + 1;
    call Drug03();
end

procedure Drug03_Dec
begin
    if (GVar31 > 0) then begin
        GVar31 := GVar31 - 1;
    end
    call Drug03();
end

procedure Drug04_Inc
begin
    GVar31 := GVar31 + 1;
    call Drug04();
end

procedure Drug04_Dec
begin
    if (GVar31 > 0) then begin
        GVar31 := GVar31 - 1;
    end
    call Drug04();
end

procedure Drug_Create
begin
    add_mult_objs_to_inven(target_obj, GVar30, GVar31);
    display_msg(obj_name(GVar30) + " x " + GVar31);
end

procedure Inj_Target_Chk
begin
    if (obj_type(target_obj) == 1) then begin
        call Inj_MMenu();
    end
    else begin
        display_msg("Invalid Target");
    end
end

procedure Inj_MMenu
begin
    gsay_reply(SCRIPT_KCROB, "How would you like to injure " + obj_name(target_obj) + "?");
    giq_option(1, SCRIPT_KCROB, "Cripple", Inj_CMenu, NEUTRAL_REACTION);
    if (target_obj == dude_obj) then begin
        giq_option(1, SCRIPT_KCROB, "Radiation", Inj_RMenu, NEUTRAL_REACTION);
    end
    if (target_obj == dude_obj) then begin
        giq_option(1, SCRIPT_KCROB, "Poison", Inj_PMenu, NEUTRAL_REACTION);
    end
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
end

procedure Inj_CMenu
begin
    gsay_reply(SCRIPT_KCROB, "Cripple what?");
    giq_option(1, SCRIPT_KCROB, "Left Leg", Inj_CLL, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Right Leg", Inj_CRL, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Left Arm", Inj_CLA, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Right Arm", Inj_CRA, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Eyes", Inj_CEyes, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
end

procedure Inj_RMenu
begin
    gsay_reply(SCRIPT_KCROB, "Current Radiation: " + get_critter_stat(target_obj, STAT_current_rad) + "    Select increment to radiate " + dude_name);
    giq_option(1, SCRIPT_KCROB, "+1", Inj_Rad001, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "+10", Inj_Rad010, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", Inj_MMenu, NEUTRAL_REACTION);
end

procedure Inj_PMenu
begin
    gsay_reply(SCRIPT_KCROB, "Current Poison: " + get_critter_stat(target_obj, STAT_current_poison) + "    Select increment to poison " + dude_name);
    giq_option(1, SCRIPT_KCROB, "+1", Inj_Psn001, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "+10", Inj_Psn010, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", MMenu_Exit, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", Inj_MMenu, NEUTRAL_REACTION);
end

procedure Inj_CLL
begin
    critter_injure(target_obj, 4);
    display_msg(obj_name(target_obj) + " has a crippled left leg.");
    call Inj_MMenu();
end

procedure Inj_CRL
begin
    critter_injure(target_obj, 8);
    display_msg(obj_name(target_obj) + " has a crippled right leg.");
    call Inj_MMenu();
end

procedure Inj_CLA
begin
    critter_injure(target_obj, 16);
    display_msg(obj_name(target_obj) + " has a crippled left arm.");
    call Inj_MMenu();
end

procedure Inj_CRA
begin
    critter_injure(target_obj, 32);
    display_msg(obj_name(target_obj) + " has a crippled right arm.");
    call Inj_MMenu();
end

procedure Inj_CEyes
begin
    critter_injure(target_obj, 64);
    display_msg(obj_name(target_obj) + " is blind.");
    call Inj_MMenu();
end

procedure Inj_Rad001
begin
    radiation_inc(dude_obj, 1);
    display_msg(dude_name + " receives a dose of radiation.");
    call Inj_RMenu();
end

procedure Inj_Rad010
begin
    radiation_inc(dude_obj, 10);
    display_msg(dude_name + " receives a heavy dose of radiation.");
    call Inj_RMenu();
end

procedure Inj_Psn001
begin
    poison(dude_obj, 1);
    display_msg(dude_name + " has been poisoned.");
    call Inj_PMenu();
end

procedure Inj_Psn010
begin
    poison(dude_obj, 10);
    display_msg(dude_name + " has been poisoned.");
    call Inj_PMenu();
end

procedure Kill_Target_Chk
begin
    if (obj_type(target_obj) == 1) then begin
        call Kill_Target_Confirm();
    end
    else begin
        display_msg("Invalid Target");
    end
end

procedure Kill_Target_Confirm
begin
    GVar17 := target_obj;
    gsay_reply(SCRIPT_KCROB, "Are you sure you want to kill " + obj_name(GVar17));
    giq_option(1, SCRIPT_KCROB, "Yes", Kill_Target, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "No", MMenu_Exit, NEUTRAL_REACTION);
end

procedure Kill_Target
begin
    script_overrides;
    add_timer_event(self_obj, 2, 1);
end

procedure Res_NPC_Menu
begin
    if ((global_var(GVAR_MODOC_TOOL_FLAG) == 3) or (global_var(GVAR_MODOC_BODIES) == 3) or (global_var(GVAR_8_BALL_TRASH_SECRET) == 3) or (global_var(GVAR_SLAVE_RUN_KILLED) == 3) or (global_var(GVAR_ALCOHOL_ADDICT) == 3) or (global_var(GVAR_ENCLAVE_ENEMY_TRAPS) == 4) or (global_var(GVAR_ENCLAVE_ENEMY_DETENTION) == 4) or (global_var(GVAR_GAVE_GECK_EXP) == 4)) then begin
        GVar18 := "Who would you like to resurrect?            WARNING: Resurrecting a party member in the same map where their corpse is located may cause the engine to lock your machine up; make sure you have looted the corpse and gone to another map before attempting to resurrect any party member.";
    end
    else begin
        GVar18 := "You have no one to resurrect.";
    end
    gsay_reply(SCRIPT_KCROB, GVar18);
    if (global_var(GVAR_MODOC_TOOL_FLAG) == 3) then begin
        giq_option(1, SCRIPT_KCROB, "Ian", Res_Ian, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_MODOC_BODIES) == 3) then begin
        giq_option(1, SCRIPT_KCROB, "Tycho", Res_Tycho, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_8_BALL_TRASH_SECRET) == 3) then begin
        giq_option(1, SCRIPT_KCROB, "Katja", Res_Katja, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_SLAVE_RUN_KILLED) == 3) then begin
        giq_option(1, SCRIPT_KCROB, "Dogmeat", Res_Dog, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_ALCOHOL_ADDICT) == 3) then begin
        giq_option(1, SCRIPT_KCROB, "Tandi", Res_Tandi, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_ENCLAVE_ENEMY_TRAPS) == 4) then begin
        giq_option(1, SCRIPT_KCROB, "Jacob", Res_Jacob, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_ENCLAVE_ENEMY_DETENTION) == 4) then begin
        giq_option(1, SCRIPT_KCROB, "Konrad", Res_Konrad, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_GAVE_GECK_EXP) == 4) then begin
        giq_option(1, SCRIPT_KCROB, "Joe", Res_Joe, NEUTRAL_REACTION);
    end
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[EXIT]", MMenu_Exit, NEUTRAL_REACTION);
end

procedure Res_Ian
begin
    GVar41 := create_object_sid(16777292, 0, 0, SCRIPT_WSEMIT2B);
    GVar25 := create_object(74, 0, 0);
    set_global_var(GVAR_MODOC_TOOL_FLAG, 2);
    call Res_Chk();
end

procedure Res_Tycho
begin
    GVar41 := create_object_sid(16777426, 0, 0, SCRIPT_VCCITPRS);
    GVar25 := create_object(74, 0, 0);
    set_global_var(GVAR_MODOC_BODIES, 2);
    call Res_Chk();
end

procedure Res_Katja
begin
    GVar41 := create_object_sid(16777518, 0, 0, SCRIPT_ECHOMLES);
    GVar25 := create_object(74, 0, 0);
    set_global_var(GVAR_8_BALL_TRASH_SECRET, 2);
    call Res_Chk();
end

procedure Res_Dog
begin
    GVar41 := create_object_sid(16777338, 0, 0, SCRIPT_NEWR1);
    set_global_var(GVAR_NCR_DEATHCLAW_DEN, 2);
    set_global_var(GVAR_SLAVE_RUN_KILLED, 2);
    set_global_var(GVAR_GOOD_MONSTER, 1);
    GVar42 := 1;
    call Res_Chk();
end

procedure Res_Tandi
begin
    GVar41 := create_object_sid(16777279, 0, 0, SCRIPT_DNSLVRUN);
    set_global_var(GVAR_ALCOHOL_ADDICT, 2);
    GVar42 := 1;
    call Res_Chk();
end

procedure Res_Jacob
begin
    GVar41 := create_object_sid(16777533, 0, 0, SCRIPT_FIGUNTBL);
    GVar25 := create_object(232, 0, 0);
    set_global_var(GVAR_ENCLAVE_ENEMY_TRAPS, 2);
    call Res_Chk();
end

procedure Res_Konrad
begin
    GVar41 := create_object_sid(16777534, 0, 0, SCRIPT_KLAMALL);
    GVar25 := create_object(232, 0, 0);
    set_global_var(GVAR_ENCLAVE_ENEMY_DETENTION, 2);
    call Res_Chk();
end

procedure Res_Joe
begin
    GVar41 := create_object_sid(16777532, 0, 0, SCRIPT_KLATRAP);
    GVar25 := create_object(240, 0, 0);
    set_global_var(GVAR_GAVE_GECK_EXP, 2);
    call Res_Chk();
end

procedure Res_Chk
begin
    if (GVar42 == 1) then begin
        call Resurrect_A();
    end
    else begin
        call Resurrect_B();
    end
end

procedure Resurrect_A
begin
    anim(GVar41, 1000, random(0, 5));
    critter_attempt_placement(GVar41, tile_num_in_direction(dude_tile, random(0, 5), random(2, 5)), dude_elevation);
    party_add(GVar41);
    GVar42 := 0;
end

procedure Resurrect_B
begin
    anim(GVar41, 1000, random(0, 5));
    move_obj_inven_to_obj(GVar41, GVar25);
    wield_obj_critter(GVar41, GVar25);
    critter_attempt_placement(GVar41, tile_num_in_direction(dude_tile, random(0, 5), random(2, 5)), dude_elevation);
    party_add(GVar41);
end

procedure Item_Cr_Start
begin
    GVar31 := 0;
    GVar29 := 1;
    if (obj_type(target_obj) == 1) then begin
        call Item_Cr_Menu00();
    end
    else begin
        call Inv_Tar_Msg();
    end
    call MMenu_Exit();
end

procedure Item_Cr_Menu00
begin
    GVar30 := create_object(GVar29, 0, 0);
    gsay_reply(SCRIPT_KCROB, "PID: " + GVar29 + " = " + obj_name(GVar30) + "                                                    Input item PID then click on 'Done' when you are finished. (Last PID item is 249, for full item listing refer to data/text/english/game/pro_item.msg)" + "   WARNING: Do not use a number higher than 249 unless you are testing a new item pid; if testing a new item, make sure you have added the prototype and included it in data/proto/items.lst or the game may crash.");
    giq_option(1, SCRIPT_KCROB, "100+", Item_Cr_SV00A, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "100-", Item_Cr_SV00B, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "10+", Item_Cr_SV01A, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "10-", Item_Cr_SV01B, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "1+", Item_Cr_SV02A, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "1-", Item_Cr_SV02B, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", Item_PIDChk00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[EXIT]", MMenu_Exit, NEUTRAL_REACTION);
end

procedure Item_Cr_Menu01
begin
    gsay_reply(SCRIPT_KCROB, "Item Quantity : " + GVar31);
    giq_option(1, SCRIPT_KCROB, "+", Item_Cr_SV03A, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "-", Item_Cr_SV03B, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Done", Item_add_to_inv, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Exit", MMenu_Exit, NEUTRAL_REACTION);
end

procedure Item_Cr_SV00A
begin
    GVar29 := GVar29 + 100;
    destroy_object(GVar30);
    call Item_Cr_Menu00();
end

procedure Item_Cr_SV00B
begin
    if (GVar29 > 100) then begin
        GVar29 := GVar29 - 100;
    end
    destroy_object(GVar30);
    call Item_Cr_Menu00();
end

procedure Item_Cr_SV01A
begin
    GVar29 := GVar29 + 10;
    destroy_object(GVar30);
    call Item_Cr_Menu00();
end

procedure Item_Cr_SV01B
begin
    if (GVar29 > 10) then begin
        GVar29 := GVar29 - 10;
    end
    destroy_object(GVar30);
    call Item_Cr_Menu00();
end

procedure Item_Cr_SV02A
begin
    GVar29 := GVar29 + 1;
    destroy_object(GVar30);
    call Item_Cr_Menu00();
end

procedure Item_Cr_SV02B
begin
    if (GVar29 > 0) then begin
        GVar29 := GVar29 - 1;
    end
    destroy_object(GVar30);
    call Item_Cr_Menu00();
end

procedure Item_Cr_SV03A
begin
    GVar31 := GVar31 + 1;
    call Item_Cr_Menu01();
end

procedure Item_Cr_SV03B
begin
    if (GVar31 > 0) then begin
        GVar31 := GVar31 - 1;
    end
    call Item_Cr_Menu01();
end

procedure Item_PIDChk00
begin
    if (GVar29 > 0) then begin
        call Item_PIDChk01();
    end
    else begin
        call Item_PIDInv();
    end
end

procedure Item_PIDChk01
begin
    GVar30 := create_object(GVar29, 0, 0);
    gsay_reply(SCRIPT_KCROB, "PID: " + GVar29 + " = " + obj_name(GVar30));
    giq_option(1, SCRIPT_KCROB, "Yes", Item_Cr_Menu01, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "No", Item_PIDWrong, NEUTRAL_REACTION);
end

procedure Item_PIDWrong
begin
    destroy_object(GVar30);
    call Item_Cr_Menu00();
end

procedure Item_PIDInv
begin
    gsay_reply(SCRIPT_KCROB, "Invalid PID number, try again");
    giq_option(1, SCRIPT_KCROB, "Back to Item Creation Menu", Item_Cr_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[EXIT]", MMenu_Exit, NEUTRAL_REACTION);
end

procedure Item_add_to_inv
begin
    add_mult_objs_to_inven(target_obj, GVar30, GVar31);
    display_msg("PID: " + GVar29 + " = " + obj_name(GVar30) + " x " + GVar31);
    GVar30 := 0;
    GVar29 := 0;
end

procedure Fund_Chk
begin
    GVar27 := 0;
    GVar26 := item_caps_total(dude_obj);
    call Fund_Menu();
end

procedure Fund_Menu
begin
    GVar28 := GVar26 + GVar27;
    if (GVar27 >= 0) then begin
        GVar18 := " Credit : ";
    end
    else begin
        if (GVar27 < 0) then begin
            GVar18 := " Debit  : ";
        end
    end
    gsay_reply(SCRIPT_KCROB, "Current Balance : " + GVar26 + " Projected Balance : " + GVar28 + GVar18 + GVar27 + "      Use the options below to adjust your total balance and click 'Done' when finished.");
    giq_option(1, SCRIPT_KCROB, "+100", caps_inc100, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "+10", caps_inc010, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "+1", caps_inc001, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "-100", caps_dec100, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "-10", caps_dec010, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "-1", caps_dec001, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", caps_adjust_total, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
end

procedure caps_inc100
begin
    GVar27 := GVar27 + 100;
    call Fund_Menu();
end

procedure caps_inc010
begin
    GVar27 := GVar27 + 10;
    call Fund_Menu();
end

procedure caps_inc001
begin
    GVar27 := GVar27 + 1;
    call Fund_Menu();
end

procedure caps_dec100
begin
    if (GVar28 > 100) then begin
        GVar27 := GVar27 - 100;
    end
    call Fund_Menu();
end

procedure caps_dec010
begin
    if (GVar28 > 10) then begin
        GVar27 := GVar27 - 10;
    end
    call Fund_Menu();
end

procedure caps_dec001
begin
    if (GVar28 > 0) then begin
        GVar27 := GVar27 - 1;
    end
    call Fund_Menu();
end

procedure caps_adjust_total
begin
    item_caps_adjust(dude_obj, GVar27);
    call Fund_End();
end

procedure Fund_End
begin
    gsay_reply(SCRIPT_KCROB, "Projected Balance : " + GVar28 + "                                             Are you happy with this amount?");
    giq_option(1, SCRIPT_KCROB, "Yes", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "No", Fund_Menu, NEUTRAL_REACTION);
end

procedure City_Menu00
begin
    gsay_reply(SCRIPT_KCROB, "Where would you like to go?");
    giq_option(1, SCRIPT_KCROB, "Vault 13", Map_Menu_V13, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Vault 15", Map_Menu_V15, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Shady Sands", Map_Menu_ShS, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Raiders", Map_Rai, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Junktown", Map_Menu_Jnk, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "The Hub", Map_Menu_Hub, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[MORE]", City_Menu01, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
end

procedure City_Menu01
begin
    gsay_reply(SCRIPT_KCROB, "Cities  -- page 2/2");
    giq_option(1, SCRIPT_KCROB, "Necropolis", Map_Menu_Nec, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "The Boneyard", Map_Menu_LAB, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "The Brotherhood", Map_Menu_BOS, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "The Glow", Map_Menu_Glw, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "The Military Base", Map_Menu_MiB, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "The Cathedral", Map_Menu_Cat, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", City_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
end

procedure Map_Menu_V13
begin
    gsay_reply(SCRIPT_KCROB, "Select location in Vault 13.");
    giq_option(1, SCRIPT_KCROB, "Cave", Map_V1300, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Vault 13", Map_V1301, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", City_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
end

procedure Map_Menu_V15
begin
    gsay_reply(SCRIPT_KCROB, "Select location in Vault 15.");
    giq_option(1, SCRIPT_KCROB, "Shack Entrance", Map_V1500, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Underground Caverns", Map_V1501, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", City_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
end

procedure Map_Menu_ShS
begin
    gsay_reply(SCRIPT_KCROB, "Select location in Shady Sands.");
    giq_option(1, SCRIPT_KCROB, "Shady Sands West", Map_ShS00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Shady Sands East", Map_ShS01, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Radscorpion Caves", Map_ShS02, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", City_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
end

procedure Map_Menu_Jnk
begin
    gsay_reply(SCRIPT_KCROB, "Select location in Junktown.");
    giq_option(1, SCRIPT_KCROB, "Entrance", Map_Jnk00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Crash House", Map_Jnk01, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Casino", Map_Jnk02, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", City_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
end

procedure Map_Menu_Hub
begin
    gsay_reply(SCRIPT_KCROB, "Select location in the Hub.");
    giq_option(1, SCRIPT_KCROB, "Caravan Entrance", Map_Hub00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Downtown", Map_Hub01, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Old Town", Map_Hub02, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Water Merchants", Map_Hub03, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "The Heights", Map_Hub04, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Deathclaw Lair", Map_Hub05, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", City_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
end

procedure Map_Menu_Nec
begin
    gsay_reply(SCRIPT_KCROB, "Select location in the Necropolis.");
    giq_option(1, SCRIPT_KCROB, "Hotel", Map_Nec00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Town Hall", Map_Nec01, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Water Shed", Map_Nec02, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Vault 12", Map_Nec03, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", City_Menu01, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
end

procedure Map_Menu_LAB
begin
    gsay_reply(SCRIPT_KCROB, "Select location in the LA Boneyard.");
    giq_option(1, SCRIPT_KCROB, "Adytum", Map_LAB00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Downtown", Map_LAB01, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Library", Map_LAB02, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Warehouse", Map_LAB03, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Fortress", Map_LAB04, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", City_Menu01, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
end

procedure Map_Menu_BOS
begin
    gsay_reply(SCRIPT_KCROB, "Select location in the Brotherhood.");
    giq_option(1, SCRIPT_KCROB, "Entrance", Map_BOS00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Bunker Level 1-2", Map_BOS01, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", City_Menu01, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
end

procedure Map_Menu_Glw
begin
    gsay_reply(SCRIPT_KCROB, "Select location in the Glow.");
    giq_option(1, SCRIPT_KCROB, "Crater", Map_Glw00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Level 1-2", Map_Glw01, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Level 3-4", Map_Glw02, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", City_Menu01, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
end

procedure Map_Menu_MiB
begin
    gsay_reply(SCRIPT_KCROB, "Select location in the Military Base.");
    giq_option(1, SCRIPT_KCROB, "Entrance", Map_MiB00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Level 1-2", Map_MiB01, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Level 3-4", Map_MiB02, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", City_Menu01, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
end

procedure Map_Menu_Cat
begin
    gsay_reply(SCRIPT_KCROB, "Select location in the Cathedral.");
    giq_option(1, SCRIPT_KCROB, "Entrance", Map_Cat00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Tower", Map_Cat01, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "LA Vault", Map_Cat02, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", City_Menu01, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
end

procedure Map_V1300
begin
    if (cur_map_index != MAP_ARGARDEN) then begin
        GVar32 := 35;
        GVar33 := 0;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_ARGARDEN) then begin
            display_msg("You already are at the Vault 13 Cave Entrance.");
        end
    end
end

procedure Map_V1301
begin
    if (cur_map_index != MAP_DENBUS1) then begin
        GVar32 := 6;
        GVar33 := 12;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_DENBUS1) then begin
            display_msg("You already are at Vault 13.");
        end
    end
end

procedure Map_V1500
begin
    if (cur_map_index != MAP_DENBUS2) then begin
        GVar32 := 7;
        GVar33 := 0;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_DENBUS2) then begin
            display_msg("You already are at the Vault 15 shack entrance.");
        end
    end
end

procedure Map_V1501
begin
    if (cur_map_index != MAP_DENRES1) then begin
        GVar32 := 8;
        GVar33 := 0;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_DENRES1) then begin
            display_msg("You already are at the Vault 15 cavern.");
        end
    end
end

procedure Map_ShS00
begin
    if (cur_map_index != MAP_GSTCAV2) then begin
        GVar32 := 26;
        GVar33 := 0;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_GSTCAV2) then begin
            display_msg("You already are at Shady Sands West.");
        end
    end
end

procedure Map_ShS01
begin
    if (cur_map_index != MAP_GSTCAV1) then begin
        GVar32 := 25;
        GVar33 := 0;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_GSTCAV1) then begin
            display_msg("You already are at Shady Sands East.");
        end
    end
end

procedure Map_ShS02
begin
    if (cur_map_index != MAP_VCTYDWTN) then begin
        GVar32 := 16;
        GVar33 := 0;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_VCTYDWTN) then begin
            display_msg("You already are at the Radscorpion Caves.");
        end
    end
end

procedure Map_Rai
begin
    if (cur_map_index != MAP_GSTFARM) then begin
        GVar32 := 24;
        GVar33 := 0;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_GSTFARM) then begin
            display_msg("You already are at the raiders camp.");
        end
    end
end

procedure Map_Jnk00
begin
    if (cur_map_index != MAP_KLAMALL) then begin
        GVar32 := 10;
        GVar33 := 0;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_KLAMALL) then begin
            display_msg("You already are at the entrance to Junktown.");
        end
    end
end

procedure Map_Jnk01
begin
    if (cur_map_index != MAP_KLATOXCV) then begin
        GVar32 := 12;
        GVar33 := 0;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_KLATOXCV) then begin
            display_msg("You already are at the Junktown Crash House.");
        end
    end
end

procedure Map_Jnk02
begin
    if (cur_map_index != MAP_KLARATCV) then begin
        GVar32 := 11;
        GVar33 := 0;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_KLARATCV) then begin
            display_msg("You already are at the Junktown Casino.");
        end
    end
end

procedure Map_Hub00
begin
    if (cur_map_index != MAP_VAULT15) then begin
        GVar32 := 36;
        GVar33 := 0;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_VAULT15) then begin
            display_msg("You already are at the Hub caravan entrance.");
        end
    end
end

procedure Map_Hub01
begin
    if (cur_map_index != MAP_V15ENTB) then begin
        GVar32 := 38;
        GVar33 := 0;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_V15ENTB) then begin
            display_msg("You already are at the Hub Market.");
        end
    end
end

procedure Map_Hub02
begin
    if (cur_map_index != MAP_VAULT13) then begin
        GVar32 := 40;
        GVar33 := 0;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_VAULT13) then begin
            display_msg("You already are at the Old Town.");
        end
    end
end

procedure Map_Hub03
begin
    if (cur_map_index != MAP_V13ENT) then begin
        GVar32 := 41;
        GVar33 := 0;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_V13ENT) then begin
            display_msg("You already are at the Water Merchants.");
        end
    end
end

procedure Map_Hub04
begin
    if (cur_map_index != MAP_V15SENT) then begin
        GVar32 := 39;
        GVar33 := 0;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_V15SENT) then begin
            display_msg("You already are at the Hub Heights.");
        end
    end
end

procedure Map_Hub05
begin
    if (cur_map_index != MAP_V15ENT) then begin
        GVar32 := 37;
        GVar33 := 0;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_V15ENT) then begin
            display_msg("You already are at the Deathclaw Lair.");
        end
    end
end

procedure Map_Nec00
begin
    if (cur_map_index != MAP_ARVILLAG) then begin
        GVar32 := 4;
        GVar33 := 0;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_ARVILLAG) then begin
            display_msg("You already are at the Necropolis Hotel.");
        end
    end
end

procedure Map_Nec01
begin
    if (cur_map_index != MAP_ARCAVES) then begin
        GVar32 := 3;
        GVar33 := 0;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_ARCAVES) then begin
            display_msg("You already are at the Necropolis Town Hall.");
        end
    end
end

procedure Map_Nec02
begin
    if (cur_map_index != MAP_ARBRIDGE) then begin
        GVar32 := 5;
        GVar33 := 0;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_ARBRIDGE) then begin
            display_msg("You already are at the Necropolis Water Shed.");
        end
    end
end

procedure Map_Nec03
begin
    if (cur_map_index != MAP_KLADWTWN) then begin
        GVar32 := 9;
        GVar33 := 0;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_KLADWTWN) then begin
            display_msg("You already are at the Necropolis Vault.");
        end
    end
end

procedure Map_LAB00
begin
    if (cur_map_index != MAP_DEPOLVA) then begin
        GVar32 := 28;
        GVar33 := 0;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_DEPOLVA) then begin
            display_msg("You already are at Adytum.");
        end
    end
end

procedure Map_LAB01
begin
    if (cur_map_index != MAP_NCR3) then begin
        GVar32 := 44;
        GVar33 := 0;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_NCR3) then begin
            display_msg("You already are at the blades.");
        end
    end
end

procedure Map_LAB02
begin
    if (cur_map_index != MAP_DEPOLVB) then begin
        GVar32 := 29;
        GVar33 := 0;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_DEPOLVB) then begin
            display_msg("You already are at the followers library.");
        end
    end
end

procedure Map_LAB03
begin
    if (cur_map_index != MAP_NCR4) then begin
        GVar32 := 45;
        GVar33 := 0;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_NCR4) then begin
            display_msg("You already are at the rippers warehouse.");
        end
    end
end

procedure Map_LAB04
begin
    if (cur_map_index != MAP_NCRENT) then begin
        GVar32 := 46;
        GVar33 := 0;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_NCRENT) then begin
            display_msg("You already are at the gun runners fortress.");
        end
    end
end

procedure Map_BOS00
begin
    if (cur_map_index != MAP_KLATRAP) then begin
        GVar32 := 13;
        GVar33 := 0;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_KLATRAP) then begin
            display_msg("You already are at the brotherhood entrance.");
        end
    end
end

procedure Map_BOS01
begin
    if (cur_map_index != MAP_KLAGRAZ) then begin
        GVar32 := 14;
        GVar33 := 0;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_KLAGRAZ) then begin
            display_msg("You already are at the brotherhood bunker.");
        end
    end
end

procedure Map_BOS02
begin
    if (cur_map_index != MAP_VCTYCTYD) then begin
        GVar32 := 15;
        GVar33 := 0;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_VCTYCTYD) then begin
            display_msg("You already are at the brotherhood bunker.");
        end
    end
end

procedure Map_Glw00
begin
    if (cur_map_index != MAP_DEPOLV1) then begin
        GVar32 := 27;
        GVar33 := 0;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_DEPOLV1) then begin
            display_msg("You already are at the Glow crater.");
        end
    end
end

procedure Map_Glw01
begin
    if (cur_map_index != MAP_NCR1) then begin
        GVar32 := 42;
        GVar33 := 0;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_NCR1) then begin
            display_msg("You already are at the Glow bunker.");
        end
    end
end

procedure Map_Glw02
begin
    if (cur_map_index != MAP_NCR2) then begin
        GVar32 := 43;
        GVar33 := 0;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_NCR2) then begin
            display_msg("You already are at the Glow bunker.");
        end
    end
end

procedure Map_MiB00
begin
    if (cur_map_index != MAP_VCTYVLT) then begin
        GVar32 := 30;
        GVar33 := 0;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_VCTYVLT) then begin
            display_msg("You already are at the Military Base Entrance.");
        end
    end
end

procedure Map_MiB01
begin
    if (cur_map_index != MAP_GECKSETL) then begin
        GVar32 := 31;
        GVar33 := 12;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_GECKSETL) then begin
            display_msg("You already are inside the Military Base.");
        end
    end
end

procedure Map_MiB02
begin
    if (cur_map_index != MAP_GECKPWPL) then begin
        GVar32 := 32;
        GVar33 := 0;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_GECKPWPL) then begin
            display_msg("You already are inside the Military Base.");
        end
    end
end

procedure Map_Cat00
begin
    if (cur_map_index != MAP_VCTYCOCL) then begin
        GVar32 := 17;
        GVar33 := 0;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_VCTYCOCL) then begin
            display_msg("You already are at the Cathedral.");
        end
    end
end

procedure Map_Cat01
begin
    if (cur_map_index != MAP_VCTYCOCL) then begin
        GVar32 := 17;
        GVar33 := 3;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_VCTYCOCL) then begin
            display_msg("You already are inside the Cathedral.");
        end
    end
end

procedure Map_Cat02
begin
    if (cur_map_index != MAP_GECKJUNK) then begin
        GVar32 := 33;
        GVar33 := 0;
        call Map_Load();
    end
    else begin
        if (CUR_MAP_GECKJUNK) then begin
            display_msg("You already are at the LA Vault.");
        end
    end
end

procedure Map_Load
begin
    display_msg("Debug Msg - Map Index : " + GVar32 + "  Map Elevation : " + GVar33);
    load_map(GVar32, GVar33);
end

procedure Inv_Tar_Msg
begin
    display_msg("Invalid Target Object");
end

procedure Foe_Cr_Menu00
begin
    gsay_reply(SCRIPT_KCROB, "What type of enemies would you like to spawn?");
    giq_option(1, SCRIPT_KCROB, "Cannibals", Foe_Type07, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Raiders", Foe_Type00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Super Mutants", Foe_Type01, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Ghoul Scavs", Foe_Type05, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[MORE]", Foe_Cr_Menu01, NEUTRAL_REACTION);
end

procedure Foe_Cr_Menu01
begin
    gsay_reply(SCRIPT_KCROB, "What type of enemies would you like to spawn?");
    giq_option(1, SCRIPT_KCROB, "Deathclaws", Foe_Type02, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Centaurs", Foe_Type03, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Floaters", Foe_Type04, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Geckos", Foe_Type06, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", MMenu_00, NEUTRAL_REACTION);
end

procedure Foe_Type00
begin
    GVar34 := 1;
    call Foe_Cr_Qty_Chk();
end

procedure Foe_Type01
begin
    GVar34 := 2;
    call Foe_Cr_Qty_Chk();
end

procedure Foe_Type02
begin
    GVar34 := 3;
    call Foe_Cr_Qty_Chk();
end

procedure Foe_Type03
begin
    GVar34 := 4;
    call Foe_Cr_Qty_Chk();
end

procedure Foe_Type04
begin
    GVar34 := 5;
    call Foe_Cr_Qty_Chk();
end

procedure Foe_Type05
begin
    GVar34 := 6;
    call Foe_Cr_Qty_Chk();
end

procedure Foe_Type06
begin
    GVar34 := 7;
    call Foe_Cr_Qty_Chk();
end

procedure Foe_Type07
begin
    GVar34 := 8;
    call Foe_Cr_Qty_Chk();
end

procedure Foe_Cr_Qty_Chk
begin
    if (GVar34 == 1) then begin
        GVar18 := "Raiders";
    end
    else begin
        if (GVar34 == 2) then begin
            GVar18 := "Super Mutants";
        end
        else begin
            if (GVar34 == 3) then begin
                GVar18 := "Deathclaws";
            end
            else begin
                if (GVar34 == 4) then begin
                    GVar18 := "Centaurs";
                end
                else begin
                    if (GVar34 == 5) then begin
                        GVar18 := "Floaters";
                    end
                    else begin
                        if (GVar34 == 6) then begin
                            GVar18 := "ghouls";
                        end
                        else begin
                            if (GVar34 == 7) then begin
                                GVar18 := "Geckos";
                            end
                            else begin
                                if (GVar34 == 8) then begin
                                    GVar18 := "Cannibals";
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    gsay_reply(SCRIPT_KCROB, "How many " + GVar18 + " do you want to create?" + GVar35 + " (Maximum Number: 32)");
    giq_option(1, SCRIPT_KCROB, "+", Foe_Cr_QtyA, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "-", Foe_Cr_QtyB, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Randomise", Foe_Cr_RM, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", Foe_Start, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[EXIT]", MMenu_Exit, NEUTRAL_REACTION);
end

procedure Foe_Cr_QtyA
begin
    if (GVar35 < 32) then begin
        GVar35 := GVar35 + 1;
    end
    call Foe_Cr_Qty_Chk();
end

procedure Foe_Cr_QtyB
begin
    if (GVar35 > 0) then begin
        GVar35 := GVar35 - 1;
    end
    call Foe_Cr_Qty_Chk();
end

procedure Foe_Cr_RM
begin
    gsay_reply(SCRIPT_KCROB, "Select the group size:  Small (3 - 6), Medium (7 - 18), Large (19 - 32)");
    giq_option(1, SCRIPT_KCROB, "Small Group", Foe_Cr_RSm, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Medium Sized Group", Foe_Cr_RMd, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Large Group", Foe_Cr_RLg, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", Foe_Cr_Qty_Chk, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[ABORT]", MMenu_00, NEUTRAL_REACTION);
end

procedure Foe_Cr_RSm
begin
    GVar35 := random(3, 6);
    call Foe_Start();
end

procedure Foe_Cr_RMd
begin
    GVar35 := random(7, 18);
    call Foe_Start();
end

procedure Foe_Cr_RLg
begin
    GVar35 := random(19, 32);
    call Foe_Start();
end

procedure Foe_Start
begin
    if ((GVar34 == 1) or (GVar34 == 2) or (GVar34 == 6) or (GVar34 == 8)) then begin
        call Foe_Equipment_Chk();
    end
    else begin
        if (GVar34 == 3) then begin
            call Foe_DClaw_Start();
        end
        else begin
            if (GVar34 == 4) then begin
                call Foe_Centaur_Start();
            end
            else begin
                if (GVar34 == 5) then begin
                    call Foe_Floater_Start();
                end
                else begin
                    if (GVar34 == 7) then begin
                        call Foe_Gecko_Start();
                    end
                end
            end
        end
    end
end

procedure Foe_Raid_Start
begin
    GVar37 := random(0, 5);
    call Gen_Raider00();
end

procedure Foe_SM_Start
begin
    GVar37 := random(0, 5);
    call Gen_SMutant00();
end

procedure Foe_DClaw_Start
begin
    GVar37 := random(0, 5);
    call Gen_DClaw00();
end

procedure Foe_Centaur_Start
begin
    GVar37 := random(0, 5);
    call Gen_Centaur00();
end

procedure Foe_Floater_Start
begin
    GVar37 := random(0, 5);
    call Gen_Floater00();
end

procedure Foe_Ghoul_Start
begin
    GVar37 := random(0, 5);
    call Gen_Ghoul00();
end

procedure Foe_Gecko_Start
begin
    GVar37 := random(0, 5);
    call Gen_Gecko00();
end

procedure Foe_Canib_Start
begin
    GVar37 := random(0, 5);
    call Gen_Canib00();
end

procedure Foe_Equipment_Chk
begin
    gsay_reply(SCRIPT_KCROB, "Equipped or unarmed?");
    giq_option(1, SCRIPT_KCROB, "Equipped", Foe_EqYes, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Unarmed", Foe_EqNo, NEUTRAL_REACTION);
end

procedure Foe_EqYes
begin
    GVar36 := 1;
    if (GVar34 == 1) then begin
        call Foe_Raid_Start();
    end
    else begin
        if (GVar34 == 2) then begin
            call Foe_SM_Start();
        end
        else begin
            if (GVar34 == 6) then begin
                call Foe_Ghoul_Start();
            end
            else begin
                if (GVar34 == 8) then begin
                    call Foe_Canib_Start();
                end
            end
        end
    end
end

procedure Foe_EqNo
begin
    GVar36 := 0;
    if (GVar34 == 1) then begin
        call Foe_Raid_Start();
    end
    else begin
        if (GVar34 == 2) then begin
            call Foe_SM_Start();
        end
        else begin
            if (GVar34 == 6) then begin
                call Foe_Ghoul_Start();
            end
            else begin
                if (GVar34 == 8) then begin
                    call Foe_Canib_Start();
                end
            end
        end
    end
end

procedure Gen_Raider00
begin
    variable LVar0 := 0;
    LVar0 := random(0, 7);
    if (LVar0 == 0) then begin
        call Gen_Raider01();
    end
    else begin
        if (LVar0 == 1) then begin
            call Gen_Raider02();
        end
        else begin
            if (LVar0 == 2) then begin
                call Gen_Raider03();
            end
            else begin
                if (LVar0 == 3) then begin
                    call Gen_Raider04();
                end
                else begin
                    if (LVar0 == 4) then begin
                        call Gen_Raider05();
                    end
                    else begin
                        if (LVar0 == 5) then begin
                            call Gen_Raider06();
                        end
                        else begin
                            if (LVar0 == 6) then begin
                                call Gen_Raider07();
                            end
                            else begin
                                if (LVar0 == 7) then begin
                                    call Gen_Raider08();
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    return 0;
    LVar0 := 0;
end

procedure Gen_Raider01
begin
    variable LVar0 := 0;
    GVar38 := create_object_sid(16777246, 0, 0, SCRIPT_ECROBBER);
    if (GVar36 == 1) then begin
        LVar0 := random(0, 5);
        if (LVar0 == 0) then begin
            GVar39 := create_object(8, 0, 0);
            GVar40 := create_object(29, 0, 0);
        end
        else begin
            if (LVar0 == 1) then begin
                GVar39 := create_object(9, 0, 0);
                GVar40 := create_object(29, 0, 0);
            end
            else begin
                if (LVar0 == 2) then begin
                    GVar39 := create_object(10, 0, 0);
                    GVar40 := create_object(34, 0, 0);
                end
                else begin
                    if (LVar0 == 3) then begin
                        GVar39 := create_object(18, 0, 0);
                        GVar40 := create_object(31, 0, 0);
                    end
                    else begin
                        if (LVar0 == 3) then begin
                            GVar39 := create_object(22, 0, 0);
                            GVar40 := create_object(33, 0, 0);
                        end
                        else begin
                            if (LVar0 == 4) then begin
                                GVar39 := create_object(23, 0, 0);
                                GVar40 := create_object(35, 0, 0);
                            end
                            else begin
                                if (LVar0 == 5) then begin
                                    GVar39 := create_object(94, 0, 0);
                                    GVar40 := create_object(95, 0, 0);
                                end
                            end
                        end
                    end
                end
            end
        end
        call foe_equip();
    end
    else begin
        if (GVar36 == 0) then begin
            call Cr_Foe();
        end
    end
    return 0;
    LVar0 := 0;
end

procedure Gen_Raider02
begin
    variable LVar0 := 0;
    GVar38 := create_object_sid(16777247, 0, 0, SCRIPT_ECROBBER);
    if (GVar36 == 1) then begin
        LVar0 := random(0, 5);
        if (LVar0 == 0) then begin
            GVar39 := create_object(8, 0, 0);
            GVar40 := create_object(29, 0, 0);
        end
        else begin
            if (LVar0 == 1) then begin
                GVar39 := create_object(10, 0, 0);
                GVar40 := create_object(34, 0, 0);
            end
            else begin
                if (LVar0 == 2) then begin
                    GVar39 := create_object(18, 0, 0);
                    GVar40 := create_object(31, 0, 0);
                end
                else begin
                    if (LVar0 == 3) then begin
                        GVar39 := create_object(22, 0, 0);
                        GVar40 := create_object(33, 0, 0);
                    end
                    else begin
                        if (LVar0 == 3) then begin
                            GVar39 := create_object(23, 0, 0);
                            GVar40 := create_object(35, 0, 0);
                        end
                        else begin
                            if (LVar0 == 4) then begin
                                GVar39 := create_object(94, 0, 0);
                                GVar40 := create_object(95, 0, 0);
                            end
                            else begin
                                if (LVar0 == 5) then begin
                                    GVar39 := create_object(242, 0, 0);
                                    GVar40 := create_object(95, 0, 0);
                                end
                            end
                        end
                    end
                end
            end
        end
        call foe_equip();
    end
    else begin
        if (GVar36 == 0) then begin
            call Cr_Foe();
        end
    end
    return 0;
    LVar0 := 0;
end

procedure Gen_Raider03
begin
    variable LVar0 := 0;
    GVar38 := create_object_sid(16777440, 0, 0, SCRIPT_ECROBBER);
    if (GVar36 == 1) then begin
        LVar0 := random(0, 5);
        if (LVar0 == 0) then begin
            GVar39 := create_object(8, 0, 0);
            GVar40 := create_object(29, 0, 0);
        end
        else begin
            if (LVar0 == 1) then begin
                GVar39 := create_object(9, 0, 0);
                GVar40 := create_object(29, 0, 0);
            end
            else begin
                if (LVar0 == 2) then begin
                    GVar39 := create_object(18, 0, 0);
                    GVar40 := create_object(31, 0, 0);
                end
                else begin
                    if (LVar0 == 3) then begin
                        GVar39 := create_object(22, 0, 0);
                        GVar40 := create_object(33, 0, 0);
                    end
                    else begin
                        if (LVar0 == 3) then begin
                            GVar39 := create_object(236, 0, 0);
                            GVar40 := create_object(45, 0, 0);
                        end
                        else begin
                            if (LVar0 == 4) then begin
                                GVar39 := create_object(21, 0, 0);
                                GVar40 := create_object(40, 0, 0);
                            end
                            else begin
                                if (LVar0 == 5) then begin
                                    GVar39 := create_object(236, 0, 0);
                                    GVar40 := create_object(40, 0, 0);
                                end
                            end
                        end
                    end
                end
            end
        end
        call foe_equip();
    end
    else begin
        if (GVar36 == 0) then begin
            call Cr_Foe();
        end
    end
    return 0;
    LVar0 := 0;
end

procedure Gen_Raider04
begin
    variable LVar0 := 0;
    GVar38 := create_object_sid(16777441, 0, 0, SCRIPT_ECROBBER);
    if (GVar36 == 1) then begin
        LVar0 := random(0, 5);
        if (LVar0 == 0) then begin
            GVar39 := create_object(9, 0, 0);
            GVar40 := create_object(29, 0, 0);
        end
        else begin
            if (LVar0 == 1) then begin
                GVar39 := create_object(7, 0, 0);
                GVar40 := create_object(40, 0, 0);
            end
            else begin
                if (LVar0 == 2) then begin
                    GVar39 := create_object(4, 0, 0);
                    GVar40 := create_object(40, 0, 0);
                end
                else begin
                    if (LVar0 == 3) then begin
                        GVar39 := create_object(18, 0, 0);
                        GVar40 := create_object(31, 0, 0);
                    end
                    else begin
                        if (LVar0 == 3) then begin
                            GVar39 := create_object(22, 0, 0);
                            GVar40 := create_object(33, 0, 0);
                        end
                        else begin
                            if (LVar0 == 4) then begin
                                GVar39 := create_object(236, 0, 0);
                                GVar40 := create_object(40, 0, 0);
                            end
                            else begin
                                if (LVar0 == 5) then begin
                                    GVar39 := create_object(234, 0, 0);
                                    GVar40 := create_object(45, 0, 0);
                                end
                            end
                        end
                    end
                end
            end
        end
        call foe_equip();
    end
    else begin
        if (GVar36 == 0) then begin
            call Cr_Foe();
        end
    end
    return 0;
    LVar0 := 0;
end

procedure Gen_Raider05
begin
    variable LVar0 := 0;
    GVar38 := create_object_sid(16777433, 0, 0, SCRIPT_ECROBBER);
    if (GVar36 == 1) then begin
        LVar0 := random(0, 5);
        if (LVar0 == 0) then begin
            GVar39 := create_object(8, 0, 0);
            GVar40 := create_object(29, 0, 0);
        end
        else begin
            if (LVar0 == 1) then begin
                GVar39 := create_object(9, 0, 0);
                GVar40 := create_object(29, 0, 0);
            end
            else begin
                if (LVar0 == 2) then begin
                    GVar39 := create_object(10, 0, 0);
                    GVar40 := create_object(34, 0, 0);
                end
                else begin
                    if (LVar0 == 3) then begin
                        GVar39 := create_object(18, 0, 0);
                        GVar40 := create_object(31, 0, 0);
                    end
                    else begin
                        if (LVar0 == 3) then begin
                            GVar39 := create_object(22, 0, 0);
                            GVar40 := create_object(33, 0, 0);
                        end
                        else begin
                            if (LVar0 == 4) then begin
                                GVar39 := create_object(242, 0, 0);
                                GVar40 := create_object(95, 0, 0);
                            end
                            else begin
                                if (LVar0 == 5) then begin
                                    GVar39 := create_object(7, 0, 0);
                                    GVar40 := create_object(40, 0, 0);
                                end
                            end
                        end
                    end
                end
            end
        end
        call foe_equip();
    end
    else begin
        if (GVar36 == 0) then begin
            call Cr_Foe();
        end
    end
    return 0;
    LVar0 := 0;
end

procedure Gen_Raider06
begin
    variable LVar0 := 0;
    GVar38 := create_object_sid(16777434, 0, 0, SCRIPT_ECROBBER);
    if (GVar36 == 1) then begin
        LVar0 := random(0, 5);
        if (LVar0 == 0) then begin
            GVar39 := create_object(8, 0, 0);
            GVar40 := create_object(29, 0, 0);
        end
        else begin
            if (LVar0 == 1) then begin
                GVar39 := create_object(9, 0, 0);
                GVar40 := create_object(29, 0, 0);
            end
            else begin
                if (LVar0 == 2) then begin
                    GVar39 := create_object(10, 0, 0);
                    GVar40 := create_object(34, 0, 0);
                end
                else begin
                    if (LVar0 == 3) then begin
                        GVar39 := create_object(18, 0, 0);
                        GVar40 := create_object(31, 0, 0);
                    end
                    else begin
                        if (LVar0 == 3) then begin
                            GVar39 := create_object(22, 0, 0);
                            GVar40 := create_object(33, 0, 0);
                        end
                        else begin
                            if (LVar0 == 4) then begin
                                GVar39 := create_object(94, 0, 0);
                                GVar40 := create_object(95, 0, 0);
                            end
                            else begin
                                if (LVar0 == 5) then begin
                                    GVar39 := create_object(7, 0, 0);
                                    GVar40 := create_object(40, 0, 0);
                                end
                            end
                        end
                    end
                end
            end
        end
        call foe_equip();
    end
    else begin
        if (GVar36 == 0) then begin
            call Cr_Foe();
        end
    end
    return 0;
    LVar0 := 0;
end

procedure Gen_Raider07
begin
    variable LVar0 := 0;
    GVar38 := create_object_sid(16777454, 0, 0, SCRIPT_ECROBBER);
    if (GVar36 == 1) then begin
        LVar0 := random(0, 5);
        if (LVar0 == 0) then begin
            GVar39 := create_object(8, 0, 0);
            GVar40 := create_object(29, 0, 0);
        end
        else begin
            if (LVar0 == 1) then begin
                GVar39 := create_object(9, 0, 0);
                GVar40 := create_object(29, 0, 0);
            end
            else begin
                if (LVar0 == 2) then begin
                    GVar39 := create_object(10, 0, 0);
                    GVar40 := create_object(34, 0, 0);
                end
                else begin
                    if (LVar0 == 3) then begin
                        GVar39 := create_object(18, 0, 0);
                        GVar40 := create_object(31, 0, 0);
                    end
                    else begin
                        if (LVar0 == 3) then begin
                            GVar39 := create_object(22, 0, 0);
                            GVar40 := create_object(33, 0, 0);
                        end
                        else begin
                            if (LVar0 == 4) then begin
                                GVar39 := create_object(242, 0, 0);
                                GVar40 := create_object(95, 0, 0);
                            end
                            else begin
                                if (LVar0 == 5) then begin
                                    GVar39 := create_object(236, 0, 0);
                                    GVar40 := create_object(40, 0, 0);
                                end
                            end
                        end
                    end
                end
            end
        end
        call foe_equip();
    end
    else begin
        if (GVar36 == 0) then begin
            call Cr_Foe();
        end
    end
    return 0;
    LVar0 := 0;
end

procedure Gen_Raider08
begin
    variable LVar0 := 0;
    GVar38 := create_object_sid(16777455, 0, 0, SCRIPT_ECROBBER);
    if (GVar36 == 1) then begin
        LVar0 := random(0, 5);
        if (LVar0 == 0) then begin
            GVar39 := create_object(8, 0, 0);
            GVar40 := create_object(29, 0, 0);
        end
        else begin
            if (LVar0 == 1) then begin
                GVar39 := create_object(9, 0, 0);
                GVar40 := create_object(29, 0, 0);
            end
            else begin
                if (LVar0 == 2) then begin
                    GVar39 := create_object(10, 0, 0);
                    GVar40 := create_object(34, 0, 0);
                end
                else begin
                    if (LVar0 == 3) then begin
                        GVar39 := create_object(18, 0, 0);
                        GVar40 := create_object(31, 0, 0);
                    end
                    else begin
                        if (LVar0 == 3) then begin
                            GVar39 := create_object(22, 0, 0);
                            GVar40 := create_object(33, 0, 0);
                        end
                        else begin
                            if (LVar0 == 4) then begin
                                GVar39 := create_object(242, 0, 0);
                                GVar40 := create_object(95, 0, 0);
                            end
                            else begin
                                if (LVar0 == 5) then begin
                                    GVar39 := create_object(236, 0, 0);
                                    GVar40 := create_object(40, 0, 0);
                                end
                            end
                        end
                    end
                end
            end
        end
        call foe_equip();
    end
    else begin
        if (GVar36 == 0) then begin
            call Cr_Foe();
        end
    end
    return 0;
    LVar0 := 0;
end

procedure Gen_SMutant00
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    LVar1 := random(1, 2);
    if (LVar1 == 1) then begin
        GVar38 := create_object_sid(16777473, 0, 0, SCRIPT_ECMSTAMY);
        LVar0 := random(0, 2);
    end
    else begin
        if (LVar1 == 2) then begin
            GVar38 := create_object_sid(16777472, 0, 0, SCRIPT_ECMSTAMY);
            LVar0 := random(0, 3);
        end
    end
    if (GVar36 == 1) then begin
        if (LVar0 == 0) then begin
            GVar39 := create_object(21, 0, 0);
            GVar40 := create_object(40, 0, 0);
        end
        else begin
            if (LVar0 == 1) then begin
                GVar39 := create_object(234, 0, 0);
                GVar40 := create_object(40, 0, 0);
            end
            else begin
                if (LVar0 == 2) then begin
                    GVar39 := create_object(11, 0, 0);
                    GVar40 := create_object(32, 0, 0);
                end
                else begin
                    if (LVar0 == 3) then begin
                        GVar39 := create_object(12, 0, 0);
                        GVar40 := create_object(35, 0, 0);
                    end
                    else begin
                        if (LVar0 == 4) then begin
                            GVar39 := create_object(15, 0, 0);
                            GVar40 := create_object(39, 0, 0);
                        end
                        else begin
                            if (LVar0 == 5) then begin
                                GVar39 := create_object(118, 0, 0);
                                GVar40 := create_object(39, 0, 0);
                            end
                        end
                    end
                end
            end
        end
        call foe_equip();
    end
    else begin
        if (GVar36 == 0) then begin
            call Cr_Foe();
        end
    end
    return 0;
    LVar0 := 0;
    LVar1 := 0;
end

procedure Gen_Ghoul00
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    LVar1 := random(0, 100);
    if (LVar1 < 75) then begin
        GVar38 := create_object_sid(16777443, 0, 0, SCRIPT_ECCRAZY);
        LVar0 := random(1, 3);
    end
    else begin
        if (LVar1 > 75) then begin
            GVar38 := create_object_sid(16777444, 0, 0, SCRIPT_ECCRAZY);
            LVar0 := random(0, 1);
        end
    end
    if (GVar36 == 1) then begin
        if (LVar0 == 0) then begin
            GVar39 := create_object(19, 0, 0);
            GVar40 := create_object(40, 0, 0);
        end
        else begin
            if (LVar0 == 1) then begin
                GVar39 := create_object(21, 0, 0);
                GVar40 := create_object(40, 0, 0);
            end
            else begin
                if (LVar0 == 2) then begin
                    GVar39 := create_object(10, 0, 0);
                    GVar40 := create_object(34, 0, 0);
                end
                else begin
                    if (LVar0 == 3) then begin
                        GVar39 := create_object(94, 0, 0);
                        GVar40 := create_object(95, 0, 0);
                    end
                end
            end
        end
        call foe_equip();
    end
    else begin
        if (GVar36 == 0) then begin
            call Cr_Foe();
        end
    end
    return 0;
    LVar0 := 0;
    LVar1 := 0;
end

procedure Gen_DClaw00
begin
    variable LVar0 := 0;
    LVar0 := random(0, 100);
    if (LVar0 < 95) then begin
        GVar38 := create_object_sid(16777461, 0, 0, SCRIPT_ECDTHCLW);
    end
    else begin
        if (LVar0 > 95) then begin
            GVar38 := create_object_sid(16777460, 0, 0, SCRIPT_ECDTHCLW);
        end
    end
    call Cr_Foe();
    return 0;
    LVar0 := 0;
end

procedure Gen_Centaur00
begin
    variable LVar0 := 0;
    LVar0 := random(0, 100);
    if (LVar0 < 80) then begin
        GVar38 := create_object_sid(16777465, 0, 0, SCRIPT_ECCENTUR);
    end
    else begin
        if (LVar0 > 80) then begin
            GVar38 := create_object_sid(16777464, 0, 0, SCRIPT_ECCENTUR);
        end
    end
    call Cr_Foe();
    return 0;
    LVar0 := 0;
end

procedure Gen_Floater00
begin
    variable LVar0 := 0;
    LVar0 := random(0, 100);
    if (LVar0 < 75) then begin
        GVar38 := create_object_sid(16777463, 0, 0, SCRIPT_ECFLOATR);
    end
    else begin
        if (LVar0 > 75) then begin
            GVar38 := create_object_sid(16777462, 0, 0, SCRIPT_ECFLOATR);
        end
    end
    call Cr_Foe();
    return 0;
    LVar0 := 0;
end

procedure Gen_Gecko00
begin
    variable LVar0 := 0;
    LVar0 := random(0, 100);
    if (LVar0 < 10) then begin
        GVar38 := create_object_sid(16777302, 0, 0, SCRIPT_ECGECKO);
    end
    else begin
        if ((LVar0 >= 10) and (LVar0 < 60)) then begin
            GVar38 := create_object_sid(16777299, 0, 0, SCRIPT_ECGECKO);
        end
        else begin
            if (LVar0 >= 60) then begin
                GVar38 := create_object_sid(16777297, 0, 0, SCRIPT_ECGECKO);
            end
        end
    end
    call Cr_Foe();
    return 0;
    LVar0 := 0;
end

procedure Gen_Canib00
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    LVar1 := random(0, 100);
    if (LVar1 < 75) then begin
        GVar38 := create_object_sid(16777420, 0, 0, SCRIPT_ECCANIBL);
        LVar0 := random(0, 3);
    end
    else begin
        if (LVar1 > 75) then begin
            GVar38 := create_object_sid(16777421, 0, 0, SCRIPT_ECCANIBL);
            LVar0 := random(0, 3);
        end
    end
    if (GVar36 == 1) then begin
        if (LVar0 == 0) then begin
            GVar39 := create_object(280, 0, 0);
            GVar40 := create_object(273, 0, 0);
        end
        else begin
            if (LVar0 == 1) then begin
                GVar39 := create_object(7, 0, 0);
                GVar40 := create_object(19, 0, 0);
            end
            else begin
                if (LVar0 == 2) then begin
                    GVar39 := create_object(4, 0, 0);
                    GVar40 := create_object(19, 0, 0);
                end
                else begin
                    if (LVar0 == 3) then begin
                        GVar39 := create_object(320, 0, 0);
                        GVar40 := create_object(19, 0, 0);
                    end
                end
            end
        end
        call foe_equip();
    end
    else begin
        if (GVar36 == 0) then begin
            call Cr_Foe();
        end
    end
    return 0;
    LVar0 := 0;
    LVar1 := 0;
end

procedure Cr_Foe
begin
    anim(GVar38, 1000, random(0, 5));
    GVar35 := GVar35 - 1;
    critter_attempt_placement(GVar38, tile_num_in_direction(dude_tile, GVar37, random(15, 25)), dude_elevation);
    if (GVar35 > 0) then begin
        if (GVar34 == 1) then begin
            call Gen_Raider00();
        end
        else begin
            if (GVar34 == 2) then begin
                call Gen_SMutant00();
            end
            else begin
                if (GVar34 == 3) then begin
                    call Gen_DClaw00();
                end
                else begin
                    if (GVar34 == 4) then begin
                        call Gen_Centaur00();
                    end
                    else begin
                        if (GVar34 == 5) then begin
                            call Gen_Floater00();
                        end
                        else begin
                            if (GVar34 == 6) then begin
                                call Gen_Ghoul00();
                            end
                            else begin
                                if (GVar34 == 7) then begin
                                    call Gen_Gecko00();
                                end
                                else begin
                                    if (GVar34 == 8) then begin
                                        call Gen_Canib00();
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure Display_Gvar_Status
begin
    GVar10 := 0;
    call DGVar_Stat_Menu();
end

procedure DGVar_Stat_Menu
begin
    gsay_reply(SCRIPT_KCROB, "Global Variable: " + GVar10 + "                                                      This function checks status of global variables, input the number and select 'Done' when finished.");
    giq_option(1, SCRIPT_KCROB, "100+", DGVar100A, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "100-", DGVar100B, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "10+", DGVar010A, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "10-", DGVar010B, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "1+", DGVar001A, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "1-", DGVar001B, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", DGVar_Chk, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[EXIT]", MMenu_Exit, NEUTRAL_REACTION);
end

procedure DGVar100A
begin
    GVar10 := GVar10 + 100;
    call DGVar_Stat_Menu();
end

procedure DGVar100B
begin
    if (GVar10 > 100) then begin
        GVar10 := GVar10 - 100;
    end
    call DGVar_Stat_Menu();
end

procedure DGVar010A
begin
    GVar10 := GVar10 + 10;
    call DGVar_Stat_Menu();
end

procedure DGVar010B
begin
    if (GVar10 > 9) then begin
        GVar10 := GVar10 - 10;
    end
    call DGVar_Stat_Menu();
end

procedure DGVar001A
begin
    GVar10 := GVar10 + 1;
    call DGVar_Stat_Menu();
end

procedure DGVar001B
begin
    if (GVar10 > 0) then begin
        GVar10 := GVar10 - 1;
    end
    call DGVar_Stat_Menu();
end

procedure DGVar_Chk
begin
    gsay_reply(SCRIPT_KCROB, "Global Variable: " + GVar10 + " = " + global_var(GVar10));
    giq_option(1, SCRIPT_KCROB, "Change variable status", Ch_Gvar_Chk, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", Display_Gvar_Status, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK TO MAIN]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[EXIT]", MMenu_Exit, NEUTRAL_REACTION);
end

procedure Ch_Gvar_Chk
begin
    gsay_reply(SCRIPT_KCROB, "WARNING, WARNING: Altering an unknown global variable can have unexpected results, try at own risk.  For full global variable listings refer to fallout/data/data/Vault13.gam.    Do you wish to change Global Variable " + GVar10 + "?");
    giq_option(1, SCRIPT_KCROB, "Yes", Ch_GVar_set, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "No", MMenu_00, NEUTRAL_REACTION);
end

procedure Ch_GVar_set
begin
    GVar43 := global_var(GVar10);
    call Ch_Gvar_Menu();
end

procedure Ch_Gvar_Menu
begin
    gsay_reply(SCRIPT_KCROB, "Global Variable: " + GVar10 + "  Status: " + GVar43);
    giq_option(1, SCRIPT_KCROB, "+", CGVar_inc, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "-", CGVar_dec, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", Ch_GVar, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[ABORT]", MMenu_00, NEUTRAL_REACTION);
end

procedure CGVar_inc
begin
    GVar43 := GVar43 + 1;
    call Ch_Gvar_Menu();
end

procedure CGVar_dec
begin
    if (GVar43 > 0) then begin
        GVar43 := GVar43 - 1;
    end
    call Ch_Gvar_Menu();
end

procedure Ch_GVar
begin
    set_global_var(GVar10, GVar43);
end

procedure Gen_NPC_Menu
begin
    GVar20 := create_object(GVar44, 0, 0);
    gsay_reply(SCRIPT_KCROB, "NPC PID: " + GVar44 + " = " + obj_name(GVar20) + "                           WARNING: Do not use a number higher than 16777528 unless you are testing a new critter pid; if testing a new NPC, make sure you have added the prototype and included it in data/proto/critters.lst or the game may crash.  For full PID listings refer to critpidlst.txt included with this mod.");
    giq_option(1, SCRIPT_KCROB, "100+", PID100A, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "100-", PID100B, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "10+", PID010A, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "10-", PID010B, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "1+", PID001A, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "1-", PID001B, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", SID_Menu, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[ABORT]", MMenu_00, NEUTRAL_REACTION);
end

procedure PID100A
begin
    GVar44 := GVar44 + 100;
    destroy_object(GVar20);
    call Gen_NPC_Menu();
end

procedure PID100B
begin
    if (GVar44 > 16777318) then begin
        GVar44 := GVar44 - 100;
    end
    destroy_object(GVar20);
    call Gen_NPC_Menu();
end

procedure PID010A
begin
    GVar44 := GVar44 + 10;
    destroy_object(GVar20);
    call Gen_NPC_Menu();
end

procedure PID010B
begin
    if (GVar44 > 16777228) then begin
        GVar44 := GVar44 - 10;
    end
    destroy_object(GVar20);
    call Gen_NPC_Menu();
end

procedure PID001A
begin
    GVar44 := GVar44 + 1;
    destroy_object(GVar20);
    call Gen_NPC_Menu();
end

procedure PID001B
begin
    if (GVar44 > 16777218) then begin
        GVar44 := GVar44 - 1;
    end
    destroy_object(GVar20);
    call Gen_NPC_Menu();
end

procedure SID_Menu
begin
    gsay_reply(SCRIPT_KCROB, "Select script to be assigned to " + obj_name(GVar20));
    giq_option(1, SCRIPT_KCROB, "Generic Party Member", SIDGenP_Menu, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Generic Foe", SIDGenF_Menu, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Custom", SIDCus_Menu, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[ABORT]", MMenu_00, NEUTRAL_REACTION);
end

procedure SIDGenP_Menu
begin
    gsay_reply(SCRIPT_KCROB, "Available temporary party member scripts, permanent party members were not included as duplicating them can cause problems.");
    giq_option(1, SCRIPT_KCROB, "Generic Mercenary", SIDGenP03, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Generic Robot", SIDGenP04, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Generic Pet", SIDGenP05, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", SID_Menu, NEUTRAL_REACTION);
end

procedure SIDGenP01
begin
    GVar45 := 968;
    call NPCdir_Menu();
end

procedure SIDGenP02
begin
    GVar45 := 969;
    call NPCdir_Menu();
end

procedure SIDGenP03
begin
    GVar45 := 1303;
    call NPCdir_Menu();
end

procedure SIDGenP04
begin
    GVar45 := 1304;
    call NPCdir_Menu();
end

procedure SIDGenP05
begin
    GVar45 := 1305;
    call NPCdir_Menu();
end

procedure SIDGenF_Menu
begin
    gsay_reply(SCRIPT_KCROB, "Available hostile NPC scripts.");
    giq_option(1, SCRIPT_KCROB, "Raider", SIDGenF01, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Mutant", SIDGenF02, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Ghoul Scav", SIDGenF03, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Deathclaw", SIDGenF04, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Centaur", SIDGenF05, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Floater", SIDGenF06, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "Radscorpion", SIDGenF07, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[BACK]", SID_Menu, NEUTRAL_REACTION);
end

procedure SIDGenF01
begin
    GVar45 := random(749, 750);
    call NPCdir_Menu();
end

procedure SIDGenF02
begin
    GVar45 := 854;
    call NPCdir_Menu();
end

procedure SIDGenF03
begin
    GVar45 := 231;
    call NPCdir_Menu();
end

procedure SIDGenF04
begin
    GVar45 := 922;
    call NPCdir_Menu();
end

procedure SIDGenF05
begin
    GVar45 := 953;
    call NPCdir_Menu();
end

procedure SIDGenF06
begin
    GVar45 := 889;
    call NPCdir_Menu();
end

procedure SIDGenF07
begin
    GVar45 := 12;
    call NPCdir_Menu();
end

procedure SIDCus_Menu
begin
    gsay_reply(SCRIPT_KCROB, "Script ID : " + GVar45 + "                                                        WARNING: Do not use a number higher than 967 unless you are testing a new script; if testing a new script make sure you have added it to script.lst or the game may crash.  For a full script index refer to scriptlist.txt included with this mod.  It is highly recommended you don't use any original party member script.");
    giq_option(1, SCRIPT_KCROB, "100+", SID100A, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "100-", SID100B, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "10+", SID010A, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "10-", SID010B, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "1+", SID001A, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "1-", SID001B, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", NPCdir_Menu, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[ABORT]", MMenu_00, NEUTRAL_REACTION);
end

procedure SID100A
begin
    GVar45 := GVar45 + 100;
    call SIDCus_Menu();
end

procedure SID100B
begin
    if (GVar45 > 101) then begin
        GVar45 := GVar45 - 100;
    end
    call SIDCus_Menu();
end

procedure SID010A
begin
    GVar45 := GVar45 + 10;
    call SIDCus_Menu();
end

procedure SID010B
begin
    if (GVar45 > 11) then begin
        GVar45 := GVar45 - 10;
    end
    call SIDCus_Menu();
end

procedure SID001A
begin
    GVar45 := GVar45 + 1;
    call SIDCus_Menu();
end

procedure SID001B
begin
    if (GVar45 > 1) then begin
        GVar45 := GVar45 - 1;
    end
    call SIDCus_Menu();
end

procedure NPCdir_Menu
begin
    gsay_reply(SCRIPT_KCROB, "Orientation : " + GVar46);
    giq_option(1, SCRIPT_KCROB, "+", NPC_Or, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", NPCdis_Menu, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[ABORT]", MMenu_00, NEUTRAL_REACTION);
end

procedure NPC_Or
begin
    if (GVar46 < 5) then begin
        GVar46 := GVar46 + 1;
    end
    else begin
        if (GVar46 == 5) then begin
            GVar46 := 0;
        end
    end
    call NPCdir_Menu();
end

procedure NPCdis_Menu
begin
    gsay_reply(SCRIPT_KCROB, "Distance : " + GVar47);
    giq_option(1, SCRIPT_KCROB, "+", NPC_disA, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "-", NPC_disB, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", Gen_NPC_Confirm, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[ABORT]", MMenu_00, NEUTRAL_REACTION);
end

procedure NPC_disA
begin
    if (GVar47 < 25) then begin
        GVar47 := GVar47 + 1;
    end
    call NPCdis_Menu();
end

procedure NPC_disB
begin
    if (GVar47 > 1) then begin
        GVar47 := GVar47 - 1;
    end
    call NPCdis_Menu();
end

procedure Gen_NPC_Confirm
begin
    gsay_reply(SCRIPT_KCROB, "Are you sure you want to spawn NPC Proto ID : " + GVar44 + " = " + obj_name(GVar20) + "  Script ID : " + GVar45 + "  Orientation : " + GVar46 + "  Distance : " + GVar47);
    giq_option(1, SCRIPT_KCROB, "Yes", Cr_NPC, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "No", MMenu_00, NEUTRAL_REACTION);
end

procedure Cr_NPC
begin
    GVar48 := create_object_sid(GVar44, 0, 0, GVar45);
    critter_add_trait(GVar48, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_PLAYER);
    anim(GVar48, 1000, random(0, 5));
    critter_attempt_placement(GVar48, tile_num_in_direction(dude_tile, GVar46, GVar47), dude_elevation);
end

procedure Ch_FRM_Menu00
begin
    gsay_reply(SCRIPT_GENERIC, "Change target FRM");
    giq_option(1, SCRIPT_GENERIC, "Power Armour", Ch_FRM_000, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Purple Robes", Ch_FRM_001, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Combat Armour (HF)", Ch_FRM_002, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "V13 Suit (HF)", Ch_FRM_003, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Leather Armour (HF)", Ch_FRM_004, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Mad Maxx (HF)", Ch_FRM_005, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, 352, Ch_FRM_Menu01, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[MORE]", MMenu_00, NEUTRAL_REACTION);
end

procedure Ch_FRM_Menu01
begin
    gsay_reply(SCRIPT_GENERIC, "Change target FRM");
    giq_option(1, SCRIPT_GENERIC, "Metal Armour (HF)", Ch_FRM_006, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "V13 Suit (MB)", Ch_FRM_007, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Metal Armour (MB)", Ch_FRM_008, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Combat Armour (HM)", Ch_FRM_009, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "V13 Suit (M)", Ch_FRM_010, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, 352, Ch_FRM_Menu02, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[BACK]", Ch_FRM_Menu00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[MORE]", MMenu_00, NEUTRAL_REACTION);
end

procedure Ch_FRM_Menu02
begin
    gsay_reply(SCRIPT_GENERIC, "Change target FRM");
    giq_option(1, SCRIPT_GENERIC, "Leather Armour (HM)", Ch_FRM_011, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Mad Maxx (HM)", Ch_FRM_012, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Metal Armour (M)", Ch_FRM_013, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Brahmin", Ch_FRM_014, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Dog", Ch_FRM_015, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, 352, Ch_FRM_Menu03, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[BACK]", Ch_FRM_Menu01, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[MORE]", MMenu_00, NEUTRAL_REACTION);
end

procedure Ch_FRM_Menu03
begin
    gsay_reply(SCRIPT_GENERIC, "Change target FRM");
    giq_option(1, SCRIPT_GENERIC, "Mr Handy", Ch_FRM_016, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "SMutant Lieutenant (Needs patch by ColJack)", Ch_FRM_017, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Mole Rat", Ch_FRM_018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Black Leather SMutant", Ch_FRM_019, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Green SMutant", Ch_FRM_020, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, 352, Ch_FRM_Menu04, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[BACK]", Ch_FRM_Menu02, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[MORE]", MMenu_00, NEUTRAL_REACTION);
end

procedure Ch_FRM_Menu04
begin
    gsay_reply(SCRIPT_GENERIC, "Change target FRM");
    giq_option(1, SCRIPT_GENERIC, "Big Radscorpion", Ch_FRM_021, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Floater", Ch_FRM_022, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Rat", Ch_FRM_023, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Centaur", Ch_FRM_024, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Blue Robe", Ch_FRM_025, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, 352, Ch_FRM_Menu05, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[BACK]", Ch_FRM_Menu03, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[MORE]", MMenu_00, NEUTRAL_REACTION);
end

procedure Ch_FRM_Menu05
begin
    gsay_reply(SCRIPT_GENERIC, "Change target FRM");
    giq_option(1, SCRIPT_GENERIC, "Child", Ch_FRM_026, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Green Ghoul", Ch_FRM_027, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Glowing One", Ch_FRM_028, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Helmetless PA", Ch_FRM_029, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Monk", Ch_FRM_030, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, 352, Ch_FRM_Menu06, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[BACK]", Ch_FRM_Menu04, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[MORE]", MMenu_00, NEUTRAL_REACTION);
end

procedure Ch_FRM_Menu06
begin
    gsay_reply(SCRIPT_GENERIC, "Change target FRM");
    giq_option(1, SCRIPT_GENERIC, "Female Blonde", Ch_FRM_031, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Female Punk", Ch_FRM_032, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Metal Armour (NF)", Ch_FRM_033, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Tandi", Ch_FRM_034, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Slave", Ch_FRM_035, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, 352, Ch_FRM_Menu07, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[BACK]", Ch_FRM_Menu05, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[MORE]", MMenu_00, NEUTRAL_REACTION);
end

procedure Ch_FRM_Menu07
begin
    gsay_reply(SCRIPT_GENERIC, "Change target FRM");
    giq_option(1, SCRIPT_GENERIC, "V13 Suit (F Red Head)", Ch_FRM_036, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Black Peasant", Ch_FRM_037, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Peasant (Yellow Shirt)", Ch_FRM_038, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Bald Peasant (Green Shirt)", Ch_FRM_039, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Midget", Ch_FRM_040, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, 352, Ch_FRM_Menu08, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[BACK]", Ch_FRM_Menu06, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[MORE]", MMenu_00, NEUTRAL_REACTION);
end

procedure Ch_FRM_Menu08
begin
    gsay_reply(SCRIPT_GENERIC, "Change target FRM");
    giq_option(1, SCRIPT_GENERIC, "Loser", Ch_FRM_041, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Leather Armour (M Bald)", Ch_FRM_042, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Leather Jacket (M Long Hair)", Ch_FRM_043, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Peasant (Blue Cap)", Ch_FRM_044, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Mature Deathclaw", Ch_FRM_045, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, 352, Ch_FRM_Menu09, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[BACK]", Ch_FRM_Menu07, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[MORE]", MMenu_00, NEUTRAL_REACTION);
end

procedure Ch_FRM_Menu09
begin
    gsay_reply(SCRIPT_GENERIC, "Change target FRM");
    giq_option(1, SCRIPT_GENERIC, "Mantis", Ch_FRM_046, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Robobrain", Ch_FRM_047, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Floating Eye", Ch_FRM_048, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Pig Rat", Ch_FRM_049, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Brown Robes", Ch_FRM_050, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, 352, Ch_FRM_Menu10, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[BACK]", Ch_FRM_Menu08, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[MORE]", MMenu_00, NEUTRAL_REACTION);
end

procedure Ch_FRM_Menu10
begin
    gsay_reply(SCRIPT_GENERIC, "Change target FRM");
    giq_option(1, SCRIPT_GENERIC, "Bald Doctor", Ch_FRM_051, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Egg", Ch_FRM_052, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Small Radscorpion", Ch_FRM_053, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Small Deathclaw", Ch_FRM_054, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Tribal Hero (F)", Ch_FRM_055, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, 352, Ch_FRM_Menu11, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[BACK]", Ch_FRM_Menu09, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[MORE]", MMenu_00, NEUTRAL_REACTION);
end

procedure Ch_FRM_Menu11
begin
    gsay_reply(SCRIPT_GENERIC, "Change target FRM");
    giq_option(1, SCRIPT_GENERIC, "Tribal Hero (M)", Ch_FRM_056, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Tribal Female", Ch_FRM_057, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Tribal Male", Ch_FRM_058, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Spore Plant", Ch_FRM_059, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Sentry Robot", Ch_FRM_060, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, 352, Ch_FRM_Menu12, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[BACK]", Ch_FRM_Menu10, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[MORE]", MMenu_00, NEUTRAL_REACTION);
end

procedure Ch_FRM_Menu12
begin
    gsay_reply(SCRIPT_GENERIC, "Change target FRM");
    giq_option(1, SCRIPT_GENERIC, "Silver Gecko", Ch_FRM_061, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Gold Gecko", Ch_FRM_062, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Citizen Male", Ch_FRM_063, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Cyberdog", Ch_FRM_064, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Adv Power Armour", Ch_FRM_065, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, 352, Ch_FRM_Menu13, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[BACK]", Ch_FRM_Menu11, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[MORE]", MMenu_00, NEUTRAL_REACTION);
end

procedure Ch_FRM_Menu13
begin
    gsay_reply(SCRIPT_GENERIC, "Change target FRM");
    giq_option(1, SCRIPT_GENERIC, "Male Tux", Ch_FRM_066, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Female Tux", Ch_FRM_067, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Citizen Female", Ch_FRM_068, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Cyberdog", Ch_FRM_069, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Intelligent Rat", Ch_FRM_070, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, 352, Ch_FRM_Menu14, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[BACK]", Ch_FRM_Menu12, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[MORE]", MMenu_00, NEUTRAL_REACTION);
end

procedure Ch_FRM_Menu14
begin
    gsay_reply(SCRIPT_GENERIC, "Change target FRM");
    giq_option(1, SCRIPT_GENERIC, "Blue Tux Gangster", Ch_FRM_071, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Black Tux Gangster", Ch_FRM_072, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Neutral Ghoul", Ch_FRM_073, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Alien", Ch_FRM_074, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Fire Gecko", Ch_FRM_075, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, 352, Ch_FRM_Menu15, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[BACK]", Ch_FRM_Menu13, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[MORE]", MMenu_00, NEUTRAL_REACTION);
end

procedure Ch_FRM_Menu15
begin
    gsay_reply(SCRIPT_GENERIC, "Change target FRM");
    giq_option(1, SCRIPT_GENERIC, "Asian Peasant", Ch_FRM_076, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Vault Suit (F Black)", Ch_FRM_077, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Black Robes", Ch_FRM_078, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Horrigan", Ch_FRM_079, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Alien Queen", Ch_FRM_080, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, 352, Ch_FRM_Menu16, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[BACK]", Ch_FRM_Menu14, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[MORE]", MMenu_00, NEUTRAL_REACTION);
end

procedure Ch_FRM_Menu16
begin
    gsay_reply(SCRIPT_GENERIC, "Change target FRM");
    giq_option(1, SCRIPT_GENERIC, "Cop", Ch_FRM_081, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Myron", Ch_FRM_082, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Technician", Ch_FRM_083, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Double Plasma Turret", Ch_FRM_084, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Old Man (Vic)", Ch_FRM_085, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, 352, Ch_FRM_Menu17, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[BACK]", Ch_FRM_Menu15, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[MORE]", MMenu_00, NEUTRAL_REACTION);
end

procedure Ch_FRM_Menu17
begin
    gsay_reply(SCRIPT_GENERIC, "Change target FRM");
    giq_option(1, SCRIPT_GENERIC, "Asian Guard (Red Shirt)", Ch_FRM_086, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Asian Guard (Blue Shirt)", Ch_FRM_087, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Asian Peasant", Ch_FRM_088, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Mexican", Ch_FRM_089, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Boxer", Ch_FRM_090, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, 352, Ch_FRM_Menu18, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[BACK]", Ch_FRM_Menu16, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[MORE]", MMenu_00, NEUTRAL_REACTION);
end

procedure Ch_FRM_Menu18
begin
    gsay_reply(SCRIPT_GENERIC, "Change target FRM");
    giq_option(1, SCRIPT_GENERIC, "Ant", Ch_FRM_091, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Old Man", Ch_FRM_092, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Goris (Robed)", Ch_FRM_093, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Goris (Unrobed)", Ch_FRM_094, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "Minigun Turret", Ch_FRM_095, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, 352, Ch_FRM_Menu19, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[BACK]", Ch_FRM_Menu17, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[MORE]", MMenu_00, NEUTRAL_REACTION);
end

procedure Ch_FRM_Menu19
begin
    gsay_reply(SCRIPT_GENERIC, "Change target FRM");
    giq_option(1, SCRIPT_GENERIC, "Dead Horrigan", Ch_FRM_096, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[BACK]", Ch_FRM_Menu17, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[Back to Main Menu]", MMenu_00, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_GENERIC, "[EXIT]", MMenu_Exit, NEUTRAL_REACTION);
end

procedure Ch_FRM_000
begin
    art_change_fid_num(target_obj, 16777217);
    call Wpn_Rem();
end

procedure Ch_FRM_001
begin
    art_change_fid_num(target_obj, 16777218);
    call Wpn_Rem();
end

procedure Ch_FRM_002
begin
    art_change_fid_num(target_obj, 16777219);
    call Wpn_Rem();
end

procedure Ch_FRM_003
begin
    art_change_fid_num(target_obj, 16777220);
    call Wpn_Rem();
end

procedure Ch_FRM_004
begin
    art_change_fid_num(target_obj, 16777221);
    call Wpn_Rem();
end

procedure Ch_FRM_005
begin
    art_change_fid_num(target_obj, 16777222);
    call Wpn_Rem();
end

procedure Ch_FRM_006
begin
    art_change_fid_num(target_obj, 16777223);
    call Wpn_Rem();
end

procedure Ch_FRM_007
begin
    art_change_fid_num(target_obj, 16777224);
    call Wpn_Rem();
end

procedure Ch_FRM_008
begin
    art_change_fid_num(target_obj, 16777225);
    call Wpn_Rem();
end

procedure Ch_FRM_009
begin
    art_change_fid_num(target_obj, 16777226);
    call Wpn_Rem();
end

procedure Ch_FRM_010
begin
    art_change_fid_num(target_obj, 16777227);
    call Wpn_Rem();
end

procedure Ch_FRM_011
begin
    art_change_fid_num(target_obj, 16777228);
    call Wpn_Rem();
end

procedure Ch_FRM_012
begin
    art_change_fid_num(target_obj, 16777229);
    call Wpn_Rem();
end

procedure Ch_FRM_013
begin
    art_change_fid_num(target_obj, 16777230);
    call Wpn_Rem();
end

procedure Ch_FRM_014
begin
    art_change_fid_num(target_obj, 16777231);
    call Wpn_Rem();
end

procedure Ch_FRM_015
begin
    art_change_fid_num(target_obj, 16777232);
    call Wpn_Rem();
end

procedure Ch_FRM_016
begin
    art_change_fid_num(target_obj, 16777233);
    call Wpn_Rem();
end

procedure Ch_FRM_017
begin
    art_change_fid_num(target_obj, 16777234);
    call Wpn_Rem();
end

procedure Ch_FRM_018
begin
    art_change_fid_num(target_obj, 16777235);
    call Wpn_Rem();
end

procedure Ch_FRM_019
begin
    art_change_fid_num(target_obj, 16777236);
    call Wpn_Rem();
end

procedure Ch_FRM_020
begin
    art_change_fid_num(target_obj, 16777237);
    call Wpn_Rem();
end

procedure Ch_FRM_021
begin
    art_change_fid_num(target_obj, 16777238);
    call Wpn_Rem();
end

procedure Ch_FRM_022
begin
    art_change_fid_num(target_obj, 16777239);
    call Wpn_Rem();
end

procedure Ch_FRM_023
begin
    art_change_fid_num(target_obj, 16777240);
    call Wpn_Rem();
end

procedure Ch_FRM_024
begin
    art_change_fid_num(target_obj, 16777241);
    call Wpn_Rem();
end

procedure Ch_FRM_025
begin
    art_change_fid_num(target_obj, 16777242);
    call Wpn_Rem();
end

procedure Ch_FRM_026
begin
    art_change_fid_num(target_obj, 16777243);
    call Wpn_Rem();
end

procedure Ch_FRM_027
begin
    art_change_fid_num(target_obj, 16777244);
    call Wpn_Rem();
end

procedure Ch_FRM_028
begin
    art_change_fid_num(target_obj, 16777245);
    call Wpn_Rem();
end

procedure Ch_FRM_029
begin
    art_change_fid_num(target_obj, 16777246);
    call Wpn_Rem();
end

procedure Ch_FRM_030
begin
    art_change_fid_num(target_obj, 16777247);
    call Wpn_Rem();
end

procedure Ch_FRM_031
begin
    art_change_fid_num(target_obj, 16777249);
    call Wpn_Rem();
end

procedure Ch_FRM_032
begin
    art_change_fid_num(target_obj, 16777250);
    call Wpn_Rem();
end

procedure Ch_FRM_033
begin
    art_change_fid_num(target_obj, 16777251);
    call Wpn_Rem();
end

procedure Ch_FRM_034
begin
    art_change_fid_num(target_obj, 16777252);
    call Wpn_Rem();
end

procedure Ch_FRM_035
begin
    art_change_fid_num(target_obj, 16777253);
    call Wpn_Rem();
end

procedure Ch_FRM_036
begin
    art_change_fid_num(target_obj, 16777254);
    call Wpn_Rem();
end

procedure Ch_FRM_037
begin
    art_change_fid_num(target_obj, 16777255);
    call Wpn_Rem();
end

procedure Ch_FRM_038
begin
    art_change_fid_num(target_obj, 16777256);
    call Wpn_Rem();
end

procedure Ch_FRM_039
begin
    art_change_fid_num(target_obj, 16777257);
    call Wpn_Rem();
end

procedure Ch_FRM_040
begin
    art_change_fid_num(target_obj, 16777258);
    call Wpn_Rem();
end

procedure Ch_FRM_041
begin
    art_change_fid_num(target_obj, 16777259);
    call Wpn_Rem();
end

procedure Ch_FRM_042
begin
    art_change_fid_num(target_obj, 16777260);
    call Wpn_Rem();
end

procedure Ch_FRM_043
begin
    art_change_fid_num(target_obj, 16777261);
    call Wpn_Rem();
end

procedure Ch_FRM_044
begin
    art_change_fid_num(target_obj, 16777264);
    call Wpn_Rem();
end

procedure Ch_FRM_045
begin
    art_change_fid_num(target_obj, 16777267);
    call Wpn_Rem();
end

procedure Ch_FRM_046
begin
    art_change_fid_num(target_obj, 16777268);
    call Wpn_Rem();
end

procedure Ch_FRM_047
begin
    art_change_fid_num(target_obj, 16777269);
    call Wpn_Rem();
end

procedure Ch_FRM_048
begin
    art_change_fid_num(target_obj, 16777270);
    call Wpn_Rem();
end

procedure Ch_FRM_049
begin
    art_change_fid_num(target_obj, 16777271);
    call Wpn_Rem();
end

procedure Ch_FRM_050
begin
    art_change_fid_num(target_obj, 16777272);
    call Wpn_Rem();
end

procedure Ch_FRM_051
begin
    art_change_fid_num(target_obj, 16777273);
    call Wpn_Rem();
end

procedure Ch_FRM_052
begin
    art_change_fid_num(target_obj, 16777274);
    call Wpn_Rem();
end

procedure Ch_FRM_053
begin
    art_change_fid_num(target_obj, 16777275);
    call Wpn_Rem();
end

procedure Ch_FRM_054
begin
    art_change_fid_num(target_obj, 16777276);
    call Wpn_Rem();
end

procedure Ch_FRM_055
begin
    art_change_fid_num(target_obj, 16777277);
    call Wpn_Rem();
end

procedure Ch_FRM_056
begin
    art_change_fid_num(target_obj, 16777278);
    call Wpn_Rem();
end

procedure Ch_FRM_057
begin
    art_change_fid_num(target_obj, 16777279);
    call Wpn_Rem();
end

procedure Ch_FRM_058
begin
    art_change_fid_num(target_obj, 16777280);
    call Wpn_Rem();
end

procedure Ch_FRM_059
begin
    art_change_fid_num(target_obj, 16777281);
    call Wpn_Rem();
end

procedure Ch_FRM_060
begin
    art_change_fid_num(target_obj, 16777282);
    call Wpn_Rem();
end

procedure Ch_FRM_061
begin
    art_change_fid_num(target_obj, 16777283);
    call Wpn_Rem();
end

procedure Ch_FRM_062
begin
    art_change_fid_num(target_obj, 16777284);
    call Wpn_Rem();
end

procedure Ch_FRM_063
begin
    art_change_fid_num(target_obj, 16777285);
    call Wpn_Rem();
end

procedure Ch_FRM_064
begin
    art_change_fid_num(target_obj, 16777286);
    call Wpn_Rem();
end

procedure Ch_FRM_065
begin
    art_change_fid_num(target_obj, 16777287);
    call Wpn_Rem();
end

procedure Ch_FRM_066
begin
    art_change_fid_num(target_obj, 16777288);
    call Wpn_Rem();
end

procedure Ch_FRM_067
begin
    art_change_fid_num(target_obj, 16777289);
    call Wpn_Rem();
end

procedure Ch_FRM_068
begin
    art_change_fid_num(target_obj, 16777290);
    call Wpn_Rem();
end

procedure Ch_FRM_069
begin
    art_change_fid_num(target_obj, 16777291);
    call Wpn_Rem();
end

procedure Ch_FRM_070
begin
    art_change_fid_num(target_obj, 16777292);
    call Wpn_Rem();
end

procedure Ch_FRM_071
begin
    art_change_fid_num(target_obj, 16777293);
    call Wpn_Rem();
end

procedure Ch_FRM_072
begin
    art_change_fid_num(target_obj, 16777294);
    call Wpn_Rem();
end

procedure Ch_FRM_073
begin
    art_change_fid_num(target_obj, 16777295);
    call Wpn_Rem();
end

procedure Ch_FRM_074
begin
    art_change_fid_num(target_obj, 16777296);
    call Wpn_Rem();
end

procedure Ch_FRM_075
begin
    art_change_fid_num(target_obj, 16777297);
    call Wpn_Rem();
end

procedure Ch_FRM_076
begin
    art_change_fid_num(target_obj, 16777298);
    call Wpn_Rem();
end

procedure Ch_FRM_077
begin
    art_change_fid_num(target_obj, 16777299);
    call Wpn_Rem();
end

procedure Ch_FRM_078
begin
    art_change_fid_num(target_obj, 16777300);
    call Wpn_Rem();
end

procedure Ch_FRM_079
begin
    art_change_fid_num(target_obj, 16777301);
    call Wpn_Rem();
end

procedure Ch_FRM_080
begin
    art_change_fid_num(target_obj, 16777302);
    call Wpn_Rem();
end

procedure Ch_FRM_081
begin
    art_change_fid_num(target_obj, 16777303);
    call Wpn_Rem();
end

procedure Ch_FRM_082
begin
    art_change_fid_num(target_obj, 16777304);
    call Wpn_Rem();
end

procedure Ch_FRM_083
begin
    art_change_fid_num(target_obj, 16777305);
    call Wpn_Rem();
end

procedure Ch_FRM_084
begin
    art_change_fid_num(target_obj, 16777306);
    call Wpn_Rem();
end

procedure Ch_FRM_085
begin
    art_change_fid_num(target_obj, 16777307);
    call Wpn_Rem();
end

procedure Ch_FRM_086
begin
    art_change_fid_num(target_obj, 16777308);
    call Wpn_Rem();
end

procedure Ch_FRM_087
begin
    art_change_fid_num(target_obj, 16777309);
    call Wpn_Rem();
end

procedure Ch_FRM_088
begin
    art_change_fid_num(target_obj, 16777310);
    call Wpn_Rem();
end

procedure Ch_FRM_089
begin
    art_change_fid_num(target_obj, 16777311);
    call Wpn_Rem();
end

procedure Ch_FRM_090
begin
    art_change_fid_num(target_obj, 16777312);
    call Wpn_Rem();
end

procedure Ch_FRM_091
begin
    art_change_fid_num(target_obj, 16777313);
    call Wpn_Rem();
end

procedure Ch_FRM_092
begin
    art_change_fid_num(target_obj, 16777314);
    call Wpn_Rem();
end

procedure Ch_FRM_093
begin
    art_change_fid_num(target_obj, 16777315);
    call Wpn_Rem();
end

procedure Ch_FRM_094
begin
    art_change_fid_num(target_obj, 16777316);
    call Wpn_Rem();
end

procedure Ch_FRM_095
begin
    art_change_fid_num(target_obj, 16777317);
    call Wpn_Rem();
end

procedure Ch_FRM_096
begin
    art_change_fid_num(target_obj, 16777318);
    call Wpn_Rem();
end

procedure Set_Coordinates
begin
    GVar49 := worldmap_xpos;
    GVar50 := worldmap_ypos;
    GVar51 := 0;
    GVar52 := 0;
    call set_dest_x();
end

procedure set_dest_x
begin
    gsay_reply(SCRIPT_KCROB, "Destination X: " + GVar51 + "   Current World Map Position : X" + GVar49 + " , Y" + GVar50 + "                           Set Destination X position.");
    giq_option(1, SCRIPT_KCROB, "100+", DX0100A, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "100-", DX0100B, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "10+", DX0010A, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "10-", DX0010B, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "1+", DX0001A, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "1-", DX0001B, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", set_dest_y, NEUTRAL_REACTION);
end

procedure DX1000A
begin
    GVar51 := GVar51 + 1000;
    call set_dest_x();
end

procedure DX1000B
begin
    if (GVar51 >= 1000) then begin
        GVar51 := GVar51 - 1000;
    end
    else begin
        GVar51 := 0;
    end
    call set_dest_x();
end

procedure DX0100A
begin
    GVar51 := GVar51 + 100;
    call set_dest_x();
end

procedure DX0100B
begin
    if (GVar51 >= 100) then begin
        GVar51 := GVar51 - 100;
    end
    else begin
        GVar51 := 0;
    end
    call set_dest_x();
end

procedure DX0010A
begin
    GVar51 := GVar51 + 10;
    call set_dest_x();
end

procedure DX0010B
begin
    if (GVar51 >= 10) then begin
        GVar51 := GVar51 - 10;
    end
    else begin
        GVar51 := 0;
    end
    call set_dest_x();
end

procedure DX0001A
begin
    GVar51 := GVar51 + 1;
    call set_dest_x();
end

procedure DX0001B
begin
    if (GVar51 >= 1) then begin
        GVar51 := GVar51 - 1;
    end
    else begin
        GVar51 := 0;
    end
    call set_dest_x();
end

procedure set_dest_y
begin
    gsay_reply(SCRIPT_KCROB, "Destination Y: " + GVar52 + "   Current World Map Position : X" + GVar49 + " , Y" + GVar50 + "   Destination Co-ordinates : X" + GVar51 + " , Y" + GVar52 + "                           Set Destination Y position.");
    giq_option(1, SCRIPT_KCROB, "100+", DY0100A, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "100-", DY0100B, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "10+", DY0010A, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "10-", DY0010B, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "1+", DY0001A, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "1-", DY0001B, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_KCROB, "[Done]", calc_dis_x, NEUTRAL_REACTION);
end

procedure DY1000A
begin
    GVar52 := GVar52 + 1000;
    call set_dest_y();
end

procedure DY1000B
begin
    if (GVar52 >= 1000) then begin
        GVar52 := GVar52 - 1000;
    end
    else begin
        GVar52 := 0;
    end
    call set_dest_y();
end

procedure DY0100A
begin
    GVar52 := GVar52 + 100;
    call set_dest_y();
end

procedure DY0100B
begin
    if (GVar52 >= 100) then begin
        GVar52 := GVar52 - 100;
    end
    else begin
        GVar52 := 0;
    end
    call set_dest_y();
end

procedure DY0010A
begin
    GVar52 := GVar52 + 10;
    call set_dest_y();
end

procedure DY0010B
begin
    if (GVar52 >= 10) then begin
        GVar52 := GVar52 - 10;
    end
    else begin
        GVar52 := 0;
    end
    call set_dest_y();
end

procedure DY0001A
begin
    GVar52 := GVar52 + 1;
    call set_dest_y();
end

procedure DY0001B
begin
    if (GVar52 >= 1) then begin
        GVar52 := GVar52 - 1;
    end
    else begin
        GVar52 := 0;
    end
    call set_dest_y();
end

procedure calc_dis_x
begin
    if (GVar49 == GVar51) then begin
        GVar53 := 0;
        GVar55 := 0;
    end
    else begin
        if (GVar49 < GVar51) then begin
            GVar53 := GVar51 - GVar49;
            GVar55 := 1;
        end
        else begin
            if (GVar49 > GVar51) then begin
                GVar53 := GVar49 - GVar51;
                GVar55 := 2;
            end
        end
    end
    call calc_dis_y();
end

procedure calc_dis_y
begin
    if (GVar50 == GVar52) then begin
        GVar54 := 0;
        GVar56 := 0;
    end
    else begin
        if (GVar50 < GVar52) then begin
            GVar54 := GVar52 - GVar50;
            GVar56 := 1;
        end
        else begin
            if (GVar50 > GVar52) then begin
                GVar54 := GVar50 - GVar52;
                GVar56 := 2;
            end
        end
    end
    call set_hor_dir();
end

procedure set_hor_dir
begin
    if (GVar55 == 0) then begin
        GVar57 := "";
    end
    else begin
        if (GVar55 == 1) then begin
            GVar57 := "east";
        end
        else begin
            if (GVar55 == 2) then begin
                GVar57 := "west";
            end
        end
    end
    call set_ver_dir();
end

procedure set_ver_dir
begin
    if (GVar56 == 0) then begin
        GVar58 := "";
    end
    else begin
        if (GVar56 == 1) then begin
            GVar58 := "south";
        end
        else begin
            if (GVar56 == 2) then begin
                GVar58 := "north";
            end
        end
    end
    call pre_check();
end

procedure pre_check
begin
    if ((GVar53 == 0) or (GVar54 == 0)) then begin
        call dis_str();
    end
    else begin
        call Triangulate();
    end
end

procedure dis_str
begin
    GVar66 := GVar53 + GVar54;
    GVar67 := GVar66 * 222 / 1000;
    gsay_reply(SCRIPT_KCROB, "Distance from current position: " + GVar67 + " miles " + GVar58 + GVar57);
    giq_option(1, SCRIPT_KCROB, "[Done]", Node_X, NEUTRAL_REACTION);
end

procedure Triangulate
begin
    GVar62 := (GVar53 * GVar53) + (GVar54 * GVar54);
    GVar59 := 90000000 / (GVar53 + GVar54);
    if (GVar54 <= GVar53) then begin
        GVar60 := GVar59 * GVar54 / 1000000;
    end
    else begin
        GVar60 := GVar59 * GVar53 / 1000000;
    end
    if ((GVar55 == 1) and (GVar56 == 2)) then begin
        if (GVar54 <= GVar53) then begin
            GVar61 := 90 - GVar60;
        end
        else begin
            GVar61 := GVar60;
        end
    end
    else begin
        if ((GVar55 == 1) and (GVar56 == 1)) then begin
            if (GVar54 <= GVar53) then begin
                GVar61 := 90 + GVar60;
            end
            else begin
                GVar61 := 180 - GVar60;
            end
        end
        else begin
            if ((GVar55 == 2) and (GVar56 == 1)) then begin
                if (GVar54 <= GVar53) then begin
                    GVar61 := 270 - GVar60;
                end
                else begin
                    GVar61 := 180 + GVar60;
                end
            end
            else begin
                if ((GVar55 == 2) and (GVar56 == 2)) then begin
                    if (GVar54 <= GVar53) then begin
                        GVar61 := 270 + GVar60;
                    end
                    else begin
                        GVar61 := 360 - GVar60;
                    end
                end
            end
        end
    end
    call Approximate_Value_G();
end

procedure Approximate_Value_G
begin
    if (GVar62 < 4) then begin
        GVar63 := 1;
    end
    else begin
        if ((GVar62 >= 4) and (GVar62 < 9)) then begin
            GVar63 := 2;
        end
        else begin
            if ((GVar62 >= 9) and (GVar62 < 16)) then begin
                GVar63 := 3;
            end
            else begin
                if ((GVar62 >= 16) and (GVar62 < 25)) then begin
                    GVar63 := 4;
                end
                else begin
                    if ((GVar62 >= 25) and (GVar62 < 36)) then begin
                        GVar63 := 5;
                    end
                    else begin
                        if ((GVar62 >= 36) and (GVar62 < 49)) then begin
                            GVar63 := 6;
                        end
                        else begin
                            if ((GVar62 >= 49) and (GVar62 < 64)) then begin
                                GVar63 := 7;
                            end
                            else begin
                                if ((GVar62 >= 64) and (GVar62 < 81)) then begin
                                    GVar63 := 8;
                                end
                                else begin
                                    if ((GVar62 >= 81) and (GVar62 < 100)) then begin
                                        GVar63 := 9;
                                    end
                                    else begin
                                        if ((GVar62 >= 100) and (GVar62 < 121)) then begin
                                            GVar63 := 10;
                                        end
                                        else begin
                                            if ((GVar62 >= 121) and (GVar62 < 144)) then begin
                                                GVar63 := 11;
                                            end
                                            else begin
                                                if ((GVar62 >= 144) and (GVar62 < 169)) then begin
                                                    GVar63 := 12;
                                                end
                                                else begin
                                                    if ((GVar62 >= 169) and (GVar62 < 196)) then begin
                                                        GVar63 := 13;
                                                    end
                                                    else begin
                                                        if ((GVar62 >= 196) and (GVar62 < 225)) then begin
                                                            GVar63 := 14;
                                                        end
                                                        else begin
                                                            if ((GVar62 >= 225) and (GVar62 < 256)) then begin
                                                                GVar63 := 15;
                                                            end
                                                            else begin
                                                                if ((GVar62 >= 256) and (GVar62 < 289)) then begin
                                                                    GVar63 := 16;
                                                                end
                                                                else begin
                                                                    if ((GVar62 >= 289) and (GVar62 < 324)) then begin
                                                                        GVar63 := 17;
                                                                    end
                                                                    else begin
                                                                        if ((GVar62 >= 324) and (GVar62 < 361)) then begin
                                                                            GVar63 := 18;
                                                                        end
                                                                        else begin
                                                                            if ((GVar62 >= 361) and (GVar62 < 400)) then begin
                                                                                GVar63 := 19;
                                                                            end
                                                                            else begin
                                                                                if (GVar62 >= 400) then begin
                                                                                    GVar63 := 20;
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    call calc_00();
end

procedure calc_00
begin
    GVar64 := GVar62 / GVar63;
    if (GVar64 >= GVar63) then begin
        GVar65 := GVar64 - GVar63;
    end
    if (GVar64 < GVar63) then begin
        GVar65 := GVar63 - GVar64;
    end
    call calc_01();
end

procedure calc_01
begin
    if ((GVar64 == GVar63) or (GVar65 <= 1)) then begin
        call Display_distance();
    end
    else begin
        call Recalculate();
    end
end

procedure Recalculate
begin
    GVar65 := GVar65 / 2;
    if (GVar64 < GVar63) then begin
        GVar63 := GVar63 - GVar65;
    end
    else begin
        if (GVar64 > GVar63) then begin
            GVar63 := GVar63 + GVar65;
        end
    end
    call calc_00();
end

procedure Display_distance
begin
    GVar66 := GVar64;
    GVar67 := GVar66 * 222 / 1000;
    if (GVar65 == 1) then begin
        GVar18 := "Distance from current position: " + GVar67 + " miles (" + GVar66 + "/" + GVar63 + ") -- Bearing : " + GVar61 + " degrees " + GVar58 + GVar57;
    end
    else begin
        GVar18 := "Distance from current position: " + GVar67 + " miles -- Bearing : " + GVar61 + " degrees " + GVar58 + GVar57;
    end
    gsay_reply(SCRIPT_KCROB, GVar18);
    giq_option(1, SCRIPT_KCROB, "[Done]", Node_X, NEUTRAL_REACTION);
end

procedure Node_X
begin
end

procedure use_healing_items_target
begin
    call use_healing_items_on_target(dude_obj);
    if (party_member_obj(16777376) != 0) then begin
        call use_healing_items_on_target(party_member_obj(16777376));
    end
    if (party_member_obj(16777377) != 0) then begin
        call use_healing_items_on_target(party_member_obj(16777377));
    end
    if (party_member_obj(16777305) != 0) then begin
        call use_healing_items_on_target(party_member_obj(16777305));
    end
    if (party_member_obj(16777313) != 0) then begin
        call use_healing_items_on_target(party_member_obj(16777313));
    end
    if (party_member_obj(16777323) != 0) then begin
        call use_healing_items_on_target(party_member_obj(16777323));
    end
    if (party_member_obj(16777352) != 0) then begin
        call use_healing_items_on_target(party_member_obj(16777352));
    end
    if (party_member_obj(16777859) != 0) then begin
        call use_healing_items_on_target(party_member_obj(16777859));
    end
    if (party_member_obj(16777368) != 0) then begin
        call use_healing_items_on_target(party_member_obj(16777368));
    end
    if (party_member_obj(16777379) != 0) then begin
        call use_healing_items_on_target(party_member_obj(16777379));
    end
    if (party_member_obj(16777380) != 0) then begin
        call use_healing_items_on_target(party_member_obj(16777380));
    end
    if (party_member_obj(16777381) != 0) then begin
        call use_healing_items_on_target(party_member_obj(16777381));
    end
    if (party_member_obj(16777295) != 0) then begin
        call use_healing_items_on_target(party_member_obj(16777295));
    end
    if (party_member_obj(16777278) != 0) then begin
        call use_healing_items_on_target(party_member_obj(16777278));
    end
    if (party_member_obj(16777407) != 0) then begin
        call use_healing_items_on_target(party_member_obj(16777407));
    end
    if (party_member_obj(16777411) != 0) then begin
        call use_healing_items_on_target(party_member_obj(16777411));
    end
    if (party_member_obj(16777412) != 0) then begin
        call use_healing_items_on_target(party_member_obj(16777412));
    end
    if (party_member_obj(16777413) != 0) then begin
        call use_healing_items_on_target(party_member_obj(16777413));
    end
    if (party_member_obj(16777481) != 0) then begin
        call use_healing_items_on_target(party_member_obj(16777481));
    end
    if (party_member_obj(16777558) != 0) then begin
        call use_healing_items_on_target(party_member_obj(16777558));
    end
    if (party_member_obj(16777597) != 0) then begin
        call use_healing_items_on_target(party_member_obj(16777597));
    end
    if (party_member_obj(16777596) != 0) then begin
        call use_healing_items_on_target(party_member_obj(16777596));
    end
    if (party_member_obj(16777595) != 0) then begin
        call use_healing_items_on_target(party_member_obj(16777595));
    end
    if (party_member_obj(16777600) != 0) then begin
        call use_healing_items_on_target(party_member_obj(16777600));
    end
    if (party_member_obj(16777687) != 0) then begin
        call use_healing_items_on_target(party_member_obj(16777687));
    end
    if (party_member_obj(16777785) != 0) then begin
        call use_healing_items_on_target(party_member_obj(16777785));
    end
    if (party_member_obj(16777749) != 0) then begin
        call use_healing_items_on_target(party_member_obj(16777749));
    end
    if (party_member_obj(16777748) != 0) then begin
        call use_healing_items_on_target(party_member_obj(16777748));
    end
    if (party_member_obj(16777747) != 0) then begin
        call use_healing_items_on_target(party_member_obj(16777747));
    end
    if (party_member_obj(16777766) != 0) then begin
        call use_healing_items_on_target(party_member_obj(16777766));
    end
    if (party_member_obj(16777762) != 0) then begin
        call use_healing_items_on_target(party_member_obj(16777762));
    end
end

procedure use_healing_items_on_target(variable arg0)
begin
    variable LVar1 := 0;
    if ((get_critter_stat(arg0, STAT_max_hp) - get_critter_stat(arg0, STAT_current_hp)) >= 160) then begin
        if (obj_is_carrying_obj_pid(dude_obj, 808)) then begin
            LVar1 := 0;
            while (((get_critter_stat(arg0, STAT_max_hp) - get_critter_stat(arg0, STAT_current_hp)) >= 160) and obj_is_carrying_obj_pid(dude_obj, 808)) do begin
                call delete_item(808);
                critter_heal(arg0, 160);
                LVar1 := LVar1 + 1;
            end
            if (LVar1 > 1) then begin
                display_msg(dude_name + message_str(SCRIPT_OBJ_DUDE, 199) + LVar1 + message_str(SCRIPT_OBJ_DUDE, 187) + message_str(SCRIPT_OBJ_DUDE, 200) + message_str(SCRIPT_OBJ_DUDE, 198) + obj_name(arg0) + message_str(SCRIPT_OBJ_DUDE, 197));
            end
            else begin
                display_msg(dude_name + message_str(SCRIPT_OBJ_DUDE, 199) + LVar1 + message_str(SCRIPT_OBJ_DUDE, 187) + message_str(SCRIPT_OBJ_DUDE, 198) + obj_name(arg0) + message_str(SCRIPT_OBJ_DUDE, 197));
            end
        end
        else begin
            display_msg(dude_name + message_str(SCRIPT_OBJ_DUDE, 186) + message_str(SCRIPT_OBJ_DUDE, 187) + message_str(SCRIPT_OBJ_DUDE, 200) + message_str(SCRIPT_OBJ_DUDE, 197));
        end
    end
    if ((get_critter_stat(arg0, STAT_max_hp) - get_critter_stat(arg0, STAT_current_hp)) >= 80) then begin
        if (obj_is_carrying_obj_pid(dude_obj, 144)) then begin
            LVar1 := 0;
            while (((get_critter_stat(arg0, STAT_max_hp) - get_critter_stat(arg0, STAT_current_hp)) >= 80) and obj_is_carrying_obj_pid(dude_obj, 144)) do begin
                call delete_item(144);
                critter_heal(arg0, 80);
                LVar1 := LVar1 + 1;
            end
            if (LVar1 > 1) then begin
                display_msg(dude_name + message_str(SCRIPT_OBJ_DUDE, 199) + LVar1 + message_str(SCRIPT_OBJ_DUDE, 188) + message_str(SCRIPT_OBJ_DUDE, 200) + message_str(SCRIPT_OBJ_DUDE, 198) + obj_name(arg0) + message_str(SCRIPT_OBJ_DUDE, 197));
            end
            else begin
                display_msg(dude_name + message_str(SCRIPT_OBJ_DUDE, 199) + LVar1 + message_str(SCRIPT_OBJ_DUDE, 188) + message_str(SCRIPT_OBJ_DUDE, 198) + obj_name(arg0) + message_str(SCRIPT_OBJ_DUDE, 197));
            end
        end
        else begin
            display_msg(dude_name + message_str(SCRIPT_OBJ_DUDE, 186) + message_str(SCRIPT_OBJ_DUDE, 188) + message_str(SCRIPT_OBJ_DUDE, 200) + message_str(SCRIPT_OBJ_DUDE, 197));
        end
    end
    if ((get_critter_stat(arg0, STAT_max_hp) - get_critter_stat(arg0, STAT_current_hp)) >= 40) then begin
        if (obj_is_carrying_obj_pid(dude_obj, 40)) then begin
            LVar1 := 0;
            while (((get_critter_stat(arg0, STAT_max_hp) - get_critter_stat(arg0, STAT_current_hp)) >= 40) and obj_is_carrying_obj_pid(dude_obj, 40)) do begin
                call delete_item(40);
                critter_heal(arg0, 40);
                LVar1 := LVar1 + 1;
            end
            if (LVar1 > 1) then begin
                display_msg(dude_name + message_str(SCRIPT_OBJ_DUDE, 199) + LVar1 + message_str(SCRIPT_OBJ_DUDE, 189) + message_str(SCRIPT_OBJ_DUDE, 200) + message_str(SCRIPT_OBJ_DUDE, 198) + obj_name(arg0) + message_str(SCRIPT_OBJ_DUDE, 197));
            end
            else begin
                display_msg(dude_name + message_str(SCRIPT_OBJ_DUDE, 199) + LVar1 + message_str(SCRIPT_OBJ_DUDE, 189) + message_str(SCRIPT_OBJ_DUDE, 198) + obj_name(arg0) + message_str(SCRIPT_OBJ_DUDE, 197));
            end
        end
        else begin
            display_msg(dude_name + message_str(SCRIPT_OBJ_DUDE, 186) + message_str(SCRIPT_OBJ_DUDE, 189) + message_str(SCRIPT_OBJ_DUDE, 200) + message_str(SCRIPT_OBJ_DUDE, 197));
        end
    end
    if ((get_critter_stat(arg0, STAT_max_hp) - get_critter_stat(arg0, STAT_current_hp)) >= 20) then begin
        if (obj_is_carrying_obj_pid(dude_obj, 273)) then begin
            LVar1 := 0;
            while (((get_critter_stat(arg0, STAT_max_hp) - get_critter_stat(arg0, STAT_current_hp)) >= 20) and obj_is_carrying_obj_pid(dude_obj, 273)) do begin
                call delete_item(273);
                critter_heal(arg0, 20);
                LVar1 := LVar1 + 1;
            end
            if (LVar1 > 1) then begin
                display_msg(dude_name + message_str(SCRIPT_OBJ_DUDE, 199) + LVar1 + message_str(SCRIPT_OBJ_DUDE, 190) + message_str(SCRIPT_OBJ_DUDE, 200) + message_str(SCRIPT_OBJ_DUDE, 198) + obj_name(arg0) + message_str(SCRIPT_OBJ_DUDE, 197));
            end
            else begin
                display_msg(dude_name + message_str(SCRIPT_OBJ_DUDE, 199) + LVar1 + message_str(SCRIPT_OBJ_DUDE, 190) + message_str(SCRIPT_OBJ_DUDE, 198) + obj_name(arg0) + message_str(SCRIPT_OBJ_DUDE, 197));
            end
        end
        else begin
            display_msg(dude_name + message_str(SCRIPT_OBJ_DUDE, 186) + message_str(SCRIPT_OBJ_DUDE, 190) + message_str(SCRIPT_OBJ_DUDE, 200) + message_str(SCRIPT_OBJ_DUDE, 197));
        end
    end
    if ((get_critter_stat(arg0, STAT_max_hp) - get_critter_stat(arg0, STAT_current_hp)) >= 20) then begin
        if (obj_is_carrying_obj_pid(dude_obj, 802)) then begin
            LVar1 := 0;
            while (((get_critter_stat(arg0, STAT_max_hp) - get_critter_stat(arg0, STAT_current_hp)) >= 20) and obj_is_carrying_obj_pid(dude_obj, 802)) do begin
                call delete_item(802);
                critter_heal(arg0, 20);
                LVar1 := LVar1 + 1;
            end
            if (LVar1 > 1) then begin
                display_msg(dude_name + message_str(SCRIPT_OBJ_DUDE, 199) + LVar1 + message_str(SCRIPT_OBJ_DUDE, 191) + message_str(SCRIPT_OBJ_DUDE, 200) + message_str(SCRIPT_OBJ_DUDE, 198) + obj_name(arg0) + message_str(SCRIPT_OBJ_DUDE, 197));
            end
            else begin
                display_msg(dude_name + message_str(SCRIPT_OBJ_DUDE, 199) + LVar1 + message_str(SCRIPT_OBJ_DUDE, 191) + message_str(SCRIPT_OBJ_DUDE, 198) + obj_name(arg0) + message_str(SCRIPT_OBJ_DUDE, 197));
            end
        end
        else begin
            display_msg(dude_name + message_str(SCRIPT_OBJ_DUDE, 186) + message_str(SCRIPT_OBJ_DUDE, 191) + message_str(SCRIPT_OBJ_DUDE, 200) + message_str(SCRIPT_OBJ_DUDE, 197));
        end
    end
    if ((get_critter_stat(arg0, STAT_max_hp) - get_critter_stat(arg0, STAT_current_hp)) >= 10) then begin
        if (obj_is_carrying_obj_pid(dude_obj, 71)) then begin
            LVar1 := 0;
            while (((get_critter_stat(arg0, STAT_max_hp) - get_critter_stat(arg0, STAT_current_hp)) >= 10) and obj_is_carrying_obj_pid(dude_obj, 71)) do begin
                call delete_item(71);
                critter_heal(arg0, 10);
                LVar1 := LVar1 + 1;
            end
            display_msg(dude_name + message_str(SCRIPT_OBJ_DUDE, 199) + LVar1 + message_str(SCRIPT_OBJ_DUDE, 192) + message_str(SCRIPT_OBJ_DUDE, 198) + obj_name(arg0) + message_str(SCRIPT_OBJ_DUDE, 197));
        end
        else begin
            display_msg(dude_name + message_str(SCRIPT_OBJ_DUDE, 186) + message_str(SCRIPT_OBJ_DUDE, 192) + message_str(SCRIPT_OBJ_DUDE, 197));
        end
    end
    if ((get_critter_stat(arg0, STAT_max_hp) - get_critter_stat(arg0, STAT_current_hp)) >= 10) then begin
        if (obj_is_carrying_obj_pid(dude_obj, 801)) then begin
            LVar1 := 0;
            while (((get_critter_stat(arg0, STAT_max_hp) - get_critter_stat(arg0, STAT_current_hp)) >= 10) and obj_is_carrying_obj_pid(dude_obj, 801)) do begin
                call delete_item(801);
                critter_heal(arg0, 10);
                LVar1 := LVar1 + 1;
            end
            if (LVar1 > 1) then begin
                display_msg(dude_name + message_str(SCRIPT_OBJ_DUDE, 199) + LVar1 + message_str(SCRIPT_OBJ_DUDE, 193) + message_str(SCRIPT_OBJ_DUDE, 200) + message_str(SCRIPT_OBJ_DUDE, 198) + obj_name(arg0) + message_str(SCRIPT_OBJ_DUDE, 197));
            end
            else begin
                display_msg(dude_name + message_str(SCRIPT_OBJ_DUDE, 199) + LVar1 + message_str(SCRIPT_OBJ_DUDE, 193) + message_str(SCRIPT_OBJ_DUDE, 198) + obj_name(arg0) + message_str(SCRIPT_OBJ_DUDE, 197));
            end
        end
        else begin
            display_msg(dude_name + message_str(SCRIPT_OBJ_DUDE, 186) + message_str(SCRIPT_OBJ_DUDE, 193) + message_str(SCRIPT_OBJ_DUDE, 200) + message_str(SCRIPT_OBJ_DUDE, 197));
        end
    end
    if ((get_critter_stat(arg0, STAT_max_hp) - get_critter_stat(arg0, STAT_current_hp)) >= 5) then begin
        if (obj_is_carrying_obj_pid(dude_obj, 81)) then begin
            LVar1 := 0;
            while (((get_critter_stat(arg0, STAT_max_hp) - get_critter_stat(arg0, STAT_current_hp)) >= 5) and obj_is_carrying_obj_pid(dude_obj, 81)) do begin
                call delete_item(81);
                critter_heal(arg0, 5);
                LVar1 := LVar1 + 1;
            end
            display_msg(dude_name + message_str(SCRIPT_OBJ_DUDE, 199) + LVar1 + message_str(SCRIPT_OBJ_DUDE, 194) + message_str(SCRIPT_OBJ_DUDE, 198) + obj_name(arg0) + message_str(SCRIPT_OBJ_DUDE, 197));
        end
        else begin
            display_msg(dude_name + message_str(SCRIPT_OBJ_DUDE, 186) + message_str(SCRIPT_OBJ_DUDE, 194) + message_str(SCRIPT_OBJ_DUDE, 197));
        end
    end
    if ((get_critter_stat(arg0, STAT_max_hp) - get_critter_stat(arg0, STAT_current_hp)) >= 5) then begin
        if (obj_is_carrying_obj_pid(dude_obj, 103)) then begin
            LVar1 := 0;
            while (((get_critter_stat(arg0, STAT_max_hp) - get_critter_stat(arg0, STAT_current_hp)) >= 5) and obj_is_carrying_obj_pid(dude_obj, 103)) do begin
                call delete_item(103);
                critter_heal(arg0, 5);
                LVar1 := LVar1 + 1;
            end
            if (LVar1 > 1) then begin
                display_msg(dude_name + message_str(SCRIPT_OBJ_DUDE, 199) + LVar1 + message_str(SCRIPT_OBJ_DUDE, 195) + message_str(SCRIPT_OBJ_DUDE, 200) + message_str(SCRIPT_OBJ_DUDE, 198) + obj_name(arg0) + message_str(SCRIPT_OBJ_DUDE, 197));
            end
            else begin
                display_msg(dude_name + message_str(SCRIPT_OBJ_DUDE, 199) + LVar1 + message_str(SCRIPT_OBJ_DUDE, 195) + message_str(SCRIPT_OBJ_DUDE, 198) + obj_name(arg0) + message_str(SCRIPT_OBJ_DUDE, 197));
            end
        end
        else begin
            display_msg(dude_name + message_str(SCRIPT_OBJ_DUDE, 186) + message_str(SCRIPT_OBJ_DUDE, 195) + message_str(SCRIPT_OBJ_DUDE, 200) + message_str(SCRIPT_OBJ_DUDE, 197));
        end
    end
    if ((get_critter_stat(arg0, STAT_max_hp) - get_critter_stat(arg0, STAT_current_hp)) >= 2) then begin
        if (obj_is_carrying_obj_pid(dude_obj, 805)) then begin
            LVar1 := 0;
            while (((get_critter_stat(arg0, STAT_max_hp) - get_critter_stat(arg0, STAT_current_hp)) >= 2) and obj_is_carrying_obj_pid(dude_obj, 805)) do begin
                call delete_item(805);
                critter_heal(arg0, 2);
                LVar1 := LVar1 + 1;
            end
            display_msg(dude_name + message_str(SCRIPT_OBJ_DUDE, 199) + LVar1 + message_str(SCRIPT_OBJ_DUDE, 196) + message_str(SCRIPT_OBJ_DUDE, 198) + obj_name(arg0) + message_str(SCRIPT_OBJ_DUDE, 197));
        end
        else begin
            display_msg(dude_name + message_str(SCRIPT_OBJ_DUDE, 186) + message_str(SCRIPT_OBJ_DUDE, 196) + message_str(SCRIPT_OBJ_DUDE, 197));
        end
    end
    if ((get_poison(arg0) > 0) and (arg0 == dude_obj)) then begin
        if (obj_is_carrying_obj_pid(dude_obj, 49)) then begin
            LVar1 := 0;
            while ((get_poison(arg0) > 0) and obj_is_carrying_obj_pid(dude_obj, 49)) do begin
                call delete_item(49);
                poison(arg0, -250);
                LVar1 := LVar1 + 1;
            end
            display_msg(dude_name + message_str(SCRIPT_OBJ_DUDE, 199) + LVar1 + message_str(SCRIPT_OBJ_DUDE, 311) + message_str(SCRIPT_OBJ_DUDE, 198) + obj_name(arg0) + message_str(SCRIPT_OBJ_DUDE, 197));
        end
        else begin
            display_msg(dude_name + message_str(SCRIPT_OBJ_DUDE, 186) + message_str(SCRIPT_OBJ_DUDE, 311) + message_str(SCRIPT_OBJ_DUDE, 197));
        end
    end
    if (get_critter_stat(arg0, STAT_current_rad) > 0) then begin
        if (obj_is_carrying_obj_pid(dude_obj, 48)) then begin
            LVar1 := 0;
            while ((get_critter_stat(arg0, STAT_current_rad) > 0) and obj_is_carrying_obj_pid(dude_obj, 48)) do begin
                call delete_item(48);
                radiation_dec(arg0, 250);
                LVar1 := LVar1 + 1;
            end
            display_msg(dude_name + message_str(SCRIPT_OBJ_DUDE, 199) + LVar1 + message_str(SCRIPT_OBJ_DUDE, 312) + message_str(SCRIPT_OBJ_DUDE, 198) + obj_name(arg0) + message_str(SCRIPT_OBJ_DUDE, 197));
        end
        else begin
            display_msg(dude_name + message_str(SCRIPT_OBJ_DUDE, 186) + message_str(SCRIPT_OBJ_DUDE, 312) + message_str(SCRIPT_OBJ_DUDE, 197));
        end
    end
end

procedure delete_item(variable arg0)
begin
    variable LVar1 := 0;
    LVar1 := obj_carrying_pid_obj(dude_obj, arg0);
    rm_obj_from_inven(dude_obj, LVar1);
    if (tile_contains_obj_pid(1, 0, arg0)) then begin
        LVar1 := tile_contains_pid_obj(1, 0, arg0);
        destroy_object(LVar1);
    end
end

procedure Node001
begin
    gsay_reply(SCRIPT_OBJ_DUDE, 180);
    giq_option(1, SCRIPT_OBJ_DUDE, 182, Node003, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 183, Node004, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 202, Node005, NEUTRAL_REACTION);
    if (get_sfall_global_int("nirran_5") == 1) then begin
        giq_option(1, SCRIPT_OBJ_DUDE, 335, Node231, NEUTRAL_REACTION);
        giq_option(1, SCRIPT_OBJ_DUDE, 330, Node227, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_CAR_PAINT_JOB) == 1) and (get_sfall_global_int("nirran_0") == 1)) then begin
        giq_option(1, SCRIPT_OBJ_DUDE, 223, Node006, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_CAR_PAINT_JOB) == 0) and (get_sfall_global_int("nirran_0") == 1)) then begin
        giq_option(1, SCRIPT_OBJ_DUDE, 224, Node007, NEUTRAL_REACTION);
    end
    if (get_sfall_global_int("nirran_2") == 1) then begin
        giq_option(1, SCRIPT_OBJ_DUDE, 225, Node008, NEUTRAL_REACTION);
    end
    if (get_sfall_global_int("nirran_3") == 1) then begin
        giq_option(1, SCRIPT_OBJ_DUDE, 240, Node018, NEUTRAL_REACTION);
    end
    if (party_member_obj(16777313) != 0) then begin
        if ((obj_is_carrying_obj_pid(dude_obj, 259) > 0) or (obj_is_carrying_obj_pid(dude_obj, 53) > 0) or (obj_is_carrying_obj_pid(dude_obj, 110) > 0) or (obj_is_carrying_obj_pid(dude_obj, 87) > 0) or (obj_is_carrying_obj_pid(dude_obj, 124) > 0) or (obj_is_carrying_obj_pid(dude_obj, 125) > 0) or (obj_is_carrying_obj_pid(dude_obj, 469) > 0) or (obj_is_carrying_obj_pid(dude_obj, 310) > 0) or (obj_is_carrying_obj_pid(dude_obj, 311) > 0)) then begin
            giq_option(1, SCRIPT_OBJ_DUDE, 297, Node151, NEUTRAL_REACTION);
        end
        if ((obj_is_carrying_obj_pid(party_member_obj(16777313), 259) > 0) or (obj_is_carrying_obj_pid(party_member_obj(16777313), 53) > 0) or (obj_is_carrying_obj_pid(party_member_obj(16777313), 110) > 0) or (obj_is_carrying_obj_pid(party_member_obj(16777313), 87) > 0) or (obj_is_carrying_obj_pid(party_member_obj(16777313), 124) > 0) or (obj_is_carrying_obj_pid(party_member_obj(16777313), 125) > 0) or (obj_is_carrying_obj_pid(party_member_obj(16777313), 469) > 0) or (obj_is_carrying_obj_pid(party_member_obj(16777313), 310) > 0) or (obj_is_carrying_obj_pid(party_member_obj(16777313), 311) > 0)) then begin
            giq_option(1, SCRIPT_OBJ_DUDE, 298, Node152, NEUTRAL_REACTION);
        end
    end
    if ((party_member_obj(16777313) != 0) and (party_member_obj(16777278) != 0) and (party_member_obj(16777305) != 0)) then begin
        if ((obj_is_carrying_obj_pid(dude_obj, 95) > 0) or (obj_is_carrying_obj_pid(dude_obj, 36) > 0) or (obj_is_carrying_obj_pid(dude_obj, 35) > 0) or (obj_is_carrying_obj_pid(dude_obj, 30) > 0) or (obj_is_carrying_obj_pid(dude_obj, 29) > 0)) then begin
            giq_option(1, SCRIPT_OBJ_DUDE, 341, Sort_Ammo, NEUTRAL_REACTION);
        end
    end
    if ((CUR_MAP_ARGARDEN) or (CUR_MAP_ABANDON3) or (CUR_MAP_KLATRAP) and (get_sfall_global_int("nirran_6") == 1) and Critters_All_Dead() and Herbs_On_Map()) then begin
        giq_option(1, SCRIPT_OBJ_DUDE, 332, Node229, NEUTRAL_REACTION);
    end
    giq_option(1, SCRIPT_OBJ_DUDE, 184, Node999, NEUTRAL_REACTION);
end

procedure Node003
begin
    call Node999();
    game_time_advance(24 * (60 * (60 * 10)));
    critter_heal(dude_obj, 7 * get_critter_stat(dude_obj, STAT_heal_rate));
    if (party_member_obj(16777376) != 0) then begin
        critter_heal(party_member_obj(16777376), 7 * get_critter_stat(party_member_obj(16777376), STAT_heal_rate));
    end
    if (party_member_obj(16777377) != 0) then begin
        critter_heal(party_member_obj(16777377), 7 * get_critter_stat(party_member_obj(16777377), STAT_heal_rate));
    end
    if (party_member_obj(16777305) != 0) then begin
        critter_heal(party_member_obj(16777305), 7 * get_critter_stat(party_member_obj(16777305), STAT_heal_rate));
    end
    if (party_member_obj(16777313) != 0) then begin
        critter_heal(party_member_obj(16777313), 7 * get_critter_stat(party_member_obj(16777313), STAT_heal_rate));
    end
    if (party_member_obj(16777323) != 0) then begin
        critter_heal(party_member_obj(16777323), 7 * get_critter_stat(party_member_obj(16777323), STAT_heal_rate));
    end
    if (party_member_obj(16777352) != 0) then begin
        critter_heal(party_member_obj(16777352), 7 * get_critter_stat(party_member_obj(16777352), STAT_heal_rate));
    end
    if (party_member_obj(16777859) != 0) then begin
        critter_heal(party_member_obj(16777859), 7 * get_critter_stat(party_member_obj(16777859), STAT_heal_rate));
    end
    if (party_member_obj(16777368) != 0) then begin
        critter_heal(party_member_obj(16777368), 7 * get_critter_stat(party_member_obj(16777368), STAT_heal_rate));
    end
    if (party_member_obj(16777379) != 0) then begin
        critter_heal(party_member_obj(16777379), 7 * get_critter_stat(party_member_obj(16777379), STAT_heal_rate));
    end
    if (party_member_obj(16777380) != 0) then begin
        critter_heal(party_member_obj(16777380), 7 * get_critter_stat(party_member_obj(16777380), STAT_heal_rate));
    end
    if (party_member_obj(16777381) != 0) then begin
        critter_heal(party_member_obj(16777381), 7 * get_critter_stat(party_member_obj(16777381), STAT_heal_rate));
    end
    if (party_member_obj(16777295) != 0) then begin
        critter_heal(party_member_obj(16777295), 7 * get_critter_stat(party_member_obj(16777295), STAT_heal_rate));
    end
    if (party_member_obj(16777278) != 0) then begin
        critter_heal(party_member_obj(16777278), 7 * get_critter_stat(party_member_obj(16777278), STAT_heal_rate));
    end
    if (party_member_obj(16777407) != 0) then begin
        critter_heal(party_member_obj(16777407), 7 * get_critter_stat(party_member_obj(16777407), STAT_heal_rate));
    end
    if (party_member_obj(16777411) != 0) then begin
        critter_heal(party_member_obj(16777411), 7 * get_critter_stat(party_member_obj(16777411), STAT_heal_rate));
    end
    if (party_member_obj(16777412) != 0) then begin
        critter_heal(party_member_obj(16777412), 7 * get_critter_stat(party_member_obj(16777412), STAT_heal_rate));
    end
    if (party_member_obj(16777413) != 0) then begin
        critter_heal(party_member_obj(16777413), 7 * get_critter_stat(party_member_obj(16777413), STAT_heal_rate));
    end
    if (party_member_obj(16777481) != 0) then begin
        critter_heal(party_member_obj(16777481), 7 * get_critter_stat(party_member_obj(16777481), STAT_heal_rate));
    end
    if (party_member_obj(16777558) != 0) then begin
        critter_heal(party_member_obj(16777558), 7 * get_critter_stat(party_member_obj(16777558), STAT_heal_rate));
    end
    if (party_member_obj(16777597) != 0) then begin
        critter_heal(party_member_obj(16777597), 7 * get_critter_stat(party_member_obj(16777597), STAT_heal_rate));
    end
    if (party_member_obj(16777596) != 0) then begin
        critter_heal(party_member_obj(16777596), 7 * get_critter_stat(party_member_obj(16777596), STAT_heal_rate));
    end
    if (party_member_obj(16777595) != 0) then begin
        critter_heal(party_member_obj(16777595), 7 * get_critter_stat(party_member_obj(16777595), STAT_heal_rate));
    end
    if (party_member_obj(16777600) != 0) then begin
        critter_heal(party_member_obj(16777600), 7 * get_critter_stat(party_member_obj(16777600), STAT_heal_rate));
    end
    if (party_member_obj(16777687) != 0) then begin
        critter_heal(party_member_obj(16777687), 7 * get_critter_stat(party_member_obj(16777687), STAT_heal_rate));
    end
    if (party_member_obj(16777785) != 0) then begin
        critter_heal(party_member_obj(16777785), 7 * get_critter_stat(party_member_obj(16777785), STAT_heal_rate));
    end
    if (party_member_obj(16777749) != 0) then begin
        critter_heal(party_member_obj(16777749), 7 * get_critter_stat(party_member_obj(16777749), STAT_heal_rate));
    end
    if (party_member_obj(16777748) != 0) then begin
        critter_heal(party_member_obj(16777748), 7 * get_critter_stat(party_member_obj(16777748), STAT_heal_rate));
    end
    if (party_member_obj(16777747) != 0) then begin
        critter_heal(party_member_obj(16777747), 7 * get_critter_stat(party_member_obj(16777747), STAT_heal_rate));
    end
    if (party_member_obj(16777766) != 0) then begin
        critter_heal(party_member_obj(16777766), 7 * get_critter_stat(party_member_obj(16777766), STAT_heal_rate));
    end
    if (party_member_obj(16777762) != 0) then begin
        critter_heal(party_member_obj(16777762), 7 * get_critter_stat(party_member_obj(16777762), STAT_heal_rate));
    end
end

procedure Node004
begin
    call Node999();
    game_time_advance(7 * (24 * (60 * (60 * 10))));
    critter_heal(dude_obj, 49 * get_critter_stat(dude_obj, STAT_heal_rate));
    if (party_member_obj(16777376) != 0) then begin
        critter_heal(party_member_obj(16777376), 49 * get_critter_stat(party_member_obj(16777376), STAT_heal_rate));
    end
    if (party_member_obj(16777377) != 0) then begin
        critter_heal(party_member_obj(16777377), 49 * get_critter_stat(party_member_obj(16777377), STAT_heal_rate));
    end
    if (party_member_obj(16777305) != 0) then begin
        critter_heal(party_member_obj(16777305), 49 * get_critter_stat(party_member_obj(16777305), STAT_heal_rate));
    end
    if (party_member_obj(16777313) != 0) then begin
        critter_heal(party_member_obj(16777313), 49 * get_critter_stat(party_member_obj(16777313), STAT_heal_rate));
    end
    if (party_member_obj(16777323) != 0) then begin
        critter_heal(party_member_obj(16777323), 49 * get_critter_stat(party_member_obj(16777323), STAT_heal_rate));
    end
    if (party_member_obj(16777352) != 0) then begin
        critter_heal(party_member_obj(16777352), 49 * get_critter_stat(party_member_obj(16777352), STAT_heal_rate));
    end
    if (party_member_obj(16777859) != 0) then begin
        critter_heal(party_member_obj(16777859), 49 * get_critter_stat(party_member_obj(16777859), STAT_heal_rate));
    end
    if (party_member_obj(16777368) != 0) then begin
        critter_heal(party_member_obj(16777368), 49 * get_critter_stat(party_member_obj(16777368), STAT_heal_rate));
    end
    if (party_member_obj(16777379) != 0) then begin
        critter_heal(party_member_obj(16777379), 49 * get_critter_stat(party_member_obj(16777379), STAT_heal_rate));
    end
    if (party_member_obj(16777380) != 0) then begin
        critter_heal(party_member_obj(16777380), 49 * get_critter_stat(party_member_obj(16777380), STAT_heal_rate));
    end
    if (party_member_obj(16777381) != 0) then begin
        critter_heal(party_member_obj(16777381), 49 * get_critter_stat(party_member_obj(16777381), STAT_heal_rate));
    end
    if (party_member_obj(16777295) != 0) then begin
        critter_heal(party_member_obj(16777295), 49 * get_critter_stat(party_member_obj(16777295), STAT_heal_rate));
    end
    if (party_member_obj(16777278) != 0) then begin
        critter_heal(party_member_obj(16777278), 49 * get_critter_stat(party_member_obj(16777278), STAT_heal_rate));
    end
    if (party_member_obj(16777407) != 0) then begin
        critter_heal(party_member_obj(16777407), 49 * get_critter_stat(party_member_obj(16777407), STAT_heal_rate));
    end
    if (party_member_obj(16777411) != 0) then begin
        critter_heal(party_member_obj(16777411), 49 * get_critter_stat(party_member_obj(16777411), STAT_heal_rate));
    end
    if (party_member_obj(16777412) != 0) then begin
        critter_heal(party_member_obj(16777412), 49 * get_critter_stat(party_member_obj(16777412), STAT_heal_rate));
    end
    if (party_member_obj(16777413) != 0) then begin
        critter_heal(party_member_obj(16777413), 49 * get_critter_stat(party_member_obj(16777413), STAT_heal_rate));
    end
    if (party_member_obj(16777481) != 0) then begin
        critter_heal(party_member_obj(16777481), 49 * get_critter_stat(party_member_obj(16777481), STAT_heal_rate));
    end
    if (party_member_obj(16777558) != 0) then begin
        critter_heal(party_member_obj(16777558), 49 * get_critter_stat(party_member_obj(16777558), STAT_heal_rate));
    end
    if (party_member_obj(16777597) != 0) then begin
        critter_heal(party_member_obj(16777597), 49 * get_critter_stat(party_member_obj(16777597), STAT_heal_rate));
    end
    if (party_member_obj(16777596) != 0) then begin
        critter_heal(party_member_obj(16777596), 49 * get_critter_stat(party_member_obj(16777596), STAT_heal_rate));
    end
    if (party_member_obj(16777595) != 0) then begin
        critter_heal(party_member_obj(16777595), 49 * get_critter_stat(party_member_obj(16777595), STAT_heal_rate));
    end
    if (party_member_obj(16777600) != 0) then begin
        critter_heal(party_member_obj(16777600), 49 * get_critter_stat(party_member_obj(16777600), STAT_heal_rate));
    end
    if (party_member_obj(16777687) != 0) then begin
        critter_heal(party_member_obj(16777687), 49 * get_critter_stat(party_member_obj(16777687), STAT_heal_rate));
    end
    if (party_member_obj(16777785) != 0) then begin
        critter_heal(party_member_obj(16777785), 49 * get_critter_stat(party_member_obj(16777785), STAT_heal_rate));
    end
    if (party_member_obj(16777749) != 0) then begin
        critter_heal(party_member_obj(16777749), 49 * get_critter_stat(party_member_obj(16777749), STAT_heal_rate));
    end
    if (party_member_obj(16777748) != 0) then begin
        critter_heal(party_member_obj(16777748), 49 * get_critter_stat(party_member_obj(16777748), STAT_heal_rate));
    end
    if (party_member_obj(16777747) != 0) then begin
        critter_heal(party_member_obj(16777747), 49 * get_critter_stat(party_member_obj(16777747), STAT_heal_rate));
    end
    if (party_member_obj(16777766) != 0) then begin
        critter_heal(party_member_obj(16777766), 49 * get_critter_stat(party_member_obj(16777766), STAT_heal_rate));
    end
    if (party_member_obj(16777762) != 0) then begin
        critter_heal(party_member_obj(16777762), 49 * get_critter_stat(party_member_obj(16777762), STAT_heal_rate));
    end
end

procedure Node005
begin
    call Node999();
    if (party_member_obj(16777376) != 0) then begin
        if ((obj_item_subtype(critter_inven_obj(party_member_obj(16777376), INVEN_TYPE_RIGHT_HAND)) == 3) or (obj_item_subtype(critter_inven_obj(party_member_obj(16777376), INVEN_TYPE_LEFT_HAND)) == 3)) then begin
            inven_unwield(party_member_obj(16777376));
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if ((obj_item_subtype(critter_inven_obj(party_member_obj(16777377), INVEN_TYPE_RIGHT_HAND)) == 3) or (obj_item_subtype(critter_inven_obj(party_member_obj(16777377), INVEN_TYPE_LEFT_HAND)) == 3)) then begin
            inven_unwield(party_member_obj(16777377));
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if ((obj_item_subtype(critter_inven_obj(party_member_obj(16777305), INVEN_TYPE_RIGHT_HAND)) == 3) or (obj_item_subtype(critter_inven_obj(party_member_obj(16777305), INVEN_TYPE_LEFT_HAND)) == 3)) then begin
            inven_unwield(party_member_obj(16777305));
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if ((obj_item_subtype(critter_inven_obj(party_member_obj(16777313), INVEN_TYPE_RIGHT_HAND)) == 3) or (obj_item_subtype(critter_inven_obj(party_member_obj(16777313), INVEN_TYPE_LEFT_HAND)) == 3)) then begin
            inven_unwield(party_member_obj(16777313));
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if ((obj_item_subtype(critter_inven_obj(party_member_obj(16777323), INVEN_TYPE_RIGHT_HAND)) == 3) or (obj_item_subtype(critter_inven_obj(party_member_obj(16777323), INVEN_TYPE_LEFT_HAND)) == 3)) then begin
            inven_unwield(party_member_obj(16777323));
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if ((obj_item_subtype(critter_inven_obj(party_member_obj(16777352), INVEN_TYPE_RIGHT_HAND)) == 3) or (obj_item_subtype(critter_inven_obj(party_member_obj(16777352), INVEN_TYPE_LEFT_HAND)) == 3)) then begin
            inven_unwield(party_member_obj(16777352));
        end
    end
    if (party_member_obj(16777859) != 0) then begin
        if ((obj_item_subtype(critter_inven_obj(party_member_obj(16777859), INVEN_TYPE_RIGHT_HAND)) == 3) or (obj_item_subtype(critter_inven_obj(party_member_obj(16777859), INVEN_TYPE_LEFT_HAND)) == 3)) then begin
            inven_unwield(party_member_obj(16777859));
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if ((obj_item_subtype(critter_inven_obj(party_member_obj(16777368), INVEN_TYPE_RIGHT_HAND)) == 3) or (obj_item_subtype(critter_inven_obj(party_member_obj(16777368), INVEN_TYPE_LEFT_HAND)) == 3)) then begin
            inven_unwield(party_member_obj(16777368));
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if ((obj_item_subtype(critter_inven_obj(party_member_obj(16777379), INVEN_TYPE_RIGHT_HAND)) == 3) or (obj_item_subtype(critter_inven_obj(party_member_obj(16777379), INVEN_TYPE_LEFT_HAND)) == 3)) then begin
            inven_unwield(party_member_obj(16777379));
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if ((obj_item_subtype(critter_inven_obj(party_member_obj(16777380), INVEN_TYPE_RIGHT_HAND)) == 3) or (obj_item_subtype(critter_inven_obj(party_member_obj(16777380), INVEN_TYPE_LEFT_HAND)) == 3)) then begin
            inven_unwield(party_member_obj(16777380));
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if ((obj_item_subtype(critter_inven_obj(party_member_obj(16777381), INVEN_TYPE_RIGHT_HAND)) == 3) or (obj_item_subtype(critter_inven_obj(party_member_obj(16777381), INVEN_TYPE_LEFT_HAND)) == 3)) then begin
            inven_unwield(party_member_obj(16777381));
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if ((obj_item_subtype(critter_inven_obj(party_member_obj(16777295), INVEN_TYPE_RIGHT_HAND)) == 3) or (obj_item_subtype(critter_inven_obj(party_member_obj(16777295), INVEN_TYPE_LEFT_HAND)) == 3)) then begin
            inven_unwield(party_member_obj(16777295));
        end
    end
    if (party_member_obj(16777278) != 0) then begin
        if ((obj_item_subtype(critter_inven_obj(party_member_obj(16777278), INVEN_TYPE_RIGHT_HAND)) == 3) or (obj_item_subtype(critter_inven_obj(party_member_obj(16777278), INVEN_TYPE_LEFT_HAND)) == 3)) then begin
            inven_unwield(party_member_obj(16777278));
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if ((obj_item_subtype(critter_inven_obj(party_member_obj(16777407), INVEN_TYPE_RIGHT_HAND)) == 3) or (obj_item_subtype(critter_inven_obj(party_member_obj(16777407), INVEN_TYPE_LEFT_HAND)) == 3)) then begin
            inven_unwield(party_member_obj(16777407));
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if ((obj_item_subtype(critter_inven_obj(party_member_obj(16777411), INVEN_TYPE_RIGHT_HAND)) == 3) or (obj_item_subtype(critter_inven_obj(party_member_obj(16777411), INVEN_TYPE_LEFT_HAND)) == 3)) then begin
            inven_unwield(party_member_obj(16777411));
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if ((obj_item_subtype(critter_inven_obj(party_member_obj(16777412), INVEN_TYPE_RIGHT_HAND)) == 3) or (obj_item_subtype(critter_inven_obj(party_member_obj(16777412), INVEN_TYPE_LEFT_HAND)) == 3)) then begin
            inven_unwield(party_member_obj(16777412));
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if ((obj_item_subtype(critter_inven_obj(party_member_obj(16777413), INVEN_TYPE_RIGHT_HAND)) == 3) or (obj_item_subtype(critter_inven_obj(party_member_obj(16777413), INVEN_TYPE_LEFT_HAND)) == 3)) then begin
            inven_unwield(party_member_obj(16777413));
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if ((obj_item_subtype(critter_inven_obj(party_member_obj(16777481), INVEN_TYPE_RIGHT_HAND)) == 3) or (obj_item_subtype(critter_inven_obj(party_member_obj(16777481), INVEN_TYPE_LEFT_HAND)) == 3)) then begin
            inven_unwield(party_member_obj(16777481));
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if ((obj_item_subtype(critter_inven_obj(party_member_obj(16777558), INVEN_TYPE_RIGHT_HAND)) == 3) or (obj_item_subtype(critter_inven_obj(party_member_obj(16777558), INVEN_TYPE_LEFT_HAND)) == 3)) then begin
            inven_unwield(party_member_obj(16777558));
        end
    end
    if (party_member_obj(16777597) != 0) then begin
        if ((obj_item_subtype(critter_inven_obj(party_member_obj(16777597), INVEN_TYPE_RIGHT_HAND)) == 3) or (obj_item_subtype(critter_inven_obj(party_member_obj(16777597), INVEN_TYPE_LEFT_HAND)) == 3)) then begin
            inven_unwield(party_member_obj(16777597));
        end
    end
    if (party_member_obj(16777596) != 0) then begin
        if ((obj_item_subtype(critter_inven_obj(party_member_obj(16777596), INVEN_TYPE_RIGHT_HAND)) == 3) or (obj_item_subtype(critter_inven_obj(party_member_obj(16777596), INVEN_TYPE_LEFT_HAND)) == 3)) then begin
            inven_unwield(party_member_obj(16777596));
        end
    end
    if (party_member_obj(16777595) != 0) then begin
        if ((obj_item_subtype(critter_inven_obj(party_member_obj(16777595), INVEN_TYPE_RIGHT_HAND)) == 3) or (obj_item_subtype(critter_inven_obj(party_member_obj(16777595), INVEN_TYPE_LEFT_HAND)) == 3)) then begin
            inven_unwield(party_member_obj(16777595));
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if ((obj_item_subtype(critter_inven_obj(party_member_obj(16777600), INVEN_TYPE_RIGHT_HAND)) == 3) or (obj_item_subtype(critter_inven_obj(party_member_obj(16777600), INVEN_TYPE_LEFT_HAND)) == 3)) then begin
            inven_unwield(party_member_obj(16777600));
        end
    end
    if (party_member_obj(16777687) != 0) then begin
        if ((obj_item_subtype(critter_inven_obj(party_member_obj(16777687), INVEN_TYPE_RIGHT_HAND)) == 3) or (obj_item_subtype(critter_inven_obj(party_member_obj(16777687), INVEN_TYPE_LEFT_HAND)) == 3)) then begin
            inven_unwield(party_member_obj(16777687));
        end
    end
    if (party_member_obj(16777785) != 0) then begin
        if ((obj_item_subtype(critter_inven_obj(party_member_obj(16777785), INVEN_TYPE_RIGHT_HAND)) == 3) or (obj_item_subtype(critter_inven_obj(party_member_obj(16777785), INVEN_TYPE_LEFT_HAND)) == 3)) then begin
            inven_unwield(party_member_obj(16777785));
        end
    end
    if (party_member_obj(16777749) != 0) then begin
        if ((obj_item_subtype(critter_inven_obj(party_member_obj(16777749), INVEN_TYPE_RIGHT_HAND)) == 3) or (obj_item_subtype(critter_inven_obj(party_member_obj(16777749), INVEN_TYPE_LEFT_HAND)) == 3)) then begin
            inven_unwield(party_member_obj(16777749));
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if ((obj_item_subtype(critter_inven_obj(party_member_obj(16777748), INVEN_TYPE_RIGHT_HAND)) == 3) or (obj_item_subtype(critter_inven_obj(party_member_obj(16777748), INVEN_TYPE_LEFT_HAND)) == 3)) then begin
            inven_unwield(party_member_obj(16777748));
        end
    end
    if (party_member_obj(16777747) != 0) then begin
        if ((obj_item_subtype(critter_inven_obj(party_member_obj(16777747), INVEN_TYPE_RIGHT_HAND)) == 3) or (obj_item_subtype(critter_inven_obj(party_member_obj(16777747), INVEN_TYPE_LEFT_HAND)) == 3)) then begin
            inven_unwield(party_member_obj(16777747));
        end
    end
    if (party_member_obj(16777766) != 0) then begin
        if ((obj_item_subtype(critter_inven_obj(party_member_obj(16777766), INVEN_TYPE_RIGHT_HAND)) == 3) or (obj_item_subtype(critter_inven_obj(party_member_obj(16777766), INVEN_TYPE_LEFT_HAND)) == 3)) then begin
            inven_unwield(party_member_obj(16777766));
        end
    end
    if (party_member_obj(16777762) != 0) then begin
        if ((obj_item_subtype(critter_inven_obj(party_member_obj(16777762), INVEN_TYPE_RIGHT_HAND)) == 3) or (obj_item_subtype(critter_inven_obj(party_member_obj(16777762), INVEN_TYPE_LEFT_HAND)) == 3)) then begin
            inven_unwield(party_member_obj(16777762));
        end
    end
end

procedure Node006
begin
    call Node999();
    set_global_var(GVAR_CAR_PAINT_JOB, 0);
end

procedure Node007
begin
    call Node999();
    set_global_var(GVAR_CAR_PAINT_JOB, 1);
end

procedure Node008
begin
    gsay_reply(SCRIPT_OBJ_DUDE, 180);
    if (global_var(GVAR_CAR_CURRENT_ELEVATION) != 0) then begin
        giq_option(1, SCRIPT_OBJ_DUDE, 226, Node009, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_CAR_CURRENT_ELEVATION) != 1) then begin
        giq_option(1, SCRIPT_OBJ_DUDE, 227, Node010, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_CAR_CURRENT_ELEVATION) != 2) then begin
        giq_option(1, SCRIPT_OBJ_DUDE, 228, Node011, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_CAR_CURRENT_ELEVATION) != 3) then begin
        giq_option(1, SCRIPT_OBJ_DUDE, 229, Node012, NEUTRAL_REACTION);
    end
    giq_option(1, SCRIPT_OBJ_DUDE, 233, Node017, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node009
begin
    call Node999();
    set_global_var(GVAR_CAR_CURRENT_ELEVATION, 0);
end

procedure Node010
begin
    call Node999();
    set_global_var(GVAR_CAR_CURRENT_ELEVATION, 1);
end

procedure Node011
begin
    call Node999();
    set_global_var(GVAR_CAR_CURRENT_ELEVATION, 2);
end

procedure Node012
begin
    call Node999();
    set_global_var(GVAR_CAR_CURRENT_ELEVATION, 3);
end

procedure Node013
begin
    call Node999();
    set_global_var(GVAR_CAR_CURRENT_ELEVATION, 4);
end

procedure Node014
begin
    call Node999();
    set_global_var(GVAR_CAR_CURRENT_ELEVATION, 5);
end

procedure Node015
begin
    call Node999();
    set_global_var(GVAR_CAR_CURRENT_ELEVATION, 6);
end

procedure Node017
begin
    gsay_reply(SCRIPT_OBJ_DUDE, 180);
    if (global_var(GVAR_CAR_CURRENT_ELEVATION) != 4) then begin
        giq_option(1, SCRIPT_OBJ_DUDE, 230, Node013, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_CAR_CURRENT_ELEVATION) != 5) then begin
        giq_option(1, SCRIPT_OBJ_DUDE, 231, Node014, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_CAR_CURRENT_ELEVATION) != 6) then begin
        giq_option(1, SCRIPT_OBJ_DUDE, 232, Node015, NEUTRAL_REACTION);
    end
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node008, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node018
begin
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 257) + " " + get_sfall_global_int(2161) + "                             " + message_str(SCRIPT_OBJ_DUDE, 258) + " " + get_sfall_global_int(2162) + "                          " + message_str(SCRIPT_OBJ_DUDE, 284) + " " + get_sfall_global_int(2163) + "                             " + message_str(SCRIPT_OBJ_DUDE, 259) + " " + get_sfall_global_int(2164) + "                             " + message_str(SCRIPT_OBJ_DUDE, 260) + " " + get_sfall_global_int(2165) + "                          " + message_str(SCRIPT_OBJ_DUDE, 290) + " " + get_sfall_global_int(2166) + "                          " + message_str(SCRIPT_OBJ_DUDE, 261) + " " + get_sfall_global_int(2167) + "                        " + message_str(SCRIPT_OBJ_DUDE, 262) + " " + get_sfall_global_int(2168) + "                    " + message_str(SCRIPT_OBJ_DUDE, 291) + " " + get_sfall_global_int(2169) + "                    " + message_str(SCRIPT_OBJ_DUDE, 263) + " " + get_sfall_global_int(2170) + "                         " + message_str(SCRIPT_OBJ_DUDE, 264) + " " + get_sfall_global_int(2171) + "                     " + message_str(SCRIPT_OBJ_DUDE, 292) + " " + get_sfall_global_int(2172) + "                     " + message_str(SCRIPT_OBJ_DUDE, 265) + " " + get_sfall_global_int(2173) + "                            " + message_str(SCRIPT_OBJ_DUDE, 266) + " " + get_sfall_global_int(2174) + "                         " + message_str(SCRIPT_OBJ_DUDE, 293) + " " + get_sfall_global_int(2175) + "                         " + message_str(SCRIPT_OBJ_DUDE, 267) + " " + get_sfall_global_int(2176) + "                          " + message_str(SCRIPT_OBJ_DUDE, 268) + " " + get_sfall_global_int(2177) + "                     " + message_str(SCRIPT_OBJ_DUDE, 294) + " " + get_sfall_global_int(2178) + "                            " + message_str(SCRIPT_OBJ_DUDE, 269) + " " + get_sfall_global_int(2179) + "                              " + message_str(SCRIPT_OBJ_DUDE, 270) + " " + get_sfall_global_int(2180) + "                           " + message_str(SCRIPT_OBJ_DUDE, 295) + " " + get_sfall_global_int(2181) + "                           " + message_str(SCRIPT_OBJ_DUDE, 271) + " " + get_sfall_global_int(2182) + "                           " + message_str(SCRIPT_OBJ_DUDE, 296) + " " + get_sfall_global_int(2183) + "                           " + message_str(SCRIPT_OBJ_DUDE, 302) + " " + get_sfall_global_int(2184) + "                    " + message_str(SCRIPT_OBJ_DUDE, 303) + " " + get_sfall_global_int(2185) + "                      " + message_str(SCRIPT_OBJ_DUDE, 304) + " " + get_sfall_global_int(2186) + "                      " + message_str(SCRIPT_OBJ_DUDE, 306) + " " + get_sfall_global_int(2187) + "                           " + message_str(SCRIPT_OBJ_DUDE, 307) + " " + get_sfall_global_int(2188) + "                      " + message_str(SCRIPT_OBJ_DUDE, 308) + " " + get_sfall_global_int(2189) + "                             " + message_str(SCRIPT_OBJ_DUDE, 316) + " " + get_sfall_global_int(4259) + "                              " + message_str(SCRIPT_OBJ_DUDE, 317) + " " + get_sfall_global_int(4260) + "                  " + message_str(SCRIPT_OBJ_DUDE, 318) + " " + get_sfall_global_int(4261) + "                      " + message_str(SCRIPT_OBJ_DUDE, 321) + " " + get_sfall_global_int(4297) + "                       " + message_str(SCRIPT_OBJ_DUDE, 322) + " " + get_sfall_global_int(4298) + "                " + message_str(SCRIPT_OBJ_DUDE, 323) + " " + get_sfall_global_int(4299));
    giq_option(1, SCRIPT_OBJ_DUDE, 242, Node019, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 243, Node020, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 244, Node021, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 245, Node022, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 246, Node023, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 283, Node109, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 233, Node170, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node019
begin
    gsay_reply(SCRIPT_OBJ_DUDE, 249);
    giq_option(1, SCRIPT_OBJ_DUDE, 233, Node027, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 283, Node109, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node020
begin
    gsay_reply(SCRIPT_OBJ_DUDE, 250);
    giq_option(1, SCRIPT_OBJ_DUDE, 233, Node028, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 283, Node109, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node021
begin
    gsay_reply(SCRIPT_OBJ_DUDE, 251);
    giq_option(1, SCRIPT_OBJ_DUDE, 233, Node029, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 283, Node109, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node022
begin
    gsay_reply(SCRIPT_OBJ_DUDE, 252);
    giq_option(1, SCRIPT_OBJ_DUDE, 233, Node030, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 283, Node109, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node023
begin
    gsay_reply(SCRIPT_OBJ_DUDE, 253);
    giq_option(1, SCRIPT_OBJ_DUDE, 233, Node031, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 283, Node109, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node024
begin
    gsay_reply(SCRIPT_OBJ_DUDE, 254);
    giq_option(1, SCRIPT_OBJ_DUDE, 233, Node032, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 283, Node109, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node025
begin
    gsay_reply(SCRIPT_OBJ_DUDE, 255);
    giq_option(1, SCRIPT_OBJ_DUDE, 233, Node033, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 283, Node109, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node026
begin
    gsay_reply(SCRIPT_OBJ_DUDE, 256);
    giq_option(1, SCRIPT_OBJ_DUDE, 233, Node138, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 283, Node109, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node027
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 257) + " " + get_sfall_global_int(2161) + "                             " + message_str(SCRIPT_OBJ_DUDE, 258) + " " + get_sfall_global_int(2162) + "                          " + message_str(SCRIPT_OBJ_DUDE, 284) + " " + get_sfall_global_int(2163) + "                                 " + get_sfall_global_int(2190) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 272, Node039, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 273, Node040, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 285, Node144, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node028
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 259) + " " + get_sfall_global_int(2164) + "                             " + message_str(SCRIPT_OBJ_DUDE, 260) + " " + get_sfall_global_int(2165) + "                         " + message_str(SCRIPT_OBJ_DUDE, 290) + " " + get_sfall_global_int(2166) + "                                   " + get_sfall_global_int(2191) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 272, Node099, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 273, Node100, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 285, Node145, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node029
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 261) + " " + get_sfall_global_int(2167) + "                          " + message_str(SCRIPT_OBJ_DUDE, 262) + " " + get_sfall_global_int(2168) + "                    " + message_str(SCRIPT_OBJ_DUDE, 291) + " " + get_sfall_global_int(2169) + "                           " + get_sfall_global_int(2192) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 272, Node049, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 273, Node050, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 285, Node146, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node030
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 263) + " " + get_sfall_global_int(2170) + "                           " + message_str(SCRIPT_OBJ_DUDE, 264) + " " + get_sfall_global_int(2171) + "                     " + message_str(SCRIPT_OBJ_DUDE, 292) + " " + get_sfall_global_int(2172) + "                            " + get_sfall_global_int(2193) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 272, Node059, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 273, Node060, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 285, Node147, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node031
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 265) + " " + get_sfall_global_int(2173) + "                               " + message_str(SCRIPT_OBJ_DUDE, 266) + " " + get_sfall_global_int(2174) + "                          " + message_str(SCRIPT_OBJ_DUDE, 293) + " " + get_sfall_global_int(2175) + "                                 " + get_sfall_global_int(2194) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 272, Node069, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 273, Node070, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 285, Node148, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node032
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 267) + " " + get_sfall_global_int(2176) + "                               " + message_str(SCRIPT_OBJ_DUDE, 268) + " " + get_sfall_global_int(2177) + "                          " + message_str(SCRIPT_OBJ_DUDE, 294) + " " + get_sfall_global_int(2178) + "                                 " + get_sfall_global_int(2195) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 272, Node079, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 273, Node080, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 285, Node149, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node033
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 269) + " " + get_sfall_global_int(2179) + "                              " + message_str(SCRIPT_OBJ_DUDE, 270) + " " + get_sfall_global_int(2180) + "                         " + message_str(SCRIPT_OBJ_DUDE, 295) + " " + get_sfall_global_int(2181) + "                                " + get_sfall_global_int(2196) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 272, Node089, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 273, Node090, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 285, Node150, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node034
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 271) + " " + get_sfall_global_int(2182) + "                                " + message_str(SCRIPT_OBJ_DUDE, 296) + " " + get_sfall_global_int(2183) + "                             " + get_sfall_global_int(2197) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node035, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node036, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node037, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node038, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node035
begin
    set_sfall_global(2182, get_sfall_global_int(2182) - 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 271) + " " + get_sfall_global_int(2182) + "                                " + message_str(SCRIPT_OBJ_DUDE, 296) + " " + get_sfall_global_int(2183) + "                             " + get_sfall_global_int(2197) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node035, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node036, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node037, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node038, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node036
begin
    set_sfall_global(2182, get_sfall_global_int(2182) - 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 271) + " " + get_sfall_global_int(2182) + "                                " + message_str(SCRIPT_OBJ_DUDE, 296) + " " + get_sfall_global_int(2183) + "                             " + get_sfall_global_int(2197) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node035, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node036, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node037, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node038, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node037
begin
    set_sfall_global(2182, get_sfall_global_int(2182) + 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 271) + " " + get_sfall_global_int(2182) + "                                " + message_str(SCRIPT_OBJ_DUDE, 296) + " " + get_sfall_global_int(2183) + "                             " + get_sfall_global_int(2197) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node035, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node036, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node037, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node038, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node038
begin
    set_sfall_global(2182, get_sfall_global_int(2182) + 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 271) + " " + get_sfall_global_int(2182) + "                                " + message_str(SCRIPT_OBJ_DUDE, 296) + " " + get_sfall_global_int(2183) + "                             " + get_sfall_global_int(2197) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node035, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node036, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node037, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node038, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node039
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 257) + " " + get_sfall_global_int(2161) + "                             " + message_str(SCRIPT_OBJ_DUDE, 258) + " " + get_sfall_global_int(2162) + "                          " + message_str(SCRIPT_OBJ_DUDE, 284) + " " + get_sfall_global_int(2163) + "                                 " + get_sfall_global_int(2190) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node041, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node042, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node043, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node044, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node040
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 257) + " " + get_sfall_global_int(2161) + "                             " + message_str(SCRIPT_OBJ_DUDE, 258) + " " + get_sfall_global_int(2162) + "                          " + message_str(SCRIPT_OBJ_DUDE, 284) + " " + get_sfall_global_int(2163) + "                                 " + get_sfall_global_int(2190) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node045, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node046, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node047, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node048, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node041
begin
    set_sfall_global(2161, get_sfall_global_int(2161) - 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 257) + " " + get_sfall_global_int(2161) + "                             " + message_str(SCRIPT_OBJ_DUDE, 258) + " " + get_sfall_global_int(2162) + "                          " + message_str(SCRIPT_OBJ_DUDE, 284) + " " + get_sfall_global_int(2163) + "                                 " + get_sfall_global_int(2190) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node041, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node042, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node043, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node044, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node042
begin
    set_sfall_global(2161, get_sfall_global_int(2161) - 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 257) + " " + get_sfall_global_int(2161) + "                             " + message_str(SCRIPT_OBJ_DUDE, 258) + " " + get_sfall_global_int(2162) + "                          " + message_str(SCRIPT_OBJ_DUDE, 284) + " " + get_sfall_global_int(2163) + "                                 " + get_sfall_global_int(2190) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node041, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node042, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node043, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node044, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node043
begin
    set_sfall_global(2161, get_sfall_global_int(2161) + 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 257) + " " + get_sfall_global_int(2161) + "                             " + message_str(SCRIPT_OBJ_DUDE, 258) + " " + get_sfall_global_int(2162) + "                          " + message_str(SCRIPT_OBJ_DUDE, 284) + " " + get_sfall_global_int(2163) + "                                 " + get_sfall_global_int(2190) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node041, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node042, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node043, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node044, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node044
begin
    set_sfall_global(2161, get_sfall_global_int(2161) + 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 257) + " " + get_sfall_global_int(2161) + "                             " + message_str(SCRIPT_OBJ_DUDE, 258) + " " + get_sfall_global_int(2162) + "                          " + message_str(SCRIPT_OBJ_DUDE, 284) + " " + get_sfall_global_int(2163) + "                                 " + get_sfall_global_int(2190) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node041, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node042, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node043, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node044, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node045
begin
    set_sfall_global(2162, get_sfall_global_int(2162) - 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 257) + " " + get_sfall_global_int(2161) + "                             " + message_str(SCRIPT_OBJ_DUDE, 258) + " " + get_sfall_global_int(2162) + "                          " + message_str(SCRIPT_OBJ_DUDE, 284) + " " + get_sfall_global_int(2163) + "                                 " + get_sfall_global_int(2190) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node045, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node046, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node047, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node048, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node046
begin
    set_sfall_global(2162, get_sfall_global_int(2162) - 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 257) + " " + get_sfall_global_int(2161) + "                             " + message_str(SCRIPT_OBJ_DUDE, 258) + " " + get_sfall_global_int(2162) + "                          " + message_str(SCRIPT_OBJ_DUDE, 284) + " " + get_sfall_global_int(2163) + "                                 " + get_sfall_global_int(2190) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node045, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node046, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node047, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node048, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node047
begin
    set_sfall_global(2162, get_sfall_global_int(2162) + 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 257) + " " + get_sfall_global_int(2161) + "                             " + message_str(SCRIPT_OBJ_DUDE, 258) + " " + get_sfall_global_int(2162) + "                          " + message_str(SCRIPT_OBJ_DUDE, 284) + " " + get_sfall_global_int(2163) + "                                 " + get_sfall_global_int(2190) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node045, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node046, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node047, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node048, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node048
begin
    set_sfall_global(2162, get_sfall_global_int(2162) + 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 257) + " " + get_sfall_global_int(2161) + "                             " + message_str(SCRIPT_OBJ_DUDE, 258) + " " + get_sfall_global_int(2162) + "                          " + message_str(SCRIPT_OBJ_DUDE, 284) + " " + get_sfall_global_int(2163) + "                                 " + get_sfall_global_int(2190) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node045, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node046, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node047, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node048, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node049
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 261) + " " + get_sfall_global_int(2167) + "                          " + message_str(SCRIPT_OBJ_DUDE, 262) + " " + get_sfall_global_int(2168) + "                    " + message_str(SCRIPT_OBJ_DUDE, 291) + " " + get_sfall_global_int(2169) + "                           " + get_sfall_global_int(2192) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node051, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node052, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node053, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node054, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node050
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 261) + " " + get_sfall_global_int(2167) + "                          " + message_str(SCRIPT_OBJ_DUDE, 262) + " " + get_sfall_global_int(2168) + "                    " + message_str(SCRIPT_OBJ_DUDE, 291) + " " + get_sfall_global_int(2169) + "                           " + get_sfall_global_int(2192) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node055, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node056, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node057, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node058, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node051
begin
    set_sfall_global(2167, get_sfall_global_int(2167) - 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 261) + " " + get_sfall_global_int(2167) + "                          " + message_str(SCRIPT_OBJ_DUDE, 262) + " " + get_sfall_global_int(2168) + "                    " + message_str(SCRIPT_OBJ_DUDE, 291) + " " + get_sfall_global_int(2169) + "                           " + get_sfall_global_int(2192) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node051, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node052, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node053, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node054, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node052
begin
    set_sfall_global(2167, get_sfall_global_int(2167) - 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 261) + " " + get_sfall_global_int(2167) + "                          " + message_str(SCRIPT_OBJ_DUDE, 262) + " " + get_sfall_global_int(2168) + "                    " + message_str(SCRIPT_OBJ_DUDE, 291) + " " + get_sfall_global_int(2169) + "                           " + get_sfall_global_int(2192) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node051, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node052, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node053, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node054, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node053
begin
    set_sfall_global(2167, get_sfall_global_int(2167) + 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 261) + " " + get_sfall_global_int(2167) + "                          " + message_str(SCRIPT_OBJ_DUDE, 262) + " " + get_sfall_global_int(2168) + "                    " + message_str(SCRIPT_OBJ_DUDE, 291) + " " + get_sfall_global_int(2169) + "                           " + get_sfall_global_int(2192) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node051, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node052, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node053, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node054, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node054
begin
    set_sfall_global(2167, get_sfall_global_int(2167) + 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 261) + " " + get_sfall_global_int(2167) + "                          " + message_str(SCRIPT_OBJ_DUDE, 262) + " " + get_sfall_global_int(2168) + "                    " + message_str(SCRIPT_OBJ_DUDE, 291) + " " + get_sfall_global_int(2169) + "                           " + get_sfall_global_int(2192) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node051, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node052, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node053, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node054, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node055
begin
    set_sfall_global(2168, get_sfall_global_int(2168) - 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 261) + " " + get_sfall_global_int(2167) + "                          " + message_str(SCRIPT_OBJ_DUDE, 262) + " " + get_sfall_global_int(2168) + "                    " + message_str(SCRIPT_OBJ_DUDE, 291) + " " + get_sfall_global_int(2169) + "                           " + get_sfall_global_int(2192) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node055, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node056, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node057, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node058, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node056
begin
    set_sfall_global(2168, get_sfall_global_int(2168) - 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 261) + " " + get_sfall_global_int(2167) + "                          " + message_str(SCRIPT_OBJ_DUDE, 262) + " " + get_sfall_global_int(2168) + "                    " + message_str(SCRIPT_OBJ_DUDE, 291) + " " + get_sfall_global_int(2169) + "                           " + get_sfall_global_int(2192) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node055, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node056, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node057, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node058, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node057
begin
    set_sfall_global(2168, get_sfall_global_int(2168) + 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 261) + " " + get_sfall_global_int(2167) + "                          " + message_str(SCRIPT_OBJ_DUDE, 262) + " " + get_sfall_global_int(2168) + "                    " + message_str(SCRIPT_OBJ_DUDE, 291) + " " + get_sfall_global_int(2169) + "                           " + get_sfall_global_int(2192) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node055, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node056, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node057, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node058, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node058
begin
    set_sfall_global(2168, get_sfall_global_int(2168) + 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 261) + " " + get_sfall_global_int(2167) + "                          " + message_str(SCRIPT_OBJ_DUDE, 262) + " " + get_sfall_global_int(2168) + "                    " + message_str(SCRIPT_OBJ_DUDE, 291) + " " + get_sfall_global_int(2169) + "                           " + get_sfall_global_int(2192) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node055, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node056, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node057, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node058, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node059
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 263) + " " + get_sfall_global_int(2170) + "                           " + message_str(SCRIPT_OBJ_DUDE, 264) + " " + get_sfall_global_int(2171) + "                     " + message_str(SCRIPT_OBJ_DUDE, 292) + " " + get_sfall_global_int(2172) + "                            " + get_sfall_global_int(2193) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node061, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node062, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node063, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node064, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node060
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 263) + " " + get_sfall_global_int(2170) + "                           " + message_str(SCRIPT_OBJ_DUDE, 264) + " " + get_sfall_global_int(2171) + "                     " + message_str(SCRIPT_OBJ_DUDE, 292) + " " + get_sfall_global_int(2172) + "                            " + get_sfall_global_int(2193) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node065, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node066, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node067, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node068, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node061
begin
    set_sfall_global(2170, get_sfall_global_int(2170) - 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 263) + " " + get_sfall_global_int(2170) + "                           " + message_str(SCRIPT_OBJ_DUDE, 264) + " " + get_sfall_global_int(2171) + "                     " + message_str(SCRIPT_OBJ_DUDE, 292) + " " + get_sfall_global_int(2172) + "                            " + get_sfall_global_int(2193) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node061, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node062, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node063, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node064, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node062
begin
    set_sfall_global(2170, get_sfall_global_int(2170) - 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 263) + " " + get_sfall_global_int(2170) + "                           " + message_str(SCRIPT_OBJ_DUDE, 264) + " " + get_sfall_global_int(2171) + "                     " + message_str(SCRIPT_OBJ_DUDE, 292) + " " + get_sfall_global_int(2172) + "                            " + get_sfall_global_int(2193) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node061, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node062, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node063, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node064, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node063
begin
    set_sfall_global(2170, get_sfall_global_int(2170) + 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 263) + " " + get_sfall_global_int(2170) + "                           " + message_str(SCRIPT_OBJ_DUDE, 264) + " " + get_sfall_global_int(2171) + "                     " + message_str(SCRIPT_OBJ_DUDE, 292) + " " + get_sfall_global_int(2172) + "                            " + get_sfall_global_int(2193) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node061, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node062, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node063, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node064, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node064
begin
    set_sfall_global(2170, get_sfall_global_int(2170) + 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 263) + " " + get_sfall_global_int(2170) + "                           " + message_str(SCRIPT_OBJ_DUDE, 264) + " " + get_sfall_global_int(2171) + "                     " + message_str(SCRIPT_OBJ_DUDE, 292) + " " + get_sfall_global_int(2172) + "                            " + get_sfall_global_int(2193) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node061, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node062, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node063, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node064, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node065
begin
    set_sfall_global(2171, get_sfall_global_int(2171) - 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 263) + " " + get_sfall_global_int(2170) + "                           " + message_str(SCRIPT_OBJ_DUDE, 264) + " " + get_sfall_global_int(2171) + "                     " + message_str(SCRIPT_OBJ_DUDE, 292) + " " + get_sfall_global_int(2172) + "                            " + get_sfall_global_int(2193) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node065, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node066, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node067, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node068, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node066
begin
    set_sfall_global(2171, get_sfall_global_int(2171) - 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 263) + " " + get_sfall_global_int(2170) + "                           " + message_str(SCRIPT_OBJ_DUDE, 264) + " " + get_sfall_global_int(2171) + "                     " + message_str(SCRIPT_OBJ_DUDE, 292) + " " + get_sfall_global_int(2172) + "                            " + get_sfall_global_int(2193) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node065, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node066, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node067, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node068, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node067
begin
    set_sfall_global(2171, get_sfall_global_int(2171) + 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 263) + " " + get_sfall_global_int(2170) + "                           " + message_str(SCRIPT_OBJ_DUDE, 264) + " " + get_sfall_global_int(2171) + "                     " + message_str(SCRIPT_OBJ_DUDE, 292) + " " + get_sfall_global_int(2172) + "                            " + get_sfall_global_int(2193) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node065, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node066, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node067, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node068, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node068
begin
    set_sfall_global(2171, get_sfall_global_int(2171) + 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 263) + " " + get_sfall_global_int(2170) + "                           " + message_str(SCRIPT_OBJ_DUDE, 264) + " " + get_sfall_global_int(2171) + "                     " + message_str(SCRIPT_OBJ_DUDE, 292) + " " + get_sfall_global_int(2172) + "                            " + get_sfall_global_int(2193) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node065, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node066, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node067, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node068, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node069
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 265) + " " + get_sfall_global_int(2173) + "                               " + message_str(SCRIPT_OBJ_DUDE, 266) + " " + get_sfall_global_int(2174) + "                          " + message_str(SCRIPT_OBJ_DUDE, 293) + " " + get_sfall_global_int(2175) + "                                 " + get_sfall_global_int(2194) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node071, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node072, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node073, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node074, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node070
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 265) + " " + get_sfall_global_int(2173) + "                               " + message_str(SCRIPT_OBJ_DUDE, 266) + " " + get_sfall_global_int(2174) + "                          " + message_str(SCRIPT_OBJ_DUDE, 293) + " " + get_sfall_global_int(2175) + "                                 " + get_sfall_global_int(2194) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node075, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node076, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node077, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node078, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node071
begin
    set_sfall_global(2173, get_sfall_global_int(2173) - 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 265) + " " + get_sfall_global_int(2173) + "                               " + message_str(SCRIPT_OBJ_DUDE, 266) + " " + get_sfall_global_int(2174) + "                          " + message_str(SCRIPT_OBJ_DUDE, 293) + " " + get_sfall_global_int(2175) + "                                 " + get_sfall_global_int(2194) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node071, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node072, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node073, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node074, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node072
begin
    set_sfall_global(2173, get_sfall_global_int(2173) - 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 265) + " " + get_sfall_global_int(2173) + "                               " + message_str(SCRIPT_OBJ_DUDE, 266) + " " + get_sfall_global_int(2174) + "                          " + message_str(SCRIPT_OBJ_DUDE, 293) + " " + get_sfall_global_int(2175) + "                                 " + get_sfall_global_int(2194) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node071, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node072, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node073, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node074, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node073
begin
    set_sfall_global(2173, get_sfall_global_int(2173) + 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 265) + " " + get_sfall_global_int(2173) + "                               " + message_str(SCRIPT_OBJ_DUDE, 266) + " " + get_sfall_global_int(2174) + "                          " + message_str(SCRIPT_OBJ_DUDE, 293) + " " + get_sfall_global_int(2175) + "                                 " + get_sfall_global_int(2194) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node071, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node072, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node073, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node074, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node074
begin
    set_sfall_global(2173, get_sfall_global_int(2173) + 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 265) + " " + get_sfall_global_int(2173) + "                               " + message_str(SCRIPT_OBJ_DUDE, 266) + " " + get_sfall_global_int(2174) + "                          " + message_str(SCRIPT_OBJ_DUDE, 293) + " " + get_sfall_global_int(2175) + "                                 " + get_sfall_global_int(2194) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node071, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node072, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node073, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node074, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node075
begin
    set_sfall_global(2174, get_sfall_global_int(2174) - 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 265) + " " + get_sfall_global_int(2173) + "                               " + message_str(SCRIPT_OBJ_DUDE, 266) + " " + get_sfall_global_int(2174) + "                          " + message_str(SCRIPT_OBJ_DUDE, 293) + " " + get_sfall_global_int(2175) + "                                 " + get_sfall_global_int(2194) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node075, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node076, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node077, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node078, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node076
begin
    set_sfall_global(2174, get_sfall_global_int(2174) - 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 265) + " " + get_sfall_global_int(2173) + "                               " + message_str(SCRIPT_OBJ_DUDE, 266) + " " + get_sfall_global_int(2174) + "                          " + message_str(SCRIPT_OBJ_DUDE, 293) + " " + get_sfall_global_int(2175) + "                                 " + get_sfall_global_int(2194) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node075, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node076, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node077, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node078, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node077
begin
    set_sfall_global(2174, get_sfall_global_int(2174) + 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 265) + " " + get_sfall_global_int(2173) + "                               " + message_str(SCRIPT_OBJ_DUDE, 266) + " " + get_sfall_global_int(2174) + "                          " + message_str(SCRIPT_OBJ_DUDE, 293) + " " + get_sfall_global_int(2175) + "                                 " + get_sfall_global_int(2194) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node075, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node076, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node077, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node078, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node078
begin
    set_sfall_global(2174, get_sfall_global_int(2174) + 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 265) + " " + get_sfall_global_int(2173) + "                               " + message_str(SCRIPT_OBJ_DUDE, 266) + " " + get_sfall_global_int(2174) + "                          " + message_str(SCRIPT_OBJ_DUDE, 293) + " " + get_sfall_global_int(2175) + "                                 " + get_sfall_global_int(2194) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node075, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node076, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node077, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node078, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node079
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 267) + " " + get_sfall_global_int(2176) + "                               " + message_str(SCRIPT_OBJ_DUDE, 268) + " " + get_sfall_global_int(2177) + "                          " + message_str(SCRIPT_OBJ_DUDE, 294) + " " + get_sfall_global_int(2178) + "                                 " + get_sfall_global_int(2195) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node081, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node082, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node083, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node084, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node080
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 267) + " " + get_sfall_global_int(2176) + "                               " + message_str(SCRIPT_OBJ_DUDE, 268) + " " + get_sfall_global_int(2177) + "                          " + message_str(SCRIPT_OBJ_DUDE, 294) + " " + get_sfall_global_int(2178) + "                                 " + get_sfall_global_int(2195) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node085, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node086, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node087, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node088, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node081
begin
    set_sfall_global(2176, get_sfall_global_int(2176) - 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 267) + " " + get_sfall_global_int(2176) + "                               " + message_str(SCRIPT_OBJ_DUDE, 268) + " " + get_sfall_global_int(2177) + "                          " + message_str(SCRIPT_OBJ_DUDE, 294) + " " + get_sfall_global_int(2178) + "                                 " + get_sfall_global_int(2195) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node081, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node082, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node083, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node084, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node082
begin
    set_sfall_global(2176, get_sfall_global_int(2176) - 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 267) + " " + get_sfall_global_int(2176) + "                               " + message_str(SCRIPT_OBJ_DUDE, 268) + " " + get_sfall_global_int(2177) + "                          " + message_str(SCRIPT_OBJ_DUDE, 294) + " " + get_sfall_global_int(2178) + "                                 " + get_sfall_global_int(2195) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node081, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node082, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node083, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node084, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node083
begin
    set_sfall_global(2176, get_sfall_global_int(2176) + 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 267) + " " + get_sfall_global_int(2176) + "                               " + message_str(SCRIPT_OBJ_DUDE, 268) + " " + get_sfall_global_int(2177) + "                          " + message_str(SCRIPT_OBJ_DUDE, 294) + " " + get_sfall_global_int(2178) + "                                 " + get_sfall_global_int(2195) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node081, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node082, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node083, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node084, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node084
begin
    set_sfall_global(2176, get_sfall_global_int(2176) + 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 267) + " " + get_sfall_global_int(2176) + "                               " + message_str(SCRIPT_OBJ_DUDE, 268) + " " + get_sfall_global_int(2177) + "                          " + message_str(SCRIPT_OBJ_DUDE, 294) + " " + get_sfall_global_int(2178) + "                                 " + get_sfall_global_int(2195) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node081, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node082, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node083, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node084, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node085
begin
    set_sfall_global(2177, get_sfall_global_int(2177) - 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 267) + " " + get_sfall_global_int(2176) + "                               " + message_str(SCRIPT_OBJ_DUDE, 268) + " " + get_sfall_global_int(2177) + "                          " + message_str(SCRIPT_OBJ_DUDE, 294) + " " + get_sfall_global_int(2178) + "                                 " + get_sfall_global_int(2195) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node085, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node086, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node087, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node088, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node086
begin
    set_sfall_global(2177, get_sfall_global_int(2177) - 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 267) + " " + get_sfall_global_int(2176) + "                               " + message_str(SCRIPT_OBJ_DUDE, 268) + " " + get_sfall_global_int(2177) + "                          " + message_str(SCRIPT_OBJ_DUDE, 294) + " " + get_sfall_global_int(2178) + "                                 " + get_sfall_global_int(2195) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node085, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node086, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node087, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node088, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node087
begin
    set_sfall_global(2177, get_sfall_global_int(2177) + 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 267) + " " + get_sfall_global_int(2176) + "                               " + message_str(SCRIPT_OBJ_DUDE, 268) + " " + get_sfall_global_int(2177) + "                          " + message_str(SCRIPT_OBJ_DUDE, 294) + " " + get_sfall_global_int(2178) + "                                 " + get_sfall_global_int(2195) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node085, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node086, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node087, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node088, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node088
begin
    set_sfall_global(2177, get_sfall_global_int(2177) + 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 267) + " " + get_sfall_global_int(2176) + "                               " + message_str(SCRIPT_OBJ_DUDE, 268) + " " + get_sfall_global_int(2177) + "                          " + message_str(SCRIPT_OBJ_DUDE, 294) + " " + get_sfall_global_int(2178) + "                                 " + get_sfall_global_int(2195) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node085, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node086, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node087, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node088, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node089
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 269) + " " + get_sfall_global_int(2179) + "                              " + message_str(SCRIPT_OBJ_DUDE, 270) + " " + get_sfall_global_int(2180) + "                         " + message_str(SCRIPT_OBJ_DUDE, 295) + " " + get_sfall_global_int(2181) + "                                " + get_sfall_global_int(2196) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node091, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node092, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node093, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node094, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node090
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 269) + " " + get_sfall_global_int(2179) + "                              " + message_str(SCRIPT_OBJ_DUDE, 270) + " " + get_sfall_global_int(2180) + "                         " + message_str(SCRIPT_OBJ_DUDE, 295) + " " + get_sfall_global_int(2181) + "                                " + get_sfall_global_int(2196) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node095, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node096, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node097, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node098, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node091
begin
    set_sfall_global(2179, get_sfall_global_int(2179) - 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 269) + " " + get_sfall_global_int(2179) + "                              " + message_str(SCRIPT_OBJ_DUDE, 270) + " " + get_sfall_global_int(2180) + "                         " + message_str(SCRIPT_OBJ_DUDE, 295) + " " + get_sfall_global_int(2181) + "                                " + get_sfall_global_int(2196) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node091, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node092, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node093, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node094, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node092
begin
    set_sfall_global(2179, get_sfall_global_int(2179) - 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 269) + " " + get_sfall_global_int(2179) + "                              " + message_str(SCRIPT_OBJ_DUDE, 270) + " " + get_sfall_global_int(2180) + "                         " + message_str(SCRIPT_OBJ_DUDE, 295) + " " + get_sfall_global_int(2181) + "                                " + get_sfall_global_int(2196) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node091, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node092, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node093, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node094, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node093
begin
    set_sfall_global(2179, get_sfall_global_int(2179) + 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 269) + " " + get_sfall_global_int(2179) + "                              " + message_str(SCRIPT_OBJ_DUDE, 270) + " " + get_sfall_global_int(2180) + "                         " + message_str(SCRIPT_OBJ_DUDE, 295) + " " + get_sfall_global_int(2181) + "                                " + get_sfall_global_int(2196) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node091, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node092, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node093, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node094, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node094
begin
    set_sfall_global(2179, get_sfall_global_int(2179) + 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 269) + " " + get_sfall_global_int(2179) + "                              " + message_str(SCRIPT_OBJ_DUDE, 270) + " " + get_sfall_global_int(2180) + "                         " + message_str(SCRIPT_OBJ_DUDE, 295) + " " + get_sfall_global_int(2181) + "                                " + get_sfall_global_int(2196) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node091, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node092, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node093, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node094, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node095
begin
    set_sfall_global(2180, get_sfall_global_int(2180) - 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 269) + " " + get_sfall_global_int(2179) + "                              " + message_str(SCRIPT_OBJ_DUDE, 270) + " " + get_sfall_global_int(2180) + "                         " + message_str(SCRIPT_OBJ_DUDE, 295) + " " + get_sfall_global_int(2181) + "                                " + get_sfall_global_int(2196) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node095, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node096, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node097, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node098, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node096
begin
    set_sfall_global(2180, get_sfall_global_int(2180) - 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 269) + " " + get_sfall_global_int(2179) + "                              " + message_str(SCRIPT_OBJ_DUDE, 270) + " " + get_sfall_global_int(2180) + "                         " + message_str(SCRIPT_OBJ_DUDE, 295) + " " + get_sfall_global_int(2181) + "                                " + get_sfall_global_int(2196) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node095, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node096, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node097, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node098, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node097
begin
    set_sfall_global(2180, get_sfall_global_int(2180) + 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 269) + " " + get_sfall_global_int(2179) + "                              " + message_str(SCRIPT_OBJ_DUDE, 270) + " " + get_sfall_global_int(2180) + "                         " + message_str(SCRIPT_OBJ_DUDE, 295) + " " + get_sfall_global_int(2181) + "                                " + get_sfall_global_int(2196) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node095, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node096, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node097, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node098, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node098
begin
    set_sfall_global(2180, get_sfall_global_int(2180) + 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 269) + " " + get_sfall_global_int(2179) + "                              " + message_str(SCRIPT_OBJ_DUDE, 270) + " " + get_sfall_global_int(2180) + "                         " + message_str(SCRIPT_OBJ_DUDE, 295) + " " + get_sfall_global_int(2181) + "                                " + get_sfall_global_int(2196) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node095, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node096, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node097, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node098, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node099
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 259) + " " + get_sfall_global_int(2164) + "                             " + message_str(SCRIPT_OBJ_DUDE, 260) + " " + get_sfall_global_int(2165) + "                         " + message_str(SCRIPT_OBJ_DUDE, 290) + " " + get_sfall_global_int(2166) + "                                   " + get_sfall_global_int(2191) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node101, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node102, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node103, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node104, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node100
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 259) + " " + get_sfall_global_int(2164) + "                             " + message_str(SCRIPT_OBJ_DUDE, 260) + " " + get_sfall_global_int(2165) + "                         " + message_str(SCRIPT_OBJ_DUDE, 290) + " " + get_sfall_global_int(2166) + "                                   " + get_sfall_global_int(2191) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node105, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node106, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node107, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node108, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node101
begin
    set_sfall_global(2164, get_sfall_global_int(2164) - 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 259) + " " + get_sfall_global_int(2164) + "                             " + message_str(SCRIPT_OBJ_DUDE, 260) + " " + get_sfall_global_int(2165) + "                         " + message_str(SCRIPT_OBJ_DUDE, 290) + " " + get_sfall_global_int(2166) + "                                   " + get_sfall_global_int(2191) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node101, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node102, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node103, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node104, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node102
begin
    set_sfall_global(2164, get_sfall_global_int(2164) - 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 259) + " " + get_sfall_global_int(2164) + "                             " + message_str(SCRIPT_OBJ_DUDE, 260) + " " + get_sfall_global_int(2165) + "                         " + message_str(SCRIPT_OBJ_DUDE, 290) + " " + get_sfall_global_int(2166) + "                                   " + get_sfall_global_int(2191) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node101, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node102, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node103, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node104, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node103
begin
    set_sfall_global(2164, get_sfall_global_int(2164) + 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 259) + " " + get_sfall_global_int(2164) + "                             " + message_str(SCRIPT_OBJ_DUDE, 260) + " " + get_sfall_global_int(2165) + "                         " + message_str(SCRIPT_OBJ_DUDE, 290) + " " + get_sfall_global_int(2166) + "                                   " + get_sfall_global_int(2191) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node101, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node102, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node103, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node104, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node104
begin
    set_sfall_global(2164, get_sfall_global_int(2164) + 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 259) + " " + get_sfall_global_int(2164) + "                             " + message_str(SCRIPT_OBJ_DUDE, 260) + " " + get_sfall_global_int(2165) + "                         " + message_str(SCRIPT_OBJ_DUDE, 290) + " " + get_sfall_global_int(2166) + "                                   " + get_sfall_global_int(2191) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node101, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node102, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node103, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node104, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node105
begin
    set_sfall_global(2165, get_sfall_global_int(2165) - 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 259) + " " + get_sfall_global_int(2164) + "                             " + message_str(SCRIPT_OBJ_DUDE, 260) + " " + get_sfall_global_int(2165) + "                         " + message_str(SCRIPT_OBJ_DUDE, 290) + " " + get_sfall_global_int(2166) + "                                   " + get_sfall_global_int(2191) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node105, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node106, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node107, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node108, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node106
begin
    set_sfall_global(2165, get_sfall_global_int(2165) - 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 259) + " " + get_sfall_global_int(2164) + "                             " + message_str(SCRIPT_OBJ_DUDE, 260) + " " + get_sfall_global_int(2165) + "                         " + message_str(SCRIPT_OBJ_DUDE, 290) + " " + get_sfall_global_int(2166) + "                                   " + get_sfall_global_int(2191) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node105, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node106, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node107, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node108, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node107
begin
    set_sfall_global(2165, get_sfall_global_int(2165) + 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 259) + " " + get_sfall_global_int(2164) + "                             " + message_str(SCRIPT_OBJ_DUDE, 260) + " " + get_sfall_global_int(2165) + "                         " + message_str(SCRIPT_OBJ_DUDE, 290) + " " + get_sfall_global_int(2166) + "                                   " + get_sfall_global_int(2191) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node105, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node106, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node107, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node108, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node108
begin
    set_sfall_global(2165, get_sfall_global_int(2165) + 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 259) + " " + get_sfall_global_int(2164) + "                             " + message_str(SCRIPT_OBJ_DUDE, 260) + " " + get_sfall_global_int(2165) + "                         " + message_str(SCRIPT_OBJ_DUDE, 290) + " " + get_sfall_global_int(2166) + "                                   " + get_sfall_global_int(2191) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node105, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node106, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node107, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node108, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node109
begin
    set_sfall_global(2161, 5);
    set_sfall_global(2162, 1);
    set_sfall_global(2163, 3);
    set_sfall_global(2164, 1);
    set_sfall_global(2165, 1);
    set_sfall_global(2166, 9);
    set_sfall_global(2167, 3);
    set_sfall_global(2168, 1);
    set_sfall_global(2169, 5);
    set_sfall_global(2170, 5);
    set_sfall_global(2171, 1);
    set_sfall_global(2172, 1);
    set_sfall_global(2173, 3);
    set_sfall_global(2174, 1);
    set_sfall_global(2175, 1);
    set_sfall_global(2176, 6);
    set_sfall_global(2177, 1);
    set_sfall_global(2178, 1);
    set_sfall_global(2179, 1);
    set_sfall_global(2180, 1);
    set_sfall_global(2181, 4);
    set_sfall_global(2182, 6);
    set_sfall_global(2183, 2);
    set_sfall_global(2184, 1);
    set_sfall_global(2185, 1);
    set_sfall_global(2186, 4);
    set_sfall_global(2187, 5);
    set_sfall_global(2188, 1);
    set_sfall_global(2189, 4);
    set_sfall_global(4259, 5);
    set_sfall_global(4260, 1);
    set_sfall_global(4261, 4);
    set_sfall_global(4297, 1);
    set_sfall_global(4298, 1);
    set_sfall_global(4299, 4);
    set_sfall_global(4306, 0);
    set_sfall_global(2200, 1);
    set_sfall_global(5505, 1);
    call Node018();
end

procedure Node110
begin
    set_sfall_global(2163, get_sfall_global_int(2163) - 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 257) + " " + get_sfall_global_int(2161) + "                             " + message_str(SCRIPT_OBJ_DUDE, 258) + " " + get_sfall_global_int(2162) + "                          " + message_str(SCRIPT_OBJ_DUDE, 284) + " " + get_sfall_global_int(2163) + "                                 " + get_sfall_global_int(2190) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node110, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node111, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node112, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node113, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node111
begin
    set_sfall_global(2163, get_sfall_global_int(2163) - 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 257) + " " + get_sfall_global_int(2161) + "                             " + message_str(SCRIPT_OBJ_DUDE, 258) + " " + get_sfall_global_int(2162) + "                          " + message_str(SCRIPT_OBJ_DUDE, 284) + " " + get_sfall_global_int(2163) + "                                 " + get_sfall_global_int(2190) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node110, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node111, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node112, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node113, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node112
begin
    set_sfall_global(2163, get_sfall_global_int(2163) + 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 257) + " " + get_sfall_global_int(2161) + "                             " + message_str(SCRIPT_OBJ_DUDE, 258) + " " + get_sfall_global_int(2162) + "                          " + message_str(SCRIPT_OBJ_DUDE, 284) + " " + get_sfall_global_int(2163) + "                                 " + get_sfall_global_int(2190) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node110, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node111, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node112, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node113, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node113
begin
    set_sfall_global(2163, get_sfall_global_int(2163) + 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 257) + " " + get_sfall_global_int(2161) + "                             " + message_str(SCRIPT_OBJ_DUDE, 258) + " " + get_sfall_global_int(2162) + "                          " + message_str(SCRIPT_OBJ_DUDE, 284) + " " + get_sfall_global_int(2163) + "                                 " + get_sfall_global_int(2190) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node110, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node111, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node112, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node113, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node114
begin
    set_sfall_global(2166, get_sfall_global_int(2166) - 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 259) + " " + get_sfall_global_int(2164) + "                             " + message_str(SCRIPT_OBJ_DUDE, 260) + " " + get_sfall_global_int(2165) + "                         " + message_str(SCRIPT_OBJ_DUDE, 290) + " " + get_sfall_global_int(2166) + "                                   " + get_sfall_global_int(2191) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node114, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node115, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node116, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node117, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node115
begin
    set_sfall_global(2166, get_sfall_global_int(2166) - 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 259) + " " + get_sfall_global_int(2164) + "                             " + message_str(SCRIPT_OBJ_DUDE, 260) + " " + get_sfall_global_int(2165) + "                         " + message_str(SCRIPT_OBJ_DUDE, 290) + " " + get_sfall_global_int(2166) + "                                   " + get_sfall_global_int(2191) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node114, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node115, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node116, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node117, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node116
begin
    set_sfall_global(2166, get_sfall_global_int(2166) + 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 259) + " " + get_sfall_global_int(2164) + "                             " + message_str(SCRIPT_OBJ_DUDE, 260) + " " + get_sfall_global_int(2165) + "                         " + message_str(SCRIPT_OBJ_DUDE, 290) + " " + get_sfall_global_int(2166) + "                                   " + get_sfall_global_int(2191) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node114, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node115, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node116, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node117, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node117
begin
    set_sfall_global(2166, get_sfall_global_int(2166) + 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 259) + " " + get_sfall_global_int(2164) + "                             " + message_str(SCRIPT_OBJ_DUDE, 260) + " " + get_sfall_global_int(2165) + "                         " + message_str(SCRIPT_OBJ_DUDE, 290) + " " + get_sfall_global_int(2166) + "                                   " + get_sfall_global_int(2191) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node114, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node115, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node116, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node117, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node118
begin
    set_sfall_global(2169, get_sfall_global_int(2169) - 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 261) + " " + get_sfall_global_int(2167) + "                          " + message_str(SCRIPT_OBJ_DUDE, 262) + " " + get_sfall_global_int(2168) + "                    " + message_str(SCRIPT_OBJ_DUDE, 291) + " " + get_sfall_global_int(2169) + "                           " + get_sfall_global_int(2192) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node118, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node119, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node120, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node121, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node119
begin
    set_sfall_global(2169, get_sfall_global_int(2169) - 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 261) + " " + get_sfall_global_int(2167) + "                          " + message_str(SCRIPT_OBJ_DUDE, 262) + " " + get_sfall_global_int(2168) + "                    " + message_str(SCRIPT_OBJ_DUDE, 291) + " " + get_sfall_global_int(2169) + "                           " + get_sfall_global_int(2192) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node118, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node119, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node120, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node121, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node120
begin
    set_sfall_global(2169, get_sfall_global_int(2169) + 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 261) + " " + get_sfall_global_int(2167) + "                          " + message_str(SCRIPT_OBJ_DUDE, 262) + " " + get_sfall_global_int(2168) + "                    " + message_str(SCRIPT_OBJ_DUDE, 291) + " " + get_sfall_global_int(2169) + "                           " + get_sfall_global_int(2192) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node118, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node119, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node120, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node121, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node121
begin
    set_sfall_global(2169, get_sfall_global_int(2169) + 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 261) + " " + get_sfall_global_int(2167) + "                          " + message_str(SCRIPT_OBJ_DUDE, 262) + " " + get_sfall_global_int(2168) + "                    " + message_str(SCRIPT_OBJ_DUDE, 291) + " " + get_sfall_global_int(2169) + "                           " + get_sfall_global_int(2192) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node118, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node119, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node120, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node121, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node122
begin
    set_sfall_global(2172, get_sfall_global_int(2172) - 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 263) + " " + get_sfall_global_int(2170) + "                           " + message_str(SCRIPT_OBJ_DUDE, 264) + " " + get_sfall_global_int(2171) + "                     " + message_str(SCRIPT_OBJ_DUDE, 292) + " " + get_sfall_global_int(2172) + "                            " + get_sfall_global_int(2193) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node122, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node123, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node124, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node125, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node123
begin
    set_sfall_global(2172, get_sfall_global_int(2172) - 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 263) + " " + get_sfall_global_int(2170) + "                           " + message_str(SCRIPT_OBJ_DUDE, 264) + " " + get_sfall_global_int(2171) + "                     " + message_str(SCRIPT_OBJ_DUDE, 292) + " " + get_sfall_global_int(2172) + "                            " + get_sfall_global_int(2193) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node122, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node123, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node124, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node125, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node124
begin
    set_sfall_global(2172, get_sfall_global_int(2172) + 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 263) + " " + get_sfall_global_int(2170) + "                           " + message_str(SCRIPT_OBJ_DUDE, 264) + " " + get_sfall_global_int(2171) + "                     " + message_str(SCRIPT_OBJ_DUDE, 292) + " " + get_sfall_global_int(2172) + "                            " + get_sfall_global_int(2193) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node122, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node123, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node124, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node125, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node125
begin
    set_sfall_global(2172, get_sfall_global_int(2172) + 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 263) + " " + get_sfall_global_int(2170) + "                           " + message_str(SCRIPT_OBJ_DUDE, 264) + " " + get_sfall_global_int(2171) + "                     " + message_str(SCRIPT_OBJ_DUDE, 292) + " " + get_sfall_global_int(2172) + "                            " + get_sfall_global_int(2193) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node122, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node123, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node124, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node125, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node126
begin
    set_sfall_global(2175, get_sfall_global_int(2175) - 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 265) + " " + get_sfall_global_int(2173) + "                               " + message_str(SCRIPT_OBJ_DUDE, 266) + " " + get_sfall_global_int(2174) + "                          " + message_str(SCRIPT_OBJ_DUDE, 293) + " " + get_sfall_global_int(2175) + "                                 " + get_sfall_global_int(2194) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node126, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node127, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node128, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node129, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node127
begin
    set_sfall_global(2175, get_sfall_global_int(2175) - 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 265) + " " + get_sfall_global_int(2173) + "                               " + message_str(SCRIPT_OBJ_DUDE, 266) + " " + get_sfall_global_int(2174) + "                          " + message_str(SCRIPT_OBJ_DUDE, 293) + " " + get_sfall_global_int(2175) + "                                 " + get_sfall_global_int(2194) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node126, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node127, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node128, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node129, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node128
begin
    set_sfall_global(2175, get_sfall_global_int(2175) + 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 265) + " " + get_sfall_global_int(2173) + "                               " + message_str(SCRIPT_OBJ_DUDE, 266) + " " + get_sfall_global_int(2174) + "                          " + message_str(SCRIPT_OBJ_DUDE, 293) + " " + get_sfall_global_int(2175) + "                                 " + get_sfall_global_int(2194) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node126, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node127, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node128, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node129, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node129
begin
    set_sfall_global(2175, get_sfall_global_int(2175) + 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 265) + " " + get_sfall_global_int(2173) + "                               " + message_str(SCRIPT_OBJ_DUDE, 266) + " " + get_sfall_global_int(2174) + "                          " + message_str(SCRIPT_OBJ_DUDE, 293) + " " + get_sfall_global_int(2175) + "                                 " + get_sfall_global_int(2194) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node126, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node127, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node128, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node129, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node130
begin
    set_sfall_global(2178, get_sfall_global_int(2178) - 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 267) + " " + get_sfall_global_int(2176) + "                               " + message_str(SCRIPT_OBJ_DUDE, 268) + " " + get_sfall_global_int(2177) + "                          " + message_str(SCRIPT_OBJ_DUDE, 294) + " " + get_sfall_global_int(2178) + "                                 " + get_sfall_global_int(2195) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node130, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node131, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node132, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node133, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node131
begin
    set_sfall_global(2178, get_sfall_global_int(2178) - 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 267) + " " + get_sfall_global_int(2176) + "                               " + message_str(SCRIPT_OBJ_DUDE, 268) + " " + get_sfall_global_int(2177) + "                          " + message_str(SCRIPT_OBJ_DUDE, 294) + " " + get_sfall_global_int(2178) + "                                 " + get_sfall_global_int(2195) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node130, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node131, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node132, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node133, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node132
begin
    set_sfall_global(2178, get_sfall_global_int(2178) + 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 267) + " " + get_sfall_global_int(2176) + "                               " + message_str(SCRIPT_OBJ_DUDE, 268) + " " + get_sfall_global_int(2177) + "                          " + message_str(SCRIPT_OBJ_DUDE, 294) + " " + get_sfall_global_int(2178) + "                                 " + get_sfall_global_int(2195) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node130, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node131, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node132, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node133, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node133
begin
    set_sfall_global(2178, get_sfall_global_int(2178) + 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 267) + " " + get_sfall_global_int(2176) + "                               " + message_str(SCRIPT_OBJ_DUDE, 268) + " " + get_sfall_global_int(2177) + "                          " + message_str(SCRIPT_OBJ_DUDE, 294) + " " + get_sfall_global_int(2178) + "                                 " + get_sfall_global_int(2195) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node130, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node131, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node132, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node133, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node134
begin
    set_sfall_global(2181, get_sfall_global_int(2181) - 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 269) + " " + get_sfall_global_int(2179) + "                              " + message_str(SCRIPT_OBJ_DUDE, 270) + " " + get_sfall_global_int(2180) + "                         " + message_str(SCRIPT_OBJ_DUDE, 295) + " " + get_sfall_global_int(2181) + "                                " + get_sfall_global_int(2196) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node134, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node135, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node136, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node137, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node135
begin
    set_sfall_global(2181, get_sfall_global_int(2181) - 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 269) + " " + get_sfall_global_int(2179) + "                              " + message_str(SCRIPT_OBJ_DUDE, 270) + " " + get_sfall_global_int(2180) + "                         " + message_str(SCRIPT_OBJ_DUDE, 295) + " " + get_sfall_global_int(2181) + "                                " + get_sfall_global_int(2196) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node134, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node135, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node136, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node137, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node136
begin
    set_sfall_global(2181, get_sfall_global_int(2181) + 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 269) + " " + get_sfall_global_int(2179) + "                              " + message_str(SCRIPT_OBJ_DUDE, 270) + " " + get_sfall_global_int(2180) + "                         " + message_str(SCRIPT_OBJ_DUDE, 295) + " " + get_sfall_global_int(2181) + "                                " + get_sfall_global_int(2196) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node134, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node135, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node136, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node137, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node137
begin
    set_sfall_global(2181, get_sfall_global_int(2181) + 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 269) + " " + get_sfall_global_int(2179) + "                              " + message_str(SCRIPT_OBJ_DUDE, 270) + " " + get_sfall_global_int(2180) + "                         " + message_str(SCRIPT_OBJ_DUDE, 295) + " " + get_sfall_global_int(2181) + "                                " + get_sfall_global_int(2196) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node134, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node135, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node136, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node137, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node138
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 271) + " " + get_sfall_global_int(2182) + "                                " + message_str(SCRIPT_OBJ_DUDE, 296) + " " + get_sfall_global_int(2183) + "                                       " + get_sfall_global_int(2197) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 273, Node034, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 285, Node139, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node139
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 271) + " " + get_sfall_global_int(2182) + "                                " + message_str(SCRIPT_OBJ_DUDE, 296) + " " + get_sfall_global_int(2183) + "                                       " + get_sfall_global_int(2197) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node140, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node141, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node142, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node143, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node140
begin
    set_sfall_global(2183, get_sfall_global_int(2183) - 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 271) + " " + get_sfall_global_int(2182) + "                                " + message_str(SCRIPT_OBJ_DUDE, 296) + " " + get_sfall_global_int(2183) + "                                       " + get_sfall_global_int(2197) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node140, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node141, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node142, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node143, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node141
begin
    set_sfall_global(2183, get_sfall_global_int(2183) - 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 271) + " " + get_sfall_global_int(2182) + "                                " + message_str(SCRIPT_OBJ_DUDE, 296) + " " + get_sfall_global_int(2183) + "                                       " + get_sfall_global_int(2197) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node140, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node141, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node142, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node143, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node142
begin
    set_sfall_global(2183, get_sfall_global_int(2183) + 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 271) + " " + get_sfall_global_int(2182) + "                                " + message_str(SCRIPT_OBJ_DUDE, 296) + " " + get_sfall_global_int(2183) + "                                       " + get_sfall_global_int(2197) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node140, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node141, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node142, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node143, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node143
begin
    set_sfall_global(2183, get_sfall_global_int(2183) + 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 271) + " " + get_sfall_global_int(2182) + "                                " + message_str(SCRIPT_OBJ_DUDE, 296) + " " + get_sfall_global_int(2183) + "                                       " + get_sfall_global_int(2197) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node140, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node141, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node142, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node143, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node144
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 257) + " " + get_sfall_global_int(2161) + "                             " + message_str(SCRIPT_OBJ_DUDE, 258) + " " + get_sfall_global_int(2162) + "                          " + message_str(SCRIPT_OBJ_DUDE, 284) + " " + get_sfall_global_int(2163) + "                                 " + get_sfall_global_int(2190) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node110, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node111, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node112, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node113, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node145
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 259) + " " + get_sfall_global_int(2164) + "                             " + message_str(SCRIPT_OBJ_DUDE, 260) + " " + get_sfall_global_int(2165) + "                         " + message_str(SCRIPT_OBJ_DUDE, 290) + " " + get_sfall_global_int(2166) + "                                   " + get_sfall_global_int(2191) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node114, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node115, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node116, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node117, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node146
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 261) + " " + get_sfall_global_int(2167) + "                          " + message_str(SCRIPT_OBJ_DUDE, 262) + " " + get_sfall_global_int(2168) + "                               " + message_str(SCRIPT_OBJ_DUDE, 291) + " " + get_sfall_global_int(2169) + "                                      " + get_sfall_global_int(2192) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node118, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node119, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node120, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node121, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node147
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 263) + " " + get_sfall_global_int(2170) + "                           " + message_str(SCRIPT_OBJ_DUDE, 264) + " " + get_sfall_global_int(2171) + "                     " + message_str(SCRIPT_OBJ_DUDE, 292) + " " + get_sfall_global_int(2172) + "                            " + get_sfall_global_int(2193) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node122, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node123, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node124, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node125, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node148
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 265) + " " + get_sfall_global_int(2173) + "                               " + message_str(SCRIPT_OBJ_DUDE, 266) + " " + get_sfall_global_int(2174) + "                          " + message_str(SCRIPT_OBJ_DUDE, 293) + " " + get_sfall_global_int(2175) + "                                 " + get_sfall_global_int(2194) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node126, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node127, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node128, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node129, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node149
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 267) + " " + get_sfall_global_int(2176) + "                               " + message_str(SCRIPT_OBJ_DUDE, 268) + " " + get_sfall_global_int(2177) + "                          " + message_str(SCRIPT_OBJ_DUDE, 294) + " " + get_sfall_global_int(2178) + "                                 " + get_sfall_global_int(2195) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node130, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node131, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node132, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node133, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node150
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 269) + " " + get_sfall_global_int(2179) + "                              " + message_str(SCRIPT_OBJ_DUDE, 270) + " " + get_sfall_global_int(2180) + "                         " + message_str(SCRIPT_OBJ_DUDE, 295) + " " + get_sfall_global_int(2181) + "                                " + get_sfall_global_int(2195) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node134, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node135, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node136, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node137, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node151
begin
    call Node999();
    if (obj_is_carrying_obj_pid(dude_obj, 259) > 0) then begin
        while (obj_is_carrying_obj_pid(dude_obj, 259) > 0) do begin
            rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 259));
            if (tile_contains_obj_pid(0, 1, 259)) then begin
                destroy_object(tile_contains_pid_obj(0, 1, 259));
            end
            add_obj_to_inven(party_member_obj(16777313), create_object(259, 0, 0));
        end
    end
    if (obj_is_carrying_obj_pid(dude_obj, 53) > 0) then begin
        while (obj_is_carrying_obj_pid(dude_obj, 53) > 0) do begin
            rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 53));
            if (tile_contains_obj_pid(0, 1, 53)) then begin
                destroy_object(tile_contains_pid_obj(0, 1, 53));
            end
            add_obj_to_inven(party_member_obj(16777313), create_object(53, 0, 0));
        end
    end
    if (obj_is_carrying_obj_pid(dude_obj, 110) > 0) then begin
        while (obj_is_carrying_obj_pid(dude_obj, 110) > 0) do begin
            rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 110));
            if (tile_contains_obj_pid(0, 1, 110)) then begin
                destroy_object(tile_contains_pid_obj(0, 1, 110));
            end
            add_obj_to_inven(party_member_obj(16777313), create_object(110, 0, 0));
        end
    end
    if (obj_is_carrying_obj_pid(dude_obj, 87) > 0) then begin
        while (obj_is_carrying_obj_pid(dude_obj, 87) > 0) do begin
            rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 87));
            if (tile_contains_obj_pid(0, 1, 87)) then begin
                destroy_object(tile_contains_pid_obj(0, 1, 87));
            end
            add_obj_to_inven(party_member_obj(16777313), create_object(87, 0, 0));
        end
    end
    if (obj_is_carrying_obj_pid(dude_obj, 124) > 0) then begin
        while (obj_is_carrying_obj_pid(dude_obj, 124) > 0) do begin
            rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 124));
            if (tile_contains_obj_pid(0, 1, 124)) then begin
                destroy_object(tile_contains_pid_obj(0, 1, 124));
            end
            add_obj_to_inven(party_member_obj(16777313), create_object(124, 0, 0));
        end
    end
    if (obj_is_carrying_obj_pid(dude_obj, 125) > 0) then begin
        while (obj_is_carrying_obj_pid(dude_obj, 125) > 0) do begin
            rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 125));
            if (tile_contains_obj_pid(0, 1, 125)) then begin
                destroy_object(tile_contains_pid_obj(0, 1, 125));
            end
            add_obj_to_inven(party_member_obj(16777313), create_object(125, 0, 0));
        end
    end
    if (obj_is_carrying_obj_pid(dude_obj, 469) > 0) then begin
        while (obj_is_carrying_obj_pid(dude_obj, 469) > 0) do begin
            rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 469));
            if (tile_contains_obj_pid(0, 1, 469)) then begin
                destroy_object(tile_contains_pid_obj(0, 1, 469));
            end
            add_obj_to_inven(party_member_obj(16777313), create_object(469, 0, 0));
        end
    end
    if (obj_is_carrying_obj_pid(dude_obj, 310) > 0) then begin
        while (obj_is_carrying_obj_pid(dude_obj, 310) > 0) do begin
            rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 310));
            if (tile_contains_obj_pid(0, 1, 310)) then begin
                destroy_object(tile_contains_pid_obj(0, 1, 310));
            end
            add_obj_to_inven(party_member_obj(16777313), create_object(310, 0, 0));
        end
    end
    if (obj_is_carrying_obj_pid(dude_obj, 311) > 0) then begin
        while (obj_is_carrying_obj_pid(dude_obj, 311) > 0) do begin
            rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 311));
            if (tile_contains_obj_pid(0, 1, 311)) then begin
                destroy_object(tile_contains_pid_obj(0, 1, 311));
            end
            add_obj_to_inven(party_member_obj(16777313), create_object(311, 0, 0));
        end
    end
end

procedure Node152
begin
    call Node999();
    if (obj_is_carrying_obj_pid(party_member_obj(16777313), 259) > 0) then begin
        while (obj_is_carrying_obj_pid(party_member_obj(16777313), 259) > 0) do begin
            rm_obj_from_inven(party_member_obj(16777313), obj_carrying_pid_obj(party_member_obj(16777313), 259));
            if (tile_contains_obj_pid(0, 1, 259)) then begin
                destroy_object(tile_contains_pid_obj(0, 1, 259));
            end
            add_obj_to_inven(dude_obj, create_object(259, 0, 0));
        end
    end
    if (obj_is_carrying_obj_pid(party_member_obj(16777313), 53) > 0) then begin
        while (obj_is_carrying_obj_pid(party_member_obj(16777313), 53) > 0) do begin
            rm_obj_from_inven(party_member_obj(16777313), obj_carrying_pid_obj(party_member_obj(16777313), 53));
            if (tile_contains_obj_pid(0, 1, 53)) then begin
                destroy_object(tile_contains_pid_obj(0, 1, 53));
            end
            add_obj_to_inven(dude_obj, create_object(53, 0, 0));
        end
    end
    if (obj_is_carrying_obj_pid(party_member_obj(16777313), 110) > 0) then begin
        while (obj_is_carrying_obj_pid(party_member_obj(16777313), 110) > 0) do begin
            rm_obj_from_inven(party_member_obj(16777313), obj_carrying_pid_obj(party_member_obj(16777313), 110));
            if (tile_contains_obj_pid(0, 1, 110)) then begin
                destroy_object(tile_contains_pid_obj(0, 1, 110));
            end
            add_obj_to_inven(dude_obj, create_object(110, 0, 0));
        end
    end
    if (obj_is_carrying_obj_pid(party_member_obj(16777313), 87) > 0) then begin
        while (obj_is_carrying_obj_pid(party_member_obj(16777313), 87) > 0) do begin
            rm_obj_from_inven(party_member_obj(16777313), obj_carrying_pid_obj(party_member_obj(16777313), 87));
            if (tile_contains_obj_pid(0, 1, 87)) then begin
                destroy_object(tile_contains_pid_obj(0, 1, 87));
            end
            add_obj_to_inven(dude_obj, create_object(87, 0, 0));
        end
    end
    if (obj_is_carrying_obj_pid(party_member_obj(16777313), 124) > 0) then begin
        while (obj_is_carrying_obj_pid(party_member_obj(16777313), 124) > 0) do begin
            rm_obj_from_inven(party_member_obj(16777313), obj_carrying_pid_obj(party_member_obj(16777313), 124));
            if (tile_contains_obj_pid(0, 1, 124)) then begin
                destroy_object(tile_contains_pid_obj(0, 1, 124));
            end
            add_obj_to_inven(dude_obj, create_object(124, 0, 0));
        end
    end
    if (obj_is_carrying_obj_pid(party_member_obj(16777313), 125) > 0) then begin
        while (obj_is_carrying_obj_pid(party_member_obj(16777313), 125) > 0) do begin
            rm_obj_from_inven(party_member_obj(16777313), obj_carrying_pid_obj(party_member_obj(16777313), 125));
            if (tile_contains_obj_pid(0, 1, 125)) then begin
                destroy_object(tile_contains_pid_obj(0, 1, 125));
            end
            add_obj_to_inven(dude_obj, create_object(125, 0, 0));
        end
    end
    if (obj_is_carrying_obj_pid(party_member_obj(16777313), 469) > 0) then begin
        while (obj_is_carrying_obj_pid(party_member_obj(16777313), 469) > 0) do begin
            rm_obj_from_inven(party_member_obj(16777313), obj_carrying_pid_obj(party_member_obj(16777313), 469));
            if (tile_contains_obj_pid(0, 1, 469)) then begin
                destroy_object(tile_contains_pid_obj(0, 1, 469));
            end
            add_obj_to_inven(dude_obj, create_object(469, 0, 0));
        end
    end
    if (obj_is_carrying_obj_pid(party_member_obj(16777313), 310) > 0) then begin
        while (obj_is_carrying_obj_pid(party_member_obj(16777313), 310) > 0) do begin
            rm_obj_from_inven(party_member_obj(16777313), obj_carrying_pid_obj(party_member_obj(16777313), 310));
            if (tile_contains_obj_pid(0, 1, 310)) then begin
                destroy_object(tile_contains_pid_obj(0, 1, 310));
            end
            add_obj_to_inven(dude_obj, create_object(310, 0, 0));
        end
    end
    if (obj_is_carrying_obj_pid(party_member_obj(16777313), 311) > 0) then begin
        while (obj_is_carrying_obj_pid(party_member_obj(16777313), 311) > 0) do begin
            rm_obj_from_inven(party_member_obj(16777313), obj_carrying_pid_obj(party_member_obj(16777313), 311));
            if (tile_contains_obj_pid(0, 1, 311)) then begin
                destroy_object(tile_contains_pid_obj(0, 1, 311));
            end
            add_obj_to_inven(dude_obj, create_object(311, 0, 0));
        end
    end
end

procedure Node153
begin
    gsay_reply(SCRIPT_OBJ_DUDE, 301);
    giq_option(1, SCRIPT_OBJ_DUDE, 233, Node154, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 283, Node109, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node154
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 302) + " " + get_sfall_global_int(2184) + "                    " + message_str(SCRIPT_OBJ_DUDE, 303) + " " + get_sfall_global_int(2185) + "                      " + message_str(SCRIPT_OBJ_DUDE, 304) + " " + get_sfall_global_int(2186) + "                           " + get_sfall_global_int(2198) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 272, Node155, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 273, Node156, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 285, Node157, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node155
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 302) + " " + get_sfall_global_int(2184) + "                    " + message_str(SCRIPT_OBJ_DUDE, 303) + " " + get_sfall_global_int(2185) + "                      " + message_str(SCRIPT_OBJ_DUDE, 304) + " " + get_sfall_global_int(2186) + "                           " + get_sfall_global_int(2198) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node158, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node159, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node160, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node161, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node156
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 302) + " " + get_sfall_global_int(2184) + "                    " + message_str(SCRIPT_OBJ_DUDE, 303) + " " + get_sfall_global_int(2185) + "                      " + message_str(SCRIPT_OBJ_DUDE, 304) + " " + get_sfall_global_int(2186) + "                           " + get_sfall_global_int(2198) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node162, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node163, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node164, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node165, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node157
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 302) + " " + get_sfall_global_int(2184) + "                    " + message_str(SCRIPT_OBJ_DUDE, 303) + " " + get_sfall_global_int(2185) + "                      " + message_str(SCRIPT_OBJ_DUDE, 304) + " " + get_sfall_global_int(2186) + "                           " + get_sfall_global_int(2198) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node166, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node167, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node168, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node169, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node158
begin
    set_sfall_global(2184, get_sfall_global_int(2184) - 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 302) + " " + get_sfall_global_int(2184) + "                    " + message_str(SCRIPT_OBJ_DUDE, 303) + " " + get_sfall_global_int(2185) + "                      " + message_str(SCRIPT_OBJ_DUDE, 304) + " " + get_sfall_global_int(2186) + "                           " + get_sfall_global_int(2198) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node158, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node159, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node160, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node161, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node159
begin
    set_sfall_global(2184, get_sfall_global_int(2184) - 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 302) + " " + get_sfall_global_int(2184) + "                    " + message_str(SCRIPT_OBJ_DUDE, 303) + " " + get_sfall_global_int(2185) + "                      " + message_str(SCRIPT_OBJ_DUDE, 304) + " " + get_sfall_global_int(2186) + "                           " + get_sfall_global_int(2198) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node158, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node159, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node160, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node161, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node160
begin
    set_sfall_global(2184, get_sfall_global_int(2184) + 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 302) + " " + get_sfall_global_int(2184) + "                    " + message_str(SCRIPT_OBJ_DUDE, 303) + " " + get_sfall_global_int(2185) + "                      " + message_str(SCRIPT_OBJ_DUDE, 304) + " " + get_sfall_global_int(2186) + "                           " + get_sfall_global_int(2198) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node158, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node159, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node160, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node161, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node161
begin
    set_sfall_global(2184, get_sfall_global_int(2184) + 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 302) + " " + get_sfall_global_int(2184) + "                    " + message_str(SCRIPT_OBJ_DUDE, 303) + " " + get_sfall_global_int(2185) + "                      " + message_str(SCRIPT_OBJ_DUDE, 304) + " " + get_sfall_global_int(2186) + "                           " + get_sfall_global_int(2198) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node158, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node159, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node160, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node161, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node162
begin
    set_sfall_global(2185, get_sfall_global_int(2185) - 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 302) + " " + get_sfall_global_int(2184) + "                    " + message_str(SCRIPT_OBJ_DUDE, 303) + " " + get_sfall_global_int(2185) + "                      " + message_str(SCRIPT_OBJ_DUDE, 304) + " " + get_sfall_global_int(2186) + "                           " + get_sfall_global_int(2198) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node162, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node163, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node164, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node165, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node163
begin
    set_sfall_global(2185, get_sfall_global_int(2185) - 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 302) + " " + get_sfall_global_int(2184) + "                    " + message_str(SCRIPT_OBJ_DUDE, 303) + " " + get_sfall_global_int(2185) + "                      " + message_str(SCRIPT_OBJ_DUDE, 304) + " " + get_sfall_global_int(2186) + "                           " + get_sfall_global_int(2198) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node162, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node163, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node164, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node165, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node164
begin
    set_sfall_global(2185, get_sfall_global_int(2185) + 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 302) + " " + get_sfall_global_int(2184) + "                    " + message_str(SCRIPT_OBJ_DUDE, 303) + " " + get_sfall_global_int(2185) + "                      " + message_str(SCRIPT_OBJ_DUDE, 304) + " " + get_sfall_global_int(2186) + "                           " + get_sfall_global_int(2198) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node162, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node163, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node164, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node165, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node165
begin
    set_sfall_global(2185, get_sfall_global_int(2185) + 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 302) + " " + get_sfall_global_int(2184) + "                    " + message_str(SCRIPT_OBJ_DUDE, 303) + " " + get_sfall_global_int(2185) + "                      " + message_str(SCRIPT_OBJ_DUDE, 304) + " " + get_sfall_global_int(2186) + "                           " + get_sfall_global_int(2198) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node162, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node163, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node164, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node165, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node166
begin
    set_sfall_global(2186, get_sfall_global_int(2186) - 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 302) + " " + get_sfall_global_int(2184) + "                    " + message_str(SCRIPT_OBJ_DUDE, 303) + " " + get_sfall_global_int(2185) + "                      " + message_str(SCRIPT_OBJ_DUDE, 304) + " " + get_sfall_global_int(2186) + "                           " + get_sfall_global_int(2198) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node166, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node167, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node168, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node169, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node167
begin
    set_sfall_global(2186, get_sfall_global_int(2186) - 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 302) + " " + get_sfall_global_int(2184) + "                    " + message_str(SCRIPT_OBJ_DUDE, 303) + " " + get_sfall_global_int(2185) + "                      " + message_str(SCRIPT_OBJ_DUDE, 304) + " " + get_sfall_global_int(2186) + "                           " + get_sfall_global_int(2198) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node166, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node167, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node168, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node169, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node168
begin
    set_sfall_global(2186, get_sfall_global_int(2186) + 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 302) + " " + get_sfall_global_int(2184) + "                    " + message_str(SCRIPT_OBJ_DUDE, 303) + " " + get_sfall_global_int(2185) + "                      " + message_str(SCRIPT_OBJ_DUDE, 304) + " " + get_sfall_global_int(2186) + "                           " + get_sfall_global_int(2198) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node166, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node167, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node168, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node169, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node169
begin
    set_sfall_global(2186, get_sfall_global_int(2186) + 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 302) + " " + get_sfall_global_int(2184) + "                    " + message_str(SCRIPT_OBJ_DUDE, 303) + " " + get_sfall_global_int(2185) + "                      " + message_str(SCRIPT_OBJ_DUDE, 304) + " " + get_sfall_global_int(2186) + "                           " + get_sfall_global_int(2198) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node166, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node167, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node168, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node169, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node170
begin
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 257) + " " + get_sfall_global_int(2161) + "                             " + message_str(SCRIPT_OBJ_DUDE, 258) + " " + get_sfall_global_int(2162) + "                          " + message_str(SCRIPT_OBJ_DUDE, 284) + " " + get_sfall_global_int(2163) + "                             " + message_str(SCRIPT_OBJ_DUDE, 259) + " " + get_sfall_global_int(2164) + "                             " + message_str(SCRIPT_OBJ_DUDE, 260) + " " + get_sfall_global_int(2165) + "                          " + message_str(SCRIPT_OBJ_DUDE, 290) + " " + get_sfall_global_int(2166) + "                          " + message_str(SCRIPT_OBJ_DUDE, 261) + " " + get_sfall_global_int(2167) + "                        " + message_str(SCRIPT_OBJ_DUDE, 262) + " " + get_sfall_global_int(2168) + "                    " + message_str(SCRIPT_OBJ_DUDE, 291) + " " + get_sfall_global_int(2169) + "                    " + message_str(SCRIPT_OBJ_DUDE, 263) + " " + get_sfall_global_int(2170) + "                         " + message_str(SCRIPT_OBJ_DUDE, 264) + " " + get_sfall_global_int(2171) + "                     " + message_str(SCRIPT_OBJ_DUDE, 292) + " " + get_sfall_global_int(2172) + "                     " + message_str(SCRIPT_OBJ_DUDE, 265) + " " + get_sfall_global_int(2173) + "                            " + message_str(SCRIPT_OBJ_DUDE, 266) + " " + get_sfall_global_int(2174) + "                         " + message_str(SCRIPT_OBJ_DUDE, 293) + " " + get_sfall_global_int(2175) + "                         " + message_str(SCRIPT_OBJ_DUDE, 267) + " " + get_sfall_global_int(2176) + "                          " + message_str(SCRIPT_OBJ_DUDE, 268) + " " + get_sfall_global_int(2177) + "                     " + message_str(SCRIPT_OBJ_DUDE, 294) + " " + get_sfall_global_int(2178) + "                            " + message_str(SCRIPT_OBJ_DUDE, 269) + " " + get_sfall_global_int(2179) + "                              " + message_str(SCRIPT_OBJ_DUDE, 270) + " " + get_sfall_global_int(2180) + "                           " + message_str(SCRIPT_OBJ_DUDE, 295) + " " + get_sfall_global_int(2181) + "                           " + message_str(SCRIPT_OBJ_DUDE, 271) + " " + get_sfall_global_int(2182) + "                           " + message_str(SCRIPT_OBJ_DUDE, 296) + " " + get_sfall_global_int(2183) + "                           " + message_str(SCRIPT_OBJ_DUDE, 302) + " " + get_sfall_global_int(2184) + "                    " + message_str(SCRIPT_OBJ_DUDE, 303) + " " + get_sfall_global_int(2185) + "                      " + message_str(SCRIPT_OBJ_DUDE, 304) + " " + get_sfall_global_int(2186) + "                      " + message_str(SCRIPT_OBJ_DUDE, 306) + " " + get_sfall_global_int(2187) + "                           " + message_str(SCRIPT_OBJ_DUDE, 307) + " " + get_sfall_global_int(2188) + "                      " + message_str(SCRIPT_OBJ_DUDE, 308) + " " + get_sfall_global_int(2189) + "                             " + message_str(SCRIPT_OBJ_DUDE, 316) + " " + get_sfall_global_int(4259) + "                              " + message_str(SCRIPT_OBJ_DUDE, 317) + " " + get_sfall_global_int(4260) + "                  " + message_str(SCRIPT_OBJ_DUDE, 318) + " " + get_sfall_global_int(4261) + "                      " + message_str(SCRIPT_OBJ_DUDE, 321) + " " + get_sfall_global_int(4297) + "                       " + message_str(SCRIPT_OBJ_DUDE, 322) + " " + get_sfall_global_int(4298) + "                " + message_str(SCRIPT_OBJ_DUDE, 323) + " " + get_sfall_global_int(4299));
    giq_option(1, SCRIPT_OBJ_DUDE, 247, Node024, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 282, Node025, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 248, Node026, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 305, Node153, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 310, Node171, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 233, Node223, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node171
begin
    gsay_reply(SCRIPT_OBJ_DUDE, 309);
    giq_option(1, SCRIPT_OBJ_DUDE, 233, Node172, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 283, Node109, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node172
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 306) + " " + get_sfall_global_int(2187) + "                           " + message_str(SCRIPT_OBJ_DUDE, 307) + " " + get_sfall_global_int(2188) + "                      " + message_str(SCRIPT_OBJ_DUDE, 308) + " " + get_sfall_global_int(2189) + "                              " + get_sfall_global_int(2199) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 272, Node173, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 273, Node174, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 285, Node175, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node173
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 306) + " " + get_sfall_global_int(2187) + "                           " + message_str(SCRIPT_OBJ_DUDE, 307) + " " + get_sfall_global_int(2188) + "                      " + message_str(SCRIPT_OBJ_DUDE, 308) + " " + get_sfall_global_int(2189) + "                              " + get_sfall_global_int(2199) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node176, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node177, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node178, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node179, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node174
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 306) + " " + get_sfall_global_int(2187) + "                           " + message_str(SCRIPT_OBJ_DUDE, 307) + " " + get_sfall_global_int(2188) + "                      " + message_str(SCRIPT_OBJ_DUDE, 308) + " " + get_sfall_global_int(2189) + "                              " + get_sfall_global_int(2199) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node180, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node181, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node182, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node183, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node175
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 306) + " " + get_sfall_global_int(2187) + "                           " + message_str(SCRIPT_OBJ_DUDE, 307) + " " + get_sfall_global_int(2188) + "                      " + message_str(SCRIPT_OBJ_DUDE, 308) + " " + get_sfall_global_int(2189) + "                              " + get_sfall_global_int(2199) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node184, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node185, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node186, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node187, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node176
begin
    set_sfall_global(2187, get_sfall_global_int(2187) - 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 306) + " " + get_sfall_global_int(2187) + "                           " + message_str(SCRIPT_OBJ_DUDE, 307) + " " + get_sfall_global_int(2188) + "                      " + message_str(SCRIPT_OBJ_DUDE, 308) + " " + get_sfall_global_int(2189) + "                              " + get_sfall_global_int(2199) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node176, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node177, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node178, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node179, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node177
begin
    set_sfall_global(2187, get_sfall_global_int(2187) - 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 306) + " " + get_sfall_global_int(2187) + "                           " + message_str(SCRIPT_OBJ_DUDE, 307) + " " + get_sfall_global_int(2188) + "                      " + message_str(SCRIPT_OBJ_DUDE, 308) + " " + get_sfall_global_int(2189) + "                              " + get_sfall_global_int(2199) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node176, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node177, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node178, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node179, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node178
begin
    set_sfall_global(2187, get_sfall_global_int(2187) + 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 306) + " " + get_sfall_global_int(2187) + "                           " + message_str(SCRIPT_OBJ_DUDE, 307) + " " + get_sfall_global_int(2188) + "                      " + message_str(SCRIPT_OBJ_DUDE, 308) + " " + get_sfall_global_int(2189) + "                              " + get_sfall_global_int(2199) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node176, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node177, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node178, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node179, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node179
begin
    set_sfall_global(2187, get_sfall_global_int(2187) + 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 306) + " " + get_sfall_global_int(2187) + "                           " + message_str(SCRIPT_OBJ_DUDE, 307) + " " + get_sfall_global_int(2188) + "                      " + message_str(SCRIPT_OBJ_DUDE, 308) + " " + get_sfall_global_int(2189) + "                              " + get_sfall_global_int(2199) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node176, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node177, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node178, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node179, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node180
begin
    set_sfall_global(2188, get_sfall_global_int(2188) - 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 306) + " " + get_sfall_global_int(2187) + "                           " + message_str(SCRIPT_OBJ_DUDE, 307) + " " + get_sfall_global_int(2188) + "                      " + message_str(SCRIPT_OBJ_DUDE, 308) + " " + get_sfall_global_int(2189) + "                              " + get_sfall_global_int(2199) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node180, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node181, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node182, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node183, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node181
begin
    set_sfall_global(2188, get_sfall_global_int(2188) - 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 306) + " " + get_sfall_global_int(2187) + "                           " + message_str(SCRIPT_OBJ_DUDE, 307) + " " + get_sfall_global_int(2188) + "                      " + message_str(SCRIPT_OBJ_DUDE, 308) + " " + get_sfall_global_int(2189) + "                              " + get_sfall_global_int(2199) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node180, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node181, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node182, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node183, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node182
begin
    set_sfall_global(2188, get_sfall_global_int(2188) + 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 306) + " " + get_sfall_global_int(2187) + "                           " + message_str(SCRIPT_OBJ_DUDE, 307) + " " + get_sfall_global_int(2188) + "                      " + message_str(SCRIPT_OBJ_DUDE, 308) + " " + get_sfall_global_int(2189) + "                              " + get_sfall_global_int(2199) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node180, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node181, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node182, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node183, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node183
begin
    set_sfall_global(2188, get_sfall_global_int(2188) + 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 306) + " " + get_sfall_global_int(2187) + "                           " + message_str(SCRIPT_OBJ_DUDE, 307) + " " + get_sfall_global_int(2188) + "                      " + message_str(SCRIPT_OBJ_DUDE, 308) + " " + get_sfall_global_int(2189) + "                              " + get_sfall_global_int(2199) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node180, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node181, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node182, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node183, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node184
begin
    set_sfall_global(2189, get_sfall_global_int(2189) - 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 306) + " " + get_sfall_global_int(2187) + "                           " + message_str(SCRIPT_OBJ_DUDE, 307) + " " + get_sfall_global_int(2188) + "                      " + message_str(SCRIPT_OBJ_DUDE, 308) + " " + get_sfall_global_int(2189) + "                              " + get_sfall_global_int(2199) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node184, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node185, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node186, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node187, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node185
begin
    set_sfall_global(2189, get_sfall_global_int(2189) - 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 306) + " " + get_sfall_global_int(2187) + "                           " + message_str(SCRIPT_OBJ_DUDE, 307) + " " + get_sfall_global_int(2188) + "                      " + message_str(SCRIPT_OBJ_DUDE, 308) + " " + get_sfall_global_int(2189) + "                              " + get_sfall_global_int(2199) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node184, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node185, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node186, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node187, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node186
begin
    set_sfall_global(2189, get_sfall_global_int(2189) + 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 306) + " " + get_sfall_global_int(2187) + "                           " + message_str(SCRIPT_OBJ_DUDE, 307) + " " + get_sfall_global_int(2188) + "                      " + message_str(SCRIPT_OBJ_DUDE, 308) + " " + get_sfall_global_int(2189) + "                              " + get_sfall_global_int(2199) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node184, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node185, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node186, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node187, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node187
begin
    set_sfall_global(2189, get_sfall_global_int(2189) + 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 306) + " " + get_sfall_global_int(2187) + "                           " + message_str(SCRIPT_OBJ_DUDE, 307) + " " + get_sfall_global_int(2188) + "                      " + message_str(SCRIPT_OBJ_DUDE, 308) + " " + get_sfall_global_int(2189) + "                              " + get_sfall_global_int(2199) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node184, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node185, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node186, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node187, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node188
begin
    if (get_sfall_global_int(2200) == 0) then begin
        set_sfall_global(2200, 1);
    end
    else begin
        if (get_sfall_global_int(2200) == 1) then begin
            set_sfall_global(2200, 0);
        end
    end
    call Node223();
end

procedure Node189
begin
    gsay_reply(SCRIPT_OBJ_DUDE, 319);
    giq_option(1, SCRIPT_OBJ_DUDE, 233, Node190, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 283, Node109, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node190
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 316) + " " + get_sfall_global_int(4259) + "                           " + message_str(SCRIPT_OBJ_DUDE, 317) + " " + get_sfall_global_int(4260) + "                      " + message_str(SCRIPT_OBJ_DUDE, 318) + " " + get_sfall_global_int(4261) + "                              " + get_sfall_global_int(4262) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 272, Node191, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 273, Node192, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 285, Node193, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node191
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 316) + " " + get_sfall_global_int(4259) + "                           " + message_str(SCRIPT_OBJ_DUDE, 317) + " " + get_sfall_global_int(4260) + "                      " + message_str(SCRIPT_OBJ_DUDE, 318) + " " + get_sfall_global_int(4261) + "                              " + get_sfall_global_int(4262) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node194, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node195, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node196, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node197, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node192
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 316) + " " + get_sfall_global_int(4259) + "                           " + message_str(SCRIPT_OBJ_DUDE, 317) + " " + get_sfall_global_int(4260) + "                      " + message_str(SCRIPT_OBJ_DUDE, 318) + " " + get_sfall_global_int(4261) + "                              " + get_sfall_global_int(4262) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node198, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node199, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node200, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node201, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node193
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 316) + " " + get_sfall_global_int(4259) + "                           " + message_str(SCRIPT_OBJ_DUDE, 317) + " " + get_sfall_global_int(4260) + "                      " + message_str(SCRIPT_OBJ_DUDE, 318) + " " + get_sfall_global_int(4261) + "                              " + get_sfall_global_int(4262) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node202, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node203, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node204, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node205, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node194
begin
    set_sfall_global(4259, get_sfall_global_int(4259) - 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 316) + " " + get_sfall_global_int(4259) + "                           " + message_str(SCRIPT_OBJ_DUDE, 317) + " " + get_sfall_global_int(4260) + "                      " + message_str(SCRIPT_OBJ_DUDE, 318) + " " + get_sfall_global_int(4261) + "                              " + get_sfall_global_int(4262) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node194, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node195, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node196, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node197, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node195
begin
    set_sfall_global(4259, get_sfall_global_int(4259) - 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 316) + " " + get_sfall_global_int(4259) + "                           " + message_str(SCRIPT_OBJ_DUDE, 317) + " " + get_sfall_global_int(4260) + "                      " + message_str(SCRIPT_OBJ_DUDE, 318) + " " + get_sfall_global_int(4261) + "                              " + get_sfall_global_int(4262) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node194, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node195, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node196, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node197, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node196
begin
    set_sfall_global(4259, get_sfall_global_int(4259) + 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 316) + " " + get_sfall_global_int(4259) + "                           " + message_str(SCRIPT_OBJ_DUDE, 317) + " " + get_sfall_global_int(4260) + "                      " + message_str(SCRIPT_OBJ_DUDE, 318) + " " + get_sfall_global_int(4261) + "                              " + get_sfall_global_int(4262) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node194, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node195, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node196, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node197, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node197
begin
    set_sfall_global(4259, get_sfall_global_int(4259) + 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 316) + " " + get_sfall_global_int(4259) + "                           " + message_str(SCRIPT_OBJ_DUDE, 317) + " " + get_sfall_global_int(4260) + "                      " + message_str(SCRIPT_OBJ_DUDE, 318) + " " + get_sfall_global_int(4261) + "                              " + get_sfall_global_int(4262) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node194, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node195, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node196, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node197, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node198
begin
    set_sfall_global(4260, get_sfall_global_int(4260) - 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 316) + " " + get_sfall_global_int(4259) + "                           " + message_str(SCRIPT_OBJ_DUDE, 317) + " " + get_sfall_global_int(4260) + "                      " + message_str(SCRIPT_OBJ_DUDE, 318) + " " + get_sfall_global_int(4261) + "                              " + get_sfall_global_int(4262) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node198, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node199, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node200, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node201, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node199
begin
    set_sfall_global(4260, get_sfall_global_int(4260) - 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 316) + " " + get_sfall_global_int(4259) + "                           " + message_str(SCRIPT_OBJ_DUDE, 317) + " " + get_sfall_global_int(4260) + "                      " + message_str(SCRIPT_OBJ_DUDE, 318) + " " + get_sfall_global_int(4261) + "                              " + get_sfall_global_int(4262) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node198, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node199, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node200, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node201, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node200
begin
    set_sfall_global(4260, get_sfall_global_int(4260) + 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 316) + " " + get_sfall_global_int(4259) + "                           " + message_str(SCRIPT_OBJ_DUDE, 317) + " " + get_sfall_global_int(4260) + "                      " + message_str(SCRIPT_OBJ_DUDE, 318) + " " + get_sfall_global_int(4261) + "                              " + get_sfall_global_int(4262) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node198, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node199, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node200, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node201, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node201
begin
    set_sfall_global(4260, get_sfall_global_int(4260) + 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 316) + " " + get_sfall_global_int(4259) + "                           " + message_str(SCRIPT_OBJ_DUDE, 317) + " " + get_sfall_global_int(4260) + "                      " + message_str(SCRIPT_OBJ_DUDE, 318) + " " + get_sfall_global_int(4261) + "                              " + get_sfall_global_int(4262) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node198, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node199, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node200, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node201, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node202
begin
    set_sfall_global(4261, get_sfall_global_int(4261) - 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 316) + " " + get_sfall_global_int(4259) + "                           " + message_str(SCRIPT_OBJ_DUDE, 317) + " " + get_sfall_global_int(4260) + "                      " + message_str(SCRIPT_OBJ_DUDE, 318) + " " + get_sfall_global_int(4261) + "                              " + get_sfall_global_int(4262) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node202, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node203, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node204, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node205, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node203
begin
    set_sfall_global(4261, get_sfall_global_int(4261) - 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 316) + " " + get_sfall_global_int(4259) + "                           " + message_str(SCRIPT_OBJ_DUDE, 317) + " " + get_sfall_global_int(4260) + "                      " + message_str(SCRIPT_OBJ_DUDE, 318) + " " + get_sfall_global_int(4261) + "                              " + get_sfall_global_int(4262) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node202, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node203, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node204, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node205, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node204
begin
    set_sfall_global(4261, get_sfall_global_int(4261) + 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 316) + " " + get_sfall_global_int(4259) + "                           " + message_str(SCRIPT_OBJ_DUDE, 317) + " " + get_sfall_global_int(4260) + "                      " + message_str(SCRIPT_OBJ_DUDE, 318) + " " + get_sfall_global_int(4261) + "                              " + get_sfall_global_int(4262) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node202, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node203, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node204, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node205, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node205
begin
    set_sfall_global(4261, get_sfall_global_int(4261) + 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 316) + " " + get_sfall_global_int(4259) + "                           " + message_str(SCRIPT_OBJ_DUDE, 317) + " " + get_sfall_global_int(4260) + "                      " + message_str(SCRIPT_OBJ_DUDE, 318) + " " + get_sfall_global_int(4261) + "                              " + get_sfall_global_int(4262) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node202, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node203, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node204, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node205, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node206
begin
    gsay_reply(SCRIPT_OBJ_DUDE, 324);
    giq_option(1, SCRIPT_OBJ_DUDE, 233, Node207, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 283, Node109, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node207
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 321) + " " + get_sfall_global_int(4297) + "                         " + message_str(SCRIPT_OBJ_DUDE, 322) + " " + get_sfall_global_int(4298) + "                  " + message_str(SCRIPT_OBJ_DUDE, 323) + " " + get_sfall_global_int(4299) + "                          " + get_sfall_global_int(4300) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 272, Node208, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 273, Node209, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 285, Node210, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node208
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 321) + " " + get_sfall_global_int(4297) + "                         " + message_str(SCRIPT_OBJ_DUDE, 322) + " " + get_sfall_global_int(4298) + "                  " + message_str(SCRIPT_OBJ_DUDE, 323) + " " + get_sfall_global_int(4299) + "                          " + get_sfall_global_int(4300) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node211, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node212, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node213, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node214, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node209
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 321) + " " + get_sfall_global_int(4297) + "                         " + message_str(SCRIPT_OBJ_DUDE, 322) + " " + get_sfall_global_int(4298) + "                  " + message_str(SCRIPT_OBJ_DUDE, 323) + " " + get_sfall_global_int(4299) + "                          " + get_sfall_global_int(4300) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node215, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node216, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node217, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node218, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node210
begin
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 321) + " " + get_sfall_global_int(4297) + "                         " + message_str(SCRIPT_OBJ_DUDE, 322) + " " + get_sfall_global_int(4298) + "                  " + message_str(SCRIPT_OBJ_DUDE, 323) + " " + get_sfall_global_int(4299) + "                          " + get_sfall_global_int(4300) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node219, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node220, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node221, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node222, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node211
begin
    set_sfall_global(4297, get_sfall_global_int(4297) - 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 321) + " " + get_sfall_global_int(4297) + "                         " + message_str(SCRIPT_OBJ_DUDE, 322) + " " + get_sfall_global_int(4298) + "                  " + message_str(SCRIPT_OBJ_DUDE, 323) + " " + get_sfall_global_int(4299) + "                          " + get_sfall_global_int(4300) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node211, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node212, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node213, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node214, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node212
begin
    set_sfall_global(4297, get_sfall_global_int(4297) - 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 321) + " " + get_sfall_global_int(4297) + "                         " + message_str(SCRIPT_OBJ_DUDE, 322) + " " + get_sfall_global_int(4298) + "                  " + message_str(SCRIPT_OBJ_DUDE, 323) + " " + get_sfall_global_int(4299) + "                          " + get_sfall_global_int(4300) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node211, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node212, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node213, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node214, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node213
begin
    set_sfall_global(4297, get_sfall_global_int(4297) + 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 321) + " " + get_sfall_global_int(4297) + "                         " + message_str(SCRIPT_OBJ_DUDE, 322) + " " + get_sfall_global_int(4298) + "                  " + message_str(SCRIPT_OBJ_DUDE, 323) + " " + get_sfall_global_int(4299) + "                          " + get_sfall_global_int(4300) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node211, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node212, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node213, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node214, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node214
begin
    set_sfall_global(4297, get_sfall_global_int(4297) + 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 321) + " " + get_sfall_global_int(4297) + "                         " + message_str(SCRIPT_OBJ_DUDE, 322) + " " + get_sfall_global_int(4298) + "                  " + message_str(SCRIPT_OBJ_DUDE, 323) + " " + get_sfall_global_int(4299) + "                          " + get_sfall_global_int(4300) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 274, Node211, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 275, Node212, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 276, Node213, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 277, Node214, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node215
begin
    set_sfall_global(4298, get_sfall_global_int(4298) - 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 321) + " " + get_sfall_global_int(4297) + "                         " + message_str(SCRIPT_OBJ_DUDE, 322) + " " + get_sfall_global_int(4298) + "                  " + message_str(SCRIPT_OBJ_DUDE, 323) + " " + get_sfall_global_int(4299) + "                          " + get_sfall_global_int(4300) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node215, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node216, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node217, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node218, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node216
begin
    set_sfall_global(4298, get_sfall_global_int(4298) - 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 321) + " " + get_sfall_global_int(4297) + "                         " + message_str(SCRIPT_OBJ_DUDE, 322) + " " + get_sfall_global_int(4298) + "                  " + message_str(SCRIPT_OBJ_DUDE, 323) + " " + get_sfall_global_int(4299) + "                          " + get_sfall_global_int(4300) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node215, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node216, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node217, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node218, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node217
begin
    set_sfall_global(4298, get_sfall_global_int(4298) + 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 321) + " " + get_sfall_global_int(4297) + "                         " + message_str(SCRIPT_OBJ_DUDE, 322) + " " + get_sfall_global_int(4298) + "                  " + message_str(SCRIPT_OBJ_DUDE, 323) + " " + get_sfall_global_int(4299) + "                          " + get_sfall_global_int(4300) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node215, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node216, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node217, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node218, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node218
begin
    set_sfall_global(4298, get_sfall_global_int(4298) + 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 321) + " " + get_sfall_global_int(4297) + "                         " + message_str(SCRIPT_OBJ_DUDE, 322) + " " + get_sfall_global_int(4298) + "                  " + message_str(SCRIPT_OBJ_DUDE, 323) + " " + get_sfall_global_int(4299) + "                          " + get_sfall_global_int(4300) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 278, Node215, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 279, Node216, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 280, Node217, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 281, Node218, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node219
begin
    set_sfall_global(4299, get_sfall_global_int(4299) - 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 321) + " " + get_sfall_global_int(4297) + "                         " + message_str(SCRIPT_OBJ_DUDE, 322) + " " + get_sfall_global_int(4298) + "                  " + message_str(SCRIPT_OBJ_DUDE, 323) + " " + get_sfall_global_int(4299) + "                          " + get_sfall_global_int(4300) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node219, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node220, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node221, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node222, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node220
begin
    set_sfall_global(4299, get_sfall_global_int(4299) - 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 321) + " " + get_sfall_global_int(4297) + "                         " + message_str(SCRIPT_OBJ_DUDE, 322) + " " + get_sfall_global_int(4298) + "                  " + message_str(SCRIPT_OBJ_DUDE, 323) + " " + get_sfall_global_int(4299) + "                          " + get_sfall_global_int(4300) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node219, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node220, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node221, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node222, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node221
begin
    set_sfall_global(4299, get_sfall_global_int(4299) + 1);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 321) + " " + get_sfall_global_int(4297) + "                         " + message_str(SCRIPT_OBJ_DUDE, 322) + " " + get_sfall_global_int(4298) + "                  " + message_str(SCRIPT_OBJ_DUDE, 323) + " " + get_sfall_global_int(4299) + "                          " + get_sfall_global_int(4300) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node219, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node220, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node221, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node222, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node222
begin
    set_sfall_global(4299, get_sfall_global_int(4299) + 5);
    call CalculateBonuses();
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 321) + " " + get_sfall_global_int(4297) + "                         " + message_str(SCRIPT_OBJ_DUDE, 322) + " " + get_sfall_global_int(4298) + "                  " + message_str(SCRIPT_OBJ_DUDE, 323) + " " + get_sfall_global_int(4299) + "                          " + get_sfall_global_int(4300) + message_str(SCRIPT_OBJ_DUDE, 299) + get_pc_stat(PCSTAT_level) + message_str(SCRIPT_OBJ_DUDE, 300));
    giq_option(1, SCRIPT_OBJ_DUDE, 286, Node219, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 287, Node220, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 288, Node221, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 289, Node222, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node018, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node223
begin
    gsay_reply(SCRIPT_OBJ_DUDE, message_str(SCRIPT_OBJ_DUDE, 257) + " " + get_sfall_global_int(2161) + "                             " + message_str(SCRIPT_OBJ_DUDE, 258) + " " + get_sfall_global_int(2162) + "                          " + message_str(SCRIPT_OBJ_DUDE, 284) + " " + get_sfall_global_int(2163) + "                             " + message_str(SCRIPT_OBJ_DUDE, 259) + " " + get_sfall_global_int(2164) + "                             " + message_str(SCRIPT_OBJ_DUDE, 260) + " " + get_sfall_global_int(2165) + "                          " + message_str(SCRIPT_OBJ_DUDE, 290) + " " + get_sfall_global_int(2166) + "                          " + message_str(SCRIPT_OBJ_DUDE, 261) + " " + get_sfall_global_int(2167) + "                        " + message_str(SCRIPT_OBJ_DUDE, 262) + " " + get_sfall_global_int(2168) + "                    " + message_str(SCRIPT_OBJ_DUDE, 291) + " " + get_sfall_global_int(2169) + "                    " + message_str(SCRIPT_OBJ_DUDE, 263) + " " + get_sfall_global_int(2170) + "                         " + message_str(SCRIPT_OBJ_DUDE, 264) + " " + get_sfall_global_int(2171) + "                     " + message_str(SCRIPT_OBJ_DUDE, 292) + " " + get_sfall_global_int(2172) + "                     " + message_str(SCRIPT_OBJ_DUDE, 265) + " " + get_sfall_global_int(2173) + "                            " + message_str(SCRIPT_OBJ_DUDE, 266) + " " + get_sfall_global_int(2174) + "                         " + message_str(SCRIPT_OBJ_DUDE, 293) + " " + get_sfall_global_int(2175) + "                         " + message_str(SCRIPT_OBJ_DUDE, 267) + " " + get_sfall_global_int(2176) + "                          " + message_str(SCRIPT_OBJ_DUDE, 268) + " " + get_sfall_global_int(2177) + "                     " + message_str(SCRIPT_OBJ_DUDE, 294) + " " + get_sfall_global_int(2178) + "                            " + message_str(SCRIPT_OBJ_DUDE, 269) + " " + get_sfall_global_int(2179) + "                              " + message_str(SCRIPT_OBJ_DUDE, 270) + " " + get_sfall_global_int(2180) + "                           " + message_str(SCRIPT_OBJ_DUDE, 295) + " " + get_sfall_global_int(2181) + "                           " + message_str(SCRIPT_OBJ_DUDE, 271) + " " + get_sfall_global_int(2182) + "                           " + message_str(SCRIPT_OBJ_DUDE, 296) + " " + get_sfall_global_int(2183) + "                           " + message_str(SCRIPT_OBJ_DUDE, 302) + " " + get_sfall_global_int(2184) + "                    " + message_str(SCRIPT_OBJ_DUDE, 303) + " " + get_sfall_global_int(2185) + "                      " + message_str(SCRIPT_OBJ_DUDE, 304) + " " + get_sfall_global_int(2186) + "                      " + message_str(SCRIPT_OBJ_DUDE, 306) + " " + get_sfall_global_int(2187) + "                           " + message_str(SCRIPT_OBJ_DUDE, 307) + " " + get_sfall_global_int(2188) + "                      " + message_str(SCRIPT_OBJ_DUDE, 308) + " " + get_sfall_global_int(2189) + "                             " + message_str(SCRIPT_OBJ_DUDE, 316) + " " + get_sfall_global_int(4259) + "                              " + message_str(SCRIPT_OBJ_DUDE, 317) + " " + get_sfall_global_int(4260) + "                  " + message_str(SCRIPT_OBJ_DUDE, 318) + " " + get_sfall_global_int(4261) + "                      " + message_str(SCRIPT_OBJ_DUDE, 321) + " " + get_sfall_global_int(4297) + "                       " + message_str(SCRIPT_OBJ_DUDE, 322) + " " + get_sfall_global_int(4298) + "                " + message_str(SCRIPT_OBJ_DUDE, 323) + " " + get_sfall_global_int(4299));
    giq_option(1, SCRIPT_OBJ_DUDE, 320, Node189, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 325, Node206, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node170, NEUTRAL_REACTION);
    if (get_sfall_global_int(2200) == 0) then begin
        giq_option(1, SCRIPT_OBJ_DUDE, 314, Node188, NEUTRAL_REACTION);
    end
    else begin
        if (get_sfall_global_int(2200) == 1) then begin
            giq_option(1, SCRIPT_OBJ_DUDE, 315, Node188, NEUTRAL_REACTION);
        end
    end
    if (get_sfall_global_int(4306) == 0) then begin
        giq_option(1, SCRIPT_OBJ_DUDE, 327, Node224, NEUTRAL_REACTION);
    end
    else begin
        if (get_sfall_global_int(4306) == 1) then begin
            giq_option(1, SCRIPT_OBJ_DUDE, 326, Node224, NEUTRAL_REACTION);
        end
    end
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Node224
begin
    if (get_sfall_global_int(4306) == 0) then begin
        set_sfall_global(4306, 1);
    end
    else begin
        if (get_sfall_global_int(4306) == 1) then begin
            set_sfall_global(4306, 0);
        end
    end
    call Node223();
end

procedure Node225
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    LVar0 := get_pc_stat(PCSTAT_level);
    if ((get_sfall_global_int(126) == 1) and (has_trait(TRAIT_PERK, dude_obj, PERK_swift_learner) == 5)) then begin
        LVar1 := LVar0 * 1000 / 2;
    end
    else begin
        LVar1 := LVar0 * 1000;
    end
    give_exp_points(LVar1);
    display_msg("You gain " + LVar1 + " experience");
    item_caps_adjust(dude_obj, 30000);
    call Node231();
end

procedure Node226
begin
    call Hint_Book();
    call Node231();
end

procedure Node227
begin
    set_sfall_global("nirran_5", 0);
    call Node231();
end

procedure Node228
begin
    if (party_member_obj(16777376) != 0) then begin
        animate_move_obj_to_tile(party_member_obj(16777376), tile_num_in_direction(dude_tile, random(0, 5), 10), 1);
    end
    if (party_member_obj(16777377) != 0) then begin
        animate_move_obj_to_tile(party_member_obj(16777377), tile_num_in_direction(dude_tile, random(0, 5), 10), 1);
    end
    if (party_member_obj(16777305) != 0) then begin
        animate_move_obj_to_tile(party_member_obj(16777305), tile_num_in_direction(dude_tile, random(0, 5), 10), 1);
    end
    if (party_member_obj(16777313) != 0) then begin
        animate_move_obj_to_tile(party_member_obj(16777313), tile_num_in_direction(dude_tile, random(0, 5), 10), 1);
    end
    if (party_member_obj(16777323) != 0) then begin
        animate_move_obj_to_tile(party_member_obj(16777323), tile_num_in_direction(dude_tile, random(0, 5), 10), 1);
    end
    if (party_member_obj(16777352) != 0) then begin
        animate_move_obj_to_tile(party_member_obj(16777352), tile_num_in_direction(dude_tile, random(0, 5), 10), 1);
    end
    if (party_member_obj(16777859) != 0) then begin
        animate_move_obj_to_tile(party_member_obj(16777859), tile_num_in_direction(dude_tile, random(0, 5), 10), 1);
    end
    if (party_member_obj(16777368) != 0) then begin
        animate_move_obj_to_tile(party_member_obj(16777368), tile_num_in_direction(dude_tile, random(0, 5), 10), 1);
    end
    if (party_member_obj(16777379) != 0) then begin
        animate_move_obj_to_tile(party_member_obj(16777379), tile_num_in_direction(dude_tile, random(0, 5), 10), 1);
    end
    if (party_member_obj(16777380) != 0) then begin
        animate_move_obj_to_tile(party_member_obj(16777380), tile_num_in_direction(dude_tile, random(0, 5), 10), 1);
    end
    if (party_member_obj(16777381) != 0) then begin
        animate_move_obj_to_tile(party_member_obj(16777381), tile_num_in_direction(dude_tile, random(0, 5), 10), 1);
    end
    if (party_member_obj(16777295) != 0) then begin
        animate_move_obj_to_tile(party_member_obj(16777295), tile_num_in_direction(dude_tile, random(0, 5), 10), 1);
    end
    if (party_member_obj(16777278) != 0) then begin
        animate_move_obj_to_tile(party_member_obj(16777278), tile_num_in_direction(dude_tile, random(0, 5), 10), 1);
    end
    if (party_member_obj(16777407) != 0) then begin
        animate_move_obj_to_tile(party_member_obj(16777407), tile_num_in_direction(dude_tile, random(0, 5), 10), 1);
    end
    if (party_member_obj(16777411) != 0) then begin
        animate_move_obj_to_tile(party_member_obj(16777411), tile_num_in_direction(dude_tile, random(0, 5), 10), 1);
    end
    if (party_member_obj(16777412) != 0) then begin
        animate_move_obj_to_tile(party_member_obj(16777412), tile_num_in_direction(dude_tile, random(0, 5), 10), 1);
    end
    if (party_member_obj(16777413) != 0) then begin
        animate_move_obj_to_tile(party_member_obj(16777413), tile_num_in_direction(dude_tile, random(0, 5), 10), 1);
    end
    if (party_member_obj(16777481) != 0) then begin
        animate_move_obj_to_tile(party_member_obj(16777481), tile_num_in_direction(dude_tile, random(0, 5), 10), 1);
    end
    if (party_member_obj(16777558) != 0) then begin
        animate_move_obj_to_tile(party_member_obj(16777558), tile_num_in_direction(dude_tile, random(0, 5), 10), 1);
    end
    if (party_member_obj(16777597) != 0) then begin
        animate_move_obj_to_tile(party_member_obj(16777597), tile_num_in_direction(dude_tile, random(0, 5), 10), 1);
    end
    if (party_member_obj(16777596) != 0) then begin
        animate_move_obj_to_tile(party_member_obj(16777596), tile_num_in_direction(dude_tile, random(0, 5), 10), 1);
    end
    if (party_member_obj(16777595) != 0) then begin
        animate_move_obj_to_tile(party_member_obj(16777595), tile_num_in_direction(dude_tile, random(0, 5), 10), 1);
    end
    if (party_member_obj(16777600) != 0) then begin
        animate_move_obj_to_tile(party_member_obj(16777600), tile_num_in_direction(dude_tile, random(0, 5), 10), 1);
    end
    if (party_member_obj(16777687) != 0) then begin
        animate_move_obj_to_tile(party_member_obj(16777687), tile_num_in_direction(dude_tile, random(0, 5), 10), 1);
    end
    if (party_member_obj(16777785) != 0) then begin
        animate_move_obj_to_tile(party_member_obj(16777785), tile_num_in_direction(dude_tile, random(0, 5), 10), 1);
    end
    if (party_member_obj(16777749) != 0) then begin
        animate_move_obj_to_tile(party_member_obj(16777749), tile_num_in_direction(dude_tile, random(0, 5), 10), 1);
    end
    if (party_member_obj(16777748) != 0) then begin
        animate_move_obj_to_tile(party_member_obj(16777748), tile_num_in_direction(dude_tile, random(0, 5), 10), 1);
    end
    if (party_member_obj(16777747) != 0) then begin
        animate_move_obj_to_tile(party_member_obj(16777747), tile_num_in_direction(dude_tile, random(0, 5), 10), 1);
    end
    if (party_member_obj(16777766) != 0) then begin
        animate_move_obj_to_tile(party_member_obj(16777766), tile_num_in_direction(dude_tile, random(0, 5), 10), 1);
    end
    if (party_member_obj(16777762) != 0) then begin
        animate_move_obj_to_tile(party_member_obj(16777762), tile_num_in_direction(dude_tile, random(0, 5), 10), 1);
    end
end

procedure Node229
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    LVar0 := list_begin(1);
    while (LVar0 != 0) do begin
        LVar1 := list_next(LVar0);
        if (LVar1) then begin
            if ((obj_pid(LVar1) == 272) or (obj_pid(LVar1) == 271) or (obj_pid(LVar1) == 544) or (obj_pid(LVar1) == 548) or (obj_pid(LVar1) == 759) or (obj_pid(LVar1) == 755) or (obj_pid(LVar1) == 796) or (obj_pid(LVar1) == 799) or (obj_pid(LVar1) == 798) or (obj_pid(LVar1) == 797) or (obj_pid(LVar1) == 807) and (elevation(LVar1) == dude_elevation)) then begin
                add_obj_to_inven(dude_obj, LVar1);
            end
        end
        else begin
            list_end(LVar0);
            LVar0 := 0;
        end
    end
end

procedure Critters_All_Dead
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable_all_dead := 0;
    LVar0 := list_begin(0);
    while (LVar0 != 0) do begin
        LVar1 := list_next(LVar0);
        if (LVar1) then begin
            if (((obj_art_fid(LVar1) % 512) == 23) or ((obj_art_fid(LVar1) % 512) == 25) or ((obj_art_fid(LVar1) % 512) == 80) or ((obj_art_fid(LVar1) % 512) == 86) or ((obj_art_fid(LVar1) % 512) == 67) or ((obj_art_fid(LVar1) % 512) == 68) or ((obj_art_fid(LVar1) % 512) == 81) and (elevation(LVar1) == dude_elevation) and not(critter_state(LVar1) bwand 1)) then begin
                variable_all_dead := variable_all_dead + 1;
            end
        end
        else begin
            list_end(LVar0);
            LVar0 := 0;
        end
    end
    if (variable_all_dead == 0) then begin
        return 1;
    end
    else begin
        return 0;
    end
end

procedure Hint_Book
begin
    if (dude_strength < 10) then begin
        set_pc_extra_stat(0, 10 - dude_strength);
    end
    if (dude_perception < 10) then begin
        set_pc_extra_stat(1, 10 - dude_perception);
    end
    if (dude_endurance < 10) then begin
        set_pc_extra_stat(2, 10 - dude_endurance);
    end
    if (dude_charisma < 10) then begin
        set_pc_extra_stat(3, 10 - dude_charisma);
    end
    if (dude_iq < 10) then begin
        set_pc_extra_stat(4, 10 - dude_iq);
    end
    if (get_critter_stat(dude_obj, STAT_ag) < 10) then begin
        set_pc_extra_stat(5, 10 - get_critter_stat(dude_obj, STAT_ag));
    end
    if (dude_luck < 10) then begin
        set_pc_extra_stat(6, 10 - dude_luck);
    end
    if (dude_skill(SKILL_SMALL_GUNS) < 300) then begin
        critter_mod_skill(dude_obj, SKILL_SMALL_GUNS, 300 - dude_skill(SKILL_SMALL_GUNS));
    end
    if (dude_skill(SKILL_BIG_GUNS) < 300) then begin
        critter_mod_skill(dude_obj, SKILL_BIG_GUNS, 300 - dude_skill(SKILL_BIG_GUNS));
    end
    if (dude_skill(SKILL_ENERGY_WEAPONS) < 300) then begin
        critter_mod_skill(dude_obj, SKILL_ENERGY_WEAPONS, 300 - dude_skill(SKILL_ENERGY_WEAPONS));
    end
    if (dude_skill(SKILL_UNARMED_COMBAT) < 300) then begin
        critter_mod_skill(dude_obj, SKILL_UNARMED_COMBAT, 300 - dude_skill(SKILL_UNARMED_COMBAT));
    end
    if (dude_skill(SKILL_MELEE) < 300) then begin
        critter_mod_skill(dude_obj, SKILL_MELEE, 300 - dude_skill(SKILL_MELEE));
    end
    if (dude_skill(SKILL_THROWING) < 300) then begin
        critter_mod_skill(dude_obj, SKILL_THROWING, 300 - dude_skill(SKILL_THROWING));
    end
    if (dude_skill(SKILL_FIRST_AID) < 300) then begin
        critter_mod_skill(dude_obj, SKILL_FIRST_AID, 300 - dude_skill(SKILL_FIRST_AID));
    end
    if (dude_skill(SKILL_DOCTOR) < 300) then begin
        critter_mod_skill(dude_obj, SKILL_DOCTOR, 300 - dude_skill(SKILL_DOCTOR));
    end
    if (dude_skill(SKILL_SNEAK) < 300) then begin
        critter_mod_skill(dude_obj, SKILL_SNEAK, 300 - dude_skill(SKILL_SNEAK));
    end
    if (dude_skill(SKILL_LOCKPICK) < 300) then begin
        critter_mod_skill(dude_obj, SKILL_LOCKPICK, 300 - dude_skill(SKILL_LOCKPICK));
    end
    if (dude_skill(SKILL_STEAL) < 300) then begin
        critter_mod_skill(dude_obj, SKILL_STEAL, 300 - dude_skill(SKILL_STEAL));
    end
    if (dude_skill(SKILL_TRAPS) < 300) then begin
        critter_mod_skill(dude_obj, SKILL_TRAPS, 300 - dude_skill(SKILL_TRAPS));
    end
    if (dude_skill(SKILL_SCIENCE) < 300) then begin
        critter_mod_skill(dude_obj, SKILL_SCIENCE, 300 - dude_skill(SKILL_SCIENCE));
    end
    if (dude_skill(SKILL_REPAIR) < 300) then begin
        critter_mod_skill(dude_obj, SKILL_REPAIR, 300 - dude_skill(SKILL_REPAIR));
    end
    if (dude_skill(SKILL_SPEECH) < 300) then begin
        critter_mod_skill(dude_obj, SKILL_SPEECH, 300 - dude_skill(SKILL_SPEECH));
    end
    if (dude_skill(SKILL_BARTER) < 300) then begin
        critter_mod_skill(dude_obj, SKILL_BARTER, 300 - dude_skill(SKILL_BARTER));
    end
    if (dude_skill(SKILL_GAMBLING) < 300) then begin
        critter_mod_skill(dude_obj, SKILL_GAMBLING, 300 - dude_skill(SKILL_GAMBLING));
    end
    if (dude_skill(SKILL_OUTDOORSMAN) < 300) then begin
        critter_mod_skill(dude_obj, SKILL_OUTDOORSMAN, 300 - dude_skill(SKILL_OUTDOORSMAN));
    end
    call Node231();
end

procedure Herbs_On_Map
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    LVar2 := 0;
    LVar0 := list_begin(1);
    while (LVar0 != 0) do begin
        LVar1 := list_next(LVar0);
        if (LVar1) then begin
            if ((obj_pid(LVar1) == 272) or (obj_pid(LVar1) == 271) or (obj_pid(LVar1) == 544) or (obj_pid(LVar1) == 548) or (obj_pid(LVar1) == 759) or (obj_pid(LVar1) == 755) or (obj_pid(LVar1) == 796) or (obj_pid(LVar1) == 799) or (obj_pid(LVar1) == 798) or (obj_pid(LVar1) == 797) or (obj_pid(LVar1) == 807) and (elevation(LVar1) == dude_elevation)) then begin
                LVar2 := LVar2 + 1;
            end
        end
        else begin
            list_end(LVar0);
            LVar0 := 0;
        end
    end
    if (LVar2 > 0) then begin
        return 1;
    end
    else begin
        return 0;
    end
end

procedure Node999
begin
end

procedure Node230
begin
    if (get_sfall_global_int(4505) == 0) then begin
        set_sfall_global(4505, 1);
    end
    else begin
        if (get_sfall_global_int(4505) == 1) then begin
            set_sfall_global(4505, 0);
        end
    end
    call Node223();
end

procedure Node231
begin
    gsay_reply(SCRIPT_OBJ_DUDE, 336);
    giq_option(1, SCRIPT_OBJ_DUDE, 328, Node225, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 329, Node226, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 337, Bonu_Move_Perks, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 338, thiry_k_gold, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 339, Add_Custom_Perks, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 340, Max_Carry_Weight, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 234, Node001, NEUTRAL_REACTION);
    giq_option(1, SCRIPT_OBJ_DUDE, 235, Node999, NEUTRAL_REACTION);
end

procedure Bonu_Move_Perks
begin
    set_perk_ranks(3, 100);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    critter_add_trait(dude_obj, TRAIT_PERK, PERK_bonus_move, 1);
    if (get_critter_stat(dude_obj, STAT_max_move_points) < 100) then begin
        set_pc_extra_stat(8, 100 - get_critter_stat(dude_obj, STAT_max_move_points));
    end
    call Node231();
end

procedure thiry_k_gold
begin
    item_caps_adjust(dude_obj, 30000);
    call Node231();
end

procedure Add_Custom_Perks
begin
    if (has_fake_perk("Minimum HtH Damage") < 100) then begin
        set_fake_perk("Minimum HtH Damage", 100, 31, "For each level of this perk your minimum damage with hand-to-hand and melee is increased by " + get_sfall_global_int(91) + ".");
    end
    if (has_fake_perk("Grappler") < 2) then begin
        set_fake_perk("Grappler", 2, 171, "You no longer throw your enimies about,your opponents dont either.Rank 2 affects party members and thier opponents.");
    end
    if (has_fake_perk("Knockdown Imunity") < 2) then begin
        set_fake_perk("Knockdown Imunity", 2, 171, "Your stance is practicaly perfect,you cannot be knocked down.Rank 2 grants this effect to all party members.");
    end
    if (has_fake_perk("True Aim") < 5) then begin
        set_fake_perk("True Aim", 5, 28, "+1% to hit and +1% to maximum possible to hit, for all combat skills, for The Chosen One for each rank of this perk.");
    end
    if (get_critter_stat(dude_obj, STAT_melee_dmg) < 500) then begin
        set_pc_extra_stat(11, 500 - get_critter_stat(dude_obj, STAT_melee_dmg));
    end
    call Node231();
end

procedure Max_Carry_Weight
begin
    if (get_critter_stat(dude_obj, STAT_max_hp) < 999) then begin
        set_pc_extra_stat(7, 999 - get_pc_base_stat(7));
    end
    if (get_critter_stat(dude_obj, STAT_carry_amt) < 2000) then begin
        set_pc_extra_stat(12, 2000);
    end
    critter_heal(dude_obj, 999);
    call Node231();
end

procedure Sort_Ammo
begin
    call Node999();
    if (obj_is_carrying_obj_pid(dude_obj, 29) > 0) then begin
        while (obj_is_carrying_obj_pid(dude_obj, 29) > 0) do begin
            rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 29));
            if (tile_contains_obj_pid(0, 1, 29)) then begin
                destroy_object(tile_contains_pid_obj(0, 1, 29));
            end
            add_obj_to_inven(party_member_obj(16777313), create_object(29, 0, 0));
        end
    end
    if (obj_is_carrying_obj_pid(dude_obj, 30) > 0) then begin
        while (obj_is_carrying_obj_pid(dude_obj, 30) > 0) do begin
            rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 30));
            if (tile_contains_obj_pid(0, 1, 30)) then begin
                destroy_object(tile_contains_pid_obj(0, 1, 30));
            end
            add_obj_to_inven(party_member_obj(16777313), create_object(30, 0, 0));
        end
    end
    if (obj_is_carrying_obj_pid(dude_obj, 35) > 0) then begin
        while (obj_is_carrying_obj_pid(dude_obj, 35) > 0) do begin
            rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 35));
            if (tile_contains_obj_pid(0, 1, 35)) then begin
                destroy_object(tile_contains_pid_obj(0, 1, 35));
            end
            add_obj_to_inven(party_member_obj(16777278), create_object(35, 0, 0));
        end
    end
    if (obj_is_carrying_obj_pid(dude_obj, 36) > 0) then begin
        while (obj_is_carrying_obj_pid(dude_obj, 36) > 0) do begin
            rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 36));
            if (tile_contains_obj_pid(0, 1, 36)) then begin
                destroy_object(tile_contains_pid_obj(0, 1, 36));
            end
            add_obj_to_inven(party_member_obj(16777278), create_object(36, 0, 0));
        end
    end
    if (obj_is_carrying_obj_pid(dude_obj, 95) > 0) then begin
        while (obj_is_carrying_obj_pid(dude_obj, 95) > 0) do begin
            rm_obj_from_inven(dude_obj, obj_carrying_pid_obj(dude_obj, 95));
            if (tile_contains_obj_pid(0, 1, 95)) then begin
                destroy_object(tile_contains_pid_obj(0, 1, 95));
            end
            add_obj_to_inven(party_member_obj(16777305), create_object(95, 0, 0));
        end
    end
end

procedure Starting
begin
    if (get_sfall_global_int("nirran_3") == 0) then begin
        if (not(combat_is_initialized)) then begin
            call Dlg_Start();
        end
        else begin
            call PM_ARCmbt();
        end
    end
    else begin
        if (get_sfall_global_int("nirran_3") == 1) then begin
            if (not(combat_is_initialized)) then begin
                start_gdialog(1, self_obj, 4, -1, -1);
                gsay_start;
                call Node001();
                gsay_end;
                end_dialogue;
            end
            else begin
                if (get_sfall_global_int("nirran_1") == 1) then begin
                    if (not(critter_state(target_obj) bwand 1)) then begin
                        if (obj_carrying_pid_obj(dude_obj, 805) or obj_carrying_pid_obj(dude_obj, 48) or obj_carrying_pid_obj(dude_obj, 49) or obj_carrying_pid_obj(dude_obj, 103) or obj_carrying_pid_obj(dude_obj, 81) or obj_carrying_pid_obj(dude_obj, 801) or obj_carrying_pid_obj(dude_obj, 71) or obj_carrying_pid_obj(dude_obj, 802) or obj_carrying_pid_obj(dude_obj, 273) or obj_carrying_pid_obj(dude_obj, 40) or obj_carrying_pid_obj(dude_obj, 144) or obj_carrying_pid_obj(dude_obj, 808)) then begin
                            if (((obj_pid(target_obj) - 16777216) >= 0) and ((obj_pid(target_obj) - 33554431) < 0)) then begin
                                call use_healing_items_target();
                            end
                            else begin
                                display_msg("Your target is not a critter.");
                            end
                        end
                        else begin
                            display_msg(dude_name + message_str(SCRIPT_OBJ_DUDE, 186) + message_str(SCRIPT_OBJ_DUDE, 201));
                        end
                    end
                    else begin
                        display_msg("Your target is dead.");
                    end
                end
            end
        end
    end
end

procedure modify_critter(variable arg0)
begin
    if (((obj_in_party(arg0)) == 0) and (arg0 != dude_obj) and (obj_pid(arg0) != 16777376) and (obj_pid(arg0) != 16777377) and (obj_pid(arg0) != 16777305) and (obj_pid(arg0) != 16777313) and (obj_pid(arg0) != 16777323) and (obj_pid(arg0) != 16777352) and (obj_pid(arg0) != 16777368) and (obj_pid(arg0) != 16777291) and (obj_pid(arg0) != 16777278) and (obj_pid(arg0) != 16777379) and (obj_pid(arg0) != 16777380) and (obj_pid(arg0) != 16777859) and (obj_pid(arg0) != 16777558) and (obj_pid(arg0) != 16777687) and (obj_pid(arg0) != 16777766) and (obj_pid(arg0) != 16777762) and (obj_pid(arg0) != 16777785) and (obj_pid(arg0) != 16777720) and (obj_pid(arg0) != 16777718) and (obj_pid(arg0) != 16777719) and (get_sfall_global_int(4306) == 0) or ((arg0 != dude_obj) and (get_sfall_global_int(4306) == 1))) then begin
        if (get_critter_base_stat(arg0, 29) < 10) then begin
            set_critter_base_stat(arg0, 29, 10);
            if (get_sfall_global_int(2197) > 0) then begin
                if ((get_critter_extra_stat(arg0, 7) + get_critter_base_stat(arg0, 7) + get_sfall_global_int(2197)) > 2000) then begin
                    set_critter_extra_stat(arg0, 7, 2000 - (get_critter_extra_stat(arg0, 7) + get_critter_base_stat(arg0, 7)));
                end
                else begin
                    set_critter_extra_stat(arg0, 7, get_critter_extra_stat(arg0, 7) + get_sfall_global_int(2197));
                end
            end
            if (get_sfall_global_int(2190) > 0) then begin
                if ((get_critter_extra_stat(arg0, 8) + get_critter_base_stat(arg0, 8) + get_sfall_global_int(2190)) > (get_pc_stat(PCSTAT_level) + 5)) then begin
                    set_critter_extra_stat(arg0, 8, get_pc_stat(PCSTAT_level) + 5 - (get_critter_extra_stat(arg0, 8) + get_critter_base_stat(arg0, 8)));
                end
                else begin
                    set_critter_extra_stat(arg0, 8, get_critter_extra_stat(arg0, 8) + get_sfall_global_int(2190));
                end
            end
            if (get_sfall_global_int(2196) > 0) then begin
                if ((get_critter_extra_stat(arg0, 9) + get_critter_base_stat(arg0, 9) + get_sfall_global_int(2196)) > (get_pc_stat(PCSTAT_level) + 5)) then begin
                    set_critter_extra_stat(arg0, 9, get_pc_stat(PCSTAT_level) + 5 - (get_critter_extra_stat(arg0, 9) + get_critter_base_stat(arg0, 9)));
                end
                else begin
                    set_critter_extra_stat(arg0, 9, get_critter_extra_stat(arg0, 9) + get_sfall_global_int(2196));
                end
            end
        end
    end
end

procedure CalculateBonuses
begin
    math := 0;
    if (get_sfall_global_int(2161) > 0) then begin
        math := get_pc_stat(PCSTAT_level) / get_sfall_global_int(2161);
    end
    if ((get_sfall_global_int(2162) > 0) and (math > 0)) then begin
        math := math * get_sfall_global_int(2162);
    end
    if (get_sfall_global_int(2163) > 0) then begin
        if (math > 0) then begin
            math := math + get_sfall_global_int(2163);
        end
        else begin
            math := get_sfall_global_int(2163);
        end
    end
    else begin
        if (math > 0) then begin
            math := math;
        end
        else begin
            math := 0;
        end
    end
    if (math > (get_pc_stat(PCSTAT_level) + 5)) then begin
        math := get_pc_stat(PCSTAT_level) + 5;
    end
    set_sfall_global(2190, math);
    math := 0;
    if (get_sfall_global_int(2164) > 0) then begin
        math := get_pc_stat(PCSTAT_level) / get_sfall_global_int(2164);
    end
    if ((get_sfall_global_int(2165) > 0) and (math > 0)) then begin
        math := math * get_sfall_global_int(2165);
    end
    if (get_sfall_global_int(2166) > 0) then begin
        if (math > 0) then begin
            math := math + get_sfall_global_int(2166);
        end
        else begin
            math := get_sfall_global_int(2166);
        end
    end
    else begin
        if (math > 0) then begin
            math := math;
        end
        else begin
            math := 0;
        end
    end
    if (math > 200) then begin
        math := 200;
    end
    set_sfall_global(2191, math);
    math := 0;
    if (get_sfall_global_int(2167) > 0) then begin
        math := get_pc_stat(PCSTAT_level) / get_sfall_global_int(2167);
    end
    if ((get_sfall_global_int(2168) > 0) and (math > 0)) then begin
        math := math * get_sfall_global_int(2168);
    end
    if (get_sfall_global_int(2169) > 0) then begin
        if (math > 0) then begin
            math := math + get_sfall_global_int(2169);
        end
        else begin
            math := get_sfall_global_int(2169);
        end
    end
    else begin
        if (math > 0) then begin
            math := math;
        end
        else begin
            math := 0;
        end
    end
    if (math > 95) then begin
        math := 95;
    end
    set_sfall_global(2192, math);
    math := 0;
    if (get_sfall_global_int(2170) > 0) then begin
        math := get_pc_stat(PCSTAT_level) / get_sfall_global_int(2170);
    end
    if ((get_sfall_global_int(2171) > 0) and (math > 0)) then begin
        math := math * get_sfall_global_int(2171);
    end
    if (get_sfall_global_int(2172) > 0) then begin
        if (math > 0) then begin
            math := math + get_sfall_global_int(2172);
        end
        else begin
            math := get_sfall_global_int(2172);
        end
    end
    else begin
        if (math > 0) then begin
            math := math;
        end
        else begin
            math := 0;
        end
    end
    if (math > (get_pc_stat(PCSTAT_level) + 5)) then begin
        math := get_pc_stat(PCSTAT_level) + 5;
    end
    set_sfall_global(2193, math);
    math := 0;
    if (get_sfall_global_int(2173) > 0) then begin
        math := get_pc_stat(PCSTAT_level) / get_sfall_global_int(2173);
    end
    if ((get_sfall_global_int(2174) > 0) and (math > 0)) then begin
        math := math * get_sfall_global_int(2174);
    end
    if (get_sfall_global_int(2175) > 0) then begin
        if (math > 0) then begin
            math := math + get_sfall_global_int(2175);
        end
        else begin
            math := get_sfall_global_int(2175);
        end
    end
    else begin
        if (math > 0) then begin
            math := math;
        end
        else begin
            math := 0;
        end
    end
    if (math > 200) then begin
        math := 200;
    end
    set_sfall_global(2194, math);
    math := 0;
    if (get_sfall_global_int(2176) > 0) then begin
        math := get_pc_stat(PCSTAT_level) / get_sfall_global_int(2176);
    end
    if ((get_sfall_global_int(2177) > 0) and (math > 0)) then begin
        math := math * get_sfall_global_int(2177);
    end
    if (get_sfall_global_int(2178) > 0) then begin
        if (math > 0) then begin
            math := math + get_sfall_global_int(2178);
        end
        else begin
            math := get_sfall_global_int(2178);
        end
    end
    else begin
        if (math > 0) then begin
            math := math;
        end
        else begin
            math := 0;
        end
    end
    if (math > 200) then begin
        math := 200;
    end
    set_sfall_global(2195, math);
    math := 0;
    if (get_sfall_global_int(2179) > 0) then begin
        math := get_pc_stat(PCSTAT_level) / get_sfall_global_int(2179);
    end
    if ((get_sfall_global_int(2180) > 0) and (math > 0)) then begin
        math := math * get_sfall_global_int(2180);
    end
    if (get_sfall_global_int(2181) > 0) then begin
        if (math > 0) then begin
            math := math + get_sfall_global_int(2181);
        end
        else begin
            math := get_sfall_global_int(2181);
        end
    end
    else begin
        if (math > 0) then begin
            math := math;
        end
        else begin
            math := 0;
        end
    end
    if (math > (get_pc_stat(PCSTAT_level) + 5)) then begin
        math := get_pc_stat(PCSTAT_level) + 5;
    end
    set_sfall_global(2196, math);
    math := 0;
    if (get_sfall_global_int(2182) > 0) then begin
        math := get_pc_stat(PCSTAT_level) * get_sfall_global_int(2182);
    end
    if (get_sfall_global_int(2183) > 0) then begin
        if (math > 0) then begin
            math := math + get_sfall_global_int(2183);
        end
        else begin
            math := get_sfall_global_int(2183);
        end
    end
    else begin
        if (math > 0) then begin
            math := math;
        end
        else begin
            math := 0;
        end
    end
    if (math > 2000) then begin
        math := 2000;
    end
    set_sfall_global(2197, math);
    math := 0;
    if (get_sfall_global_int(2184) > 0) then begin
        math := get_pc_stat(PCSTAT_level) / get_sfall_global_int(2184);
    end
    if ((get_sfall_global_int(2185) > 0) and (math > 0)) then begin
        math := math * get_sfall_global_int(2185);
    end
    if (get_sfall_global_int(2186) > 0) then begin
        if (math > 0) then begin
            math := math + get_sfall_global_int(2186);
        end
        else begin
            math := get_sfall_global_int(2186);
        end
    end
    else begin
        if (math > 0) then begin
            math := math;
        end
        else begin
            math := 0;
        end
    end
    if (math > 90) then begin
        math := 90;
    end
    set_sfall_global(2198, math);
    math := 0;
    if (get_sfall_global_int(2187) > 0) then begin
        math := get_pc_stat(PCSTAT_level) / get_sfall_global_int(2187);
    end
    if ((get_sfall_global_int(2188) > 0) and (math > 0)) then begin
        math := math * get_sfall_global_int(2188);
    end
    if (get_sfall_global_int(2189) > 0) then begin
        if (math > 0) then begin
            math := math + get_sfall_global_int(2189);
        end
        else begin
            math := get_sfall_global_int(2189);
        end
    end
    else begin
        if (math > 0) then begin
            math := math;
        end
        else begin
            math := 0;
        end
    end
    if (math > 90) then begin
        math := 90;
    end
    set_sfall_global(2199, math);
    math := 0;
    if (get_sfall_global_int(4259) > 0) then begin
        math := get_pc_stat(PCSTAT_level) / get_sfall_global_int(4259);
    end
    if ((get_sfall_global_int(4260) > 0) and (math > 0)) then begin
        math := math * get_sfall_global_int(4260);
    end
    if (get_sfall_global_int(4261) > 0) then begin
        if (math > 0) then begin
            math := math + get_sfall_global_int(4261);
        end
        else begin
            math := get_sfall_global_int(4261);
        end
    end
    else begin
        if (math > 0) then begin
            math := math;
        end
        else begin
            math := 0;
        end
    end
    if (math > 90) then begin
        math := 90;
    end
    set_sfall_global(4262, math);
    math := 0;
    if (get_sfall_global_int(4297) > 0) then begin
        math := get_pc_stat(PCSTAT_level) / get_sfall_global_int(4297);
    end
    if ((get_sfall_global_int(4298) > 0) and (math > 0)) then begin
        math := math * get_sfall_global_int(4298);
    end
    if (get_sfall_global_int(4299) > 0) then begin
        if (math > 0) then begin
            math := math + get_sfall_global_int(4299);
        end
        else begin
            math := get_sfall_global_int(4299);
        end
    end
    else begin
        if (math > 0) then begin
            math := math;
        end
        else begin
            math := 0;
        end
    end
    if (math > 200) then begin
        math := 200;
    end
    set_sfall_global(4300, math);
end

procedure HealCritter(variable arg0)
begin
    if (((obj_in_party(arg0)) == 0) and (arg0 != dude_obj) or ((arg0 != dude_obj) and (get_sfall_global_int(4306) == 1)) and not(combat_is_initialized) and not(critter_state(arg0) bwand 2)) then begin
        critter_heal(arg0, 2000);
        critter_injure(arg0, 4 bwor 8 bwor 16 bwor 32 bwor 64 bwor 8388608);
    end
end

procedure MapEnterHealCritter(variable arg0)
begin
    if (((obj_in_party(arg0)) == 0) and (arg0 != dude_obj) or ((arg0 != dude_obj) and (get_sfall_global_int(4306) == 1)) and not(critter_state(arg0) bwand 2)) then begin
        critter_heal(arg0, 2000);
    end
end
