variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure use_p_proc;
procedure talk_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node998;
procedure Node999;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node009a;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node006a;
procedure Node006b;
procedure Node010a;
procedure Node033;
procedure Node034;
procedure Node035;
procedure Node036;
procedure Node037;
procedure abbey_quest_complete;

variable Only_Once;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure use_p_proc
begin
    dialogue_system_enter;
end

procedure talk_p_proc
begin
    if (global_var(GVAR_VAULT_PIP) > 2) then begin
        call Node030();
    end
    else begin
        start_gdialog(838, self_obj, 4, -1, -1);
        gsay_start;
        call Node006();
        gsay_end;
        end_dialogue;
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (global_var(GVAR_VAULT_PIP) > 2) then begin
        display_mstr(106);
    end
    else begin
        if (dude_iq > 3) then begin
            if (local_var(0) == 0) then begin
                set_local_var(0, local_var(0) + 1);
                display_mstr(100);
            end
            else begin
                display_mstr(101);
            end
        end
        else begin
            if (local_var(0) == 0) then begin
                set_local_var(0, local_var(0) + 1);
                display_mstr(103);
            end
            else begin
                display_mstr(104);
            end
        end
    end
end

procedure description_p_proc
begin
    script_overrides;
    if (dude_iq > 3) then begin
        display_mstr(102);
    end
    else begin
        display_mstr(103);
    end
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 12) then begin
        script_overrides;
        call use_p_proc();
    end
end

procedure map_enter_p_proc
begin
    add_timer_event(self_obj, game_ticks(4), 1);
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if ((global_var(GVAR_VAULT_CITY_VENT) != 2) and (global_var(GVAR_VAULT_PIP) < 3)) then begin
            call Node004();
            add_timer_event(self_obj, game_ticks(4), 1);
        end
        else begin
            if (global_var(GVAR_VAULT_PIP) < 3) then begin
                call Node005();
                add_timer_event(self_obj, game_ticks(4), 2);
            end
        end
    end
    else begin
        if (fixed_param == 2) then begin
            call Node005();
            add_timer_event(self_obj, game_ticks(4), 2);
        end
    end
end

procedure Node998
begin
end

procedure Node999
begin
end

procedure Node004
begin
    variable LVar0 := 0;
    if (local_var(1) > 32) then begin
        set_local_var(1, 0);
    end
    LVar0 := 107 + local_var(1);
    if ((global_var(GVAR_VAULT_CITY_VENT) != 2) and (LVar0 == 122)) then begin
        set_global_var(GVAR_VAULT_CITY_VENT, 1);
    end
    float_msg(self_obj, mstr(LVar0), FLOAT_MSG_YELLOW);
    set_local_var(1, local_var(1) + 1);
    return 0;
    LVar0 := 0;
end

procedure Node005
begin
    variable LVar0 := 0;
    if (local_var(2) > 25) then begin
        set_local_var(2, 0);
    end
    LVar0 := 140 + local_var(2);
    float_msg(self_obj, mstr(LVar0), FLOAT_MSG_YELLOW);
    set_local_var(2, local_var(2) + 1);
    return 0;
    LVar0 := 0;
end

procedure Node006
begin
    if (dude_iq < 4) then begin
        Reply(166);
    end
    else begin
        Reply(167);
    end
    giq_option(-3, NAME, 168, Node007, NEUTRAL_REACTION);
    giq_option(-3, NAME, 169, Node008, NEUTRAL_REACTION);
    giq_option(-3, NAME, 170, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 171, Node023, NEUTRAL_REACTION);
    giq_option(4, NAME, 172, Node024, NEUTRAL_REACTION);
    if ((global_var(GVAR_VAULT_GECKO_PLANT) == 12) and obj_is_carrying_obj_pid(dude_obj, 303)) then begin
        giq_option(4, NAME, 173, Node031, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_GRUTHAR_DSTATUS) == 2) then begin
        giq_option(4, NAME, 174, Node010, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_VAULT_PIP) == 1) then begin
        giq_option(4, NAME, 175, Node014, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_VAULT_PIP) >= 2) and (global_var(GVAR_FALLOUT_2) == 8)) then begin
        giq_option(4, NAME, 176, Node027, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_FORMER_P_TRIBE_LOCATION_KNOWN) == 1) then begin
        giq_option(4, NAME, 300, Node033, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 177, Node006a, NEUTRAL_REACTION);
end

procedure Node007
begin
    Reply(178);
    giq_option(-3, NAME, 179, Node008, NEUTRAL_REACTION);
    giq_option(-3, NAME, 180, Node999, NEUTRAL_REACTION);
end

procedure Node008
begin
    Reply(181);
    giq_option(-3, NAME, 182, Node009, NEUTRAL_REACTION);
    giq_option(-3, NAME, 183, Node006b, NEUTRAL_REACTION);
end

procedure Node009
begin
    Reply(184);
    giq_option(-3, NAME, 272, Node009a, NEUTRAL_REACTION);
end

procedure Node009a
begin
    variable LVar0 := 0;
    gfade_out(600);
    gfade_in(600);
    if (local_var(4) == 0) then begin
        set_local_var(4, 1);
        script_overrides;
        LVar0 := get_pc_extra_stat(28) + 5;
        set_pc_extra_stat(28, LVar0);
        critter_dmg(dude_obj, get_critter_stat(dude_obj, STAT_current_hp) - 1, 4 bwor 512);
    end
    Reply(185);
    giq_option(-3, NAME, 186, Node006b, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure Node010
begin
    Reply(187);
    giq_option(4, NAME, 188, Node010a, NEUTRAL_REACTION);
    giq_option(4, NAME, 189, Node006b, NEUTRAL_REACTION);
end

procedure Node011
begin
    set_global_var(GVAR_VAULT_PIP, 1);
    Reply(190);
    giq_option(4, NAME, 191, Node014, NEUTRAL_REACTION);
    giq_option(4, NAME, 192, Node999, NEUTRAL_REACTION);
end

procedure Node012
begin
    set_global_var(GVAR_VAULT_PIP, 1);
    if (dude_iq < 4) then begin
        Reply(193);
    end
    else begin
        Reply(194);
    end
    giq_option(-3, NAME, 195, Node013, NEUTRAL_REACTION);
    giq_option(4, NAME, 196, Node014, NEUTRAL_REACTION);
    giq_option(4, NAME, 197, Node999, NEUTRAL_REACTION);
end

procedure Node013
begin
    set_global_var(GVAR_PIPBOY_TOUR_GUIDE, 1);
    set_global_var(GVAR_VAULT_PIP, 2);
    if (town_known(5) == 0) then begin
        debug_msg("  mark_on_map(" + 5 + ")");
        mark_area_known(0, 5, 1);
    end
    if (town_known(10) == 0) then begin
        debug_msg("  mark_on_map(" + 10 + ")");
        mark_area_known(0, 10, 1);
    end
    if (town_known(7) == 0) then begin
        debug_msg("  mark_on_map(" + 7 + ")");
        mark_area_known(0, 7, 1);
    end
    if (town_known(6) == 0) then begin
        debug_msg("  mark_on_map(" + 6 + ")");
        mark_area_known(0, 6, 1);
    end
    if (town_known(13) == 0) then begin
        debug_msg("  mark_on_map(" + 13 + ")");
        mark_area_known(0, 13, 1);
    end
    if (town_known(9) == 0) then begin
        debug_msg("  mark_on_map(" + 9 + ")");
        mark_area_known(0, 9, 1);
    end
    Reply(198);
    giq_option(-3, NAME, 199, Node999, NEUTRAL_REACTION);
end

procedure Node014
begin
    Reply(200);
    giq_option(4, NAME, 201, Node015, NEUTRAL_REACTION);
    giq_option(4, NAME, 202, Node999, NEUTRAL_REACTION);
end

procedure Node015
begin
    Reply(203);
    giq_option(4, NAME, 204, Node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 205, Node999, NEUTRAL_REACTION);
end

procedure Node016
begin
    Reply(206);
    giq_option(4, NAME, 207, Node017, NEUTRAL_REACTION);
    giq_option(4, NAME, 208, Node017, NEUTRAL_REACTION);
    giq_option(4, NAME, 209, Node999, NEUTRAL_REACTION);
end

procedure Node017
begin
    Reply(210);
    giq_option(4, NAME, 211, Node018, NEUTRAL_REACTION);
    giq_option(4, NAME, 212, Node019, NEUTRAL_REACTION);
    giq_option(4, NAME, 213, Node999, NEUTRAL_REACTION);
end

procedure Node018
begin
    Reply(214);
    giq_option(4, NAME, 216, Node020, NEUTRAL_REACTION);
    giq_option(4, NAME, 217, Node999, NEUTRAL_REACTION);
end

procedure Node019
begin
    Reply(mstr(218) + mstr(219));
    giq_option(4, NAME, 220, Node020, NEUTRAL_REACTION);
    giq_option(4, NAME, 221, Node020, NEUTRAL_REACTION);
end

procedure Node020
begin
    set_global_var(GVAR_PIPBOY_TOUR_GUIDE, 1);
    set_global_var(GVAR_VAULT_PIP, 2);
    if (town_known(5) == 0) then begin
        debug_msg("  mark_on_map(" + 5 + ")");
        mark_area_known(0, 5, 1);
    end
    if (town_known(10) == 0) then begin
        debug_msg("  mark_on_map(" + 10 + ")");
        mark_area_known(0, 10, 1);
    end
    if (town_known(7) == 0) then begin
        debug_msg("  mark_on_map(" + 7 + ")");
        mark_area_known(0, 7, 1);
    end
    if (town_known(6) == 0) then begin
        debug_msg("  mark_on_map(" + 6 + ")");
        mark_area_known(0, 6, 1);
    end
    if (town_known(13) == 0) then begin
        debug_msg("  mark_on_map(" + 13 + ")");
        mark_area_known(0, 13, 1);
    end
    if (town_known(9) == 0) then begin
        debug_msg("  mark_on_map(" + 9 + ")");
        mark_area_known(0, 9, 1);
    end
    Reply(mstr(222) + mstr(223));
    giq_option(4, NAME, 224, Node021, NEUTRAL_REACTION);
    giq_option(4, NAME, 225, Node999, NEUTRAL_REACTION);
end

procedure Node021
begin
    Reply(226);
    giq_option(4, NAME, 227, Node023, NEUTRAL_REACTION);
    giq_option(4, NAME, 228, Node024, NEUTRAL_REACTION);
    if (global_var(GVAR_GECKO_ECON_DISK) >= 2) then begin
        giq_option(4, NAME, 229, Node022, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 230, Node006a, NEUTRAL_REACTION);
end

procedure Node022
begin
    Reply(231);
    giq_option(4, NAME, 232, Node021, NEUTRAL_REACTION);
    giq_option(4, NAME, 233, Node006a, NEUTRAL_REACTION);
end

procedure Node023
begin
    if (town_known(9) == 0) then begin
        debug_msg("  mark_on_map(" + 9 + ")");
        mark_area_known(0, 9, 1);
    end
    if (local_var(3) == 0) then begin
        set_local_var(3, local_var(3) + 1);
        Reply(mstr(234) + " " + mstr(235));
    end
    else begin
        Reply(234);
    end
    giq_option(4, NAME, 236, Node021, NEUTRAL_REACTION);
    giq_option(4, NAME, 237, Node006a, NEUTRAL_REACTION);
end

procedure Node024
begin
    Reply(238);
    giq_option(4, NAME, 239, Node025, NEUTRAL_REACTION);
end

procedure Node025
begin
    Reply(240);
    giq_option(4, NAME, 241, Node026, NEUTRAL_REACTION);
    giq_option(4, NAME, 242, Node021, NEUTRAL_REACTION);
    giq_option(4, NAME, 243, Node006a, NEUTRAL_REACTION);
end

procedure Node026
begin
    Reply(244);
    giq_option(4, NAME, 245, Node021, NEUTRAL_REACTION);
    giq_option(4, NAME, 246, Node006a, NEUTRAL_REACTION);
end

procedure Node027
begin
    Reply(247);
    if (global_var(GVAR_PLAYER_REPUTATION) >= 0) then begin
        giq_option(4, NAME, 248, Node028, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 249, Node028, NEUTRAL_REACTION);
    end
end

procedure Node028
begin
    set_global_var(GVAR_PIPBOY_CREDITS, 1);
    set_global_var(GVAR_VAULT_CITY_DESIGNER_NOTES, 1);
    Reply(250);
    if (global_var(GVAR_PLAYER_REPUTATION) >= 0) then begin
        giq_option(4, NAME, 251, Node029, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 252, Node029, NEUTRAL_REACTION);
    end
end

procedure Node029
begin
    set_global_var(GVAR_VAULT_PIP, 3);
    Reply(253);
    if (global_var(GVAR_PLAYER_REPUTATION) >= 0) then begin
        giq_option(4, NAME, 254, Node999, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 255, Node999, NEUTRAL_REACTION);
    end
end

procedure Node030
begin
    display_mstr(256);
end

procedure Node031
begin
    Reply(258);
    giq_option(4, NAME, 263, Node032, NEUTRAL_REACTION);
    giq_option(4, NAME, 264, Node021, NEUTRAL_REACTION);
    giq_option(4, NAME, 265, Node006a, NEUTRAL_REACTION);
end

procedure Node032
begin
    variable LVar0 := 0;
    set_global_var(GVAR_VAULT_GECKO_PLANT, 13);
    Reply(266);
    giq_option(4, NAME, 270, Node021, NEUTRAL_REACTION);
    giq_option(4, NAME, 271, Node006a, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure Node006a
begin
    if ((global_var(GVAR_VAULT_PIP) == 0) and (dude_perception > 6)) then begin
        call Node012();
    end
    else begin
        call Node999();
    end
end

procedure Node006b
begin
    if (global_var(GVAR_VAULT_PIP) == 0) then begin
        call Node012();
    end
    else begin
        call Node999();
    end
end

procedure Node010a
begin
    if (global_var(GVAR_VAULT_PIP) == 0) then begin
        call Node011();
    end
    else begin
        call Node021();
    end
end

procedure Node033
begin
    if (has_skill(dude_obj, SKILL_SCIENCE) > 115) then begin
        Reply(320);
        giq_option(4, NAME, 301, Node034, NEUTRAL_REACTION);
        giq_option(4, NAME, 302, Node035, NEUTRAL_REACTION);
        giq_option(4, NAME, 303, Node036, NEUTRAL_REACTION);
    end
    else begin
        gsay_message(NAME, 330, GOOD_REACTION);
        call Node006();
    end
end

procedure Node034
begin
    if (obj_is_carrying_obj_pid(dude_obj, 587) > 0) then begin
        Reply(304);
        giq_option(4, NAME, 307, abbey_quest_complete, NEUTRAL_REACTION);
        giq_option(4, NAME, 308, Node006, NEUTRAL_REACTION);
    end
    else begin
        gsay_message(NAME, 340, GOOD_REACTION);
    end
end

procedure Node035
begin
    Reply(305);
    giq_option(4, NAME, 308, Node006, NEUTRAL_REACTION);
end

procedure Node036
begin
    Reply(306);
    giq_option(4, NAME, 309, Node037, NEUTRAL_REACTION);
    giq_option(4, NAME, 308, Node006, NEUTRAL_REACTION);
end

procedure Node037
begin
    Reply(310);
    giq_option(4, NAME, 308, Node006, NEUTRAL_REACTION);
end

procedure abbey_quest_complete
begin
    set_global_var(GVAR_FORMER_P_TRIBE_LOCATION_KNOWN, 2);
end
