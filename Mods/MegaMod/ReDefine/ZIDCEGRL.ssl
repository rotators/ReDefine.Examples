variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable last_timed_obj;
variable last_timed_param;
variable check_still_kill;
variable stored_msg;
variable stored_node;
variable top_msg;
variable var_num;

procedure ChooseFromList;
procedure CLICK_PREV;
procedure CLICK_0;
procedure CLICK_1;
procedure CLICK_2;
procedure CLICK_3;
procedure CLICK_4;
procedure CLICK_MORE;

variable floater_patch_msg;
variable hs_temp;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node998;
procedure Node999;
procedure Node002;
procedure Node003;
procedure Node005;
procedure Node007;
procedure Node009;
procedure Node011;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;

variable Only_Once;
variable bet_amt;
variable trash_it;

procedure Node991;
procedure Node992;
procedure Node993;
procedure Node994;
procedure Node995;
procedure floater_rand_with_check_cust(variable arg0, variable arg1, variable arg2);


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure ChooseFromList
begin
    variable LVar0 := 0;
    Reply(stored_msg);
    if (message_str(SCRIPT_NEWR1, top_msg - 1) != "") then begin
        giq_option(1, NAME, message_str(SCRIPT_NEWR1, 150), CLICK_PREV, NEUTRAL_REACTION);
    end
    if (LVar0 == 0) then begin
        if (message_str(SCRIPT_NEWR1, top_msg + 0) != "") then begin
            giq_option(1, NAME, message_str(SCRIPT_NEWR1, top_msg + 0), CLICK_0, NEUTRAL_REACTION);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(SCRIPT_NEWR1, top_msg + 1) != "") then begin
            giq_option(1, NAME, message_str(SCRIPT_NEWR1, top_msg + 1), CLICK_1, NEUTRAL_REACTION);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(SCRIPT_NEWR1, top_msg + 2) != "") then begin
            giq_option(1, NAME, message_str(SCRIPT_NEWR1, top_msg + 2), CLICK_2, NEUTRAL_REACTION);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(SCRIPT_NEWR1, top_msg + 3) != "") then begin
            giq_option(1, NAME, message_str(SCRIPT_NEWR1, top_msg + 3), CLICK_3, NEUTRAL_REACTION);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(SCRIPT_NEWR1, top_msg + 4) != "") then begin
            giq_option(1, NAME, message_str(SCRIPT_NEWR1, top_msg + 4), CLICK_4, NEUTRAL_REACTION);
        end
        else begin
            LVar0 := 1;
        end
    end
    if (LVar0 == 0) then begin
        if (message_str(SCRIPT_NEWR1, top_msg + 5) != "") then begin
            giq_option(1, NAME, message_str(SCRIPT_NEWR1, 151), CLICK_MORE, NEUTRAL_REACTION);
        end
    end
end

procedure CLICK_PREV
begin
    top_msg := top_msg - 5;
    call ChooseFromList();
end

procedure CLICK_0
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + (top_msg % 100));
    call stored_node();
end

procedure CLICK_1
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + ((top_msg + 1) % 100));
    call stored_node();
end

procedure CLICK_2
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + ((top_msg + 2) % 100));
    call stored_node();
end

procedure CLICK_3
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + ((top_msg + 3) % 100));
    call stored_node();
end

procedure CLICK_4
begin
    set_global_var(var_num, (global_var(var_num) / 100 * 100) + ((top_msg + 4) % 100));
    call stored_node();
end

procedure CLICK_MORE
begin
    top_msg := top_msg + 5;
    call ChooseFromList();
end

procedure start
begin
end

procedure critter_p_proc
begin
    if (((local_var(0) bwand 2) != 0) and obj_can_see_obj(self_obj, dude_obj)) then begin
        if (critter_is_fleeing(self_obj)) then begin
            if (anim_busy(self_obj) == 0) then begin
                if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                    if (anim_busy(self_obj) == 0) then begin
                        global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                        global_temp := (global_temp + 1) % 6;
                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                            debug_msg("flee loop: rot == " + global_temp);
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                        end
                    end
                end
            end
        end
        else begin
            attack(dude_obj);
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        call Node998();
    end
end

procedure talk_p_proc
begin
    debug_msg("talk_p_proc:");
    if (((obj_is_carrying_obj_pid(self_obj, 325) + obj_is_carrying_obj_pid(self_obj, 326)) == 1) and (((local_var(0) bwand 512) != 0) == 0)) then begin
        debug_msg("   a");
        if (in_dialog == 0) then begin
            in_dialog := 1;
            start_gdialog(410, self_obj, 4, -1, -1);
            gsay_start;
            call Node013();
            gsay_end;
            end_dialogue;
            in_dialog := 0;
        end
        else begin
            call Node013();
        end
    end
    else begin
        debug_msg("   b");
        call Node017();
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (critter_kill_type(self_obj) == KILL_TYPE_children_kills) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100 + (obj_type(self_obj) != 1) + (10 * (((dude_iq > 3) and (dude_skill(SKILL_GAMBLING) >= 25)) == 0)));
end

procedure description_p_proc
begin
    script_overrides;
    if (obj_type(self_obj) == 1) then begin
        display_mstr(random(150, 150 + (((local_var(0) bwand 4) != 0) * (3 + (3 * (dude_gender == 0))))) + (10 * (((dude_iq > 3) and (dude_skill(SKILL_GAMBLING) >= 25)) == 0)));
    end
    else begin
        display_mstr(140 + (((dude_iq > 3) and (dude_skill(SKILL_GAMBLING) >= 25)) == 0));
    end
    set_local_var(0, local_var(0) bwor 4);
end

procedure use_skill_on_p_proc
begin
    variable LVar0 := 0;
    if ((action_being_used == 16) and ((dude_iq > 3) and (dude_skill(SKILL_GAMBLING) >= 25)) and (obj_type(self_obj) == 1)) then begin
        script_overrides;
        LVar0 := roll_vs_skill(dude_obj, action_being_used, 0);
        if (is_success(LVar0)) then begin
            if ((obj_is_carrying_obj_pid(self_obj, 325) + obj_is_carrying_obj_pid(self_obj, 326)) < 1) then begin
                display_mstr(175);
            end
            else begin
                if ((obj_is_carrying_obj_pid(self_obj, 325) + obj_is_carrying_obj_pid(self_obj, 326)) > 1) then begin
                    display_mstr(176);
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 326) > 0) then begin
                        display_mstr(177);
                    end
                    else begin
                        display_mstr(187);
                    end
                end
            end
        end
        else begin
            if ((obj_is_carrying_obj_pid(self_obj, 325) + obj_is_carrying_obj_pid(self_obj, 326)) != 1) then begin
                display_mstr(185);
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 326) > 0) then begin
                    if (is_critical(LVar0)) then begin
                        display_mstr(178);
                    end
                    else begin
                        display_mstr(179);
                    end
                end
                else begin
                    if (is_critical(LVar0)) then begin
                        display_mstr(185);
                    end
                    else begin
                        display_mstr(186);
                    end
                end
            end
        end
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(0, local_var(0) bwor 8);
        set_local_var(0, local_var(0) bwor 2);
        critter_set_flee_state(self_obj, 1);
    end
end

procedure map_enter_p_proc
begin
    Only_Once := 0;
    if (map_first_run) then begin
        set_local_var(1, tile_num(self_obj));
        if (obj_is_carrying_obj_pid(self_obj, 325) < 1) then begin
            restock_amt := random(1, 1);
            if (obj_is_carrying_obj_pid(self_obj, 325) < restock_amt) then begin
                if (100 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 325) < restock_amt) then begin
                        restock_obj := create_object(325, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 325));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 325) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 325);
                            if ((obj_is_carrying_obj_pid(self_obj, 325) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 325) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 325);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 325);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 325) < restock_amt) then begin
                    restock_obj := create_object(325, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 325));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 325) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 325);
                        if ((obj_is_carrying_obj_pid(self_obj, 325) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 325) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 325);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 325);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            destroy_object(restock_obj);
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
        end
        if (obj_is_carrying_obj_pid(self_obj, 41) < 5) then begin
            restock_amt := random(5, 30);
            if (obj_is_carrying_obj_pid(self_obj, 41) < restock_amt) then begin
                if (100 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 41) < restock_amt) then begin
                        restock_obj := create_object(41, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 41));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 41) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 41);
                            if ((obj_is_carrying_obj_pid(self_obj, 41) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 41) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 41);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 41);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                destroy_object(restock_obj);
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 41) < restock_amt) then begin
                    restock_obj := create_object(41, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 41));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 41) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 41);
                        if ((obj_is_carrying_obj_pid(self_obj, 41) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 41) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 41);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 41);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            destroy_object(restock_obj);
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
        end
    end
    else begin
        if (tile_num(self_obj) != local_var(1)) then begin
            critter_attempt_placement(self_obj, local_var(1), elevation(self_obj));
        end
    end
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 83);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_COWARD);
    add_timer_event(self_obj, game_ticks(random(1, 30)), 1);
end

procedure timed_event_p_proc
begin
    if (combat_is_initialized == 0) then begin
        if (tile_distance(tile_num(self_obj), dude_tile) <= 4) then begin
            if (random(0, 2) == 0) then begin
                play_sfx("dice1");
            end
            else begin
                if (obj_can_see_obj(self_obj, dude_obj)) then begin
                    if (global_var(GVAR_FALLOUT_2) == 8) then begin
                        call Node002();
                    end
                    else begin
                        if (((global_var(GVAR_NEW_RENO_MADE_MAN) / 100) == 0) and (0 != 0)) then begin
                            call Node003();
                        end
                        else begin
                            if (((global_var(GVAR_NEW_RENO_MADE_MAN) / 100) != 0) and (0 != 0)) then begin
                                call Node005();
                            end
                            else begin
                                if (global_var(GVAR_NEW_RENO_PORN_STAR) > 0) then begin
                                    call Node007();
                                end
                                else begin
                                    if (global_var(GVAR_NEW_RENO_HAS_REP_PRIZEFIGHTER) > 0) then begin
                                        call Node009();
                                    end
                                    else begin
                                        call Node011();
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    add_timer_event(self_obj, game_ticks(random(5, 20)), 1);
end

procedure Node998
begin
    set_local_var(0, local_var(0) bwor 2);
end

procedure Node999
begin
end

procedure Node002
begin
    call floater_rand_with_check_cust(200, 204, dude_name);
end

procedure Node003
begin
    call floater_rand_with_check_cust(219 - (4 * (dude_gender == 0)), 220 + (3 * (dude_gender == 1)), message_str(SCRIPT_NEWR1, 300 + (global_var(GVAR_NEW_RENO_MADE_MAN) % 100)));
end

procedure Node005
begin
    float_msg(self_obj, mstr(random(238 - (3 * (dude_gender == 0)), 238 + (3 * (dude_gender == 1)))), FLOAT_MSG_RED);
end

procedure Node007
begin
    call floater_rand_with_check_cust(255 - (5 * (dude_gender == 0)), 260 + (3 * (dude_gender == 1)), message_str(SCRIPT_NEWR1, 400 + global_var(GVAR_NEW_RENO_PRIZEFIGHTER)));
end

procedure Node009
begin
    call floater_rand_with_check_cust(271 - (dude_gender == 0), 277 + (2 * (dude_gender == 1)), message_str(SCRIPT_NEWR1, 500 + global_var(GVAR_NEW_RENO_PORN_STAR)));
end

procedure Node011
begin
    float_msg(self_obj, mstr(random(293 - (3 * (dude_gender == 0)), 298 + (3 * (dude_gender == 1)))), FLOAT_MSG_RED);
end

procedure Node013
begin
    if (((global_var(GVAR_NEW_RENO_MADE_MAN) / 100) != 0) and (0 != 0) and ((global_var(GVAR_FALLOUT_2) == 8) == 0)) then begin
        Reply(mstr(320) + 5 + mstr(2321));
    end
    else begin
        if ((global_var(GVAR_FALLOUT_2) == 8) or (global_var(GVAR_NEW_RENO_PORN_STAR) > 0) or (global_var(GVAR_NEW_RENO_HAS_REP_PRIZEFIGHTER) > 0) or (global_var(GVAR_NEW_RENO_MADE_MAN) > 0)) then begin
            Reply(mstr(321 + (dude_gender == 1)) + 5 + mstr(2321));
        end
        else begin
            Reply(mstr(323) + 5 + mstr(2321));
        end
    end
    giq_option(-3, NAME, 324, Node014, NEUTRAL_REACTION);
    giq_option(-3, NAME, 325, Node014, NEUTRAL_REACTION);
    giq_option(-3, NAME, 326, Node999, NEUTRAL_REACTION);
    if (item_caps_total(dude_obj) >= 5) then begin
        giq_option(4, NAME, mstr(328) + 5 + mstr(2328), Node991, NEUTRAL_REACTION);
        if (item_caps_total(dude_obj) >= 15) then begin
            giq_option(4, NAME, mstr(328) + 15 + mstr(2328), Node992, NEUTRAL_REACTION);
            if (item_caps_total(dude_obj) >= 25) then begin
                giq_option(4, NAME, mstr(328) + 25 + mstr(2328), Node993, NEUTRAL_REACTION);
                if (item_caps_total(dude_obj) >= 50) then begin
                    giq_option(4, NAME, mstr(328) + 50 + mstr(2328), Node994, NEUTRAL_REACTION);
                    if (item_caps_total(dude_obj) >= 100) then begin
                        giq_option(4, NAME, mstr(328) + 100 + mstr(2328), Node995, NEUTRAL_REACTION);
                    end
                end
            end
        end
    end
    else begin
        giq_option(4, NAME, 329, Node015, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 330, Node999, NEUTRAL_REACTION);
end

procedure Node014
begin
    Reply(340 + ((global_var(GVAR_NEW_RENO_MADE_MAN) > 0) * ((dude_gender == 0) + (2 * (dude_gender == 1)))));
    giq_option(1, NAME, 343, Node999, NEUTRAL_REACTION);
    giq_option(1, NAME, mstr(344) + dude_name + mstr(2344), Node999, NEUTRAL_REACTION);
    giq_option(1, NAME, 345, Node999, NEUTRAL_REACTION);
end

procedure Node015
begin
    if ((global_var(GVAR_FALLOUT_2) == 8) or (global_var(GVAR_NEW_RENO_PORN_STAR) > 0) or (global_var(GVAR_NEW_RENO_HAS_REP_PRIZEFIGHTER) > 0) or (global_var(GVAR_NEW_RENO_MADE_MAN) > 0)) then begin
        Reply(350 + (dude_gender == 1));
        giq_option(1, NAME, 354, Node999, NEUTRAL_REACTION);
    end
    else begin
        Reply(mstr(352) + 5 + mstr(2352 + (dude_gender == 1)));
        giq_option(1, NAME, 355, Node999, NEUTRAL_REACTION);
    end
end

procedure Node016
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    item_caps_adjust(dude_obj, -bet_amt);
    if (random(0, 1)) then begin
        play_sfx("dice");
    end
    else begin
        play_sfx("dice1");
    end
    LVar0 := roll_vs_skill(dude_obj, 16, ((bet_amt == 5) * 0) + ((bet_amt == 15) * -5) + ((bet_amt == 25) * -10) + ((bet_amt == 50) * -20) + ((bet_amt == 100) * -30) + (1 * -20));
    if (is_success(LVar0)) then begin
        LVar2 := 1;
        LVar1 := roll_vs_skill(dude_obj, 16, ((bet_amt == 5) * 0) + ((bet_amt == 15) * -5) + ((bet_amt == 25) * -10) + ((bet_amt == 50) * -20) + ((bet_amt == 100) * -30) + (2 * -20));
        if (is_critical(LVar0) or is_success(LVar1)) then begin
            LVar0 := roll_vs_skill(dude_obj, 16, ((bet_amt == 5) * 0) + ((bet_amt == 15) * -5) + ((bet_amt == 25) * -10) + ((bet_amt == 50) * -20) + ((bet_amt == 100) * -30) + (3 * -20));
            LVar2 := 2;
            if (is_critical(LVar1) or is_success(LVar0)) then begin
                LVar2 := 3;
            end
        end
    end
    item_caps_adjust(dude_obj, LVar2 * bet_amt);
    Reply(400 + (((global_var(GVAR_FALLOUT_2) == 8) or (global_var(GVAR_NEW_RENO_PORN_STAR) > 0) or (global_var(GVAR_NEW_RENO_HAS_REP_PRIZEFIGHTER) > 0) or (global_var(GVAR_NEW_RENO_MADE_MAN) > 0)) * ((dude_gender == 0) + (2 * (dude_gender == 1)))) + (10 * LVar2));
    giq_option(-3, NAME, 324, Node014, NEUTRAL_REACTION);
    giq_option(-3, NAME, 325, Node014, NEUTRAL_REACTION);
    giq_option(-3, NAME, 326, Node999, NEUTRAL_REACTION);
    if (item_caps_total(dude_obj) >= 5) then begin
        giq_option(4, NAME, mstr(328) + 5 + mstr(2328), Node991, NEUTRAL_REACTION);
        if (item_caps_total(dude_obj) >= 15) then begin
            giq_option(4, NAME, mstr(328) + 15 + mstr(2328), Node992, NEUTRAL_REACTION);
            if (item_caps_total(dude_obj) >= 25) then begin
                giq_option(4, NAME, mstr(328) + 25 + mstr(2328), Node993, NEUTRAL_REACTION);
                if (item_caps_total(dude_obj) >= 50) then begin
                    giq_option(4, NAME, mstr(328) + 50 + mstr(2328), Node994, NEUTRAL_REACTION);
                    if (item_caps_total(dude_obj) >= 100) then begin
                        giq_option(4, NAME, mstr(328) + 100 + mstr(2328), Node995, NEUTRAL_REACTION);
                    end
                end
            end
        end
    end
    else begin
        giq_option(4, NAME, 329, Node015, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 330, Node999, NEUTRAL_REACTION);
    giq_option(1, NAME, 440 + ((game_time_hour <= 600) or (game_time_hour >= 1800)), Node999, NEUTRAL_REACTION);
end

procedure Node017
begin
    debug_msg("Node017");
    if (((local_var(0) bwand 512) != 0) == 0) then begin
        set_local_var(0, local_var(0) bwor 512);
        removed_qty := obj_is_carrying_obj_pid(self_obj, 325);
        if (obj_is_carrying_obj_pid(self_obj, 325) < removed_qty) then begin
            removed_qty := obj_is_carrying_obj_pid(self_obj, 325);
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(self_obj, 325);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(self_obj, 325);
                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                        restock_obj := critter_inven_obj(self_obj, 0);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(self_obj, restock_obj);
                        add_obj_to_inven(self_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                        inven_unwield(self_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
        end
        restock_obj := 0;
        restock_amt := 0;
        removed_qty := obj_is_carrying_obj_pid(self_obj, 326);
        if (obj_is_carrying_obj_pid(self_obj, 326) < removed_qty) then begin
            removed_qty := obj_is_carrying_obj_pid(self_obj, 326);
        end
        if (removed_qty > 0) then begin
            restock_obj := obj_carrying_pid_obj(self_obj, 326);
            if (obj_type(self_obj) == 1) then begin
                restock_obj := obj_carrying_pid_obj(self_obj, 326);
                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                        restock_obj := critter_inven_obj(self_obj, 0);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(self_obj, restock_obj);
                        add_obj_to_inven(self_obj, restock_obj);
                    end
                end
                else begin
                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                        inven_unwield(self_obj);
                    end
                end
            end
            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
            destroy_object(restock_obj);
        end
        restock_obj := 0;
        restock_amt := 0;
    end
    debug_msg("   a");
    float_msg(self_obj, mstr(450 + (((global_var(GVAR_FALLOUT_2) == 8) or (global_var(GVAR_NEW_RENO_PORN_STAR) > 0) or (global_var(GVAR_NEW_RENO_HAS_REP_PRIZEFIGHTER) > 0) or (global_var(GVAR_NEW_RENO_MADE_MAN) > 0)) * ((dude_gender == 0) + (2 * (dude_gender == 1))))), FLOAT_MSG_RED);
    debug_msg("   b");
end

procedure Node991
begin
    bet_amt := 5;
    call Node016();
end

procedure Node992
begin
    bet_amt := 15;
    call Node016();
end

procedure Node993
begin
    bet_amt := 25;
    call Node016();
end

procedure Node994
begin
    bet_amt := 50;
    call Node016();
end

procedure Node995
begin
    bet_amt := 100;
    call Node016();
end

procedure floater_rand_with_check_cust(variable arg0, variable arg1, variable arg2)
begin
    variable LVar3 := 0;
    LVar3 := random(arg0, arg1);
    if ((LVar3 == 203) or (LVar3 == 215) or (LVar3 == 219) or (LVar3 == 255) or (LVar3 == 258) or ((260 <= LVar3) and (LVar3 <= 263)) or (LVar3 == 261) or (LVar3 == 262)) then begin
        float_msg(self_obj, "" + mstr(LVar3) + arg2 + mstr(LVar3 + 2000), FLOAT_MSG_YELLOW);
    end
    else begin
        float_msg(self_obj, mstr(LVar3), FLOAT_MSG_RED);
    end
end
