variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable tmp_gen_rep;
variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure push_p_proc;
procedure timed_event_p_proc;
procedure combat_p_proc;
procedure Node998;
procedure Node999;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure DoTest;
procedure DoChallenge;
procedure DoLearn;
procedure endTestFail;
procedure endTestPass;
procedure doFight;
procedure learn1;
procedure learn2;
procedure TakeInven;
procedure ReturnInven;
procedure checkTestObj;
procedure lopanHit;
procedure DoTalking;
procedure doVaultBoxerAppearance;
procedure removeVaultBoxerAppearance;
procedure checkLoad;
procedure startSequence;

import variable i_dragon_obj;
import variable i_lopan_obj;

variable Only_Once;
variable called;
variable learnCount;
variable rnd;
variable lastDudeTile;
variable lastDudeRot;
variable countTalk;
variable called1;

procedure map_exit_p_proc;
procedure Node4_5;
procedure NodeLearn;
procedure Node008a;
procedure Node010a;
procedure Node011a;
procedure Node2931;
procedure NodeAngry;
procedure Node013a;
procedure NodeAttackNow;
procedure NodeChallenge;
procedure NodeTest;
procedure SafeDestroy;
procedure HideObj;
procedure getCurrentPid;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777718) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777718)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777719) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777719)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777720) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777720)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
    i_dragon_obj := self_obj;
end

procedure critter_p_proc
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    if ((local_var(5) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack(dude_obj);
    end
    if (local_var(17) == 0) then begin
        if (tile_in_tile_rect(18111, 17894, 23312, 23294, dude_tile)) then begin
            set_local_var(17, 1);
            call startSequence();
        end
    end
    call checkTestObj();
    if (local_var(12)) then begin
        LVar0 := local_var(12);
        script_overrides;
    end
    if (LVar0 and (called == 0)) then begin
        if ((critter_state(LVar0) bwand 1) or (critter_state(LVar0) bwand 2)) then begin
            LVar1 := 4;
            LVar2 := 0;
            debug_msg("FCDRAGON: critter was dead..." + LVar1 + " cur: " + LVar2);
        end
        else begin
            LVar1 := get_critter_stat(LVar0, STAT_max_hp);
            LVar2 := get_critter_stat(LVar0, STAT_current_hp);
            debug_msg("FCDRAGON: critter wasn't dead... " + LVar1 + " cur: " + LVar2);
        end
        if (LVar2 < (LVar1 / 4)) then begin
            if (LVar2 > 0) then begin
                critter_heal(LVar0, 1 - LVar2);
            end
            float_msg(self_obj, mstr(226), FLOAT_MSG_WARNING);
            if (local_var(11) < 6) then begin
                called := 1;
                add_timer_event(self_obj, 2, 2);
                debug_msg("FCDRAGON: called dotest");
            end
            else begin
                called := 1;
                add_timer_event(self_obj, 2, 3);
                debug_msg("FCDRAGON: called do end test pass");
            end
        end
        else begin
            LVar1 := get_critter_stat(dude_obj, STAT_max_hp);
            LVar2 := get_critter_stat(dude_obj, STAT_current_hp);
            if (LVar2 < (LVar1 / 4)) then begin
                called := 1;
                float_msg(self_obj, mstr(227), FLOAT_MSG_WARNING);
                add_timer_event(self_obj, game_ticks(2), 4);
            end
        end
    end
    return 0;
    LVar0 := 0;
    LVar1 := 0;
    LVar2 := 0;
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(7, 5);
        float_msg(self_obj, mstr(201), FLOAT_MSG_YELLOW);
        add_timer_event(self_obj, game_ticks(5), 1);
    end
end

procedure talk_p_proc
begin
    Evil_Critter := 0;
    Slavery_Tolerant := 1;
    Karma_Perception := 40;
    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
    set_global_var(GVAR_KARMA_DEFENDER, 0);
    set_global_var(GVAR_KARMA_WANDERER, 0);
    set_global_var(GVAR_KARMA_BETRAYER, 0);
    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
    set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
    tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
    if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
    end
    if (tmp_gen_rep >= 1000) then begin
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
    end
    else begin
        if (tmp_gen_rep >= 750) then begin
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
        end
        else begin
            if (tmp_gen_rep >= 500) then begin
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
            end
            else begin
                if (tmp_gen_rep >= 250) then begin
                    set_global_var(GVAR_KARMA_DEFENDER, 1);
                end
                else begin
                    if (tmp_gen_rep > -250) then begin
                        set_global_var(GVAR_KARMA_WANDERER, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -500) then begin
                            set_global_var(GVAR_KARMA_BETRAYER, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -750) then begin
                                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -1000) then begin
                                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                end
                                else begin
                                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    if (local_var(2) == 0) then begin
        set_local_var(2, 1);
        set_local_var(3, (dude_charisma - self_charisma) * 5);
        debug_msg("Base Reaction == " + local_var(3));
    end
    Static_Reaction := 0;
    set_local_var(0, 0);
    debug_msg("Start Reaction == " + local_var(0));
    if (reaction_bonus_karma >= 0) then begin
        reaction_bonus_karma := reaction_bonus_karma / 1000;
    end
    else begin
        reaction_bonus_karma := -1 * (-1 * reaction_bonus_karma / 1000);
    end
    if (global_var(GVAR_TOWN_REP_SAN_FRANCISCO) >= 0) then begin
        reaction_bonus_town_rep := global_var(GVAR_TOWN_REP_SAN_FRANCISCO) / 2;
    end
    else begin
        reaction_bonus_town_rep := -1 * (-1 * global_var(GVAR_TOWN_REP_SAN_FRANCISCO) / 2);
    end
    if (has_trait(TRAIT_TRAIT, dude_obj, TRAIT_sex_appeal)) then begin
        if (dude_gender == self_gender) then begin
            Static_Reaction := Static_Reaction + -20;
        end
        else begin
            Static_Reaction := Static_Reaction + 20;
        end
        debug_msg("Sex Appeal Bonus == " + Static_Reaction);
    end
    else begin
        debug_msg("Sex Appeal Bonus == 0");
    end
    if (Evil_Critter == 1) then begin
        if (reaction_bonus_karma >= 0) then begin
            Static_Reaction := Static_Reaction - reaction_bonus_karma;
        end
        else begin
            Static_Reaction := Static_Reaction + reaction_bonus_karma;
        end
        debug_msg("Karma Reaction Bonus == " + Static_Reaction);
        if (reaction_bonus_town_rep >= 0) then begin
            Static_Reaction := Static_Reaction - reaction_bonus_town_rep;
        end
        else begin
            Static_Reaction := Static_Reaction + reaction_bonus_town_rep;
        end
        debug_msg("Town Rep Bonus == " + Static_Reaction);
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
        if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
            tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
        end
        if (tmp_gen_rep >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (tmp_gen_rep >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (tmp_gen_rep >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (tmp_gen_rep >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (global_var(GVAR_KARMA_HOLY_WARRIOR) == 1) then begin
            Static_Reaction := Static_Reaction - 20;
        end
        else begin
            if (global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES) == 1) then begin
                Static_Reaction := Static_Reaction - 15;
            end
            else begin
                if (global_var(GVAR_KARMA_SHIELD_OF_HOPE) == 1) then begin
                    Static_Reaction := Static_Reaction - 10;
                end
                else begin
                    if (global_var(GVAR_KARMA_DEFENDER) == 1) then begin
                        Static_Reaction := Static_Reaction - 5;
                    end
                    else begin
                        if (global_var(GVAR_KARMA_WANDERER) == 1) then begin
                            Static_Reaction := Static_Reaction - 0;
                        end
                        else begin
                            if (global_var(GVAR_KARMA_BETRAYER) == 1) then begin
                                Static_Reaction := Static_Reaction + -5;
                            end
                            else begin
                                if (global_var(GVAR_KARMA_SWORD_OF_DESPAIR) == 1) then begin
                                    Static_Reaction := Static_Reaction + -10;
                                end
                                else begin
                                    if (global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE) == 1) then begin
                                        Static_Reaction := Static_Reaction + -15;
                                    end
                                    else begin
                                        Static_Reaction := Static_Reaction + -20;
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        debug_msg("Bad Person Reaction Bonus == " + Static_Reaction);
    end
    else begin
        Static_Reaction := Static_Reaction + reaction_bonus_karma;
        debug_msg("Karma Reaction Bonus == " + Static_Reaction);
        Static_Reaction := Static_Reaction + reaction_bonus_town_rep;
        debug_msg("Town Rep Bonus == " + Static_Reaction);
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
        if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
            tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
        end
        if (tmp_gen_rep >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (tmp_gen_rep >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (tmp_gen_rep >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (tmp_gen_rep >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (global_var(GVAR_KARMA_HOLY_WARRIOR) == 1) then begin
            Static_Reaction := Static_Reaction + 20;
        end
        else begin
            if (global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES) == 1) then begin
                Static_Reaction := Static_Reaction + 15;
            end
            else begin
                if (global_var(GVAR_KARMA_SHIELD_OF_HOPE) == 1) then begin
                    Static_Reaction := Static_Reaction + 10;
                end
                else begin
                    if (global_var(GVAR_KARMA_DEFENDER) == 1) then begin
                        Static_Reaction := Static_Reaction + 5;
                    end
                    else begin
                        if (global_var(GVAR_KARMA_WANDERER) == 1) then begin
                            Static_Reaction := Static_Reaction + 0;
                        end
                        else begin
                            if (global_var(GVAR_KARMA_BETRAYER) == 1) then begin
                                Static_Reaction := Static_Reaction + -5;
                            end
                            else begin
                                if (global_var(GVAR_KARMA_SWORD_OF_DESPAIR) == 1) then begin
                                    Static_Reaction := Static_Reaction + -10;
                                end
                                else begin
                                    if (global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE) == 1) then begin
                                        Static_Reaction := Static_Reaction + -15;
                                    end
                                    else begin
                                        Static_Reaction := Static_Reaction + -20;
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        debug_msg("Good Person Reaction Bonus == " + Static_Reaction);
    end
    if (Slavery_Tolerant == 0) then begin
        if (global_var(GVAR_REPUTATION_SLAVER) == 1) then begin
            Static_Reaction := Static_Reaction + (2 * -25);
        end
    end
    else begin
        if (Slavery_Tolerant == 1) then begin
            if (global_var(GVAR_REPUTATION_SLAVER) == 1) then begin
                Static_Reaction := Static_Reaction + -25;
            end
        end
        else begin
            if (Slavery_Tolerant == 3) then begin
                if (global_var(GVAR_REPUTATION_SLAVER) == 1) then begin
                    Static_Reaction := Static_Reaction - -25;
                end
            end
        end
    end
    debug_msg("Slaver + Aligned Reaction == " + Static_Reaction);
    Static_Reaction := Static_Reaction + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence));
    debug_msg("Presence Reaction == " + Static_Reaction);
    if (global_var(GVAR_CHILDKILLER_REPUTATION) >= 2) then begin
        Static_Reaction := Static_Reaction + -30;
    end
    debug_msg("Childkiller Reaction == " + Static_Reaction);
    if (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality)) then begin
        if (Evil_Critter == 1) then begin
            if (Static_Reaction > 0) then begin
                Static_Reaction := Static_Reaction * -1;
            end
        end
        else begin
            if (Static_Reaction < 0) then begin
                Static_Reaction := Static_Reaction * -1;
            end
        end
    end
    set_local_var(0, local_var(3) + Static_Reaction);
    debug_msg("Initial Reaction == " + local_var(0));
    if (local_var(15)) then begin
        set_local_var(5, 1);
        attack(dude_obj);
    end
    else begin
        if ((global_var(GVAR_SAN_FRAN_FLAGS) bwand 1) != 0) then begin
            start_gdialog(814, self_obj, 4, 32, 2);
            gsay_start;
            call Node021();
            gsay_end;
            end_dialogue;
        end
        else begin
            if ((global_var(GVAR_SAN_FRAN_ELRON) >= 8) and not((global_var(GVAR_SAN_FRAN_FLAGS) bwand 262144) != 0)) then begin
                call Node022();
            end
            else begin
                if (local_var(7) == 6) then begin
                    start_gdialog(814, self_obj, 4, 32, 2);
                    gsay_start;
                    call Node001();
                    gsay_end;
                    end_dialogue;
                end
                else begin
                    if (local_var(7) == 5) then begin
                        start_gdialog(814, self_obj, 4, 32, 2);
                        gsay_start;
                        call Node023();
                        gsay_end;
                        end_dialogue;
                    end
                    else begin
                        if (local_var(8) and not((global_var(GVAR_SAN_FRAN_FLAGS) bwand 1048576) != 0)) then begin
                            start_gdialog(814, self_obj, 4, 32, 2);
                            gsay_start;
                            call Node024();
                            gsay_end;
                            end_dialogue;
                        end
                        else begin
                            if (((global_var(GVAR_SAN_FRAN_FLAGS) bwand 8) != 0) and ((global_var(GVAR_SAN_FRAN_FLAGS) bwand 1048576) != 0)) then begin
                                start_gdialog(814, self_obj, 4, 32, 2);
                                gsay_start;
                                call Node027();
                                gsay_end;
                                end_dialogue;
                            end
                            else begin
                                if (global_var(GVAR_SAN_FRAN_BADGER) == 2) then begin
                                    start_gdialog(814, self_obj, 4, 32, 2);
                                    gsay_start;
                                    call Node026();
                                    gsay_end;
                                    end_dialogue;
                                end
                                else begin
                                    if ((global_var(GVAR_SAN_FRAN_FLAGS) bwand 8) != 0) then begin
                                        start_gdialog(814, self_obj, 4, 32, 2);
                                        gsay_start;
                                        call Node028();
                                        gsay_end;
                                        end_dialogue;
                                    end
                                    else begin
                                        if ((local_var(4) == 1) and (dude_iq < 4)) then begin
                                            if (dude_iq == 1) then begin
                                                start_gdialog(814, self_obj, 4, 32, 2);
                                                gsay_start;
                                                call Node002();
                                                gsay_end;
                                                end_dialogue;
                                            end
                                            else begin
                                                if ((dude_iq > 1) and (dude_iq < 4)) then begin
                                                    start_gdialog(814, self_obj, 4, 32, 2);
                                                    gsay_start;
                                                    call Node006();
                                                    gsay_end;
                                                    end_dialogue;
                                                end
                                            end
                                        end
                                        else begin
                                            start_gdialog(814, self_obj, 4, 32, 2);
                                            gsay_start;
                                            call Node001();
                                            gsay_end;
                                            end_dialogue;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    set_local_var(4, 1);
    if (local_var(7) == 2) then begin
        set_local_var(7, 0);
        set_local_var(13, tile_num(self_obj));
        set_local_var(14, dude_tile);
        call DoTest();
    end
    else begin
        if (local_var(7) == 3) then begin
            set_local_var(14, dude_tile);
            set_local_var(7, 0);
            set_local_var(15, 1);
            call DoChallenge();
        end
        else begin
            if (local_var(7) == 1) then begin
                set_local_var(14, dude_tile);
                set_local_var(13, tile_num(self_obj));
                set_local_var(7, 0);
                set_local_var(9, local_var(9) + 1);
                if (local_var(9) < 4) then begin
                    set_local_var(10, game_time + (24 * (60 * (60 * 10))));
                end
                else begin
                    set_local_var(10, -1);
                end
                call DoLearn();
            end
        end
    end
end

procedure destroy_p_proc
begin
    set_global_var(GVAR_SAN_FRAN_FLAGS, global_var(GVAR_SAN_FRAN_FLAGS) bwor 16);
    if (local_var(15) == 1) then begin
        if (global_var(GVAR_SAN_FRAN_LOPAN_KDRAGON_QST) == 0) then begin
            give_exp_points(2000);
            display_msg(g_mstr(100) + 2000 + g_mstr(101));
            set_global_var(GVAR_TOWN_REP_SAN_FRANCISCO, global_var(GVAR_TOWN_REP_SAN_FRANCISCO) + 5);
        end
        if (source_obj == dude_obj) then begin
            if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 1);
                set_global_var(GVAR_BERSERKER_REPUTATION, 0);
            end
            if (critter_kill_type(self_obj) == KILL_TYPE_children_kills) then begin
                if (source_obj == dude_obj) then begin
                    set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                    set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                    set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -15);
                    debug_msg("Player gains " + -15 + " Karma Points.");
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                    set_global_var(GVAR_KARMA_DEFENDER, 0);
                    set_global_var(GVAR_KARMA_WANDERER, 0);
                    set_global_var(GVAR_KARMA_BETRAYER, 0);
                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                    tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
                    if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
                        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
                    end
                    if (tmp_gen_rep >= 1000) then begin
                        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                    end
                    else begin
                        if (tmp_gen_rep >= 750) then begin
                            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                        end
                        else begin
                            if (tmp_gen_rep >= 500) then begin
                                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                            end
                            else begin
                                if (tmp_gen_rep >= 250) then begin
                                    set_global_var(GVAR_KARMA_DEFENDER, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -250) then begin
                                        set_global_var(GVAR_KARMA_WANDERER, 1);
                                    end
                                    else begin
                                        if (tmp_gen_rep > -500) then begin
                                            set_global_var(GVAR_KARMA_BETRAYER, 1);
                                        end
                                        else begin
                                            if (tmp_gen_rep > -750) then begin
                                                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                            end
                                            else begin
                                                if (tmp_gen_rep > -1000) then begin
                                                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                                end
                                                else begin
                                                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                    set_global_var(GVAR_TOWN_REP_SAN_FRANCISCO, global_var(GVAR_TOWN_REP_SAN_FRANCISCO) + -8);
                    debug_msg("Added " + -8 + " to Town Rep");
                end
            end
            if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
                set_global_var(GVAR_BERSERKER_REPUTATION, 1);
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
            end
            set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 0);
            debug_msg("Player gains " + 0 + " Karma Points.");
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
            set_global_var(GVAR_KARMA_DEFENDER, 0);
            set_global_var(GVAR_KARMA_WANDERER, 0);
            set_global_var(GVAR_KARMA_BETRAYER, 0);
            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
            set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
            set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
            tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
            if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
                tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
            end
            if (tmp_gen_rep >= 1000) then begin
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
            end
            else begin
                if (tmp_gen_rep >= 750) then begin
                    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                end
                else begin
                    if (tmp_gen_rep >= 500) then begin
                        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                    end
                    else begin
                        if (tmp_gen_rep >= 250) then begin
                            set_global_var(GVAR_KARMA_DEFENDER, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -250) then begin
                                set_global_var(GVAR_KARMA_WANDERER, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -500) then begin
                                    set_global_var(GVAR_KARMA_BETRAYER, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -750) then begin
                                        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                    end
                                    else begin
                                        if (tmp_gen_rep > -1000) then begin
                                            set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                        end
                                        else begin
                                            set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        fade_out;
        if (combat_is_initialized) then begin
            terminate_combat;
        end
        move_to(dude_obj, local_var(14), dude_elevation);
        call ReturnInven();
        call removeVaultBoxerAppearance();
        fade_in;
        display_mstr(214);
    end
    else begin
        if (source_obj == dude_obj) then begin
            set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
            if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 1);
                set_global_var(GVAR_BERSERKER_REPUTATION, 0);
            end
            if (critter_kill_type(self_obj) == KILL_TYPE_children_kills) then begin
                if (source_obj == dude_obj) then begin
                    set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                    set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                    set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -15);
                    debug_msg("Player gains " + -15 + " Karma Points.");
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                    set_global_var(GVAR_KARMA_DEFENDER, 0);
                    set_global_var(GVAR_KARMA_WANDERER, 0);
                    set_global_var(GVAR_KARMA_BETRAYER, 0);
                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                    tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
                    if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
                        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
                    end
                    if (tmp_gen_rep >= 1000) then begin
                        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                    end
                    else begin
                        if (tmp_gen_rep >= 750) then begin
                            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                        end
                        else begin
                            if (tmp_gen_rep >= 500) then begin
                                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                            end
                            else begin
                                if (tmp_gen_rep >= 250) then begin
                                    set_global_var(GVAR_KARMA_DEFENDER, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -250) then begin
                                        set_global_var(GVAR_KARMA_WANDERER, 1);
                                    end
                                    else begin
                                        if (tmp_gen_rep > -500) then begin
                                            set_global_var(GVAR_KARMA_BETRAYER, 1);
                                        end
                                        else begin
                                            if (tmp_gen_rep > -750) then begin
                                                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                            end
                                            else begin
                                                if (tmp_gen_rep > -1000) then begin
                                                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                                end
                                                else begin
                                                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                    set_global_var(GVAR_TOWN_REP_SAN_FRANCISCO, global_var(GVAR_TOWN_REP_SAN_FRANCISCO) + -8);
                    debug_msg("Added " + -8 + " to Town Rep");
                end
            end
            if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
                set_global_var(GVAR_BERSERKER_REPUTATION, 1);
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
            end
            set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
            debug_msg("Player gains " + -10 + " Karma Points.");
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
            set_global_var(GVAR_KARMA_DEFENDER, 0);
            set_global_var(GVAR_KARMA_WANDERER, 0);
            set_global_var(GVAR_KARMA_BETRAYER, 0);
            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
            set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
            set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
            tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
            if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
                tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
            end
            if (tmp_gen_rep >= 1000) then begin
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
            end
            else begin
                if (tmp_gen_rep >= 750) then begin
                    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                end
                else begin
                    if (tmp_gen_rep >= 500) then begin
                        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                    end
                    else begin
                        if (tmp_gen_rep >= 250) then begin
                            set_global_var(GVAR_KARMA_DEFENDER, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -250) then begin
                                set_global_var(GVAR_KARMA_WANDERER, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -500) then begin
                                    set_global_var(GVAR_KARMA_BETRAYER, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -750) then begin
                                        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                    end
                                    else begin
                                        if (tmp_gen_rep > -1000) then begin
                                            set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                        end
                                        else begin
                                            set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            set_global_var(GVAR_TOWN_REP_SAN_FRANCISCO, global_var(GVAR_TOWN_REP_SAN_FRANCISCO) + -5);
            debug_msg("Added " + -5 + " to Town Rep");
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 0) then begin
        display_mstr(100);
    end
    else begin
        display_mstr(101);
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(102);
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (not(local_var(15))) then begin
            set_global_var(GVAR_SAN_FRAN_FLAGS, global_var(GVAR_SAN_FRAN_FLAGS) bwor 1);
        end
    end
end

procedure map_enter_p_proc
begin
    Only_Once := 0;
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 167);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_THE_DRAGON);
    if (not(is_loading_game)) then begin
        call checkLoad();
    end
end

procedure push_p_proc
begin
    script_overrides;
    move_to(dude_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(dude_tile, tile_num(self_obj)), 1), dude_elevation);
    display_mstr(200);
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if (not(combat_is_initialized)) then begin
            if (obj_can_see_obj(self_obj, dude_obj) and (tile_distance_objs(self_obj, dude_obj) < 5)) then begin
                float_msg(self_obj, mstr(202), FLOAT_MSG_YELLOW);
                set_local_var(5, 2);
            end
        end
    end
    else begin
        if (fixed_param == 2) then begin
            game_ui_enable;
            call DoTest();
        end
        else begin
            if (fixed_param == 4) then begin
                game_ui_enable;
                call endTestFail();
            end
            else begin
                if (fixed_param == 3) then begin
                    game_ui_enable;
                    call endTestPass();
                end
                else begin
                    if (fixed_param == 5) then begin
                        call doFight();
                    end
                    else begin
                        if (fixed_param == 6) then begin
                            call learn1();
                        end
                        else begin
                            if (fixed_param == 7) then begin
                                call learn2();
                            end
                            else begin
                                if (fixed_param == 8) then begin
                                    call lopanHit();
                                end
                                else begin
                                    if (fixed_param == 9) then begin
                                        call DoTalking();
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure combat_p_proc
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    call checkTestObj();
    if (local_var(12)) then begin
        LVar0 := local_var(12);
        script_overrides;
    end
    if (LVar0 and (called == 0)) then begin
        if ((critter_state(LVar0) bwand 1) or (critter_state(LVar0) bwand 2) or (critter_state(LVar0) bwand 1)) then begin
            LVar1 := 4;
            LVar2 := 0;
            debug_msg("FCDRAGON: critter was dead..." + LVar1 + " cur: " + LVar2);
        end
        else begin
            LVar1 := get_critter_stat(LVar0, STAT_max_hp);
            LVar2 := get_critter_stat(LVar0, STAT_current_hp);
            debug_msg("FCDRAGON: critter wasn't dead... " + LVar1 + " cur: " + LVar2);
        end
        if (LVar2 < (LVar1 / 4)) then begin
            if (LVar2 > 0) then begin
                critter_heal(LVar0, 1 - LVar2);
            end
            float_msg(self_obj, mstr(226), FLOAT_MSG_WARNING);
            if (local_var(11) < 6) then begin
                called := 1;
                add_timer_event(self_obj, 2, 2);
                debug_msg("FCDRAGON: called dotest");
            end
            else begin
                called := 1;
                add_timer_event(self_obj, 2, 3);
                debug_msg("FCDRAGON: called do end test pass");
            end
        end
        else begin
            LVar1 := get_critter_stat(dude_obj, STAT_max_hp);
            LVar2 := get_critter_stat(dude_obj, STAT_current_hp);
            if (LVar2 < (LVar1 / 4)) then begin
                called := 1;
                float_msg(self_obj, mstr(227), FLOAT_MSG_WARNING);
                add_timer_event(self_obj, game_ticks(2), 4);
            end
        end
    end
    return 0;
    LVar0 := 0;
    LVar1 := 0;
    LVar2 := 0;
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
end

procedure Node001
begin
    Reply(103);
    giq_option(-3, NAME, 105, Node003, NEUTRAL_REACTION);
    giq_option(-3, NAME, 104, Node002, NEUTRAL_REACTION);
    if ((local_var(18) == 0) and not((global_var(GVAR_SAN_FRAN_FLAGS) bwand 8) != 0)) then begin
        set_local_var(18, local_var(18) + 1);
        giq_option(4, NAME, 106, Node007, NEUTRAL_REACTION);
    end
    if (local_var(7) == 0) then begin
        giq_option(4, NAME, 107, Node020, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 108, Node4_5, NEUTRAL_REACTION);
    if (local_var(7) == 0) then begin
        giq_option(4, NAME, 109, Node012, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 110, Node999, NEUTRAL_REACTION);
end

procedure Node002
begin
    Reply(111);
    giq_option(-3, NAME, 112, Node999, NEUTRAL_REACTION);
end

procedure Node003
begin
    Reply(113);
    giq_option(-3, NAME, 114, Node4_5, NEUTRAL_REACTION);
    giq_option(-3, NAME, 115, Node999, NEUTRAL_REACTION);
end

procedure Node004
begin
    if ((local_var(8) == 0) and (local_var(10) != -1)) then begin
        if (dude_skill(SKILL_UNARMED_COMBAT) < 100) then begin
            debug_msg("Game_Time: " + game_time + " Next_Time: " + local_var(10));
            if (game_time > local_var(10)) then begin
                Reply(116);
                giq_option(1, NAME, 117, NodeLearn, NEUTRAL_REACTION);
            end
            else begin
                Reply(204);
                giq_option(0, NAME, g_mstr(350), Node999, NEUTRAL_REACTION);
            end
        end
        else begin
            Reply(216);
            giq_option(0, NAME, g_mstr(350), Node999, NEUTRAL_REACTION);
        end
    end
    else begin
        Reply(203);
        giq_option(0, NAME, g_mstr(350), Node999, NEUTRAL_REACTION);
    end
end

procedure Node005
begin
    Reply(118);
    giq_option(4, NAME, 119, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 119, Node999, NEUTRAL_REACTION);
end

procedure Node006
begin
    Reply(120);
    giq_option(-3, NAME, 121, Node999, NEUTRAL_REACTION);
end

procedure Node007
begin
    Reply(122);
    giq_option(4, NAME, 123, Node008a, BAD_REACTION);
    giq_option(4, NAME, 124, Node009, GOOD_REACTION);
    giq_option(4, NAME, 125, Node001, NEUTRAL_REACTION);
end

procedure Node008
begin
    set_local_var(7, 5);
    Reply(126);
    giq_option(4, NAME, 127, Node999, NEUTRAL_REACTION);
end

procedure Node009
begin
    Reply(128);
    giq_option(4, NAME, 129, Node010a, GOOD_REACTION);
    giq_option(4, NAME, 130, Node001, NEUTRAL_REACTION);
    giq_option(4, NAME, 131, Node999, NEUTRAL_REACTION);
end

procedure Node010
begin
    Reply(132);
    giq_option(4, NAME, 133, Node011a, BAD_REACTION);
    giq_option(4, NAME, 134, Node2931, NEUTRAL_REACTION);
    giq_option(4, NAME, 135, Node999, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(136);
    giq_option(4, NAME, 137, Node013, BAD_REACTION);
    giq_option(4, NAME, 138, Node014, BAD_REACTION);
    giq_option(4, NAME, 139, Node001, NEUTRAL_REACTION);
    giq_option(4, NAME, 140, Node999, NEUTRAL_REACTION);
end

procedure Node012
begin
    Reply(141);
    giq_option(4, NAME, 142, Node015, NEUTRAL_REACTION);
    giq_option(4, NAME, 143, Node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 144, Node999, NEUTRAL_REACTION);
end

procedure Node013
begin
    Reply(145);
    giq_option(4, NAME, 146, NodeAngry, NEUTRAL_REACTION);
end

procedure Node014
begin
    Reply(147);
    giq_option(4, NAME, 148, Node013a, BAD_REACTION);
    giq_option(7, NAME, 149, Node017, NEUTRAL_REACTION);
    giq_option(4, NAME, 150, Node001, NEUTRAL_REACTION);
    giq_option(4, NAME, 151, Node999, NEUTRAL_REACTION);
end

procedure Node015
begin
    Reply(152);
    giq_option(4, NAME, 153, NodeAttackNow, NEUTRAL_REACTION);
    giq_option(4, NAME, 154, NodeChallenge, NEUTRAL_REACTION);
end

procedure Node016
begin
    if (local_var(8) == 0) then begin
        Reply(155);
        giq_option(4, NAME, 156, NodeTest, NEUTRAL_REACTION);
    end
    else begin
        if (not((global_var(GVAR_SAN_FRAN_FLAGS) bwand 8) != 0)) then begin
            Reply(215);
        end
        else begin
            Reply(220);
        end
        giq_option(0, NAME, g_mstr(350), Node999, NEUTRAL_REACTION);
    end
end

procedure Node017
begin
    Reply(157);
    giq_option(4, NAME, 158, Node018, NEUTRAL_REACTION);
    giq_option(4, NAME, 159, Node013, BAD_REACTION);
end

procedure Node018
begin
    Reply(160);
    giq_option(4, NAME, 161, Node2931, NEUTRAL_REACTION);
    giq_option(4, NAME, 162, Node999, NEUTRAL_REACTION);
end

procedure Node019
begin
    Reply(163);
    giq_option(4, NAME, 164, NodeTest, NEUTRAL_REACTION);
    giq_option(4, NAME, 165, Node999, NEUTRAL_REACTION);
end

procedure Node020
begin
    Reply(166);
    giq_option(4, NAME, 167, Node2931, NEUTRAL_REACTION);
    giq_option(4, NAME, 168, Node001, NEUTRAL_REACTION);
    giq_option(4, NAME, 169, Node999, NEUTRAL_REACTION);
end

procedure Node021
begin
    Reply(170);
    giq_option(4, NAME, 171, Node998, NEUTRAL_REACTION);
end

procedure Node022
begin
    float_msg(self_obj, mstr(172), FLOAT_MSG_RED);
end

procedure Node023
begin
    Reply(174);
    giq_option(4, NAME, 109, Node015, NEUTRAL_REACTION);
    giq_option(4, NAME, 175, Node999, NEUTRAL_REACTION);
end

procedure Node024
begin
    set_global_var(GVAR_SAN_FRAN_FLAGS, global_var(GVAR_SAN_FRAN_FLAGS) bwor 1048576);
    if (global_var(GVAR_SAN_FRAN_DRAGON_KLOPAN_QST) == 0) then begin
        set_global_var(GVAR_SAN_FRAN_DRAGON_KLOPAN_QST, 1);
    end
    Reply(176);
    giq_option(4, NAME, 177, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 178, Node025, NEUTRAL_REACTION);
    giq_option(4, NAME, 179, Node001, NEUTRAL_REACTION);
end

procedure Node025
begin
    Reply(180);
    giq_option(4, NAME, 181, Node001, NEUTRAL_REACTION);
    giq_option(4, NAME, 182, Node999, NEUTRAL_REACTION);
end

procedure Node026
begin
    Reply(183);
    giq_option(4, NAME, 184, Node001, NEUTRAL_REACTION);
    giq_option(4, NAME, 185, Node999, NEUTRAL_REACTION);
end

procedure Node027
begin
    if (global_var(GVAR_SAN_FRAN_LOPAN_KDRAGON_QST) == 1) then begin
        set_global_var(GVAR_SAN_FRAN_LOPAN_KDRAGON_QST, 3);
    end
    set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 50);
    debug_msg("Player gains " + 50 + " Karma Points.");
    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
    set_global_var(GVAR_KARMA_DEFENDER, 0);
    set_global_var(GVAR_KARMA_WANDERER, 0);
    set_global_var(GVAR_KARMA_BETRAYER, 0);
    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
    set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
    tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
    if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
    end
    if (tmp_gen_rep >= 1000) then begin
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
    end
    else begin
        if (tmp_gen_rep >= 750) then begin
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
        end
        else begin
            if (tmp_gen_rep >= 500) then begin
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
            end
            else begin
                if (tmp_gen_rep >= 250) then begin
                    set_global_var(GVAR_KARMA_DEFENDER, 1);
                end
                else begin
                    if (tmp_gen_rep > -250) then begin
                        set_global_var(GVAR_KARMA_WANDERER, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -500) then begin
                            set_global_var(GVAR_KARMA_BETRAYER, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -750) then begin
                                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -1000) then begin
                                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                end
                                else begin
                                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    set_local_var(7, 6);
    set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 15);
    debug_msg("Player gains " + 15 + " Karma Points.");
    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
    set_global_var(GVAR_KARMA_DEFENDER, 0);
    set_global_var(GVAR_KARMA_WANDERER, 0);
    set_global_var(GVAR_KARMA_BETRAYER, 0);
    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
    set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
    tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
    if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
    end
    if (tmp_gen_rep >= 1000) then begin
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
    end
    else begin
        if (tmp_gen_rep >= 750) then begin
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
        end
        else begin
            if (tmp_gen_rep >= 500) then begin
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
            end
            else begin
                if (tmp_gen_rep >= 250) then begin
                    set_global_var(GVAR_KARMA_DEFENDER, 1);
                end
                else begin
                    if (tmp_gen_rep > -250) then begin
                        set_global_var(GVAR_KARMA_WANDERER, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -500) then begin
                            set_global_var(GVAR_KARMA_BETRAYER, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -750) then begin
                                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -1000) then begin
                                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                end
                                else begin
                                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    give_exp_points(3000);
    display_msg(g_mstr(100) + 3000 + g_mstr(101));
    set_global_var(GVAR_TOWN_REP_SAN_FRANCISCO, global_var(GVAR_TOWN_REP_SAN_FRANCISCO) + 10);
    set_global_var(GVAR_SAN_FRAN_DRAGON_KLOPAN_QST, 2);
    Reply(186);
    giq_option(4, NAME, 187, Node001, NEUTRAL_REACTION);
    giq_option(4, NAME, 188, Node999, NEUTRAL_REACTION);
end

procedure Node028
begin
    if (global_var(GVAR_SAN_FRAN_LOPAN_KDRAGON_QST) == 1) then begin
        set_global_var(GVAR_SAN_FRAN_LOPAN_KDRAGON_QST, 3);
    end
    set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 25);
    debug_msg("Player gains " + 25 + " Karma Points.");
    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
    set_global_var(GVAR_KARMA_DEFENDER, 0);
    set_global_var(GVAR_KARMA_WANDERER, 0);
    set_global_var(GVAR_KARMA_BETRAYER, 0);
    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
    set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
    tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
    if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
    end
    if (tmp_gen_rep >= 1000) then begin
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
    end
    else begin
        if (tmp_gen_rep >= 750) then begin
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
        end
        else begin
            if (tmp_gen_rep >= 500) then begin
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
            end
            else begin
                if (tmp_gen_rep >= 250) then begin
                    set_global_var(GVAR_KARMA_DEFENDER, 1);
                end
                else begin
                    if (tmp_gen_rep > -250) then begin
                        set_global_var(GVAR_KARMA_WANDERER, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -500) then begin
                            set_global_var(GVAR_KARMA_BETRAYER, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -750) then begin
                                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -1000) then begin
                                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                end
                                else begin
                                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    set_local_var(7, 6);
    set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 15);
    debug_msg("Player gains " + 15 + " Karma Points.");
    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
    set_global_var(GVAR_KARMA_DEFENDER, 0);
    set_global_var(GVAR_KARMA_WANDERER, 0);
    set_global_var(GVAR_KARMA_BETRAYER, 0);
    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
    set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
    tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
    if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
    end
    if (tmp_gen_rep >= 1000) then begin
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
    end
    else begin
        if (tmp_gen_rep >= 750) then begin
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
        end
        else begin
            if (tmp_gen_rep >= 500) then begin
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
            end
            else begin
                if (tmp_gen_rep >= 250) then begin
                    set_global_var(GVAR_KARMA_DEFENDER, 1);
                end
                else begin
                    if (tmp_gen_rep > -250) then begin
                        set_global_var(GVAR_KARMA_WANDERER, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -500) then begin
                            set_global_var(GVAR_KARMA_BETRAYER, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -750) then begin
                                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -1000) then begin
                                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                end
                                else begin
                                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    give_exp_points(3000);
    display_msg(g_mstr(100) + 3000 + g_mstr(101));
    set_global_var(GVAR_TOWN_REP_SAN_FRANCISCO, global_var(GVAR_TOWN_REP_SAN_FRANCISCO) + 10);
    set_global_var(GVAR_SAN_FRAN_DRAGON_KLOPAN_QST, 2);
    Reply(221);
    giq_option(4, NAME, 222, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 223, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 224, Node001, NEUTRAL_REACTION);
    giq_option(-3, NAME, 225, Node001, NEUTRAL_REACTION);
end

procedure Node029
begin
    if (local_var(8) == 0) then begin
        Reply(230);
        giq_option(4, NAME, 231, Node030, NEUTRAL_REACTION);
        giq_option(4, NAME, 232, Node999, NEUTRAL_REACTION);
    end
    else begin
        if (not((global_var(GVAR_SAN_FRAN_FLAGS) bwand 8) != 0)) then begin
            Reply(215);
        end
        else begin
            Reply(220);
        end
        giq_option(0, NAME, g_mstr(350), Node999, NEUTRAL_REACTION);
    end
end

procedure Node030
begin
    Reply(233);
    giq_option(4, NAME, 234, NodeTest, NEUTRAL_REACTION);
    giq_option(4, NAME, 235, Node999, NEUTRAL_REACTION);
end

procedure Node031
begin
    Reply(236);
    giq_option(4, NAME, 237, Node001, NEUTRAL_REACTION);
    giq_option(4, NAME, 238, Node999, NEUTRAL_REACTION);
end

procedure DoTest
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    if (not(combat_is_initialized)) then begin
        debug_msg("FCDRAGON: in dotest");
        called := 0;
        called1 := 0;
        call SafeDestroy();
        call TakeInven();
        call doVaultBoxerAppearance();
        if (local_var(11) == 0) then begin
            fade_out;
            if (not(tile_contains_pid_obj(7635, 0, 16777601))) then begin
                create_object(16777601, 7635, 0);
                LVar1 := LVar1 + 1;
            end
            if (not(tile_contains_pid_obj(7634, 0, 16777603))) then begin
                create_object(16777603, 7634, 0);
                LVar1 := LVar1 + 1;
            end
            if (not(tile_contains_pid_obj(7833, 0, 16777605))) then begin
                create_object(16777605, 7833, 0);
                LVar1 := LVar1 + 1;
            end
            if (not(tile_contains_pid_obj(7832, 0, 16777607))) then begin
                create_object(16777607, 7832, 0);
                LVar1 := LVar1 + 1;
            end
            if (not(tile_contains_pid_obj(8031, 0, 16777609))) then begin
                create_object(16777609, 8031, 0);
                LVar1 := LVar1 + 1;
            end
            if (not(tile_contains_pid_obj(8030, 0, 16777611))) then begin
                create_object(16777611, 8030, 0);
                LVar1 := LVar1 + 1;
            end
            debug_msg("FCDRAGON: count was at " + LVar1);
        end
        if (local_var(11) < 6) then begin
            game_ui_disable;
            critter_heal(dude_obj, get_critter_stat(dude_obj, STAT_max_hp) - get_critter_stat(dude_obj, STAT_current_hp));
            move_to(self_obj, 19501, elevation(self_obj));
            move_to(dude_obj, tile_num_in_direction(20501, 4, 2), dude_elevation);
            if (local_var(11) == 0) then begin
                set_local_var(12, tile_contains_pid_obj(7635, 0, 16777601));
                LVar0 := 206;
            end
            else begin
                if (local_var(11) == 1) then begin
                    set_local_var(12, tile_contains_pid_obj(7634, 0, 16777603));
                    float_msg(self_obj, mstr(228), FLOAT_MSG_WARNING);
                    LVar0 := 207;
                end
                else begin
                    if (local_var(11) == 2) then begin
                        set_local_var(12, tile_contains_pid_obj(7833, 0, 16777605));
                        float_msg(self_obj, mstr(228), FLOAT_MSG_WARNING);
                        LVar0 := 208;
                    end
                    else begin
                        if (local_var(11) == 3) then begin
                            set_local_var(12, tile_contains_pid_obj(7832, 0, 16777607));
                            float_msg(self_obj, mstr(228), FLOAT_MSG_WARNING);
                            LVar0 := 209;
                        end
                        else begin
                            if (local_var(11) == 4) then begin
                                set_local_var(12, tile_contains_pid_obj(8031, 0, 16777609));
                                float_msg(self_obj, mstr(228), FLOAT_MSG_WARNING);
                                LVar0 := 210;
                            end
                            else begin
                                if (local_var(11) == 5) then begin
                                    set_local_var(12, tile_contains_pid_obj(8030, 0, 16777611));
                                    float_msg(self_obj, mstr(228), FLOAT_MSG_WARNING);
                                    LVar0 := 205;
                                end
                            end
                        end
                    end
                end
            end
            if (local_var(12)) then begin
                move_to(local_var(12), 20501, 0);
            end
            debug_msg("FCDRAGON: uhh test obj set at: " + local_var(12));
            critter_add_trait(local_var(12), TRAIT_OBJECT, OBJECT_AI_PACKET, AI_THE_DRAGON);
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            anim(self_obj, 1000, 3);
            reg_anim_func(3, 0);
            reg_anim_func(2, local_var(12));
            reg_anim_func(1, 1);
            anim(local_var(12), 1000, 4);
            reg_anim_func(3, 0);
            reg_anim_func(2, dude_obj);
            reg_anim_func(1, 1);
            anim(dude_obj, 1000, 1);
            reg_anim_func(3, 0);
            fade_in;
            game_ui_disable;
            float_msg(local_var(12), mstr(LVar0), FLOAT_MSG_NORMAL);
            add_timer_event(self_obj, game_ticks(3), 5);
        end
        set_local_var(11, local_var(11) + 1);
    end
    else begin
        if (called1 == 0) then begin
            called1 := 1;
            fade_out;
            call HideObj();
        end
        terminate_combat;
        add_timer_event(self_obj, 2, 2);
    end
    return 0;
    LVar0 := 0;
    LVar1 := 0;
end

procedure DoChallenge
begin
    game_ui_disable;
    call TakeInven();
    call doVaultBoxerAppearance();
    fade_out;
    critter_heal(dude_obj, get_critter_stat(dude_obj, STAT_max_hp) - get_critter_stat(dude_obj, STAT_current_hp));
    critter_heal(self_obj, get_critter_stat(self_obj, STAT_max_hp) - get_critter_stat(self_obj, STAT_current_hp));
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 154);
    move_to(self_obj, 20501, elevation(self_obj));
    move_to(dude_obj, tile_num_in_direction(20501, 4, 2), dude_elevation);
    fade_in;
    float_msg(self_obj, mstr(213), FLOAT_MSG_NORMAL);
    add_timer_event(self_obj, game_ticks(3), 5);
end

procedure DoLearn
begin
    game_ui_disable;
    fade_out;
    inven_unwield(dude_obj);
    move_to(self_obj, 20501, elevation(self_obj));
    move_to(dude_obj, tile_num_in_direction(20501, 4, 2), dude_elevation);
    anim(self_obj, 1000, 1);
    anim(dude_obj, 1000, 1);
    fade_in;
    float_msg(self_obj, mstr(217), FLOAT_MSG_NORMAL);
    add_timer_event(self_obj, game_ticks(3), 6);
end

procedure endTestFail
begin
    if (not(combat_is_initialized)) then begin
        called1 := 0;
        call SafeDestroy();
        call ReturnInven();
        call removeVaultBoxerAppearance();
        set_local_var(11, 0);
        move_to(self_obj, local_var(13), elevation(self_obj));
        move_to(dude_obj, local_var(14), dude_elevation);
        fade_in;
        float_msg(self_obj, mstr(212), FLOAT_MSG_NORMAL);
    end
    else begin
        if (called1 == 0) then begin
            called1 := 1;
            fade_out;
            call HideObj();
        end
        terminate_combat;
        add_timer_event(self_obj, 2, 4);
    end
end

procedure endTestPass
begin
    if (not(combat_is_initialized)) then begin
        called1 := 0;
        call SafeDestroy();
        call ReturnInven();
        call removeVaultBoxerAppearance();
        set_local_var(11, 0);
        critter_heal(dude_obj, get_critter_stat(dude_obj, STAT_max_hp) - get_critter_stat(dude_obj, STAT_current_hp));
        move_to(self_obj, local_var(13), elevation(self_obj));
        move_to(dude_obj, local_var(14), dude_elevation);
        set_local_var(8, 1);
        if (0 != 0) then begin
            set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 0);
            debug_msg("Player gains " + 0 + " Karma Points.");
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
            set_global_var(GVAR_KARMA_DEFENDER, 0);
            set_global_var(GVAR_KARMA_WANDERER, 0);
            set_global_var(GVAR_KARMA_BETRAYER, 0);
            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
            set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
            set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
            tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
            if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
                tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
            end
            if (tmp_gen_rep >= 1000) then begin
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
            end
            else begin
                if (tmp_gen_rep >= 750) then begin
                    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                end
                else begin
                    if (tmp_gen_rep >= 500) then begin
                        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                    end
                    else begin
                        if (tmp_gen_rep >= 250) then begin
                            set_global_var(GVAR_KARMA_DEFENDER, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -250) then begin
                                set_global_var(GVAR_KARMA_WANDERER, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -500) then begin
                                    set_global_var(GVAR_KARMA_BETRAYER, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -750) then begin
                                        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                    end
                                    else begin
                                        if (tmp_gen_rep > -1000) then begin
                                            set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                        end
                                        else begin
                                            set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (0 != 0) then begin
            set_global_var(GVAR_TOWN_REP_SAN_FRANCISCO, global_var(GVAR_TOWN_REP_SAN_FRANCISCO) + 0);
        end
        if (8000 != 0) then begin
            give_exp_points(8000);
            display_msg(g_mstr(100) + 8000 + g_mstr(101));
        end
        if ((global_var(GVAR_SAN_FRAN_FLAGS) bwand 8) != 0) then begin
            set_local_var(7, 6);
        end
        fade_in;
        dialogue_system_enter;
    end
    else begin
        if (called1 == 0) then begin
            called1 := 1;
            fade_out;
            call HideObj();
        end
        terminate_combat;
        add_timer_event(self_obj, 2, 3);
    end
end

procedure doFight
begin
    game_ui_enable;
    float_msg(self_obj, mstr(211), FLOAT_MSG_WARNING);
    if (local_var(15) == 0) then begin
        attack_setup(local_var(12), dude_obj);
    end
    else begin
        attack(dude_obj);
    end
end

procedure learn1
begin
    if (learnCount == 0) then begin
        learnCount := 1;
    end
    if (learnCount bwand 1) then begin
        if (rnd == 0) then begin
            rnd := random(0, 1);
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            reg_anim_animate(self_obj, 16, -1);
            reg_anim_func(3, 0);
        end
        else begin
            reg_anim_func(2, dude_obj);
            reg_anim_func(1, 1);
            reg_anim_animate(dude_obj, 13, -1);
            reg_anim_func(3, 0);
        end
    end
    else begin
        if (rnd == 0) then begin
            reg_anim_func(2, dude_obj);
            reg_anim_func(1, 1);
            reg_anim_animate(dude_obj, 16, -1);
            reg_anim_func(3, 0);
        end
        else begin
            reg_anim_func(2, dude_obj);
            reg_anim_func(1, 1);
            reg_anim_animate(dude_obj, 13, -1);
            reg_anim_func(3, 0);
        end
    end
    if (learnCount < 6) then begin
        add_timer_event(self_obj, game_ticks(2), 6);
    end
    else begin
        add_timer_event(self_obj, game_ticks(2), 7);
    end
    learnCount := learnCount + 1;
end

procedure learn2
begin
    fade_out;
    learnCount := 0;
    game_time_advance(60 * (60 * 10) * 4);
    game_ui_enable;
    move_to(self_obj, local_var(13), elevation(self_obj));
    move_to(dude_obj, local_var(14), dude_elevation);
    fade_in;
    float_msg(self_obj, mstr(218), FLOAT_MSG_NORMAL);
    display_mstr(219);
    critter_mod_skill(dude_obj, SKILL_UNARMED_COMBAT, 5);
end

procedure TakeInven
begin
    if (local_var(16) == 0) then begin
        set_local_var(16, create_object(132, 0, elevation(self_obj)));
        if (local_var(16)) then begin
            move_obj_inven_to_obj(dude_obj, local_var(16));
        end
    end
end

procedure ReturnInven
begin
    set_local_var(16, tile_contains_pid_obj(0, elevation(self_obj), 132));
    if (local_var(16)) then begin
        move_obj_inven_to_obj(local_var(16), dude_obj);
        destroy_object(local_var(16));
        set_local_var(16, 0);
    end
end

procedure checkTestObj
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    variable LVar3 := 0;
    variable LVar4 := 0;
    if (local_var(12)) then begin
        while (LVar1 < 8) do begin
            if (LVar1 == 0) then begin
                LVar2 := 19907;
            end
            else begin
                if (LVar1 == 1) then begin
                    LVar2 := 20107;
                end
                else begin
                    if (LVar1 == 2) then begin
                        LVar2 := 20307;
                    end
                    else begin
                        if (LVar1 == 3) then begin
                            LVar2 := 20507;
                        end
                        else begin
                            if (LVar1 == 4) then begin
                                LVar2 := 20707;
                            end
                            else begin
                                if (LVar1 == 5) then begin
                                    LVar2 := 20907;
                                end
                                else begin
                                    if (LVar1 == 6) then begin
                                        LVar2 := 21107;
                                    end
                                    else begin
                                        if (LVar1 == 7) then begin
                                            LVar2 := 21307;
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            LVar0 := 0;
            LVar4 := getCurrentPid();
            while (LVar0 < 8) do begin
                LVar3 := tile_get_next_critter(LVar2 - LVar0, 0, 0);
                if (LVar3) then begin
                    if (LVar3 == dude_obj) then begin
                        LVar3 := 0;
                        debug_msg("FCLOPAN: FYI: found dude");
                    end
                end
                if (LVar3) then begin
                    set_local_var(12, LVar3);
                    debug_msg("FCLOPAN: object re-located at tile " + (LVar2 - LVar0) + " obj set to instance: " + LVar3);
                    LVar0 := 8;
                end
                else begin
                    debug_msg("FCLOPAN: looking for fighter pid: " + LVar4 + " tile: " + (LVar2 - LVar0));
                    LVar0 := LVar0 + 1;
                end
            end
            if (LVar3) then begin
                LVar1 := 10;
            end
            else begin
                LVar1 := LVar1 + 1;
            end
        end
    end
    else begin
        debug_msg("FCLOPAN: test obj not set");
    end
    return 0;
    LVar0 := 0;
    LVar1 := 0;
    LVar2 := 0;
    LVar3 := 0;
    LVar4 := 0;
end

procedure lopanHit
begin
    variable LVar0 := 0;
    LVar0 := sfx_build_char_name(self_obj, 20, 1);
    reg_anim_func(2, i_lopan_obj);
    reg_anim_func(1, 1);
    reg_anim_animate(i_lopan_obj, 20, -1);
    reg_anim_play_sfx(i_lopan_obj, LVar0, 0);
    reg_anim_func(3, 0);
    add_timer_event(self_obj, 10, 9);
    return 0;
    LVar0 := 0;
end

procedure DoTalking
begin
    variable LVar0 := 0;
    if (countTalk == 0) then begin
        reg_anim_func(2, i_lopan_obj);
        reg_anim_func(1, 1);
        reg_anim_animate(i_lopan_obj, 37, -1);
        reg_anim_func(3, 0);
        float_msg(self_obj, mstr(189), FLOAT_MSG_BLUE);
        add_timer_event(self_obj, game_ticks(3), 9);
    end
    else begin
        if (countTalk == 1) then begin
            float_msg(self_obj, 0, FLOAT_MSG_NORMAL);
            float_msg(i_lopan_obj, mstr(190), FLOAT_MSG_RED);
            add_timer_event(self_obj, game_ticks(3), 9);
        end
        else begin
            if (countTalk == 2) then begin
                float_msg(i_lopan_obj, 0, FLOAT_MSG_NORMAL);
                float_msg(self_obj, mstr(191), FLOAT_MSG_BLUE);
                add_timer_event(self_obj, game_ticks(3), 9);
            end
            else begin
                if (countTalk == 3) then begin
                    float_msg(self_obj, 0, FLOAT_MSG_NORMAL);
                    float_msg(i_lopan_obj, 0, FLOAT_MSG_NORMAL);
                    if (obj_on_screen(self_obj)) then begin
                        gfade_out(500);
                        LVar0 := 1;
                    end
                    reg_anim_func(2, self_obj);
                    reg_anim_func(2, i_lopan_obj);
                    call checkLoad();
                    move_to(i_lopan_obj, 16727, 0);
                    set_local_var(17, 1);
                    if (LVar0) then begin
                        gfade_in(500);
                    end
                end
            end
        end
    end
    countTalk := countTalk + 1;
    return 0;
    LVar0 := 0;
end

procedure doVaultBoxerAppearance
begin
    variable LVar0 := 0;
    set_global_var(GVAR_EASTER_EGG_ENCOUNTER, 1);
    if (dude_gender == 0) then begin
        if (get_sfall_global_int("HApStyle") == 1) then begin
            if (obj_carrying_pid_obj(dude_obj, 966) == 0) then begin
                LVar0 := create_object(966, 0, 0);
                add_obj_to_inven(dude_obj, LVar0);
                wield_obj_critter(dude_obj, LVar0);
                refresh_pc_art;
            end
        end
        else begin
            if (get_sfall_global_int("HApStyle") == 2) then begin
                if (obj_carrying_pid_obj(dude_obj, 967) == 0) then begin
                    LVar0 := create_object(967, 0, 0);
                    add_obj_to_inven(dude_obj, LVar0);
                    wield_obj_critter(dude_obj, LVar0);
                    refresh_pc_art;
                end
            end
            else begin
                if (get_sfall_global_int("HApStyle") == 0) then begin
                    if (obj_carrying_pid_obj(dude_obj, 965) == 0) then begin
                        LVar0 := create_object(965, 0, 0);
                        add_obj_to_inven(dude_obj, LVar0);
                        wield_obj_critter(dude_obj, LVar0);
                        refresh_pc_art;
                    end
                end
            end
        end
    end
    return 0;
    LVar0 := 0;
end

procedure removeVaultBoxerAppearance
begin
    set_global_var(GVAR_EASTER_EGG_ENCOUNTER, 0);
    if (dude_gender == 0) then begin
        if (get_sfall_global_int("HApStyle") == 1) then begin
            if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                restock_obj := critter_inven_obj(dude_obj, 0);
                debug_msg("armour pid == " + obj_pid(restock_obj));
                rm_obj_from_inven(dude_obj, restock_obj);
                add_obj_to_inven(dude_obj, restock_obj);
            end
            destroy_object(obj_carrying_pid_obj(dude_obj, 966));
            refresh_pc_art;
        end
        else begin
            if (get_sfall_global_int("HApStyle") == 2) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
                destroy_object(obj_carrying_pid_obj(dude_obj, 967));
                refresh_pc_art;
            end
            else begin
                if (get_sfall_global_int("HApStyle") == 0) then begin
                    if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                        restock_obj := critter_inven_obj(dude_obj, 0);
                        debug_msg("armour pid == " + obj_pid(restock_obj));
                        rm_obj_from_inven(dude_obj, restock_obj);
                        add_obj_to_inven(dude_obj, restock_obj);
                    end
                    destroy_object(obj_carrying_pid_obj(dude_obj, 965));
                    refresh_pc_art;
                end
            end
        end
    end
end

procedure checkLoad
begin
    if (local_var(17)) then begin
        if (tile_num(self_obj) != 15081) then begin
            move_to(self_obj, 15081, 0);
            reg_anim_func(1, 1);
            anim(self_obj, 1000, 3);
            reg_anim_func(3, 0);
        end
    end
end

procedure startSequence
begin
    variable LVar0 := 0;
    LVar0 := sfx_build_char_name(self_obj, 17, 4);
    reg_anim_func(2, self_obj);
    reg_anim_func(1, 1);
    reg_anim_animate(self_obj, 17, -1);
    reg_anim_play_sfx(self_obj, LVar0, 5);
    reg_anim_func(3, 0);
    add_timer_event(self_obj, 10, 8);
    return 0;
    LVar0 := 0;
end

procedure map_exit_p_proc
begin
    if (local_var(17) != 0) then begin
        if (tile_num(i_lopan_obj) != 16727) then begin
            reg_anim_func(2, self_obj);
            reg_anim_func(2, i_lopan_obj);
            move_to(i_lopan_obj, 16727, 0);
        end
    end
end

procedure Node4_5
begin
    if ((global_var(GVAR_PLAYER_REPUTATION) > 249) or (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality) != 0)) then begin
        call Node004();
    end
    else begin
        call Node005();
    end
end

procedure NodeLearn
begin
    set_local_var(7, 1);
    call Node999();
end

procedure Node008a
begin
    set_local_var(3, local_var(3) + -20);
    set_local_var(0, local_var(0) + -20);
    if (local_var(0) <= -75) then begin
        set_local_var(1, -4);
    end
    else begin
        if (local_var(0) <= -50) then begin
            set_local_var(1, -3);
        end
        else begin
            if (local_var(0) <= -25) then begin
                set_local_var(1, -2);
            end
            else begin
                if (local_var(0) <= -10) then begin
                    set_local_var(1, -1);
                end
                else begin
                    if (local_var(0) <= 10) then begin
                        set_local_var(1, 0);
                    end
                    else begin
                        if (local_var(0) <= 25) then begin
                            set_local_var(1, 1);
                        end
                        else begin
                            if (local_var(0) <= 50) then begin
                                set_local_var(1, 2);
                            end
                            else begin
                                if (local_var(0) <= 75) then begin
                                    set_local_var(1, 3);
                                end
                                else begin
                                    set_local_var(1, 4);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    call Node008();
end

procedure Node010a
begin
    set_local_var(3, local_var(3) + 10);
    set_local_var(0, local_var(0) + 10);
    if (local_var(0) <= -75) then begin
        set_local_var(1, -4);
    end
    else begin
        if (local_var(0) <= -50) then begin
            set_local_var(1, -3);
        end
        else begin
            if (local_var(0) <= -25) then begin
                set_local_var(1, -2);
            end
            else begin
                if (local_var(0) <= -10) then begin
                    set_local_var(1, -1);
                end
                else begin
                    if (local_var(0) <= 10) then begin
                        set_local_var(1, 0);
                    end
                    else begin
                        if (local_var(0) <= 25) then begin
                            set_local_var(1, 1);
                        end
                        else begin
                            if (local_var(0) <= 50) then begin
                                set_local_var(1, 2);
                            end
                            else begin
                                if (local_var(0) <= 75) then begin
                                    set_local_var(1, 3);
                                end
                                else begin
                                    set_local_var(1, 4);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    call Node010();
end

procedure Node011a
begin
    set_local_var(3, local_var(3) + -10);
    set_local_var(0, local_var(0) + -10);
    if (local_var(0) <= -75) then begin
        set_local_var(1, -4);
    end
    else begin
        if (local_var(0) <= -50) then begin
            set_local_var(1, -3);
        end
        else begin
            if (local_var(0) <= -25) then begin
                set_local_var(1, -2);
            end
            else begin
                if (local_var(0) <= -10) then begin
                    set_local_var(1, -1);
                end
                else begin
                    if (local_var(0) <= 10) then begin
                        set_local_var(1, 0);
                    end
                    else begin
                        if (local_var(0) <= 25) then begin
                            set_local_var(1, 1);
                        end
                        else begin
                            if (local_var(0) <= 50) then begin
                                set_local_var(1, 2);
                            end
                            else begin
                                if (local_var(0) <= 75) then begin
                                    set_local_var(1, 3);
                                end
                                else begin
                                    set_local_var(1, 4);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    call Node011();
end

procedure Node2931
begin
    if (dude_skill(SKILL_UNARMED_COMBAT) >= 125) then begin
        call Node029();
    end
    else begin
        call Node031();
    end
end

procedure NodeAngry
begin
    set_local_var(7, 5);
    call Node999();
end

procedure Node013a
begin
    set_local_var(3, local_var(3) + -10);
    set_local_var(0, local_var(0) + -10);
    if (local_var(0) <= -75) then begin
        set_local_var(1, -4);
    end
    else begin
        if (local_var(0) <= -50) then begin
            set_local_var(1, -3);
        end
        else begin
            if (local_var(0) <= -25) then begin
                set_local_var(1, -2);
            end
            else begin
                if (local_var(0) <= -10) then begin
                    set_local_var(1, -1);
                end
                else begin
                    if (local_var(0) <= 10) then begin
                        set_local_var(1, 0);
                    end
                    else begin
                        if (local_var(0) <= 25) then begin
                            set_local_var(1, 1);
                        end
                        else begin
                            if (local_var(0) <= 50) then begin
                                set_local_var(1, 2);
                            end
                            else begin
                                if (local_var(0) <= 75) then begin
                                    set_local_var(1, 3);
                                end
                                else begin
                                    set_local_var(1, 4);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    call Node013();
end

procedure NodeAttackNow
begin
    call Node998();
end

procedure NodeChallenge
begin
    set_local_var(7, 3);
    call Node999();
end

procedure NodeTest
begin
    set_local_var(7, 2);
    call Node999();
end

procedure SafeDestroy
begin
    debug_msg("FCDRAGON: SafeDestroy called");
    if (local_var(12)) then begin
        reg_anim_func(2, local_var(12));
        destroy_object(local_var(12));
        set_local_var(12, 0);
    end
end

procedure HideObj
begin
    if (local_var(12)) then begin
        if (not(critter_state(local_var(12)) bwand 1)) then begin
            set_obj_visibility(local_var(12), 1);
            move_to(local_var(12), tile_num(self_obj), 2);
        end
    end
end

procedure getCurrentPid
begin
    if (local_var(11) == 0) then begin
        return 16777601;
    end
    else begin
        if (local_var(11) == 1) then begin
            return 16777603;
        end
        else begin
            if (local_var(11) == 2) then begin
                return 16777605;
            end
            else begin
                if (local_var(11) == 3) then begin
                    return 16777607;
                end
                else begin
                    if (local_var(11) == 4) then begin
                        return 16777609;
                    end
                    else begin
                        if (local_var(11) == 5) then begin
                            return 16777611;
                        end
                    end
                end
            end
        end
    end
    return 0;
end
