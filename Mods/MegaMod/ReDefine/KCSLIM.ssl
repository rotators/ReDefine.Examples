variable global_temp;
variable in_dialog;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure push_p_proc;
procedure Node910;
procedure Node911;
procedure Node912;
procedure Node998;
procedure Node999;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node040;
procedure Node041;
procedure Node042;
procedure Node043;
procedure Node044;
procedure Node045;
procedure Node046;
procedure Node047;
procedure Node048;

variable Only_Once;


procedure start
begin
end

procedure critter_p_proc
begin
    if ((local_var(5) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack(dude_obj);
    end
    if ((global_var(GVAR_KLAMATH_REP_UNION) <= -1) and obj_can_see_obj(self_obj, dude_obj)) then begin
        attack(dude_obj);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure talk_p_proc
begin
    in_dialog := 1;
    if ((local_var(4) == 0) and (dude_iq == 1)) then begin
        start_gdialog(85, self_obj, 4, -1, -1);
        gsay_start;
        call Node040();
        gsay_end;
        end_dialogue;
    end
    else begin
        if (dude_iq == 1) then begin
            start_gdialog(85, self_obj, 4, -1, -1);
            gsay_start;
            call Node046();
            gsay_end;
            end_dialogue;
        end
        else begin
            if (local_var(4) == 0) then begin
                start_gdialog(85, self_obj, 4, -1, -1);
                gsay_start;
                call Node001();
                gsay_end;
                end_dialogue;
            end
            else begin
                start_gdialog(85, self_obj, 4, -1, -1);
                gsay_start;
                call Node029();
                gsay_end;
                end_dialogue;
            end
        end
    end
    in_dialog := 0;
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (critter_kill_type(self_obj) == KILL_TYPE_children_kills) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(GVAR_TOWN_REP_KLAMATH, global_var(GVAR_TOWN_REP_KLAMATH) + -8);
                debug_msg("Added " + -8 + " to Town Rep");
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(GVAR_TOWN_REP_KLAMATH, global_var(GVAR_TOWN_REP_KLAMATH) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
    set_global_var(GVAR_KLAMATH_REP_UNION, -1);
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(101);
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_KLAMATH_REP_UNION, -1);
    end
end

procedure map_enter_p_proc
begin
    Only_Once := 0;
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 215);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_TOUGH_CITIZEN);
end

procedure push_p_proc
begin
    script_overrides;
end

procedure Node910
begin
    if ((global_var(GVAR_SMILEY_STATUS) == 2) or (global_var(GVAR_SMILEY_STATUS) == 3)) then begin
        call Node021();
    end
    else begin
        call Node012();
    end
end

procedure Node911
begin
    if (local_var(9) < 4) then begin
        call Node013();
    end
    else begin
        call Node014();
    end
end

procedure Node912
begin
    if (local_var(8) == 0) then begin
        call Node011();
    end
    else begin
        if ((global_var(GVAR_SMILEY_STATUS) == 2) or (global_var(GVAR_SMILEY_STATUS) == 3)) then begin
            call Node021();
        end
        else begin
            call Node020();
        end
    end
end

procedure Node998
begin
    set_local_var(4, local_var(4) + 1);
    set_local_var(5, 2);
end

procedure Node999
begin
    set_local_var(4, local_var(4) + 1);
end

procedure Node001
begin
    Reply(110);
    giq_option(4, NAME, 112, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 114, Node003, NEUTRAL_REACTION);
    giq_option(-3, NAME, 116, Node002, NEUTRAL_REACTION);
    giq_option(-3, NAME, 118, Node003, NEUTRAL_REACTION);
end

procedure Node002
begin
    Reply(120);
    giq_option(4, NAME, 122, Node006, NEUTRAL_REACTION);
    giq_option(-3, NAME, 124, Node006, NEUTRAL_REACTION);
    giq_option(4, NAME, 126, Node004, NEUTRAL_REACTION);
    giq_option(-3, NAME, 128, Node004, NEUTRAL_REACTION);
    giq_option(4, NAME, 130, Node004, NEUTRAL_REACTION);
    giq_option(-3, NAME, 132, Node004, NEUTRAL_REACTION);
    giq_option(4, NAME, 134, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 136, Node999, NEUTRAL_REACTION);
end

procedure Node003
begin
    Reply(138);
    giq_option(4, NAME, 140, Node006, NEUTRAL_REACTION);
    giq_option(-3, NAME, 142, Node006, NEUTRAL_REACTION);
    giq_option(4, NAME, 144, Node004, NEUTRAL_REACTION);
    giq_option(-3, NAME, 146, Node004, NEUTRAL_REACTION);
    giq_option(4, NAME, 148, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 150, Node999, NEUTRAL_REACTION);
end

procedure Node004
begin
    Reply(152);
    giq_option(4, NAME, 154, Node005, NEUTRAL_REACTION);
    giq_option(-3, NAME, 156, Node005, NEUTRAL_REACTION);
end

procedure Node005
begin
    set_local_var(7, 1);
    Reply(158);
    if ((obj_is_carrying_obj_pid(dude_obj, 277) >= 3) or (obj_is_carrying_obj_pid(dude_obj, 276) >= 6)) then begin
        giq_option(4, NAME, 160, Node031, NEUTRAL_REACTION);
    end
    if ((obj_is_carrying_obj_pid(dude_obj, 277) >= 3) or (obj_is_carrying_obj_pid(dude_obj, 276) >= 6)) then begin
        giq_option(-3, NAME, 164, Node031, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 172, Node030, NEUTRAL_REACTION);
    giq_option(-3, NAME, 174, Node030, NEUTRAL_REACTION);
    giq_option(4, NAME, 176, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 178, Node999, NEUTRAL_REACTION);
end

procedure Node006
begin
    set_local_var(6, 1);
    Reply(180);
    giq_option(1, NAME, 182, Node007, NEUTRAL_REACTION);
end

procedure Node007
begin
    Reply(184);
    giq_option(1, NAME, 186, Node008, NEUTRAL_REACTION);
end

procedure Node008
begin
    Reply(188);
    giq_option(1, NAME, 190, Node009, NEUTRAL_REACTION);
end

procedure Node009
begin
    Reply(192);
    giq_option(4, NAME, 194, Node010, NEUTRAL_REACTION);
    giq_option(-3, NAME, 195, Node010, NEUTRAL_REACTION);
    giq_option(4, NAME, 196, Node030, NEUTRAL_REACTION);
    giq_option(-3, NAME, 197, Node030, NEUTRAL_REACTION);
end

procedure Node010
begin
    Reply(198);
    giq_option(4, NAME, 200, Node011, NEUTRAL_REACTION);
    giq_option(-3, NAME, dude_name + mstr(202), Node011, NEUTRAL_REACTION);
    giq_option(4, NAME, 204, Node030, NEUTRAL_REACTION);
    giq_option(-3, NAME, 206, Node030, NEUTRAL_REACTION);
    giq_option(4, NAME, 208, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 210, Node999, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(212);
    if (global_var(GVAR_AHELDER_Q1_AGRO) == 11) then begin
        giq_option(4, NAME, 214, Node910, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 216, Node910, NEUTRAL_REACTION);
    giq_option(4, NAME, 218, Node910, NEUTRAL_REACTION);
    giq_option(4, NAME, 220, Node910, NEUTRAL_REACTION);
    giq_option(4, NAME, 222, Node999, NEUTRAL_REACTION);
    if (global_var(GVAR_AHELDER_Q1_AGRO) == 11) then begin
        giq_option(-3, NAME, 224, Node910, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 226, Node910, NEUTRAL_REACTION);
    giq_option(-3, NAME, 228, Node910, NEUTRAL_REACTION);
    giq_option(-3, NAME, 232, Node999, NEUTRAL_REACTION);
end

procedure Node012
begin
    Reply(234);
    giq_option(4, NAME, 236, Node013, NEUTRAL_REACTION);
    giq_option(4, NAME, 238, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 240, Node013, NEUTRAL_REACTION);
    giq_option(-3, NAME, 242, Node999, NEUTRAL_REACTION);
end

procedure Node013
begin
    if ((local_var(9) == 3) and (global_var(GVAR_SMILEY_STATUS) == 4)) then begin
        gsay_message(NAME, 247, NEUTRAL_REACTION);
    end
    else begin
        Reply(244 + local_var(9));
        set_local_var(9, local_var(9) + 1);
        giq_option(4, NAME, 250, Node911, NEUTRAL_REACTION);
        giq_option(4, NAME, 252, Node999, NEUTRAL_REACTION);
        giq_option(-3, NAME, 254, Node911, NEUTRAL_REACTION);
        giq_option(-3, NAME, 256, Node999, NEUTRAL_REACTION);
    end
end

procedure Node014
begin
    if (dude_gender == 0) then begin
        Reply(284);
    end
    if (dude_gender == 1) then begin
        Reply(286);
    end
    giq_option(4, NAME, 288, Node015, NEUTRAL_REACTION);
    giq_option(4, NAME, 290, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 292, Node015, NEUTRAL_REACTION);
    giq_option(-3, NAME, 294, Node999, NEUTRAL_REACTION);
end

procedure Node015
begin
    Reply(296);
    giq_option(4, NAME, 298, Node016, NEUTRAL_REACTION);
    giq_option(-3, NAME, 300, Node016, NEUTRAL_REACTION);
end

procedure Node016
begin
    Reply(302);
    if (global_var(GVAR_SMILEY_STATUS) == 1) then begin
        giq_option(4, NAME, 304, Node019, NEUTRAL_REACTION);
        giq_option(-3, NAME, 306, Node019, NEUTRAL_REACTION);
    end
    else begin
        giq_option(1, NAME, 308, Node017, NEUTRAL_REACTION);
    end
end

procedure Node017
begin
    set_local_var(8, 1);
    Reply(310);
    giq_option(4, NAME, 312, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 314, Node018, NEUTRAL_REACTION);
    giq_option(-3, NAME, 316, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 218, Node018, NEUTRAL_REACTION);
end

procedure Node018
begin
    Reply(320);
    giq_option(4, NAME, 322, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 324, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 326, Node999, NEUTRAL_REACTION);
end

procedure Node019
begin
    set_local_var(8, 1);
    Reply(328);
    giq_option(4, NAME, 330, Node048, NEUTRAL_REACTION);
    giq_option(4, NAME, 332, Node018, NEUTRAL_REACTION);
    giq_option(-3, NAME, 334, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 236, Node018, NEUTRAL_REACTION);
end

procedure Node020
begin
    Reply(338);
    giq_option(4, NAME, 340, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 342, Node018, NEUTRAL_REACTION);
    giq_option(-3, NAME, 344, Node999, NEUTRAL_REACTION);
end

procedure Node021
begin
    set_map_var(2, 1);
    if (obj_carrying_pid_obj(dude_obj, 298)) then begin
    end
    else begin
        if (obj_is_carrying_obj_pid(self_obj, 298)) then begin
            removed_qty := obj_is_carrying_obj_pid(self_obj, 298);
            if (1 < removed_qty) then begin
                removed_qty := 1;
            end
            while (removed_qty) do begin
                restock_obj := obj_carrying_pid_obj(self_obj, 298);
                if (obj_type(self_obj) == 1) then begin
                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                            restock_obj := critter_inven_obj(self_obj, 0);
                            debug_msg("armour pid == " + obj_pid(restock_obj));
                            rm_obj_from_inven(self_obj, restock_obj);
                            add_obj_to_inven(self_obj, restock_obj);
                        end
                    end
                    else begin
                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                            inven_unwield(self_obj);
                        end
                    end
                end
                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, 1);
                destroy_object(restock_obj);
                removed_qty := removed_qty - restock_amt;
                restock_obj := 0;
                restock_amt := 0;
            end
            restock_obj := create_object(298, 0, 0);
            add_mult_objs_to_inven(dude_obj, restock_obj, 1);
        end
        else begin
            restock_obj := create_object(298, 0, 0);
            add_mult_objs_to_inven(dude_obj, restock_obj, 1);
        end
    end
    Reply(346);
    giq_option(4, NAME, 348, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 350, Node999, NEUTRAL_REACTION);
end

procedure Node022
begin
    Reply(352);
    giq_option(1, NAME, 354, Node026, NEUTRAL_REACTION);
    if (dude_skill(SKILL_BARTER) >= 60) then begin
        giq_option(4, NAME, 356, Node024, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 358, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 360, Node999, NEUTRAL_REACTION);
end

procedure Node023
begin
    Reply(362);
    giq_option(1, NAME, 364, Node027, NEUTRAL_REACTION);
    if (dude_skill(SKILL_BARTER) >= 60) then begin
        giq_option(4, NAME, 366, Node025, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 368, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 370, Node999, NEUTRAL_REACTION);
end

procedure Node024
begin
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 277);
    if (3 < removed_qty) then begin
        removed_qty := 3;
    end
    while (removed_qty) do begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 277);
        if (obj_type(dude_obj) == 1) then begin
            if (critter_inven_obj(dude_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, 1);
        destroy_object(restock_obj);
        removed_qty := removed_qty - restock_amt;
        restock_obj := 0;
        restock_amt := 0;
    end
    item_caps_adjust(dude_obj, 405);
    if (dude_gender == 0) then begin
        Reply(372);
    end
    if (dude_gender == 1) then begin
        Reply(374);
    end
    giq_option(1, NAME, 376, Node999, NEUTRAL_REACTION);
end

procedure Node025
begin
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 276);
    if (6 < removed_qty) then begin
        removed_qty := 6;
    end
    while (removed_qty) do begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 276);
        if (obj_type(dude_obj) == 1) then begin
            if (critter_inven_obj(dude_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, 1);
        destroy_object(restock_obj);
        removed_qty := removed_qty - restock_amt;
        restock_obj := 0;
        restock_amt := 0;
    end
    item_caps_adjust(dude_obj, 210);
    if (dude_gender == 0) then begin
        Reply(378);
    end
    if (dude_gender == 1) then begin
        Reply(380);
    end
    giq_option(1, NAME, 382, Node999, NEUTRAL_REACTION);
end

procedure Node026
begin
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 277);
    if (3 < removed_qty) then begin
        removed_qty := 3;
    end
    while (removed_qty) do begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 277);
        if (obj_type(dude_obj) == 1) then begin
            if (critter_inven_obj(dude_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, 1);
        destroy_object(restock_obj);
        removed_qty := removed_qty - restock_amt;
        restock_obj := 0;
        restock_amt := 0;
    end
    item_caps_adjust(dude_obj, 375);
    Reply(384);
    giq_option(4, NAME, 386, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 388, Node999, NEUTRAL_REACTION);
end

procedure Node027
begin
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 276);
    if (6 < removed_qty) then begin
        removed_qty := 6;
    end
    while (removed_qty) do begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 276);
        if (obj_type(dude_obj) == 1) then begin
            if (critter_inven_obj(dude_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, 1);
        destroy_object(restock_obj);
        removed_qty := removed_qty - restock_amt;
        restock_obj := 0;
        restock_amt := 0;
    end
    item_caps_adjust(dude_obj, 150);
    Reply(390);
    giq_option(4, NAME, 392, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 394, Node999, NEUTRAL_REACTION);
end

procedure Node028
begin
    if (dude_gender == 0) then begin
        if ((global_var(GVAR_SMILEY_STATUS) == 2) or (global_var(GVAR_SMILEY_STATUS) == 3)) then begin
            Reply(398);
        end
        else begin
            Reply(396);
        end
    end
    else begin
        Reply(400);
    end
    giq_option(4, NAME, 402, Node030, NEUTRAL_REACTION);
    giq_option(-3, NAME, 404, Node030, NEUTRAL_REACTION);
    giq_option(4, NAME, 406, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 408, Node999, NEUTRAL_REACTION);
end

procedure Node029
begin
    Reply(410);
    if (map_var(2) == 1) then begin
        giq_option(4, NAME, 538, Node047, NEUTRAL_REACTION);
        giq_option(-3, NAME, 539, Node047, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 412, Node030, NEUTRAL_REACTION);
    if ((local_var(7) == 1) and ((obj_is_carrying_obj_pid(dude_obj, 277) >= 3) or (obj_is_carrying_obj_pid(dude_obj, 276) >= 6))) then begin
        giq_option(4, NAME, 414, Node031, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 416, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 418, Node030, NEUTRAL_REACTION);
    if ((local_var(7) == 1) and ((obj_is_carrying_obj_pid(dude_obj, 277) >= 3) or (obj_is_carrying_obj_pid(dude_obj, 276) >= 6))) then begin
        giq_option(-3, NAME, 420, Node031, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 422, Node999, NEUTRAL_REACTION);
end

procedure Node030
begin
    Reply(424);
    if (local_var(6) == 0) then begin
        giq_option(4, NAME, 426, Node006, NEUTRAL_REACTION);
        giq_option(-3, NAME, 436, Node006, NEUTRAL_REACTION);
    end
    if (local_var(7) == 0) then begin
        giq_option(4, NAME, 428, Node004, NEUTRAL_REACTION);
        giq_option(-3, NAME, 438, Node004, NEUTRAL_REACTION);
    end
    if ((local_var(6) == 1) and (map_var(2) == 0)) then begin
        giq_option(4, NAME, 430, Node912, NEUTRAL_REACTION);
        giq_option(-3, NAME, 440, Node912, NEUTRAL_REACTION);
    end
    if ((local_var(7) == 1) and (has_trait(TRAIT_PERK, dude_obj, PERK_gecko_skinning_perk) == 0)) then begin
        giq_option(4, NAME, 432, Node028, NEUTRAL_REACTION);
        giq_option(-3, NAME, 442, Node028, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 434, Node029, NEUTRAL_REACTION);
    giq_option(-3, NAME, 444, Node029, NEUTRAL_REACTION);
end

procedure Node031
begin
    Reply(446);
    if (obj_is_carrying_obj_pid(dude_obj, 277) >= 3) then begin
        giq_option(4, NAME, 448, Node022, NEUTRAL_REACTION);
        giq_option(-3, NAME, 454, Node022, NEUTRAL_REACTION);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 276) >= 6) then begin
        giq_option(4, NAME, 450, Node023, NEUTRAL_REACTION);
        giq_option(-3, NAME, 456, Node023, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 452, Node029, NEUTRAL_REACTION);
    giq_option(-3, NAME, 458, Node029, NEUTRAL_REACTION);
end

procedure Node040
begin
    Reply(500);
    giq_option(1, NAME, 502, Node041, NEUTRAL_REACTION);
end

procedure Node041
begin
    Reply(504);
    giq_option(1, NAME, 506, Node042, NEUTRAL_REACTION);
end

procedure Node042
begin
    Reply(508);
    if (obj_is_carrying_obj_pid(dude_obj, 277) >= 3) then begin
        giq_option(1, NAME, 510, Node044, NEUTRAL_REACTION);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 276) >= 6) then begin
        giq_option(1, NAME, 512, Node045, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 514, Node043, NEUTRAL_REACTION);
end

procedure Node043
begin
    gsay_message(NAME, 516, NEUTRAL_REACTION);
end

procedure Node044
begin
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 277);
    if (3 < removed_qty) then begin
        removed_qty := 3;
    end
    while (removed_qty) do begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 277);
        if (obj_type(dude_obj) == 1) then begin
            if (critter_inven_obj(dude_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, 1);
        destroy_object(restock_obj);
        removed_qty := removed_qty - restock_amt;
        restock_obj := 0;
        restock_amt := 0;
    end
    item_caps_adjust(dude_obj, 375);
    gsay_message(NAME, 520, NEUTRAL_REACTION);
end

procedure Node045
begin
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 276);
    if (6 < removed_qty) then begin
        removed_qty := 6;
    end
    while (removed_qty) do begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 276);
        if (obj_type(dude_obj) == 1) then begin
            if (critter_inven_obj(dude_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, 1);
        destroy_object(restock_obj);
        removed_qty := removed_qty - restock_amt;
        restock_obj := 0;
        restock_amt := 0;
    end
    item_caps_adjust(dude_obj, 150);
    gsay_message(NAME, 526, NEUTRAL_REACTION);
end

procedure Node046
begin
    Reply(530);
    if (obj_is_carrying_obj_pid(dude_obj, 277) >= 3) then begin
        giq_option(1, NAME, 532, Node044, NEUTRAL_REACTION);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 276) >= 6) then begin
        giq_option(1, NAME, 534, Node045, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 536, Node999, NEUTRAL_REACTION);
end

procedure Node047
begin
    Reply(540);
    giq_option(4, NAME, 541, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 542, Node999, NEUTRAL_REACTION);
end

procedure Node048
begin
    set_global_var(GVAR_SMILEY_STATUS, 1);
    call Node999();
end
