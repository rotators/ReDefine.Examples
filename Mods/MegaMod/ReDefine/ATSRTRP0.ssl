procedure start;
procedure spatial_p_proc;
procedure use_skill_on_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure Missile_Fired;
procedure Check_Hit;

variable Projectile;
variable Final_Hex;
variable Projectile_Dir;


procedure start
begin
end

procedure spatial_p_proc
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    variable LVar3 := 0;
    if (obj_type(source_obj) == 1) then begin
        LVar0 := get_critter_stat(source_obj, STAT_pe) + 0;
        LVar1 := (-tile_distance_objs(self_obj, source_obj) * 1) - (7 - (has_skill(source_obj, SKILL_TRAPS) / 5));
        if ((tile_distance_objs(self_obj, source_obj) <= LVar0) and (local_var(0) == 0) and (local_var(1) == 0)) then begin
            if (LVar1 > 0) then begin
                LVar1 := 0;
            end
            LVar2 := do_check(source_obj, 1, LVar1);
            if (is_success(LVar2)) then begin
                if (art_anim(obj_art_fid(source_obj)) != 19) then begin
                    set_local_var(0, 1);
                    reg_anim_func(2, source_obj);
                    LVar3 := create_object_sid(33555383, tile_num(self_obj), elevation(self_obj), NAME);
                end
                if (is_critical(LVar2)) then begin
                    if (source_obj == dude_obj) then begin
                        display_msg(message_str(SCRIPT_SPRTRP0, 100));
                    end
                    else begin
                        if ((proto_data(obj_pid(source_obj), 11) == 0) and obj_can_see_obj(source_obj, dude_obj)) then begin
                            display_msg(obj_name(source_obj) + message_str(SCRIPT_SPRTRP0, 101));
                        end
                    end
                end
                else begin
                    if (source_obj == dude_obj) then begin
                        display_msg(message_str(SCRIPT_SPRTRP0, 102));
                    end
                    else begin
                        if ((proto_data(obj_pid(source_obj), 11) == 0) and obj_can_see_obj(source_obj, dude_obj)) then begin
                            display_msg(obj_name(source_obj) + message_str(SCRIPT_SPRTRP0, 103));
                        end
                    end
                end
            end
        end
        if ((tile_distance_objs(self_obj, source_obj) == 0) and (local_var(1) == 0) and (map_var(4) == 0)) then begin
            game_ui_disable;
            debug_msg("Set off the Trap!");
            Projectile := create_object(83886087, 28492, elevation(self_obj));
            anim(Projectile, 1000, rotation_to_tile(tile_num(Projectile), tile_num(source_obj)));
            if (tile_contains_obj_pid(tile_num(self_obj), elevation(self_obj), 33555383)) then begin
                debug_msg("Destroying Visible Trap");
                destroy_object(tile_contains_pid_obj(tile_num(self_obj), elevation(self_obj), 33555383));
                debug_msg("Destroyed Visible Trap");
            end
            LVar3 := create_object(33555385, tile_num(self_obj), elevation(self_obj));
            if ((source_obj == dude_obj) and has_trait(TRAIT_PERK, dude_obj, PERK_light_step_perk) and (random(0, 1) == 1)) then begin
                debug_msg("Used Light Step.");
            end
            else begin
                call Check_Hit();
            end
            set_local_var(1, 1);
            set_map_var(4, 1);
        end
    end
    return 0;
    LVar0 := 0;
    LVar1 := 0;
    LVar2 := 0;
    LVar3 := 0;
end

procedure use_skill_on_p_proc
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    if ((local_var(1) == 0) and (map_var(4) == 0) and (action_being_used == 11)) then begin
        script_overrides;
        LVar0 := roll_vs_skill(source_obj, 11, 0);
        if (source_obj == dude_obj) then begin
            if (is_success(LVar0)) then begin
                LVar1 := create_object_sid(33555384, tile_num(self_obj), elevation(self_obj), NAME);
                set_local_var(1, 1);
                set_map_var(4, 1);
                display_msg(g_mstr(102));
                if (local_var(2) == 0) then begin
                    set_local_var(2, 1);
                    give_exp_points(25);
                    display_msg(g_mstr(100) + 25 + g_mstr(101));
                end
            end
            else begin
                if (is_critical(LVar0)) then begin
                    set_local_var(1, 1);
                    set_map_var(4, 1);
                    display_msg(g_mstr(104));
                    if (tile_contains_obj_pid(tile_num(self_obj), elevation(self_obj), 33555383)) then begin
                        debug_msg("Destroying Visible Trap");
                        destroy_object(tile_contains_pid_obj(tile_num(self_obj), elevation(self_obj), 33555383));
                        debug_msg("Destroyed Visible Trap");
                    end
                    LVar1 := create_object_sid(33555385, tile_num(self_obj), elevation(self_obj), NAME);
                    call Check_Hit();
                end
                else begin
                    display_msg(g_mstr(103));
                end
            end
        end
        else begin
            if (is_success(LVar0)) then begin
                LVar1 := create_object_sid(33555384, tile_num(self_obj), elevation(self_obj), NAME);
                set_map_var(4, 1);
                display_msg(obj_name(source_obj) + g_mstr(105));
                if (local_var(2) == 0) then begin
                    set_local_var(2, 1);
                    give_exp_points(25);
                    display_msg(g_mstr(100) + 25 + g_mstr(101));
                end
            end
            else begin
                if (is_critical(LVar0)) then begin
                    set_local_var(1, 1);
                    set_map_var(4, 1);
                    display_msg(obj_name(source_obj) + g_mstr(107));
                    if (tile_contains_obj_pid(tile_num(self_obj), elevation(self_obj), 33555383)) then begin
                        debug_msg("Destroying Visible Trap");
                        destroy_object(tile_contains_pid_obj(tile_num(self_obj), elevation(self_obj), 33555383));
                        debug_msg("Destroyed Visible Trap");
                    end
                    LVar1 := create_object_sid(33555385, tile_num(self_obj), elevation(self_obj), NAME);
                    call Check_Hit();
                end
                else begin
                    display_msg(obj_name(source_obj) + g_mstr(106));
                end
            end
        end
    end
    return 0;
    LVar0 := 0;
    LVar1 := 0;
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(SCRIPT_SPRTRP0, 102));
    debug_msg("Looking At the Trap");
end

procedure description_p_proc
begin
    variable LVar0 := 0;
    script_overrides;
    if (local_var(3) == 0) then begin
        set_local_var(3, 1);
        LVar0 := do_check(dude_obj, 1, 0);
        set_local_var(4, LVar0);
    end
    if (is_critical(local_var(4))) then begin
        if (is_success(local_var(4))) then begin
            display_msg(message_str(SCRIPT_SPRTRP0, 100));
        end
        else begin
            display_msg(message_str(SCRIPT_SPRTRP0, 106));
        end
    end
    else begin
        display_msg(message_str(SCRIPT_SPRTRP0, 102));
    end
    return 0;
    LVar0 := 0;
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        destroy_object(Projectile);
        Projectile := create_object(320, Final_Hex, elevation(self_obj));
        anim(Projectile, 1000, rotation_to_tile(28492, Final_Hex));
        game_ui_enable;
    end
end

procedure Missile_Fired
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    set_map_var(4, 1);
    play_sfx("sprtrap");
    while (tile_num(Projectile) != Final_Hex) do begin
        if ((LVar1 % 500) == 0) then begin
            LVar0 := tile_num_in_direction(tile_num(Projectile), rotation_to_tile(tile_num(Projectile), Final_Hex), 1);
            move_to(Projectile, LVar0, elevation(self_obj));
            if (Final_Hex == tile_num(source_obj)) then begin
                anim(source_obj, 15, 0);
            end
            else begin
                anim(source_obj, 13, 0);
            end
            debug_msg("Projectile == " + tile_num(Projectile) + ". Final_Hex == " + Final_Hex);
        end
        LVar1 := LVar1 + 1;
    end
    return 0;
    LVar0 := 0;
    LVar1 := 0;
end

procedure Check_Hit
begin
    variable LVar0 := 0;
    LVar0 := do_check(source_obj, 5, -5);
    if (is_success(LVar0)) then begin
        if (source_obj == dude_obj) then begin
            display_msg(message_str(SCRIPT_SPRTRP0, 104));
        end
        else begin
            display_msg(obj_name(source_obj) + message_str(SCRIPT_SPRTRP0, 105));
        end
        Final_Hex := tile_num_in_direction(tile_num(source_obj), rotation_to_tile(28492, tile_num(source_obj)), 3);
        call Missile_Fired();
    end
    else begin
        Final_Hex := tile_num(source_obj);
        call Missile_Fired();
        critter_dmg(source_obj, random(7, 12), 0 bwor 256 bwor 512);
    end
    add_timer_event(self_obj, game_ticks(0), 1);
    return 0;
    LVar0 := 0;
end
