variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure critter_p_proc;
procedure talk_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure combat_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure timed_event_p_proc;
procedure Security;
procedure RepairMe;
procedure AmmoReplacement;
procedure Replace_Ammo_Type;
procedure CheckRequest;
procedure Set_Map_Info_1;
procedure Set_Map_Info_2;
procedure Set_Map_Info_3;
procedure Set_Map_Info_4;
procedure Set_Map_Info_5;
procedure Set_Map_Info_6;

variable Ammo_Type;
variable Ammo_Difference;
variable Repair_Counter;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    variable LVar3 := 0;
    variable LVar4 := 0;
    variable LVar5 := 0;
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 52);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_SECURITY_BOT);
    if (local_var(8) == 0) then begin
        set_local_var(8, 1);
        if (obj_pid(self_obj) == 16777293) then begin
            if (random(0, 1) == 1) then begin
                LVar0 := create_object(274, 0, 0);
                LVar2 := random(2, 3);
                LVar4 := create_object(270, 0, 0);
                set_local_var(5, LVar2);
                set_local_var(6, -1);
                set_local_var(7, -1);
            end
            else begin
                LVar0 := create_object(36, 0, 0);
                LVar2 := random(1, 3);
                LVar4 := create_object(12, 0, 0);
                set_local_var(5, -1);
                set_local_var(6, LVar2);
                set_local_var(7, -1);
            end
            add_mult_objs_to_inven(self_obj, LVar0, LVar2);
            add_mult_objs_to_inven(self_obj, LVar4, 1);
        end
        else begin
            if (obj_pid(self_obj) == 16777294) then begin
                LVar0 := create_object(274, 0, 0);
                LVar1 := create_object(36, 0, 0);
                LVar2 := random(2, 3);
                LVar3 := random(1, 3);
                LVar4 := create_object(12, 0, 0);
                LVar5 := create_object(270, 0, 0);
                add_mult_objs_to_inven(self_obj, LVar0, LVar2);
                add_mult_objs_to_inven(self_obj, LVar1, LVar3);
                add_mult_objs_to_inven(self_obj, LVar4, 1);
                add_mult_objs_to_inven(self_obj, LVar5, 1);
                set_local_var(5, LVar2);
                set_local_var(6, LVar3);
                set_local_var(7, -1);
            end
            else begin
                if (obj_pid(self_obj) == 16777291) then begin
                    LVar0 := create_object(95, 0, 0);
                    LVar2 := random(1, 3);
                    LVar4 := create_object(242, 0, 0);
                    add_mult_objs_to_inven(self_obj, LVar0, LVar2);
                    add_mult_objs_to_inven(self_obj, LVar4, 1);
                    set_local_var(5, -1);
                    set_local_var(6, -1);
                    set_local_var(7, LVar2);
                end
            end
        end
    end
    return 0;
    LVar0 := 0;
    LVar1 := 0;
    LVar2 := 0;
    LVar3 := 0;
    LVar4 := 0;
    LVar5 := 0;
end

procedure critter_p_proc
begin
    if (CUR_MAP_DEPOLVA) then begin
        if (tile_in_tile_rect(17910, 17890, 22310, 22290, tile_num(self_obj))) then begin
            if ((elevation(self_obj) == 0) and (map_var(25) == 0)) then begin
                set_obj_visibility(self_obj, 1);
            end
            else begin
                if (elevation(self_obj) == 0) then begin
                    set_obj_visibility(self_obj, 0);
                end
            end
        end
        else begin
            if (tile_in_tile_rect(16280, 16274, 19880, 19874, tile_num(self_obj))) then begin
                if ((elevation(self_obj) == 2) and (map_var(27) == 0)) then begin
                    set_obj_visibility(self_obj, 1);
                end
                else begin
                    if (elevation(self_obj) == 2) then begin
                        set_obj_visibility(self_obj, 0);
                    end
                end
            end
            else begin
                set_obj_visibility(self_obj, 0);
            end
        end
    end
    if ((global_var(GVAR_SIERRA_BASE_ENEMY) == 0) and tile_in_tile_rect(16280, 16274, 19880, 19874, tile_num(self_obj)) and ((CUR_MAP_DEPOLVA) or (CUR_MAP_DEPOLVB))) then begin
    end
    else begin
        call Security();
    end
    Repair_Counter := Repair_Counter + 1;
    if ((CUR_MAP_DEPOLVA) or (CUR_MAP_DEPOLVB) and (Repair_Counter == 40)) then begin
        Repair_Counter := 0;
        call RepairMe();
    end
    if ((local_var(8) != 0) and ((CUR_MAP_DEPOLVA) or (CUR_MAP_DEPOLVB))) then begin
        call AmmoReplacement();
    end
end

procedure talk_p_proc
begin
    script_overrides;
    if ((global_var(GVAR_SIERRA_BASE_SECURITY) == 0) or (local_var(1) == 1)) then begin
        display_mstr(104);
    end
    else begin
        if (global_var(GVAR_SIERRA_BASE_SECURITY) == 1) then begin
            display_mstr(103);
        end
    end
end

procedure use_skill_on_p_proc
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    LVar0 := action_being_used;
    if (LVar0 == 13) then begin
        if (is_success(roll_vs_skill(dude_obj, LVar0, -40))) then begin
            script_overrides;
            display_mstr(150);
            if (local_var(2) == 0) then begin
                set_local_var(2, 1);
                give_exp_points(200);
                display_msg(g_mstr(100) + 200 + g_mstr(101));
            end
            set_local_var(1, 1);
        end
        else begin
            LVar1 := get_critter_stat(self_obj, STAT_current_hp);
            LVar2 := get_critter_stat(self_obj, STAT_max_hp);
            display_mstr(151);
            critter_heal(self_obj, LVar2 - LVar1);
            if (local_var(2) == 0) then begin
                set_local_var(2, 1);
                give_exp_points(75);
                display_msg(g_mstr(100) + 75 + g_mstr(101));
            end
        end
    end
    else begin
        if (LVar0 == 10) then begin
            script_overrides;
        end
    end
    return 0;
    LVar0 := 0;
    LVar1 := 0;
    LVar2 := 0;
end

procedure use_obj_on_p_proc
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    LVar0 := obj_being_used_with;
    if (LVar0 == 75) then begin
        if (is_success(roll_vs_skill(dude_obj, 13, -20))) then begin
            script_overrides;
            display_mstr(150);
            if (local_var(2) == 0) then begin
                set_local_var(2, 1);
                give_exp_points(200);
                display_msg(g_mstr(100) + 200 + g_mstr(101));
            end
            set_local_var(1, 1);
        end
        else begin
            LVar1 := get_critter_stat(self_obj, STAT_current_hp);
            LVar2 := get_critter_stat(self_obj, STAT_max_hp);
            display_mstr(151);
            critter_heal(self_obj, LVar2 - LVar1);
            if (local_var(2) == 0) then begin
                set_local_var(2, 1);
                give_exp_points(75);
                display_msg(g_mstr(100) + 75 + g_mstr(101));
            end
        end
    end
    return 0;
    LVar0 := 0;
    LVar1 := 0;
    LVar2 := 0;
end

procedure combat_p_proc
begin
end

procedure damage_p_proc
begin
    set_global_var(GVAR_SIERRA_BASE_SECURITY, 1);
    if ((CUR_MAP_DEPOLVA) or (CUR_MAP_DEPOLVB)) then begin
        if (elevation(self_obj) == 0) then begin
            set_map_var(25, 1);
        end
        else begin
            if (elevation(self_obj) == 1) then begin
                set_map_var(26, 1);
            end
            else begin
                if (elevation(self_obj) == 2) then begin
                    set_map_var(27, 1);
                end
                else begin
                    if (CUR_MAP_DEPOLVB) then begin
                        set_map_var(2, 1);
                    end
                end
            end
        end
    end
end

procedure destroy_p_proc
begin
    variable LVar0 := 0;
    if ((obj_pid(self_obj) == 16777293) or (obj_pid(self_obj) == 16777294)) then begin
        LVar0 := create_object(643, 0, 0);
        add_obj_to_inven(self_obj, LVar0);
    end
    if ((CUR_MAP_DEPOLVA) or (CUR_MAP_DEPOLVB)) then begin
        if (map_var(1) == 0) then begin
            call Set_Map_Info_1();
            set_map_var(1, 3);
            debug_msg("Pickup on Unit 1");
        end
        else begin
            if (map_var(2) == 0) then begin
                call Set_Map_Info_2();
                set_map_var(2, 3);
                debug_msg("Pickup on Unit 2");
            end
            else begin
                if (map_var(3) == 0) then begin
                    call Set_Map_Info_3();
                    set_map_var(3, 3);
                    debug_msg("Pickup on Unit 3");
                end
                else begin
                    if (map_var(4) == 0) then begin
                        call Set_Map_Info_4();
                        set_map_var(4, 3);
                        debug_msg("Pickup on Unit 4");
                    end
                    else begin
                        if (map_var(5) == 0) then begin
                            call Set_Map_Info_5();
                            set_map_var(5, 3);
                            debug_msg("Pickup on Unit 5");
                        end
                        else begin
                            if (map_var(6) == 0) then begin
                                call Set_Map_Info_6();
                                set_map_var(6, 3);
                                debug_msg("Pickup on Unit 6");
                            end
                            else begin
                                if (map_var(1) < 3) then begin
                                    call Set_Map_Info_1();
                                    set_map_var(1, 3);
                                    debug_msg("Pickup on Unit 1");
                                end
                                else begin
                                    if (map_var(2) < 3) then begin
                                        call Set_Map_Info_2();
                                        set_map_var(2, 3);
                                        debug_msg("Pickup on Unit 2");
                                    end
                                    else begin
                                        if (map_var(3) < 3) then begin
                                            call Set_Map_Info_3();
                                            set_map_var(3, 3);
                                            debug_msg("Pickup on Unit 3");
                                        end
                                        else begin
                                            if (map_var(4) < 3) then begin
                                                call Set_Map_Info_4();
                                                set_map_var(4, 3);
                                                debug_msg("Pickup on Unit 4");
                                            end
                                            else begin
                                                if (map_var(5) < 3) then begin
                                                    call Set_Map_Info_5();
                                                    set_map_var(5, 3);
                                                    debug_msg("Pickup on Unit 5");
                                                end
                                                else begin
                                                    if (map_var(6) < 3) then begin
                                                        call Set_Map_Info_6();
                                                        set_map_var(6, 3);
                                                        debug_msg("Pickup on Unit 6");
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    return 0;
    LVar0 := 0;
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        set_local_var(0, 0);
        float_msg(self_obj, mstr(random(105, 108)), FLOAT_MSG_YELLOW);
    end
end

procedure Security
begin
    if ((global_var(GVAR_SIERRA_BASE_SECURITY) == 1) and (local_var(1) == 0)) then begin
        if (obj_can_see_obj(self_obj, dude_obj) and ((CUR_MAP_DEPOLVA) or (CUR_MAP_DEPOLVB))) then begin
            if ((elevation(self_obj) == 0) and (map_var(25) == 1)) then begin
                attack(dude_obj);
            end
            else begin
                if ((elevation(self_obj) == 1) and (map_var(26) == 1)) then begin
                    attack(dude_obj);
                end
                else begin
                    if ((elevation(self_obj) == 2) and (map_var(27) == 1)) then begin
                        attack(dude_obj);
                    end
                    else begin
                        if ((CUR_MAP_DEPOLVB) and (global_var(GVAR_SIERRA_BASE_ALERT) == 1)) then begin
                            set_map_var(2, 1);
                            attack(dude_obj);
                        end
                    end
                end
            end
        end
        else begin
            if ((get_critter_stat(self_obj, STAT_current_hp) == get_critter_stat(self_obj, STAT_max_hp)) and ((CUR_MAP_DEPOLVA) or (CUR_MAP_DEPOLVB))) then begin
                if (elevation(self_obj) == elevation(dude_obj)) then begin
                    if ((elevation(self_obj) == 0) and (map_var(25) == 1)) then begin
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(dude_tile, random(0, 5), random(1, 5)), 0);
                    end
                    else begin
                        if ((elevation(self_obj) == 1) and (map_var(26) == 1)) then begin
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(dude_tile, random(0, 5), random(1, 5)), 0);
                        end
                        else begin
                            if ((elevation(self_obj) == 2) and (map_var(27) == 1)) then begin
                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(dude_tile, random(0, 5), random(1, 5)), 0);
                            end
                            else begin
                                if ((CUR_MAP_DEPOLVB) and (global_var(GVAR_SIERRA_BASE_ALERT) == 1)) then begin
                                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(dude_tile, random(0, 5), random(1, 5)), 0);
                                end
                            end
                        end
                    end
                end
                else begin
                    if (CUR_MAP_DEPOLVA) then begin
                        if ((elevation(self_obj) == 0) and (map_var(25) == 1)) then begin
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(3, 6)), 0);
                        end
                        else begin
                            if ((elevation(self_obj) == 1) and (map_var(26) == 1)) then begin
                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(3, 6)), 0);
                            end
                            else begin
                                if ((elevation(self_obj) == 2) and (map_var(27) == 1)) then begin
                                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(3, 6)), 0);
                                end
                                else begin
                                    if ((CUR_MAP_DEPOLVB) and (global_var(GVAR_SIERRA_BASE_ALERT) == 1)) then begin
                                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(3, 6)), 0);
                                    end
                                end
                            end
                        end
                    end
                end
                if (CUR_MAP_DEPOLVA) then begin
                    if ((elevation(self_obj) == 0) and (map_var(25) == 1) and (local_var(0) == 0)) then begin
                        set_local_var(0, 1);
                        add_timer_event(self_obj, game_ticks(random(20, 40)), 1);
                    end
                    else begin
                        if ((elevation(self_obj) == 1) and (map_var(26) == 1) and (local_var(0) == 0)) then begin
                            set_local_var(0, 1);
                            add_timer_event(self_obj, game_ticks(random(20, 40)), 1);
                        end
                        else begin
                            if ((elevation(self_obj) == 2) and (map_var(27) == 1) and (local_var(0) == 0)) then begin
                                set_local_var(0, 1);
                                add_timer_event(self_obj, game_ticks(random(20, 40)), 1);
                            end
                            else begin
                                if ((CUR_MAP_DEPOLVB) and (global_var(GVAR_SIERRA_BASE_ALERT) == 1)) then begin
                                    set_local_var(0, 1);
                                    add_timer_event(self_obj, game_ticks(random(20, 40)), 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure RepairMe
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    LVar1 := get_critter_stat(self_obj, STAT_current_hp);
    LVar0 := get_critter_stat(self_obj, STAT_max_hp);
    call CheckRequest();
    if ((CUR_MAP_DEPOLVA) or (CUR_MAP_DEPOLVB)) then begin
        if ((LVar0 > LVar1) and (local_var(3) == 0) and (map_var(0) != 0)) then begin
            debug_msg("Send Repair Bot to section " + tile_num(self_obj) + " on level " + elevation(self_obj) + ".");
            if (map_var(1) == 0) then begin
                call Set_Map_Info_1();
                set_map_var(1, 1);
            end
            else begin
                if (map_var(2) == 0) then begin
                    call Set_Map_Info_2();
                    set_map_var(2, 1);
                end
                else begin
                    if (map_var(3) == 0) then begin
                        call Set_Map_Info_3();
                        set_map_var(3, 1);
                    end
                    else begin
                        if (map_var(4) == 0) then begin
                            call Set_Map_Info_4();
                            set_map_var(4, 1);
                        end
                        else begin
                            if (map_var(5) == 0) then begin
                                call Set_Map_Info_5();
                                set_map_var(5, 1);
                            end
                            else begin
                                if (map_var(6) == 0) then begin
                                    call Set_Map_Info_6();
                                    set_map_var(6, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
        else begin
            if (LVar0 == LVar1) then begin
                set_local_var(3, 0);
                set_local_var(4, 0);
            end
        end
    end
    return 0;
    LVar0 := 0;
    LVar1 := 0;
end

procedure AmmoReplacement
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    if (local_var(5) != -1) then begin
        LVar1 := local_var(5) / 2;
        if (obj_is_carrying_obj_pid(self_obj, 274) < LVar1) then begin
            Ammo_Difference := local_var(5) - obj_is_carrying_obj_pid(self_obj, 274);
            Ammo_Type := 274;
            call Replace_Ammo_Type();
        end
    end
    else begin
        if (local_var(6) != -1) then begin
            LVar1 := local_var(6) / 2;
            if (obj_is_carrying_obj_pid(self_obj, 36) < LVar1) then begin
                Ammo_Difference := local_var(6) - obj_is_carrying_obj_pid(self_obj, 36);
                Ammo_Type := 36;
                call Replace_Ammo_Type();
            end
        end
        else begin
            if (local_var(7) != -1) then begin
                LVar1 := local_var(7) / 2;
                if (obj_is_carrying_obj_pid(self_obj, 95) < LVar1) then begin
                    Ammo_Difference := local_var(7) - obj_is_carrying_obj_pid(self_obj, 95);
                    Ammo_Type := 95;
                    call Replace_Ammo_Type();
                end
            end
        end
    end
    return 0;
    LVar0 := 0;
    LVar1 := 0;
end

procedure Replace_Ammo_Type
begin
    if ((local_var(3) == 0) and (map_var(0) != 0)) then begin
        if (map_var(1) == 0) then begin
            call Set_Map_Info_1();
            set_map_var(1, 1);
            set_map_var(28, Ammo_Type);
            set_map_var(29, Ammo_Difference);
        end
        else begin
            if (map_var(2) == 0) then begin
                call Set_Map_Info_2();
                set_map_var(2, 1);
                set_map_var(30, Ammo_Type);
                set_map_var(31, Ammo_Difference);
            end
            else begin
                if (map_var(3) == 0) then begin
                    call Set_Map_Info_3();
                    set_map_var(3, 1);
                    set_map_var(32, Ammo_Type);
                    set_map_var(33, Ammo_Difference);
                end
                else begin
                    if (map_var(4) == 0) then begin
                        call Set_Map_Info_4();
                        set_map_var(4, 1);
                        set_map_var(34, Ammo_Type);
                        set_map_var(35, Ammo_Difference);
                    end
                    else begin
                        if (map_var(5) == 0) then begin
                            call Set_Map_Info_5();
                            set_map_var(5, 1);
                            set_map_var(36, Ammo_Type);
                            set_map_var(37, Ammo_Difference);
                        end
                        else begin
                            if (map_var(6) == 0) then begin
                                call Set_Map_Info_6();
                                set_map_var(6, 1);
                                set_map_var(38, Ammo_Type);
                                set_map_var(39, Ammo_Difference);
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure CheckRequest
begin
    if ((local_var(4) == 1) and (map_var(1) == 5)) then begin
        set_local_var(3, 0);
    end
    else begin
        if ((local_var(4) == 2) and (map_var(2) == 5)) then begin
            set_local_var(3, 0);
        end
        else begin
            if ((local_var(4) == 3) and (map_var(3) == 5)) then begin
                set_local_var(3, 0);
            end
            else begin
                if ((local_var(4) == 4) and (map_var(4) == 5)) then begin
                    set_local_var(3, 0);
                end
                else begin
                    if ((local_var(4) == 5) and (map_var(5) == 5)) then begin
                        set_local_var(3, 0);
                    end
                    else begin
                        if ((local_var(4) == 6) and (map_var(6) == 5)) then begin
                            set_local_var(3, 0);
                        end
                    end
                end
            end
        end
    end
end

procedure Set_Map_Info_1
begin
    set_local_var(4, 1);
    set_local_var(3, 1);
    set_map_var(19, obj_pid(self_obj));
    set_map_var(7, elevation(self_obj));
    set_map_var(13, tile_num(self_obj));
end

procedure Set_Map_Info_2
begin
    set_local_var(4, 2);
    set_local_var(3, 1);
    set_map_var(20, obj_pid(self_obj));
    set_map_var(8, elevation(self_obj));
    set_map_var(14, tile_num(self_obj));
end

procedure Set_Map_Info_3
begin
    set_local_var(4, 3);
    set_local_var(3, 1);
    set_map_var(21, obj_pid(self_obj));
    set_map_var(9, elevation(self_obj));
    set_map_var(15, tile_num(self_obj));
end

procedure Set_Map_Info_4
begin
    set_local_var(4, 4);
    set_local_var(3, 1);
    set_map_var(22, obj_pid(self_obj));
    set_map_var(10, elevation(self_obj));
    set_map_var(16, tile_num(self_obj));
end

procedure Set_Map_Info_5
begin
    set_local_var(4, 5);
    set_local_var(3, 1);
    set_map_var(23, obj_pid(self_obj));
    set_map_var(11, elevation(self_obj));
    set_map_var(17, tile_num(self_obj));
end

procedure Set_Map_Info_6
begin
    set_local_var(4, 6);
    set_local_var(3, 1);
    set_map_var(24, obj_pid(self_obj));
    set_map_var(12, elevation(self_obj));
    set_map_var(18, tile_num(self_obj));
end
