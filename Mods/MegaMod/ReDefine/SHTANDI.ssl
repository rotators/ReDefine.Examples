procedure checkPartyMembersNearDoor;

variable tmp_gen_rep;
variable global_temp;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure Node998;
procedure Node999;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;
procedure Node022;
procedure Node023;
procedure Node024;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node028;
procedure Node029;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node033a;
procedure Node033b;
procedure Node034;
procedure Node034a;
procedure Node035;
procedure Node036;
procedure Node037;
procedure Node038;
procedure Node039;
procedure Node040;
procedure Node040a;
procedure Node041;
procedure Node042;
procedure Node043;
procedure Node044;
procedure Node045;
procedure Node046;
procedure Node047;
procedure Node048;
procedure Node001;
procedure Node101;
procedure Node102;
procedure Node103;
procedure Node104;
procedure Node105;
procedure Node106;
procedure Node107;
procedure Node108;
procedure Node110;
procedure Node201;
procedure Node202;
procedure Node203;
procedure Node204;
procedure Node205;
procedure Node206;
procedure Node207;
procedure node300;

variable q1;
variable q2;
variable q3;
variable q4;
variable q5;
variable q6;
variable q7;
variable n14Rep;

procedure checkSpyHolo;
procedure checkVaultParts;
procedure TakeParts;
procedure Node006a;
procedure Node007a;
procedure Node1215a;
procedure Node008a;
procedure Node010a;
procedure Node017a;
procedure Node018a;
procedure Node022a;
procedure Node023a;
procedure NodeCheck521;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777718) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777718)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777719) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777719)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777720) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777720)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if ((local_var(5) != 0) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        if (critter_is_fleeing(self_obj)) then begin
            if (anim_busy(self_obj) == 0) then begin
                if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                    if (anim_busy(self_obj) == 0) then begin
                        global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                        global_temp := (global_temp + 1) % 6;
                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                            debug_msg("flee loop: rot == " + global_temp);
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                        end
                    end
                end
            end
        end
        else begin
            attack(dude_obj);
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure talk_p_proc
begin
    Evil_Critter := 0;
    Slavery_Tolerant := 1;
    reaction_bonus_karma := 100;
    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
    set_global_var(GVAR_KARMA_DEFENDER, 0);
    set_global_var(GVAR_KARMA_WANDERER, 0);
    set_global_var(GVAR_KARMA_BETRAYER, 0);
    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
    set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
    tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
    if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
    end
    if (tmp_gen_rep >= 1000) then begin
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
    end
    else begin
        if (tmp_gen_rep >= 750) then begin
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
        end
        else begin
            if (tmp_gen_rep >= 500) then begin
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
            end
            else begin
                if (tmp_gen_rep >= 250) then begin
                    set_global_var(GVAR_KARMA_DEFENDER, 1);
                end
                else begin
                    if (tmp_gen_rep > -250) then begin
                        set_global_var(GVAR_KARMA_WANDERER, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -500) then begin
                            set_global_var(GVAR_KARMA_BETRAYER, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -750) then begin
                                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -1000) then begin
                                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                end
                                else begin
                                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    if (local_var(2) == 0) then begin
        set_local_var(2, 1);
        set_local_var(3, (dude_charisma - self_charisma) * 5);
        debug_msg("Base Reaction == " + local_var(3));
    end
    Static_Reaction := 0;
    set_local_var(0, 0);
    debug_msg("Start Reaction == " + local_var(0));
    reaction_bonus_karma := floor(reaction_bonus_karma / 10);
    reaction_bonus_town_rep := floor(global_var(GVAR_TOWN_REP_NCR) / 2);
    if (has_trait(TRAIT_TRAIT, dude_obj, TRAIT_sex_appeal)) then begin
        if (dude_gender == self_gender) then begin
            Static_Reaction := Static_Reaction + -20;
        end
        else begin
            Static_Reaction := Static_Reaction + 20;
        end
        debug_msg("Sex Appeal Bonus == " + Static_Reaction);
    end
    else begin
        debug_msg("Sex Appeal Bonus == 0");
    end
    if (Evil_Critter == 1) then begin
        if (reaction_bonus_karma >= 0) then begin
            Static_Reaction := Static_Reaction - reaction_bonus_karma;
        end
        else begin
            Static_Reaction := Static_Reaction + reaction_bonus_karma;
        end
        debug_msg("Karma Reaction Bonus == " + Static_Reaction);
        if (reaction_bonus_town_rep >= 0) then begin
            Static_Reaction := Static_Reaction - reaction_bonus_town_rep;
        end
        else begin
            Static_Reaction := Static_Reaction + reaction_bonus_town_rep;
        end
        debug_msg("Town Rep Bonus == " + Static_Reaction);
        if (global_var(GVAR_KARMA_HOLY_WARRIOR) == 1) then begin
            Static_Reaction := Static_Reaction - 20;
        end
        else begin
            if (global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES) == 1) then begin
                Static_Reaction := Static_Reaction - 15;
            end
            else begin
                if (global_var(GVAR_KARMA_SHIELD_OF_HOPE) == 1) then begin
                    Static_Reaction := Static_Reaction - 10;
                end
                else begin
                    if (global_var(GVAR_KARMA_DEFENDER) == 1) then begin
                        Static_Reaction := Static_Reaction - 5;
                    end
                    else begin
                        if (global_var(GVAR_KARMA_WANDERER) == 1) then begin
                            Static_Reaction := Static_Reaction - 0;
                        end
                        else begin
                            if (global_var(GVAR_KARMA_BETRAYER) == 1) then begin
                                Static_Reaction := Static_Reaction + 5;
                            end
                            else begin
                                if (global_var(GVAR_KARMA_SWORD_OF_DESPAIR) == 1) then begin
                                    Static_Reaction := Static_Reaction + 10;
                                end
                                else begin
                                    if (global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE) == 1) then begin
                                        Static_Reaction := Static_Reaction + 15;
                                    end
                                    else begin
                                        Static_Reaction := Static_Reaction + 20;
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        debug_msg("Bad Person Reaction Bonus == " + Static_Reaction);
    end
    else begin
        Static_Reaction := Static_Reaction + reaction_bonus_karma;
        debug_msg("Karma Reaction Bonus == " + Static_Reaction);
        Static_Reaction := Static_Reaction + reaction_bonus_town_rep;
        debug_msg("Town Rep Bonus == " + Static_Reaction);
        if (global_var(GVAR_KARMA_HOLY_WARRIOR) == 1) then begin
            Static_Reaction := Static_Reaction + 20;
        end
        else begin
            if (global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES) == 1) then begin
                Static_Reaction := Static_Reaction + 15;
            end
            else begin
                if (global_var(GVAR_KARMA_SHIELD_OF_HOPE) == 1) then begin
                    Static_Reaction := Static_Reaction + 10;
                end
                else begin
                    if (global_var(GVAR_KARMA_DEFENDER) == 1) then begin
                        Static_Reaction := Static_Reaction + 5;
                    end
                    else begin
                        if (global_var(GVAR_KARMA_WANDERER) == 1) then begin
                            Static_Reaction := Static_Reaction + 0;
                        end
                        else begin
                            if (global_var(GVAR_KARMA_BETRAYER) == 1) then begin
                                Static_Reaction := Static_Reaction + -5;
                            end
                            else begin
                                if (global_var(GVAR_KARMA_SWORD_OF_DESPAIR) == 1) then begin
                                    Static_Reaction := Static_Reaction + -10;
                                end
                                else begin
                                    if (global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE) == 1) then begin
                                        Static_Reaction := Static_Reaction + -15;
                                    end
                                    else begin
                                        Static_Reaction := Static_Reaction + -20;
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        debug_msg("Good Person Reaction Bonus == " + Static_Reaction);
    end
    if (Slavery_Tolerant == 0) then begin
        if (global_var(GVAR_REPUTATION_SLAVER) == 1) then begin
            Static_Reaction := Static_Reaction - 50;
        end
    end
    else begin
        if (Slavery_Tolerant == 1) then begin
            if (global_var(GVAR_REPUTATION_SLAVER) == 1) then begin
                Static_Reaction := Static_Reaction - 25;
            end
        end
        else begin
            if (Slavery_Tolerant == 3) then begin
                if (global_var(GVAR_REPUTATION_SLAVER) == 1) then begin
                    Static_Reaction := Static_Reaction + 25;
                end
            end
        end
    end
    debug_msg("Slaver + Aligned Reaction == " + Static_Reaction);
    Static_Reaction := Static_Reaction + (10 * has_trait(TRAIT_PERK, dude_obj, PERK_presence));
    debug_msg("Presence Reaction == " + Static_Reaction);
    if (global_var(GVAR_CHILDKILLER_REPUTATION) >= 2) then begin
        Static_Reaction := Static_Reaction + -30;
    end
    debug_msg("Childkiller Reaction == " + Static_Reaction);
    if (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality)) then begin
        if (Evil_Critter == 1) then begin
            if (Static_Reaction > 0) then begin
                Static_Reaction := Static_Reaction * -1;
            end
        end
        else begin
            if (Static_Reaction < 0) then begin
                Static_Reaction := Static_Reaction * -1;
            end
        end
    end
    set_local_var(0, local_var(3) + Static_Reaction);
    debug_msg("Initial Reaction == " + local_var(0));
    if (local_var(0) <= -75) then begin
        set_local_var(1, -4);
    end
    else begin
        if (local_var(0) <= -50) then begin
            set_local_var(1, -3);
        end
        else begin
            if (local_var(0) <= -25) then begin
                set_local_var(1, -2);
            end
            else begin
                if (local_var(0) <= -10) then begin
                    set_local_var(1, -1);
                end
                else begin
                    if (local_var(0) <= 10) then begin
                        set_local_var(1, 0);
                    end
                    else begin
                        if (local_var(0) <= 25) then begin
                            set_local_var(1, 1);
                        end
                        else begin
                            if (local_var(0) <= 50) then begin
                                set_local_var(1, 2);
                            end
                            else begin
                                if (local_var(0) <= 75) then begin
                                    set_local_var(1, 3);
                                end
                                else begin
                                    set_local_var(1, 4);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    set_local_var(7, 1);
    if ((global_var(GVAR_NCR_GEN_FLAGS) bwand 1) != 0) then begin
        set_local_var(5, 2);
    end
    if (local_var(5)) then begin
        start_gdialog(172, self_obj, 4, 6, 20);
        gsay_start;
        call Node047();
        gsay_end;
        end_dialogue;
    end
    else begin
        if (global_var(GVAR_NCR_TANDI_JOB_ACCEPT) == 1) then begin
            start_gdialog(172, self_obj, 4, 6, 20);
            gsay_start;
            call Node040();
            gsay_end;
            end_dialogue;
        end
        else begin
            if ((global_var(GVAR_NCR_V15_DARION_DEAL) == 1) and (global_var(GVAR_V15_NCR_DEAL) != 2)) then begin
                start_gdialog(172, self_obj, 4, 6, 20);
                gsay_start;
                call Node040a();
                gsay_end;
                end_dialogue;
            end
            else begin
                if ((global_var(GVAR_NCR_TANDI_JOB_ACCEPT) == 3) or local_var(13)) then begin
                    if (obj_is_carrying_obj_pid(dude_obj, 652)) then begin
                        start_gdialog(172, self_obj, 4, 6, 20);
                        gsay_start;
                        call node300();
                        gsay_end;
                        end_dialogue;
                    end
                    else begin
                        call Node048();
                    end
                end
                else begin
                    if (local_var(8)) then begin
                        start_gdialog(172, self_obj, 4, 6, 20);
                        gsay_start;
                        call Node039();
                        gsay_end;
                        end_dialogue;
                    end
                    else begin
                        if (local_var(1) >= 2) then begin
                            start_gdialog(172, self_obj, 4, 6, 20);
                            gsay_start;
                            call Node038();
                            gsay_end;
                            end_dialogue;
                        end
                        else begin
                            if (global_var(GVAR_NCR_BEAT_HOSS) == 1) then begin
                                start_gdialog(172, self_obj, 4, 6, 20);
                                gsay_start;
                                call Node037();
                                gsay_end;
                                end_dialogue;
                            end
                            else begin
                                start_gdialog(172, self_obj, 4, 6, 20);
                                gsay_start;
                                call Node001();
                                gsay_end;
                                end_dialogue;
                                if (map_var(6) == 0) then begin
                                    set_map_var(6, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
        if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
            tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
        end
        if (tmp_gen_rep >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (tmp_gen_rep >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (tmp_gen_rep >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (tmp_gen_rep >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(GVAR_TOWN_REP_NCR, global_var(GVAR_TOWN_REP_NCR) - 500);
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(7)) then begin
        display_mstr(101);
    end
    else begin
        display_mstr(100);
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(102);
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
        set_global_var(GVAR_NCR_GEN_FLAGS, global_var(GVAR_NCR_GEN_FLAGS) bwor 1);
    end
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 31);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_TOUGH_CITIZEN);
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
end

procedure Node002
begin
    Reply(116);
    giq_option(-3, NAME, 117, Node004, NEUTRAL_REACTION);
    giq_option(-3, NAME, 118, Node003, NEUTRAL_REACTION);
    giq_option(4, NAME, 119, Node004, NEUTRAL_REACTION);
    giq_option(4, NAME, 120, Node003, NEUTRAL_REACTION);
end

procedure Node003
begin
    set_local_var(3, local_var(3) + 5);
    set_local_var(0, local_var(0) + 5);
    if (local_var(0) <= -75) then begin
        set_local_var(1, -4);
    end
    else begin
        if (local_var(0) <= -50) then begin
            set_local_var(1, -3);
        end
        else begin
            if (local_var(0) <= -25) then begin
                set_local_var(1, -2);
            end
            else begin
                if (local_var(0) <= -10) then begin
                    set_local_var(1, -1);
                end
                else begin
                    if (local_var(0) <= 10) then begin
                        set_local_var(1, 0);
                    end
                    else begin
                        if (local_var(0) <= 25) then begin
                            set_local_var(1, 1);
                        end
                        else begin
                            if (local_var(0) <= 50) then begin
                                set_local_var(1, 2);
                            end
                            else begin
                                if (local_var(0) <= 75) then begin
                                    set_local_var(1, 3);
                                end
                                else begin
                                    set_local_var(1, 4);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    Reply(121);
    giq_option(-3, NAME, 122, Node004, NEUTRAL_REACTION);
    giq_option(4, NAME, 123, Node004, NEUTRAL_REACTION);
end

procedure Node004
begin
    set_local_var(8, 1);
    Reply(124);
    giq_option(-3, NAME, 125, Node005, NEUTRAL_REACTION);
    giq_option(-3, NAME, 126, Node006a, NEUTRAL_REACTION);
    if ((global_var(GVAR_NCR_V15_DARION_DEAL) == 1) and not(checkVaultParts())) then begin
        giq_option(-3, NAME, 127, Node033a, NEUTRAL_REACTION);
        giq_option(4, NAME, 133, Node033a, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_NCR_V15_DARION_DEAL) == 0) and checkVaultParts()) then begin
        giq_option(-3, NAME, 128, Node034a, NEUTRAL_REACTION);
        giq_option(4, NAME, 134, Node034a, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_NCR_V15_DARION_DEAL) == 1) and checkVaultParts()) then begin
        giq_option(-3, NAME, 129, Node033a, NEUTRAL_REACTION);
        giq_option(4, NAME, 135, Node033a, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 130, Node005, NEUTRAL_REACTION);
    giq_option(4, NAME, 131, Node006a, NEUTRAL_REACTION);
    giq_option(4, NAME, 132, Node036, NEUTRAL_REACTION);
end

procedure Node005
begin
    Reply(136);
    giq_option(1, NAME, 137, Node999, NEUTRAL_REACTION);
end

procedure Node006
begin
    if (dude_iq > 3) then begin
        Reply(138);
    end
    else begin
        Reply(139);
    end
    giq_option(-3, NAME, 140, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 141, Node007, NEUTRAL_REACTION);
    giq_option(4, NAME, 142, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 143, Node007, NEUTRAL_REACTION);
end

procedure Node007
begin
    if (local_var(12) == 0) then begin
        set_local_var(12, 1);
        Reply(144);
    end
    else begin
        Reply(145);
    end
    if (not(q1)) then begin
        giq_option(-3, NAME, 146, Node008a, NEUTRAL_REACTION);
        giq_option(4, NAME, 156, Node008a, NEUTRAL_REACTION);
    end
    if (not(q2)) then begin
        giq_option(-3, NAME, 147, Node010a, NEUTRAL_REACTION);
        giq_option(4, NAME, 157, Node010a, NEUTRAL_REACTION);
    end
    if (not(q3)) then begin
        giq_option(-3, NAME, 148, Node1215a, NEUTRAL_REACTION);
        giq_option(4, NAME, 158, Node1215a, NEUTRAL_REACTION);
    end
    if (not(q4)) then begin
        giq_option(-3, NAME, 149, Node017a, NEUTRAL_REACTION);
        giq_option(4, NAME, 159, Node017a, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 150, Node018, NEUTRAL_REACTION);
    giq_option(4, NAME, 160, Node018, NEUTRAL_REACTION);
    if (((global_var(GVAR_NEWRENO_SNUFF_WESTIN) bwand 1) != 0) and not((global_var(GVAR_NEWRENO_SNUFF_WESTIN) bwand 2) != 0)) then begin
        giq_option(-3, NAME, 151, Node022, NEUTRAL_REACTION);
        giq_option(4, NAME, 161, Node022, NEUTRAL_REACTION);
    end
    if (((global_var(GVAR_NEWRENO_SNUFF_CARLSON) bwand 1) != 0) and not((global_var(GVAR_NEWRENO_SNUFF_CARLSON) bwand 2) != 0)) then begin
        giq_option(-3, NAME, 152, Node023, NEUTRAL_REACTION);
        giq_option(4, NAME, 162, Node023, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 153, Node027, NEUTRAL_REACTION);
    giq_option(-3, NAME, 154, Node031, NEUTRAL_REACTION);
    giq_option(-3, NAME, 155, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 163, Node027, NEUTRAL_REACTION);
    giq_option(4, NAME, 164, Node031, NEUTRAL_REACTION);
    giq_option(4, NAME, 165, Node999, NEUTRAL_REACTION);
end

procedure Node008
begin
    Reply(166);
    giq_option(-3, NAME, 167, Node009, NEUTRAL_REACTION);
    giq_option(4, NAME, 168, Node009, NEUTRAL_REACTION);
end

procedure Node009
begin
    Reply(169);
    giq_option(-3, NAME, 170, Node007, NEUTRAL_REACTION);
    giq_option(4, NAME, 171, Node007, NEUTRAL_REACTION);
end

procedure Node010
begin
    Reply(172);
    giq_option(-3, NAME, 173, Node011, NEUTRAL_REACTION);
    giq_option(4, NAME, 174, Node011, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(175);
    giq_option(-3, NAME, 176, Node007, NEUTRAL_REACTION);
    giq_option(4, NAME, 177, Node007, NEUTRAL_REACTION);
end

procedure Node012
begin
    Reply(178);
    giq_option(-3, NAME, 179, Node013, NEUTRAL_REACTION);
    giq_option(4, NAME, 180, Node013, NEUTRAL_REACTION);
end

procedure Node013
begin
    Reply(181);
    giq_option(1, NAME, 182, Node014, NEUTRAL_REACTION);
end

procedure Node014
begin
    if (n14Rep == 0) then begin
        n14Rep := 1;
        Reply(183);
        giq_option(1, NAME, g_mstr(352), Node014, NEUTRAL_REACTION);
    end
    else begin
        n14Rep := 0;
        Reply(315);
        giq_option(-3, NAME, 184, Node007, NEUTRAL_REACTION);
        giq_option(4, NAME, 185, Node007, NEUTRAL_REACTION);
    end
end

procedure Node015
begin
    Reply(186);
    giq_option(-3, NAME, 187, Node016, NEUTRAL_REACTION);
    giq_option(-3, NAME, 188, Node013, NEUTRAL_REACTION);
    giq_option(-3, NAME, 189, Node007, NEUTRAL_REACTION);
    giq_option(4, NAME, 190, Node016, NEUTRAL_REACTION);
    giq_option(4, NAME, 191, Node013, NEUTRAL_REACTION);
    giq_option(4, NAME, 192, Node007, NEUTRAL_REACTION);
end

procedure Node016
begin
    Reply(193);
    giq_option(-3, NAME, 194, Node013, NEUTRAL_REACTION);
    giq_option(-3, NAME, 195, Node007, NEUTRAL_REACTION);
    giq_option(4, NAME, 196, Node013, NEUTRAL_REACTION);
    giq_option(4, NAME, 197, Node007, NEUTRAL_REACTION);
end

procedure Node017
begin
    Reply(198);
    giq_option(-3, NAME, 199, Node007, NEUTRAL_REACTION);
    giq_option(4, NAME, 200, Node007, NEUTRAL_REACTION);
end

procedure Node018
begin
    Reply(201);
    if ((global_var(GVAR_NEW_RENO_BISHOP) bwand 1) != 0) then begin
        giq_option(-3, NAME, 202, Node019, NEUTRAL_REACTION);
        giq_option(4, NAME, 205, Node019, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 203, Node021, NEUTRAL_REACTION);
    giq_option(-3, NAME, 204, Node007, NEUTRAL_REACTION);
    giq_option(4, NAME, 206, Node021, NEUTRAL_REACTION);
    giq_option(4, NAME, 207, Node007, NEUTRAL_REACTION);
end

procedure Node019
begin
    Reply(208);
    giq_option(-3, NAME, 209, Node020, NEUTRAL_REACTION);
    giq_option(-3, NAME, 210, Node007, NEUTRAL_REACTION);
    giq_option(4, NAME, 211, Node020, NEUTRAL_REACTION);
    giq_option(4, NAME, 212, Node007, NEUTRAL_REACTION);
end

procedure Node020
begin
    Reply(213);
    giq_option(-3, NAME, 214, Node007, NEUTRAL_REACTION);
    giq_option(4, NAME, 215, Node007, NEUTRAL_REACTION);
end

procedure Node021
begin
    Reply(216);
    giq_option(-3, NAME, 217, Node007, NEUTRAL_REACTION);
    if (not((global_var(GVAR_NEWRENO_SNUFF_WESTIN) bwand 128) != 0) and not((global_var(GVAR_NEWRENO_SNUFF_WESTIN) bwand 2) != 0)) then begin
        giq_option(-3, NAME, 218, Node022, NEUTRAL_REACTION);
        giq_option(4, NAME, 220, Node022, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 219, Node007, NEUTRAL_REACTION);
end

procedure Node022
begin
    set_global_var(GVAR_NEWRENO_SNUFF_WESTIN, global_var(GVAR_NEWRENO_SNUFF_WESTIN) bwor 128);
    Reply(221);
    giq_option(1, NAME, 222, Node007, NEUTRAL_REACTION);
end

procedure Node023
begin
    Reply(223);
    if (not((global_var(GVAR_NEWRENO_SNUFF_WESTIN) bwand 2) != 0)) then begin
        giq_option(-3, NAME, 224, Node024, NEUTRAL_REACTION);
        giq_option(4, NAME, 226, Node024, NEUTRAL_REACTION);
    end
    else begin
        giq_option(-3, NAME, 225, Node025, NEUTRAL_REACTION);
        giq_option(4, NAME, 227, Node024, NEUTRAL_REACTION);
    end
end

procedure Node024
begin
    Reply(228);
    giq_option(1, NAME, 229, Node026, NEUTRAL_REACTION);
end

procedure Node025
begin
    Reply(231);
    giq_option(1, NAME, 232, Node007, NEUTRAL_REACTION);
end

procedure Node026
begin
    Reply(233);
    giq_option(-3, NAME, 234, Node007, NEUTRAL_REACTION);
    giq_option(4, NAME, 235, Node007, NEUTRAL_REACTION);
end

procedure Node027
begin
    Reply(236);
    giq_option(-3, NAME, 237, Node028, NEUTRAL_REACTION);
    giq_option(4, NAME, 238, Node028, NEUTRAL_REACTION);
end

procedure Node028
begin
    Reply(239);
    giq_option(-3, NAME, 240, Node029, NEUTRAL_REACTION);
    giq_option(4, NAME, 241, Node029, NEUTRAL_REACTION);
end

procedure Node029
begin
    Reply(242);
    giq_option(-3, NAME, 243, Node030, NEUTRAL_REACTION);
    giq_option(4, NAME, 244, Node030, NEUTRAL_REACTION);
end

procedure Node030
begin
    Reply(245);
    giq_option(-3, NAME, 246, Node011, NEUTRAL_REACTION);
    giq_option(4, NAME, 247, Node011, NEUTRAL_REACTION);
end

procedure Node031
begin
    Reply(248);
    if (local_var(14) == 0) then begin
        giq_option(-3, NAME, 249, Node032, NEUTRAL_REACTION);
        giq_option(4, NAME, 251, Node032, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 250, Node007, NEUTRAL_REACTION);
    giq_option(4, NAME, 252, Node007, NEUTRAL_REACTION);
end

procedure Node032
begin
    set_local_var(14, 1);
    add_obj_to_inven(dude_obj, create_object(490, 0, 0));
    Reply(253);
    giq_option(1, NAME, 254, Node007, NEUTRAL_REACTION);
end

procedure Node033
begin
    set_global_var(GVAR_V15_NCR_DEAL, 2);
    Reply(255);
    giq_option(-3, NAME, 256, Node034, NEUTRAL_REACTION);
    giq_option(4, NAME, 257, Node034, NEUTRAL_REACTION);
end

procedure Node033a
begin
    set_map_var(0, 1);
    call Node033();
end

procedure Node033b
begin
    set_global_var(GVAR_V15_NCR_DEAL, 2);
    Reply(255);
    giq_option(-3, NAME, 410, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 411, Node999, NEUTRAL_REACTION);
end

procedure Node034
begin
    set_local_var(13, 1);
    set_map_var(6, 2);
    set_global_var(GVAR_NCR_TANDI_JOB_ACCEPT, 2);
    call TakeParts();
    Reply(258);
    if (checkSpyHolo()) then begin
        giq_option(-3, NAME, 259, Node035, NEUTRAL_REACTION);
        giq_option(4, NAME, 261, Node035, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_GRUTHAR_DSTATUS)) then begin
        giq_option(-3, NAME, 260, Node042, NEUTRAL_REACTION);
        giq_option(4, NAME, 262, Node042, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 263, Node999, NEUTRAL_REACTION);
end

procedure Node034a
begin
    set_map_var(0, 1);
    call Node034();
end

procedure Node035
begin
    Reply(264);
    giq_option(-3, NAME, 265, Node999, NEUTRAL_REACTION);
    if (global_var(GVAR_GRUTHAR_DSTATUS)) then begin
        giq_option(-3, NAME, 266, Node042, NEUTRAL_REACTION);
        giq_option(4, NAME, 267, Node042, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 268, Node999, NEUTRAL_REACTION);
end

procedure Node036
begin
    Reply(269);
    giq_option(-3, NAME, 270, Node007a, NEUTRAL_REACTION);
    giq_option(-3, NAME, 271, Node005, NEUTRAL_REACTION);
    giq_option(4, NAME, 272, Node007a, NEUTRAL_REACTION);
    giq_option(4, NAME, 273, Node005, NEUTRAL_REACTION);
end

procedure Node037
begin
    if (dude_gender == 0) then begin
        Reply(274);
    end
    else begin
        Reply(275);
    end
    giq_option(-3, NAME, 276, Node004, NEUTRAL_REACTION);
    giq_option(4, NAME, 277, Node004, NEUTRAL_REACTION);
end

procedure Node038
begin
    Reply(278);
    giq_option(-3, NAME, 279, Node004, NEUTRAL_REACTION);
    giq_option(4, NAME, 280, Node004, NEUTRAL_REACTION);
end

procedure Node039
begin
    Reply(281);
    giq_option(1, NAME, 282, Node005, NEUTRAL_REACTION);
    giq_option(1, NAME, 283, Node006a, NEUTRAL_REACTION);
end

procedure Node040
begin
    Reply(284);
    if ((global_var(GVAR_NCR_V15_DARION_DEAL) == 0) and not(checkVaultParts())) then begin
        giq_option(-3, NAME, 285, Node041, NEUTRAL_REACTION);
        giq_option(4, NAME, 289, Node041, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_NCR_V15_DARION_DEAL) == 1) and not(checkVaultParts())) then begin
        giq_option(-3, NAME, 286, Node033, NEUTRAL_REACTION);
        giq_option(4, NAME, 290, Node033, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_NCR_V15_DARION_DEAL) == 0) and checkVaultParts()) then begin
        giq_option(-3, NAME, 287, Node034, NEUTRAL_REACTION);
        giq_option(4, NAME, 291, Node034, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_NCR_V15_DARION_DEAL) == 1) and checkVaultParts()) then begin
        giq_option(-3, NAME, 288, Node033, NEUTRAL_REACTION);
        giq_option(4, NAME, 292, Node033, NEUTRAL_REACTION);
    end
end

procedure Node040a
begin
    Reply(301);
    giq_option(-3, NAME, 400, Node033b, NEUTRAL_REACTION);
    giq_option(4, NAME, 401, Node033b, NEUTRAL_REACTION);
end

procedure Node041
begin
    Reply(293);
    giq_option(1, NAME, 294, Node999, NEUTRAL_REACTION);
end

procedure Node042
begin
    Reply(295);
    if (not((global_var(GVAR_V13_STATUS_FLAGS) bwand 2) != 0)) then begin
        giq_option(-3, NAME, 296, Node043, NEUTRAL_REACTION);
        giq_option(4, NAME, 298, Node043, NEUTRAL_REACTION);
    end
    else begin
        giq_option(-3, NAME, 297, Node045, GOOD_REACTION);
        giq_option(4, NAME, 299, Node045, NEUTRAL_REACTION);
        giq_option(4, NAME, 300, Node046, BAD_REACTION);
    end
end

procedure Node043
begin
    Reply(301);
    giq_option(-3, NAME, 302, Node044, NEUTRAL_REACTION);
    giq_option(4, NAME, 303, Node044, NEUTRAL_REACTION);
end

procedure Node044
begin
    if (dude_iq < 4) then begin
        Reply(304);
    end
    else begin
        Reply(305);
    end
    giq_option(-3, NAME, 306, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 307, Node999, NEUTRAL_REACTION);
end

procedure Node045
begin
    set_local_var(13, 1);
    set_map_var(6, 2);
    set_map_var(3, 1);
    call TakeParts();
    Reply(308);
    giq_option(1, NAME, 310, Node999, NEUTRAL_REACTION);
end

procedure Node046
begin
    set_local_var(13, 1);
    set_map_var(6, 2);
    set_map_var(3, 2);
    call TakeParts();
    Reply(311);
    giq_option(4, NAME, 312, Node999, NEUTRAL_REACTION);
end

procedure Node047
begin
    Reply(313);
    giq_option(1, NAME, 314, Node999, NEUTRAL_REACTION);
end

procedure Node048
begin
    float_msg(self_obj, mstr(316), FLOAT_MSG_NORMAL);
end

procedure Node001
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    Reply(103);
    LVar0 := obj_carrying_pid_obj(dude_obj, 652);
    LVar1 := obj_is_carrying_obj_pid(dude_obj, 652);
    if (LVar1 != 0) then begin
        giq_option(4, NAME, 317, Node101, NEUTRAL_REACTION);
        giq_option(-3, NAME, 335, Node201, NEUTRAL_REACTION);
    end
    if ((dude_skill(SKILL_SMALL_GUNS) > 70) or (dude_skill(SKILL_BIG_GUNS) > 70) or (dude_skill(SKILL_ENERGY_WEAPONS) > 70)) then begin
        giq_option(-3, NAME, 104, Node002, NEUTRAL_REACTION);
        giq_option(4, NAME, 110, Node002, NEUTRAL_REACTION);
    end
    if (dude_skill(SKILL_SPEECH) > 60) then begin
        giq_option(-3, NAME, 105, Node003, GOOD_REACTION);
        giq_option(4, NAME, 111, Node003, NEUTRAL_REACTION);
    end
    if (dude_skill(SKILL_UNARMED_COMBAT) > 60) then begin
        giq_option(-3, NAME, 106, Node002, NEUTRAL_REACTION);
        giq_option(4, NAME, 112, Node002, NEUTRAL_REACTION);
    end
    if (dude_skill(SKILL_SNEAK) > 60) then begin
        giq_option(-3, NAME, 107, Node002, NEUTRAL_REACTION);
        giq_option(4, NAME, 113, Node002, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 108, Node002, NEUTRAL_REACTION);
    giq_option(-3, NAME, 109, Node002, BAD_REACTION);
    giq_option(4, NAME, 114, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 115, Node002, NEUTRAL_REACTION);
end

procedure Node101
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    LVar0 := obj_carrying_pid_obj(dude_obj, 652);
    LVar1 := obj_is_carrying_obj_pid(dude_obj, 652);
    if (LVar1 != 0) then begin
        rm_obj_from_inven(dude_obj, LVar0);
        set_global_var(GVAR_SPECIAL_ENCOUNTER_SOLDIERS, 2);
        Reply(318);
        giq_option(4, NAME, 319, Node102, NEUTRAL_REACTION);
    end
end

procedure Node102
begin
    Reply(320);
    giq_option(4, NAME, 321, Node103, NEUTRAL_REACTION);
end

procedure Node103
begin
    Reply(322);
    giq_option(4, NAME, 323, Node104, NEUTRAL_REACTION);
end

procedure Node104
begin
    Reply(324);
    giq_option(4, NAME, 325, Node105, NEUTRAL_REACTION);
end

procedure Node105
begin
    Reply(326);
    giq_option(4, NAME, 327, Node106, NEUTRAL_REACTION);
end

procedure Node106
begin
    Reply(328);
    giq_option(4, NAME, 329, Node107, NEUTRAL_REACTION);
end

procedure Node107
begin
    Reply(330);
    if (not(town_known(11) != 0)) then begin
        giq_option(4, NAME, 331, Node108, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 334, Node110, NEUTRAL_REACTION);
    end
end

procedure Node108
begin
    Reply(332);
    giq_option(4, NAME, 333, Node110, NEUTRAL_REACTION);
end

procedure Node110
begin
    display_mstr(343);
    give_exp_points(500);
    display_mstr(344);
    if (not(town_known(11) != 0)) then begin
        if (town_known(11) == 0) then begin
            debug_msg("  mark_on_map(" + 11 + ")");
            mark_area_known(0, 11, 1);
        end
        if (global_var(GVAR_FALLOUT_2) < 1) then begin
            set_global_var(GVAR_FALLOUT_2, 1);
        end
        display_mstr(345);
    end
    call Node999();
end

procedure Node201
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    LVar0 := obj_carrying_pid_obj(dude_obj, 652);
    LVar1 := obj_is_carrying_obj_pid(dude_obj, 652);
    if (LVar1 != 0) then begin
        rm_obj_from_inven(dude_obj, LVar0);
        set_global_var(GVAR_SPECIAL_ENCOUNTER_SOLDIERS, 2);
        Reply(318);
        giq_option(-3, NAME, 336, Node202, NEUTRAL_REACTION);
    end
end

procedure Node202
begin
    Reply(320);
    giq_option(-3, NAME, 337, Node203, NEUTRAL_REACTION);
end

procedure Node203
begin
    Reply(322);
    giq_option(-3, NAME, 338, Node204, NEUTRAL_REACTION);
end

procedure Node204
begin
    Reply(324);
    giq_option(-3, NAME, 339, Node205, NEUTRAL_REACTION);
end

procedure Node205
begin
    Reply(326);
    giq_option(-3, NAME, 340, Node206, NEUTRAL_REACTION);
end

procedure Node206
begin
    Reply(328);
    if (not(town_known(11) != 0)) then begin
        giq_option(-3, NAME, 341, Node207, NEUTRAL_REACTION);
    end
    else begin
        giq_option(-3, NAME, 342, Node110, NEUTRAL_REACTION);
    end
end

procedure Node207
begin
    Reply(332);
    giq_option(-3, NAME, 333, Node110, NEUTRAL_REACTION);
end

procedure node300
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    Reply(175);
    LVar0 := obj_carrying_pid_obj(dude_obj, 652);
    LVar1 := obj_is_carrying_obj_pid(dude_obj, 652);
    if (LVar1 != 0) then begin
        giq_option(4, NAME, 317, Node101, NEUTRAL_REACTION);
    end
end

procedure checkSpyHolo
begin
    if (obj_carrying_pid_obj(dude_obj, 339)) then begin
        return 1;
    end
    return 0;
end

procedure checkVaultParts
begin
    if (obj_is_carrying_obj_pid(dude_obj, 377) > 0) then begin
        return 1;
    end
    return 0;
end

procedure TakeParts
begin
    variable LVar0 := 0;
    LVar0 := obj_carrying_pid_obj(dude_obj, 377);
    if (LVar0) then begin
        rm_obj_from_inven(dude_obj, LVar0);
        destroy_object(LVar0);
    end
end

procedure Node006a
begin
    set_global_var(GVAR_NCR_TANDI_JOB_ACCEPT, 1);
    set_map_var(0, 1);
    call Node006();
end

procedure Node007a
begin
    set_global_var(GVAR_NCR_TANDI_JOB_ACCEPT, 1);
    set_map_var(1, 1);
    call Node007();
end

procedure Node1215a
begin
    q3 := 1;
    if (obj_pid(critter_inven_obj(dude_obj, 0)) == 0) then begin
        call Node012();
    end
    else begin
        call Node015();
    end
end

procedure Node008a
begin
    q1 := 1;
    call Node008();
end

procedure Node010a
begin
    q2 := 1;
    call Node010();
end

procedure Node017a
begin
    q4 := 1;
    call Node017();
end

procedure Node018a
begin
    q5 := 1;
    call Node018();
end

procedure Node022a
begin
    q6 := 1;
    call Node022();
end

procedure Node023a
begin
    q7 := 1;
    call Node023();
end

procedure NodeCheck521
begin
    if (is_success(roll_vs_skill(dude_obj, 14, 0))) then begin
        call Node005();
    end
    else begin
        call Node021();
    end
end
