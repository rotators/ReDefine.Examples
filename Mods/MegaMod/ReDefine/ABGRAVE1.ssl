procedure start;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure num_to_bit(variable arg0);
procedure give_headstone_name;
procedure map_enter_p_proc;


procedure start
begin
end

procedure use_p_proc
begin
    script_overrides;
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(mstr(101) + mstr(local_var(0)));
end

procedure num_to_bit(variable arg0)
begin
    variable LVar1 := 1;
    arg0 := arg0 % 32;
    while (arg0 > 1) do begin
        LVar1 := LVar1 * 2;
        arg0 := arg0 - 1;
    end
    return LVar1;
    return 0;
    arg0 := 0;
    LVar1 := 0;
end

procedure give_headstone_name
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    LVar0 := random(0, 10);
    while ((local_var(0) == 0) and (LVar0 <= 10)) do begin
        LVar1 := num_to_bit(LVar0);
        if ((global_var(200 + (LVar0 / 32)) bwand LVar1) == 0) then begin
            set_global_var(200 + (LVar0 / 32), global_var(200 + (LVar0 / 32)) bwor LVar1);
            set_local_var(0, 102 + LVar0);
        end
        LVar0 := LVar0 + 1;
    end
    if (local_var(0) == 0) then begin
        set_local_var(0, random(250, 253));
    end
    return 0;
    LVar0 := 0;
    LVar1 := 0;
end

procedure map_enter_p_proc
begin
    if (map_first_run) then begin
        call give_headstone_name();
    end
end
