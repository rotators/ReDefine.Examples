variable tmp_gen_rep;
variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable removed_qty;

procedure start;
procedure combat_p_proc;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure talk_p_proc;
procedure talk_two_p_proc;
procedure Node003a;
procedure Node006a;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node006b;
procedure Node007;
procedure Node007b;
procedure Node008;
procedure Node008b;
procedure Node008c;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node998;
procedure Node999;
procedure timed_event_p_proc;
procedure pickup_p_proc;


procedure start
begin
end

procedure combat_p_proc
begin
    if (global_var(GVAR_SULIK_SISTER) == 1) then begin
        attack(dude_obj);
    end
end

procedure critter_p_proc
begin
    variable LVar0 := 0;
    if (not(global_var(GVAR_FALLOUT_2) == 8) and (local_var(7) == 2)) then begin
        if (obj_is_visible_flag(self_obj) and not(obj_on_screen(self_obj)) or (tile_num(self_obj) == 17470)) then begin
            set_obj_visibility(self_obj, 1);
        end
        else begin
            if ((tile_num(self_obj) != 17470) and (17470 != 0)) then begin
                if ((dest_tile == 17470) and (step_tile < 0)) then begin
                    step_tile := step_tile + 1;
                    debug_msg("step_tile: " + step_tile);
                end
                else begin
                    if (anim_busy(self_obj) == 0) then begin
                        dest_tile := 17470;
                        step_tile := 17470;
                        animate_move_obj_to_tile(self_obj, step_tile, 1);
                        while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), 17470) >= tile_distance(step_tile, 17470))) do begin
                            debug_msg("rot: " + rotation_to_tile(step_tile, tile_num(self_obj)));
                            step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), 1 % tile_distance(step_tile, tile_num(self_obj)));
                            debug_msg("step_var: " + step_tile);
                            animate_move_obj_to_tile(self_obj, step_tile, 1);
                        end
                        if (anim_busy(self_obj) == 0) then begin
                            if (metarule3(106, tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), elevation(self_obj), 0) != 0) then begin
                                if (anim_busy(self_obj) == 0) then begin
                                    global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                    global_temp := (global_temp + 1) % 6;
                                    while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                        debug_msg("flee loop: rot == " + global_temp);
                                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                        global_temp := (global_temp + 1) % 6;
                                    end
                                end
                            end
                            else begin
                                step_tile := -10;
                            end
                        end
                    end
                    else begin
                        if (tile_distance(tile_num(self_obj), 17470) < tile_distance(dest_tile, 17470)) then begin
                            reg_anim_func(2, self_obj);
                        end
                    end
                end
            end
        end
    end
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if (global_var(GVAR_REPUTATION_SLAVER) == 1) then begin
            float_msg(self_obj, mstr(210), FLOAT_MSG_YELLOW);
            attack(dude_obj);
        end
        else begin
            if (global_var(GVAR_SULIK_SISTER) == 1) then begin
                attack(dude_obj);
            end
        end
    end
    return 0;
    LVar0 := 0;
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
        if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
            tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
        end
        if (tmp_gen_rep >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (tmp_gen_rep >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (tmp_gen_rep >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (tmp_gen_rep >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(GVAR_TOWN_REP_PRIMITIVE_TRIBE, global_var(GVAR_TOWN_REP_PRIMITIVE_TRIBE) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
    set_global_var(GVAR_TOWN_REP_PRIMITIVE_TRIBE, global_var(GVAR_TOWN_REP_PRIMITIVE_TRIBE) - 10);
    set_global_var(GVAR_SULIK_SISTER, 1);
end

procedure use_p_proc
begin
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 0) then begin
        display_mstr(101);
    end
    else begin
        display_mstr(102);
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(103);
end

procedure use_skill_on_p_proc
begin
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
    set_global_var(GVAR_SULIK_SISTER, 1);
    attack(dude_obj);
end

procedure map_enter_p_proc
begin
    if ((global_var(GVAR_FALLOUT_2) == 8) and (local_var(7) == 2)) then begin
        move_to(self_obj, 22921, 1);
        set_obj_visibility(self_obj, 0);
    end
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 214);
end

procedure map_update_p_proc
begin
end

procedure talk_p_proc
begin
    if ((local_var(7) == 2) and not(global_var(GVAR_FALLOUT_2) == 8)) then begin
        float_msg(self_obj, mstr(411), FLOAT_MSG_YELLOW);
    end
    else begin
        if ((global_var(GVAR_ABBEY_FORMAT_DATABASES) > 1) or (global_var(GVAR_FIXTRIBE_WELL) == 2) or (global_var(GVAR_FIND_SULIK) == 3) or (global_var(GVAR_SULIK_DEAD) >= 3)) then begin
            call talk_two_p_proc();
        end
        else begin
            if (global_var(GVAR_TRIBE_GHOST) == 5) then begin
                start_gdialog(2285, self_obj, 4, -1, -1);
                gsay_start;
                call Node010();
                gsay_end;
                end_dialogue;
            end
            else begin
                start_gdialog(2285, self_obj, 4, -1, -1);
                gsay_start;
                call Node001();
                gsay_end;
                end_dialogue;
            end
        end
    end
end

procedure talk_two_p_proc
begin
    if (global_var(GVAR_TRIBE_GHOST) == 1) then begin
        start_gdialog(2285, self_obj, 4, -1, -1);
        gsay_start;
        call Node004();
        gsay_end;
        end_dialogue;
    end
    else begin
        if (global_var(GVAR_TRIBE_GHOST) == 2) then begin
            start_gdialog(2285, self_obj, 4, -1, -1);
            gsay_start;
            call Node005();
            gsay_end;
            end_dialogue;
        end
        else begin
            if (global_var(GVAR_TRIBE_GHOST) == 3) then begin
                start_gdialog(2285, self_obj, 4, -1, -1);
                gsay_start;
                call Node007();
                gsay_end;
                end_dialogue;
            end
            else begin
                if ((global_var(GVAR_TRIBE_GHOST) == 4) or (global_var(GVAR_TRIBE_GHOST) == 5)) then begin
                    start_gdialog(2285, self_obj, 4, -1, -1);
                    gsay_start;
                    if (local_var(4) == 1) then begin
                        call Node008();
                    end
                    else begin
                        call Node010();
                    end
                    gsay_end;
                    end_dialogue;
                end
                else begin
                    if (global_var(GVAR_TRIBE_GHOST) >= 6) then begin
                        if (global_var(GVAR_FALLOUT_2) == 8) then begin
                            float_msg(self_obj, mstr(random(2000, 2000 + (local_var(7) == 2))), FLOAT_MSG_YELLOW);
                        end
                        else begin
                            float_msg(self_obj, mstr(random(200, 202)), FLOAT_MSG_YELLOW);
                        end
                    end
                    else begin
                        start_gdialog(2285, self_obj, 4, -1, -1);
                        gsay_start;
                        call Node002();
                        gsay_end;
                        end_dialogue;
                    end
                end
            end
        end
    end
    set_local_var(4, 1);
end

procedure Node003a
begin
    set_global_var(GVAR_TRIBE_GHOST, 1);
end

procedure Node006a
begin
    set_global_var(GVAR_TRIBE_GHOST, 3);
end

procedure Node001
begin
    Reply(110);
    giq_option(4, NAME, 111, Node999, NEUTRAL_REACTION);
end

procedure Node002
begin
    Reply(120);
    giq_option(4, NAME, 121, Node003, NEUTRAL_REACTION);
end

procedure Node003
begin
    Reply(130);
    if (obj_is_carrying_obj_pid(dude_obj, 127)) then begin
        giq_option(4, NAME, 132, Node003a, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 131, Node003a, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 133, Node999, NEUTRAL_REACTION);
end

procedure Node004
begin
    Reply(140);
    giq_option(4, NAME, 141, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 142, Node999, BAD_REACTION);
end

procedure Node005
begin
    Reply(150);
    giq_option(4, NAME, 151, Node006, NEUTRAL_REACTION);
end

procedure Node006
begin
    Reply(160);
    giq_option(4, NAME, 161, Node006a, NEUTRAL_REACTION);
    giq_option(4, NAME, 162, Node006b, BAD_REACTION);
end

procedure Node006b
begin
    set_global_var(GVAR_TRIBE_GHOST, 6);
    give_exp_points(200);
    display_msg(g_mstr(100) + 200 + g_mstr(101));
    if (tile_contains_obj_pid(22919, elevation(self_obj), 555)) then begin
        destroy_object(tile_contains_pid_obj(22919, elevation(self_obj), 555));
    end
    Reply(300);
    giq_option(4, NAME, 301, Node999, NEUTRAL_REACTION);
end

procedure Node007
begin
    Reply(170);
    giq_option(4, NAME, 171, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 172, Node007b, BAD_REACTION);
end

procedure Node007b
begin
    Reply(310);
    giq_option(4, NAME, 311, Node999, BAD_REACTION);
end

procedure Node008
begin
    Reply(180);
    giq_option(4, NAME, 181, Node009, NEUTRAL_REACTION);
    giq_option(4, NAME, 182, Node008b, BAD_REACTION);
end

procedure Node008b
begin
    Reply(320);
    giq_option(4, NAME, 321, Node008c, BAD_REACTION);
end

procedure Node008c
begin
    set_global_var(GVAR_TRIBE_GHOST, 6);
    display_mstr(1000);
    give_exp_points(400);
    display_msg(g_mstr(100) + 400 + g_mstr(101));
    item_caps_adjust(dude_obj, 150);
    Reply(330);
    giq_option(4, NAME, 331, Node999, BAD_REACTION);
end

procedure Node009
begin
    Reply(190);
    giq_option(4, NAME, 191, Node999, NEUTRAL_REACTION);
    set_global_var(GVAR_TRIBE_GHOST, 6);
    display_mstr(1000);
    give_exp_points(400);
    display_msg(g_mstr(100) + 400 + g_mstr(101));
    set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 10);
    debug_msg("Player gains " + 10 + " Karma Points.");
    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
    set_global_var(GVAR_KARMA_DEFENDER, 0);
    set_global_var(GVAR_KARMA_WANDERER, 0);
    set_global_var(GVAR_KARMA_BETRAYER, 0);
    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
    set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
    tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
    if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
    end
    if (tmp_gen_rep >= 1000) then begin
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
    end
    else begin
        if (tmp_gen_rep >= 750) then begin
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
        end
        else begin
            if (tmp_gen_rep >= 500) then begin
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
            end
            else begin
                if (tmp_gen_rep >= 250) then begin
                    set_global_var(GVAR_KARMA_DEFENDER, 1);
                end
                else begin
                    if (tmp_gen_rep > -250) then begin
                        set_global_var(GVAR_KARMA_WANDERER, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -500) then begin
                            set_global_var(GVAR_KARMA_BETRAYER, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -750) then begin
                                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -1000) then begin
                                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                end
                                else begin
                                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    set_global_var(GVAR_TOWN_REP_PRIMITIVE_TRIBE, global_var(GVAR_TOWN_REP_PRIMITIVE_TRIBE) + 5);
    item_caps_adjust(dude_obj, 150);
end

procedure Node010
begin
    set_global_var(GVAR_TRIBE_GHOST, 6);
    display_mstr(1000);
    give_exp_points(400);
    display_msg(g_mstr(100) + 400 + g_mstr(101));
    set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 10);
    debug_msg("Player gains " + 10 + " Karma Points.");
    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
    set_global_var(GVAR_KARMA_DEFENDER, 0);
    set_global_var(GVAR_KARMA_WANDERER, 0);
    set_global_var(GVAR_KARMA_BETRAYER, 0);
    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
    set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
    tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
    if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
    end
    if (tmp_gen_rep >= 1000) then begin
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
    end
    else begin
        if (tmp_gen_rep >= 750) then begin
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
        end
        else begin
            if (tmp_gen_rep >= 500) then begin
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
            end
            else begin
                if (tmp_gen_rep >= 250) then begin
                    set_global_var(GVAR_KARMA_DEFENDER, 1);
                end
                else begin
                    if (tmp_gen_rep > -250) then begin
                        set_global_var(GVAR_KARMA_WANDERER, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -500) then begin
                            set_global_var(GVAR_KARMA_BETRAYER, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -750) then begin
                                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -1000) then begin
                                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                end
                                else begin
                                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    set_global_var(GVAR_TOWN_REP_PRIMITIVE_TRIBE, global_var(GVAR_TOWN_REP_PRIMITIVE_TRIBE) + 5);
    Reply(112);
    giq_option(4, NAME, 113, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 114, Node999, BAD_REACTION);
end

procedure Node011
begin
    set_local_var(7, 1);
    Reply(400);
    giq_option(4, NAME, 401, Node012, NEUTRAL_REACTION);
    giq_option(4, NAME, 402, Node012, BAD_REACTION);
    giq_option(4, NAME, 403, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 404, Node999, BAD_REACTION);
end

procedure Node012
begin
    variable LVar0 := 0;
    give_exp_points(50);
    display_msg(g_mstr(100) + 50 + g_mstr(101));
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 9);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 9);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 9);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        destroy_object(restock_obj);
    end
    restock_obj := 0;
    restock_amt := 0;
    LVar0 := create_object(106, 0, 0);
    add_obj_to_inven(dude_obj, LVar0);
    set_local_var(7, 2);
    Reply(410);
    giq_option(4, NAME, 301, Node999, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
    if ((global_var(GVAR_TRIBE_GHOST) >= 6) and obj_is_carrying_obj_pid(dude_obj, 9) and (local_var(7) == 0)) then begin
        call Node011();
    end
end

procedure timed_event_p_proc
begin
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_SULIK_SISTER, 1);
    end
end
