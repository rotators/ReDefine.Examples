variable global_temp;
variable restock_amt;
variable restock_obj;
variable removed_qty;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;
variable karma_tmp;
variable caught_thief;
variable the_follow_obj;
variable tmp_gen_rep;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node998;
procedure Node999;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node019;
procedure Node020;
procedure Node021;

import variable den_flick_box_obj;
import variable generic_temp_box;
import variable flick_obj;

procedure Node990;


procedure start
begin
    flick_obj := self_obj;
end

procedure critter_p_proc
begin
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        if ((local_var(4) bwand 2) != 0) then begin
            if (critter_is_fleeing(self_obj)) then begin
                if (anim_busy(self_obj) == 0) then begin
                    if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                        if (anim_busy(self_obj) == 0) then begin
                            global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                                debug_msg("flee loop: rot == " + global_temp);
                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                global_temp := (global_temp + 1) % 6;
                            end
                        end
                    end
                end
            end
            else begin
                attack(dude_obj);
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        call Node998();
    end
end

procedure talk_p_proc
begin
    if ((dude_is_stupid) and (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality) == 0)) then begin
        call Node001();
    end
    else begin
        if (global_var(GVAR_ENCLAVE_SENT) == 7) then begin
            move_obj_inven_to_obj(self_obj, generic_temp_box);
            move_obj_inven_to_obj(den_flick_box_obj, self_obj);
            if (local_var(6) == 0) then begin
                start_gdialog(42, self_obj, 4, -1, -1);
                gsay_start;
                call Node014();
                gsay_end;
                end_dialogue;
            end
            else begin
                start_gdialog(42, self_obj, 4, -1, -1);
                gsay_start;
                call Node020();
                gsay_end;
                end_dialogue;
            end
            move_obj_inven_to_obj(self_obj, den_flick_box_obj);
            move_obj_inven_to_obj(generic_temp_box, self_obj);
        end
        else begin
            move_obj_inven_to_obj(self_obj, generic_temp_box);
            move_obj_inven_to_obj(den_flick_box_obj, self_obj);
            start_gdialog(42, self_obj, 4, -1, -1);
            gsay_start;
            call Node002();
            gsay_end;
            end_dialogue;
            move_obj_inven_to_obj(self_obj, den_flick_box_obj);
            move_obj_inven_to_obj(generic_temp_box, self_obj);
        end
    end
end

procedure destroy_p_proc
begin
    flick_obj := 0;
    set_global_var(GVAR_DEN_FLAG_1, global_var(GVAR_DEN_FLAG_1) bwor 8);
    move_obj_inven_to_obj(den_flick_box_obj, self_obj);
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_BAD_MONSTER, global_var(GVAR_BAD_MONSTER) + 1);
        if (critter_kill_type(self_obj) == KILL_TYPE_children_kills) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
                if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
                    tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
                end
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 5);
        debug_msg("Player gains " + 5 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
        if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
            tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
        end
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(150 + ((local_var(4) bwand 1) != 0));
    set_local_var(4, local_var(4) bwor 4);
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(4, local_var(4) bwor 8);
        set_local_var(4, local_var(4) bwor 2);
    end
end

procedure map_enter_p_proc
begin
    flick_obj := self_obj;
    if (is_loading_game == 0) then begin
        if (map_first_run) then begin
            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 9);
            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_LONER_CITIZEN);
        end
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 0) then begin
        if (combat_is_initialized == 0) then begin
        end
    end
end

procedure Node998
begin
    set_local_var(4, local_var(4) bwor 2);
end

procedure Node999
begin
end

procedure Node001
begin
    float_msg(self_obj, mstr(random(200, 204)), FLOAT_MSG_YELLOW);
end

procedure Node002
begin
    Reply(220 + ((local_var(4) bwand 1) != 0));
    set_local_var(4, local_var(4) bwor 1);
    giq_option(4, NAME, 222, Node010, BAD_REACTION);
    giq_option(4, NAME, 223, Node004, NEUTRAL_REACTION);
    if (global_var(GVAR_DEN_VIC_KNOWN) == 2) then begin
        giq_option(4, NAME, 224, Node011, NEUTRAL_REACTION);
        giq_option(-3, NAME, 226, Node011, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 225, Node990, GOOD_REACTION);
    giq_option(-3, NAME, 227, Node990, GOOD_REACTION);
    giq_option(-3, NAME, 228, Node999, NEUTRAL_REACTION);
end

procedure Node003
begin
    Reply(240);
    giq_option(4, NAME, 241, Node990, GOOD_REACTION);
    giq_option(4, NAME, 242, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 243, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 244, Node002, GOOD_REACTION);
    giq_option(-3, NAME, 245, Node990, NEUTRAL_REACTION);
    giq_option(-3, NAME, 369, Node999, NEUTRAL_REACTION);
end

procedure Node004
begin
    Reply(260);
    giq_option(4, NAME, 261, Node005, NEUTRAL_REACTION);
    giq_option(4, NAME, 262, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 263, Node999, NEUTRAL_REACTION);
end

procedure Node005
begin
    Reply(280);
    giq_option(4, NAME, 281, Node006, NEUTRAL_REACTION);
end

procedure Node006
begin
    Reply(290);
    giq_option(4, NAME, 291, Node007, NEUTRAL_REACTION);
    giq_option(4, NAME, 292, Node002, NEUTRAL_REACTION);
end

procedure Node007
begin
    Reply(300);
    giq_option(4, NAME, 301, Node008, BAD_REACTION);
    giq_option(4, NAME, 302, Node002, GOOD_REACTION);
    giq_option(4, NAME, 303, Node999, NEUTRAL_REACTION);
end

procedure Node008
begin
    Reply(315);
    giq_option(4, NAME, 316, Node009, NEUTRAL_REACTION);
end

procedure Node009
begin
    set_local_var(5, 1);
    Reply(325);
    giq_option(4, NAME, 326, Node002, GOOD_REACTION);
    giq_option(4, NAME, 327, Node990, GOOD_REACTION);
    giq_option(4, NAME, 328, Node999, NEUTRAL_REACTION);
end

procedure Node010
begin
    Reply(340);
    giq_option(4, NAME, 341, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 342, Node998, BAD_REACTION);
    giq_option(4, NAME, 343, Node999, GOOD_REACTION);
end

procedure Node011
begin
    if (obj_can_see_obj(self_obj, party_member_obj(16777278))) then begin
        Reply(361);
    end
    else begin
        Reply(360);
        giq_option(4, NAME, 362, Node013, NEUTRAL_REACTION);
        giq_option(-3, NAME, 366, Node013, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 363, Node012, GOOD_REACTION);
    giq_option(4, NAME, 364, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 365, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 367, Node012, GOOD_REACTION);
    giq_option(-3, NAME, 368, Node002, NEUTRAL_REACTION);
    giq_option(-3, NAME, 369, Node999, NEUTRAL_REACTION);
end

procedure Node012
begin
    Reply(380);
    if (obj_can_see_obj(self_obj, party_member_obj(16777278)) == 0) then begin
        giq_option(4, NAME, 381, Node013, NEUTRAL_REACTION);
        giq_option(-3, NAME, 366, Node013, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 382, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 383, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 368, Node002, NEUTRAL_REACTION);
    giq_option(-3, NAME, 369, Node999, NEUTRAL_REACTION);
end

procedure Node013
begin
    set_global_var(GVAR_DEN_FLAG_1, global_var(GVAR_DEN_FLAG_1) bwor 32768);
    Reply(400 + (((global_var(GVAR_DEN_FLAG_1) bwand 1) != 0) == 0));
    giq_option(4, NAME, 402, Node012, GOOD_REACTION);
    giq_option(4, NAME, 403, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 404, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 367, Node012, GOOD_REACTION);
    giq_option(-3, NAME, 368, Node002, NEUTRAL_REACTION);
    giq_option(-3, NAME, 369, Node999, NEUTRAL_REACTION);
end

procedure Node014
begin
    Reply(410 + (dude_gender == 1));
    if (not(local_var(5))) then begin
        giq_option(4, NAME, 412, Node017, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 413, Node015, NEUTRAL_REACTION);
    end
end

procedure Node015
begin
    Reply(420);
    giq_option(4, NAME, 421, Node018, NEUTRAL_REACTION);
    giq_option(4, NAME, 422, Node016, NEUTRAL_REACTION);
end

procedure Node016
begin
    Reply(430);
    giq_option(4, NAME, 431, Node019, NEUTRAL_REACTION);
    giq_option(4, NAME, 432, Node999, NEUTRAL_REACTION);
end

procedure Node017
begin
    Reply(440);
    giq_option(4, NAME, 441, Node018, NEUTRAL_REACTION);
end

procedure Node018
begin
    Reply(450);
    giq_option(4, NAME, 451, Node019, NEUTRAL_REACTION);
end

procedure Node019
begin
    set_local_var(6, 1);
    Reply(460);
    giq_option(4, NAME, 461, Node990, NEUTRAL_REACTION);
    giq_option(4, NAME, 462, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 463, Node998, BAD_REACTION);
end

procedure Node020
begin
    Reply(470);
    giq_option(4, NAME, 471, Node990, NEUTRAL_REACTION);
    giq_option(4, NAME, 472, Node999, NEUTRAL_REACTION);
end

procedure Node021
begin
    Reply(480);
    giq_option(4, NAME, 481, Node990, GOOD_REACTION);
    giq_option(4, NAME, 482, Node999, NEUTRAL_REACTION);
end

procedure Node990
begin
    gdialog_barter;
    if (global_var(GVAR_ENCLAVE_SENT) == 7) then begin
        call Node021();
    end
    else begin
        call Node003();
    end
end
