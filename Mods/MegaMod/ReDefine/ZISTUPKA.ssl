variable ProtoOfItemGiven;
variable ValueOfRollCheck;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable base_count;
variable temp_count;
variable hlpwd_flag;
variable antidote_flag;
variable suomi_flag;
variable shamo_flag;
variable poison_flag;
variable hell_flag;
variable hakpwd_flag;
variable psknf_flag;
variable pstrwknf_flag;
variable psspr_flag;
variable nothing_flag;

procedure CheckInven;
procedure LowSkills;
procedure LowDoctor;
procedure LowScience;
procedure Node000;
procedure NodeNext;
procedure NodeLast;
procedure HlPwdCreate;
procedure AntidoteCreate;
procedure SuomiCreate;
procedure ShamoCreate;
procedure PoisonCreate;
procedure PsSprCreate;
procedure PsKnfCreate;
procedure PsTrwKnfCreate;
procedure HellCreate;
procedure HakPwdCreate;
procedure TryHlPwd;
procedure TryAntidote;
procedure TrySuomi;
procedure TryShamo;
procedure TryPoison;
procedure TryPsKnf;
procedure TryPsSpr;
procedure TryPsTrwKnf;
procedure TryHell;
procedure TryHakPwd;
procedure Node999;
procedure GeneralPhase;
procedure talk_p_proc;
procedure use_p_proc;
procedure start;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure CheckInven
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    variable LVar3 := 0;
    variable LVar4 := 0;
    variable LVar5 := 0;
    variable LVar6 := 0;
    variable LVar7 := 0;
    variable LVar8 := 0;
    variable LVar9 := 0;
    variable LVar10 := 0;
    variable LVar11 := 0;
    variable LVar12 := 0;
    variable LVar13 := 0;
    variable LVar14 := 0;
    variable LVar15 := 0;
    variable LVar16 := 0;
    variable LVar17 := 0;
    hlpwd_flag := 0;
    antidote_flag := 0;
    suomi_flag := 0;
    shamo_flag := 0;
    poison_flag := 0;
    hell_flag := 0;
    hakpwd_flag := 0;
    psknf_flag := 0;
    pstrwknf_flag := 0;
    psspr_flag := 0;
    nothing_flag := 1;
    LVar0 := obj_is_carrying_obj_pid(dude_obj, 271);
    LVar1 := obj_is_carrying_obj_pid(dude_obj, 272);
    LVar2 := obj_is_carrying_obj_pid(dude_obj, 548);
    LVar3 := obj_is_carrying_obj_pid(dude_obj, 759);
    LVar4 := obj_is_carrying_obj_pid(dude_obj, 365);
    LVar5 := obj_is_carrying_obj_pid(dude_obj, 92);
    LVar6 := obj_is_carrying_obj_pid(dude_obj, 755);
    LVar7 := obj_is_carrying_obj_pid(dude_obj, 544);
    LVar8 := obj_is_carrying_obj_pid(dude_obj, 542);
    LVar12 := obj_is_carrying_obj_pid(dude_obj, 545);
    LVar11 := obj_is_carrying_obj_pid(dude_obj, 7);
    if (LVar11 == 1) then begin
        LVar16 := critter_inven_obj(dude_obj, 1);
        LVar17 := obj_pid(LVar16);
        if (LVar17 == 7) then begin
            LVar11 := 0;
        end
        else begin
            LVar16 := critter_inven_obj(dude_obj, 2);
            LVar17 := obj_pid(LVar16);
            if (LVar17 == 7) then begin
                LVar11 := 0;
            end
        end
    end
    LVar9 := obj_is_carrying_obj_pid(dude_obj, 4);
    if (LVar9 == 1) then begin
        LVar16 := critter_inven_obj(dude_obj, 1);
        LVar17 := obj_pid(LVar16);
        if (LVar17 == 4) then begin
            LVar9 := 0;
        end
        else begin
            LVar16 := critter_inven_obj(dude_obj, 2);
            LVar17 := obj_pid(LVar16);
            if (LVar17 == 4) then begin
                LVar9 := 0;
            end
        end
    end
    LVar10 := obj_is_carrying_obj_pid(dude_obj, 45);
    if (LVar10 == 1) then begin
        LVar16 := critter_inven_obj(dude_obj, 1);
        LVar17 := obj_pid(LVar16);
        if (LVar17 == 45) then begin
            LVar10 := 0;
        end
        else begin
            LVar16 := critter_inven_obj(dude_obj, 2);
            LVar17 := obj_pid(LVar16);
            if (LVar17 == 45) then begin
                LVar10 := 0;
            end
        end
    end
    if ((LVar0 >= 1) and (LVar1 >= 1)) then begin
        nothing_flag := 0;
        hlpwd_flag := 1;
    end
    if ((LVar0 >= 2) and (LVar5 >= 1)) then begin
        nothing_flag := 0;
        antidote_flag := 1;
    end
    if (LVar7 >= 3) then begin
        nothing_flag := 0;
        suomi_flag := 1;
    end
    if ((LVar3 >= 1) and (LVar6 >= 2)) then begin
        nothing_flag := 0;
        shamo_flag := 1;
    end
    if ((LVar4 >= 2) and (LVar5 >= 1)) then begin
        nothing_flag := 0;
        poison_flag := 1;
    end
    if ((LVar9 >= 1) and (LVar12 >= 1)) then begin
        nothing_flag := 0;
        psknf_flag := 1;
    end
    if ((LVar11 >= 1) and (LVar12 >= 1)) then begin
        nothing_flag := 0;
        psspr_flag := 1;
    end
    if ((LVar10 >= 1) and (LVar12 >= 1)) then begin
        nothing_flag := 0;
        pstrwknf_flag := 1;
    end
    if (LVar2 >= 3) then begin
        nothing_flag := 0;
        hell_flag := 1;
    end
    if ((LVar8 >= 1) and (LVar1 >= 1)) then begin
        nothing_flag := 0;
        hakpwd_flag := 1;
    end
end

procedure LowSkills
begin
    Reply(504);
    giq_option(1, NAME, 806, "GeneralPhase", NEUTRAL_REACTION);
end

procedure LowDoctor
begin
    Reply(502);
    giq_option(1, NAME, 806, "GeneralPhase", NEUTRAL_REACTION);
end

procedure LowScience
begin
    Reply(500);
    giq_option(1, NAME, 806, "GeneralPhase", NEUTRAL_REACTION);
end

procedure Node000
begin
    Reply(200);
    temp_count := 0;
    if (hlpwd_flag) then begin
        temp_count := temp_count + 1;
        if ((temp_count > base_count) and (temp_count <= (base_count + 4))) then begin
            giq_option(1, NAME, 300, "TryHlPwd", NEUTRAL_REACTION);
        end
    end
    if (antidote_flag) then begin
        temp_count := temp_count + 1;
        if ((temp_count > base_count) and (temp_count <= (base_count + 4))) then begin
            giq_option(1, NAME, 302, "TryAntidote", NEUTRAL_REACTION);
        end
    end
    if (suomi_flag) then begin
        temp_count := temp_count + 1;
        if ((temp_count > base_count) and (temp_count <= (base_count + 4))) then begin
            giq_option(1, NAME, 304, "TrySuomi", NEUTRAL_REACTION);
        end
    end
    if (shamo_flag) then begin
        temp_count := temp_count + 1;
        if ((temp_count > base_count) and (temp_count <= (base_count + 4))) then begin
            giq_option(1, NAME, 306, "TryShamo", NEUTRAL_REACTION);
        end
    end
    if (poison_flag) then begin
        temp_count := temp_count + 1;
        if ((temp_count > base_count) and (temp_count <= (base_count + 4))) then begin
            giq_option(1, NAME, 308, "TryPoison", NEUTRAL_REACTION);
        end
    end
    if (hell_flag) then begin
        temp_count := temp_count + 1;
        if ((temp_count > base_count) and (temp_count <= (base_count + 4))) then begin
            giq_option(1, NAME, 310, "TryHell", NEUTRAL_REACTION);
        end
    end
    if (hakpwd_flag) then begin
        temp_count := temp_count + 1;
        if ((temp_count > base_count) and (temp_count <= (base_count + 4))) then begin
            giq_option(1, NAME, 312, "TryHakPwd", NEUTRAL_REACTION);
        end
    end
    if (psknf_flag) then begin
        temp_count := temp_count + 1;
        if ((temp_count > base_count) and (temp_count <= (base_count + 4))) then begin
            giq_option(1, NAME, 316, "TryPsKnf", NEUTRAL_REACTION);
        end
    end
    if (pstrwknf_flag) then begin
        temp_count := temp_count + 1;
        if ((temp_count > base_count) and (temp_count <= (base_count + 4))) then begin
            giq_option(1, NAME, 318, "TryPsTrwKnf", NEUTRAL_REACTION);
        end
    end
    if (psspr_flag) then begin
        temp_count := temp_count + 1;
        if ((temp_count > base_count) and (temp_count <= (base_count + 4))) then begin
            giq_option(1, NAME, 314, "TryPsSpr", NEUTRAL_REACTION);
        end
    end
    if (temp_count > (base_count + 4)) then begin
        giq_option(1, NAME, 808, "NodeNext", NEUTRAL_REACTION);
    end
    if (base_count >= 4) then begin
        giq_option(1, NAME, 810, "NodeLast", NEUTRAL_REACTION);
    end
    if (nothing_flag) then begin
        giq_option(1, NAME, 802, "Node999", NEUTRAL_REACTION);
    end
    else begin
        giq_option(1, NAME, 800, "Node999", NEUTRAL_REACTION);
    end
end

procedure NodeNext
begin
    base_count := base_count + 4;
    call Node000();
end

procedure NodeLast
begin
    base_count := base_count - 4;
    call Node000();
end

procedure HlPwdCreate
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    LVar0 := obj_carrying_pid_obj(dude_obj, 271);
    LVar1 := obj_carrying_pid_obj(dude_obj, 272);
    LVar2 := create_object(273, 0, 0);
    add_mult_objs_to_inven(dude_obj, LVar2, 1);
    rm_mult_objs_from_inven(dude_obj, LVar0, 1);
    rm_mult_objs_from_inven(dude_obj, LVar1, 1);
    gfade_out(600);
    gfade_in(600);
    game_time_advance(60 * 60 * 10);
    Reply(400);
    giq_option(1, NAME, 804, "GeneralPhase", NEUTRAL_REACTION);
    giq_option(1, NAME, 805, "Node999", NEUTRAL_REACTION);
end

procedure AntidoteCreate
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    LVar0 := obj_carrying_pid_obj(dude_obj, 271);
    LVar1 := obj_carrying_pid_obj(dude_obj, 92);
    LVar2 := create_object(49, 0, 0);
    add_mult_objs_to_inven(dude_obj, LVar2, 1);
    rm_mult_objs_from_inven(dude_obj, LVar0, 2);
    rm_mult_objs_from_inven(dude_obj, LVar1, 1);
    gfade_out(600);
    gfade_in(600);
    game_time_advance(3 * 60 * 60 * 10);
    Reply(402);
    giq_option(1, NAME, 804, "GeneralPhase", NEUTRAL_REACTION);
    giq_option(1, NAME, 805, "Node999", NEUTRAL_REACTION);
end

procedure SuomiCreate
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    LVar0 := obj_carrying_pid_obj(dude_obj, 544);
    LVar1 := create_object(750, 0, 0);
    add_mult_objs_to_inven(dude_obj, LVar1, 1);
    rm_mult_objs_from_inven(dude_obj, LVar0, 3);
    gfade_out(600);
    gfade_in(600);
    game_time_advance(3 * 60 * 60 * 10);
    Reply(404);
    giq_option(1, NAME, 804, "GeneralPhase", NEUTRAL_REACTION);
    giq_option(1, NAME, 805, "Node999", NEUTRAL_REACTION);
end

procedure ShamoCreate
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    LVar0 := obj_carrying_pid_obj(dude_obj, 759);
    LVar1 := obj_carrying_pid_obj(dude_obj, 755);
    LVar2 := create_object(753, 0, 0);
    add_mult_objs_to_inven(dude_obj, LVar2, 1);
    rm_mult_objs_from_inven(dude_obj, LVar0, 1);
    rm_mult_objs_from_inven(dude_obj, LVar1, 2);
    gfade_out(600);
    gfade_in(600);
    game_time_advance(3 * 60 * 60 * 10);
    Reply(406);
    giq_option(1, NAME, 804, "GeneralPhase", NEUTRAL_REACTION);
    giq_option(1, NAME, 805, "Node999", NEUTRAL_REACTION);
end

procedure PoisonCreate
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    LVar0 := obj_carrying_pid_obj(dude_obj, 365);
    LVar1 := obj_carrying_pid_obj(dude_obj, 92);
    LVar2 := create_object(545, 0, 0);
    add_mult_objs_to_inven(dude_obj, LVar2, 1);
    rm_mult_objs_from_inven(dude_obj, LVar0, 2);
    rm_mult_objs_from_inven(dude_obj, LVar1, 1);
    gfade_out(600);
    gfade_in(600);
    game_time_advance(3 * 60 * 60 * 10);
    Reply(408);
    giq_option(1, NAME, 804, "GeneralPhase", NEUTRAL_REACTION);
    giq_option(1, NAME, 805, "Node999", NEUTRAL_REACTION);
end

procedure PsSprCreate
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    LVar0 := obj_carrying_pid_obj(dude_obj, 545);
    LVar1 := obj_carrying_pid_obj(dude_obj, 7);
    LVar2 := create_object(701, 0, 0);
    add_mult_objs_to_inven(dude_obj, LVar2, 1);
    rm_mult_objs_from_inven(dude_obj, LVar0, 1);
    rm_mult_objs_from_inven(dude_obj, LVar1, 1);
    gfade_out(600);
    gfade_in(600);
    game_time_advance(60 * 60 * 10);
    Reply(410);
    giq_option(1, NAME, 804, "GeneralPhase", NEUTRAL_REACTION);
    giq_option(1, NAME, 805, "Node999", NEUTRAL_REACTION);
end

procedure PsKnfCreate
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    LVar0 := obj_carrying_pid_obj(dude_obj, 545);
    LVar1 := obj_carrying_pid_obj(dude_obj, 4);
    LVar2 := create_object(700, 0, 0);
    add_mult_objs_to_inven(dude_obj, LVar2, 1);
    rm_mult_objs_from_inven(dude_obj, LVar0, 1);
    rm_mult_objs_from_inven(dude_obj, LVar1, 1);
    gfade_out(600);
    gfade_in(600);
    game_time_advance(60 * 60 * 10);
    Reply(410);
    giq_option(1, NAME, 804, "GeneralPhase", NEUTRAL_REACTION);
    giq_option(1, NAME, 805, "Node999", NEUTRAL_REACTION);
end

procedure PsTrwKnfCreate
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    LVar0 := obj_carrying_pid_obj(dude_obj, 545);
    LVar1 := obj_carrying_pid_obj(dude_obj, 45);
    LVar2 := create_object(703, 0, 0);
    add_mult_objs_to_inven(dude_obj, LVar2, 1);
    rm_mult_objs_from_inven(dude_obj, LVar0, 1);
    rm_mult_objs_from_inven(dude_obj, LVar1, 1);
    gfade_out(600);
    gfade_in(600);
    game_time_advance(60 * 60 * 10);
    Reply(410);
    giq_option(1, NAME, 804, "GeneralPhase", NEUTRAL_REACTION);
    giq_option(1, NAME, 805, "Node999", NEUTRAL_REACTION);
end

procedure HellCreate
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    LVar1 := obj_carrying_pid_obj(dude_obj, 548);
    LVar0 := create_object(754, 0, 0);
    add_mult_objs_to_inven(dude_obj, LVar0, 1);
    rm_mult_objs_from_inven(dude_obj, LVar1, 3);
    gfade_out(600);
    gfade_in(600);
    game_time_advance(60 * 60 * 10);
    Reply(412);
    giq_option(1, NAME, 804, "GeneralPhase", NEUTRAL_REACTION);
    giq_option(1, NAME, 805, "Node999", NEUTRAL_REACTION);
end

procedure HakPwdCreate
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    LVar0 := obj_carrying_pid_obj(dude_obj, 542);
    LVar1 := obj_carrying_pid_obj(dude_obj, 272);
    LVar2 := create_object(534, 0, 0);
    add_mult_objs_to_inven(dude_obj, LVar2, 1);
    rm_mult_objs_from_inven(dude_obj, LVar1, 1);
    gfade_out(600);
    gfade_in(600);
    game_time_advance(3 * 60 * 60 * 10);
    Reply(414);
    giq_option(1, NAME, 804, "GeneralPhase", NEUTRAL_REACTION);
    giq_option(1, NAME, 805, "Node999", NEUTRAL_REACTION);
end

procedure TryHlPwd
begin
    if (dude_skill(SKILL_DOCTOR) < 20) then begin
        call LowDoctor();
    end
    else begin
        call HlPwdCreate();
    end
end

procedure TryAntidote
begin
    if (dude_skill(SKILL_DOCTOR) < 20) then begin
        call LowDoctor();
    end
    else begin
        call AntidoteCreate();
    end
end

procedure TrySuomi
begin
    if ((dude_skill(SKILL_DOCTOR) < 50) and (dude_skill(SKILL_SCIENCE) < 30)) then begin
        call LowSkills();
    end
    else begin
        if (dude_skill(SKILL_DOCTOR) < 50) then begin
            call LowDoctor();
        end
        else begin
            if (dude_skill(SKILL_SCIENCE) < 30) then begin
                call LowScience();
            end
            else begin
                call SuomiCreate();
            end
        end
    end
end

procedure TryShamo
begin
    if ((dude_skill(SKILL_DOCTOR) < 50) and (dude_skill(SKILL_SCIENCE) < 30)) then begin
        call LowSkills();
    end
    else begin
        if (dude_skill(SKILL_DOCTOR) < 50) then begin
            call LowDoctor();
        end
        else begin
            if (dude_skill(SKILL_SCIENCE) < 30) then begin
                call LowScience();
            end
            else begin
                call ShamoCreate();
            end
        end
    end
end

procedure TryPoison
begin
    if (dude_skill(SKILL_DOCTOR) < 20) then begin
        call LowDoctor();
    end
    else begin
        call PoisonCreate();
    end
end

procedure TryPsKnf
begin
    call PsKnfCreate();
end

procedure TryPsSpr
begin
    call PsSprCreate();
end

procedure TryPsTrwKnf
begin
    call PsTrwKnfCreate();
end

procedure TryHell
begin
    if ((dude_skill(SKILL_DOCTOR) < 20) and (dude_skill(SKILL_SCIENCE) < 30)) then begin
        call LowSkills();
    end
    else begin
        if (dude_skill(SKILL_DOCTOR) < 20) then begin
            call LowDoctor();
        end
        else begin
            if (dude_skill(SKILL_SCIENCE) < 30) then begin
                call LowScience();
            end
            else begin
                call HellCreate();
            end
        end
    end
end

procedure TryHakPwd
begin
    if (dude_skill(SKILL_DOCTOR) < 20) then begin
        call LowDoctor();
    end
    else begin
        call HakPwdCreate();
    end
end

procedure Node999
begin
end

procedure GeneralPhase
begin
    base_count := 0;
    call CheckInven();
    call Node000();
end

procedure talk_p_proc
begin
    start_gdialog(1326, self_obj, 4, -1, -1);
    gsay_start;
    call GeneralPhase();
    gsay_end;
    end_dialogue;
end

procedure use_p_proc
begin
    dialogue_system_enter;
end

procedure start
begin
end
