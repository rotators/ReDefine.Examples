variable ValueOfRollCheck := 1;
variable tmp_gen_rep;
variable global_temp;
variable dest_tile;
variable step_tile;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable caught_thief;
variable the_follow_obj;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_exit_p_proc;
procedure map_update_p_proc;
procedure Node000;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node020;
procedure Node021;
procedure Node025;
procedure Node026;
procedure Node027;
procedure Node030;
procedure Node031;
procedure Node032;
procedure Node033;
procedure Node040;
procedure Node041;
procedure Node042;
procedure Node043;
procedure Node044;
procedure Node045;
procedure Node046;
procedure Node999;
procedure Node998;
procedure Node996;
procedure Node995;

variable say_message_time;
variable last_message_said;

procedure timed_event_p_proc;
procedure Node994;
procedure Node993;
procedure Node992;
procedure Node991;
procedure Node990;
procedure Node989;


procedure start
begin
end

procedure critter_p_proc
begin
    if (obj_is_visible_flag(self_obj)) then begin
        if (tile_num(self_obj) == 30302) then begin
            destroy_object(self_obj);
        end
        else begin
            if ((local_var(4) bwand 512) != 0) then begin
                if ((tile_num(self_obj) != global_var(GVAR_MAP_NEXT_TILE)) and (global_var(GVAR_MAP_NEXT_TILE) != 0)) then begin
                    if ((dest_tile == global_var(GVAR_MAP_NEXT_TILE)) and (step_tile < 0)) then begin
                        step_tile := step_tile + 1;
                        debug_msg("step_tile: " + step_tile);
                    end
                    else begin
                        if (anim_busy(self_obj) == 0) then begin
                            dest_tile := global_var(GVAR_MAP_NEXT_TILE);
                            step_tile := global_var(GVAR_MAP_NEXT_TILE);
                            animate_move_obj_to_tile(self_obj, step_tile, 1);
                            while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), global_var(GVAR_MAP_NEXT_TILE)) >= tile_distance(step_tile, global_var(GVAR_MAP_NEXT_TILE)))) do begin
                                debug_msg("rot: " + rotation_to_tile(step_tile, tile_num(self_obj)));
                                step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), 4 % tile_distance(step_tile, tile_num(self_obj)));
                                debug_msg("step_var: " + step_tile);
                                animate_move_obj_to_tile(self_obj, step_tile, 1);
                            end
                            if (anim_busy(self_obj) == 0) then begin
                                if (metarule3(106, tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), elevation(self_obj), 0) != 0) then begin
                                    if (anim_busy(self_obj) == 0) then begin
                                        global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                        global_temp := (global_temp + 1) % 6;
                                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                            debug_msg("flee loop: rot == " + global_temp);
                                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                            global_temp := (global_temp + 1) % 6;
                                        end
                                    end
                                end
                                else begin
                                    step_tile := -10;
                                end
                            end
                        end
                        else begin
                            if (tile_distance(tile_num(self_obj), global_var(GVAR_MAP_NEXT_TILE)) < tile_distance(dest_tile, global_var(GVAR_MAP_NEXT_TILE))) then begin
                                reg_anim_func(2, self_obj);
                            end
                        end
                    end
                end
            end
            else begin
                if (((global_var(GVAR_MODOC_GENERIC_FLAG_2) bwand 16384) != 0) and not(CUR_MAP_MODMAIN)) then begin
                    if ((tile_num(self_obj) != global_var(GVAR_MAP_NEXT_TILE)) and (global_var(GVAR_MAP_NEXT_TILE) != 0)) then begin
                        if ((dest_tile == global_var(GVAR_MAP_NEXT_TILE)) and (step_tile < 0)) then begin
                            step_tile := step_tile + 1;
                            debug_msg("step_tile: " + step_tile);
                        end
                        else begin
                            if (anim_busy(self_obj) == 0) then begin
                                dest_tile := global_var(GVAR_MAP_NEXT_TILE);
                                step_tile := global_var(GVAR_MAP_NEXT_TILE);
                                animate_move_obj_to_tile(self_obj, step_tile, 0);
                                while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), global_var(GVAR_MAP_NEXT_TILE)) >= tile_distance(step_tile, global_var(GVAR_MAP_NEXT_TILE)))) do begin
                                    debug_msg("rot: " + rotation_to_tile(step_tile, tile_num(self_obj)));
                                    step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), 4 % tile_distance(step_tile, tile_num(self_obj)));
                                    debug_msg("step_var: " + step_tile);
                                    animate_move_obj_to_tile(self_obj, step_tile, 0);
                                end
                                if (anim_busy(self_obj) == 0) then begin
                                    if (metarule3(106, tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), elevation(self_obj), 0) != 0) then begin
                                        if (anim_busy(self_obj) == 0) then begin
                                            global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                            global_temp := (global_temp + 1) % 6;
                                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                debug_msg("flee loop: rot == " + global_temp);
                                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                global_temp := (global_temp + 1) % 6;
                                            end
                                        end
                                    end
                                    else begin
                                        step_tile := -10;
                                    end
                                end
                            end
                            else begin
                                if (tile_distance(tile_num(self_obj), global_var(GVAR_MAP_NEXT_TILE)) < tile_distance(dest_tile, global_var(GVAR_MAP_NEXT_TILE))) then begin
                                    reg_anim_func(2, self_obj);
                                end
                            end
                        end
                    end
                end
                else begin
                    if ((local_var(5) > 0) or (critter_state(self_obj) bwand 2)) then begin
                        if (game_time > say_message_time) then begin
                            if (game_time >= local_var(5)) then begin
                                if (anim_busy(self_obj) == 0) then begin
                                    if (0 == 1) then begin
                                        if (local_var(5) == 0) then begin
                                            reg_anim_func(2, self_obj);
                                            reg_anim_func(1, 1);
                                            reg_anim_animate(self_obj, 20, -1);
                                            reg_anim_func(3, 0);
                                            critter_injure(self_obj, 2);
                                        end
                                        set_local_var(5, game_time + (60 * 10 * random(15, 120)));
                                    end
                                    else begin
                                        animate_stand_obj(self_obj);
                                        set_local_var(5, 0);
                                    end
                                    debug_msg("set karl passed out == " + 0);
                                end
                            end
                            else begin
                                if (last_message_said <= 5) then begin
                                    float_msg(self_obj, mstr(250 + last_message_said), FLOAT_MSG_YELLOW);
                                end
                                else begin
                                    last_message_said := 0;
                                end
                                say_message_time := game_time + (10 * random(5, 15));
                            end
                        end
                    end
                    else begin
                        if (obj_can_see_obj(self_obj, dude_obj)) then begin
                            if (CUR_MAP_DENBUS2) then begin
                                if (((local_var(4) bwand 2) != 0) or ((global_var(GVAR_DEN_FLAG_2) bwand 524288) != 0)) then begin
                                    if (critter_is_fleeing(self_obj)) then begin
                                        if (anim_busy(self_obj) == 0) then begin
                                            if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                                                if (anim_busy(self_obj) == 0) then begin
                                                    global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                                                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                                    global_temp := (global_temp + 1) % 6;
                                                    while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                                                        debug_msg("flee loop: rot == " + global_temp);
                                                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                                        global_temp := (global_temp + 1) % 6;
                                                    end
                                                end
                                            end
                                        end
                                    end
                                    else begin
                                        attack(dude_obj);
                                    end
                                end
                                else begin
                                    if (game_time > say_message_time) then begin
                                        if (dude_charisma <= 1) then begin
                                            float_msg(self_obj, mstr(161), FLOAT_MSG_YELLOW);
                                        end
                                        else begin
                                            if (last_message_said <= 3) then begin
                                                float_msg(self_obj, mstr(153 + last_message_said), FLOAT_MSG_YELLOW);
                                                last_message_said := last_message_said + 1;
                                            end
                                        end
                                        say_message_time := game_time + (10 * random(15, 30));
                                    end
                                end
                            end
                            else begin
                                if (((local_var(4) bwand 2) != 0) or (global_var(GVAR_TOWN_REP_MODOC) <= -1000)) then begin
                                    if (critter_is_fleeing(self_obj)) then begin
                                        if (anim_busy(self_obj) == 0) then begin
                                            if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                                                if (anim_busy(self_obj) == 0) then begin
                                                    global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                                                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                                    global_temp := (global_temp + 1) % 6;
                                                    while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                                                        debug_msg("flee loop: rot == " + global_temp);
                                                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                                        global_temp := (global_temp + 1) % 6;
                                                    end
                                                end
                                            end
                                        end
                                    end
                                    else begin
                                        attack(dude_obj);
                                    end
                                end
                            end
                        end
                        else begin
                            say_message_time := 0;
                            last_message_said := 0;
                        end
                    end
                end
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        call Node998();
    end
end

procedure talk_p_proc
begin
    script_overrides;
    if ((local_var(4) bwand 2) != 0) then begin
        if (critter_is_fleeing(self_obj)) then begin
            if (anim_busy(self_obj) == 0) then begin
                if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                    if (anim_busy(self_obj) == 0) then begin
                        global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                        global_temp := (global_temp + 1) % 6;
                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                            debug_msg("flee loop: rot == " + global_temp);
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                        end
                    end
                end
            end
        end
        else begin
            attack(dude_obj);
        end
    end
    else begin
        if (local_var(5) > 0) then begin
            debug_msg("passed_out");
            if ((local_var(4) bwand 1) != 0) then begin
                display_mstr(159);
            end
            else begin
                display_mstr(160);
            end
        end
        else begin
            if (CUR_MAP_MODMAIN) then begin
                float_msg(self_obj, mstr(157), FLOAT_MSG_YELLOW);
            end
            else begin
                if ((global_var(GVAR_MODOC_GENERIC_FLAG_2) bwand 16384) != 0) then begin
                    float_msg(self_obj, mstr(300), FLOAT_MSG_YELLOW);
                end
                else begin
                    if ((global_var(GVAR_MODOC_GENERIC_FLAG_2) bwand 131072) != 0) then begin
                        start_gdialog(104, self_obj, 4, -1, -1);
                        gsay_start;
                        call Node003();
                        gsay_end;
                        end_dialogue;
                    end
                    else begin
                        if ((local_var(4) bwand 16384) != 0) then begin
                            float_msg(self_obj, mstr(156), FLOAT_MSG_YELLOW);
                        end
                        else begin
                            start_gdialog(104, self_obj, 4, -1, -1);
                            gsay_start;
                            if ((local_var(4) bwand 2048) != 0) then begin
                                call Node004();
                            end
                            else begin
                                if ((local_var(4) bwand 1024) != 0) then begin
                                    call Node001();
                                end
                                else begin
                                    if ((local_var(4) bwand 1) != 0) then begin
                                        call Node002();
                                    end
                                    else begin
                                        call Node000();
                                    end
                                end
                            end
                            gsay_end;
                            end_dialogue;
                        end
                    end
                end
            end
            set_local_var(4, local_var(4) bwor 1);
        end
    end
    last_message_said := 4;
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
        if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
            tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
        end
        if (tmp_gen_rep >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (tmp_gen_rep >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (tmp_gen_rep >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (tmp_gen_rep >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(GVAR_TOWN_REP_MODOC, global_var(GVAR_TOWN_REP_MODOC) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
    set_global_var(GVAR_MODOC_SLAUGHTER_BESS_TIME, -1);
end

procedure look_at_p_proc
begin
    script_overrides;
    if (((local_var(4) bwand 1) != 0) or (CUR_MAP_MODMAIN)) then begin
        if ((local_var(5) > 0) == 0) then begin
            display_mstr(101);
        end
        else begin
            display_mstr(159);
        end
    end
    else begin
        display_mstr(100);
    end
end

procedure description_p_proc
begin
    script_overrides;
    if ((local_var(5) > 0) == 0) then begin
        display_mstr(102);
    end
    else begin
        display_mstr(160);
    end
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (anim_busy(self_obj) == 0) then begin
        if (0 == 1) then begin
            if (local_var(5) == 0) then begin
                reg_anim_func(2, self_obj);
                reg_anim_func(1, 1);
                reg_anim_animate(self_obj, 20, -1);
                reg_anim_func(3, 0);
                critter_injure(self_obj, 2);
            end
            set_local_var(5, game_time + (60 * 10 * random(15, 120)));
        end
        else begin
            animate_stand_obj(self_obj);
            set_local_var(5, 0);
        end
        debug_msg("set karl passed out == " + 0);
    end
    if (source_obj == dude_obj) then begin
        if (CUR_MAP_MODMAIN) then begin
            if ((global_var(GVAR_TOWN_REP_MODOC) <= -1000) == 0) then begin
                set_global_var(GVAR_TOWN_REP_MODOC, -1000);
            end
        end
        call Node998();
    end
end

procedure map_enter_p_proc
begin
    if (is_loading_game == 0) then begin
        if (CUR_MAP_MODMAIN) then begin
            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 28);
        end
        else begin
            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 14);
        end
        debug_msg("karl: map_enter_p_proc");
        if (global_var(GVAR_MODOC_SLAUGHTER_BESS_TIME) == -1) then begin
            debug_msg("   karl_dead");
            destroy_object(self_obj);
        end
        else begin
            if (CUR_MAP_MODMAIN) then begin
                debug_msg("   karl_in_modoc");
                if ((CUR_MAP_MODINN) and (elevation(self_obj) != ((global_var(GVAR_MODOC_GENERIC_FLAG_1) bwand 1) != 0))) then begin
                    move_to(self_obj, tile_num(self_obj), (global_var(GVAR_MODOC_GENERIC_FLAG_1) bwand 1) != 0);
                end
                if (obj_is_visible_flag(self_obj) == (((global_var(GVAR_MODOC_GENERIC_FLAG_2) bwand 16384) != 0) == 0)) then begin
                    set_obj_visibility(self_obj, ((global_var(GVAR_MODOC_GENERIC_FLAG_2) bwand 16384) != 0) == 0);
                end
            end
            else begin
                if ((global_var(GVAR_MODOC_GENERIC_FLAG_2) bwand 16384) != 0) then begin
                    debug_msg("   karl_going_home");
                    destroy_object(self_obj);
                end
            end
        end
    end
end

procedure map_exit_p_proc
begin
    if ((global_var(GVAR_MODOC_GENERIC_FLAG_2) bwand 16384) != 0) then begin
        if ((local_var(4) bwand 2) != 0) then begin
            if ((global_var(GVAR_TOWN_REP_MODOC) <= -1000) == 0) then begin
                set_global_var(GVAR_TOWN_REP_MODOC, -1000);
            end
        end
    end
end

procedure map_update_p_proc
begin
end

procedure Node000
begin
    Reply(162);
    giq_option(4, NAME, 163, Node010, NEUTRAL_REACTION);
    giq_option(4, NAME, 164, Node020, NEUTRAL_REACTION);
    giq_option(4, NAME, 165, Node025, NEUTRAL_REACTION);
    giq_option(4, NAME, 166, Node046, NEUTRAL_REACTION);
    if (item_caps_total(dude_obj) >= 2) then begin
        giq_option(-3, NAME, 167, Node030, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 168, Node031, NEUTRAL_REACTION);
end

procedure Node001
begin
    Reply(169);
    giq_option(4, NAME, 170, Node994, NEUTRAL_REACTION);
    if (obj_is_carrying_obj_pid(dude_obj, 124)) then begin
        giq_option(4, NAME, 150, Node993, NEUTRAL_REACTION);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 125)) then begin
        giq_option(4, NAME, 151, Node992, NEUTRAL_REACTION);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 106)) then begin
        giq_option(4, NAME, 152, Node991, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 173, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 174, Node013, NEUTRAL_REACTION);
    if ((local_var(4) bwand 8192) != 0) then begin
        giq_option(4, NAME, 175, Node042, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 166, Node046, NEUTRAL_REACTION);
    if (item_caps_total(dude_obj) >= 2) then begin
        giq_option(-3, NAME, 167, Node030, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 178, Node999, NEUTRAL_REACTION);
end

procedure Node002
begin
    Reply(179);
    giq_option(4, NAME, 180, Node990, NEUTRAL_REACTION);
    if (item_caps_total(dude_obj) >= 1) then begin
        giq_option(4, NAME, 184, Node033, NEUTRAL_REACTION);
    end
    if ((local_var(4) bwand 8192) != 0) then begin
        giq_option(4, NAME, 175, Node042, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 173, Node025, NEUTRAL_REACTION);
    giq_option(4, NAME, 166, Node046, NEUTRAL_REACTION);
    if (item_caps_total(dude_obj) >= 2) then begin
        giq_option(-3, NAME, 185, Node030, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 186, Node032, NEUTRAL_REACTION);
end

procedure Node003
begin
    Reply(187);
    giq_option(4, NAME, 188, Node040, NEUTRAL_REACTION);
    giq_option(4, NAME, 189, Node041, NEUTRAL_REACTION);
    giq_option(-3, NAME, 190, Node999, NEUTRAL_REACTION);
end

procedure Node004
begin
    Reply(191);
    giq_option(4, NAME, 170, Node994, NEUTRAL_REACTION);
    if (obj_is_carrying_obj_pid(dude_obj, 124)) then begin
        giq_option(4, NAME, 150, Node993, NEUTRAL_REACTION);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 125)) then begin
        giq_option(4, NAME, 151, Node992, NEUTRAL_REACTION);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 106)) then begin
        giq_option(4, NAME, 152, Node991, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 173, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 174, Node013, NEUTRAL_REACTION);
    if ((local_var(4) bwand 8192) != 0) then begin
        giq_option(4, NAME, 175, Node042, NEUTRAL_REACTION);
    end
    if (item_caps_total(dude_obj) >= 2) then begin
        giq_option(-3, NAME, 167, Node030, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 178, Node999, NEUTRAL_REACTION);
end

procedure Node010
begin
    Reply(198);
    giq_option(1, NAME, 199, Node996, NEUTRAL_REACTION);
    giq_option(1, NAME, 200, Node990, NEUTRAL_REACTION);
    giq_option(1, NAME, 201, Node999, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(202);
    giq_option(1, NAME, 203, Node995, NEUTRAL_REACTION);
    giq_option(1, NAME, 204, Node989, NEUTRAL_REACTION);
end

procedure Node012
begin
    if (1) then begin
        set_local_var(4, local_var(4) bwor 2048);
    end
    else begin
        set_local_var(4, local_var(4) bwand (-1 - 2048));
    end
    Reply(205);
    giq_option(1, NAME, g_mstr(350), Node989, NEUTRAL_REACTION);
end

procedure Node013
begin
    Reply(206);
    giq_option(1, NAME, 207, Node014, NEUTRAL_REACTION);
    giq_option(1, NAME, 208, Node999, NEUTRAL_REACTION);
end

procedure Node014
begin
    Reply(209);
    giq_option(1, NAME, 210, Node015, NEUTRAL_REACTION);
    giq_option(1, NAME, 208, Node999, NEUTRAL_REACTION);
end

procedure Node015
begin
    if (1) then begin
        set_local_var(4, local_var(4) bwor 8192);
    end
    else begin
        set_local_var(4, local_var(4) bwand (-1 - 8192));
    end
    Reply(212);
    giq_option(1, NAME, 213, Node989, NEUTRAL_REACTION);
end

procedure Node016
begin
    if (0) then begin
        set_local_var(4, local_var(4) bwor 2048);
    end
    else begin
        set_local_var(4, local_var(4) bwand (-1 - 2048));
    end
    Reply(214);
    giq_option(1, NAME, 215, Node013, NEUTRAL_REACTION);
    giq_option(1, NAME, 216, Node999, NEUTRAL_REACTION);
end

procedure Node020
begin
    Reply(217);
    giq_option(1, NAME, 180, Node990, NEUTRAL_REACTION);
    giq_option(1, NAME, 219, Node021, NEUTRAL_REACTION);
    giq_option(1, NAME, g_mstr(random(375, 376)), Node999, NEUTRAL_REACTION);
end

procedure Node021
begin
    if (1) then begin
        set_local_var(4, local_var(4) bwor 2048);
    end
    else begin
        set_local_var(4, local_var(4) bwand (-1 - 2048));
    end
    Reply(220);
    giq_option(1, NAME, 221, Node989, NEUTRAL_REACTION);
end

procedure Node025
begin
    Reply(222);
    if (obj_is_carrying_obj_pid(dude_obj, 124)) then begin
        giq_option(1, NAME, 150, Node993, NEUTRAL_REACTION);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 125)) then begin
        giq_option(1, NAME, 151, Node992, NEUTRAL_REACTION);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 106)) then begin
        giq_option(1, NAME, 152, Node991, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 173, Node999, NEUTRAL_REACTION);
end

procedure Node026
begin
    if (1 == 1) then begin
        if (local_var(5) == 0) then begin
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            reg_anim_animate(self_obj, 20, -1);
            reg_anim_func(3, 0);
            critter_injure(self_obj, 2);
        end
        set_local_var(5, game_time + (60 * 10 * random(15, 120)));
    end
    else begin
        animate_stand_obj(self_obj);
        set_local_var(5, 0);
    end
    debug_msg("set karl passed out == " + 1);
    if (0) then begin
        set_local_var(4, local_var(4) bwor 2048);
    end
    else begin
        set_local_var(4, local_var(4) bwand (-1 - 2048));
    end
    Reply(224);
    giq_option(1, NAME, 225, Node999, NEUTRAL_REACTION);
end

procedure Node027
begin
    if (1) then begin
        set_local_var(4, local_var(4) bwor 2048);
    end
    else begin
        set_local_var(4, local_var(4) bwand (-1 - 2048));
    end
    Reply(226);
    giq_option(1, NAME, g_mstr(350), Node999, NEUTRAL_REACTION);
end

procedure Node030
begin
    variable LVar0 := 0;
    LVar0 := item_caps_total(dude_obj) / 2;
    item_caps_adjust(self_obj, LVar0);
    if (1) then begin
        set_local_var(4, local_var(4) bwor 1024);
    end
    else begin
        set_local_var(4, local_var(4) bwand (-1 - 1024));
    end
    item_caps_adjust(dude_obj, -LVar0);
    Reply(227);
    giq_option(1, NAME, 228, Node015, NEUTRAL_REACTION);
    giq_option(1, NAME, 229, Node999, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure Node031
begin
    Reply(230);
    giq_option(1, NAME, g_mstr(350), Node999, NEUTRAL_REACTION);
end

procedure Node032
begin
    Reply(231);
    giq_option(1, NAME, g_mstr(350), Node999, NEUTRAL_REACTION);
end

procedure Node033
begin
    Reply(232);
    giq_option(1, NAME, g_mstr(350), Node999, NEUTRAL_REACTION);
end

procedure Node040
begin
    display_mstr(400);
    if (global_var(GVAR_MODOC_GHOST_SEED_PIP) < 6) then begin
        set_global_var(GVAR_MODOC_GHOST_SEED_PIP, 6);
    end
    debug_msg("ghost pip == " + global_var(GVAR_MODOC_GHOST_SEED_PIP));
    if ((global_var(GVAR_MODOC_VERMIN_HUNTER_SEED) >= 4) == 0) then begin
        set_global_var(GVAR_MODOC_VERMIN_HUNTER_SEED, 3);
    end
    else begin
        if ((global_var(GVAR_MODOC_VERMIN_HUNTER_SEED) >= 7) == 0) then begin
            set_global_var(GVAR_MODOC_VERMIN_HUNTER_SEED, 8);
        end
    end
    if (((global_var(GVAR_MODOC_GENERIC_FLAG_2) bwand 16384) != 0) == 0) then begin
        give_exp_points(500);
        display_msg(g_mstr(100) + 500 + g_mstr(101));
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 3);
        debug_msg("Player gains " + 3 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
        if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
            tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
        end
        if (tmp_gen_rep >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (tmp_gen_rep >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (tmp_gen_rep >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (tmp_gen_rep >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    set_global_var(GVAR_MODOC_GENERIC_FLAG_2, global_var(GVAR_MODOC_GENERIC_FLAG_2) bwor 16384);
    if ((global_var(GVAR_MODOC_KARL_PIP) >= 4) == 0) then begin
        set_global_var(GVAR_MODOC_KARL_PIP, 3);
    end
    else begin
        if ((global_var(GVAR_MODOC_KARL_PIP) >= 7) == 0) then begin
            set_global_var(GVAR_MODOC_KARL_PIP, 8);
        end
    end
    Reply(233);
    giq_option(1, NAME, g_mstr(350), Node999, NEUTRAL_REACTION);
end

procedure Node041
begin
    if (global_var(GVAR_MODOC_GHOST_SEED_PIP) < 6) then begin
        set_global_var(GVAR_MODOC_GHOST_SEED_PIP, 6);
    end
    debug_msg("ghost pip == " + global_var(GVAR_MODOC_GHOST_SEED_PIP));
    if (1) then begin
        set_local_var(4, local_var(4) bwor 512);
    end
    else begin
        set_local_var(4, local_var(4) bwand (-1 - 512));
    end
    set_global_var(GVAR_MODOC_KARL_PIP, 2);
    set_global_var(GVAR_TOWN_REP_MODOC, global_var(GVAR_TOWN_REP_MODOC) + -3);
    Reply(234);
    giq_option(1, NAME, g_mstr(350), Node999, NEUTRAL_REACTION);
end

procedure Node042
begin
    Reply(235);
    giq_option(1, NAME, 236, Node013, NEUTRAL_REACTION);
    giq_option(1, NAME, 237, Node999, NEUTRAL_REACTION);
end

procedure Node043
begin
    Reply(238);
    if (dude_gender == 0) then begin
        giq_option(1, NAME, 239, Node044, NEUTRAL_REACTION);
    end
    giq_option(1, NAME, 240, Node045, NEUTRAL_REACTION);
    giq_option(1, NAME, 241, Node014, NEUTRAL_REACTION);
    giq_option(1, NAME, 242, Node999, NEUTRAL_REACTION);
end

procedure Node044
begin
    Reply(243);
    giq_option(1, NAME, 244, Node999, NEUTRAL_REACTION);
    giq_option(1, NAME, 245, Node045, NEUTRAL_REACTION);
end

procedure Node045
begin
    variable LVar0 := 0;
    set_global_var(GVAR_PLAYER_SEX_LEVEL, global_var(194) + (((((dude_charisma * 50) + (dude_endurance * 25) + (get_critter_stat(dude_obj, STAT_ag) * 13) + (dude_strength * 12)) / 100) + (has_trait(TRAIT_PERK, dude_obj, PERK_kama_sutra_perk) * 2) + has_trait(2, dude_obj, 13) + (((global_var(GVAR_PLAYER_SEX_LEVEL) >= 100) or (global_var(GVAR_NEW_RENO_PORN_STAR) > 0)) * 2 * (dude_obj == dude_obj))) * 1));
    if (global_var(GVAR_SEX_COUNTER) >= 9) then begin
        set_global_var(GVAR_GIGALO, 1);
    end
    if (((((dude_charisma * 50) + (dude_endurance * 25) + (get_critter_stat(dude_obj, STAT_ag) * 13) + (dude_strength * 12)) / 100) + (has_trait(TRAIT_PERK, dude_obj, PERK_kama_sutra_perk) * 2) + has_trait(2, dude_obj, 13) + (((global_var(GVAR_PLAYER_SEX_LEVEL) >= 100) or (global_var(GVAR_NEW_RENO_PORN_STAR) > 0)) * 2 * (dude_obj == dude_obj))) >= 9) then begin
        set_global_var(GVAR_SEXPERT, 1);
    end
    if (global_var(GVAR_DUDE_VIRGIN) == 1) then begin
        set_global_var(GVAR_DUDE_VIRGIN, 0);
    end
    set_global_var(GVAR_SEX_COUNTER, global_var(GVAR_SEX_COUNTER) + 1);
    LVar0 := item_caps_total(self_obj);
    if (LVar0 > 0) then begin
        if (LVar0 >= 1000) then begin
            item_caps_adjust(self_obj, -1000);
            if (1) then begin
                set_local_var(4, local_var(4) bwor 1024);
            end
            else begin
                set_local_var(4, local_var(4) bwand (-1 - 1024));
            end
            item_caps_adjust(dude_obj, --1000);
            Reply(246);
        end
        else begin
            item_caps_adjust(self_obj, -LVar0);
            if (1) then begin
                set_local_var(4, local_var(4) bwor 1024);
            end
            else begin
                set_local_var(4, local_var(4) bwand (-1 - 1024));
            end
            item_caps_adjust(dude_obj, --LVar0);
            Reply(mstr(260) + LVar0 + mstr(261));
        end
    end
    else begin
        Reply(262);
    end
    giq_option(1, NAME, g_mstr(350), Node999, NEUTRAL_REACTION);
    return 0;
    LVar0 := 0;
end

procedure Node046
begin
    if ((global_var(GVAR_MODOC_SLAUGHTER_BESS_TIME) == -1) == 0) then begin
        set_global_var(GVAR_MODOC_SLAUGHTER_BESS_TIME, 1);
    end
    if (1) then begin
        set_local_var(4, local_var(4) bwor 16384);
    end
    else begin
        set_local_var(4, local_var(4) bwand (-1 - 16384));
    end
    Reply(247);
    giq_option(1, NAME, g_mstr(350), Node999, NEUTRAL_REACTION);
end

procedure Node999
begin
end

procedure Node998
begin
    set_local_var(4, local_var(4) bwor 2);
end

procedure Node996
begin
    if (item_caps_total(dude_obj) >= 1000) then begin
        item_caps_adjust(self_obj, 1000);
        if (1) then begin
            set_local_var(4, local_var(4) bwor 1024);
        end
        else begin
            set_local_var(4, local_var(4) bwand (-1 - 1024));
        end
        item_caps_adjust(dude_obj, -1000);
        call Node011();
    end
    else begin
        call Node012();
    end
end

procedure Node995
begin
    if ((item_caps_total(self_obj) >= 1000) and (dude_charisma >= 8)) then begin
        call Node043();
    end
    else begin
        call Node013();
    end
end

procedure timed_event_p_proc
begin
end

procedure Node994
begin
    if (item_caps_total(dude_obj) >= 100) then begin
        item_caps_adjust(self_obj, 100);
        if (1) then begin
            set_local_var(4, local_var(4) bwor 1024);
        end
        else begin
            set_local_var(4, local_var(4) bwand (-1 - 1024));
        end
        item_caps_adjust(dude_obj, -100);
        call Node016();
    end
    else begin
        call Node012();
    end
end

procedure Node993
begin
    restock_amt := 1;
    if (obj_is_carrying_obj_pid(dude_obj, 124) < 1) then begin
        restock_amt := obj_is_carrying_obj_pid(dude_obj, 124);
    end
    if (restock_amt > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 124);
        restock_trash := rm_mult_objs_from_inven(dude_obj, restock_obj, restock_amt);
        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt);
    end
    call Node026();
end

procedure Node992
begin
    restock_amt := 1;
    if (obj_is_carrying_obj_pid(dude_obj, 125) < 1) then begin
        restock_amt := obj_is_carrying_obj_pid(dude_obj, 125);
    end
    if (restock_amt > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 125);
        restock_trash := rm_mult_objs_from_inven(dude_obj, restock_obj, restock_amt);
        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt);
    end
    call Node026();
end

procedure Node991
begin
    restock_amt := 1;
    if (obj_is_carrying_obj_pid(dude_obj, 106) < 1) then begin
        restock_amt := obj_is_carrying_obj_pid(dude_obj, 106);
    end
    if (restock_amt > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 106);
        restock_trash := rm_mult_objs_from_inven(dude_obj, restock_obj, restock_amt);
        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt);
    end
    call Node027();
end

procedure Node990
begin
    if (item_caps_total(dude_obj) >= 25) then begin
        item_caps_adjust(self_obj, 25);
        if (1) then begin
            set_local_var(4, local_var(4) bwor 1024);
        end
        else begin
            set_local_var(4, local_var(4) bwand (-1 - 1024));
        end
        item_caps_adjust(dude_obj, -25);
        call Node016();
    end
    else begin
        call Node012();
    end
end

procedure Node989
begin
    if (1 == 1) then begin
        if (local_var(5) == 0) then begin
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            reg_anim_animate(self_obj, 20, -1);
            reg_anim_func(3, 0);
            critter_injure(self_obj, 2);
        end
        set_local_var(5, game_time + (60 * 10 * random(15, 120)));
    end
    else begin
        animate_stand_obj(self_obj);
        set_local_var(5, 0);
    end
    debug_msg("set karl passed out == " + 1);
end
