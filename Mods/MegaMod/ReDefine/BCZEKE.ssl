procedure pickup_p_proc;

variable tmp_gen_rep;
variable global_temp;
variable restock_obj;

procedure start;
procedure critter_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node998;
procedure Node999;
procedure Node001;
procedure Node002;
procedure Node003;
procedure Node004;
procedure Node005;
procedure Node006;
procedure Node007;
procedure Node008;
procedure Node009;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;

variable q1;
variable q2;
variable q3;
variable q4;

procedure combat_p_proc;
procedure Node006a;
procedure Node007a;
procedure Node008a;
procedure Node009a;
procedure Node999Card;
procedure giveCard;


procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure start
begin
end

procedure critter_p_proc
begin
    if ((local_var(5) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack(dude_obj);
    end
end

procedure talk_p_proc
begin
    if (global_var(GVAR_NCR_V15_DARION_DEAD) and (global_var(GVAR_V15_NCR_DEAL) == 2)) then begin
        call Node016();
    end
    else begin
        if (global_var(GVAR_NCR_V15_DARION_DEAD) and (global_var(GVAR_NCR_TANDI_JOB_ACCEPT) == 0)) then begin
            float_msg(self_obj, mstr(163), FLOAT_MSG_YELLOW);
        end
        else begin
            if (local_var(5) == 1) then begin
                call Node017();
            end
            else begin
                if (global_var(GVAR_NCR_V15_DARION_DEAL) and (global_var(GVAR_NCR_V15_DARION_DEAD) == 0)) then begin
                    start_gdialog(565, self_obj, 4, -1, -1);
                    gsay_start;
                    call Node014();
                    gsay_end;
                    end_dialogue;
                end
                else begin
                    if (global_var(GVAR_NCR_V15_DARION_DEAD) and not(local_var(7))) then begin
                        start_gdialog(565, self_obj, 4, -1, -1);
                        gsay_start;
                        call Node015();
                        gsay_end;
                        end_dialogue;
                    end
                    else begin
                        if (local_var(7)) then begin
                            call Node016();
                        end
                        else begin
                            if (global_var(GVAR_V15_SEED_STATUS) bwand 4) then begin
                                start_gdialog(565, self_obj, 4, -1, -1);
                                gsay_start;
                                call Node004();
                                gsay_end;
                                end_dialogue;
                            end
                            else begin
                                if (local_var(4) == 0) then begin
                                    start_gdialog(565, self_obj, 4, -1, -1);
                                    gsay_start;
                                    call Node001();
                                    gsay_end;
                                    end_dialogue;
                                end
                                else begin
                                    start_gdialog(565, self_obj, 4, -1, -1);
                                    gsay_start;
                                    call Node003();
                                    gsay_end;
                                    end_dialogue;
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    set_local_var(4, 1);
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
        if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
            tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
        end
        if (tmp_gen_rep >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (tmp_gen_rep >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (tmp_gen_rep >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (tmp_gen_rep >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (tmp_gen_rep > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (tmp_gen_rep > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (tmp_gen_rep > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (tmp_gen_rep > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(GVAR_TOWN_REP_VAULT_15, global_var(GVAR_TOWN_REP_VAULT_15) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
    if (local_var(6)) then begin
        set_global_var(GVAR_V15_SEED_STATUS, global_var(GVAR_V15_SEED_STATUS) bwor 1024);
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 0) then begin
        display_mstr(100);
    end
    else begin
        display_mstr(101);
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(102);
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure map_enter_p_proc
begin
    if (elevation(self_obj) != dude_elevation) then begin
        move_to(self_obj, tile_num(self_obj), dude_elevation);
    end
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 113);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_PEASANTS);
end

procedure timed_event_p_proc
begin
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
end

procedure Node001
begin
    Reply(103);
    giq_option(-3, NAME, 104, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 105, Node002, NEUTRAL_REACTION);
    giq_option(4, NAME, 106, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 107, Node002, NEUTRAL_REACTION);
end

procedure Node002
begin
    Reply(108);
    giq_option(1, NAME, 109, Node999, NEUTRAL_REACTION);
end

procedure Node003
begin
    Reply(110);
    giq_option(1, NAME, 111, Node999, NEUTRAL_REACTION);
end

procedure Node004
begin
    if (local_var(9) == 0) then begin
        set_local_var(9, 1);
        Reply(112);
    end
    else begin
        Reply(160);
    end
    giq_option(-3, NAME, 113, Node005, NEUTRAL_REACTION);
    giq_option(-3, NAME, 114, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 115, Node005, NEUTRAL_REACTION);
    giq_option(4, NAME, 116, Node999, NEUTRAL_REACTION);
end

procedure Node005
begin
    Reply(117);
    if (q1 == 0) then begin
        giq_option(-3, NAME, 118, Node006a, NEUTRAL_REACTION);
        giq_option(4, NAME, 123, Node006a, NEUTRAL_REACTION);
    end
    if (q2 == 0) then begin
        giq_option(-3, NAME, 119, Node007a, NEUTRAL_REACTION);
        giq_option(4, NAME, 124, Node007a, NEUTRAL_REACTION);
    end
    if (q3 == 0) then begin
        giq_option(-3, NAME, 120, Node008a, NEUTRAL_REACTION);
        giq_option(4, NAME, 125, Node008a, NEUTRAL_REACTION);
    end
    if (q4 == 0) then begin
        giq_option(-3, NAME, 121, Node009a, NEUTRAL_REACTION);
        giq_option(4, NAME, 126, Node009a, NEUTRAL_REACTION);
    end
    if (obj_is_carrying_obj_pid(self_obj, 373) > 0) then begin
        giq_option(-3, NAME, 122, Node999Card, NEUTRAL_REACTION);
        giq_option(4, NAME, 127, Node999Card, NEUTRAL_REACTION);
    end
    else begin
        giq_option(-3, NAME, 122, Node999, NEUTRAL_REACTION);
        giq_option(4, NAME, 127, Node999, NEUTRAL_REACTION);
    end
end

procedure Node006
begin
    Reply(128);
    giq_option(-3, NAME, 129, Node005, NEUTRAL_REACTION);
    giq_option(4, NAME, 130, Node005, NEUTRAL_REACTION);
end

procedure Node007
begin
    Reply(131);
    if ((local_var(10) == 0) and (global_var(GVAR_NCR_TANDI_JOB_ACCEPT) == 1)) then begin
        set_local_var(10, 1);
        giq_option(-3, NAME, 138, Node010, NEUTRAL_REACTION);
        giq_option(4, NAME, 139, Node010, NEUTRAL_REACTION);
    end
    else begin
        giq_option(-3, NAME, 132, Node005, NEUTRAL_REACTION);
        giq_option(4, NAME, 133, Node005, NEUTRAL_REACTION);
    end
end

procedure Node008
begin
    if (obj_is_carrying_obj_pid(self_obj, 373) > 0) then begin
        call giveCard();
        Reply(134);
        giq_option(-3, NAME, 135, Node005, NEUTRAL_REACTION);
        giq_option(4, NAME, 136, Node005, NEUTRAL_REACTION);
    end
    else begin
        Reply(170);
        giq_option(-3, NAME, 104, Node005, NEUTRAL_REACTION);
        giq_option(4, NAME, 171, Node005, NEUTRAL_REACTION);
    end
end

procedure Node009
begin
    if (town_known(10) == 0) then begin
        debug_msg("  mark_on_map(" + 10 + ")");
        mark_area_known(0, 10, 1);
    end
    if (local_var(10)) then begin
        Reply(161);
    end
    else begin
        Reply(137);
    end
    debug_msg("BCZEKE: " + global_var(GVAR_NCR_TANDI_JOB_ACCEPT));
    if (local_var(10) or (global_var(GVAR_NCR_TANDI_JOB_ACCEPT) != 1)) then begin
        giq_option(1, NAME, 129, Node005, NEUTRAL_REACTION);
    end
    else begin
        set_local_var(10, 1);
        giq_option(-3, NAME, 138, Node010, NEUTRAL_REACTION);
        giq_option(4, NAME, 139, Node010, NEUTRAL_REACTION);
    end
end

procedure Node010
begin
    Reply(140);
    giq_option(-3, NAME, 141, Node011, NEUTRAL_REACTION);
    giq_option(4, NAME, 142, Node011, NEUTRAL_REACTION);
end

procedure Node011
begin
    set_global_var(GVAR_V15_SEED_STATUS, global_var(GVAR_V15_SEED_STATUS) bwor 2048);
    set_global_var(GVAR_V15_KILL_DARION, 1);
    set_global_var(GVAR_V15_NCR_DEAL, 1);
    Reply(143);
    giq_option(-3, NAME, 144, Node012, NEUTRAL_REACTION);
    giq_option(-3, NAME, 145, Node013, NEUTRAL_REACTION);
    giq_option(4, NAME, 146, Node012, NEUTRAL_REACTION);
    giq_option(4, NAME, 147, Node013, NEUTRAL_REACTION);
end

procedure Node012
begin
    Reply(148);
    giq_option(1, NAME, 151, Node005, NEUTRAL_REACTION);
end

procedure Node013
begin
    Reply(150);
    giq_option(1, NAME, 151, Node005, NEUTRAL_REACTION);
end

procedure Node014
begin
    Reply(152);
    giq_option(1, NAME, 153, Node999, NEUTRAL_REACTION);
end

procedure Node015
begin
    set_local_var(7, 1);
    set_global_var(GVAR_NCR_V15_DARION_DEAL, 1);
    if (local_var(10)) then begin
        Reply(154);
    end
    else begin
        Reply(162);
    end
    giq_option(1, NAME, 155, Node999, NEUTRAL_REACTION);
end

procedure Node016
begin
    float_msg(self_obj, mstr(156), FLOAT_MSG_NORMAL);
end

procedure Node017
begin
    float_msg(self_obj, mstr(157), FLOAT_MSG_RED);
end

procedure Node018
begin
    Reply(158);
    giq_option(1, NAME, 159, Node999, NEUTRAL_REACTION);
end

procedure combat_p_proc
begin
    if (combat_is_initialized) then begin
        critter_set_flee_state(self_obj, 1);
    end
end

procedure Node006a
begin
    q1 := 1;
    call Node006();
end

procedure Node007a
begin
    q2 := 1;
    call Node007();
end

procedure Node008a
begin
    q3 := 1;
    call Node008();
end

procedure Node009a
begin
    q4 := 1;
    call Node009();
end

procedure Node999Card
begin
    variable LVar0 := 0;
    LVar0 := obj_carrying_pid_obj(self_obj, 373);
    if (LVar0) then begin
        rm_obj_from_inven(self_obj, LVar0);
        add_obj_to_inven(dude_obj, LVar0);
        call Node018();
    end
    else begin
        call Node999();
    end
end

procedure giveCard
begin
    variable LVar0 := 0;
    LVar0 := obj_carrying_pid_obj(self_obj, 373);
    if (LVar0) then begin
        rm_obj_from_inven(self_obj, LVar0);
        add_obj_to_inven(dude_obj, LVar0);
    end
end
