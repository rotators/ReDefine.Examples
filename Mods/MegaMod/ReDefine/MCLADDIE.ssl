variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;

procedure start;
procedure critter_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure push_p_proc;
procedure Node000;
procedure Node001;
procedure Node002;
procedure Node010;
procedure Node011;
procedure Node012;
procedure Node013;
procedure Node014;
procedure Node015;
procedure Node016;
procedure Node017;
procedure Node018;
procedure Node999;
procedure Node998;
procedure Node996;
procedure Node995;
procedure Node981;
procedure Node982;
procedure Node983;
procedure Node984;
procedure Node985;
procedure Node986;
procedure Node987;
procedure Node988;
procedure Node989;

variable only_once;
variable laddie_answer;

import variable jonny_obj;

variable temp_tile;

procedure timed_event_p_proc;
procedure Node994;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if (obj_is_visible_flag(self_obj)) then begin
        if (obj_can_see_obj(self_obj, dude_obj) and (((local_var(1) bwand 2) != 0) or (global_var(GVAR_TOWN_REP_MODOC) <= -1000))) then begin
            if (global_var(GVAR_TOWN_REP_MODOC) <= -1000) then begin
                if (obj_in_party(self_obj)) then begin
                    debug_msg("abandon party: " + self_name);
                    party_remove(self_obj);
                end
            end
            if ((obj_pid(self_obj) == 16777380) or (obj_pid(self_obj) == 16777379)) then begin
                debug_msg("start: set_dude_was_married");
                if ((global_var(GVAR_PLAYER_MARRIED) != 0) and ((global_var(GVAR_PLAYER_WAS_MARRIED) != 0) == 0)) then begin
                    debug_msg("   GVAR_PLAYER_WAS_MARRIED before == " + global_var(GVAR_PLAYER_WAS_MARRIED));
                    set_global_var(GVAR_PLAYER_WAS_MARRIED, global_var(GVAR_PLAYER_MARRIED));
                    debug_msg("   GVAR_PLAYER_WAS_MARRIED after == " + global_var(GVAR_PLAYER_WAS_MARRIED));
                    set_global_var(GVAR_PLAYER_MARRIED, 0);
                end
                debug_msg("finished: set_dude_was_married");
            end
            if ((local_var(3) != -1) and (has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) == 0)) then begin
                critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, local_var(3));
                set_local_var(3, -1);
            end
            debug_msg("" + self_name + " has abandoned the party");
            if (critter_is_fleeing(self_obj)) then begin
                if (anim_busy(self_obj) == 0) then begin
                    if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                        if (anim_busy(self_obj) == 0) then begin
                            global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                                debug_msg("flee loop: rot == " + global_temp);
                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                global_temp := (global_temp + 1) % 6;
                            end
                        end
                    end
                end
            end
            else begin
                attack(dude_obj);
            end
        end
        else begin
            if (party_member_obj(16777381) != 0) then begin
                if (CUR_MAP_MODMAIN) then begin
                    if (global_var(GVAR_LADDIE_TILE) == 2) then begin
                        if (obj_in_party(self_obj)) then begin
                            debug_msg("abandon party: " + self_name);
                            party_remove(self_obj);
                        end
                        if ((obj_pid(self_obj) == 16777380) or (obj_pid(self_obj) == 16777379)) then begin
                            debug_msg("start: set_dude_was_married");
                            if ((global_var(GVAR_PLAYER_MARRIED) != 0) and ((global_var(GVAR_PLAYER_WAS_MARRIED) != 0) == 0)) then begin
                                debug_msg("   GVAR_PLAYER_WAS_MARRIED before == " + global_var(GVAR_PLAYER_WAS_MARRIED));
                                set_global_var(GVAR_PLAYER_WAS_MARRIED, global_var(GVAR_PLAYER_MARRIED));
                                debug_msg("   GVAR_PLAYER_WAS_MARRIED after == " + global_var(GVAR_PLAYER_WAS_MARRIED));
                                set_global_var(GVAR_PLAYER_MARRIED, 0);
                            end
                            debug_msg("finished: set_dude_was_married");
                        end
                        if ((local_var(3) != -1) and (has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) == 0)) then begin
                            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, local_var(3));
                            set_local_var(3, -1);
                        end
                        debug_msg("" + self_name + " has abandoned the party");
                    end
                    else begin
                        if ((((local_var(1) bwand 512) != 0) or (obj_is_carrying_obj_pid(dude_obj, 261) > 0)) == 0) then begin
                            if (anim_busy(self_obj) == 0) then begin
                                if ((tile_distance(17319, tile_num(self_obj)) <= 5) == 0) then begin
                                    temp_tile := 17319;
                                    while ((temp_tile != tile_num(self_obj)) and (tile_contains_pid_obj(temp_tile, elevation(self_obj), 33554499) != 0)) do begin
                                        temp_tile := tile_num_in_direction(temp_tile, rotation_to_tile(temp_tile, tile_num(self_obj)), 1);
                                    end
                                    if ((tile_num(self_obj) != temp_tile) and (temp_tile != 0)) then begin
                                        if ((dest_tile == temp_tile) and (step_tile < 0)) then begin
                                            step_tile := step_tile + 1;
                                        end
                                        else begin
                                            if (anim_busy(self_obj) == 0) then begin
                                                dest_tile := temp_tile;
                                                step_tile := temp_tile;
                                                animate_move_obj_to_tile(self_obj, step_tile, 1);
                                                while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), temp_tile) >= tile_distance(step_tile, temp_tile))) do begin
                                                    step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), (1 % tile_distance(step_tile, tile_num(self_obj))) + 1);
                                                    animate_move_obj_to_tile(self_obj, step_tile, 1);
                                                end
                                                if (anim_busy(self_obj) == 0) then begin
                                                    if (tile_get_next_critter(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), elevation(self_obj), 0) != 0) then begin
                                                        if (anim_busy(self_obj) == 0) then begin
                                                            global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                            global_temp := (global_temp + 1) % 6;
                                                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                                debug_msg("flee loop: rot == " + global_temp);
                                                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                                global_temp := (global_temp + 1) % 6;
                                                            end
                                                        end
                                                    end
                                                    else begin
                                                        step_tile := -10;
                                                    end
                                                end
                                            end
                                            else begin
                                                if (tile_distance(tile_num(self_obj), temp_tile) < tile_distance(dest_tile, temp_tile)) then begin
                                                    reg_anim_func(2, self_obj);
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                        else begin
                            if (((local_var(5) != 0) == 0) and ((global_var(GVAR_PARTY_NO_FOLLOW) != 0) == 0)) then begin
                                if (local_var(4) == 0) then begin
                                    set_local_var(4, 6);
                                end
                                if (tile_distance_objs(self_obj, dude_obj) > (3 * local_var(4) / 2)) then begin
                                    if (anim_busy(self_obj) == 0) then begin
                                        dest_tile := tile_num_in_direction(tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(4)), random(0, 5), random(0, 2));
                                        if (tile_distance_objs(self_obj, dude_obj) > (3 * local_var(4) / 2 * 2)) then begin
                                            animate_move_obj_to_tile(self_obj, dest_tile, 1);
                                        end
                                        else begin
                                            animate_move_obj_to_tile(self_obj, dest_tile, 0);
                                        end
                                    end
                                    else begin
                                        if (tile_distance(tile_num(self_obj), dude_tile) < tile_distance(tile_num(self_obj), dest_tile)) then begin
                                            reg_anim_func(2, self_obj);
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                if (CUR_MAP_GSTCAV2) then begin
                    if (jonny_obj != 0) then begin
                        set_local_var(1, local_var(1) bwor 524288);
                        if (tile_distance_objs(self_obj, jonny_obj) > 1) then begin
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(jonny_obj), obj_get_rot(jonny_obj), random(1, 3)), 1);
                        end
                        else begin
                            if (rotation_to_tile(tile_num(self_obj), tile_num(jonny_obj)) != obj_get_rot(self_obj)) then begin
                                if (anim_busy(self_obj) == 0) then begin
                                    anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(jonny_obj)));
                                end
                            end
                        end
                        if (obj_in_party(self_obj)) then begin
                            debug_msg("abandon party: " + self_name);
                            party_remove(self_obj);
                        end
                        if ((obj_pid(self_obj) == 16777380) or (obj_pid(self_obj) == 16777379)) then begin
                            debug_msg("start: set_dude_was_married");
                            if ((global_var(GVAR_PLAYER_MARRIED) != 0) and ((global_var(GVAR_PLAYER_WAS_MARRIED) != 0) == 0)) then begin
                                debug_msg("   GVAR_PLAYER_WAS_MARRIED before == " + global_var(GVAR_PLAYER_WAS_MARRIED));
                                set_global_var(GVAR_PLAYER_WAS_MARRIED, global_var(GVAR_PLAYER_MARRIED));
                                debug_msg("   GVAR_PLAYER_WAS_MARRIED after == " + global_var(GVAR_PLAYER_WAS_MARRIED));
                                set_global_var(GVAR_PLAYER_MARRIED, 0);
                            end
                            debug_msg("finished: set_dude_was_married");
                        end
                        if ((local_var(3) != -1) and (has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) == 0)) then begin
                            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, local_var(3));
                            set_local_var(3, -1);
                        end
                        debug_msg("" + self_name + " has abandoned the party");
                    end
                end
                else begin
                    if (((local_var(5) != 0) == 0) and ((global_var(GVAR_PARTY_NO_FOLLOW) != 0) == 0)) then begin
                        if (local_var(4) == 0) then begin
                            set_local_var(4, 6);
                        end
                        if (tile_distance_objs(self_obj, dude_obj) > (3 * local_var(4) / 2)) then begin
                            if (anim_busy(self_obj) == 0) then begin
                                dest_tile := tile_num_in_direction(tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(4)), random(0, 5), random(0, 2));
                                if (tile_distance_objs(self_obj, dude_obj) > (3 * local_var(4) / 2 * 2)) then begin
                                    animate_move_obj_to_tile(self_obj, dest_tile, 1);
                                end
                                else begin
                                    animate_move_obj_to_tile(self_obj, dest_tile, 0);
                                end
                            end
                            else begin
                                if (tile_distance(tile_num(self_obj), dude_tile) < tile_distance(tile_num(self_obj), dest_tile)) then begin
                                    reg_anim_func(2, self_obj);
                                end
                            end
                        end
                    end
                end
            end
        end
        if (CUR_MAP_MODMAIN) then begin
            if ((global_var(GVAR_LADDIE_TILE) == 2) and (anim_busy(self_obj) == 0)) then begin
                if (jonny_obj != 0) then begin
                    if (tile_distance_objs(self_obj, jonny_obj) > 1) then begin
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(jonny_obj), obj_get_rot(jonny_obj), random(1, 3)), 1);
                    end
                    else begin
                        if (rotation_to_tile(tile_num(self_obj), tile_num(jonny_obj)) != obj_get_rot(self_obj)) then begin
                            if (anim_busy(self_obj) == 0) then begin
                                anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(jonny_obj)));
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure talk_p_proc
begin
    script_overrides;
    if ((global_var(GVAR_LADDIE_TILE) == 2) or (((local_var(1) bwand 512) != 0) or (obj_is_carrying_obj_pid(dude_obj, 261) > 0))) then begin
        float_msg(self_obj, mstr(random(150, 152)), FLOAT_MSG_YELLOW);
    end
    else begin
        start_gdialog(105, self_obj, 4, -1, -1);
        gsay_start;
        if (party_member_obj(16777381) != 0) then begin
            if (tile_distance(17319, tile_num(self_obj)) <= 5) then begin
                call Node002();
            end
            else begin
                call Node001();
            end
        end
        else begin
            call Node000();
        end
        gsay_end;
        end_dialogue;
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (critter_kill_type(self_obj) == KILL_TYPE_children_kills) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(GVAR_TOWN_REP_MODOC, global_var(GVAR_TOWN_REP_MODOC) + -8);
                debug_msg("Added " + -8 + " to Town Rep");
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(GVAR_TOWN_REP_MODOC, global_var(GVAR_TOWN_REP_MODOC) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
    set_global_var(GVAR_HOSTILE_SLAVE_COUNT, -1);
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100 + ((global_var(GVAR_PATCH_INVAIDITATOR) == 0) == 0));
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(mstr(102 + (dude_is_stupid)));
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (obj_in_party(self_obj)) then begin
            debug_msg("abandon party: " + self_name);
            party_remove(self_obj);
        end
        if ((obj_pid(self_obj) == 16777380) or (obj_pid(self_obj) == 16777379)) then begin
            debug_msg("start: set_dude_was_married");
            if ((global_var(GVAR_PLAYER_MARRIED) != 0) and ((global_var(GVAR_PLAYER_WAS_MARRIED) != 0) == 0)) then begin
                debug_msg("   GVAR_PLAYER_WAS_MARRIED before == " + global_var(GVAR_PLAYER_WAS_MARRIED));
                set_global_var(GVAR_PLAYER_WAS_MARRIED, global_var(GVAR_PLAYER_MARRIED));
                debug_msg("   GVAR_PLAYER_WAS_MARRIED after == " + global_var(GVAR_PLAYER_WAS_MARRIED));
                set_global_var(GVAR_PLAYER_MARRIED, 0);
            end
            debug_msg("finished: set_dude_was_married");
        end
        if ((local_var(3) != -1) and (has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) == 0)) then begin
            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, local_var(3));
            set_local_var(3, -1);
        end
        debug_msg("" + self_name + " has abandoned the party");
    end
end

procedure map_enter_p_proc
begin
    if (is_loading_game == 0) then begin
        if ((CUR_MAP_GSTCAV2) or (global_var(GVAR_LADDIE_TILE) == 2)) then begin
            if (obj_is_visible_flag(self_obj) == 0) then begin
                set_obj_visibility(self_obj, 0);
            end
        end
        else begin
            if ((local_var(1) bwand 524288) != 0) then begin
                if (obj_is_visible_flag(self_obj) == 1) then begin
                    set_obj_visibility(self_obj, 1);
                end
            end
            else begin
                if (CUR_MAP_MODMAIN) then begin
                    if (map_first_run) then begin
                        set_local_var(0, tile_num(self_obj));
                        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 28);
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(dude_obj, 261) > 0) then begin
                            set_local_var(1, local_var(1) bwor 512);
                        end
                    end
                end
            end
        end
    end
end

procedure map_update_p_proc
begin
    if (global_var(GVAR_HOSTILE_SLAVE_COUNT) == 1) then begin
        set_global_var(GVAR_HOSTILE_SLAVE_COUNT, 2);
        if ((critter_state(self_obj) bwand 1) == 0) then begin
            if (local_var(4) == 0) then begin
                set_local_var(4, 6);
            end
            set_local_var(5, 0);
            if (has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) != 0) then begin
                set_local_var(3, has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM));
            end
            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 0);
            party_add(self_obj);
        end
        debug_msg("join party: " + self_name);
    end
end

procedure push_p_proc
begin
end

procedure Node000
begin
    Reply(152);
    giq_option(10, NAME, 153, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 154, Node996, NEUTRAL_REACTION);
    giq_option(-3, NAME, 150, Node012, NEUTRAL_REACTION);
end

procedure Node001
begin
    Reply(152);
    giq_option(10, NAME, 155, Node013, NEUTRAL_REACTION);
    giq_option(4, NAME, 156, Node994, NEUTRAL_REACTION);
    giq_option(4, NAME, 157, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 150, Node012, NEUTRAL_REACTION);
end

procedure Node002
begin
    Reply(152);
    laddie_answer := 151;
    giq_option(10, NAME, 158, Node013, NEUTRAL_REACTION);
    giq_option(4, NAME, 159, Node014, NEUTRAL_REACTION);
    giq_option(-3, NAME, 150, Node012, NEUTRAL_REACTION);
end

procedure Node010
begin
    Reply(160);
    giq_option(4, NAME, 161, Node999, NEUTRAL_REACTION);
end

procedure Node011
begin
    Reply(162);
    giq_option(4, NAME, 163, Node999, NEUTRAL_REACTION);
end

procedure Node012
begin
    Reply(164);
    giq_option(-3, NAME, 165, Node999, NEUTRAL_REACTION);
end

procedure Node013
begin
    Reply(150);
    giq_option(1, NAME, 190 + ((obj_is_carrying_obj_pid(dude_obj, 127) > 0) != 0), Node999, NEUTRAL_REACTION);
end

procedure Node014
begin
    Reply(laddie_answer);
    laddie_answer := 150;
    giq_option(4, NAME, 167, Node995, NEUTRAL_REACTION);
    giq_option(4, NAME, 168, Node017, NEUTRAL_REACTION);
    giq_option(4, NAME, 169, Node018, NEUTRAL_REACTION);
    giq_option(4, NAME, 170, Node999, NEUTRAL_REACTION);
end

procedure Node015
begin
    Reply(laddie_answer);
    laddie_answer := 150;
    if ((((local_var(1) bwand 1024) != 0) == 0) and global_var(GVAR_MODOC_BODIES)) then begin
        giq_option(4, NAME, 171, Node981, NEUTRAL_REACTION);
    end
    if ((((local_var(1) bwand 2048) != 0) == 0) and global_var(GVAR_MODOC_ROSE_FLAG)) then begin
        giq_option(4, NAME, 172, Node982, NEUTRAL_REACTION);
    end
    if ((((local_var(1) bwand 4096) != 0) == 0) and global_var(GVAR_MODOC_TANNERY_FLAG)) then begin
        giq_option(4, NAME, 173, Node983, NEUTRAL_REACTION);
    end
    if (((local_var(1) bwand 8192) != 0) == 0) then begin
        giq_option(4, NAME, 174, Node984, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 158, Node016, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 175, Node014, NEUTRAL_REACTION);
    if ((((local_var(1) bwand 16384) != 0) == 0) and global_var(GVAR_MODOC_SLAUGHTER_FLAG)) then begin
        giq_option(4, NAME, 177, Node985, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 157, Node999, NEUTRAL_REACTION);
end

procedure Node016
begin
    Reply(150);
    giq_option(4, NAME, 190 + (obj_is_carrying_obj_pid(dude_obj, 127) > 0), Node999, NEUTRAL_REACTION);
end

procedure Node017
begin
    Reply(151);
    laddie_answer := 151;
    if (((local_var(1) bwand 32768) != 0) == 0) then begin
        giq_option(4, NAME, 180, Node986, NEUTRAL_REACTION);
    end
    if (((local_var(1) bwand 65536) != 0) == 0) then begin
        giq_option(4, NAME, 181, Node987, NEUTRAL_REACTION);
    end
    if (((local_var(1) bwand 131072) != 0) == 0) then begin
        giq_option(4, NAME, 182, Node988, NEUTRAL_REACTION);
    end
    if (((local_var(1) bwand 262144) != 0) == 0) then begin
        giq_option(4, NAME, 183, Node989, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 175, Node014, NEUTRAL_REACTION);
    giq_option(4, NAME, 157, Node999, NEUTRAL_REACTION);
end

procedure Node018
begin
    Reply(186);
    laddie_answer := 151;
    giq_option(4, NAME, 187, Node014, NEUTRAL_REACTION);
    giq_option(4, NAME, 157, Node999, NEUTRAL_REACTION);
end

procedure Node999
begin
    if (local_var(5) != 0) then begin
        set_local_var(5, 0);
        if ((critter_state(self_obj) bwand 1) == 0) then begin
            if (local_var(4) == 0) then begin
                set_local_var(4, 6);
            end
            set_local_var(5, 0);
            if (has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) != 0) then begin
                set_local_var(3, has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM));
            end
            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 0);
            party_add(self_obj);
        end
        debug_msg("join party: " + self_name);
    end
end

procedure Node998
begin
    set_local_var(1, local_var(1) bwor 2);
end

procedure Node996
begin
    if (global_var(GVAR_TOWN_REP_MODOC) < 0) then begin
        call Node010();
    end
    else begin
        call Node011();
    end
end

procedure Node995
begin
    laddie_answer := 151;
    call Node015();
end

procedure Node981
begin
    set_local_var(1, local_var(1) bwor 1024);
    call Node015();
end

procedure Node982
begin
    set_local_var(1, local_var(1) bwor 2048);
    call Node015();
end

procedure Node983
begin
    set_local_var(1, local_var(1) bwor 4096);
    call Node015();
end

procedure Node984
begin
    laddie_answer := 151;
    set_local_var(1, local_var(1) bwor 8192);
    call Node015();
end

procedure Node985
begin
    set_local_var(1, local_var(1) bwor 16384);
    call Node015();
end

procedure Node986
begin
    set_local_var(1, local_var(1) bwor 32768);
    call Node015();
end

procedure Node987
begin
    set_local_var(1, local_var(1) bwor 65536);
    call Node015();
end

procedure Node988
begin
    set_local_var(1, local_var(1) bwor 131072);
    call Node015();
end

procedure Node989
begin
    set_local_var(1, local_var(1) bwor 262144);
    call Node015();
end

procedure timed_event_p_proc
begin
    if (fixed_param == 999) then begin
        if (obj_in_party(self_obj)) then begin
            debug_msg("abandon party: " + self_name);
            party_remove(self_obj);
        end
        if ((obj_pid(self_obj) == 16777380) or (obj_pid(self_obj) == 16777379)) then begin
            debug_msg("start: set_dude_was_married");
            if ((global_var(GVAR_PLAYER_MARRIED) != 0) and ((global_var(GVAR_PLAYER_WAS_MARRIED) != 0) == 0)) then begin
                debug_msg("   GVAR_PLAYER_WAS_MARRIED before == " + global_var(GVAR_PLAYER_WAS_MARRIED));
                set_global_var(GVAR_PLAYER_WAS_MARRIED, global_var(GVAR_PLAYER_MARRIED));
                debug_msg("   GVAR_PLAYER_WAS_MARRIED after == " + global_var(GVAR_PLAYER_WAS_MARRIED));
                set_global_var(GVAR_PLAYER_MARRIED, 0);
            end
            debug_msg("finished: set_dude_was_married");
        end
        if ((local_var(3) != -1) and (has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) == 0)) then begin
            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, local_var(3));
            set_local_var(3, -1);
        end
        debug_msg("" + self_name + " has abandoned the party");
    end
    else begin
    end
end

procedure Node994
begin
    set_local_var(5, game_time);
    party_remove(self_obj);
end
