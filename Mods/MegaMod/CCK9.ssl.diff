diff --git a/Mods/MegaMod/Original/CCK9.ssl b/Mods/MegaMod/ReDefine/CCK9.ssl
index a53f4b8..0e64e59 100644
--- a/Mods/MegaMod/Original/CCK9.ssl
+++ b/Mods/MegaMod/ReDefine/CCK9.ssl
@@ -76,39 +76,39 @@ end
 procedure critter_p_proc
 begin
     if (local_var(8) == 0) then begin
-        if (global_var(0) < -100) then begin
+        if (global_var(GVAR_PLAYER_REPUTATION) < -100) then begin
             set_local_var(8, 1);
             call Node080();
         end
         else begin
-            if (global_var(1) >= 2) then begin
+            if (global_var(GVAR_CHILDKILLER_REPUTATION) >= 2) then begin
                 set_local_var(8, 1);
                 call Node090();
             end
             else begin
                 set_local_var(8, 1);
-                float_msg(self_obj, message_str(1057, 154), 8);
+                float_msg(self_obj, mstr(154), FLOAT_MSG_YELLOW);
                 party_add(self_obj);
                 add_timer_event(self_obj, game_ticks(1), 1);
-                critter_add_trait(self_obj, 1, 6, 0);
+                critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 0);
             end
         end
     end
     else begin
         if ((local_var(0) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
             set_local_var(0, 1);
-            attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
+            attack(dude_obj);
         end
         else begin
             if (party_member_obj(16777687) != 0) then begin
                 if ((party_member_obj(16777687) != 0) and ((local_var(5) != 0) == 0)) then begin
-                    if ((local_var(5) == 0) and (global_var(398) == 0)) then begin
+                    if ((local_var(5) == 0) and (global_var(GVAR_PARTY_NO_FOLLOW) == 0)) then begin
                         if (local_var(6) == 0) then begin
                             set_local_var(6, 6);
                         end
                         if (tile_distance_objs(self_obj, dude_obj) > (3 * local_var(6) / 2)) then begin
                             if (anim_busy(self_obj) == 0) then begin
-                                dest_tile := tile_num_in_direction(tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(6)), random(0, 5), random(0, 2));
+                                dest_tile := tile_num_in_direction(tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(6)), random(0, 5), random(0, 2));
                                 if (tile_distance_objs(self_obj, dude_obj) > (3 * local_var(6) / 2 * 2)) then begin
                                     animate_move_obj_to_tile(self_obj, dest_tile, 1);
                                 end
@@ -117,7 +117,7 @@ begin
                                 end
                             end
                             else begin
-                                if (tile_distance(tile_num(self_obj), tile_num(dude_obj)) < tile_distance(tile_num(self_obj), dest_tile)) then begin
+                                if (tile_distance(tile_num(self_obj), dude_tile) < tile_distance(tile_num(self_obj), dest_tile)) then begin
                                     reg_anim_func(2, self_obj);
                                 end
                             end
@@ -150,11 +150,11 @@ begin
         end
     end
     else begin
-        if ((local_var(9) > 0) and (has_trait(0, dude_obj, 39) == 0)) then begin
-            float_msg(self_obj, message_str(1057, 2700), 8);
+        if ((local_var(9) > 0) and (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality) == 0)) then begin
+            float_msg(self_obj, mstr(2700), FLOAT_MSG_YELLOW);
         end
         else begin
-            if ((party_member_obj(16777687) != 0) or ((local_var(5) != 0) or (has_trait(0, dude_obj, 39) == 1))) then begin
+            if ((party_member_obj(16777687) != 0) or ((local_var(5) != 0) or (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality) == 1))) then begin
                 start_gdialog(1057, self_obj, 4, -1, -1);
                 gsay_start;
                 call Node1000();
@@ -168,62 +168,62 @@ end
 procedure destroy_p_proc
 begin
     if (source_obj == dude_obj) then begin
-        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
-            set_global_var(2, 1);
-            set_global_var(3, 0);
+        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
+            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
+            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
         end
-        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
-            set_global_var(3, 1);
-            set_global_var(2, 0);
+        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
+            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
+            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
         end
-        set_global_var(0, global_var(0) + 0);
+        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 0);
         debug_msg("Player gains " + 0 + " Karma Points.");
-        set_global_var(37, 0);
-        set_global_var(38, 0);
-        set_global_var(39, 0);
-        set_global_var(40, 0);
-        set_global_var(41, 0);
-        set_global_var(42, 0);
-        set_global_var(43, 0);
-        set_global_var(44, 0);
-        set_global_var(45, 0);
-        tmp_gen_rep := global_var(0);
-        if (has_trait(0, dude_obj, 95)) then begin
-            tmp_gen_rep := global_var(0) * 2;
+        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
+        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
+        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
+        set_global_var(GVAR_KARMA_DEFENDER, 0);
+        set_global_var(GVAR_KARMA_WANDERER, 0);
+        set_global_var(GVAR_KARMA_BETRAYER, 0);
+        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
+        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
+        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
+        tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION);
+        if (has_trait(TRAIT_PERK, dude_obj, PERK_karma_beacon_perk)) then begin
+            tmp_gen_rep := global_var(GVAR_PLAYER_REPUTATION) * 2;
         end
         if (tmp_gen_rep >= 1000) then begin
-            set_global_var(37, 1);
+            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
         end
         else begin
             if (tmp_gen_rep >= 750) then begin
-                set_global_var(38, 1);
+                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
             end
             else begin
                 if (tmp_gen_rep >= 500) then begin
-                    set_global_var(39, 1);
+                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                 end
                 else begin
                     if (tmp_gen_rep >= 250) then begin
-                        set_global_var(40, 1);
+                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                     end
                     else begin
                         if (tmp_gen_rep > -250) then begin
-                            set_global_var(41, 1);
+                            set_global_var(GVAR_KARMA_WANDERER, 1);
                         end
                         else begin
                             if (tmp_gen_rep > -500) then begin
-                                set_global_var(42, 1);
+                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                             end
                             else begin
                                 if (tmp_gen_rep > -750) then begin
-                                    set_global_var(43, 1);
+                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                 end
                                 else begin
                                     if (tmp_gen_rep > -1000) then begin
-                                        set_global_var(44, 1);
+                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                     end
                                     else begin
-                                        set_global_var(45, 1);
+                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                     end
                                 end
                             end
@@ -240,10 +240,10 @@ begin
     script_overrides;
     if (local_var(1) == 0) then begin
         set_local_var(1, 1);
-        display_msg(message_str(1057, 100));
+        display_mstr(100);
     end
     else begin
-        display_msg(message_str(1057, 101));
+        display_mstr(101);
     end
 end
 
@@ -254,25 +254,25 @@ end
 procedure description_p_proc
 begin
     script_overrides;
-    display_msg(message_str(1057, 102));
+    display_mstr(102);
 end
 
 procedure use_skill_on_p_proc
 begin
     if (action_being_used == 10) then begin
         script_overrides;
-        display_msg(message_str(1057, 3001));
+        display_mstr(3001);
     end
     if (action_being_used == 13) then begin
-        if (get_critter_stat(self_obj, 35) == get_critter_stat(self_obj, 7)) then begin
+        if (get_critter_stat(self_obj, STAT_current_hp) == get_critter_stat(self_obj, STAT_max_hp)) then begin
             script_overrides;
-            display_msg(message_str(1057, 3003));
+            display_mstr(3003);
         end
         else begin
             script_overrides;
-            critter_heal(self_obj, floor(has_skill(dude_obj, 13) / 4));
-            display_msg(message_str(1057, 3004));
-            float_msg(self_obj, message_str(1057, 3005), 8);
+            critter_heal(self_obj, floor(dude_skill(SKILL_REPAIR) / 4));
+            display_mstr(3004);
+            float_msg(self_obj, mstr(3005), FLOAT_MSG_YELLOW);
         end
     end
 end
@@ -281,27 +281,27 @@ procedure damage_p_proc
 begin
     if (source_obj == dude_obj) then begin
         if (party_member_obj(obj_pid(self_obj)) != 0) then begin
-            debug_msg("abandon party: " + obj_name(self_obj));
+            debug_msg("abandon party: " + self_name);
             party_remove(self_obj);
         end
-        if ((local_var(7) != -1) and (has_trait(1, self_obj, 6) == 0)) then begin
-            critter_add_trait(self_obj, 1, 6, local_var(7));
+        if ((local_var(7) != -1) and (has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) == 0)) then begin
+            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, local_var(7));
             set_local_var(7, -1);
         end
-        debug_msg("" + obj_name(self_obj) + " has abandoned the party");
+        debug_msg("" + self_name + " has abandoned the party");
         set_local_var(0, 2);
     end
 end
 
 procedure map_enter_p_proc
 begin
-    if ((cur_map_index == 19) or (cur_map_index == 37) or (cur_map_index == 38)) then begin
-        if ((elevation(self_obj) != elevation(dude_obj)) and (local_var(5) != 0)) then begin
-            move_to(self_obj, tile_num(self_obj), elevation(dude_obj));
+    if ((CUR_MAP_MODINN) or (CUR_MAP_V15ENT) or (CUR_MAP_V15ENTB)) then begin
+        if ((elevation(self_obj) != dude_elevation) and (local_var(5) != 0)) then begin
+            move_to(self_obj, tile_num(self_obj), dude_elevation);
         end
     end
     if (party_member_obj(16777687) == 0) then begin
-        critter_add_trait(self_obj, 1, 6, 35);
+        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 35);
     end
 end
 
@@ -311,124 +311,124 @@ end
 
 procedure Node001
 begin
-    gsay_reply(1057, 103);
-    giq_option(-3, 1057, 104, Node002, 50);
-    giq_option(-3, 1057, 105, Node008, 50);
-    giq_option(4, 1057, 106, Node010, 50);
-    giq_option(4, 1057, 107, Node002, 50);
+    Reply(103);
+    giq_option(-3, NAME, 104, Node002, NEUTRAL_REACTION);
+    giq_option(-3, NAME, 105, Node008, NEUTRAL_REACTION);
+    giq_option(4, NAME, 106, Node010, NEUTRAL_REACTION);
+    giq_option(4, NAME, 107, Node002, NEUTRAL_REACTION);
 end
 
 procedure Node002
 begin
-    if (get_critter_stat(dude_obj, 4) < 4) then begin
-        gsay_reply(1057, 108);
+    if (dude_iq < 4) then begin
+        Reply(108);
     end
     else begin
-        gsay_reply(1057, 109);
+        Reply(109);
     end
-    giq_option(-3, 1057, 110, Node003, 50);
-    giq_option(1, 1057, 111, Node005, 50);
-    giq_option(1, 1057, 112, Node010, 50);
+    giq_option(-3, NAME, 110, Node003, NEUTRAL_REACTION);
+    giq_option(1, NAME, 111, Node005, NEUTRAL_REACTION);
+    giq_option(1, NAME, 112, Node010, NEUTRAL_REACTION);
 end
 
 procedure Node003
 begin
-    gsay_reply(1057, 113);
-    giq_option(-3, 1057, 114, Node004, 50);
-    giq_option(-3, 1057, 115, Node005, 50);
+    Reply(113);
+    giq_option(-3, NAME, 114, Node004, NEUTRAL_REACTION);
+    giq_option(-3, NAME, 115, Node005, NEUTRAL_REACTION);
 end
 
 procedure Node004
 begin
-    gsay_reply(1057, 116);
-    giq_option(-3, 1057, 117, Node005, 50);
+    Reply(116);
+    giq_option(-3, NAME, 117, Node005, NEUTRAL_REACTION);
 end
 
 procedure Node005
 begin
-    gsay_reply(1057, 118);
-    giq_option(-3, 1057, 119, Node006, 50);
-    giq_option(-3, 1057, 120, Node008, 50);
-    giq_option(-3, 1057, 121, Node010, 50);
-    giq_option(1, 1057, 122, Node008, 50);
-    giq_option(1, 1057, 123, Node010, 50);
+    Reply(118);
+    giq_option(-3, NAME, 119, Node006, NEUTRAL_REACTION);
+    giq_option(-3, NAME, 120, Node008, NEUTRAL_REACTION);
+    giq_option(-3, NAME, 121, Node010, NEUTRAL_REACTION);
+    giq_option(1, NAME, 122, Node008, NEUTRAL_REACTION);
+    giq_option(1, NAME, 123, Node010, NEUTRAL_REACTION);
 end
 
 procedure Node006
 begin
-    gsay_reply(1057, 124);
-    giq_option(-3, 1057, 125, Node007, 50);
+    Reply(124);
+    giq_option(-3, NAME, 125, Node007, NEUTRAL_REACTION);
 end
 
 procedure Node007
 begin
-    gsay_reply(1057, 126);
-    giq_option(-3, 1057, 127, Node008, 50);
-    giq_option(-3, 1057, 128, Node010, 50);
+    Reply(126);
+    giq_option(-3, NAME, 127, Node008, NEUTRAL_REACTION);
+    giq_option(-3, NAME, 128, Node010, NEUTRAL_REACTION);
 end
 
 procedure Node008
 begin
-    gsay_reply(1057, 129);
-    giq_option(-3, 1057, 130, Node009, 50);
-    giq_option(4, 1057, 131, Node009, 50);
+    Reply(129);
+    giq_option(-3, NAME, 130, Node009, NEUTRAL_REACTION);
+    giq_option(4, NAME, 131, Node009, NEUTRAL_REACTION);
 end
 
 procedure Node009
 begin
-    if (global_var(513) == 0) then begin
-        set_global_var(513, 1);
+    if (global_var(GVAR_NAVARRO_K9) == 0) then begin
+        set_global_var(GVAR_NAVARRO_K9, 1);
     end
-    gsay_reply(1057, 132);
-    giq_option(-3, 1057, 133, Node999, 50);
-    giq_option(4, 1057, 134, Node999, 50);
+    Reply(132);
+    giq_option(-3, NAME, 133, Node999, NEUTRAL_REACTION);
+    giq_option(4, NAME, 134, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node010
 begin
-    gsay_reply(1057, 135);
-    giq_option(-3, 1057, 136, Node999, 50);
-    giq_option(4, 1057, 137, Node999, 50);
+    Reply(135);
+    giq_option(-3, NAME, 136, Node999, NEUTRAL_REACTION);
+    giq_option(4, NAME, 137, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node011
 begin
-    gsay_reply(1057, 138);
-    giq_option(-3, 1057, 139, Node008, 50);
-    giq_option(-3, 1057, 140, Node010, 50);
-    giq_option(4, 1057, 141, Node008, 50);
-    giq_option(4, 1057, 142, Node010, 50);
+    Reply(138);
+    giq_option(-3, NAME, 139, Node008, NEUTRAL_REACTION);
+    giq_option(-3, NAME, 140, Node010, NEUTRAL_REACTION);
+    giq_option(4, NAME, 141, Node008, NEUTRAL_REACTION);
+    giq_option(4, NAME, 142, Node010, NEUTRAL_REACTION);
 end
 
 procedure Node012
 begin
-    gsay_reply(1057, 143);
-    giq_option(1, 1057, 144, Node999, 50);
+    Reply(143);
+    giq_option(1, NAME, 144, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node013
 begin
-    gsay_reply(1057, 145);
+    Reply(145);
     if (obj_is_carrying_obj_pid(dude_obj, 488)) then begin
-        giq_option(-3, 1057, 147, Node015, 50);
-        giq_option(4, 1057, 149, Node015, 50);
+        giq_option(-3, NAME, 147, Node015, NEUTRAL_REACTION);
+        giq_option(4, NAME, 149, Node015, NEUTRAL_REACTION);
     end
     else begin
-        giq_option(-3, 1057, 146, Node014, 50);
-        giq_option(4, 1057, 148, Node014, 50);
+        giq_option(-3, NAME, 146, Node014, NEUTRAL_REACTION);
+        giq_option(4, NAME, 148, Node014, NEUTRAL_REACTION);
     end
 end
 
 procedure Node014
 begin
-    gsay_reply(1057, 150);
-    giq_option(4, 1057, 151, Node999, 50);
+    Reply(150);
+    giq_option(4, NAME, 151, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node015
 begin
-    gsay_reply(1057, 152);
-    giq_option(4, 1057, 153, Node016, 50);
+    Reply(152);
+    giq_option(4, NAME, 153, Node016, NEUTRAL_REACTION);
 end
 
 procedure Node016
@@ -445,75 +445,75 @@ begin
         end
     end
     if (is_success(repair_check)) then begin
-        gsay_reply(1057, 154);
-        giq_option(-3, 1057, 156, Node800, 50);
-        giq_option(4, 1057, 158, Node800, 50);
+        Reply(154);
+        giq_option(-3, NAME, 156, Node800, NEUTRAL_REACTION);
+        giq_option(4, NAME, 158, Node800, NEUTRAL_REACTION);
     end
     else begin
-        gsay_reply(1057, 155);
-        giq_option(-3, 1057, 157, Node016, 50);
-        giq_option(-3, 1057, 300, Node999, 50);
-        giq_option(4, 1057, 159, Node016, 50);
-        giq_option(4, 1057, 301, Node999, 50);
+        Reply(155);
+        giq_option(-3, NAME, 157, Node016, NEUTRAL_REACTION);
+        giq_option(-3, NAME, 300, Node999, NEUTRAL_REACTION);
+        giq_option(4, NAME, 159, Node016, NEUTRAL_REACTION);
+        giq_option(4, NAME, 301, Node999, NEUTRAL_REACTION);
     end
 end
 
 procedure Node017
 begin
-    if (has_trait(1, self_obj, 666)) then begin
-        float_msg(self_obj, message_str(1057, random(160, 162)), 8);
+    if (obj_is_visible_flag(self_obj)) then begin
+        float_msg(self_obj, mstr(random(160, 162)), FLOAT_MSG_YELLOW);
     end
 end
 
 procedure Node018
 begin
-    if (has_trait(1, self_obj, 666)) then begin
-        float_msg(self_obj, message_str(1057, random(163, 165)), 8);
+    if (obj_is_visible_flag(self_obj)) then begin
+        float_msg(self_obj, mstr(random(163, 165)), FLOAT_MSG_YELLOW);
     end
 end
 
 procedure Node080
 begin
     set_local_var(9, 1);
-    if (has_trait(1, self_obj, 666)) then begin
-        float_msg(self_obj, message_str(1057, 2700), 8);
+    if (obj_is_visible_flag(self_obj)) then begin
+        float_msg(self_obj, mstr(2700), FLOAT_MSG_YELLOW);
     end
     if (party_member_obj(obj_pid(self_obj)) != 0) then begin
-        debug_msg("abandon party: " + obj_name(self_obj));
+        debug_msg("abandon party: " + self_name);
         party_remove(self_obj);
     end
-    if ((local_var(7) != -1) and (has_trait(1, self_obj, 6) == 0)) then begin
-        critter_add_trait(self_obj, 1, 6, local_var(7));
+    if ((local_var(7) != -1) and (has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) == 0)) then begin
+        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, local_var(7));
         set_local_var(7, -1);
     end
-    debug_msg("" + obj_name(self_obj) + " has abandoned the party");
+    debug_msg("" + self_name + " has abandoned the party");
 end
 
 procedure Node090
 begin
     set_local_var(9, 1);
-    if (has_trait(1, self_obj, 666)) then begin
-        float_msg(self_obj, message_str(1057, 2700), 8);
+    if (obj_is_visible_flag(self_obj)) then begin
+        float_msg(self_obj, mstr(2700), FLOAT_MSG_YELLOW);
     end
     if (party_member_obj(obj_pid(self_obj)) != 0) then begin
-        debug_msg("abandon party: " + obj_name(self_obj));
+        debug_msg("abandon party: " + self_name);
         party_remove(self_obj);
     end
-    if ((local_var(7) != -1) and (has_trait(1, self_obj, 6) == 0)) then begin
-        critter_add_trait(self_obj, 1, 6, local_var(7));
+    if ((local_var(7) != -1) and (has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) == 0)) then begin
+        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, local_var(7));
         set_local_var(7, -1);
     end
-    debug_msg("" + obj_name(self_obj) + " has abandoned the party");
+    debug_msg("" + self_name + " has abandoned the party");
 end
 
 procedure Node800
 begin
     if (local_var(8) == 0) then begin
         set_local_var(8, 1);
-        display_msg(message_str(1057, 800));
+        display_mstr(800);
         give_exp_points(3500);
-        display_msg(message_str(14, 100) + 3500 + message_str(14, 101));
-        set_global_var(513, 3);
+        display_msg(g_mstr(100) + 3500 + g_mstr(101));
+        set_global_var(GVAR_NAVARRO_K9, 3);
     end
 end
 
@@ -528,233 +528,233 @@ end
 
 procedure Node1000
 begin
-    gsay_reply(1057, 1000);
+    Reply(1000);
     if (local_var(5) == 0) then begin
         if (local_var(6) == 0) then begin
             set_local_var(6, 6);
         end
-        if (get_critter_stat(self_obj, 35) < get_critter_stat(self_obj, 7)) then begin
-            giq_option(4, 1057, message_str(14, 10001), Node1001, 50);
+        if (get_critter_stat(self_obj, STAT_current_hp) < get_critter_stat(self_obj, STAT_max_hp)) then begin
+            giq_option(4, NAME, g_mstr(10001), Node1001, NEUTRAL_REACTION);
         end
-        giq_option(4, 1057, message_str(14, 10008), Node1007, 50);
-        giq_option(4, 1057, message_str(14, 10009), Node1008, 50);
-        giq_option(4, 1057, message_str(14, 10002), Node1002, 50);
-        giq_option(4, 1057, 3015, Node1011, 50);
+        giq_option(4, NAME, g_mstr(10008), Node1007, NEUTRAL_REACTION);
+        giq_option(4, NAME, g_mstr(10009), Node1008, NEUTRAL_REACTION);
+        giq_option(4, NAME, g_mstr(10002), Node1002, NEUTRAL_REACTION);
+        giq_option(4, NAME, 3015, Node1011, NEUTRAL_REACTION);
     end
     else begin
-        giq_option(4, 1057, message_str(14, 10100), Node1100, 50);
+        giq_option(4, NAME, g_mstr(10100), Node1100, NEUTRAL_REACTION);
     end
-    giq_option(4, 1057, message_str(14, 10007), Node999, 50);
-    giq_option(-3, 1057, message_str(14, random(300, 303)), Node999, 50);
+    giq_option(4, NAME, g_mstr(10007), Node999, NEUTRAL_REACTION);
+    giq_option(-3, NAME, g_mstr(random(300, 303)), Node999, NEUTRAL_REACTION);
 end
 
 procedure Node1001
 begin
     critter_heal(self_obj, random(1, 5));
-    if (get_critter_stat(self_obj, 35) == get_critter_stat(self_obj, 7)) then begin
-        gsay_reply(1057, 1100);
+    if (get_critter_stat(self_obj, STAT_current_hp) == get_critter_stat(self_obj, STAT_max_hp)) then begin
+        Reply(1100);
     end
     else begin
-        if ((get_critter_stat(self_obj, 35) * 100 / get_critter_stat(self_obj, 7)) >= 90) then begin
-            gsay_reply(1057, 1200);
+        if ((get_critter_stat(self_obj, STAT_current_hp) * 100 / get_critter_stat(self_obj, STAT_max_hp)) >= 90) then begin
+            Reply(1200);
         end
         else begin
-            if ((get_critter_stat(self_obj, 35) * 100 / get_critter_stat(self_obj, 7)) >= 70) then begin
-                gsay_reply(1057, 1300);
+            if ((get_critter_stat(self_obj, STAT_current_hp) * 100 / get_critter_stat(self_obj, STAT_max_hp)) >= 70) then begin
+                Reply(1300);
             end
             else begin
-                gsay_reply(1057, 1400);
+                Reply(1400);
             end
         end
     end
-    if (get_critter_stat(self_obj, 35) < get_critter_stat(self_obj, 7)) then begin
-        giq_option(4, 1057, message_str(14, 10001), Node1001, 50);
+    if (get_critter_stat(self_obj, STAT_current_hp) < get_critter_stat(self_obj, STAT_max_hp)) then begin
+        giq_option(4, NAME, g_mstr(10001), Node1001, NEUTRAL_REACTION);
     end
-    giq_option(4, 1057, message_str(14, 10008), Node1007, 50);
-    giq_option(4, 1057, message_str(14, 10009), Node1008, 50);
-    giq_option(4, 1057, message_str(14, 10002), Node1002, 50);
-    giq_option(4, 1057, 3015, Node1011, 50);
-    giq_option(4, 1057, message_str(14, 10007), Node999, 50);
-    giq_option(-3, 1057, message_str(14, random(300, 303)), Node999, 50);
+    giq_option(4, NAME, g_mstr(10008), Node1007, NEUTRAL_REACTION);
+    giq_option(4, NAME, g_mstr(10009), Node1008, NEUTRAL_REACTION);
+    giq_option(4, NAME, g_mstr(10002), Node1002, NEUTRAL_REACTION);
+    giq_option(4, NAME, 3015, Node1011, NEUTRAL_REACTION);
+    giq_option(4, NAME, g_mstr(10007), Node999, NEUTRAL_REACTION);
+    giq_option(-3, NAME, g_mstr(random(300, 303)), Node999, NEUTRAL_REACTION);
 end
 
 procedure Node1002
 begin
     set_local_var(5, game_time);
     party_remove(self_obj);
-    gsay_reply(1057, 1500);
-    giq_option(4, 1057, 3010, Node999, 50);
+    Reply(1500);
+    giq_option(4, NAME, 3010, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node1003
 begin
-    gsay_reply(1057, 1600);
-    if (get_critter_stat(self_obj, 35) < get_critter_stat(self_obj, 7)) then begin
-        giq_option(4, 1057, message_str(14, 10001), Node1001, 50);
+    Reply(1600);
+    if (get_critter_stat(self_obj, STAT_current_hp) < get_critter_stat(self_obj, STAT_max_hp)) then begin
+        giq_option(4, NAME, g_mstr(10001), Node1001, NEUTRAL_REACTION);
     end
-    giq_option(4, 1057, message_str(14, 10008), Node1007, 50);
-    giq_option(4, 1057, message_str(14, 10009), Node1008, 50);
-    giq_option(4, 1057, message_str(14, 10002), Node1002, 50);
-    giq_option(4, 1057, 3015, Node1011, 50);
-    giq_option(4, 1057, message_str(14, 10007), Node999, 50);
-    giq_option(-3, 1057, message_str(14, random(300, 303)), Node999, 50);
+    giq_option(4, NAME, g_mstr(10008), Node1007, NEUTRAL_REACTION);
+    giq_option(4, NAME, g_mstr(10009), Node1008, NEUTRAL_REACTION);
+    giq_option(4, NAME, g_mstr(10002), Node1002, NEUTRAL_REACTION);
+    giq_option(4, NAME, 3015, Node1011, NEUTRAL_REACTION);
+    giq_option(4, NAME, g_mstr(10007), Node999, NEUTRAL_REACTION);
+    giq_option(-3, NAME, g_mstr(random(300, 303)), Node999, NEUTRAL_REACTION);
 end
 
 procedure Node1004
 begin
     set_local_var(6, 3);
-    gsay_reply(1057, 1700);
-    if (get_critter_stat(self_obj, 35) < get_critter_stat(self_obj, 7)) then begin
-        giq_option(4, 1057, message_str(14, 10001), Node1001, 50);
+    Reply(1700);
+    if (get_critter_stat(self_obj, STAT_current_hp) < get_critter_stat(self_obj, STAT_max_hp)) then begin
+        giq_option(4, NAME, g_mstr(10001), Node1001, NEUTRAL_REACTION);
     end
-    giq_option(4, 1057, message_str(14, 10008), Node1007, 50);
-    giq_option(4, 1057, message_str(14, 10009), Node1008, 50);
-    giq_option(4, 1057, message_str(14, 10002), Node1002, 50);
-    giq_option(4, 1057, 3015, Node1011, 50);
-    giq_option(4, 1057, message_str(14, 10007), Node999, 50);
-    giq_option(-3, 1057, message_str(14, random(300, 303)), Node999, 50);
+    giq_option(4, NAME, g_mstr(10008), Node1007, NEUTRAL_REACTION);
+    giq_option(4, NAME, g_mstr(10009), Node1008, NEUTRAL_REACTION);
+    giq_option(4, NAME, g_mstr(10002), Node1002, NEUTRAL_REACTION);
+    giq_option(4, NAME, 3015, Node1011, NEUTRAL_REACTION);
+    giq_option(4, NAME, g_mstr(10007), Node999, NEUTRAL_REACTION);
+    giq_option(-3, NAME, g_mstr(random(300, 303)), Node999, NEUTRAL_REACTION);
 end
 
 procedure Node1005
 begin
     set_local_var(6, 6);
-    gsay_reply(1057, 1800);
-    if (get_critter_stat(self_obj, 35) < get_critter_stat(self_obj, 7)) then begin
-        giq_option(4, 1057, message_str(14, 10001), Node1001, 50);
+    Reply(1800);
+    if (get_critter_stat(self_obj, STAT_current_hp) < get_critter_stat(self_obj, STAT_max_hp)) then begin
+        giq_option(4, NAME, g_mstr(10001), Node1001, NEUTRAL_REACTION);
     end
-    giq_option(4, 1057, message_str(14, 10008), Node1007, 50);
-    giq_option(4, 1057, message_str(14, 10009), Node1008, 50);
-    giq_option(4, 1057, message_str(14, 10002), Node1002, 50);
-    giq_option(4, 1057, 3015, Node1011, 50);
-    giq_option(4, 1057, message_str(14, 10007), Node999, 50);
-    giq_option(-3, 1057, message_str(14, random(300, 303)), Node999, 50);
+    giq_option(4, NAME, g_mstr(10008), Node1007, NEUTRAL_REACTION);
+    giq_option(4, NAME, g_mstr(10009), Node1008, NEUTRAL_REACTION);
+    giq_option(4, NAME, g_mstr(10002), Node1002, NEUTRAL_REACTION);
+    giq_option(4, NAME, 3015, Node1011, NEUTRAL_REACTION);
+    giq_option(4, NAME, g_mstr(10007), Node999, NEUTRAL_REACTION);
+    giq_option(-3, NAME, g_mstr(random(300, 303)), Node999, NEUTRAL_REACTION);
 end
 
 procedure Node1006
 begin
     set_local_var(6, 9);
-    gsay_reply(1057, 1900);
-    if (get_critter_stat(self_obj, 35) < get_critter_stat(self_obj, 7)) then begin
-        giq_option(4, 1057, message_str(14, 10001), Node1001, 50);
+    Reply(1900);
+    if (get_critter_stat(self_obj, STAT_current_hp) < get_critter_stat(self_obj, STAT_max_hp)) then begin
+        giq_option(4, NAME, g_mstr(10001), Node1001, NEUTRAL_REACTION);
     end
-    giq_option(4, 1057, message_str(14, 10008), Node1007, 50);
-    giq_option(4, 1057, message_str(14, 10009), Node1008, 50);
-    giq_option(4, 1057, message_str(14, 10002), Node1002, 50);
-    giq_option(4, 1057, 3015, Node1011, 50);
-    giq_option(4, 1057, message_str(14, 10007), Node999, 50);
-    giq_option(-3, 1057, message_str(14, random(300, 303)), Node999, 50);
+    giq_option(4, NAME, g_mstr(10008), Node1007, NEUTRAL_REACTION);
+    giq_option(4, NAME, g_mstr(10009), Node1008, NEUTRAL_REACTION);
+    giq_option(4, NAME, g_mstr(10002), Node1002, NEUTRAL_REACTION);
+    giq_option(4, NAME, 3015, Node1011, NEUTRAL_REACTION);
+    giq_option(4, NAME, g_mstr(10007), Node999, NEUTRAL_REACTION);
+    giq_option(-3, NAME, g_mstr(random(300, 303)), Node999, NEUTRAL_REACTION);
 end
 
 procedure Node1007
 begin
-    gsay_reply(1057, 2200);
+    Reply(2200);
     if (local_var(6) != 3) then begin
-        giq_option(4, 1057, message_str(14, 10004), Node1004, 50);
+        giq_option(4, NAME, g_mstr(10004), Node1004, NEUTRAL_REACTION);
     end
     if (local_var(6) != 6) then begin
-        giq_option(4, 1057, message_str(14, 10005), Node1005, 50);
+        giq_option(4, NAME, g_mstr(10005), Node1005, NEUTRAL_REACTION);
     end
     if (local_var(6) != 9) then begin
-        giq_option(4, 1057, message_str(14, 10006), Node1006, 50);
+        giq_option(4, NAME, g_mstr(10006), Node1006, NEUTRAL_REACTION);
     end
-    giq_option(4, 1057, message_str(14, 10010), Node1000, 50);
+    giq_option(4, NAME, g_mstr(10010), Node1000, NEUTRAL_REACTION);
 end
 
 procedure Node1008
 begin
-    gsay_reply(1057, 2300);
-    giq_option(4, 1057, message_str(14, 10013), Node1010, 50);
+    Reply(2300);
+    giq_option(4, NAME, g_mstr(10013), Node1010, NEUTRAL_REACTION);
     if ((obj_item_subtype(critter_inven_obj(self_obj, 1)) == 3) or (obj_item_subtype(critter_inven_obj(self_obj, 2)) == 3)) then begin
-        giq_option(4, 1057, message_str(14, 10003), Node1003, 50);
+        giq_option(4, NAME, g_mstr(10003), Node1003, NEUTRAL_REACTION);
     end
     if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
-        giq_option(4, 1057, message_str(14, 10012), Node1009, 50);
+        giq_option(4, NAME, g_mstr(10012), Node1009, NEUTRAL_REACTION);
     end
-    giq_option(4, 1057, message_str(14, 10011), Node1000, 50);
+    giq_option(4, NAME, g_mstr(10011), Node1000, NEUTRAL_REACTION);
 end
 
 procedure Node1009
 begin
-    gsay_reply(1057, 2400);
-    if (get_critter_stat(self_obj, 35) < get_critter_stat(self_obj, 7)) then begin
-        giq_option(4, 1057, message_str(14, 10001), Node1001, 50);
+    Reply(2400);
+    if (get_critter_stat(self_obj, STAT_current_hp) < get_critter_stat(self_obj, STAT_max_hp)) then begin
+        giq_option(4, NAME, g_mstr(10001), Node1001, NEUTRAL_REACTION);
     end
-    giq_option(4, 1057, message_str(14, 10008), Node1007, 50);
-    giq_option(4, 1057, message_str(14, 10009), Node1008, 50);
-    giq_option(4, 1057, message_str(14, 10002), Node1002, 50);
-    giq_option(4, 1057, 3015, Node1011, 50);
-    giq_option(4, 1057, message_str(14, 10007), Node999, 50);
-    giq_option(-3, 1057, message_str(14, random(300, 303)), Node999, 50);
+    giq_option(4, NAME, g_mstr(10008), Node1007, NEUTRAL_REACTION);
+    giq_option(4, NAME, g_mstr(10009), Node1008, NEUTRAL_REACTION);
+    giq_option(4, NAME, g_mstr(10002), Node1002, NEUTRAL_REACTION);
+    giq_option(4, NAME, 3015, Node1011, NEUTRAL_REACTION);
+    giq_option(4, NAME, g_mstr(10007), Node999, NEUTRAL_REACTION);
+    giq_option(-3, NAME, g_mstr(random(300, 303)), Node999, NEUTRAL_REACTION);
 end
 
 procedure Node1010
 begin
-    gsay_reply(1057, 2500);
-    if (get_critter_stat(self_obj, 35) < get_critter_stat(self_obj, 7)) then begin
-        giq_option(4, 1057, message_str(14, 10001), Node1001, 50);
+    Reply(2500);
+    if (get_critter_stat(self_obj, STAT_current_hp) < get_critter_stat(self_obj, STAT_max_hp)) then begin
+        giq_option(4, NAME, g_mstr(10001), Node1001, NEUTRAL_REACTION);
     end
-    giq_option(4, 1057, message_str(14, 10008), Node1007, 50);
-    giq_option(4, 1057, message_str(14, 10009), Node1008, 50);
-    giq_option(4, 1057, message_str(14, 10002), Node1002, 50);
-    giq_option(4, 1057, 3015, Node1011, 50);
-    giq_option(4, 1057, message_str(14, 10007), Node999, 50);
-    giq_option(-3, 1057, message_str(14, random(300, 303)), Node999, 50);
+    giq_option(4, NAME, g_mstr(10008), Node1007, NEUTRAL_REACTION);
+    giq_option(4, NAME, g_mstr(10009), Node1008, NEUTRAL_REACTION);
+    giq_option(4, NAME, g_mstr(10002), Node1002, NEUTRAL_REACTION);
+    giq_option(4, NAME, 3015, Node1011, NEUTRAL_REACTION);
+    giq_option(4, NAME, g_mstr(10007), Node999, NEUTRAL_REACTION);
+    giq_option(-3, NAME, g_mstr(random(300, 303)), Node999, NEUTRAL_REACTION);
 end
 
 procedure Node1011
 begin
-    gsay_reply(1057, 3016);
-    giq_option(4, 1057, 3020, Node1012, 50);
-    if (get_critter_stat(self_obj, 35) < get_critter_stat(self_obj, 7)) then begin
-        giq_option(4, 1057, message_str(14, 10001), Node1001, 50);
+    Reply(3016);
+    giq_option(4, NAME, 3020, Node1012, NEUTRAL_REACTION);
+    if (get_critter_stat(self_obj, STAT_current_hp) < get_critter_stat(self_obj, STAT_max_hp)) then begin
+        giq_option(4, NAME, g_mstr(10001), Node1001, NEUTRAL_REACTION);
     end
-    giq_option(4, 1057, message_str(14, 10008), Node1007, 50);
-    giq_option(4, 1057, message_str(14, 10009), Node1008, 50);
-    giq_option(4, 1057, message_str(14, 10002), Node1002, 50);
-    giq_option(4, 1057, message_str(14, 10007), Node999, 50);
+    giq_option(4, NAME, g_mstr(10008), Node1007, NEUTRAL_REACTION);
+    giq_option(4, NAME, g_mstr(10009), Node1008, NEUTRAL_REACTION);
+    giq_option(4, NAME, g_mstr(10002), Node1002, NEUTRAL_REACTION);
+    giq_option(4, NAME, g_mstr(10007), Node999, NEUTRAL_REACTION);
 end
 
 procedure Node1012
 begin
-    gsay_reply(1057, 3021);
-    if (get_critter_stat(self_obj, 35) < get_critter_stat(self_obj, 7)) then begin
-        giq_option(4, 1057, message_str(14, 10001), Node1001, 50);
+    Reply(3021);
+    if (get_critter_stat(self_obj, STAT_current_hp) < get_critter_stat(self_obj, STAT_max_hp)) then begin
+        giq_option(4, NAME, g_mstr(10001), Node1001, NEUTRAL_REACTION);
     end
-    giq_option(4, 1057, message_str(14, 10008), Node1007, 50);
-    giq_option(4, 1057, message_str(14, 10009), Node1008, 50);
-    giq_option(4, 1057, message_str(14, 10002), Node1002, 50);
-    giq_option(4, 1057, 3015, Node1011, 50);
-    giq_option(4, 1057, message_str(14, 10007), Node999, 50);
+    giq_option(4, NAME, g_mstr(10008), Node1007, NEUTRAL_REACTION);
+    giq_option(4, NAME, g_mstr(10009), Node1008, NEUTRAL_REACTION);
+    giq_option(4, NAME, g_mstr(10002), Node1002, NEUTRAL_REACTION);
+    giq_option(4, NAME, 3015, Node1011, NEUTRAL_REACTION);
+    giq_option(4, NAME, g_mstr(10007), Node999, NEUTRAL_REACTION);
 end
 
 procedure Node1100
 begin
-    if ((get_critter_stat(dude_obj, 3) <= 1) and (has_trait(0, dude_obj, 39) == 0)) then begin
+    if ((dude_charisma <= 1) and (has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality) == 0)) then begin
         if (party_member_obj(obj_pid(self_obj)) != 0) then begin
-            debug_msg("abandon party: " + obj_name(self_obj));
+            debug_msg("abandon party: " + self_name);
             party_remove(self_obj);
         end
-        if ((local_var(7) != -1) and (has_trait(1, self_obj, 6) == 0)) then begin
-            critter_add_trait(self_obj, 1, 6, local_var(7));
+        if ((local_var(7) != -1) and (has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) == 0)) then begin
+            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, local_var(7));
             set_local_var(7, -1);
         end
-        debug_msg("" + obj_name(self_obj) + " has abandoned the party");
-        gsay_reply(1057, 2900);
-        giq_option(1, 1057, message_str(14, 10007), Node999, 50);
+        debug_msg("" + self_name + " has abandoned the party");
+        Reply(2900);
+        giq_option(1, NAME, g_mstr(10007), Node999, NEUTRAL_REACTION);
     end
     else begin
-        if (((metarule(16, 0) - 1) >= (floor(get_critter_stat(dude_obj, 3) / 2) + has_trait(0, dude_obj, 98) + (20 * has_trait(0, dude_obj, 39)))) or ((metarule(16, 0) - 1) >= (5 + (20 * has_trait(0, dude_obj, 39))))) then begin
+        if (((party_member_count(0) - 1) >= (floor(dude_charisma / 2) + has_trait(TRAIT_PERK, dude_obj, PERK_magnetic_personality_perk) + (20 * has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality)))) or ((party_member_count(0) - 1) >= (5 + (20 * has_trait(TRAIT_PERK, dude_obj, PERK_cult_of_personality))))) then begin
             if (party_member_obj(obj_pid(self_obj)) != 0) then begin
-                debug_msg("abandon party: " + obj_name(self_obj));
+                debug_msg("abandon party: " + self_name);
                 party_remove(self_obj);
             end
-            if ((local_var(7) != -1) and (has_trait(1, self_obj, 6) == 0)) then begin
-                critter_add_trait(self_obj, 1, 6, local_var(7));
+            if ((local_var(7) != -1) and (has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) == 0)) then begin
+                critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, local_var(7));
                 set_local_var(7, -1);
             end
-            debug_msg("" + obj_name(self_obj) + " has abandoned the party");
-            gsay_reply(1057, 2000);
-            giq_option(1, 1057, message_str(14, 10007), Node999, 50);
+            debug_msg("" + self_name + " has abandoned the party");
+            Reply(2000);
+            giq_option(1, NAME, g_mstr(10007), Node999, NEUTRAL_REACTION);
         end
         else begin
             set_local_var(5, 0);
@@ -762,23 +762,23 @@ begin
                 if (local_var(6) == 0) then begin
                     set_local_var(6, 6);
                 end
-                if (has_trait(1, self_obj, 6) != 0) then begin
-                    set_local_var(7, has_trait(1, self_obj, 6));
+                if (has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) != 0) then begin
+                    set_local_var(7, has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM));
                 end
-                critter_add_trait(self_obj, 1, 6, 0);
+                critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 0);
                 party_add(self_obj);
             end
-            debug_msg("join party: " + obj_name(self_obj));
-            gsay_reply(1057, 2200);
-            if (get_critter_stat(self_obj, 35) < get_critter_stat(self_obj, 7)) then begin
-                giq_option(4, 1057, message_str(14, 10001), Node1001, 50);
+            debug_msg("join party: " + self_name);
+            Reply(2200);
+            if (get_critter_stat(self_obj, STAT_current_hp) < get_critter_stat(self_obj, STAT_max_hp)) then begin
+                giq_option(4, NAME, g_mstr(10001), Node1001, NEUTRAL_REACTION);
             end
-            giq_option(4, 1057, message_str(14, 10008), Node1007, 50);
-            giq_option(4, 1057, message_str(14, 10009), Node1008, 50);
-            giq_option(4, 1057, message_str(14, 10002), Node1002, 50);
-            giq_option(4, 1057, 3015, Node1011, 50);
-            giq_option(4, 1057, message_str(14, 10007), Node999, 50);
-            giq_option(-3, 1057, message_str(14, random(300, 303)), Node999, 50);
+            giq_option(4, NAME, g_mstr(10008), Node1007, NEUTRAL_REACTION);
+            giq_option(4, NAME, g_mstr(10009), Node1008, NEUTRAL_REACTION);
+            giq_option(4, NAME, g_mstr(10002), Node1002, NEUTRAL_REACTION);
+            giq_option(4, NAME, 3015, Node1011, NEUTRAL_REACTION);
+            giq_option(4, NAME, g_mstr(10007), Node999, NEUTRAL_REACTION);
+            giq_option(-3, NAME, g_mstr(random(300, 303)), Node999, NEUTRAL_REACTION);
         end
     end
 end
@@ -796,47 +796,46 @@ procedure use_obj_on_p_proc
 begin
     if ((obj_pid(obj_being_used_with) == 39) or (obj_pid(obj_being_used_with) == 38)) then begin
         script_overrides;
-        display_msg(message_str(14, 20000));
+        display_msg(g_mstr(20000));
     end
     if (obj_pid(obj_being_used_with) == 412) then begin
         script_overrides;
-        float_msg(self_obj, message_str(1057, 3000), 8);
+        float_msg(self_obj, mstr(3000), FLOAT_MSG_YELLOW);
     end
     if ((obj_pid(obj_being_used_with) == 40) or (obj_pid(obj_being_used_with) == 47) or (obj_pid(obj_being_used_with) == 71) or (obj_pid(obj_being_used_with) == 91) or (obj_pid(obj_being_used_with) == 144) or (obj_pid(obj_being_used_with) == 259) or (obj_pid(obj_being_used_with) == 87) or (obj_pid(obj_being_used_with) == 110) or (obj_pid(obj_being_used_with) == 273)) then begin
         script_overrides;
-        display_msg(message_str(1057, 3002));
+        display_mstr(3002);
     end
     if (obj_pid(obj_being_used_with) == 75) then begin
-        if (get_critter_stat(self_obj, 35) == get_critter_stat(self_obj, 7)) then begin
+        if (get_critter_stat(self_obj, STAT_current_hp) == get_critter_stat(self_obj, STAT_max_hp)) then begin
             script_overrides;
-            display_msg(message_str(1057, 3003));
+            display_mstr(3003);
         end
         else begin
             script_overrides;
-            critter_heal(self_obj, random(5, 15) + floor(has_skill(dude_obj, 13) / 4));
-            display_msg(message_str(1057, 3004));
-            float_msg(self_obj, message_str(1057, 3005), 8);
+            critter_heal(self_obj, random(5, 15) + floor(dude_skill(SKILL_REPAIR) / 4));
+            display_mstr(3004);
+            float_msg(self_obj, mstr(3005), FLOAT_MSG_YELLOW);
         end
     end
     if (obj_pid(obj_being_used_with) == 308) then begin
-        if (get_critter_stat(self_obj, 35) == get_critter_stat(self_obj, 7)) then begin
+        if (get_critter_stat(self_obj, STAT_current_hp) == get_critter_stat(self_obj, STAT_max_hp)) then begin
             script_overrides;
-            display_msg(message_str(1057, 3003));
+            display_mstr(3003);
         end
         else begin
             script_overrides;
-            critter_heal(self_obj, random(10, 20) + floor(has_skill(dude_obj, 13) / 4));
-            display_msg(message_str(1057, 3004));
-            float_msg(self_obj, message_str(1057, 3005), 8);
+            critter_heal(self_obj, random(10, 20) + floor(dude_skill(SKILL_REPAIR) / 4));
+            display_mstr(3004);
+            float_msg(self_obj, mstr(3005), FLOAT_MSG_YELLOW);
         end
     end
     if ((obj_pid(obj_being_used_with) == 81) or (obj_pid(obj_being_used_with) == 103) or (obj_pid(obj_being_used_with) == 284) or (obj_pid(obj_being_used_with) == 378) or (obj_pid(obj_being_used_with) == 552)) then begin
         script_overrides;
-        display_msg(message_str(1057, 3006));
+        display_mstr(3006);
     end
     if ((obj_pid(obj_being_used_with) == 106) or (obj_pid(obj_being_used_with) == 124) or (obj_pid(obj_being_used_with) == 125) or (obj_pid(obj_being_used_with) == 310) or (obj_pid(obj_being_used_with) == 311) or (obj_pid(obj_being_used_with) == 469) or (obj_pid(obj_being_used_with) == 542) or (obj_pid(obj_being_used_with) == 598)) then begin
         script_overrides;
-        display_msg(message_str(1057, 3007));
+        display_mstr(3007);
     end
 end
-
