diff --git a/Mods/MegaMod/Original/V14MERIS.ssl b/Mods/MegaMod/ReDefine/V14MERIS.ssl
index 9582c72..7ff62c4 100644
--- a/Mods/MegaMod/Original/V14MERIS.ssl
+++ b/Mods/MegaMod/ReDefine/V14MERIS.ssl
@@ -155,34 +155,34 @@ end
 procedure critter_p_proc
 begin
     if (party_member_obj(16777762) != 0) then begin
-        if (((local_var(1) != 0) == 0) and ((global_var(398) != 0) == 0)) then begin
+        if (((local_var(1) != 0) == 0) and ((global_var(GVAR_PARTY_NO_FOLLOW) != 0) == 0)) then begin
             if (local_var(2) == 0) then begin
                 set_local_var(2, 6);
             end
             if (tile_distance_objs(self_obj, dude_obj) > (3 * local_var(2) / 2)) then begin
                 if (tile_distance_objs(self_obj, dude_obj) > (3 * local_var(2) / 2 * 2)) then begin
-                    if ((tile_num(self_obj) != tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(2))) and (tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(2)) != 0)) then begin
-                        if ((dest_tile == tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(2))) and (step_tile < 0)) then begin
+                    if ((tile_num(self_obj) != tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(2))) and (tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(2)) != 0)) then begin
+                        if ((dest_tile == tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(2))) and (step_tile < 0)) then begin
                             step_tile := step_tile + 1;
                         end
                         else begin
                             if (anim_busy(self_obj) == 0) then begin
-                                dest_tile := tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(2));
-                                step_tile := tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(2));
+                                dest_tile := tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(2));
+                                step_tile := tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(2));
                                 animate_move_obj_to_tile(self_obj, step_tile, 1);
                                 debug_msg("move_to_point: self_tile == " + tile_num(self_obj));
-                                while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(2))) >= tile_distance(step_tile, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(2))))) do begin
+                                while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(2))) >= tile_distance(step_tile, tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(2))))) do begin
                                     step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), ((tile_distance_objs(dude_obj, self_obj) / 5) + 1) % tile_distance(step_tile, tile_num(self_obj)));
                                     debug_msg("move_to_point: step_tile == " + step_tile);
                                     animate_move_obj_to_tile(self_obj, step_tile, 1);
                                 end
                                 if (anim_busy(self_obj) == 0) then begin
-                                    if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
+                                    if (metarule3(106, tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), elevation(self_obj), 0) != 0) then begin
                                         if (anim_busy(self_obj) == 0) then begin
-                                            global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
+                                            global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                             animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                             global_temp := (global_temp + 1) % 6;
-                                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
+                                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                 debug_msg("flee loop: rot == " + global_temp);
                                                 animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                 global_temp := (global_temp + 1) % 6;
@@ -195,7 +195,7 @@ begin
                                 end
                             end
                             else begin
-                                if (tile_distance(tile_num(self_obj), tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(2))) < tile_distance(dest_tile, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(2)))) then begin
+                                if (tile_distance(tile_num(self_obj), tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(2))) < tile_distance(dest_tile, tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(2)))) then begin
                                     reg_anim_func(2, self_obj);
                                 end
                             end
@@ -203,28 +203,28 @@ begin
                     end
                 end
                 else begin
-                    if ((tile_num(self_obj) != tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(2))) and (tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(2)) != 0)) then begin
-                        if ((dest_tile == tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(2))) and (step_tile < 0)) then begin
+                    if ((tile_num(self_obj) != tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(2))) and (tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(2)) != 0)) then begin
+                        if ((dest_tile == tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(2))) and (step_tile < 0)) then begin
                             step_tile := step_tile + 1;
                         end
                         else begin
                             if (anim_busy(self_obj) == 0) then begin
-                                dest_tile := tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(2));
-                                step_tile := tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(2));
+                                dest_tile := tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(2));
+                                step_tile := tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(2));
                                 animate_move_obj_to_tile(self_obj, step_tile, 0);
                                 debug_msg("move_to_point: self_tile == " + tile_num(self_obj));
-                                while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(2))) >= tile_distance(step_tile, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(2))))) do begin
+                                while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(2))) >= tile_distance(step_tile, tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(2))))) do begin
                                     step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), ((tile_distance_objs(dude_obj, self_obj) / 5) + 1) % tile_distance(step_tile, tile_num(self_obj)));
                                     debug_msg("move_to_point: step_tile == " + step_tile);
                                     animate_move_obj_to_tile(self_obj, step_tile, 0);
                                 end
                                 if (anim_busy(self_obj) == 0) then begin
-                                    if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
+                                    if (metarule3(106, tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), elevation(self_obj), 0) != 0) then begin
                                         if (anim_busy(self_obj) == 0) then begin
-                                            global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
+                                            global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                             animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                             global_temp := (global_temp + 1) % 6;
-                                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
+                                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                 debug_msg("flee loop: rot == " + global_temp);
                                                 animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                 global_temp := (global_temp + 1) % 6;
@@ -237,7 +237,7 @@ begin
                                 end
                             end
                             else begin
-                                if (tile_distance(tile_num(self_obj), tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(2))) < tile_distance(dest_tile, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(2)))) then begin
+                                if (tile_distance(tile_num(self_obj), tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(2))) < tile_distance(dest_tile, tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(2)))) then begin
                                     reg_anim_func(2, self_obj);
                                 end
                             end
@@ -271,18 +271,18 @@ end
 procedure look_at_p_proc
 begin
     script_overrides;
-    display_msg(message_str(1595, 100));
+    display_mstr(100);
 end
 
 procedure description_p_proc
 begin
     if (local_var(0) == 0) then begin
         script_overrides;
-        display_msg(message_str(1595, 101));
+        display_mstr(101);
     end
     else begin
         script_overrides;
-        display_msg(message_str(1595, 102));
+        display_mstr(102);
     end
 end
 
@@ -292,25 +292,25 @@ end
 
 procedure Dialog_in_party
 begin
-    gsay_reply(1595, 103);
-    giq_option(3, 1595, 104, Waiting, 50);
-    giq_option(3, 1595, 111, Distance, 50);
-    giq_option(3, 1595, 116, Node999, 50);
+    Reply(103);
+    giq_option(3, NAME, 104, Waiting, NEUTRAL_REACTION);
+    giq_option(3, NAME, 111, Distance, NEUTRAL_REACTION);
+    giq_option(3, NAME, 116, Node999, NEUTRAL_REACTION);
 end
 
 procedure Waiting
 begin
     set_local_var(1, 1);
     party_remove(self_obj);
-    gsay_reply(1595, 105);
-    giq_option(3, 1595, 106, Node999, 50);
+    Reply(105);
+    giq_option(3, NAME, 106, Node999, NEUTRAL_REACTION);
 end
 
 procedure Dialog_is_waiting
 begin
-    gsay_reply(1595, 103);
-    giq_option(3, 1595, 107, Node001, 50);
-    giq_option(3, 1595, 108, Node999, 50);
+    Reply(103);
+    giq_option(3, NAME, 107, Node001, NEUTRAL_REACTION);
+    giq_option(3, NAME, 108, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node001
@@ -319,23 +319,23 @@ begin
     if (local_var(2) == 0) then begin
         set_local_var(2, 6);
     end
-    debug_msg("join party: " + obj_name(self_obj));
+    debug_msg("join party: " + self_name);
     set_local_var(1, 0);
-    if (has_trait(1, self_obj, 6) != 0) then begin
-        set_local_var(3, has_trait(1, self_obj, 6));
+    if (has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) != 0) then begin
+        set_local_var(3, has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM));
     end
-    critter_add_trait(self_obj, 1, 6, 0);
+    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 0);
     party_add(self_obj);
-    gsay_reply(1595, 109);
-    giq_option(3, 1595, 110, Node999, 50);
+    Reply(109);
+    giq_option(3, NAME, 110, Node999, NEUTRAL_REACTION);
 end
 
 procedure Distance
 begin
-    gsay_reply(1595, 112);
-    giq_option(3, 1595, 113, Node002, 50);
-    giq_option(3, 1595, 114, Node003, 50);
-    giq_option(3, 1595, 115, Node004, 50);
+    Reply(112);
+    giq_option(3, NAME, 113, Node002, NEUTRAL_REACTION);
+    giq_option(3, NAME, 114, Node003, NEUTRAL_REACTION);
+    giq_option(3, NAME, 115, Node004, NEUTRAL_REACTION);
 end
 
 procedure Node002
@@ -359,4 +359,3 @@ end
 procedure push_p_proc
 begin
 end
-
