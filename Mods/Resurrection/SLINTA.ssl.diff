diff --git a/Mods/Resurrection/Original/SLINTA.ssl b/Mods/Resurrection/ReDefine/SLINTA.ssl
index 35ebea3..8de9dff 100644
--- a/Mods/Resurrection/Original/SLINTA.ssl
+++ b/Mods/Resurrection/ReDefine/SLINTA.ssl
@@ -68,12 +68,12 @@ begin
             return 1;
         end
     end
-    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
+    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
         if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
             return 1;
         end
     end
-    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
+    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
         if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
             return 1;
         end
@@ -88,7 +88,7 @@ begin
             return 1;
         end
     end
-    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
+    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
         if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
             return 1;
         end
@@ -150,10 +150,10 @@ begin
             if (anim_busy(self_obj) == 0) then begin
                 if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                     if (anim_busy(self_obj) == 0) then begin
-                        global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
+                        global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                         animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                         global_temp := (global_temp + 1) % 6;
-                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
+                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                             debug_msg("flee loop: rot == " + global_temp);
                             animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                             global_temp := (global_temp + 1) % 6;
@@ -163,37 +163,37 @@ begin
             end
         end
         else begin
-            attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
+            attack(dude_obj);
         end
     end
-    if ((party_member_obj(16777812) != 0) and (global_var(849) == 0) and ((global_var(910) bwand 32768) == 0) and ((global_var(1020) bwand 131072) == 0) and ((global_var(1020) bwand 262144) == 0) and ((global_var(910) bwand 65536) == 0) and ((global_var(910) bwand 262144) == 0) and ((global_var(910) bwand 524288) == 0)) then begin
+    if ((party_member_obj(16777812) != 0) and (global_var(GVAR_C_RING_POINTER) == 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32768) == 0) and ((global_var(GVAR_PTR_LYSTRA_REACTIONS_2) bwand 131072) == 0) and ((global_var(GVAR_PTR_LYSTRA_REACTIONS_2) bwand 262144) == 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 65536) == 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 262144) == 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 524288) == 0)) then begin
         if (local_var(6) == 0) then begin
             set_local_var(6, 6);
         end
         if (tile_distance_objs(self_obj, dude_obj) > (3 * local_var(6) / 2)) then begin
             if (tile_distance_objs(self_obj, dude_obj) > (3 * local_var(6) / 2 * 2)) then begin
-                if ((tile_num(self_obj) != tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(6))) and (tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(6)) != 0)) then begin
-                    if ((dest_tile == tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(6))) and (step_tile < 0)) then begin
+                if ((tile_num(self_obj) != tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(6))) and (tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(6)) != 0)) then begin
+                    if ((dest_tile == tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(6))) and (step_tile < 0)) then begin
                         step_tile := step_tile + 1;
                     end
                     else begin
                         if (anim_busy(self_obj) == 0) then begin
-                            dest_tile := tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(6));
-                            step_tile := tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(6));
+                            dest_tile := tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(6));
+                            step_tile := tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(6));
                             animate_move_obj_to_tile(self_obj, step_tile, 1);
                             debug_msg("move_to_point: self_tile == " + tile_num(self_obj));
-                            while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(6))) >= tile_distance(step_tile, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(6))))) do begin
+                            while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(6))) >= tile_distance(step_tile, tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(6))))) do begin
                                 step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), ((tile_distance_objs(dude_obj, self_obj) / 5) + 1) % tile_distance(step_tile, tile_num(self_obj)));
                                 debug_msg("move_to_point: step_tile == " + step_tile);
                                 animate_move_obj_to_tile(self_obj, step_tile, 1);
                             end
                             if (anim_busy(self_obj) == 0) then begin
-                                if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
+                                if (tile_get_next_critter(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), elevation(self_obj), 0) != 0) then begin
                                     if (anim_busy(self_obj) == 0) then begin
-                                        global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
+                                        global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                         animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                         global_temp := (global_temp + 1) % 6;
-                                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
+                                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                             debug_msg("flee loop: rot == " + global_temp);
                                             animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                             global_temp := (global_temp + 1) % 6;
@@ -206,7 +206,7 @@ begin
                             end
                         end
                         else begin
-                            if (tile_distance(tile_num(self_obj), tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(6))) < tile_distance(dest_tile, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(6)))) then begin
+                            if (tile_distance(tile_num(self_obj), tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(6))) < tile_distance(dest_tile, tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(6)))) then begin
                                 reg_anim_func(2, self_obj);
                             end
                         end
@@ -214,28 +214,28 @@ begin
                 end
             end
             else begin
-                if ((tile_num(self_obj) != tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(6))) and (tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(6)) != 0)) then begin
-                    if ((dest_tile == tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(6))) and (step_tile < 0)) then begin
+                if ((tile_num(self_obj) != tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(6))) and (tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(6)) != 0)) then begin
+                    if ((dest_tile == tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(6))) and (step_tile < 0)) then begin
                         step_tile := step_tile + 1;
                     end
                     else begin
                         if (anim_busy(self_obj) == 0) then begin
-                            dest_tile := tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(6));
-                            step_tile := tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(6));
+                            dest_tile := tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(6));
+                            step_tile := tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(6));
                             animate_move_obj_to_tile(self_obj, step_tile, 0);
                             debug_msg("move_to_point: self_tile == " + tile_num(self_obj));
-                            while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(6))) >= tile_distance(step_tile, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(6))))) do begin
+                            while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(6))) >= tile_distance(step_tile, tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(6))))) do begin
                                 step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), ((tile_distance_objs(dude_obj, self_obj) / 5) + 1) % tile_distance(step_tile, tile_num(self_obj)));
                                 debug_msg("move_to_point: step_tile == " + step_tile);
                                 animate_move_obj_to_tile(self_obj, step_tile, 0);
                             end
                             if (anim_busy(self_obj) == 0) then begin
-                                if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
+                                if (tile_get_next_critter(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), elevation(self_obj), 0) != 0) then begin
                                     if (anim_busy(self_obj) == 0) then begin
-                                        global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
+                                        global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                         animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                         global_temp := (global_temp + 1) % 6;
-                                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
+                                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                             debug_msg("flee loop: rot == " + global_temp);
                                             animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                             global_temp := (global_temp + 1) % 6;
@@ -248,7 +248,7 @@ begin
                             end
                         end
                         else begin
-                            if (tile_distance(tile_num(self_obj), tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(6))) < tile_distance(dest_tile, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(6)))) then begin
+                            if (tile_distance(tile_num(self_obj), tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(6))) < tile_distance(dest_tile, tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(6)))) then begin
                                 reg_anim_func(2, self_obj);
                             end
                         end
@@ -257,29 +257,29 @@ begin
             end
         end
     end
-    if ((cur_map_index == 25) and ((global_var(910) bwand 524288) != 0) and ((tile_num(self_obj) == 25905) or (tile_num(self_obj) == 26105) or (tile_num(self_obj) == 25883) or (tile_num(self_obj) == 26083))) then begin
-        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), random(3, 10)), 0);
+    if ((CUR_MAP_ALB_CISA) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 524288) != 0) and ((tile_num(self_obj) == 25905) or (tile_num(self_obj) == 26105) or (tile_num(self_obj) == 25883) or (tile_num(self_obj) == 26083))) then begin
+        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(dude_tile, tile_num(self_obj)), random(3, 10)), 0);
     end
     if (party_member_obj(16777812) != 0) then begin
-        if (has_trait(0, dude_obj, 44) and (party_member_obj(16777812) != 0) and not((global_var(1036) bwand 8) != 0)) then begin
+        if (has_trait(TRAIT_PERK, dude_obj, PERK_animal_friend) and (party_member_obj(16777812) != 0) and not((global_var(GVAR_PERK_LEADER_PARTY) bwand 8) != 0)) then begin
             if (get_ini_setting("ddraw.ini|Resurrection|Debug") > 0) then begin
                 display_msg("temp.c" + "@" + 133 + ": " + ("Enabling" + " 'leader' perk stats for '" + "Slinta" + "'."));
             end
-            set_global_var(1036, global_var(1036) bwor 8);
+            set_global_var(GVAR_PERK_LEADER_PARTY, global_var(GVAR_PERK_LEADER_PARTY) bwor 8);
             set_critter_extra_stat(party_member_obj(16777812), 8, get_critter_extra_stat(party_member_obj(16777812), 8) + 1);
             set_critter_extra_stat(party_member_obj(16777812), 9, get_critter_extra_stat(party_member_obj(16777812), 9) + (10 * 1));
         end
         global_temp := global_temp;
     end
     if (local_var(7) == 0) then begin
-        set_local_var(7, get_pc_stat(1));
+        set_local_var(7, get_pc_stat(PCSTAT_level));
     end
     if (party_member_obj(16777812) != 0) then begin
-        if (((local_var(7) + 2) <= get_pc_stat(1)) and (local_var(8) < 6)) then begin
-            set_local_var(7, get_pc_stat(1));
+        if (((local_var(7) + 2) <= get_pc_stat(PCSTAT_level)) and (local_var(8) < 6)) then begin
+            set_local_var(7, get_pc_stat(PCSTAT_level));
             set_local_var(8, local_var(8) + 1);
-            float_msg(self_obj, message_str(42, 310), 9);
-            display_msg(message_str(42, 311));
+            float_msg(self_obj, mstr(310), FLOAT_MSG_WHITE);
+            display_mstr(311);
             call LEVELING();
         end
     end
@@ -294,12 +294,12 @@ end
 
 procedure talk_p_proc
 begin
-    anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
-    anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
+    anim(dude_obj, 1000, rotation_to_tile(dude_tile, tile_num(self_obj)));
+    anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
     start_gdialog(42, self_obj, 4, -1, -1);
     gsay_start;
     if (party_member_obj(16777812) != 0) then begin
-        if (get_critter_stat(dude_obj, 4) > 4) then begin
+        if (dude_iq > 4) then begin
             call Node1150();
         end
         else begin
@@ -307,7 +307,7 @@ begin
         end
     end
     else begin
-        if (get_critter_stat(dude_obj, 4) > 4) then begin
+        if (dude_iq > 4) then begin
             call Node1150();
         end
         else begin
@@ -320,7 +320,7 @@ end
 
 procedure destroy_p_proc
 begin
-    set_global_var(1042, self_obj);
+    set_global_var(GVAR_DEAD_PARTYMEMBER, self_obj);
     terminate_combat;
     add_timer_event(dude_obj, 0, 4);
 end
@@ -328,17 +328,17 @@ end
 procedure look_at_p_proc
 begin
     script_overrides;
-    display_msg(message_str(42, 150));
+    display_mstr(150);
 end
 
 procedure description_p_proc
 begin
     script_overrides;
     if (party_member_obj(16777812) != 0) then begin
-        display_msg(message_str(42, random(250, 254)));
+        display_mstr(random(250, 254));
     end
     else begin
-        display_msg(message_str(42, 255));
+        display_mstr(255);
     end
 end
 
@@ -350,7 +350,7 @@ procedure use_obj_on_p_proc
 begin
     if ((obj_pid(obj_being_used_with) == 40) or (obj_pid(obj_being_used_with) == 71) or (obj_pid(obj_being_used_with) == 144) or (obj_pid(obj_being_used_with) == 273) or (obj_pid(obj_being_used_with) == 81) or (obj_pid(obj_being_used_with) == 103)) then begin
         if (party_member_obj(16777812) != 0) then begin
-            lCurrentHP := get_critter_stat(self_obj, 35);
+            lCurrentHP := get_critter_stat(self_obj, STAT_current_hp);
             if (combat_is_initialized) then begin
                 add_timer_event(self_obj, 0, 2);
             end
@@ -364,15 +364,15 @@ end
 procedure timed_event_p_proc
 begin
     if (fixed_param == 1) then begin
-        if ((get_critter_stat(self_obj, 35) * 100 / get_critter_stat(self_obj, 7)) < 30) then begin
-            float_msg(self_obj, message_str(42, 300), 8);
+        if ((get_critter_stat(self_obj, STAT_current_hp) * 100 / get_critter_stat(self_obj, STAT_max_hp)) < 30) then begin
+            float_msg(self_obj, mstr(300), FLOAT_MSG_YELLOW);
         end
-        metarule3(100, self_obj, 1, 0);
+        rm_fixed_timer_event(self_obj, 1);
         add_timer_event(self_obj, game_ticks(random(20, 40)), 1);
     end
     if (fixed_param == 2) then begin
-        if ((lCurrentHP > 0) and ((get_critter_stat(self_obj, 35) - lCurrentHP) > 0)) then begin
-            display_msg(message_str(42, 340) + (get_critter_stat(self_obj, 35) - lCurrentHP) + message_str(42, 341));
+        if ((lCurrentHP > 0) and ((get_critter_stat(self_obj, STAT_current_hp) - lCurrentHP) > 0)) then begin
+            display_msg(mstr(340) + (get_critter_stat(self_obj, STAT_current_hp) - lCurrentHP) + mstr(341));
         end
     end
     if (fixed_param == 11) then begin
@@ -393,23 +393,23 @@ end
 
 procedure map_enter_p_proc
 begin
-    if (cur_map_index == 6) then begin
-        if (elevation(self_obj) != elevation(dude_obj)) then begin
-            move_to(self_obj, tile_num(self_obj), elevation(dude_obj));
+    if (CUR_MAP_NH_VILL) then begin
+        if (elevation(self_obj) != dude_elevation) then begin
+            move_to(self_obj, tile_num(self_obj), dude_elevation);
         end
     end
     if (party_member_obj(16777812) != 0) then begin
-        critter_add_trait(self_obj, 1, 6, 0);
+        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 0);
     end
     else begin
-        critter_add_trait(self_obj, 1, 6, 288);
+        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 288);
     end
     if (not(party_member_obj(16777812) != 0) and (elevation(self_obj) == 0) and (AlbuDeath == 0)) then begin
-        if ((cur_map_index == 21) or (cur_map_index == 22) or (cur_map_index == 23) and (((15 * (60 * 10)) + global_var(905)) <= game_time)) then begin
+        if ((CUR_MAP_ALB_PRED) or (CUR_MAP_ALB_MRTV) or (CUR_MAP_ALB_LOVA) and (((15 * (60 * 10)) + global_var(GVAR_AQ_SLINTA_WAITING_TIME)) <= game_time)) then begin
             AlbuDeath := 1;
-            Hunter1 := create_object_sid(16777958, 0, 0, 1690);
-            critter_attempt_placement(Hunter1, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj));
-            restock_obj := create_object_sid(143, 0, 0, -1);
+            Hunter1 := create_object_sid(16777958, 0, 0, SCRIPT_ALOVEC2);
+            critter_attempt_placement(Hunter1, tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), elevation(self_obj));
+            restock_obj := create_object(143, 0, 0);
             add_mult_objs_to_inven(Hunter1, restock_obj, 1);
             wield_obj_critter(Hunter1, obj_carrying_pid_obj(Hunter1, 143));
             add_timer_event(Hunter1, 0, 12);
@@ -417,27 +417,27 @@ begin
             destroy_object(self_obj);
         end
     end
-    if ((party_member_obj(16777812) != 0) and (get_critter_stat(dude_obj, 4) > 3) and not(game_ui_is_disabled) and (InteligentLeave == 0)) then begin
+    if ((party_member_obj(16777812) != 0) and (dude_iq > 3) and not(game_ui_is_disabled) and (InteligentLeave == 0)) then begin
         InteligentLeave := 1;
         dialogue_system_enter;
     end
-    metarule3(100, self_obj, 1, 0);
+    rm_fixed_timer_event(self_obj, 1);
     add_timer_event(self_obj, game_ticks(random(20, 40)), 1);
 end
 
 procedure Node998
 begin
     if (party_member_obj(16777812) != 0) then begin
-        if ((global_var(1036) bwand 8) != 0) then begin
+        if ((global_var(GVAR_PERK_LEADER_PARTY) bwand 8) != 0) then begin
             if (get_ini_setting("ddraw.ini|Resurrection|Debug") > 0) then begin
                 display_msg("temp.c" + "@" + 258 + ": " + ("Disabling" + " 'leader' perk stats for '" + "Slinta" + "'."));
             end
-            set_global_var(1036, global_var(1036) bwand (-1 - 8));
+            set_global_var(GVAR_PERK_LEADER_PARTY, global_var(GVAR_PERK_LEADER_PARTY) bwand (-1 - 8));
             set_critter_extra_stat(party_member_obj(16777812), 8, get_critter_extra_stat(party_member_obj(16777812), 8) + -1);
             set_critter_extra_stat(party_member_obj(16777812), 9, get_critter_extra_stat(party_member_obj(16777812), 9) + (10 * -1));
         end
         party_remove(self_obj);
-        critter_add_trait(self_obj, 1, 6, 288);
+        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 288);
     end
     set_local_var(4, 1);
     InteligentLeave := 0;
@@ -449,116 +449,116 @@ end
 
 procedure Node800
 begin
-    gsay_reply(42, 800);
-    giq_option(-3, 42, 801, Node999, 50);
+    Reply(800);
+    giq_option(-3, NAME, 801, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node850
 begin
-    gsay_reply(42, 850);
+    Reply(850);
     if ((party_member_obj(16777729) != 0) and ((local_var(5) bwand 1) == 0)) then begin
-        giq_option(-3, 42, 851, Node1100, 50);
+        giq_option(-3, NAME, 851, Node1100, NEUTRAL_REACTION);
     end
-    giq_option(-3, 42, 852, Node950, 50);
-    giq_option(-3, 42, 853, Node900, 50);
-    giq_option(-3, 42, 854, Node999, 50);
+    giq_option(-3, NAME, 852, Node950, NEUTRAL_REACTION);
+    giq_option(-3, NAME, 853, Node900, NEUTRAL_REACTION);
+    giq_option(-3, NAME, 854, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node900
 begin
-    gsay_reply(42, 900);
-    giq_option(-3, 42, 901, Node999, 50);
-    giq_option(-3, 42, 902, REMOVE_FROM_PARTY, 50);
+    Reply(900);
+    giq_option(-3, NAME, 901, Node999, NEUTRAL_REACTION);
+    giq_option(-3, NAME, 902, REMOVE_FROM_PARTY, NEUTRAL_REACTION);
 end
 
 procedure Node950
 begin
-    gsay_reply(42, 950);
+    Reply(950);
     if (not(local_var(6) == 3)) then begin
-        giq_option(-3, 42, 951, change_dist_close, 50);
+        giq_option(-3, NAME, 951, change_dist_close, NEUTRAL_REACTION);
     end
     if (not(local_var(6) == 6)) then begin
-        giq_option(-3, 42, 952, change_dist_medium, 50);
+        giq_option(-3, NAME, 952, change_dist_medium, NEUTRAL_REACTION);
     end
     if (not(local_var(6) == 9)) then begin
-        giq_option(-3, 42, 953, change_dist_far, 50);
+        giq_option(-3, NAME, 953, change_dist_far, NEUTRAL_REACTION);
     end
-    giq_option(-3, 42, 954, Node999, 50);
+    giq_option(-3, NAME, 954, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node1000
 begin
-    if (get_critter_stat(dude_obj, 34) == 0) then begin
-        gsay_reply(42, 1000);
+    if (dude_gender == 0) then begin
+        Reply(1000);
     end
     else begin
-        gsay_reply(42, 1001);
+        Reply(1001);
     end
     if (not(local_var(6) == 3)) then begin
-        giq_option(-3, 42, 1002, change_dist_close, 50);
+        giq_option(-3, NAME, 1002, change_dist_close, NEUTRAL_REACTION);
     end
     if (not(local_var(6) == 6)) then begin
-        giq_option(-3, 42, 1003, change_dist_medium, 50);
+        giq_option(-3, NAME, 1003, change_dist_medium, NEUTRAL_REACTION);
     end
     if (not(local_var(6) == 9)) then begin
-        giq_option(-3, 42, 1004, change_dist_far, 50);
+        giq_option(-3, NAME, 1004, change_dist_far, NEUTRAL_REACTION);
     end
-    giq_option(-3, 42, 1005, Node999, 50);
+    giq_option(-3, NAME, 1005, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node1050
 begin
-    gsay_reply(42, 1050);
-    if (((metarule(16, 0) - (((global_var(910) bwand 32) != 0) and not((global_var(632) bwand 2) != 0)) - (((global_var(910) bwand 64) != 0) and not((global_var(632) bwand 4) != 0)) - (((global_var(910) bwand 128) != 0) and not((global_var(632) bwand 32) != 0)) - 1) >= (floor(get_critter_stat(dude_obj, 3) / 2) + has_trait(0, dude_obj, 98))) or ((metarule(16, 0) - (((global_var(910) bwand 32) != 0) and not((global_var(632) bwand 2) != 0)) - (((global_var(910) bwand 64) != 0) and not((global_var(632) bwand 4) != 0)) - (((global_var(910) bwand 128) != 0) and not((global_var(632) bwand 32) != 0)) - 1) >= 5)) then begin
-        giq_option(-3, 42, 1051, Node800, 50);
+    Reply(1050);
+    if (((party_member_count(DONT_LIST_HIDDEN_MEMBERS) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 2) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 4) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 32) != 0)) - 1) >= (floor(dude_charisma / 2) + has_trait(TRAIT_PERK, dude_obj, PERK_magnetic_personality_perk))) or ((party_member_count(DONT_LIST_HIDDEN_MEMBERS) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 2) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 4) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 32) != 0)) - 1) >= 5)) then begin
+        giq_option(-3, NAME, 1051, Node800, NEUTRAL_REACTION);
     end
     else begin
-        giq_option(-3, 42, 1051, JOIN_TO_PARTY, 50);
+        giq_option(-3, NAME, 1051, JOIN_TO_PARTY, NEUTRAL_REACTION);
     end
-    giq_option(-3, 42, 1052, Node999, 50);
+    giq_option(-3, NAME, 1052, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node1100
 begin
-    gsay_reply(42, 1100);
+    Reply(1100);
     set_local_var(5, local_var(5) bwor 1);
-    giq_option(-3, 42, 1101, Node999, 50);
+    giq_option(-3, NAME, 1101, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node1150
 begin
-    gsay_reply(42, 1150);
-    giq_option(4, 42, 1151, Node1200, 50);
+    Reply(1150);
+    giq_option(4, NAME, 1151, Node1200, NEUTRAL_REACTION);
 end
 
 procedure Node1200
 begin
-    gsay_reply(42, 1200);
-    giq_option(4, 42, 1201, Node998, 50);
+    Reply(1200);
+    giq_option(4, NAME, 1201, Node998, NEUTRAL_REACTION);
 end
 
 procedure JOIN_TO_PARTY
 begin
     if (not(party_member_obj(16777812) != 0)) then begin
         party_add(self_obj);
-        critter_add_trait(self_obj, 1, 6, 0);
+        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 0);
     end
 end
 
 procedure REMOVE_FROM_PARTY
 begin
-    if ((global_var(1036) bwand 8) != 0) then begin
+    if ((global_var(GVAR_PERK_LEADER_PARTY) bwand 8) != 0) then begin
         if (get_ini_setting("ddraw.ini|Resurrection|Debug") > 0) then begin
             display_msg("temp.c" + "@" + 365 + ": " + ("Disabling" + " 'leader' perk stats for '" + "Slinta" + "'."));
         end
-        set_global_var(1036, global_var(1036) bwand (-1 - 8));
+        set_global_var(GVAR_PERK_LEADER_PARTY, global_var(GVAR_PERK_LEADER_PARTY) bwand (-1 - 8));
         set_critter_extra_stat(party_member_obj(16777812), 8, get_critter_extra_stat(party_member_obj(16777812), 8) + -1);
         set_critter_extra_stat(party_member_obj(16777812), 9, get_critter_extra_stat(party_member_obj(16777812), 9) + (10 * -1));
     end
     if (party_member_obj(16777812) != 0) then begin
         party_remove(self_obj);
-        critter_add_trait(self_obj, 1, 6, 288);
-        set_global_var(905, game_time);
+        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 288);
+        set_global_var(GVAR_AQ_SLINTA_WAITING_TIME, game_time);
     end
 end
 
@@ -599,4 +599,3 @@ begin
     set_local_var(6, 9);
     call Node1000();
 end
-
