diff --git a/Mods/Resurrection/Original/VORECH.ssl b/Mods/Resurrection/ReDefine/VORECH.ssl
index 416c3fb..1502724 100644
--- a/Mods/Resurrection/Original/VORECH.ssl
+++ b/Mods/Resurrection/ReDefine/VORECH.ssl
@@ -66,12 +66,12 @@ begin
             return 1;
         end
     end
-    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
+    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
         if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
             return 1;
         end
     end
-    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
+    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
         if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
             return 1;
         end
@@ -86,7 +86,7 @@ begin
             return 1;
         end
     end
-    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
+    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
         if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
             return 1;
         end
@@ -148,10 +148,10 @@ begin
             if (anim_busy(self_obj) == 0) then begin
                 if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                     if (anim_busy(self_obj) == 0) then begin
-                        global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
+                        global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                         animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                         global_temp := (global_temp + 1) % 6;
-                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
+                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                             debug_msg("flee loop: rot == " + global_temp);
                             animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                             global_temp := (global_temp + 1) % 6;
@@ -161,37 +161,37 @@ begin
             end
         end
         else begin
-            attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
+            attack(dude_obj);
         end
     end
-    if ((party_member_obj(16777729) != 0) and (global_var(849) == 0) and ((global_var(910) bwand 32768) == 0) and ((global_var(1020) bwand 131072) == 0) and ((global_var(1020) bwand 262144) == 0) and ((global_var(910) bwand 65536) == 0) and ((global_var(910) bwand 262144) == 0) and ((global_var(910) bwand 524288) == 0)) then begin
+    if ((party_member_obj(16777729) != 0) and (global_var(GVAR_C_RING_POINTER) == 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32768) == 0) and ((global_var(GVAR_PTR_LYSTRA_REACTIONS_2) bwand 131072) == 0) and ((global_var(GVAR_PTR_LYSTRA_REACTIONS_2) bwand 262144) == 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 65536) == 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 262144) == 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 524288) == 0)) then begin
         if (local_var(5) == 0) then begin
             set_local_var(5, 6);
         end
         if (tile_distance_objs(self_obj, dude_obj) > (3 * local_var(5) / 2)) then begin
             if (tile_distance_objs(self_obj, dude_obj) > (3 * local_var(5) / 2 * 2)) then begin
-                if ((tile_num(self_obj) != tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5))) and (tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5)) != 0)) then begin
-                    if ((dest_tile == tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5))) and (step_tile < 0)) then begin
+                if ((tile_num(self_obj) != tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5))) and (tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5)) != 0)) then begin
+                    if ((dest_tile == tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5))) and (step_tile < 0)) then begin
                         step_tile := step_tile + 1;
                     end
                     else begin
                         if (anim_busy(self_obj) == 0) then begin
-                            dest_tile := tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5));
-                            step_tile := tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5));
+                            dest_tile := tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5));
+                            step_tile := tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5));
                             animate_move_obj_to_tile(self_obj, step_tile, 1);
                             debug_msg("move_to_point: self_tile == " + tile_num(self_obj));
-                            while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5))) >= tile_distance(step_tile, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5))))) do begin
+                            while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5))) >= tile_distance(step_tile, tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5))))) do begin
                                 step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), ((tile_distance_objs(dude_obj, self_obj) / 5) + 1) % tile_distance(step_tile, tile_num(self_obj)));
                                 debug_msg("move_to_point: step_tile == " + step_tile);
                                 animate_move_obj_to_tile(self_obj, step_tile, 1);
                             end
                             if (anim_busy(self_obj) == 0) then begin
-                                if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
+                                if (tile_get_next_critter(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), elevation(self_obj), 0) != 0) then begin
                                     if (anim_busy(self_obj) == 0) then begin
-                                        global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
+                                        global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                         animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                         global_temp := (global_temp + 1) % 6;
-                                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
+                                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                             debug_msg("flee loop: rot == " + global_temp);
                                             animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                             global_temp := (global_temp + 1) % 6;
@@ -204,7 +204,7 @@ begin
                             end
                         end
                         else begin
-                            if (tile_distance(tile_num(self_obj), tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5))) < tile_distance(dest_tile, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5)))) then begin
+                            if (tile_distance(tile_num(self_obj), tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5))) < tile_distance(dest_tile, tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5)))) then begin
                                 reg_anim_func(2, self_obj);
                             end
                         end
@@ -212,28 +212,28 @@ begin
                 end
             end
             else begin
-                if ((tile_num(self_obj) != tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5))) and (tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5)) != 0)) then begin
-                    if ((dest_tile == tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5))) and (step_tile < 0)) then begin
+                if ((tile_num(self_obj) != tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5))) and (tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5)) != 0)) then begin
+                    if ((dest_tile == tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5))) and (step_tile < 0)) then begin
                         step_tile := step_tile + 1;
                     end
                     else begin
                         if (anim_busy(self_obj) == 0) then begin
-                            dest_tile := tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5));
-                            step_tile := tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5));
+                            dest_tile := tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5));
+                            step_tile := tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5));
                             animate_move_obj_to_tile(self_obj, step_tile, 0);
                             debug_msg("move_to_point: self_tile == " + tile_num(self_obj));
-                            while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5))) >= tile_distance(step_tile, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5))))) do begin
+                            while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5))) >= tile_distance(step_tile, tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5))))) do begin
                                 step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), ((tile_distance_objs(dude_obj, self_obj) / 5) + 1) % tile_distance(step_tile, tile_num(self_obj)));
                                 debug_msg("move_to_point: step_tile == " + step_tile);
                                 animate_move_obj_to_tile(self_obj, step_tile, 0);
                             end
                             if (anim_busy(self_obj) == 0) then begin
-                                if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
+                                if (tile_get_next_critter(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), elevation(self_obj), 0) != 0) then begin
                                     if (anim_busy(self_obj) == 0) then begin
-                                        global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
+                                        global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                         animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                         global_temp := (global_temp + 1) % 6;
-                                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
+                                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                             debug_msg("flee loop: rot == " + global_temp);
                                             animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                             global_temp := (global_temp + 1) % 6;
@@ -246,7 +246,7 @@ begin
                             end
                         end
                         else begin
-                            if (tile_distance(tile_num(self_obj), tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5))) < tile_distance(dest_tile, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5)))) then begin
+                            if (tile_distance(tile_num(self_obj), tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5))) < tile_distance(dest_tile, tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5)))) then begin
                                 reg_anim_func(2, self_obj);
                             end
                         end
@@ -255,29 +255,29 @@ begin
             end
         end
     end
-    if ((cur_map_index == 25) and ((global_var(910) bwand 524288) != 0) and ((tile_num(self_obj) == 25905) or (tile_num(self_obj) == 26105) or (tile_num(self_obj) == 25883) or (tile_num(self_obj) == 26083))) then begin
-        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), random(3, 10)), 0);
+    if ((CUR_MAP_ALB_CISA) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 524288) != 0) and ((tile_num(self_obj) == 25905) or (tile_num(self_obj) == 26105) or (tile_num(self_obj) == 25883) or (tile_num(self_obj) == 26083))) then begin
+        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(dude_tile, tile_num(self_obj)), random(3, 10)), 0);
     end
     if (party_member_obj(16777729) != 0) then begin
-        if (has_trait(0, dude_obj, 44) and (party_member_obj(16777729) != 0) and not((global_var(1036) bwand 1) != 0)) then begin
+        if (has_trait(TRAIT_PERK, dude_obj, PERK_animal_friend) and (party_member_obj(16777729) != 0) and not((global_var(GVAR_PERK_LEADER_PARTY) bwand 1) != 0)) then begin
             if (get_ini_setting("ddraw.ini|Resurrection|Debug") > 0) then begin
                 display_msg("temp.c" + "@" + 111 + ": " + ("Enabling" + " 'leader' perk stats for '" + "Vorech" + "'."));
             end
-            set_global_var(1036, global_var(1036) bwor 1);
+            set_global_var(GVAR_PERK_LEADER_PARTY, global_var(GVAR_PERK_LEADER_PARTY) bwor 1);
             set_critter_extra_stat(party_member_obj(16777729), 8, get_critter_extra_stat(party_member_obj(16777729), 8) + 1);
             set_critter_extra_stat(party_member_obj(16777729), 9, get_critter_extra_stat(party_member_obj(16777729), 9) + (10 * 1));
         end
         global_temp := global_temp;
     end
     if (local_var(6) == 0) then begin
-        set_local_var(6, get_pc_stat(1));
+        set_local_var(6, get_pc_stat(PCSTAT_level));
     end
     if (party_member_obj(16777729) != 0) then begin
-        if (((local_var(6) + 2) <= get_pc_stat(1)) and (local_var(7) < 6)) then begin
-            set_local_var(6, get_pc_stat(1));
+        if (((local_var(6) + 2) <= get_pc_stat(PCSTAT_level)) and (local_var(7) < 6)) then begin
+            set_local_var(6, get_pc_stat(PCSTAT_level));
             set_local_var(7, local_var(7) + 1);
-            float_msg(self_obj, message_str(28, 310), 9);
-            display_msg(message_str(28, 311));
+            float_msg(self_obj, mstr(310), FLOAT_MSG_WHITE);
+            display_mstr(311);
             call LEVELING();
         end
     end
@@ -289,20 +289,20 @@ end
 
 procedure talk_p_proc
 begin
-    if ((global_var(910) bwand 1024) != 0) then begin
-        display_msg(message_str(28, 312));
+    if ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 1024) != 0) then begin
+        display_mstr(312);
     end
     else begin
         if (not(combat_is_initialized)) then begin
-            anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
-            anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
+            anim(dude_obj, 1000, rotation_to_tile(dude_tile, tile_num(self_obj)));
+            anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
             start_gdialog(28, self_obj, 4, -1, -1);
             gsay_start;
             if (party_member_obj(16777729) != 0) then begin
                 call Node1650();
             end
             else begin
-                if ((get_critter_stat(dude_obj, 4) + has_trait(0, dude_obj, 49)) > 3) then begin
+                if ((dude_iq + has_trait(TRAIT_PERK, dude_obj, PERK_smooth_talker)) > 3) then begin
                     call Node1800();
                 end
                 else begin
@@ -317,7 +317,7 @@ end
 
 procedure destroy_p_proc
 begin
-    set_global_var(1042, self_obj);
+    set_global_var(GVAR_DEAD_PARTYMEMBER, self_obj);
     terminate_combat;
     add_timer_event(dude_obj, 0, 4);
 end
@@ -325,25 +325,25 @@ end
 procedure look_at_p_proc
 begin
     script_overrides;
-    display_msg(message_str(28, 150));
+    display_mstr(150);
 end
 
 procedure description_p_proc
 begin
     script_overrides;
     if (not(party_member_obj(16777729) != 0)) then begin
-        display_msg(message_str(28, 257));
+        display_mstr(257);
     end
     else begin
-        if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
-            display_msg(message_str(28, random(251, 256)));
+        if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
+            display_mstr(random(251, 256));
         end
         else begin
             if (party_member_obj(16777812) != 0) then begin
-                display_msg(message_str(28, random(250, 255)));
+                display_mstr(random(250, 255));
             end
             else begin
-                display_msg(message_str(28, random(251, 255)));
+                display_mstr(random(251, 255));
             end
         end
     end
@@ -357,7 +357,7 @@ procedure use_obj_on_p_proc
 begin
     if ((obj_pid(obj_being_used_with) == 40) or (obj_pid(obj_being_used_with) == 71) or (obj_pid(obj_being_used_with) == 144) or (obj_pid(obj_being_used_with) == 273) or (obj_pid(obj_being_used_with) == 81) or (obj_pid(obj_being_used_with) == 103)) then begin
         if (party_member_obj(16777729) != 0) then begin
-            lCurrentHP := get_critter_stat(self_obj, 35);
+            lCurrentHP := get_critter_stat(self_obj, STAT_current_hp);
             if (combat_is_initialized) then begin
                 add_timer_event(self_obj, 0, 2);
             end
@@ -381,38 +381,38 @@ end
 
 procedure map_enter_p_proc
 begin
-    if (cur_map_index == 6) then begin
-        if (elevation(self_obj) != elevation(dude_obj)) then begin
-            move_to(self_obj, tile_num(self_obj), elevation(dude_obj));
+    if (CUR_MAP_NH_VILL) then begin
+        if (elevation(self_obj) != dude_elevation) then begin
+            move_to(self_obj, tile_num(self_obj), dude_elevation);
         end
     end
-    if ((global_var(910) bwand 1024) != 0) then begin
-        critter_add_trait(self_obj, 1, 6, 256);
+    if ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 1024) != 0) then begin
+        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 256);
     end
     else begin
         if (party_member_obj(16777729) != 0) then begin
-            critter_add_trait(self_obj, 1, 6, 0);
+            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 0);
         end
         else begin
-            critter_add_trait(self_obj, 1, 6, 289);
+            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 289);
         end
     end
-    metarule3(100, self_obj, 1, 0);
+    rm_fixed_timer_event(self_obj, 1);
     add_timer_event(self_obj, game_ticks(random(20, 40)), 1);
 end
 
 procedure timed_event_p_proc
 begin
     if (fixed_param == 1) then begin
-        if ((get_critter_stat(self_obj, 35) * 100 / get_critter_stat(self_obj, 7)) < 30) then begin
-            float_msg(self_obj, message_str(28, 305), 8);
+        if ((get_critter_stat(self_obj, STAT_current_hp) * 100 / get_critter_stat(self_obj, STAT_max_hp)) < 30) then begin
+            float_msg(self_obj, mstr(305), FLOAT_MSG_YELLOW);
         end
-        metarule3(100, self_obj, 1, 0);
+        rm_fixed_timer_event(self_obj, 1);
         add_timer_event(self_obj, game_ticks(random(20, 40)), 1);
     end
     if (fixed_param == 2) then begin
-        if ((lCurrentHP > 0) and ((get_critter_stat(self_obj, 35) - lCurrentHP) > 0)) then begin
-            display_msg(message_str(28, 340) + (get_critter_stat(self_obj, 35) - lCurrentHP) + message_str(28, 341));
+        if ((lCurrentHP > 0) and ((get_critter_stat(self_obj, STAT_current_hp) - lCurrentHP) > 0)) then begin
+            display_msg(mstr(340) + (get_critter_stat(self_obj, STAT_current_hp) - lCurrentHP) + mstr(341));
         end
     end
     if (fixed_param == 11) then begin
@@ -422,13 +422,13 @@ end
 
 procedure combat_p_proc
 begin
-    if (global_var(849) != 0) then begin
+    if (global_var(GVAR_C_RING_POINTER) != 0) then begin
         script_overrides;
     end
     else begin
         if (fixed_param == 4) then begin
             if (random(1, 10) == 5) then begin
-                float_msg(self_obj, message_str(28, random(350, 355)), 2);
+                float_msg(self_obj, mstr(random(350, 355)), FLOAT_MSG_RED);
             end
         end
     end
@@ -440,133 +440,133 @@ end
 
 procedure Node1650
 begin
-    gsay_reply(28, 1650);
-    giq_option(4, 28, 1651, Node1900, 50);
-    giq_option(4, 28, 1652, Node1700, 50);
-    giq_option(4, 28, 1653, Node999, 50);
-    giq_option(-3, 28, 1654, Node2050, 50);
-    giq_option(-3, 28, 1655, Node1700, 50);
-    giq_option(-3, 28, 1656, Node999, 50);
+    Reply(1650);
+    giq_option(4, NAME, 1651, Node1900, NEUTRAL_REACTION);
+    giq_option(4, NAME, 1652, Node1700, NEUTRAL_REACTION);
+    giq_option(4, NAME, 1653, Node999, NEUTRAL_REACTION);
+    giq_option(-3, NAME, 1654, Node2050, NEUTRAL_REACTION);
+    giq_option(-3, NAME, 1655, Node1700, NEUTRAL_REACTION);
+    giq_option(-3, NAME, 1656, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node1700
 begin
-    gsay_reply(28, 1700);
-    giq_option(4, 28, 1701, Node1750, 50);
-    giq_option(4, 28, 1702, REMOVE_FROM_PARTY, 50);
-    giq_option(-3, 28, 1703, Node1750, 50);
-    giq_option(-3, 28, 1704, REMOVE_FROM_PARTY, 50);
+    Reply(1700);
+    giq_option(4, NAME, 1701, Node1750, NEUTRAL_REACTION);
+    giq_option(4, NAME, 1702, REMOVE_FROM_PARTY, NEUTRAL_REACTION);
+    giq_option(-3, NAME, 1703, Node1750, NEUTRAL_REACTION);
+    giq_option(-3, NAME, 1704, REMOVE_FROM_PARTY, NEUTRAL_REACTION);
 end
 
 procedure Node1750
 begin
-    gsay_reply(28, 1750);
+    Reply(1750);
     if (not(party_member_obj(16777729) != 0)) then begin
         call JOIN_TO_PARTY();
     end
-    giq_option(4, 28, 1751, Node999, 50);
-    giq_option(-3, 28, 1752, Node999, 50);
+    giq_option(4, NAME, 1751, Node999, NEUTRAL_REACTION);
+    giq_option(-3, NAME, 1752, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node1800
 begin
-    gsay_reply(28, 1800);
-    if (((metarule(16, 0) - (((global_var(910) bwand 32) != 0) and not((global_var(632) bwand 2) != 0)) - (((global_var(910) bwand 64) != 0) and not((global_var(632) bwand 4) != 0)) - (((global_var(910) bwand 128) != 0) and not((global_var(632) bwand 32) != 0)) - 1) >= (floor(get_critter_stat(dude_obj, 3) / 2) + has_trait(0, dude_obj, 98))) or ((metarule(16, 0) - (((global_var(910) bwand 32) != 0) and not((global_var(632) bwand 2) != 0)) - (((global_var(910) bwand 64) != 0) and not((global_var(632) bwand 4) != 0)) - (((global_var(910) bwand 128) != 0) and not((global_var(632) bwand 32) != 0)) - 1) >= 5)) then begin
-        giq_option(4, 28, 1801, Node1850, 50);
+    Reply(1800);
+    if (((party_member_count(DONT_LIST_HIDDEN_MEMBERS) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 2) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 4) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 32) != 0)) - 1) >= (floor(dude_charisma / 2) + has_trait(TRAIT_PERK, dude_obj, PERK_magnetic_personality_perk))) or ((party_member_count(DONT_LIST_HIDDEN_MEMBERS) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 2) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 4) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 32) != 0)) - 1) >= 5)) then begin
+        giq_option(4, NAME, 1801, Node1850, NEUTRAL_REACTION);
     end
     else begin
-        giq_option(4, 28, 1801, Node1750, 50);
+        giq_option(4, NAME, 1801, Node1750, NEUTRAL_REACTION);
     end
-    giq_option(4, 28, 1802, Node999, 50);
+    giq_option(4, NAME, 1802, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node1850
 begin
-    gsay_reply(28, 1850);
-    giq_option(4, 28, 1851, Node999, 50);
-    giq_option(-3, 28, 1852, Node999, 50);
+    Reply(1850);
+    giq_option(4, NAME, 1851, Node999, NEUTRAL_REACTION);
+    giq_option(-3, NAME, 1852, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node1900
 begin
-    gsay_reply(28, 1900);
+    Reply(1900);
     if (not(local_var(5) == 3)) then begin
-        giq_option(4, 28, 1901, change_dist_close, 50);
+        giq_option(4, NAME, 1901, change_dist_close, NEUTRAL_REACTION);
     end
     if (not(local_var(5) == 6)) then begin
-        giq_option(4, 28, 1902, change_dist_medium, 50);
+        giq_option(4, NAME, 1902, change_dist_medium, NEUTRAL_REACTION);
     end
     if (not(local_var(5) == 9)) then begin
-        giq_option(4, 28, 1903, change_dist_far, 50);
+        giq_option(4, NAME, 1903, change_dist_far, NEUTRAL_REACTION);
     end
-    giq_option(4, 28, 1904, Node999, 50);
+    giq_option(4, NAME, 1904, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node1950
 begin
-    if (get_critter_stat(dude_obj, 34) == 0) then begin
-        gsay_reply(28, 1950);
+    if (dude_gender == 0) then begin
+        Reply(1950);
     end
     else begin
-        gsay_reply(28, 1951);
+        Reply(1951);
     end
     if (not(local_var(5) == 3)) then begin
-        giq_option(4, 28, 1952, change_dist_close, 50);
+        giq_option(4, NAME, 1952, change_dist_close, NEUTRAL_REACTION);
     end
     if (not(local_var(5) == 6)) then begin
-        giq_option(4, 28, 1953, change_dist_medium, 50);
+        giq_option(4, NAME, 1953, change_dist_medium, NEUTRAL_REACTION);
     end
     if (not(local_var(5) == 9)) then begin
-        giq_option(4, 28, 1954, change_dist_far, 50);
+        giq_option(4, NAME, 1954, change_dist_far, NEUTRAL_REACTION);
     end
-    giq_option(4, 28, 1955, Node999, 50);
+    giq_option(4, NAME, 1955, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node2000
 begin
-    gsay_reply(28, 2000);
-    if (((metarule(16, 0) - (((global_var(910) bwand 32) != 0) and not((global_var(632) bwand 2) != 0)) - (((global_var(910) bwand 64) != 0) and not((global_var(632) bwand 4) != 0)) - (((global_var(910) bwand 128) != 0) and not((global_var(632) bwand 32) != 0)) - 1) >= (floor(get_critter_stat(dude_obj, 3) / 2) + has_trait(0, dude_obj, 98))) or ((metarule(16, 0) - (((global_var(910) bwand 32) != 0) and not((global_var(632) bwand 2) != 0)) - (((global_var(910) bwand 64) != 0) and not((global_var(632) bwand 4) != 0)) - (((global_var(910) bwand 128) != 0) and not((global_var(632) bwand 32) != 0)) - 1) >= 5)) then begin
-        giq_option(-3, 28, 2001, Node1850, 50);
+    Reply(2000);
+    if (((party_member_count(DONT_LIST_HIDDEN_MEMBERS) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 2) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 4) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 32) != 0)) - 1) >= (floor(dude_charisma / 2) + has_trait(TRAIT_PERK, dude_obj, PERK_magnetic_personality_perk))) or ((party_member_count(DONT_LIST_HIDDEN_MEMBERS) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 2) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 4) != 0)) - (((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) != 0) and not((global_var(GVAR_PARTY_MEMBERS_HIDDEN) bwand 32) != 0)) - 1) >= 5)) then begin
+        giq_option(-3, NAME, 2001, Node1850, NEUTRAL_REACTION);
     end
     else begin
-        giq_option(-3, 28, 2001, Node1750, 50);
+        giq_option(-3, NAME, 2001, Node1750, NEUTRAL_REACTION);
     end
-    giq_option(-3, 28, 2002, Node999, 50);
+    giq_option(-3, NAME, 2002, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node2050
 begin
-    gsay_reply(28, 2050);
+    Reply(2050);
     if (not(local_var(5) == 3)) then begin
-        giq_option(-3, 28, 2051, change_dist_close, 50);
+        giq_option(-3, NAME, 2051, change_dist_close, NEUTRAL_REACTION);
     end
     if (not(local_var(5) == 6)) then begin
-        giq_option(-3, 28, 2052, change_dist_medium, 50);
+        giq_option(-3, NAME, 2052, change_dist_medium, NEUTRAL_REACTION);
     end
     if (not(local_var(5) == 9)) then begin
-        giq_option(-3, 28, 2053, change_dist_far, 50);
+        giq_option(-3, NAME, 2053, change_dist_far, NEUTRAL_REACTION);
     end
-    giq_option(-3, 28, 2054, Node999, 50);
+    giq_option(-3, NAME, 2054, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node2100
 begin
-    if (get_critter_stat(dude_obj, 34) == 0) then begin
-        gsay_reply(28, 2100);
+    if (dude_gender == 0) then begin
+        Reply(2100);
     end
     else begin
-        gsay_reply(28, 2101);
+        Reply(2101);
     end
     if (not(local_var(5) == 3)) then begin
-        giq_option(-3, 28, 2102, change_dist_close, 50);
+        giq_option(-3, NAME, 2102, change_dist_close, NEUTRAL_REACTION);
     end
     if (not(local_var(5) == 6)) then begin
-        giq_option(-3, 28, 2103, change_dist_medium, 50);
+        giq_option(-3, NAME, 2103, change_dist_medium, NEUTRAL_REACTION);
     end
     if (not(local_var(5) == 9)) then begin
-        giq_option(-3, 28, 2104, change_dist_far, 50);
+        giq_option(-3, NAME, 2104, change_dist_far, NEUTRAL_REACTION);
     end
-    giq_option(-3, 28, 2105, Node999, 50);
+    giq_option(-3, NAME, 2105, Node999, NEUTRAL_REACTION);
 end
 
 procedure JOIN_TO_PARTY
@@ -574,23 +574,23 @@ begin
     set_local_var(4, 0);
     if (not(party_member_obj(16777729) != 0)) then begin
         party_add(self_obj);
-        critter_add_trait(self_obj, 1, 6, 0);
+        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 0);
     end
 end
 
 procedure REMOVE_FROM_PARTY
 begin
-    if ((global_var(1036) bwand 1) != 0) then begin
+    if ((global_var(GVAR_PERK_LEADER_PARTY) bwand 1) != 0) then begin
         if (get_ini_setting("ddraw.ini|Resurrection|Debug") > 0) then begin
             display_msg("temp.c" + "@" + 378 + ": " + ("Disabling" + " 'leader' perk stats for '" + "Vorech" + "'."));
         end
-        set_global_var(1036, global_var(1036) bwand (-1 - 1));
+        set_global_var(GVAR_PERK_LEADER_PARTY, global_var(GVAR_PERK_LEADER_PARTY) bwand (-1 - 1));
         set_critter_extra_stat(party_member_obj(16777729), 8, get_critter_extra_stat(party_member_obj(16777729), 8) + -1);
         set_critter_extra_stat(party_member_obj(16777729), 9, get_critter_extra_stat(party_member_obj(16777729), 9) + (10 * -1));
     end
     if (party_member_obj(16777729) != 0) then begin
         party_remove(self_obj);
-        critter_add_trait(self_obj, 1, 6, 289);
+        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 289);
     end
     if (local_var(4) == 1) then begin
         set_local_var(4, 0);
@@ -620,7 +620,7 @@ end
 procedure change_dist_close
 begin
     set_local_var(5, 3);
-    if ((get_critter_stat(dude_obj, 4) + has_trait(0, dude_obj, 49)) > 3) then begin
+    if ((dude_iq + has_trait(TRAIT_PERK, dude_obj, PERK_smooth_talker)) > 3) then begin
         call Node1950();
     end
     else begin
@@ -631,7 +631,7 @@ end
 procedure change_dist_medium
 begin
     set_local_var(5, 6);
-    if ((get_critter_stat(dude_obj, 4) + has_trait(0, dude_obj, 49)) > 3) then begin
+    if ((dude_iq + has_trait(TRAIT_PERK, dude_obj, PERK_smooth_talker)) > 3) then begin
         call Node1950();
     end
     else begin
@@ -642,11 +642,10 @@ end
 procedure change_dist_far
 begin
     set_local_var(5, 9);
-    if ((get_critter_stat(dude_obj, 4) + has_trait(0, dude_obj, 49)) > 3) then begin
+    if ((dude_iq + has_trait(TRAIT_PERK, dude_obj, PERK_smooth_talker)) > 3) then begin
         call Node1950();
     end
     else begin
         call Node2100();
     end
 end
-
