diff --git a/Mods/Resurrection/Original/GSECROB.ssl b/Mods/Resurrection/ReDefine/GSECROB.ssl
index 3363298..92191d4 100644
--- a/Mods/Resurrection/Original/GSECROB.ssl
+++ b/Mods/Resurrection/ReDefine/GSECROB.ssl
@@ -70,12 +70,12 @@ begin
             return 1;
         end
     end
-    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
+    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
         if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
             return 1;
         end
     end
-    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
+    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
         if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
             return 1;
         end
@@ -90,7 +90,7 @@ begin
             return 1;
         end
     end
-    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
+    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
         if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
             return 1;
         end
@@ -148,34 +148,34 @@ end
 procedure critter_p_proc
 begin
     if (party_member_obj(16777294) != 0) then begin
-        if (((local_var(6) != 0) == 0) and ((global_var(398) != 0) == 0)) then begin
+        if (((local_var(6) != 0) == 0) and ((global_var(GVAR_PARTY_NO_FOLLOW) != 0) == 0)) then begin
             if (local_var(5) == 0) then begin
                 set_local_var(5, 6);
             end
             if (tile_distance_objs(self_obj, dude_obj) > (3 * local_var(5) / 2)) then begin
                 if (tile_distance_objs(self_obj, dude_obj) > (3 * local_var(5) / 2 * 2)) then begin
-                    if ((tile_num(self_obj) != tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5))) and (tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5)) != 0)) then begin
-                        if ((dest_tile == tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5))) and (step_tile < 0)) then begin
+                    if ((tile_num(self_obj) != tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5))) and (tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5)) != 0)) then begin
+                        if ((dest_tile == tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5))) and (step_tile < 0)) then begin
                             step_tile := step_tile + 1;
                         end
                         else begin
                             if (anim_busy(self_obj) == 0) then begin
-                                dest_tile := tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5));
-                                step_tile := tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5));
+                                dest_tile := tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5));
+                                step_tile := tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5));
                                 animate_move_obj_to_tile(self_obj, step_tile, 1);
                                 debug_msg("move_to_point: self_tile == " + tile_num(self_obj));
-                                while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5))) >= tile_distance(step_tile, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5))))) do begin
+                                while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5))) >= tile_distance(step_tile, tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5))))) do begin
                                     step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), ((tile_distance_objs(dude_obj, self_obj) / 5) + 1) % tile_distance(step_tile, tile_num(self_obj)));
                                     debug_msg("move_to_point: step_tile == " + step_tile);
                                     animate_move_obj_to_tile(self_obj, step_tile, 1);
                                 end
                                 if (anim_busy(self_obj) == 0) then begin
-                                    if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
+                                    if (tile_get_next_critter(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), elevation(self_obj), 0) != 0) then begin
                                         if (anim_busy(self_obj) == 0) then begin
-                                            global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
+                                            global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                             animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                             global_temp := (global_temp + 1) % 6;
-                                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
+                                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                 debug_msg("flee loop: rot == " + global_temp);
                                                 animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                 global_temp := (global_temp + 1) % 6;
@@ -188,7 +188,7 @@ begin
                                 end
                             end
                             else begin
-                                if (tile_distance(tile_num(self_obj), tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5))) < tile_distance(dest_tile, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5)))) then begin
+                                if (tile_distance(tile_num(self_obj), tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5))) < tile_distance(dest_tile, tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5)))) then begin
                                     reg_anim_func(2, self_obj);
                                 end
                             end
@@ -196,28 +196,28 @@ begin
                     end
                 end
                 else begin
-                    if ((tile_num(self_obj) != tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5))) and (tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5)) != 0)) then begin
-                        if ((dest_tile == tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5))) and (step_tile < 0)) then begin
+                    if ((tile_num(self_obj) != tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5))) and (tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5)) != 0)) then begin
+                        if ((dest_tile == tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5))) and (step_tile < 0)) then begin
                             step_tile := step_tile + 1;
                         end
                         else begin
                             if (anim_busy(self_obj) == 0) then begin
-                                dest_tile := tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5));
-                                step_tile := tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5));
+                                dest_tile := tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5));
+                                step_tile := tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5));
                                 animate_move_obj_to_tile(self_obj, step_tile, 0);
                                 debug_msg("move_to_point: self_tile == " + tile_num(self_obj));
-                                while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5))) >= tile_distance(step_tile, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5))))) do begin
+                                while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5))) >= tile_distance(step_tile, tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5))))) do begin
                                     step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), ((tile_distance_objs(dude_obj, self_obj) / 5) + 1) % tile_distance(step_tile, tile_num(self_obj)));
                                     debug_msg("move_to_point: step_tile == " + step_tile);
                                     animate_move_obj_to_tile(self_obj, step_tile, 0);
                                 end
                                 if (anim_busy(self_obj) == 0) then begin
-                                    if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
+                                    if (tile_get_next_critter(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), elevation(self_obj), 0) != 0) then begin
                                         if (anim_busy(self_obj) == 0) then begin
-                                            global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
+                                            global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                             animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                             global_temp := (global_temp + 1) % 6;
-                                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
+                                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), obj_get_rot(self_obj), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                 debug_msg("flee loop: rot == " + global_temp);
                                                 animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                 global_temp := (global_temp + 1) % 6;
@@ -230,7 +230,7 @@ begin
                                 end
                             end
                             else begin
-                                if (tile_distance(tile_num(self_obj), tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5))) < tile_distance(dest_tile, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5)))) then begin
+                                if (tile_distance(tile_num(self_obj), tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5))) < tile_distance(dest_tile, tile_num_in_direction(dude_tile, rotation_to_tile(dude_tile, tile_num(self_obj)), local_var(5)))) then begin
                                     reg_anim_func(2, self_obj);
                                 end
                             end
@@ -255,43 +255,43 @@ end
 
 procedure talk_p_proc
 begin
-    if (get_critter_stat(dude_obj, 4) < 4) then begin
-        display_msg(message_str(437, 300));
+    if (dude_iq < 4) then begin
+        display_mstr(300);
     end
     else begin
-        anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
+        anim(dude_obj, 1000, rotation_to_tile(dude_tile, tile_num(self_obj)));
         if (party_member_obj(16777294) != 0) then begin
-            anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
+            anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
         end
         start_gdialog(437, self_obj, 4, -1, -1);
         gsay_start;
-        if ((global_var(938) == 1) and (map_var(6) == 0) and (dialog_loop == 0)) then begin
+        if ((global_var(GVAR_G_PERSONAL_ROBO) == 1) and (map_var(6) == 0) and (dialog_loop == 0)) then begin
             dialog_loop := 1;
             call Node650();
         end
-        if ((global_var(938) == 1) and (map_var(6) == 1) and (dialog_loop == 0)) then begin
+        if ((global_var(GVAR_G_PERSONAL_ROBO) == 1) and (map_var(6) == 1) and (dialog_loop == 0)) then begin
             dialog_loop := 1;
             call Node700();
         end
-        if ((global_var(938) == 2) and (dialog_loop == 0)) then begin
+        if ((global_var(GVAR_G_PERSONAL_ROBO) == 2) and (dialog_loop == 0)) then begin
             dialog_loop := 1;
             call Node850();
         end
-        if ((global_var(938) == 3) and ((local_var(4) bwand 64) == 0) and (dialog_loop == 0)) then begin
+        if ((global_var(GVAR_G_PERSONAL_ROBO) == 3) and ((local_var(4) bwand 64) == 0) and (dialog_loop == 0)) then begin
             dialog_loop := 1;
             call Node1250();
         end
-        if ((global_var(938) == 3) and (party_member_obj(16777294) != 0) and (dialog_loop == 0)) then begin
+        if ((global_var(GVAR_G_PERSONAL_ROBO) == 3) and (party_member_obj(16777294) != 0) and (dialog_loop == 0)) then begin
             dialog_loop := 1;
             call Node1300();
         end
-        if ((global_var(938) == 3) and (dialog_loop == 0) and not(party_member_obj(16777294) != 0)) then begin
+        if ((global_var(GVAR_G_PERSONAL_ROBO) == 3) and (dialog_loop == 0) and not(party_member_obj(16777294) != 0)) then begin
             dialog_loop := 1;
             call Node1450();
         end
         if (dialog_loop == 0) then begin
             dialog_loop := 1;
-            if (get_critter_stat(dude_obj, 1) > 4) then begin
+            if (dude_perception > 4) then begin
                 call Node500();
             end
             else begin
@@ -307,41 +307,41 @@ end
 procedure look_at_p_proc
 begin
     script_overrides;
-    display_msg(message_str(437, 100));
+    display_mstr(100);
 end
 
 procedure description_p_proc
 begin
     script_overrides;
     if (party_member_obj(16777294) != 0) then begin
-        display_msg(message_str(437, 201));
+        display_mstr(201);
     end
     else begin
-        display_msg(message_str(437, 200));
+        display_mstr(200);
     end
 end
 
 procedure timed_event_p_proc
 begin
     if (fixed_param == 1) then begin
-        critter_attempt_placement(self_obj, tile_num_in_direction(tile_num(dude_obj), has_trait(1, dude_obj, 10), 2), elevation(dude_obj));
+        critter_attempt_placement(self_obj, tile_num_in_direction(dude_tile, obj_get_rot(dude_obj), 2), dude_elevation);
     end
 end
 
 procedure map_enter_p_proc
 begin
     if (local_var(7) == 1) then begin
-        critter_add_trait(self_obj, 1, 6, 0);
+        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 0);
     end
     else begin
-        critter_add_trait(self_obj, 1, 5, 180);
-        critter_add_trait(self_obj, 1, 6, 277);
+        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_PEASANT_NO_MOVE);
+        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 277);
     end
-    if (cur_map_index == 30) then begin
+    if (CUR_MAP_GHOUL0) then begin
         set_obj_visibility(self_obj, 1);
     end
-    if (cur_map_index == 31) then begin
-        if (not(has_trait(1, self_obj, 666))) then begin
+    if (CUR_MAP_GHOUL13) then begin
+        if (not(obj_is_visible_flag(self_obj))) then begin
             set_obj_visibility(self_obj, 0);
             add_timer_event(self_obj, 1, 1);
         end
@@ -358,7 +358,7 @@ end
 
 procedure destroy_p_proc
 begin
-    set_global_var(1042, self_obj);
+    set_global_var(GVAR_DEAD_PARTYMEMBER, self_obj);
     terminate_combat;
     add_timer_event(dude_obj, 0, 4);
 end
@@ -369,54 +369,54 @@ end
 
 procedure Node999_5HB_down
 begin
-    critter_dmg(dude_obj, 5, 0);
+    critter_damage(dude_obj, 5);
 end
 
 procedure Node500
 begin
-    gsay_reply(437, 500);
+    Reply(500);
     if ((local_var(4) bwand 1) == 0) then begin
-        giq_option(4, 437, 501, Node600, 50);
+        giq_option(4, NAME, 501, Node600, NEUTRAL_REACTION);
     end
-    giq_option(4, 437, 502, Node999, 50);
+    giq_option(4, NAME, 502, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node550
 begin
-    gsay_reply(437, 550);
-    giq_option(4, 437, 551, Node999, 50);
+    Reply(550);
+    giq_option(4, NAME, 551, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node600
 begin
-    gsay_reply(437, 600);
+    Reply(600);
     set_local_var(4, local_var(4) bwor 1);
-    giq_option(4, 437, 601, Node999, 50);
+    giq_option(4, NAME, 601, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node650
 begin
-    gsay_reply(437, 650);
-    giq_option(4, 437, 651, Node999, 50);
+    Reply(650);
+    giq_option(4, NAME, 651, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node700
 begin
-    gsay_reply(437, 700);
+    Reply(700);
     if (obj_carrying_pid_obj(dude_obj, 364)) then begin
-        if ((get_critter_stat(dude_obj, 34) == 0) and ((local_var(4) bwand 2) == 0)) then begin
-            giq_option(4, 437, 701, Node750, 50);
+        if ((dude_gender == 0) and ((local_var(4) bwand 2) == 0)) then begin
+            giq_option(4, NAME, 701, Node750, NEUTRAL_REACTION);
         end
-        if ((get_critter_stat(dude_obj, 34) == 1) and ((local_var(4) bwand 4) == 0)) then begin
-            giq_option(4, 437, 701, Node800, 50);
+        if ((dude_gender == 1) and ((local_var(4) bwand 4) == 0)) then begin
+            giq_option(4, NAME, 701, Node800, NEUTRAL_REACTION);
         end
     end
-    giq_option(4, 437, 702, Node999, 50);
+    giq_option(4, NAME, 702, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node750
 begin
-    gsay_reply(437, 750);
+    Reply(750);
     set_local_var(4, local_var(4) bwor 2);
     removed_qty := obj_is_carrying_obj_pid(dude_obj, 364);
     if (1 < removed_qty) then begin
@@ -426,17 +426,17 @@ begin
         restock_obj := obj_carrying_pid_obj(dude_obj, 364);
         if (obj_type(self_obj) == 1) then begin
             restock_obj := obj_carrying_pid_obj(dude_obj, 364);
-            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
-                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
-                    restock_obj := critter_inven_obj(dude_obj, 0);
+            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
+                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
+                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                     debug_msg("armour pid == " + obj_pid(restock_obj));
                     rm_obj_from_inven(dude_obj, restock_obj);
                     add_obj_to_inven(dude_obj, restock_obj);
                 end
             end
             else begin
-                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
-                    metarule(43, dude_obj);
+                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
+                    inven_unwield(dude_obj);
                 end
             end
         end
@@ -456,12 +456,12 @@ begin
     end
     restock_obj := 0;
     restock_amt := 0;
-    giq_option(4, 437, 751, Node999_5HB_down, 50);
+    giq_option(4, NAME, 751, Node999_5HB_down, NEUTRAL_REACTION);
 end
 
 procedure Node800
 begin
-    gsay_reply(437, 800);
+    Reply(800);
     set_local_var(4, local_var(4) bwor 4);
     removed_qty := obj_is_carrying_obj_pid(dude_obj, 364);
     if (1 < removed_qty) then begin
@@ -471,17 +471,17 @@ begin
         restock_obj := obj_carrying_pid_obj(dude_obj, 364);
         if (obj_type(self_obj) == 1) then begin
             restock_obj := obj_carrying_pid_obj(dude_obj, 364);
-            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
-                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
-                    restock_obj := critter_inven_obj(dude_obj, 0);
+            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
+                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
+                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                     debug_msg("armour pid == " + obj_pid(restock_obj));
                     rm_obj_from_inven(dude_obj, restock_obj);
                     add_obj_to_inven(dude_obj, restock_obj);
                 end
             end
             else begin
-                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
-                    metarule(43, dude_obj);
+                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
+                    inven_unwield(dude_obj);
                 end
             end
         end
@@ -501,27 +501,27 @@ begin
     end
     restock_obj := 0;
     restock_amt := 0;
-    giq_option(4, 437, 801, Node999_5HB_down, 50);
+    giq_option(4, NAME, 801, Node999_5HB_down, NEUTRAL_REACTION);
 end
 
 procedure Node850
 begin
-    gsay_reply(437, 850);
-    if ((has_skill(dude_obj, 13) > 125) and obj_carrying_pid_obj(dude_obj, 551) and ((local_var(4) bwand 8) == 0)) then begin
-        giq_option(4, 437, 851, Node900, 50);
+    Reply(850);
+    if ((dude_skill(SKILL_REPAIR) > 125) and obj_carrying_pid_obj(dude_obj, 551) and ((local_var(4) bwand 8) == 0)) then begin
+        giq_option(4, NAME, 851, Node900, NEUTRAL_REACTION);
     end
-    if ((has_skill(dude_obj, 13) > 125) and obj_carrying_pid_obj(dude_obj, 364) and ((local_var(4) bwand 16) == 0)) then begin
-        giq_option(4, 437, 852, Node950, 50);
+    if ((dude_skill(SKILL_REPAIR) > 125) and obj_carrying_pid_obj(dude_obj, 364) and ((local_var(4) bwand 16) == 0)) then begin
+        giq_option(4, NAME, 852, Node950, NEUTRAL_REACTION);
     end
-    if ((has_skill(dude_obj, 13) > 125) and obj_carrying_pid_obj(dude_obj, 12) and ((local_var(4) bwand 32) == 0)) then begin
-        giq_option(4, 437, 853, Node1000, 50);
+    if ((dude_skill(SKILL_REPAIR) > 125) and obj_carrying_pid_obj(dude_obj, 12) and ((local_var(4) bwand 32) == 0)) then begin
+        giq_option(4, NAME, 853, Node1000, NEUTRAL_REACTION);
     end
-    giq_option(4, 437, 854, Node999, 50);
+    giq_option(4, NAME, 854, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node900
 begin
-    gsay_reply(437, 900 + (get_critter_stat(dude_obj, 34) == 1));
+    Reply(900 + (dude_gender == 1));
     set_local_var(4, local_var(4) bwor 8);
     removed_qty := obj_is_carrying_obj_pid(dude_obj, 551);
     if (1 < removed_qty) then begin
@@ -531,17 +531,17 @@ begin
         restock_obj := obj_carrying_pid_obj(dude_obj, 551);
         if (obj_type(self_obj) == 1) then begin
             restock_obj := obj_carrying_pid_obj(dude_obj, 551);
-            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
-                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
-                    restock_obj := critter_inven_obj(dude_obj, 0);
+            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
+                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
+                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                     debug_msg("armour pid == " + obj_pid(restock_obj));
                     rm_obj_from_inven(dude_obj, restock_obj);
                     add_obj_to_inven(dude_obj, restock_obj);
                 end
             end
             else begin
-                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
-                    metarule(43, dude_obj);
+                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
+                    inven_unwield(dude_obj);
                 end
             end
         end
@@ -562,26 +562,26 @@ begin
     restock_obj := 0;
     restock_amt := 0;
     give_exp_points(200);
-    display_msg(message_str(14, 100) + 200 + message_str(14, 101));
+    display_msg(g_mstr(100) + 200 + g_mstr(101));
     if (not(((local_var(4) bwand 8) == 0) or ((local_var(4) bwand 16) == 0) or ((local_var(4) bwand 32) == 0))) then begin
-        critter_heal(self_obj, get_critter_stat(self_obj, 7) - get_critter_stat(self_obj, 35));
-        set_global_var(938, 3);
+        critter_heal(self_obj, get_critter_stat(self_obj, STAT_max_hp) - get_critter_stat(self_obj, STAT_current_hp));
+        set_global_var(GVAR_G_PERSONAL_ROBO, 3);
     end
-    if ((has_skill(dude_obj, 13) > 125) and obj_carrying_pid_obj(dude_obj, 364) and ((local_var(4) bwand 16) == 0)) then begin
-        giq_option(4, 437, 852, Node950, 50);
+    if ((dude_skill(SKILL_REPAIR) > 125) and obj_carrying_pid_obj(dude_obj, 364) and ((local_var(4) bwand 16) == 0)) then begin
+        giq_option(4, NAME, 852, Node950, NEUTRAL_REACTION);
     end
-    if ((has_skill(dude_obj, 13) > 125) and obj_carrying_pid_obj(dude_obj, 12) and ((local_var(4) bwand 32) == 0)) then begin
-        giq_option(4, 437, 853, Node1000, 50);
+    if ((dude_skill(SKILL_REPAIR) > 125) and obj_carrying_pid_obj(dude_obj, 12) and ((local_var(4) bwand 32) == 0)) then begin
+        giq_option(4, NAME, 853, Node1000, NEUTRAL_REACTION);
     end
-    if (global_var(938) == 3) then begin
-        giq_option(4, 437, 904, Robo_party_add, 50);
+    if (global_var(GVAR_G_PERSONAL_ROBO) == 3) then begin
+        giq_option(4, NAME, 904, Robo_party_add, NEUTRAL_REACTION);
     end
-    giq_option(4, 437, 905, Node999, 50);
+    giq_option(4, NAME, 905, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node950
 begin
-    gsay_reply(437, 950 + (get_critter_stat(dude_obj, 34) == 1));
+    Reply(950 + (dude_gender == 1));
     set_local_var(4, local_var(4) bwor 16);
     removed_qty := obj_is_carrying_obj_pid(dude_obj, 364);
     if (1 < removed_qty) then begin
@@ -591,17 +591,17 @@ begin
         restock_obj := obj_carrying_pid_obj(dude_obj, 364);
         if (obj_type(self_obj) == 1) then begin
             restock_obj := obj_carrying_pid_obj(dude_obj, 364);
-            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
-                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
-                    restock_obj := critter_inven_obj(dude_obj, 0);
+            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
+                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
+                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                     debug_msg("armour pid == " + obj_pid(restock_obj));
                     rm_obj_from_inven(dude_obj, restock_obj);
                     add_obj_to_inven(dude_obj, restock_obj);
                 end
             end
             else begin
-                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
-                    metarule(43, dude_obj);
+                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
+                    inven_unwield(dude_obj);
                 end
             end
         end
@@ -622,26 +622,26 @@ begin
     restock_obj := 0;
     restock_amt := 0;
     give_exp_points(200);
-    display_msg(message_str(14, 100) + 200 + message_str(14, 101));
+    display_msg(g_mstr(100) + 200 + g_mstr(101));
     if (not(((local_var(4) bwand 8) == 0) or ((local_var(4) bwand 16) == 0) or ((local_var(4) bwand 32) == 0))) then begin
-        critter_heal(self_obj, get_critter_stat(self_obj, 7) - get_critter_stat(self_obj, 35));
-        set_global_var(938, 3);
+        critter_heal(self_obj, get_critter_stat(self_obj, STAT_max_hp) - get_critter_stat(self_obj, STAT_current_hp));
+        set_global_var(GVAR_G_PERSONAL_ROBO, 3);
     end
-    if ((has_skill(dude_obj, 13) > 125) and obj_carrying_pid_obj(dude_obj, 551) and ((local_var(4) bwand 8) == 0)) then begin
-        giq_option(4, 437, 851, Node900, 50);
+    if ((dude_skill(SKILL_REPAIR) > 125) and obj_carrying_pid_obj(dude_obj, 551) and ((local_var(4) bwand 8) == 0)) then begin
+        giq_option(4, NAME, 851, Node900, NEUTRAL_REACTION);
     end
-    if ((has_skill(dude_obj, 13) > 125) and obj_carrying_pid_obj(dude_obj, 12) and ((local_var(4) bwand 32) == 0)) then begin
-        giq_option(4, 437, 853, Node1000, 50);
+    if ((dude_skill(SKILL_REPAIR) > 125) and obj_carrying_pid_obj(dude_obj, 12) and ((local_var(4) bwand 32) == 0)) then begin
+        giq_option(4, NAME, 853, Node1000, NEUTRAL_REACTION);
     end
-    if (global_var(938) == 3) then begin
-        giq_option(4, 437, 904, Robo_party_add, 50);
+    if (global_var(GVAR_G_PERSONAL_ROBO) == 3) then begin
+        giq_option(4, NAME, 904, Robo_party_add, NEUTRAL_REACTION);
     end
-    giq_option(4, 437, 905, Node999, 50);
+    giq_option(4, NAME, 905, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node1000
 begin
-    gsay_reply(437, 1000 + (get_critter_stat(dude_obj, 34) == 1));
+    Reply(1000 + (dude_gender == 1));
     set_local_var(4, local_var(4) bwor 32);
     removed_qty := obj_is_carrying_obj_pid(dude_obj, 12);
     if (1 < removed_qty) then begin
@@ -651,17 +651,17 @@ begin
         restock_obj := obj_carrying_pid_obj(dude_obj, 12);
         if (obj_type(self_obj) == 1) then begin
             restock_obj := obj_carrying_pid_obj(dude_obj, 12);
-            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
-                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
-                    restock_obj := critter_inven_obj(dude_obj, 0);
+            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
+                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
+                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                     debug_msg("armour pid == " + obj_pid(restock_obj));
                     rm_obj_from_inven(dude_obj, restock_obj);
                     add_obj_to_inven(dude_obj, restock_obj);
                 end
             end
             else begin
-                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
-                    metarule(43, dude_obj);
+                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
+                    inven_unwield(dude_obj);
                 end
             end
         end
@@ -682,85 +682,85 @@ begin
     restock_obj := 0;
     restock_amt := 0;
     give_exp_points(200);
-    display_msg(message_str(14, 100) + 200 + message_str(14, 101));
+    display_msg(g_mstr(100) + 200 + g_mstr(101));
     if (not(((local_var(4) bwand 8) == 0) or ((local_var(4) bwand 16) == 0) or ((local_var(4) bwand 32) == 0))) then begin
-        critter_heal(self_obj, get_critter_stat(self_obj, 7) - get_critter_stat(self_obj, 35));
-        set_global_var(938, 3);
+        critter_heal(self_obj, get_critter_stat(self_obj, STAT_max_hp) - get_critter_stat(self_obj, STAT_current_hp));
+        set_global_var(GVAR_G_PERSONAL_ROBO, 3);
     end
-    if ((has_skill(dude_obj, 13) > 125) and obj_carrying_pid_obj(dude_obj, 551) and ((local_var(4) bwand 8) == 0)) then begin
-        giq_option(4, 437, 851, Node900, 50);
+    if ((dude_skill(SKILL_REPAIR) > 125) and obj_carrying_pid_obj(dude_obj, 551) and ((local_var(4) bwand 8) == 0)) then begin
+        giq_option(4, NAME, 851, Node900, NEUTRAL_REACTION);
     end
-    if ((has_skill(dude_obj, 13) > 125) and obj_carrying_pid_obj(dude_obj, 364) and ((local_var(4) bwand 16) == 0)) then begin
-        giq_option(4, 437, 852, Node950, 50);
+    if ((dude_skill(SKILL_REPAIR) > 125) and obj_carrying_pid_obj(dude_obj, 364) and ((local_var(4) bwand 16) == 0)) then begin
+        giq_option(4, NAME, 852, Node950, NEUTRAL_REACTION);
     end
-    if (global_var(938) == 3) then begin
-        giq_option(4, 437, 904, Robo_party_add, 50);
+    if (global_var(GVAR_G_PERSONAL_ROBO) == 3) then begin
+        giq_option(4, NAME, 904, Robo_party_add, NEUTRAL_REACTION);
     end
-    giq_option(4, 437, 905, Node999, 50);
+    giq_option(4, NAME, 905, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node1250
 begin
-    gsay_reply(437, 1250);
-    giq_option(4, 437, 1251, Robo_party_add, 50);
-    giq_option(4, 437, 1252, Node999, 50);
+    Reply(1250);
+    giq_option(4, NAME, 1251, Robo_party_add, NEUTRAL_REACTION);
+    giq_option(4, NAME, 1252, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node1300
 begin
-    gsay_reply(437, 1300);
+    Reply(1300);
     if ((local_var(4) bwand 64) == 0) then begin
         give_exp_points(2000);
-        display_msg(message_str(14, 100) + 2000 + message_str(14, 101));
+        display_msg(g_mstr(100) + 2000 + g_mstr(101));
     end
     set_local_var(4, local_var(4) bwor 64);
-    giq_option(4, 437, 1301, Node1350, 50);
-    giq_option(4, 437, 1302, Robo_party_remove, 50);
-    giq_option(4, 437, 1303, Node999, 50);
+    giq_option(4, NAME, 1301, Node1350, NEUTRAL_REACTION);
+    giq_option(4, NAME, 1302, Robo_party_remove, NEUTRAL_REACTION);
+    giq_option(4, NAME, 1303, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node1350
 begin
-    gsay_reply(437, 1350);
+    Reply(1350);
     if (local_var(5) != 3) then begin
-        giq_option(4, 437, 1351, Follow_me_close, 50);
+        giq_option(4, NAME, 1351, Follow_me_close, NEUTRAL_REACTION);
     end
     if (local_var(5) != 6) then begin
-        giq_option(4, 437, 1352, Follow_me_medium, 50);
+        giq_option(4, NAME, 1352, Follow_me_medium, NEUTRAL_REACTION);
     end
     if (local_var(5) != 9) then begin
-        giq_option(4, 437, 1353, Follow_me_far, 50);
+        giq_option(4, NAME, 1353, Follow_me_far, NEUTRAL_REACTION);
     end
-    giq_option(4, 437, 1354, Node999, 50);
+    giq_option(4, NAME, 1354, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node1400
 begin
-    gsay_reply(437, 1400);
+    Reply(1400);
     if (local_var(5) != 3) then begin
-        giq_option(4, 437, 1401, Follow_me_close, 50);
+        giq_option(4, NAME, 1401, Follow_me_close, NEUTRAL_REACTION);
     end
     if (local_var(5) != 6) then begin
-        giq_option(4, 437, 1402, Follow_me_medium, 50);
+        giq_option(4, NAME, 1402, Follow_me_medium, NEUTRAL_REACTION);
     end
     if (local_var(5) != 9) then begin
-        giq_option(4, 437, 1403, Follow_me_far, 50);
+        giq_option(4, NAME, 1403, Follow_me_far, NEUTRAL_REACTION);
     end
-    giq_option(4, 437, 1404, Node999, 50);
+    giq_option(4, NAME, 1404, Node999, NEUTRAL_REACTION);
 end
 
 procedure Node1450
 begin
-    gsay_reply(437, 1450);
-    giq_option(4, 437, 1451, Robo_party_add, 50);
-    giq_option(4, 437, 1452, Node999, 50);
+    Reply(1450);
+    giq_option(4, NAME, 1451, Robo_party_add, NEUTRAL_REACTION);
+    giq_option(4, NAME, 1452, Node999, NEUTRAL_REACTION);
 end
 
 procedure Robo_party_add
 begin
     party_add(self_obj);
-    critter_add_trait(self_obj, 1, 5, 32);
-    critter_add_trait(self_obj, 1, 6, 0);
+    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_TOUGH_BOT);
+    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 0);
     set_local_var(7, 1);
     call Node1300();
 end
@@ -768,8 +768,8 @@ end
 procedure Robo_party_remove
 begin
     party_remove(party_member_obj(16777294));
-    critter_add_trait(self_obj, 1, 5, 180);
-    critter_add_trait(self_obj, 1, 6, 277);
+    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_PEASANT_NO_MOVE);
+    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 277);
     set_local_var(7, 0);
 end
 
@@ -790,4 +790,3 @@ begin
     set_local_var(5, 9);
     call Node1400();
 end
-
