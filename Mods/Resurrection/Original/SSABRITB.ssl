variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;

import variable Sabrina;
import variable Sabrina_table;

procedure timed_event_p_proc;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
    Sabrina_table := self_obj;
end

procedure use_p_proc
begin
end

procedure look_at_p_proc
begin
end

procedure description_p_proc
begin
end

procedure use_skill_on_p_proc
begin
end

procedure use_obj_on_p_proc
begin
end

procedure damage_p_proc
begin
end

procedure map_enter_p_proc
begin
    if (Sabrina and (Sabrina != -1) and (global_var(769) != 1)) then begin
        if ((game_time < 0) and (local_var(4) > 0)) then begin
            set_local_var(4, game_time - 1);
        end
        if (local_var(4) < game_time) then begin
            item_caps_adjust(self_obj, random(600, 800) - item_caps_total(self_obj));
            restock_amt := random(1, 1);
            if (obj_is_carrying_obj_pid(self_obj, 22) < restock_amt) then begin
                if (100 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 22) < restock_amt) then begin
                        restock_obj := create_object_sid(22, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 22));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 22) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 22);
                            if ((obj_is_carrying_obj_pid(self_obj, 22) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 22) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 22);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 22);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 22) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 22)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 22);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 22) < restock_amt) then begin
                    restock_obj := create_object_sid(22, 0, 0, -1);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 22));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 22) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 22);
                        if ((obj_is_carrying_obj_pid(self_obj, 22) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 22) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 22);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 22);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        metarule(43, self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 22) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 22)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 22);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(1, 1);
            if (obj_is_carrying_obj_pid(self_obj, 18) < restock_amt) then begin
                if (100 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 18) < restock_amt) then begin
                        restock_obj := create_object_sid(18, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 18));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 18) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 18);
                            if ((obj_is_carrying_obj_pid(self_obj, 18) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 18) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 18);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 18);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 18) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 18)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 18);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 18) < restock_amt) then begin
                    restock_obj := create_object_sid(18, 0, 0, -1);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 18));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 18) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 18);
                        if ((obj_is_carrying_obj_pid(self_obj, 18) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 18) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 18);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 18);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        metarule(43, self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 18) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 18)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 18);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(1, 1);
            if (obj_is_carrying_obj_pid(self_obj, 143) < restock_amt) then begin
                if (60 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 143) < restock_amt) then begin
                        restock_obj := create_object_sid(143, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 143));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 143) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 143);
                            if ((obj_is_carrying_obj_pid(self_obj, 143) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 143) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 143);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 143);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 143) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 143)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 143);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 143) < restock_amt) then begin
                    restock_obj := create_object_sid(143, 0, 0, -1);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 143));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 143) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 143);
                        if ((obj_is_carrying_obj_pid(self_obj, 143) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 143) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 143);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 143);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        metarule(43, self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 143) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 143)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 143);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(1, 1);
            if (obj_is_carrying_obj_pid(self_obj, 23) < restock_amt) then begin
                if (100 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 23) < restock_amt) then begin
                        restock_obj := create_object_sid(23, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 23));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 23) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 23);
                            if ((obj_is_carrying_obj_pid(self_obj, 23) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 23) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 23);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 23);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 23) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 23)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 23);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 23) < restock_amt) then begin
                    restock_obj := create_object_sid(23, 0, 0, -1);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 23));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 23) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 23);
                        if ((obj_is_carrying_obj_pid(self_obj, 23) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 23) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 23);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 23);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        metarule(43, self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 23) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 23)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 23);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(1, 1);
            if (obj_is_carrying_obj_pid(self_obj, 9) < restock_amt) then begin
                if (100 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 9) < restock_amt) then begin
                        restock_obj := create_object_sid(9, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 9));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 9) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 9);
                            if ((obj_is_carrying_obj_pid(self_obj, 9) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 9) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 9);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 9);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 9) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 9)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 9);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 9) < restock_amt) then begin
                    restock_obj := create_object_sid(9, 0, 0, -1);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 9));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 9) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 9);
                        if ((obj_is_carrying_obj_pid(self_obj, 9) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 9) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 9);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 9);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        metarule(43, self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 9) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 9)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 9);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(1, 1);
            if (obj_is_carrying_obj_pid(self_obj, 94) < restock_amt) then begin
                if (100 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 94) < restock_amt) then begin
                        restock_obj := create_object_sid(94, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 94));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 94) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 94);
                            if ((obj_is_carrying_obj_pid(self_obj, 94) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 94) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 94);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 94);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 94) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 94)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 94);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 94) < restock_amt) then begin
                    restock_obj := create_object_sid(94, 0, 0, -1);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 94));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 94) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 94);
                        if ((obj_is_carrying_obj_pid(self_obj, 94) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 94) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 94);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 94);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        metarule(43, self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 94) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 94)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 94);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(1, 1);
            if (obj_is_carrying_obj_pid(self_obj, 242) < restock_amt) then begin
                if (60 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 242) < restock_amt) then begin
                        restock_obj := create_object_sid(242, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 242));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 242) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 242);
                            if ((obj_is_carrying_obj_pid(self_obj, 242) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 242) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 242);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 242);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 242) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 242)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 242);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 242) < restock_amt) then begin
                    restock_obj := create_object_sid(242, 0, 0, -1);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 242));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 242) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 242);
                        if ((obj_is_carrying_obj_pid(self_obj, 242) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 242) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 242);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 242);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        metarule(43, self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 242) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 242)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 242);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(4, 7);
            if (obj_is_carrying_obj_pid(self_obj, 25) < restock_amt) then begin
                if (100 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 25) < restock_amt) then begin
                        restock_obj := create_object_sid(25, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 25));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 25) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 25);
                            if ((obj_is_carrying_obj_pid(self_obj, 25) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 25) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 25);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 25);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 25) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 25)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 25);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 25) < restock_amt) then begin
                    restock_obj := create_object_sid(25, 0, 0, -1);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 25));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 25) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 25);
                        if ((obj_is_carrying_obj_pid(self_obj, 25) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 25) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 25);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 25);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        metarule(43, self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 25) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 25)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 25);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(7, 9);
            if (obj_is_carrying_obj_pid(self_obj, 45) < restock_amt) then begin
                if (90 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 45) < restock_amt) then begin
                        restock_obj := create_object_sid(45, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 45));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 45) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 45);
                            if ((obj_is_carrying_obj_pid(self_obj, 45) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 45) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 45);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 45);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 45) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 45)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 45);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 45) < restock_amt) then begin
                    restock_obj := create_object_sid(45, 0, 0, -1);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 45));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 45) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 45);
                        if ((obj_is_carrying_obj_pid(self_obj, 45) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 45) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 45);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 45);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        metarule(43, self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 45) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 45)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 45);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(1, 1);
            if (obj_is_carrying_obj_pid(self_obj, 236) < restock_amt) then begin
                if (100 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 236) < restock_amt) then begin
                        restock_obj := create_object_sid(236, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 236));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 236) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 236);
                            if ((obj_is_carrying_obj_pid(self_obj, 236) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 236) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 236);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 236);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 236) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 236)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 236);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 236) < restock_amt) then begin
                    restock_obj := create_object_sid(236, 0, 0, -1);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 236));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 236) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 236);
                        if ((obj_is_carrying_obj_pid(self_obj, 236) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 236) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 236);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 236);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        metarule(43, self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 236) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 236)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 236);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(1, 1);
            if (obj_is_carrying_obj_pid(self_obj, 6) < restock_amt) then begin
                if (70 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 6) < restock_amt) then begin
                        restock_obj := create_object_sid(6, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 6));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 6) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 6);
                            if ((obj_is_carrying_obj_pid(self_obj, 6) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 6) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 6);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 6);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 6) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 6)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 6);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 6) < restock_amt) then begin
                    restock_obj := create_object_sid(6, 0, 0, -1);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 6));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 6) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 6);
                        if ((obj_is_carrying_obj_pid(self_obj, 6) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 6) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 6);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 6);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        metarule(43, self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 6) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 6)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 6);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(1, 1);
            if (obj_is_carrying_obj_pid(self_obj, 21) < restock_amt) then begin
                if (80 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 21) < restock_amt) then begin
                        restock_obj := create_object_sid(21, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 21));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 21) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 21);
                            if ((obj_is_carrying_obj_pid(self_obj, 21) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 21) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 21);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 21);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 21) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 21)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 21);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 21) < restock_amt) then begin
                    restock_obj := create_object_sid(21, 0, 0, -1);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 21));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 21) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 21);
                        if ((obj_is_carrying_obj_pid(self_obj, 21) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 21) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 21);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 21);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        metarule(43, self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 21) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 21)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 21);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(4, 6);
            if (obj_is_carrying_obj_pid(self_obj, 29) < restock_amt) then begin
                if (100 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 29) < restock_amt) then begin
                        restock_obj := create_object_sid(29, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 29));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 29) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 29);
                            if ((obj_is_carrying_obj_pid(self_obj, 29) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 29) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 29);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 29);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 29) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 29)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 29);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 29) < restock_amt) then begin
                    restock_obj := create_object_sid(29, 0, 0, -1);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 29));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 29) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 29);
                        if ((obj_is_carrying_obj_pid(self_obj, 29) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 29) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 29);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 29);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        metarule(43, self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 29) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 29)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 29);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(2, 4);
            if (obj_is_carrying_obj_pid(self_obj, 30) < restock_amt) then begin
                if (100 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 30) < restock_amt) then begin
                        restock_obj := create_object_sid(30, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 30));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 30) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 30);
                            if ((obj_is_carrying_obj_pid(self_obj, 30) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 30) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 30);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 30);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 30) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 30)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 30);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 30) < restock_amt) then begin
                    restock_obj := create_object_sid(30, 0, 0, -1);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 30));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 30) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 30);
                        if ((obj_is_carrying_obj_pid(self_obj, 30) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 30) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 30);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 30);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        metarule(43, self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 30) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 30)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 30);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(3, 5);
            if (obj_is_carrying_obj_pid(self_obj, 33) < restock_amt) then begin
                if (100 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 33) < restock_amt) then begin
                        restock_obj := create_object_sid(33, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 33));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 33) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 33);
                            if ((obj_is_carrying_obj_pid(self_obj, 33) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 33) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 33);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 33);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 33) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 33)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 33);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 33) < restock_amt) then begin
                    restock_obj := create_object_sid(33, 0, 0, -1);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 33));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 33) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 33);
                        if ((obj_is_carrying_obj_pid(self_obj, 33) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 33) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 33);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 33);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        metarule(43, self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 33) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 33)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 33);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(3, 5);
            if (obj_is_carrying_obj_pid(self_obj, 34) < restock_amt) then begin
                if (100 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 34) < restock_amt) then begin
                        restock_obj := create_object_sid(34, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 34));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 34) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 34);
                            if ((obj_is_carrying_obj_pid(self_obj, 34) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 34) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 34);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 34);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 34) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 34)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 34);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 34) < restock_amt) then begin
                    restock_obj := create_object_sid(34, 0, 0, -1);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 34));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 34) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 34);
                        if ((obj_is_carrying_obj_pid(self_obj, 34) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 34) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 34);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 34);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        metarule(43, self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 34) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 34)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 34);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(4, 6);
            if (obj_is_carrying_obj_pid(self_obj, 31) < restock_amt) then begin
                if (100 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 31) < restock_amt) then begin
                        restock_obj := create_object_sid(31, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 31));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 31) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 31);
                            if ((obj_is_carrying_obj_pid(self_obj, 31) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 31) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 31);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 31);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 31) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 31)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 31);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 31) < restock_amt) then begin
                    restock_obj := create_object_sid(31, 0, 0, -1);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 31));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 31) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 31);
                        if ((obj_is_carrying_obj_pid(self_obj, 31) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 31) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 31);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 31);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        metarule(43, self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 31) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 31)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 31);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(2, 4);
            if (obj_is_carrying_obj_pid(self_obj, 111) < restock_amt) then begin
                if (100 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 111) < restock_amt) then begin
                        restock_obj := create_object_sid(111, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 111));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 111) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 111);
                            if ((obj_is_carrying_obj_pid(self_obj, 111) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 111) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 111);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 111);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 111) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 111)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 111);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 111) < restock_amt) then begin
                    restock_obj := create_object_sid(111, 0, 0, -1);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 111));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 111) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 111);
                        if ((obj_is_carrying_obj_pid(self_obj, 111) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 111) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 111);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 111);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        metarule(43, self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 111) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 111)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 111);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(4, 6);
            if (obj_is_carrying_obj_pid(self_obj, 35) < restock_amt) then begin
                if (100 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 35) < restock_amt) then begin
                        restock_obj := create_object_sid(35, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 35));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 35) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 35);
                            if ((obj_is_carrying_obj_pid(self_obj, 35) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 35) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 35);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 35);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 35) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 35)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 35);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 35) < restock_amt) then begin
                    restock_obj := create_object_sid(35, 0, 0, -1);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 35));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 35) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 35);
                        if ((obj_is_carrying_obj_pid(self_obj, 35) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 35) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 35);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 35);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        metarule(43, self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 35) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 35)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 35);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(2, 4);
            if (obj_is_carrying_obj_pid(self_obj, 36) < restock_amt) then begin
                if (100 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 36) < restock_amt) then begin
                        restock_obj := create_object_sid(36, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 36));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 36) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 36);
                            if ((obj_is_carrying_obj_pid(self_obj, 36) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 36) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 36);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 36);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 36) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 36)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 36);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 36) < restock_amt) then begin
                    restock_obj := create_object_sid(36, 0, 0, -1);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 36));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 36) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 36);
                        if ((obj_is_carrying_obj_pid(self_obj, 36) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 36) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 36);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 36);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        metarule(43, self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 36) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 36)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 36);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(3, 5);
            if (obj_is_carrying_obj_pid(self_obj, 95) < restock_amt) then begin
                if (100 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 95) < restock_amt) then begin
                        restock_obj := create_object_sid(95, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 95));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 95) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 95);
                            if ((obj_is_carrying_obj_pid(self_obj, 95) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 95) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 95);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 95);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 95) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 95)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 95);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 95) < restock_amt) then begin
                    restock_obj := create_object_sid(95, 0, 0, -1);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 95));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 95) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 95);
                        if ((obj_is_carrying_obj_pid(self_obj, 95) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 95) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 95);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 95);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        metarule(43, self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 95) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 95)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 95);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(1, 1);
            if (obj_is_carrying_obj_pid(self_obj, 1) < restock_amt) then begin
                if (50 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 1) < restock_amt) then begin
                        restock_obj := create_object_sid(1, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 1));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 1) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 1);
                            if ((obj_is_carrying_obj_pid(self_obj, 1) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 1) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 1);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 1);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 1) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 1)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 1);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 1) < restock_amt) then begin
                    restock_obj := create_object_sid(1, 0, 0, -1);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 1));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 1) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 1);
                        if ((obj_is_carrying_obj_pid(self_obj, 1) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 1) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 1);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 1);
                                if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, 0);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                        metarule(43, self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 1) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 1)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 1);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            set_local_var(4, (random(7, 14) * (24 * (60 * (60 * 10)))) + game_time);
            if ((game_time < 0) and (local_var(4) > 0)) then begin
                set_local_var(4, 0);
            end
        end
    end
end

procedure map_update_p_proc
begin
end

procedure timed_event_p_proc
begin
end

