variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node998;
procedure Node999;
procedure Node999_LEAVE;
procedure Node500;
procedure Node550;
procedure Node600;
procedure Node650;
procedure Node700;
procedure Node750;
procedure Node800;
procedure Node850;
procedure Node900;
procedure Node950;
procedure Node1000;
procedure Node1050;
procedure Node1100;
procedure Node1150;
procedure Node1200;
procedure Node1250;
procedure Node1300;
procedure Node1350;
procedure Node1400;
procedure Node1450;
procedure Node1500;
procedure Node1550;
procedure Node1600;
procedure Node1650;
procedure Node1700;
procedure Node1750;
procedure Node1800;
procedure Node1850;
procedure Node1900;
procedure Node1950;
procedure Node2000;
procedure Bigger_reward;
procedure Bigger_reward2;
procedure Bigger_reward3;
procedure Bertrayed_Combat;
procedure Gravedigging;
procedure Give_Reward;

import variable Grave1;
import variable Grave2;
import variable Grave3;
import variable Grave4;
import variable Grave5;
import variable Grave6;
import variable Grave7;
import variable Grave8;
import variable Grave9;
import variable Grave10;
import variable Grave11;
import variable Grave12;
import variable Grave13;
import variable Grave14;
import variable Grave15;
import variable Grave16;
import variable Grave17;
import variable Grave18;
import variable Grave19;
import variable Grave20;
import variable Hrobnik_obj;
import variable Gravedigger_obj;

variable leaver;
variable sequence;
variable probability;
variable only_once;
variable waiting_counter;
variable fade_done;
variable capsamount;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
    Gravedigger_obj := self_obj;
end

procedure critter_p_proc
begin
    if (((local_var(6) bwand 512) != 0) and (has_trait(1, self_obj, 666) == 1)) then begin
        set_obj_visibility(self_obj, 1);
    end
    if ((global_var(829) == 1) and ((local_var(6) bwand 64) == 0)) then begin
        probability := random(0, 10);
        probability := probability + get_critter_stat(dude_obj, 6);
        if ((probability >= 1) or (waiting_counter > 3)) then begin
            set_local_var(6, local_var(6) bwor 32);
            waiting_counter := 0;
        end
        else begin
            set_local_var(6, local_var(6) bwand (-1 - 32));
            waiting_counter := waiting_counter + 1;
        end
        set_local_var(10, game_time);
        set_local_var(6, local_var(6) bwor 64);
    end
    if (global_var(829) == 1) then begin
        if ((local_var(7) == 0) and (local_var(9) != 5) and ((local_var(6) bwand 32) != 0)) then begin
            if ((game_time_hour >= 2300) or (game_time_hour < 100) and ((local_var(6) bwand 128) == 0)) then begin
                if (not((local_var(6) bwand 256) != 0)) then begin
                    set_local_var(6, local_var(6) bwor 256);
                end
                if (has_trait(1, self_obj, 666) == 0) then begin
                    set_obj_visibility(self_obj, 0);
                end
            end
            else begin
                if ((local_var(6) bwand 256) != 0) then begin
                    set_local_var(6, local_var(6) bwand (-1 - 256));
                end
                if (has_trait(1, self_obj, 666) == 1) then begin
                    set_obj_visibility(self_obj, 1);
                end
            end
        end
        if (((game_time - local_var(8)) >= (24 * (60 * (60 * 10)) * 1)) and ((local_var(6) bwand 1) != 0) and ((local_var(6) bwand 16) == 0)) then begin
            set_local_var(6, local_var(6) bwand (-1 - 128));
        end
        if (has_trait(1, self_obj, 666) == 1) then begin
            if ((local_var(4) == 1) and obj_can_see_obj(self_obj, dude_obj)) then begin
                if (critter_is_fleeing(self_obj)) then begin
                    if (anim_busy(self_obj) == 0) then begin
                        if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                            if (anim_busy(self_obj) == 0) then begin
                                global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                global_temp := (global_temp + 1) % 6;
                                while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                                    debug_msg("flee loop: rot == " + global_temp);
                                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                    global_temp := (global_temp + 1) % 6;
                                end
                            end
                        end
                    end
                end
                else begin
                    attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
                end
            end
            if ((local_var(6) bwand 2) == 0) then begin
                animate_move_obj_to_tile(self_obj, 24309, 0);
                if (tile_num(self_obj) == 24309) then begin
                    anim(self_obj, 1000, 5);
                    set_local_var(6, local_var(6) bwor 2);
                end
            end
            if (((local_var(6) bwand 1) != 0) and (local_var(5) != 1)) then begin
                animate_move_obj_to_tile(self_obj, 23127, 0);
                if (tile_in_tile_rect(22526, 22522, 23526, 23522, tile_num(self_obj)) and (only_once == 0)) then begin
                    add_timer_event(self_obj, game_ticks(1), 1);
                    only_once := 1;
                end
            end
            if (local_var(7) == 2) then begin
                call talk_p_proc();
            end
            if ((local_var(4) != 1) and obj_can_see_obj(self_obj, dude_obj) and ((local_var(6) bwand 8) == 0) and (local_var(7) == 0) and (local_var(5) != 1) and (tile_distance(tile_num(self_obj), tile_num(dude_obj)) <= 5)) then begin
                call talk_p_proc();
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(4, 1);
    end
end

procedure talk_p_proc
begin
    set_map_var(1, 0);
    add_timer_event(Grave1, 0, 5);
    add_timer_event(Grave2, 0, 5);
    add_timer_event(Grave3, 0, 5);
    add_timer_event(Grave4, 0, 5);
    add_timer_event(Grave5, 0, 5);
    add_timer_event(Grave6, 0, 5);
    add_timer_event(Grave7, 0, 5);
    add_timer_event(Grave8, 0, 5);
    add_timer_event(Grave9, 0, 5);
    add_timer_event(Grave10, 0, 5);
    add_timer_event(Grave11, 0, 5);
    add_timer_event(Grave12, 0, 5);
    add_timer_event(Grave13, 0, 5);
    add_timer_event(Grave14, 0, 5);
    add_timer_event(Grave15, 0, 5);
    add_timer_event(Grave16, 0, 5);
    add_timer_event(Grave17, 0, 5);
    add_timer_event(Grave18, 0, 5);
    add_timer_event(Grave19, 0, 5);
    add_timer_event(Grave20, 0, 5);
    if (tile_in_tile_rect(21519, 21500, 28719, 28700, tile_num(self_obj)) and (has_trait(1, self_obj, 666) == 1)) then begin
        if ((local_var(6) bwand 8) == 0) then begin
            anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
            anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
            start_gdialog(1543, self_obj, 4, -1, -1);
            gsay_start;
            if (local_var(5) != 1) then begin
                if ((local_var(6) bwand 1) != 0) then begin
                    call Node1150();
                end
                else begin
                    if (get_critter_stat(dude_obj, 34) == 0) then begin
                        call Node500();
                    end
                    if (get_critter_stat(dude_obj, 34) == 1) then begin
                        call Node1200();
                    end
                end
            end
            else begin
                if ((get_critter_stat(dude_obj, 4) + has_trait(0, dude_obj, 49)) > 3) then begin
                    if (local_var(7) == 2) then begin
                        call Node850();
                    end
                end
                else begin
                    if (local_var(7) == 2) then begin
                        call Node1550();
                    end
                end
                give_exp_points(400);
                display_msg(message_str(14, 100) + 400 + message_str(14, 101));
            end
            gsay_end;
            end_dialogue;
            set_local_var(6, local_var(6) bwor 8);
            set_local_var(6, local_var(6) bwor 2);
        end
        if (local_var(7) == 1) then begin
            add_timer_event(self_obj, game_ticks(0), 10);
        end
        if ((local_var(6) bwand 4) != 0) then begin
            add_timer_event(self_obj, game_ticks(1), 1);
        end
    end
end

procedure destroy_p_proc
begin
    if (local_var(9) != 4) then begin
        set_local_var(9, 1);
        add_timer_event(Hrobnik_obj, game_ticks(0), 1);
    end
    else begin
        add_timer_event(Hrobnik_obj, game_ticks(0), 4);
    end
    if (not((local_var(6) bwand 4) != 0)) then begin
        set_global_var(0, global_var(0) + 5);
    end
    debug_msg("Player gains " + 5 + " Karma Points.");
    set_global_var(37, 0);
    set_global_var(38, 0);
    set_global_var(39, 0);
    set_global_var(40, 0);
    set_global_var(41, 0);
    set_global_var(42, 0);
    set_global_var(43, 0);
    set_global_var(44, 0);
    set_global_var(45, 0);
    if (global_var(0) >= 1000) then begin
        set_global_var(37, 1);
    end
    else begin
        if (global_var(0) >= 750) then begin
            set_global_var(38, 1);
        end
        else begin
            if (global_var(0) >= 500) then begin
                set_global_var(39, 1);
            end
            else begin
                if (global_var(0) >= 250) then begin
                    set_global_var(40, 1);
                end
                else begin
                    if (global_var(0) > -250) then begin
                        set_global_var(41, 1);
                    end
                    else begin
                        if (global_var(0) > -500) then begin
                            set_global_var(42, 1);
                        end
                        else begin
                            if (global_var(0) > -750) then begin
                                set_global_var(43, 1);
                            end
                            else begin
                                if (global_var(0) > -1000) then begin
                                    set_global_var(44, 1);
                                end
                                else begin
                                    set_global_var(45, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(5) == 1) then begin
        display_msg(message_str(1543, 150));
    end
    else begin
        display_msg(message_str(1543, 100));
    end
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(5) == 1) then begin
        display_msg(message_str(1543, 250));
    end
    else begin
        display_msg(message_str(1543, 200));
    end
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(4, 1);
    end
end

procedure map_enter_p_proc
begin
    if (((local_var(6) bwand 512) != 0) or ((local_var(6) bwand 4) != 0)) then begin
        destroy_object(self_obj);
    end
    if (metarule(22, 0) and ((local_var(6) bwand 1) != 0) and ((game_time - local_var(8)) < (24 * (60 * (60 * 10)) * 1))) then begin
        set_obj_visibility(self_obj, 1);
    end
    critter_add_trait(self_obj, 1, 6, 250);
    critter_add_trait(self_obj, 1, 5, 3);
    if (global_var(829) == 1) then begin
        if ((local_var(6) bwand 64) == 0) then begin
            probability := random(0, 10);
            probability := probability + get_critter_stat(dude_obj, 6);
            if ((probability >= 1) or (waiting_counter > 3)) then begin
                set_local_var(6, local_var(6) bwor 32);
                waiting_counter := 0;
            end
            else begin
                set_local_var(6, local_var(6) bwand (-1 - 32));
                waiting_counter := waiting_counter + 1;
            end
            set_local_var(10, game_time);
            set_local_var(6, local_var(6) bwor 64);
        end
        if (not(metarule(22, 0))) then begin
            move_to(self_obj, 21330, elevation(self_obj));
            if (((local_var(6) bwand 16) == 0) and ((local_var(6) bwand 32) != 0)) then begin
                set_local_var(6, local_var(6) bwand (-1 - 2));
                set_local_var(6, local_var(6) bwand (-1 - 8));
                set_local_var(9, 0);
                move_to(self_obj, 21330, elevation(self_obj));
            end
        end
    end
    else begin
        set_obj_visibility(self_obj, 1);
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if (fixed_param == 1) then begin
            leaver := leaver + 1;
        end
        if (leaver == 1) then begin
            reg_anim_func(2, self_obj);
            animate_move_obj_to_tile(self_obj, 21330, 1);
            add_timer_event(self_obj, game_ticks(4), 1);
        end
        if (leaver == 2) then begin
            set_local_var(6, local_var(6) bwor 128);
            set_obj_visibility(self_obj, 1);
            add_timer_event(self_obj, game_ticks(1), 1);
        end
        if (leaver == 3) then begin
            if (local_var(9) != 5) then begin
                set_local_var(6, local_var(6) bwor 512);
                destroy_object(self_obj);
            end
            leaver := 0;
            rm_timer_event(self_obj);
        end
    end
    if (local_var(7) == 1) then begin
        if (fixed_param == 10) then begin
            if (fixed_param == 10) then begin
                sequence := sequence + 1;
            end
            if (sequence == 1) then begin
                gfade_out(600);
                game_ui_disable;
                add_timer_event(self_obj, game_ticks(1), 10);
            end
            if (sequence == 2) then begin
                move_to(self_obj, 24309, elevation(self_obj));
                move_to(dude_obj, 24711, elevation(self_obj));
                anim(self_obj, 1000, 3);
                anim(dude_obj, 1000, 0);
                add_timer_event(Grave1, 0, 1);
                add_timer_event(Grave2, 0, 1);
                add_timer_event(Grave3, 0, 1);
                add_timer_event(Grave4, 0, 1);
                add_timer_event(Grave5, 0, 1);
                add_timer_event(Grave6, 0, 1);
                add_timer_event(Grave7, 0, 1);
                add_timer_event(Grave8, 0, 1);
                add_timer_event(Grave9, 0, 1);
                add_timer_event(Grave10, 0, 1);
                add_timer_event(Grave11, 0, 1);
                add_timer_event(Grave12, 0, 1);
                add_timer_event(Grave13, 0, 1);
                add_timer_event(Grave14, 0, 1);
                add_timer_event(Grave15, 0, 1);
                add_timer_event(Grave16, 0, 1);
                add_timer_event(Grave17, 0, 1);
                add_timer_event(Grave18, 0, 1);
                add_timer_event(Grave19, 0, 1);
                add_timer_event(Grave20, 0, 1);
                game_time_advance(4 * (60 * (60 * 10)));
                add_timer_event(self_obj, game_ticks(1), 10);
            end
            if (sequence == 3) then begin
                game_ui_enable;
                gfade_in(600);
                add_timer_event(self_obj, game_ticks(1), 10);
            end
            if (sequence == 4) then begin
                sequence := 0;
                set_local_var(6, local_var(6) bwand (-1 - 8));
                set_local_var(7, 2);
                rm_timer_event(self_obj);
            end
        end
    end
    if (fixed_param == 20) then begin
        while (game_time_hour < 2300) do begin
            game_time_advance(10 * (60 * 10));
        end
        if (global_var(829) == 1) then begin
            if ((global_var(829) == 1) and ((local_var(6) bwand 64) == 0)) then begin
                probability := random(0, 10);
                probability := probability + get_critter_stat(dude_obj, 6);
                if ((probability >= 1) or (waiting_counter > 3)) then begin
                    set_local_var(6, local_var(6) bwor 32);
                    waiting_counter := 0;
                end
                else begin
                    set_local_var(6, local_var(6) bwand (-1 - 32));
                    waiting_counter := waiting_counter + 1;
                end
                set_local_var(10, game_time);
                set_local_var(6, local_var(6) bwor 64);
            end
            move_to(self_obj, 21330, elevation(self_obj));
            if (((local_var(6) bwand 16) == 0) and ((local_var(6) bwand 32) != 0)) then begin
                set_local_var(6, local_var(6) bwand (-1 - 2));
                set_local_var(6, local_var(6) bwand (-1 - 8));
                set_local_var(6, local_var(6) bwand (-1 - 128));
                set_local_var(9, 0);
                move_to(self_obj, 21330, elevation(self_obj));
                set_obj_visibility(self_obj, 0);
            end
        end
    end
end

procedure Node998
begin
    set_local_var(4, 1);
end

procedure Node999
begin
end

procedure Node999_LEAVE
begin
    set_local_var(6, local_var(6) bwor 4);
    set_local_var(9, 3);
    add_timer_event(Hrobnik_obj, game_ticks(0), 3);
end

procedure Node500
begin
    gsay_reply(1543, 500);
    giq_option(4, 1543, 501, Node550, 50);
    giq_option(-3, 1543, 502, Node1400, 50);
end

procedure Node550
begin
    gsay_reply(1543, 550);
    giq_option(4, 1543, 551, Node600, 50);
end

procedure Node600
begin
    gsay_reply(1543, 600);
    giq_option(4, 1543, 601, Node700, 50);
    giq_option(4, 1543, 602, Node650, 50);
end

procedure Node650
begin
    gsay_reply(1543, 650);
    set_local_var(6, local_var(6) bwor 1);
    set_local_var(8, game_time);
    set_local_var(9, 5);
    giq_option(4, 1543, 651, Node999, 50);
end

procedure Node700
begin
    gsay_reply(1543, 700);
    set_local_var(5, 1);
    if (map_var(1) < 18) then begin
        giq_option(4, 1543, 701, Node750, 50);
    end
    giq_option(4, 1543, 702, Node1000, 50);
    giq_option(4, 1543, 703, Node998, 50);
end

procedure Node750
begin
    gsay_reply(1543, 750);
    giq_option(4, 1543, 751, Bigger_reward, 50);
    giq_option(4, 1543, 752, Gravedigging, 50);
    giq_option(4, 1543, 753, Node998, 50);
end

procedure Node800
begin
    gsay_reply(1543, 800);
    giq_option(4, 1543, 801, Gravedigging, 50);
    giq_option(4, 1543, 802, Node998, 50);
end

procedure Node850
begin
    gsay_reply(1543, 850);
    call Give_Reward();
    set_local_var(7, 3);
    set_global_var(838, 2);
    set_global_var(50, global_var(50) - 5);
    giq_option(4, 1543, 851, Node900, 50);
    giq_option(4, 1543, 852, Bigger_reward2, 50);
    giq_option(4, 1543, 853, Bertrayed_Combat, 50);
end

procedure Node900
begin
    gsay_reply(1543, 900);
    giq_option(4, 1543, 901, Node999_LEAVE, 50);
end

procedure Node950
begin
    gsay_reply(1543, 950);
    giq_option(4, 1543, 951, Node900, 50);
    giq_option(4, 1543, 952, Bertrayed_Combat, 50);
end

procedure Node1000
begin
    gsay_reply(1543, 1000);
    if (has_skill(dude_obj, 14) > 80) then begin
        giq_option(4, 1543, 1002, Node1050, 50);
    end
    if (has_skill(dude_obj, 14) < 81) then begin
        giq_option(4, 1543, 1002, Node1100, 50);
    end
    giq_option(4, 1543, 1001, Node1800, 50);
    giq_option(4, 1543, 1003, Node998, 50);
end

procedure Node1050
begin
    gsay_reply(1543, 1050);
    set_local_var(6, local_var(6) bwor 4);
    set_local_var(9, 2);
    add_timer_event(Hrobnik_obj, game_ticks(0), 2);
    giq_option(4, 1543, 1051, Node999, 50);
end

procedure Node1100
begin
    gsay_reply(1543, 1100);
    giq_option(4, 1543, 1101, Node998, 50);
end

procedure Node1150
begin
    gsay_reply(1543, 1150);
    set_local_var(6, local_var(6) bwor 16);
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        giq_option(4, 1543, 1151, Node700, 50);
    end
    if (get_critter_stat(dude_obj, 34) == 1) then begin
        giq_option(4, 1543, 1151, Node1350, 50);
    end
end

procedure Node1200
begin
    gsay_reply(1543, 1200);
    giq_option(4, 1543, 1201, Node1250, 50);
    giq_option(-3, 1543, 1202, Node1700, 50);
end

procedure Node1250
begin
    gsay_reply(1543, 1250);
    giq_option(4, 1543, 1251, Node1300, 50);
end

procedure Node1300
begin
    gsay_reply(1543, 1300);
    giq_option(4, 1543, 1301, Node1350, 50);
    giq_option(4, 1543, 1302, Node650, 50);
end

procedure Node1350
begin
    gsay_reply(1543, 1350);
    set_local_var(5, 1);
    if (map_var(1) < 18) then begin
        giq_option(4, 1543, 1351, Node750, 50);
    end
    giq_option(4, 1543, 1352, Node1000, 50);
    giq_option(4, 1543, 1353, Node998, 50);
end

procedure Node1400
begin
    gsay_reply(1543, 1400);
    giq_option(-3, 1543, 1401, Node1450, 50);
end

procedure Node1450
begin
    gsay_reply(1543, 1450);
    if (map_var(1) < 18) then begin
        giq_option(-3, 1543, message_str(1543, 1451) + obj_name(dude_obj) + message_str(1543, 1452), Node1500, 50);
    end
    giq_option(-3, 1543, 1453, Node998, 50);
end

procedure Node1500
begin
    gsay_reply(1543, 1500);
    set_local_var(5, 1);
    giq_option(-3, 1543, 1501, Gravedigging, 50);
    giq_option(-3, 1543, 1502, Node998, 50);
end

procedure Node1550
begin
    gsay_reply(1543, 1550);
    call Give_Reward();
    set_local_var(7, 3);
    set_global_var(838, 2);
    set_global_var(50, global_var(50) - 5);
    giq_option(-3, 1543, 1551, Node1600, 50);
    giq_option(-3, 1543, 1552, Bigger_reward3, 50);
end

procedure Node1600
begin
    gsay_reply(1543, 1600);
    giq_option(-3, 1543, 1601, Node999_LEAVE, 50);
end

procedure Node1650
begin
    gsay_reply(1543, 1650);
    giq_option(-3, 1543, 1651, Node999_LEAVE, 50);
    giq_option(-3, 1543, 1652, Bertrayed_Combat, 50);
end

procedure Node1700
begin
    gsay_reply(1543, 1700);
    giq_option(-3, 1543, 1701, Node1450, 50);
end

procedure Node1750
begin
    gsay_reply(1543, 1750);
    giq_option(-3, 1543, 1751, Node999_LEAVE, 50);
    giq_option(-3, 1543, 1752, Bertrayed_Combat, 50);
end

procedure Node1800
begin
    gsay_reply(1543, 1800);
    giq_option(4, 1543, 1801, Node1850, 50);
    if (has_skill(dude_obj, 14) > 80) then begin
        giq_option(4, 1543, 1802, Node1950, 50);
    end
    else begin
        giq_option(4, 1543, 1802, Node1900, 50);
    end
    giq_option(4, 1543, 1803, Node2000, 50);
    giq_option(4, 1543, 1804, Node998, 50);
end

procedure Node1850
begin
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        gsay_reply(1543, 1850);
    end
    if (get_critter_stat(dude_obj, 34) == 1) then begin
        gsay_reply(1543, 1851);
    end
    if (has_skill(dude_obj, 14) > 80) then begin
        giq_option(4, 1543, 1852, Node1950, 50);
    end
    else begin
        giq_option(4, 1543, 1852, Node1900, 50);
    end
    giq_option(4, 1543, 1853, Node2000, 50);
    giq_option(4, 1543, 1854, Node998, 50);
end

procedure Node1900
begin
    gsay_reply(1543, 1900);
    giq_option(4, 1543, 1901, Node998, 50);
end

procedure Node1950
begin
    gsay_reply(1543, 1950);
    set_local_var(6, local_var(6) bwor 4);
    set_local_var(9, 2);
    add_timer_event(Hrobnik_obj, game_ticks(0), 2);
    giq_option(4, 1543, 1951, Node999, 50);
end

procedure Node2000
begin
    gsay_reply(1543, 2000);
    if (has_skill(dude_obj, 14) > 80) then begin
        giq_option(4, 1543, 2001, Node1950, 50);
    end
    else begin
        giq_option(4, 1543, 2001, Node1900, 50);
    end
    if (has_skill(dude_obj, 14) > 80) then begin
        giq_option(4, 1543, 2002, Node1050, 50);
    end
    else begin
        giq_option(4, 1543, 2002, Node1100, 50);
    end
    giq_option(4, 1543, 2003, Node998, 50);
end

procedure Bigger_reward
begin
    set_global_var(0, global_var(0) - 2);
    set_global_var(37, 0);
    set_global_var(38, 0);
    set_global_var(39, 0);
    set_global_var(40, 0);
    set_global_var(41, 0);
    set_global_var(42, 0);
    set_global_var(43, 0);
    set_global_var(44, 0);
    set_global_var(45, 0);
    if (global_var(0) >= 1000) then begin
        set_global_var(37, 1);
    end
    else begin
        if (global_var(0) >= 750) then begin
            set_global_var(38, 1);
        end
        else begin
            if (global_var(0) >= 500) then begin
                set_global_var(39, 1);
            end
            else begin
                if (global_var(0) >= 250) then begin
                    set_global_var(40, 1);
                end
                else begin
                    if (global_var(0) > -250) then begin
                        set_global_var(41, 1);
                    end
                    else begin
                        if (global_var(0) > -500) then begin
                            set_global_var(42, 1);
                        end
                        else begin
                            if (global_var(0) > -750) then begin
                                set_global_var(43, 1);
                            end
                            else begin
                                if (global_var(0) > -1000) then begin
                                    set_global_var(44, 1);
                                end
                                else begin
                                    set_global_var(45, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    call Node800();
end

procedure Bigger_reward2
begin
    set_global_var(0, global_var(0) - 2);
    set_global_var(37, 0);
    set_global_var(38, 0);
    set_global_var(39, 0);
    set_global_var(40, 0);
    set_global_var(41, 0);
    set_global_var(42, 0);
    set_global_var(43, 0);
    set_global_var(44, 0);
    set_global_var(45, 0);
    if (global_var(0) >= 1000) then begin
        set_global_var(37, 1);
    end
    else begin
        if (global_var(0) >= 750) then begin
            set_global_var(38, 1);
        end
        else begin
            if (global_var(0) >= 500) then begin
                set_global_var(39, 1);
            end
            else begin
                if (global_var(0) >= 250) then begin
                    set_global_var(40, 1);
                end
                else begin
                    if (global_var(0) > -250) then begin
                        set_global_var(41, 1);
                    end
                    else begin
                        if (global_var(0) > -500) then begin
                            set_global_var(42, 1);
                        end
                        else begin
                            if (global_var(0) > -750) then begin
                                set_global_var(43, 1);
                            end
                            else begin
                                if (global_var(0) > -1000) then begin
                                    set_global_var(44, 1);
                                end
                                else begin
                                    set_global_var(45, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    call Node950();
end

procedure Bigger_reward3
begin
    set_global_var(0, global_var(0) - 2);
    set_global_var(37, 0);
    set_global_var(38, 0);
    set_global_var(39, 0);
    set_global_var(40, 0);
    set_global_var(41, 0);
    set_global_var(42, 0);
    set_global_var(43, 0);
    set_global_var(44, 0);
    set_global_var(45, 0);
    if (global_var(0) >= 1000) then begin
        set_global_var(37, 1);
    end
    else begin
        if (global_var(0) >= 750) then begin
            set_global_var(38, 1);
        end
        else begin
            if (global_var(0) >= 500) then begin
                set_global_var(39, 1);
            end
            else begin
                if (global_var(0) >= 250) then begin
                    set_global_var(40, 1);
                end
                else begin
                    if (global_var(0) > -250) then begin
                        set_global_var(41, 1);
                    end
                    else begin
                        if (global_var(0) > -500) then begin
                            set_global_var(42, 1);
                        end
                        else begin
                            if (global_var(0) > -750) then begin
                                set_global_var(43, 1);
                            end
                            else begin
                                if (global_var(0) > -1000) then begin
                                    set_global_var(44, 1);
                                end
                                else begin
                                    set_global_var(45, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        call Node1650();
    end
    if (get_critter_stat(dude_obj, 34) == 1) then begin
        call Node1750();
    end
end

procedure Bertrayed_Combat
begin
    set_local_var(9, 4);
    set_global_var(0, global_var(0) - 15);
    set_global_var(37, 0);
    set_global_var(38, 0);
    set_global_var(39, 0);
    set_global_var(40, 0);
    set_global_var(41, 0);
    set_global_var(42, 0);
    set_global_var(43, 0);
    set_global_var(44, 0);
    set_global_var(45, 0);
    if (global_var(0) >= 1000) then begin
        set_global_var(37, 1);
    end
    else begin
        if (global_var(0) >= 750) then begin
            set_global_var(38, 1);
        end
        else begin
            if (global_var(0) >= 500) then begin
                set_global_var(39, 1);
            end
            else begin
                if (global_var(0) >= 250) then begin
                    set_global_var(40, 1);
                end
                else begin
                    if (global_var(0) > -250) then begin
                        set_global_var(41, 1);
                    end
                    else begin
                        if (global_var(0) > -500) then begin
                            set_global_var(42, 1);
                        end
                        else begin
                            if (global_var(0) > -750) then begin
                                set_global_var(43, 1);
                            end
                            else begin
                                if (global_var(0) > -1000) then begin
                                    set_global_var(44, 1);
                                end
                                else begin
                                    set_global_var(45, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    call Node998();
end

procedure Gravedigging
begin
    set_local_var(7, 1);
    set_global_var(838, 1);
    call Node999();
end

procedure Give_Reward
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    LVar1 := 0;
    LVar0 := 0;
    removed_qty := obj_is_carrying_obj_pid(self_obj, 19);
    if (obj_is_carrying_obj_pid(self_obj, 19) < removed_qty) then begin
        removed_qty := obj_is_carrying_obj_pid(self_obj, 19);
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(self_obj, 19);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(self_obj, 19);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(self_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(self_obj, restock_obj);
                    add_obj_to_inven(self_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                    metarule(43, self_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := obj_is_carrying_obj_pid(self_obj, 19);
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 19)) do begin
                restock_obj := obj_carrying_pid_obj(self_obj, 19);
                rm_obj_from_inven(self_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    for (restock_amt := 0; LVar0 < 620; LVar0 := LVar0 + 1) begin
        if ((obj_is_carrying_obj_pid(self_obj, LVar0) > 0) and (LVar0 != 289) and (LVar0 != 234)) then begin
            if (obj_is_carrying_obj_pid(self_obj, LVar0) == 1) then begin
                if (LVar1 == 0) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, LVar0);
                    if (1 < removed_qty) then begin
                        removed_qty := 1;
                    end
                    if (removed_qty > 0) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, LVar0);
                        if (obj_type(self_obj) == 1) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, LVar0);
                            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                    restock_obj := critter_inven_obj(self_obj, 0);
                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    add_obj_to_inven(self_obj, restock_obj);
                                end
                            end
                            else begin
                                if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                    metarule(43, self_obj);
                                end
                            end
                        end
                        restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                        if (restock_amt == 0) then begin
                            toRemove_qty := 1;
                            while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, LVar0)) do begin
                                restock_obj := obj_carrying_pid_obj(self_obj, LVar0);
                                rm_obj_from_inven(self_obj, restock_obj);
                                destroy_object(restock_obj);
                                toRemove_qty := toRemove_qty - 1;
                            end
                        end
                        else begin
                            destroy_object(restock_obj);
                        end
                    end
                    restock_obj := 0;
                    restock_amt := 0;
                    restock_obj := create_object_sid(LVar0, 0, 0, -1);
                    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
                end
                if (LVar1 == 1) then begin
                    LVar1 := 0;
                end
                else begin
                    LVar1 := 1;
                end
                continue;
            end
            if ((get_critter_stat(dude_obj, 4) + has_trait(0, dude_obj, 49)) > 3) then begin
                LVar2 := div(obj_is_carrying_obj_pid(self_obj, LVar0), 2);
                removed_qty := obj_is_carrying_obj_pid(self_obj, LVar0);
                if ((obj_is_carrying_obj_pid(self_obj, LVar0) - LVar2) < removed_qty) then begin
                    removed_qty := obj_is_carrying_obj_pid(self_obj, LVar0) - LVar2;
                end
                if (removed_qty > 0) then begin
                    restock_obj := obj_carrying_pid_obj(self_obj, LVar0);
                    if (obj_type(self_obj) == 1) then begin
                        restock_obj := obj_carrying_pid_obj(self_obj, LVar0);
                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                restock_obj := critter_inven_obj(self_obj, 0);
                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                rm_obj_from_inven(self_obj, restock_obj);
                                add_obj_to_inven(self_obj, restock_obj);
                            end
                        end
                        else begin
                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                metarule(43, self_obj);
                            end
                        end
                    end
                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                    if (restock_amt == 0) then begin
                        toRemove_qty := obj_is_carrying_obj_pid(self_obj, LVar0) - LVar2;
                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, LVar0)) do begin
                            restock_obj := obj_carrying_pid_obj(self_obj, LVar0);
                            rm_obj_from_inven(self_obj, restock_obj);
                            destroy_object(restock_obj);
                            toRemove_qty := toRemove_qty - 1;
                        end
                    end
                    else begin
                        destroy_object(restock_obj);
                    end
                end
                restock_obj := 0;
                restock_amt := 0;
                restock_obj := create_object_sid(LVar0, 0, 0, -1);
                add_mult_objs_to_inven(dude_obj, restock_obj, LVar2);
                continue;
            end
            removed_qty := obj_is_carrying_obj_pid(self_obj, LVar0);
            if (1 < removed_qty) then begin
                removed_qty := 1;
            end
            if (removed_qty > 0) then begin
                restock_obj := obj_carrying_pid_obj(self_obj, LVar0);
                if (obj_type(self_obj) == 1) then begin
                    restock_obj := obj_carrying_pid_obj(self_obj, LVar0);
                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                            restock_obj := critter_inven_obj(self_obj, 0);
                            debug_msg("armour pid == " + obj_pid(restock_obj));
                            rm_obj_from_inven(self_obj, restock_obj);
                            add_obj_to_inven(self_obj, restock_obj);
                        end
                    end
                    else begin
                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                            metarule(43, self_obj);
                        end
                    end
                end
                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                if (restock_amt == 0) then begin
                    toRemove_qty := 1;
                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, LVar0)) do begin
                        restock_obj := obj_carrying_pid_obj(self_obj, LVar0);
                        rm_obj_from_inven(self_obj, restock_obj);
                        destroy_object(restock_obj);
                        toRemove_qty := toRemove_qty - 1;
                    end
                end
                else begin
                    destroy_object(restock_obj);
                end
            end
            restock_obj := 0;
            restock_amt := 0;
            restock_obj := create_object_sid(LVar0, 0, 0, -1);
            add_mult_objs_to_inven(dude_obj, restock_obj, 1);
        end
    end
    if ((get_critter_stat(dude_obj, 4) + has_trait(0, dude_obj, 49)) > 3) then begin
        item_caps_adjust(dude_obj, 80);
    end
    else begin
        item_caps_adjust(dude_obj, 40);
    end
end

