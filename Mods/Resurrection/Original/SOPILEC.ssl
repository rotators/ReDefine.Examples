variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_exit_p_proc;
procedure timed_event_p_proc;
procedure Node998;
procedure Node999;
procedure Node500;
procedure Node550;
procedure Node600;
procedure Node650;
procedure Node700;
procedure Node750;
procedure Node800;
procedure Node850;
procedure Node900;
procedure Node950;
procedure Node1000;
procedure Node1050;
procedure scram;

variable leaving;
variable ShootingDist;
variable ShootingTile;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if ((local_var(5) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
    if (local_var(6) == 1) then begin
        if (obj_can_see_obj(self_obj, dude_obj) or obj_can_hear_obj(self_obj, dude_obj)) then begin
            attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
        end
    end
    if (tile_distance_objs(self_obj, dude_obj) == 1) then begin
        if (get_critter_stat(dude_obj, 34) == 0) then begin
            float_msg(self_obj, message_str(1467, 307), 8);
        end
        else begin
            float_msg(self_obj, message_str(1467, 308), 8);
        end
    end
    if (map_var(9) > 0) then begin
        if (ShootingTile == 0) then begin
            ShootingDist := tile_distance(tile_num(self_obj), 14102);
            ShootingTile := 14102;
            if (tile_distance(tile_num(self_obj), 23133) < ShootingDist) then begin
                ShootingDist := tile_distance(tile_num(self_obj), 23133);
                ShootingTile := 23133;
            end
            if (tile_distance(tile_num(self_obj), 23123) < ShootingDist) then begin
                ShootingDist := tile_distance(tile_num(self_obj), 23123);
                ShootingTile := 23123;
            end
        end
        if ((map_var(9) == 1) and (art_anim(obj_art_fid(self_obj)) != 1) and (ShootingTile != 0)) then begin
            animate_move_obj_to_tile(self_obj, ShootingTile, 1);
        end
        if (map_var(9) == 2) then begin
            leaving := 1;
            destroy_object(self_obj);
        end
    end
end

procedure combat_p_proc
begin
    if (fixed_param == 4) then begin
        if (global_var(770) == 1) then begin
            critter_set_flee_state(self_obj, 1);
        end
        else begin
            if ((random(1, 2) == 1) and (local_var(6) == 1)) then begin
                float_msg(self_obj, message_str(1467, random(400, 403)), 8);
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure talk_p_proc
begin
    anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
    anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
    start_gdialog(1467, self_obj, 4, -1, -1);
    gsay_start;
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        if (local_var(4) == 0) then begin
            call Node500();
        end
        if (local_var(4) != 0) then begin
            call Node950();
        end
    end
    if (get_critter_stat(dude_obj, 34) == 1) then begin
        if (local_var(4) == 0) then begin
            call Node1000();
        end
        if (local_var(4) != 0) then begin
            call Node1050();
        end
    end
    gsay_end;
    end_dialogue;
    set_local_var(4, 1);
end

procedure destroy_p_proc
begin
    if (leaving != 1) then begin
        if (global_var(794) == 1) then begin
            set_global_var(794, 2);
        end
        set_map_var(5, 1);
        set_global_var(0, global_var(0) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(1467, 100));
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(1467, 200));
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        call Node998();
        set_local_var(6, 1);
    end
    if (random(1, 2) == 1) then begin
        float_msg(self_obj, message_str(1467, random(404, 406)), 8);
    end
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, 1, 6, 225);
    critter_add_trait(self_obj, 1, 5, 1);
    metarule3(100, self_obj, 1, 0);
    add_timer_event(self_obj, game_ticks(random(5, 15)), 1);
end

procedure map_exit_p_proc
begin
    float_msg(self_obj, 0, 0);
    if (global_var(792) == 2) then begin
        leaving := 1;
        destroy_object(self_obj);
    end
end

procedure timed_event_p_proc
begin
    variable LVar0 := 0;
    if (fixed_param == 1) then begin
        if ((combat_is_initialized == 0) and (map_var(9) == 0)) then begin
            LVar0 := tile_num_in_direction(tile_num(self_obj), random(0, 5), 1);
            if (tile_distance(LVar0, 14328) < 3) then begin
                reg_anim_func(2, self_obj);
                reg_anim_func(1, 1);
                animate_move_obj_to_tile(self_obj, LVar0, 0);
                reg_anim_func(3, 0);
            end
            float_msg(self_obj, message_str(1467, random(300, 306)), 8);
        end
        metarule3(100, self_obj, 1, 0);
        add_timer_event(self_obj, game_ticks(random(5, 15)), 1);
    end
    if (fixed_param == 2) then begin
        game_ui_enable;
        set_global_var(794, 2);
        set_global_var(0, global_var(0) + 10);
        debug_msg("Player gains " + 10 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        gfade_in(1);
        destroy_object(self_obj);
    end
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
end

procedure Node500
begin
    gsay_reply(1467, 500);
    if ((global_var(794) == 1) and (local_var(7) != 1)) then begin
        giq_option(4, 1467, 501, Node550, 50);
        giq_option(4, 1467, 502, Node800, 50);
    end
    giq_option(-3, 1467, 503, Node999, 50);
    giq_option(4, 1467, 504, Node999, 50);
end

procedure Node550
begin
    gsay_reply(1467, 550);
    set_local_var(7, 1);
    giq_option(4, 1467, 551, Node600, 50);
    giq_option(4, 1467, 552, Node800, 50);
end

procedure Node600
begin
    gsay_reply(1467, 600);
    giq_option(4, 1467, 601, Node650, 50);
    giq_option(4, 1467, 602, Node800, 50);
end

procedure Node650
begin
    gsay_reply(1467, 650);
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        giq_option(4, 1467, 651, Node700, 50);
    end
    if (get_critter_stat(dude_obj, 34) == 1) then begin
        giq_option(4, 1467, 651, Node750, 50);
    end
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        giq_option(4, 1467, 652, Node700, 50);
    end
    if (get_critter_stat(dude_obj, 34) == 1) then begin
        giq_option(4, 1467, 652, Node750, 50);
    end
end

procedure Node700
begin
    gsay_reply(1467, 700);
    giq_option(4, 1467, 701, Node800, 50);
    if ((get_critter_stat(dude_obj, 0) > 6) or is_success(roll_vs_skill(dude_obj, 14, -10))) then begin
        giq_option(4, 1467, 702, Node850, 50);
    end
    else begin
        giq_option(4, 1467, 702, Node900, 50);
    end
end

procedure Node750
begin
    gsay_reply(1467, 750);
    giq_option(4, 1467, 751, Node800, 50);
    if ((get_critter_stat(dude_obj, 0) > 6) or is_success(roll_vs_skill(dude_obj, 14, -10))) then begin
        giq_option(4, 1467, 752, Node850, 50);
    end
    else begin
        giq_option(4, 1467, 752, Node900, 50);
    end
end

procedure Node800
begin
    gsay_reply(1467, 800);
    set_local_var(7, 1);
    giq_option(4, 1467, 801, Node998, 50);
    if ((get_critter_stat(dude_obj, 0) > 6) or is_success(roll_vs_skill(dude_obj, 14, -10))) then begin
        giq_option(4, 1467, 802, Node850, 50);
    end
    else begin
        giq_option(4, 1467, 802, Node900, 50);
    end
    giq_option(4, 1467, 803, Node999, 50);
end

procedure Node850
begin
    gsay_reply(1467, 850);
    giq_option(4, 1467, 851, scram, 50);
end

procedure Node900
begin
    gsay_reply(1467, 900);
    giq_option(4, 1467, 901, Node998, 50);
    giq_option(4, 1467, 902, Node999, 50);
end

procedure Node950
begin
    gsay_reply(1467, 950);
    if ((global_var(794) == 1) and (local_var(7) != 1)) then begin
        giq_option(4, 1467, 951, Node550, 50);
        giq_option(4, 1467, 952, Node800, 50);
    end
    giq_option(-3, 1467, 953, Node999, 50);
    giq_option(4, 1467, 954, Node999, 50);
end

procedure Node1000
begin
    gsay_reply(1467, 1000);
    if ((global_var(794) == 1) and (local_var(7) != 1)) then begin
        giq_option(4, 1467, 1001, Node550, 50);
        giq_option(4, 1467, 1002, Node800, 50);
    end
    giq_option(-3, 1467, 1003, Node999, 50);
    giq_option(4, 1467, 1004, Node999, 50);
end

procedure Node1050
begin
    gsay_reply(1467, 1050);
    if ((global_var(794) == 1) and (local_var(7) != 1)) then begin
        giq_option(4, 1467, 1051, Node550, 50);
        giq_option(4, 1467, 1052, Node800, 50);
    end
    giq_option(-3, 1467, 1053, Node999, 50);
    giq_option(4, 1467, 1054, Node999, 50);
end

procedure scram
begin
    game_ui_disable;
    gfade_out(1);
    add_timer_event(self_obj, 0, 2);
end

