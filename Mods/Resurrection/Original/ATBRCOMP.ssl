variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure map_enter_p_proc;
procedure damage_p_proc;
procedure use_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure Node999;
procedure Node500;
procedure Node550;
procedure Node600;
procedure Node650;
procedure Node700;
procedure Node750;
procedure Node800;
procedure Give_Stimpack;
procedure Give_RadAway;
procedure Give_RadX;

variable Stimpack;
variable RadAway;
variable RadX;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
end

procedure map_enter_p_proc
begin
end

procedure damage_p_proc
begin
end

procedure use_p_proc
begin
    script_overrides;
    if (combat_is_initialized) then begin
        display_msg(message_str(105, 300));
    end
    else begin
        if ((global_var(998) != 1) and not((global_var(1000) bwand 65536) != 0)) then begin
            set_map_var(0, map_var(0) bwor 128);
        end
        else begin
            anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
            start_gdialog(105, self_obj, 4, -1, -1);
            gsay_start;
            if (get_critter_stat(dude_obj, 4) > 3) then begin
                call Node500();
            end
            else begin
                call Node800();
            end
            gsay_end;
            end_dialogue;
        end
    end
end

procedure destroy_p_proc
begin
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(105, 100));
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(105, 200));
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 12) then begin
        call use_p_proc();
    end
end

procedure Node999
begin
end

procedure Node500
begin
    gsay_reply(105, 500);
    if (is_success(roll_vs_skill(dude_obj, 12, 0)) and (has_skill(dude_obj, 12) > 39)) then begin
        giq_option(4, 105, 501, Node600, 50);
    end
    else begin
        giq_option(4, 105, 501, Node550, 50);
    end
    giq_option(4, 105, 502, Node999, 50);
end

procedure Node550
begin
    gsay_reply(105, 550);
    giq_option(4, 105, 551, Node999, 50);
end

procedure Node600
begin
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        gsay_reply(105, 600);
    end
    else begin
        gsay_reply(105, 601);
    end
    if (local_var(5) < 3) then begin
        giq_option(4, 105, 602, Give_Stimpack, 50);
    end
    else begin
        giq_option(4, 105, 602, Node700, 50);
    end
    if (local_var(5) < 3) then begin
        giq_option(4, 105, 603, Give_RadAway, 50);
    end
    else begin
        giq_option(4, 105, 603, Node700, 50);
    end
    if (local_var(5) < 3) then begin
        giq_option(4, 105, 604, Give_RadX, 50);
    end
    else begin
        giq_option(4, 105, 604, Node700, 50);
    end
    if ((global_var(449) == 1) or (global_var(778) == 1) or (global_var(779) == 1) or (global_var(780) == 1)) then begin
        giq_option(4, 105, 605, Node750, 50);
    end
    giq_option(4, 105, 606, Node999, 50);
end

procedure Node650
begin
    if (Stimpack == 1) then begin
        if (get_critter_stat(dude_obj, 34) == 0) then begin
            gsay_reply(105, message_str(105, 650) + message_str(105, 652) + message_str(105, 655));
        end
        else begin
            gsay_reply(105, message_str(105, 651) + message_str(105, 652) + message_str(105, 655));
        end
        Stimpack := 0;
    end
    if (RadAway == 1) then begin
        if (get_critter_stat(dude_obj, 34) == 0) then begin
            gsay_reply(105, message_str(105, 650) + message_str(105, 653) + message_str(105, 655));
        end
        else begin
            gsay_reply(105, message_str(105, 651) + message_str(105, 653) + message_str(105, 655));
        end
        RadAway := 0;
    end
    if (RadX == 1) then begin
        if (get_critter_stat(dude_obj, 34) == 0) then begin
            gsay_reply(105, message_str(105, 650) + message_str(105, 654) + message_str(105, 655));
        end
        else begin
            gsay_reply(105, message_str(105, 651) + message_str(105, 654) + message_str(105, 655));
        end
        RadX := 0;
    end
    set_local_var(5, local_var(5) + 1);
    if (local_var(5) < 3) then begin
        giq_option(4, 105, 656, Give_Stimpack, 50);
    end
    else begin
        giq_option(4, 105, 656, Node700, 50);
    end
    if (local_var(5) < 3) then begin
        giq_option(4, 105, 657, Give_RadAway, 50);
    end
    else begin
        giq_option(4, 105, 657, Node700, 50);
    end
    if (local_var(5) < 3) then begin
        giq_option(4, 105, 658, Give_RadX, 50);
    end
    else begin
        giq_option(4, 105, 658, Node700, 50);
    end
    if ((global_var(449) == 1) or (global_var(778) == 1) or (global_var(779) == 1) or (global_var(780) == 1)) then begin
        giq_option(4, 105, 659, Node750, 50);
    end
    giq_option(4, 105, 660, Node999, 50);
end

procedure Node700
begin
    gsay_reply(105, 700);
    set_local_var(5, 5);
    if ((global_var(449) == 1) or (global_var(778) == 1) or (global_var(779) == 1) or (global_var(780) == 1)) then begin
        giq_option(4, 105, 701, Node750, 50);
    end
    giq_option(4, 105, 702, Node999, 50);
end

procedure Node750
begin
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        gsay_reply(105, 750);
    end
    else begin
        gsay_reply(105, 755);
    end
    set_global_var(449, 0);
    set_global_var(778, 0);
    set_global_var(779, 0);
    set_global_var(780, 0);
    if (global_var(1034) > 0) then begin
        set_pc_base_stat(2, get_pc_base_stat(2) + global_var(1034));
    end
    if (global_var(1035) > 0) then begin
        set_pc_base_stat(3, get_pc_base_stat(3) + global_var(1035));
    end
    if (local_var(5) < 3) then begin
        giq_option(4, 105, 751, Give_Stimpack, 50);
    end
    else begin
        giq_option(4, 105, 751, Node700, 50);
    end
    if (local_var(5) < 3) then begin
        giq_option(4, 105, 752, Give_RadAway, 50);
    end
    else begin
        giq_option(4, 105, 752, Node700, 50);
    end
    if (local_var(5) < 3) then begin
        giq_option(4, 105, 753, Give_RadX, 50);
    end
    else begin
        giq_option(4, 105, 753, Node700, 50);
    end
    giq_option(4, 105, 754, Node999, 50);
end

procedure Node800
begin
    gsay_reply(105, 800);
    giq_option(-3, 105, 801, Node999, 50);
end

procedure Give_Stimpack
begin
    restock_obj := create_object_sid(40, 0, 0, -1);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    Stimpack := 1;
    call Node650();
end

procedure Give_RadAway
begin
    restock_obj := create_object_sid(48, 0, 0, -1);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    RadAway := 1;
    call Node650();
end

procedure Give_RadX
begin
    restock_obj := create_object_sid(109, 0, 0, -1);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    RadX := 1;
    call Node650();
end

