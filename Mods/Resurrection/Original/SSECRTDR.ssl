variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure destroy_p_proc;
procedure Look_Traps_And_Locks;
procedure Look_Traps;
procedure Look_Locks;
procedure Skill_Disarm_Traps;
procedure Disarm_Traps;
procedure Unlock_Lock;
procedure Lockpick_Lock;
procedure Lockpick_Door;
procedure Super_Lockpick_Lock;
procedure Lock_Door;
procedure Set_Lock;
procedure Set_Lockpick_Lock;
procedure Super_Set_Lockpick_Lock;
procedure Set_Trap;
procedure Pry_Door;
procedure Damage_Critter;

variable Locks_Roll;
variable Traps_Roll;
variable last_source_obj;

procedure timed_event_p_proc;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777293) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777293)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777958) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777958)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777957) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777957)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778018) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778018)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
end

procedure use_p_proc
begin
    if (obj_is_locked(self_obj)) then begin
        script_overrides;
        display_msg(message_str(1367, 203));
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (get_critter_stat(dude_obj, 1) > 4) then begin
        display_msg(message_str(1367, 101));
    end
    else begin
        display_msg(message_str(1367, 100));
    end
end

procedure description_p_proc
begin
    if (get_critter_stat(dude_obj, 1) > 4) then begin
        script_overrides;
        if (obj_is_locked(self_obj)) then begin
            display_msg(message_str(1367, 102));
        end
        else begin
            display_msg(message_str(1367, 103));
        end
    end
end

procedure use_skill_on_p_proc
begin
    variable LVar0 := 0;
    debug_msg("use_skill_on_p_proc");
    LVar0 := action_being_used;
    if (LVar0 == 9) then begin
        if (obj_is_locked(self_obj)) then begin
            call Unlock_Lock();
        end
        else begin
            call Set_Lock();
        end
    end
    else begin
        if (LVar0 == 11) then begin
            if (local_var(0) == 0) then begin
                call Skill_Disarm_Traps();
            end
            else begin
                if (source_obj == dude_obj) then begin
                    display_msg(message_str(1367, 195));
                end
                else begin
                    display_msg(obj_name(source_obj) + message_str(1367, 200));
                end
            end
        end
    end
end

procedure use_obj_on_p_proc
begin
    variable LVar0 := 0;
    LVar0 := obj_pid(obj_being_used_with);
    if (0 == 0) then begin
        if (LVar0 == 84) then begin
            script_overrides;
            if (obj_is_locked(self_obj)) then begin
                call Lockpick_Lock();
            end
            else begin
                call Set_Lockpick_Lock();
            end
        end
        else begin
            if (LVar0 == 410) then begin
                script_overrides;
                if (obj_is_locked(self_obj)) then begin
                    call Super_Lockpick_Lock();
                end
                else begin
                    call Super_Set_Lockpick_Lock();
                end
            end
            else begin
                if (LVar0 == 20) then begin
                    if (obj_is_locked(self_obj)) then begin
                        script_overrides;
                        call Pry_Door();
                    end
                end
                else begin
                    if ((LVar0 == 51) or (LVar0 == 85)) then begin
                        script_overrides;
                        call Set_Trap();
                    end
                end
            end
        end
    end
    else begin
        if (0 == 1) then begin
            if (LVar0 == 77) then begin
                script_overrides;
                if (obj_is_locked(self_obj)) then begin
                    call Lockpick_Lock();
                end
                else begin
                    call Set_Lockpick_Lock();
                end
            end
            else begin
                if (LVar0 == 411) then begin
                    script_overrides;
                    if (obj_is_locked(self_obj)) then begin
                        call Super_Lockpick_Lock();
                    end
                    else begin
                        call Super_Set_Lockpick_Lock();
                    end
                end
                else begin
                    if (LVar0 == 20) then begin
                        if (obj_is_locked(self_obj)) then begin
                            script_overrides;
                            call Pry_Door();
                        end
                    end
                    else begin
                        if ((LVar0 == 51) or (LVar0 == 85)) then begin
                            script_overrides;
                            call Set_Trap();
                        end
                    end
                end
            end
        end
    end
end

procedure damage_p_proc
begin
    variable LVar0 := 0;
    if (metarule(49, target_obj) == 6) then begin
        if (0 == 0) then begin
            if (local_var(0) == 0) then begin
                set_local_var(0, 1);
                obj_lock(self_obj);
                LVar0 := random(20, 20);
                explosion(tile_num(self_obj), elevation(self_obj), LVar0);
                call destroy_p_proc();
                destroy_object(self_obj);
            end
            else begin
                set_local_var(0, 1);
                obj_unlock(self_obj);
                call destroy_p_proc();
                destroy_object(self_obj);
            end
        end
        else begin
            if (0 == 1) then begin
                set_local_var(3, local_var(3) + 1);
                if (local_var(0) == 0) then begin
                    obj_unlock(self_obj);
                    LVar0 := random(20, 20);
                    explosion(tile_num(self_obj), elevation(self_obj), LVar0);
                end
                else begin
                    if (local_var(3) > 2) then begin
                        set_local_var(0, 1);
                        obj_unlock(self_obj);
                        call destroy_p_proc();
                        destroy_object(self_obj);
                    end
                end
            end
        end
    end
    else begin
        display_msg(message_str(1367, 193));
    end
end

procedure map_enter_p_proc
begin
    obj_close(self_obj);
    if (metarule(22, 0) == 0) then begin
        if (local_var(2) == 0) then begin
            set_local_var(2, 1);
            obj_unlock(self_obj);
            set_local_var(0, 1);
        end
        if (0 == 0) then begin
            obj_lock(self_obj);
        end
        else begin
            obj_unlock(self_obj);
        end
    end
end

procedure map_update_p_proc
begin
    if (obj_is_locked(self_obj)) then begin
        obj_lock(self_obj);
    end
    else begin
        obj_unlock(self_obj);
    end
end

procedure destroy_p_proc
begin
end

procedure Look_Traps_And_Locks
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    LVar0 := do_check(dude_obj, 1, 0);
    LVar1 := roll_vs_skill(dude_obj, 11, 0);
    LVar2 := roll_vs_skill(dude_obj, 9, 0);
    if (is_success(LVar0)) then begin
        if (is_critical(LVar0)) then begin
            if (is_success(LVar1)) then begin
                set_local_var(1, 1);
                if (is_critical(LVar1)) then begin
                    if (is_success(LVar2)) then begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(1367, 102));
                        end
                        else begin
                            display_msg(message_str(1367, 103));
                        end
                    end
                    else begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(1367, 104));
                        end
                        else begin
                            display_msg(message_str(1367, 105));
                        end
                    end
                end
                else begin
                    if (is_success(LVar2)) then begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(1367, 106));
                        end
                        else begin
                            display_msg(message_str(1367, 107));
                        end
                    end
                    else begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(1367, 108));
                        end
                        else begin
                            display_msg(message_str(1367, 109));
                        end
                    end
                end
            end
            else begin
                if (is_critical(LVar1)) then begin
                    if (is_success(LVar2)) then begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(1367, 110));
                        end
                        else begin
                            display_msg(message_str(1367, 111));
                        end
                    end
                    else begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(1367, 112));
                        end
                        else begin
                            display_msg(message_str(1367, 113));
                        end
                    end
                end
                else begin
                    if (is_success(LVar2)) then begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(1367, 114));
                        end
                        else begin
                            display_msg(message_str(1367, 115));
                        end
                    end
                    else begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(1367, 116));
                        end
                        else begin
                            display_msg(message_str(1367, 117));
                        end
                    end
                end
            end
        end
        else begin
            if (is_success(LVar1)) then begin
                set_local_var(1, 1);
                if (is_critical(LVar1)) then begin
                    if (is_success(LVar2)) then begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(1367, 118));
                        end
                        else begin
                            display_msg(message_str(1367, 119));
                        end
                    end
                    else begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(1367, 120));
                        end
                        else begin
                            display_msg(message_str(1367, 121));
                        end
                    end
                end
                else begin
                    if (is_success(LVar2)) then begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(1367, 122));
                        end
                        else begin
                            display_msg(message_str(1367, 123));
                        end
                    end
                    else begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(1367, 124));
                        end
                        else begin
                            display_msg(message_str(1367, 125));
                        end
                    end
                end
            end
            else begin
                if (is_critical(LVar1)) then begin
                    if (is_success(LVar2)) then begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(1367, 126));
                        end
                        else begin
                            display_msg(message_str(1367, 127));
                        end
                    end
                    else begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(1367, 128));
                        end
                        else begin
                            display_msg(message_str(1367, 129));
                        end
                    end
                end
                else begin
                    if (is_success(LVar2)) then begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(1367, 130));
                        end
                        else begin
                            display_msg(message_str(1367, 131));
                        end
                    end
                    else begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(1367, 132));
                        end
                        else begin
                            display_msg(message_str(1367, 133));
                        end
                    end
                end
            end
        end
    end
    else begin
        if (is_critical(LVar0)) then begin
            if (is_success(LVar1)) then begin
                set_local_var(1, 1);
                if (is_critical(LVar1)) then begin
                    if (is_success(LVar2)) then begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(1367, 134));
                        end
                        else begin
                            display_msg(message_str(1367, 135));
                        end
                    end
                    else begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(1367, 136));
                        end
                        else begin
                            display_msg(message_str(1367, 137));
                        end
                    end
                end
                else begin
                    if (is_success(LVar2)) then begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(1367, 138));
                        end
                        else begin
                            display_msg(message_str(1367, 139));
                        end
                    end
                    else begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(1367, 140));
                        end
                        else begin
                            display_msg(message_str(1367, 141));
                        end
                    end
                end
            end
            else begin
                if (is_critical(LVar1)) then begin
                    if (is_success(LVar2)) then begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(1367, 142));
                        end
                        else begin
                            display_msg(message_str(1367, 143));
                        end
                    end
                    else begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(1367, 144));
                        end
                        else begin
                            display_msg(message_str(1367, 145));
                        end
                    end
                end
                else begin
                    if (is_success(LVar2)) then begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(1367, 146));
                        end
                        else begin
                            display_msg(message_str(1367, 147));
                        end
                    end
                    else begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(1367, 148));
                        end
                        else begin
                            display_msg(message_str(1367, 149));
                        end
                    end
                end
            end
        end
        else begin
            if (is_success(LVar1)) then begin
                set_local_var(1, 1);
                if (is_critical(LVar1)) then begin
                    if (is_success(LVar2)) then begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(1367, 150));
                        end
                        else begin
                            display_msg(message_str(1367, 151));
                        end
                    end
                    else begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(1367, 152));
                        end
                        else begin
                            display_msg(message_str(1367, 153));
                        end
                    end
                end
                else begin
                    if (is_success(LVar2)) then begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(1367, 154));
                        end
                        else begin
                            display_msg(message_str(1367, 155));
                        end
                    end
                    else begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(1367, 156));
                        end
                        else begin
                            display_msg(message_str(1367, 157));
                        end
                    end
                end
            end
            else begin
                if (is_critical(LVar1)) then begin
                    if (is_success(LVar2)) then begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(1367, 158));
                        end
                        else begin
                            display_msg(message_str(1367, 159));
                        end
                    end
                    else begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(1367, 160));
                        end
                        else begin
                            display_msg(message_str(1367, 161));
                        end
                    end
                end
                else begin
                    if (is_success(LVar2)) then begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(1367, 162));
                        end
                        else begin
                            display_msg(message_str(1367, 163));
                        end
                    end
                    else begin
                        if (is_critical(LVar2)) then begin
                            display_msg(message_str(1367, 164));
                        end
                        else begin
                            display_msg(message_str(1367, 165));
                        end
                    end
                end
            end
        end
    end
end

procedure Look_Traps
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    LVar0 := do_check(dude_obj, 1, 0);
    LVar1 := roll_vs_skill(dude_obj, 11, 0);
    if (is_success(LVar0)) then begin
        if (is_critical(LVar0)) then begin
            if (is_success(LVar1)) then begin
                if (is_critical(LVar1)) then begin
                    display_msg(message_str(1367, 104));
                end
                else begin
                    display_msg(message_str(1367, 108));
                end
            end
            else begin
                if (is_critical(LVar1)) then begin
                    display_msg(message_str(1367, 112));
                end
                else begin
                    display_msg(message_str(1367, 116));
                end
            end
        end
        else begin
            if (is_success(LVar1)) then begin
                if (is_critical(LVar1)) then begin
                    display_msg(message_str(1367, 120));
                end
                else begin
                    display_msg(message_str(1367, 124));
                end
            end
            else begin
                if (is_critical(LVar1)) then begin
                    display_msg(message_str(1367, 128));
                end
                else begin
                    display_msg(message_str(1367, 132));
                end
            end
        end
    end
    else begin
        if (is_critical(LVar0)) then begin
            if (is_success(LVar1)) then begin
                if (is_critical(LVar1)) then begin
                    display_msg(message_str(1367, 136));
                end
                else begin
                    display_msg(message_str(1367, 140));
                end
            end
            else begin
                if (is_critical(LVar1)) then begin
                    display_msg(message_str(1367, 144));
                end
                else begin
                    display_msg(message_str(1367, 148));
                end
            end
        end
        else begin
            if (is_success(LVar1)) then begin
                if (is_critical(LVar1)) then begin
                    display_msg(message_str(1367, 152));
                end
                else begin
                    display_msg(message_str(1367, 156));
                end
            end
            else begin
                if (is_critical(LVar1)) then begin
                    display_msg(message_str(1367, 160));
                end
                else begin
                    display_msg(message_str(1367, 164));
                end
            end
        end
    end
end

procedure Look_Locks
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    LVar0 := do_check(dude_obj, 1, 0);
    LVar1 := roll_vs_skill(dude_obj, 9, 0);
    if (is_success(LVar0)) then begin
        if (is_critical(LVar0)) then begin
            if (is_success(LVar1)) then begin
                if (is_critical(LVar1)) then begin
                    display_msg(message_str(1367, 114));
                end
                else begin
                    display_msg(message_str(1367, 115));
                end
            end
            else begin
                if (is_critical(LVar1)) then begin
                    display_msg(message_str(1367, 116));
                end
                else begin
                    display_msg(message_str(1367, 117));
                end
            end
        end
        else begin
            if (is_success(LVar1)) then begin
                if (is_critical(LVar1)) then begin
                    display_msg(message_str(1367, 130));
                end
                else begin
                    display_msg(message_str(1367, 131));
                end
            end
            else begin
                if (is_critical(LVar1)) then begin
                    display_msg(message_str(1367, 132));
                end
                else begin
                    display_msg(message_str(1367, 133));
                end
            end
        end
    end
    else begin
        if (is_critical(LVar0)) then begin
            if (is_success(LVar1)) then begin
                if (is_critical(LVar1)) then begin
                    display_msg(message_str(1367, 146));
                end
                else begin
                    display_msg(message_str(1367, 147));
                end
            end
            else begin
                if (is_critical(LVar1)) then begin
                    display_msg(message_str(1367, 148));
                end
                else begin
                    display_msg(message_str(1367, 149));
                end
            end
        end
        else begin
            if (is_success(LVar1)) then begin
                if (is_critical(LVar1)) then begin
                    display_msg(message_str(1367, 162));
                end
                else begin
                    display_msg(message_str(1367, 163));
                end
            end
            else begin
                if (is_critical(LVar1)) then begin
                    display_msg(message_str(1367, 164));
                end
                else begin
                    display_msg(message_str(1367, 165));
                end
            end
        end
    end
end

procedure Skill_Disarm_Traps
begin
    Traps_Roll := roll_vs_skill(source_obj, 11, 0);
    call Disarm_Traps();
end

procedure Disarm_Traps
begin
    if (is_success(Traps_Roll)) then begin
        if (local_var(1) == 0) then begin
            set_local_var(1, 1);
            if (source_obj == dude_obj) then begin
                display_msg(message_str(1367, 194));
            end
            else begin
                display_msg(message_str(1367, 199));
            end
            if (local_var(5) == 0) then begin
                set_local_var(5, 1);
                give_exp_points(25);
                display_msg(message_str(14, 100) + 25 + message_str(14, 101));
            end
        end
        else begin
            set_local_var(0, 1);
            if (source_obj == dude_obj) then begin
                display_msg(message_str(1367, 196));
            end
            else begin
                display_msg(obj_name(source_obj) + message_str(1367, 201));
            end
        end
    end
    else begin
        if (is_critical(Traps_Roll)) then begin
            call Damage_Critter();
        end
        else begin
            if (local_var(1) == 0) then begin
                if (source_obj == dude_obj) then begin
                    display_msg(message_str(1367, 195));
                end
                else begin
                    display_msg(obj_name(source_obj) + message_str(1367, 200));
                end
            end
            else begin
                display_msg(obj_name(source_obj) + message_str(1367, 202));
            end
        end
    end
end

procedure Unlock_Lock
begin
    Locks_Roll := roll_vs_skill(source_obj, 9, -80);
    call Lockpick_Door();
end

procedure Lockpick_Lock
begin
    Locks_Roll := roll_vs_skill(source_obj, 9, -80 + 20);
    call Lockpick_Door();
end

procedure Lockpick_Door
begin
    script_overrides;
    if (is_success(Locks_Roll)) then begin
        obj_unlock(self_obj);
        if (source_obj == dude_obj) then begin
            display_msg(message_str(1367, 170));
        end
        else begin
            display_msg(obj_name(source_obj) + message_str(1367, 173));
        end
        if (local_var(4) == 0) then begin
            set_local_var(4, 1);
            give_exp_points(25);
            display_msg(message_str(14, 100) + 25 + message_str(14, 101));
        end
    end
    else begin
        if (is_critical(Locks_Roll)) then begin
            jam_lock(self_obj);
            if (source_obj == dude_obj) then begin
                display_msg(message_str(1367, 171));
            end
            else begin
                display_msg(obj_name(source_obj) + message_str(1367, 174));
            end
        end
        else begin
            if (source_obj == dude_obj) then begin
                display_msg(message_str(1367, 172));
            end
            else begin
                display_msg(obj_name(source_obj) + message_str(1367, 175));
            end
        end
    end
end

procedure Super_Lockpick_Lock
begin
    Locks_Roll := roll_vs_skill(source_obj, 9, -80 + 40);
    call Lockpick_Door();
end

procedure Lock_Door
begin
    script_overrides;
    if (is_success(Locks_Roll)) then begin
        obj_lock(self_obj);
        if (source_obj == dude_obj) then begin
            display_msg(message_str(1367, 189));
        end
        else begin
            display_msg(obj_name(source_obj) + message_str(1367, 191));
        end
        if (local_var(4) == 0) then begin
            set_local_var(4, 1);
            give_exp_points(25);
            display_msg(message_str(14, 100) + 25 + message_str(14, 101));
        end
    end
    else begin
        if (source_obj == dude_obj) then begin
            display_msg(message_str(1367, 190));
        end
        else begin
            display_msg(obj_name(source_obj) + message_str(1367, 192));
        end
    end
end

procedure Set_Lock
begin
    script_overrides;
    Locks_Roll := roll_vs_skill(source_obj, 9, -80);
    call Lock_Door();
end

procedure Set_Lockpick_Lock
begin
    Locks_Roll := roll_vs_skill(source_obj, 9, -80 + 20);
    call Lock_Door();
end

procedure Super_Set_Lockpick_Lock
begin
    Locks_Roll := roll_vs_skill(source_obj, 9, -80 + 40);
    call Lock_Door();
end

procedure Set_Trap
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    Traps_Roll := roll_vs_skill(source_obj, 11, 0 - 10);
    LVar0 := obj_being_used_with;
    if (obj_is_open(self_obj)) then begin
        script_overrides;
        if (source_obj == dude_obj) then begin
            display_msg(message_str(1367, 206));
        end
        else begin
            display_msg(obj_name(source_obj) + message_str(1367, 207));
        end
    end
    else begin
        script_overrides;
        LVar1 := rm_mult_objs_from_inven(source_obj, LVar0, 1);
        if (is_success(Traps_Roll)) then begin
            set_local_var(0, 0);
            if (source_obj == dude_obj) then begin
                display_msg(message_str(1367, 208));
            end
            else begin
                display_msg(obj_name(source_obj) + message_str(1367, 210));
            end
        end
        else begin
            if (is_critical(Traps_Roll)) then begin
                call Damage_Critter();
            end
            else begin
                if (source_obj == dude_obj) then begin
                    display_msg(message_str(1367, 209));
                end
                else begin
                    display_msg(obj_name(source_obj) + message_str(1367, 211));
                end
            end
        end
    end
end

procedure Pry_Door
begin
    variable LVar0 := 0;
    LVar0 := do_check(source_obj, 0, -80);
    if (is_success(LVar0)) then begin
        obj_unlock(self_obj);
        if (source_obj == dude_obj) then begin
            if (get_critter_stat(dude_obj, 34) == 0) then begin
                display_msg(message_str(1367, 176));
            end
            else begin
                display_msg(message_str(1367, 1076));
            end
        end
        else begin
            if (get_critter_stat(source_obj, 34) == 0) then begin
                display_msg(obj_name(source_obj) + message_str(1367, 181));
            end
            else begin
                display_msg(obj_name(source_obj) + message_str(1367, 1081));
            end
        end
    end
    else begin
        if (is_critical(LVar0)) then begin
            critter_dmg(source_obj, 2, 0 bwor 256);
            if (source_obj == dude_obj) then begin
                if (2 == 1) then begin
                    display_msg(message_str(1367, 177));
                end
                else begin
                    display_msg(message_str(1367, 178) + 2 + message_str(1367, 179));
                end
            end
            else begin
                if (get_critter_stat(source_obj, 34) == 0) then begin
                    if (2 == 1) then begin
                        display_msg(message_str(1367, 182));
                    end
                    else begin
                        display_msg(message_str(1367, 183) + 2 + message_str(1367, 184));
                    end
                end
                else begin
                    if (2 == 1) then begin
                        display_msg(message_str(1367, 186));
                    end
                    else begin
                        display_msg(message_str(1367, 187) + 2 + message_str(1367, 188));
                    end
                end
            end
        end
        else begin
            if (source_obj == dude_obj) then begin
                if (get_critter_stat(dude_obj, 34) == 0) then begin
                    display_msg(message_str(1367, 180));
                end
                else begin
                    display_msg(message_str(1367, 1080));
                end
            end
            else begin
                if (get_critter_stat(source_obj, 34) == 0) then begin
                    display_msg(obj_name(source_obj) + message_str(1367, 185));
                end
                else begin
                    display_msg(obj_name(source_obj) + message_str(1367, 1085));
                end
            end
        end
    end
end

procedure Damage_Critter
begin
    variable LVar0 := 0;
    LVar0 := random(20, 20);
    if (source_obj == dude_obj) then begin
        critter_dmg(dude_obj, LVar0, 6 bwor 256);
        display_msg(message_str(1367, 166) + LVar0 + message_str(1367, 167));
    end
    else begin
        critter_dmg(source_obj, LVar0, 6 bwor 256);
        display_msg(obj_name(source_obj) + message_str(1367, 168) + LVar0 + message_str(1367, 169));
    end
    set_local_var(0, 1);
end

procedure timed_event_p_proc
begin
    if (obj_is_open(self_obj)) then begin
        if (not(combat_is_initialized)) then begin
            if ((tile_distance_objs(dude_obj, self_obj) > 3) and (checkPartyMembersNearDoor() == 0) and ((tile_distance_objs(self_obj, last_source_obj) > 3) or (critter_state(last_source_obj) == 1))) then begin
                obj_close(self_obj);
            end
            else begin
                add_timer_event(self_obj, 10, 1);
            end
        end
        else begin
            add_timer_event(self_obj, 10, 1);
        end
    end
end

