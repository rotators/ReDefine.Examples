variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure push_p_proc;
procedure use_obj_on_p_proc;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777293) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777293)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777958) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777958)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777957) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777957)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778018) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778018)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
end

procedure critter_p_proc
begin
end

procedure pickup_p_proc
begin
end

procedure talk_p_proc
begin
end

procedure destroy_p_proc
begin
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(203, 100));
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(203, 105));
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 12) then begin
        script_overrides;
        if (is_success(roll_vs_skill(dude_obj, action_being_used, 0))) then begin
            display_msg(message_str(203, 101));
        end
        else begin
            display_msg(message_str(203, 102));
        end
    end
    else begin
        if (action_being_used == 10) then begin
            script_overrides;
        end
    end
end

procedure damage_p_proc
begin
end

procedure map_enter_p_proc
begin
    if (metarule(22, 0) == 0) then begin
        if (metarule(14, 0)) then begin
            critter_add_trait(self_obj, 1, 6, 2);
            critter_add_trait(self_obj, 1, 5, 6);
        end
        if (metarule(22, 0) == 0) then begin
            metarule3(100, self_obj, 1, 0);
            add_timer_event(self_obj, game_ticks(random(60, 90)), 1);
            metarule3(100, self_obj, 2, 0);
            add_timer_event(self_obj, game_ticks(random(60, 85)), 2);
            metarule3(100, self_obj, 3, 0);
            add_timer_event(self_obj, game_ticks(random(70, 300)), 3);
        end
        else begin
            metarule3(100, self_obj, 1, 0);
            add_timer_event(self_obj, game_ticks(random(15, 90)), 1);
            metarule3(100, self_obj, 2, 0);
            add_timer_event(self_obj, game_ticks(random(5, 15)), 2);
            metarule3(100, self_obj, 3, 0);
            add_timer_event(self_obj, game_ticks(random(0, 300)), 3);
        end
    end
end

procedure timed_event_p_proc
begin
    variable LVar0 := 0;
    if (fixed_param == 1) then begin
        if ((critter_state(self_obj) bwand 2) == 0) then begin
            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(1, 3)), 0);
        end
        metarule3(100, self_obj, 1, 0);
        add_timer_event(self_obj, game_ticks(random(45, 90)), 1);
    end
    if (fixed_param == 2) then begin
        float_msg(self_obj, message_str(203, random(201, 205)), 8);
        metarule3(100, self_obj, 2, 0);
        add_timer_event(self_obj, game_ticks(random(30, 45)), 2);
    end
    else begin
        if (fixed_param == 3) then begin
            if (random(1, 3) == 1) then begin
                float_msg(self_obj, message_str(203, 206), 8);
                debug_msg("BRAHMIN IS POOING!!! hehehehe");
                LVar0 := create_object_sid(random(33555178, 33555180), 0, 0, 848);
                move_to(LVar0, tile_num_in_direction(tile_num(self_obj), (has_trait(1, self_obj, 10) + 3) % 6, 1), 0);
            end
            metarule3(100, self_obj, 3, 0);
            add_timer_event(self_obj, game_ticks(random(120, 300)), 3);
        end
        else begin
            if (fixed_param == 4) then begin
                reg_anim_func(2, self_obj);
                reg_anim_func(1, 1);
                reg_anim_animate_reverse(self_obj, 20, -1);
                reg_anim_func(3, 0);
                critter_injure(self_obj, 2 bwor 8388608);
            end
        end
    end
end

procedure push_p_proc
begin
    if (party_member_obj(obj_pid(source_obj)) != 0) then begin
        if (is_success(do_check(source_obj, 0, 0))) then begin
            if ((critter_state(self_obj) bwand 2) == 0) then begin
                reg_anim_func(2, self_obj);
                reg_anim_func(1, 1);
                reg_anim_animate(self_obj, 14, -1);
                reg_anim_animate(self_obj, 20, 5);
                reg_anim_animate(self_obj, 48, -1);
                reg_anim_func(3, 0);
                critter_injure(self_obj, 2);
                add_timer_event(self_obj, game_ticks(random(10, 30)), 4);
                debug_msg("ZCBRAHMN: ahh Cow TIPPED you get +10 Hick Experience Points.");
            end
        end
    end
end

procedure use_obj_on_p_proc
begin
    variable LVar0 := 0;
    if ((obj_pid(obj_being_used_with) == 124) or (obj_pid(obj_being_used_with) == 125)) then begin
        script_overrides;
        LVar0 := obj_being_used_with;
        rm_obj_from_inven(source_obj, obj_being_used_with);
        destroy_object(LVar0);
        if ((critter_state(self_obj) bwand 2) == 0) then begin
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            reg_anim_animate(self_obj, 14, -1);
            reg_anim_animate(self_obj, 20, 5);
            reg_anim_animate(self_obj, 48, -1);
            reg_anim_func(3, 0);
            critter_injure(self_obj, 2);
        end
    end
end

