variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure timed_event_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure weapon_upgrade;
procedure Node998;
procedure Node999;
procedure Node500;
procedure Node550;
procedure Node600;
procedure Node650;
procedure Node700;
procedure Node750;
procedure Node800;
procedure Node850;
procedure Node900;
procedure Node950;
procedure Node1000;
procedure Node1050;
procedure Node1100;
procedure Node1150;
procedure Node1200;
procedure Node1250;
procedure Node1300;
procedure Node1350;
procedure Node1400;
procedure Node1450;
procedure Node1500;
procedure Node1550;
procedure Node1600;
procedure Node1650;
procedure Node1700;
procedure Node1750;
procedure Node1800;
procedure Node1850;
procedure Node1900;
procedure Node1950;
procedure Node2000;
procedure Node2050;
procedure Node2100;
procedure Node2150;
procedure Node2200;
procedure Node2250;
procedure Node2300;
procedure Node2350;
procedure Node2400;
procedure Node2450;
procedure Node2500;
procedure Node2550;
procedure Node_Bridge_Powerfist;
procedure Node_Bridge_Laserpistol;
procedure Node_Bridge_Laserrifle;
procedure Node_Bridge_Plasmapistol;
procedure Node_Bridge_Plasmarifle;
procedure Node_Bridge_Cattleprod;

variable projed_smycku;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if ((((obj_pid(critter_inven_obj(dude_obj, 0)) == 3) or (obj_pid(critter_inven_obj(dude_obj, 0)) == 113) and (not((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) or (obj_pid(critter_inven_obj(party_member_obj(16777779), 0)) == 3) or (obj_pid(critter_inven_obj(party_member_obj(16777779), 0)) == 113)) and (not((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) or (obj_pid(critter_inven_obj(party_member_obj(16777811), 0)) == 3) or (obj_pid(critter_inven_obj(party_member_obj(16777811), 0)) == 113)) and (not((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) or (obj_pid(critter_inven_obj(party_member_obj(16777814), 0)) == 3) or (obj_pid(critter_inven_obj(party_member_obj(16777814), 0)) == 113)) and (global_var(930) == 0)) == 0) and not(game_ui_is_disabled) and obj_can_see_obj(self_obj, dude_obj)) then begin
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
    if ((global_var(927) == 1) and obj_can_see_obj(self_obj, dude_obj)) then begin
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(927, 1);
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if (not(combat_is_initialized)) then begin
            float_msg(self_obj, message_str(405, random(300, 308)), 8);
        end
        metarule3(100, self_obj, 1, 0);
        add_timer_event(self_obj, game_ticks(random(50, 70)), 1);
    end
end

procedure talk_p_proc
begin
    anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
    anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
    start_gdialog(405, self_obj, 4, -1, -1);
    gsay_start;
    if ((local_var(4) != 1) and (projed_smycku == 0)) then begin
        projed_smycku := 1;
        call Node500();
    end
    if ((global_var(943) == 2) and (projed_smycku == 0) and not(((24 * (60 * (60 * 10))) + local_var(6)) <= game_time)) then begin
        projed_smycku := 1;
        call Node1400();
    end
    if ((global_var(943) == 2) and (projed_smycku == 0) and (((24 * (60 * (60 * 10))) + local_var(6)) <= game_time)) then begin
        projed_smycku := 1;
        call Node1450();
    end
    if ((global_var(943) == 3) or (global_var(943) == 4) and (projed_smycku == 0)) then begin
        projed_smycku := 1;
        if (get_critter_stat(dude_obj, 34) == 0) then begin
            call Node1500();
        end
        if (get_critter_stat(dude_obj, 34) == 1) then begin
            call Node2100();
        end
    end
    if ((global_var(943) == 5) and (projed_smycku == 0) and (((2 * (60 * (60 * 10))) + map_var(5)) <= game_time)) then begin
        projed_smycku := 1;
        if (get_critter_stat(dude_obj, 34) == 0) then begin
            call Node1700();
        end
        if (get_critter_stat(dude_obj, 34) == 1) then begin
            call Node2150();
        end
    end
    if ((global_var(943) == 6) and (projed_smycku == 0) and ((local_var(5) bwand 1) == 0) and ((get_critter_stat(dude_obj, 4) + has_trait(0, dude_obj, 49)) > 3)) then begin
        projed_smycku := 1;
        call Node2400();
    end
    if (((get_critter_stat(dude_obj, 4) + has_trait(0, dude_obj, 49)) <= 3) and (projed_smycku == 0)) then begin
        projed_smycku := 1;
        if (get_critter_stat(dude_obj, 34) == 0) then begin
            call Node1900();
        end
        if (get_critter_stat(dude_obj, 34) == 1) then begin
            call Node2250();
        end
    end
    if (projed_smycku == 0) then begin
        if ((local_var(5) bwand 1) != 0) then begin
            if (get_critter_stat(dude_obj, 34) == 0) then begin
                call Node1100();
            end
            if (get_critter_stat(dude_obj, 34) == 1) then begin
                call Node2050();
            end
        end
        else begin
            call Node1050();
        end
    end
    gsay_end;
    end_dialogue;
    projed_smycku := 0;
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(5, global_var(5) + 1);
        if (metarule(51, self_obj) == 2) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(2, 0);
                set_global_var(1, global_var(1) + 1);
                set_global_var(0, global_var(0) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(37, 0);
                set_global_var(38, 0);
                set_global_var(39, 0);
                set_global_var(40, 0);
                set_global_var(41, 0);
                set_global_var(42, 0);
                set_global_var(43, 0);
                set_global_var(44, 0);
                set_global_var(45, 0);
                if (global_var(0) >= 1000) then begin
                    set_global_var(37, 1);
                end
                else begin
                    if (global_var(0) >= 750) then begin
                        set_global_var(38, 1);
                    end
                    else begin
                        if (global_var(0) >= 500) then begin
                            set_global_var(39, 1);
                        end
                        else begin
                            if (global_var(0) >= 250) then begin
                                set_global_var(40, 1);
                            end
                            else begin
                                if (global_var(0) > -250) then begin
                                    set_global_var(41, 1);
                                end
                                else begin
                                    if (global_var(0) > -500) then begin
                                        set_global_var(42, 1);
                                    end
                                    else begin
                                        if (global_var(0) > -750) then begin
                                            set_global_var(43, 1);
                                        end
                                        else begin
                                            if (global_var(0) > -1000) then begin
                                                set_global_var(44, 1);
                                            end
                                            else begin
                                                set_global_var(45, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
            set_global_var(2, 1);
            set_global_var(3, 0);
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
            set_global_var(3, 1);
            set_global_var(2, 0);
        end
        set_global_var(0, global_var(0) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 1) then begin
        display_msg(message_str(405, 150));
    end
    else begin
        display_msg(message_str(405, 100));
    end
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(4) == 1) then begin
        if (combat_is_initialized) then begin
            display_msg(message_str(405, 251));
        end
        else begin
            display_msg(message_str(405, 250));
        end
    end
    else begin
        if (not(combat_is_initialized)) then begin
            display_msg(message_str(405, 200));
        end
    end
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(927, 1);
    end
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, 1, 6, 271);
    critter_add_trait(self_obj, 1, 5, 27);
    metarule3(100, self_obj, 1, 0);
    add_timer_event(self_obj, game_ticks(random(50, 70)), 1);
end

procedure weapon_upgrade
begin
    gfade_out(1);
    set_local_var(5, local_var(5) bwor 16);
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 307);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 307);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 307);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    metarule(43, dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 1;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 307)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 307);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    game_time_advance(60 * (60 * 10));
end

procedure Node998
begin
    set_global_var(927, 1);
end

procedure Node999
begin
    anim(self_obj, 1000, 5);
end

procedure Node500
begin
    gsay_reply(405, 500);
    set_global_var(941, 1);
    set_local_var(4, 1);
    giq_option(4, 405, 501, Node550, 50);
    giq_option(-3, 405, 502, Node550, 50);
end

procedure Node550
begin
    gsay_reply(405, 550);
    if (has_skill(dude_obj, 13) >= 100) then begin
        if (get_critter_stat(dude_obj, 34) == 0) then begin
            giq_option(4, 405, 551, Node600, 50);
        end
        if (get_critter_stat(dude_obj, 34) == 1) then begin
            giq_option(4, 405, 551, Node1950, 50);
        end
    end
    else begin
        giq_option(4, 405, 552, Node650, 50);
    end
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        giq_option(-3, 405, 553, Node1850, 50);
    end
    if (get_critter_stat(dude_obj, 34) == 1) then begin
        giq_option(-3, 405, 553, Node2200, 50);
    end
end

procedure Node600
begin
    gsay_reply(405, 600);
    set_local_var(5, local_var(5) bwor 1);
    giq_option(4, 405, 601, Node750, 50);
end

procedure Node650
begin
    gsay_reply(405, 650);
    giq_option(4, 405, 651, Node700, 50);
end

procedure Node700
begin
    gsay_reply(405, 700);
    if ((local_var(5) bwand 4) == 0) then begin
        giq_option(4, 405, 701, Node1000, 50);
    end
    if (obj_carrying_pid_obj(dude_obj, 545) and (global_var(943) == 1)) then begin
        giq_option(4, 405, 702, Node1350, 50);
    end
    giq_option(4, 405, 703, Node999, 50);
end

procedure Node750
begin
    gsay_reply(405, 750);
    giq_option(4, 405, 751, Node850, 50);
    giq_option(4, 405, 752, Node800, 50);
end

procedure Node800
begin
    gsay_reply(405, 800);
    giq_option(4, 405, 801, Node850, 50);
    if ((local_var(5) bwand 4) == 0) then begin
        giq_option(4, 405, 802, Node1000, 50);
    end
    if (obj_carrying_pid_obj(dude_obj, 545) and (global_var(943) == 1)) then begin
        giq_option(4, 405, 803, Node1350, 50);
    end
    giq_option(4, 405, 804, Node999, 50);
end

procedure Node850
begin
    gsay_reply(405, 850);
    set_local_var(5, local_var(5) bwor 2);
    giq_option(4, 405, 851, Node900, 50);
end

procedure Node900
begin
    gsay_reply(405, 900);
    giq_option(4, 405, 901, Node950, 50);
    if (obj_carrying_pid_obj(dude_obj, 307)) then begin
        giq_option(4, 405, 902, Node1150, 50);
    end
    if ((local_var(5) bwand 8) == 0) then begin
        giq_option(4, 405, 903, Node2300, 50);
    end
    if ((local_var(5) bwand 4) == 0) then begin
        giq_option(4, 405, 904, Node1000, 50);
    end
    if (obj_carrying_pid_obj(dude_obj, 545) and (global_var(943) == 1)) then begin
        giq_option(4, 405, 905, Node1350, 50);
    end
    giq_option(4, 405, 906, Node999, 50);
end

procedure Node950
begin
    gsay_reply(405, 950);
    if (obj_carrying_pid_obj(dude_obj, 307)) then begin
        giq_option(4, 405, 951, Node1150, 50);
    end
    if ((local_var(5) bwand 8) == 0) then begin
        giq_option(4, 405, 952, Node2300, 50);
    end
    if ((local_var(5) bwand 4) == 0) then begin
        giq_option(4, 405, 953, Node1000, 50);
    end
    if (obj_carrying_pid_obj(dude_obj, 545) and (global_var(943) == 1)) then begin
        giq_option(4, 405, 954, Node1350, 50);
    end
    giq_option(4, 405, 955, Node999, 50);
end

procedure Node1000
begin
    gsay_reply(405, 1000);
    set_local_var(5, local_var(5) bwor 4);
    if (((local_var(5) bwand 1) != 0) and ((local_var(5) bwand 2) == 0)) then begin
        giq_option(4, 405, 1001, Node850, 50);
    end
    if (((local_var(5) bwand 2) != 0) and obj_carrying_pid_obj(dude_obj, 307)) then begin
        if ((local_var(5) bwand 16) == 0) then begin
            giq_option(4, 405, 1002, Node1150, 50);
        end
        else begin
            giq_option(4, 405, 1002, Node1300, 50);
        end
    end
    if (obj_carrying_pid_obj(dude_obj, 545) and (global_var(943) == 1)) then begin
        giq_option(4, 405, 1003, Node1350, 50);
    end
    giq_option(4, 405, 1004, Node999, 50);
end

procedure Node1050
begin
    gsay_reply(405, 1050);
    if (has_skill(dude_obj, 13) >= 100) then begin
        giq_option(4, 405, 1054, Node2350, 50);
    end
    if (obj_carrying_pid_obj(dude_obj, 545) and (global_var(943) == 1)) then begin
        giq_option(4, 405, 1051, Node1350, 50);
    end
    if ((local_var(5) bwand 4) == 0) then begin
        giq_option(4, 405, 1052, Node1000, 50);
    end
    giq_option(4, 405, 1053, Node999, 50);
end

procedure Node1100
begin
    gsay_reply(405, 1100);
    if (((local_var(5) bwand 1) != 0) and ((local_var(5) bwand 2) == 0)) then begin
        giq_option(4, 405, 1101, Node850, 50);
    end
    if (((local_var(5) bwand 2) != 0) and obj_carrying_pid_obj(dude_obj, 307)) then begin
        if ((local_var(5) bwand 16) == 0) then begin
            giq_option(4, 405, 1102, Node1150, 50);
        end
        else begin
            giq_option(4, 405, 1102, Node1300, 50);
        end
    end
    if (obj_carrying_pid_obj(dude_obj, 545) and (global_var(943) == 1)) then begin
        giq_option(4, 405, 1103, Node1350, 50);
    end
    if ((local_var(5) bwand 4) == 0) then begin
        giq_option(4, 405, 1104, Node1000, 50);
    end
    giq_option(4, 405, 1105, Node999, 50);
end

procedure Node1150
begin
    gsay_reply(405, 1150);
    if (obj_carrying_pid_obj(dude_obj, 235)) then begin
        giq_option(4, 405, 1151, Node_Bridge_Powerfist, 50);
    end
    if (obj_carrying_pid_obj(dude_obj, 16)) then begin
        giq_option(4, 405, 1152, Node_Bridge_Laserpistol, 50);
    end
    if (obj_carrying_pid_obj(dude_obj, 118)) then begin
        giq_option(4, 405, 1153, Node_Bridge_Laserrifle, 50);
    end
    if (obj_carrying_pid_obj(dude_obj, 24)) then begin
        giq_option(4, 405, 1154, Node_Bridge_Plasmapistol, 50);
    end
    if (obj_carrying_pid_obj(dude_obj, 15)) then begin
        giq_option(4, 405, 1155, Node_Bridge_Plasmarifle, 50);
    end
    if (obj_carrying_pid_obj(dude_obj, 160)) then begin
        giq_option(4, 405, 1156, Node_Bridge_Cattleprod, 50);
    end
    giq_option(4, 405, 1157, Node999, 50);
end

procedure Node1200
begin
    gsay_reply(405, 1200);
    gfade_in(1);
    if (obj_carrying_pid_obj(dude_obj, 307)) then begin
        giq_option(4, 405, 1201, Node1300, 50);
    end
    giq_option(4, 405, 1202, Node999, 50);
end

procedure Node1250
begin
    gsay_reply(405, 1250);
    gfade_in(1);
    if (obj_carrying_pid_obj(dude_obj, 307)) then begin
        giq_option(4, 405, 1251, Node1300, 50);
    end
    giq_option(4, 405, 1252, Node999, 50);
end

procedure Node1300
begin
    gsay_reply(405, 1300);
    if (obj_carrying_pid_obj(dude_obj, 235)) then begin
        giq_option(4, 405, 1301, Node_Bridge_Powerfist, 50);
    end
    if (obj_carrying_pid_obj(dude_obj, 16)) then begin
        giq_option(4, 405, 1302, Node_Bridge_Laserpistol, 50);
    end
    if (obj_carrying_pid_obj(dude_obj, 118)) then begin
        giq_option(4, 405, 1303, Node_Bridge_Laserrifle, 50);
    end
    if (obj_carrying_pid_obj(dude_obj, 24)) then begin
        giq_option(4, 405, 1304, Node_Bridge_Plasmapistol, 50);
    end
    if (obj_carrying_pid_obj(dude_obj, 15)) then begin
        giq_option(4, 405, 1305, Node_Bridge_Plasmarifle, 50);
    end
    if (obj_carrying_pid_obj(dude_obj, 160)) then begin
        giq_option(4, 405, 1306, Node_Bridge_Cattleprod, 50);
    end
    giq_option(4, 405, 1307, Node999, 50);
end

procedure Node1350
begin
    gsay_reply(405, 1350);
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 545);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 545);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 545);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    metarule(43, dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 1;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 545)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 545);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    set_local_var(6, game_time);
    set_global_var(943, 2);
    give_exp_points(500);
    display_msg(message_str(14, 100) + 500 + message_str(14, 101));
    giq_option(4, 405, 1351, Node999, 50);
end

procedure Node1400
begin
    gsay_reply(405, 1400);
    giq_option(4, 405, 1401, Node999, 50);
    giq_option(-3, 405, 1402, Node999, 50);
end

procedure Node1450
begin
    gsay_reply(405, 1450);
    set_global_var(943, 3);
    restock_obj := create_object_sid(392, 0, 0, -1);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    giq_option(4, 405, 1451, Node999, 50);
    giq_option(-3, 405, 1452, Node999, 50);
end

procedure Node1500
begin
    gsay_reply(405, 1500);
    if (global_var(943) == 4) then begin
        giq_option(4, 405, 1501, Node1550, 50);
    end
    if (((local_var(5) bwand 2) != 0) and obj_carrying_pid_obj(dude_obj, 307)) then begin
        giq_option(4, 405, 1502, Node1650, 50);
    end
    if (global_var(943) != 4) then begin
        if (map_var(3) == 0) then begin
            giq_option(4, 405, 1503, Node1600, 50);
        end
        if (map_var(3) > 0) then begin
            if ((local_var(5) bwand 32) == 0) then begin
                giq_option(4, 405, 1506, Node2450, 50);
            end
            else begin
                giq_option(4, 405, 1507, Node1600, 50);
            end
        end
    end
    if (global_var(943) == 4) then begin
        giq_option(-3, 405, 1504, Node1550, 50);
    end
    giq_option(-3, 405, 1505, Node1600, 50);
end

procedure Node1550
begin
    gsay_reply(405, 1550);
    set_global_var(943, 5);
    restock_obj := create_object_sid(358, 0, 0, -1);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    set_map_var(5, game_time);
    give_exp_points(1000);
    display_msg(message_str(14, 100) + 1000 + message_str(14, 101));
    giq_option(4, 405, 1551, Node999, 50);
    giq_option(-3, 405, 1552, Node999, 50);
end

procedure Node1600
begin
    gsay_reply(405, 1600);
    giq_option(4, 405, 1601, Node999, 50);
    giq_option(-3, 405, 1602, Node999, 50);
end

procedure Node1650
begin
    gsay_reply(405, 1650);
    giq_option(4, 405, 1651, Node999, 50);
end

procedure Node1700
begin
    gsay_reply(405, 1700);
    if (obj_carrying_pid_obj(dude_obj, 392)) then begin
        giq_option(4, 405, 1701, Node1750, 50);
    end
    giq_option(4, 405, 1702, Node1800, 50);
    if (obj_carrying_pid_obj(dude_obj, 392)) then begin
        giq_option(-3, 405, 1703, Node1750, 50);
    end
    giq_option(-3, 405, 1704, Node1800, 50);
end

procedure Node1750
begin
    gsay_reply(405, 1750);
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 392);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 392);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 392);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    metarule(43, dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 1;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 392)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 392);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 358);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 358);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 358);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    metarule(43, dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 1;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 358)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 358);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    set_global_var(943, 0);
    giq_option(4, 405, 1751, Node999, 50);
    giq_option(-3, 405, 1752, Node999, 50);
end

procedure Node1800
begin
    gsay_reply(405, 1800);
    giq_option(4, 405, 1801, Node998, 50);
    giq_option(-3, 405, 1802, Node998, 50);
end

procedure Node1850
begin
    gsay_reply(405, 1850);
    giq_option(-3, 405, 1851, Node999, 50);
end

procedure Node1900
begin
    gsay_reply(405, 1900);
    giq_option(-3, 405, 1901, Node999, 50);
end

procedure Node1950
begin
    gsay_reply(405, 1950);
    set_local_var(5, local_var(5) bwor 1);
    giq_option(4, 405, 1951, Node2000, 50);
end

procedure Node2000
begin
    gsay_reply(405, 2000);
    giq_option(4, 405, 2001, Node850, 50);
    giq_option(4, 405, 2002, Node800, 50);
end

procedure Node2050
begin
    gsay_reply(405, 2050);
    if (((local_var(5) bwand 1) != 0) and ((local_var(5) bwand 2) == 0)) then begin
        giq_option(4, 405, 2051, Node850, 50);
    end
    if (((local_var(5) bwand 2) != 0) and obj_carrying_pid_obj(dude_obj, 307)) then begin
        if ((local_var(5) bwand 16) == 0) then begin
            giq_option(4, 405, 2052, Node1150, 50);
        end
        else begin
            giq_option(4, 405, 2052, Node1300, 50);
        end
    end
    if (obj_carrying_pid_obj(dude_obj, 545) and (global_var(943) == 1)) then begin
        giq_option(4, 405, 2053, Node1350, 50);
    end
    if ((local_var(5) bwand 4) == 0) then begin
        giq_option(4, 405, 2054, Node1000, 50);
    end
    giq_option(4, 405, 2055, Node999, 50);
end

procedure Node2100
begin
    gsay_reply(405, 2100);
    if (global_var(943) == 4) then begin
        giq_option(4, 405, 2101, Node1550, 50);
    end
    if (((local_var(5) bwand 2) != 0) and obj_carrying_pid_obj(dude_obj, 307)) then begin
        giq_option(4, 405, 2102, Node1650, 50);
    end
    if (global_var(943) != 4) then begin
        if (map_var(3) == 0) then begin
            giq_option(4, 405, 2103, Node1600, 50);
        end
        if (map_var(3) > 0) then begin
            if ((local_var(5) bwand 32) == 0) then begin
                giq_option(4, 405, 2106, Node2450, 50);
            end
            else begin
                giq_option(4, 405, 2107, Node1600, 50);
            end
        end
    end
    if (global_var(943) == 4) then begin
        giq_option(-3, 405, 2104, Node1550, 50);
    end
    giq_option(-3, 405, 2105, Node1600, 50);
end

procedure Node2150
begin
    gsay_reply(405, 2150);
    if (obj_carrying_pid_obj(dude_obj, 392)) then begin
        giq_option(4, 405, 2151, Node1750, 50);
    end
    giq_option(4, 405, 2152, Node1800, 50);
    if (obj_carrying_pid_obj(dude_obj, 392)) then begin
        giq_option(-3, 405, 2153, Node1750, 50);
    end
    giq_option(-3, 405, 2154, Node1800, 50);
end

procedure Node2200
begin
    gsay_reply(405, 2200);
    giq_option(-3, 405, 2201, Node999, 50);
end

procedure Node2250
begin
    gsay_reply(405, 2250);
    giq_option(-3, 405, 2251, Node999, 50);
end

procedure Node2300
begin
    gsay_reply(405, 2300 + (get_critter_stat(dude_obj, 34) == 1));
    set_local_var(5, local_var(5) bwor 8);
    if (obj_carrying_pid_obj(dude_obj, 307)) then begin
        giq_option(4, 405, 2302, Node1150, 50);
    end
    if ((local_var(5) bwand 4) == 0) then begin
        giq_option(4, 405, 2303, Node1000, 50);
    end
    if (obj_carrying_pid_obj(dude_obj, 545) and (global_var(943) == 1)) then begin
        giq_option(4, 405, 2304, Node1350, 50);
    end
    giq_option(4, 405, 2305, Node999, 50);
end

procedure Node2350
begin
    gsay_reply(405, 2350);
    set_local_var(5, local_var(5) bwor 1);
    giq_option(4, 405, 2351, Node850, 50);
    giq_option(4, 405, 2352, Node800, 50);
end

procedure Node2400
begin
    gsay_reply(405, 2400);
    set_local_var(5, local_var(5) bwor 1);
    set_local_var(5, local_var(5) bwor 2);
    giq_option(4, 405, 2401, Node900, 50);
end

procedure Node2450
begin
    gsay_reply(405, 2450);
    if ((has_skill(dude_obj, 14) > 80) and obj_carrying_pid_obj(dude_obj, 392)) then begin
        giq_option(4, 405, 2451 + (get_critter_stat(dude_obj, 34) == 1), Node2500, 50);
    end
    giq_option(4, 405, 2453, Node999, 50);
end

procedure Node2500
begin
    gsay_reply(405, 2500);
    set_local_var(5, local_var(5) bwor 32);
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 392);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 392);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 392);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    metarule(43, dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 1;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 392)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 392);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    giq_option(4, 405, 2501, Node2550, 50);
end

procedure Node2550
begin
    gsay_reply(405, 2550);
    restock_obj := create_object_sid(392, 0, 0, -1);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    giq_option(4, 405, 2551, Node999, 50);
end

procedure Node_Bridge_Powerfist
begin
    restock_obj := create_object_sid(407, 0, 0, -1);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 235);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 235);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 235);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    metarule(43, dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 1;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 235)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 235);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    call weapon_upgrade();
    call Node1200();
end

procedure Node_Bridge_Laserpistol
begin
    restock_obj := create_object_sid(402, 0, 0, -1);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 16);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 16);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 16);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    metarule(43, dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 1;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 16)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 16);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    call weapon_upgrade();
    call Node1200();
end

procedure Node_Bridge_Laserrifle
begin
    restock_obj := create_object_sid(401, 0, 0, -1);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 118);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 118);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 118);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    metarule(43, dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 1;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 118)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 118);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    call weapon_upgrade();
    call Node1250();
end

procedure Node_Bridge_Plasmapistol
begin
    restock_obj := create_object_sid(406, 0, 0, -1);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 24);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 24);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 24);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    metarule(43, dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 1;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 24)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 24);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    call weapon_upgrade();
    call Node1250();
end

procedure Node_Bridge_Plasmarifle
begin
    restock_obj := create_object_sid(233, 0, 0, -1);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 15);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 15);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 15);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    metarule(43, dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 1;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 15)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 15);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    call weapon_upgrade();
    call Node1200();
end

procedure Node_Bridge_Cattleprod
begin
    restock_obj := create_object_sid(399, 0, 0, -1);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 160);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 160);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 160);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    metarule(43, dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 1;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 160)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 160);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    call weapon_upgrade();
    call Node1200();
end

