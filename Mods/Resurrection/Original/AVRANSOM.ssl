/*******************************************************
*      Some unreferenced imported varables found.      *
*      Because of it it is impossible to specify       *
*      the real names of global variables.             *
*******************************************************/

variable GVar0;
variable GVar1 := 1;
variable GVar2;
variable GVar3;
variable GVar4;
variable GVar5;
variable GVar6;
variable GVar7;
variable GVar8;
variable GVar9;
variable GVar10;
variable GVar11;
variable GVar12;
variable GVar13;
variable GVar14;
variable GVar15;
variable GVar16;
variable GVar17;
variable GVar18;
variable GVar19;
variable GVar20;
variable GVar21;
variable GVar22 := 2;
variable GVar23;
variable GVar24;
variable GVar25;

/* ?import? variable ProtoOfItemGiven; */
/* ?import? variable ValueOfRollCheck; */
/* ?import? variable Scenery_Creation; */
/* ?import? variable Scenery_Creation_Hex; */
/* ?import? variable Scenery_Creation_Count; */
/* ?import? variable Temp_Scenery_Creation_Hex; */
/* ?import? variable Scenery_Creation_Ptr; */
/* ?import? variable How_Many_Party_Members_Are_Injured; */
/* ?import? variable How_Many_Party_Members_Armed; */
/* ?import? variable PartyHealingItem; */

procedure checkPartyMembersNearDoor;

/* ?import? variable global_temp; */
/* ?import? variable dest_tile; */
/* ?import? variable step_tile; */
/* ?import? variable in_dialog; */
/* ?import? variable forced_node; */
/* ?import? variable restock_amt; */
/* ?import? variable restock_obj; */
/* ?import? variable restock_trash; */
/* ?import? variable removed_qty; */
/* ?import? variable toRemove_qty; */

procedure div(variable arg0, variable arg1);

/* ?import? variable Static_Reaction; */
/* ?import? variable Evil_Critter; */
/* ?import? variable Slavery_Tolerant; */
/* ?import? variable Karma_Perception; */
/* ?import? variable reaction_bonus_town_rep; */
/* ?import? variable reaction_bonus_karma; */

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure combat_p_proc;
procedure timed_event_p_proc;

import variable Map_event;

/* ?import? variable Police_obj; */

import variable Vex_obj;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777293) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777293)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777958) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777958)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777957) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777957)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778018) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778018)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
    Vex_obj := self_obj;
end

procedure critter_p_proc
begin
    if (map_var(0) == 2) then begin
        if (local_var(4) == 19736) then begin
            if ((tile_num(self_obj) == 21554) or (obj_on_screen(self_obj) == 0)) then begin
                set_map_var(0, 3);
                add_timer_event(Map_event, 0, 3);
                destroy_object(self_obj);
            end
        end
        if (local_var(4) == 20332) then begin
            animate_move_obj_to_tile(self_obj, 21555, 1);
            if ((tile_num(self_obj) == 21555) or (obj_on_screen(self_obj) == 0)) then begin
                destroy_object(self_obj);
            end
        end
        if (local_var(4) == 21133) then begin
            animate_move_obj_to_tile(self_obj, 21553, 1);
            if ((tile_num(self_obj) == 21553) or (obj_on_screen(self_obj) == 0)) then begin
                destroy_object(self_obj);
            end
        end
    end
    if (map_var(0) == 3) then begin
        if (local_var(4) == 20332) then begin
            set_obj_visibility(self_obj, 1);
        end
        if (local_var(4) == 21133) then begin
            set_obj_visibility(self_obj, 1);
        end
    end
end

procedure pickup_p_proc
begin
end

procedure talk_p_proc
begin
    if (local_var(4) == 19736) then begin
        float_msg(self_obj, message_str(1702, 301), 2);
    end
    else begin
        float_msg(self_obj, message_str(1702, 300), 2);
    end
end

procedure destroy_p_proc
begin
    if (local_var(4) == 19736) then begin
        set_global_var(867, global_var(867) bwor 16);
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 19736) then begin
        display_msg(message_str(1702, 150));
    end
    else begin
        if (get_critter_stat(self_obj, 34) == 0) then begin
            display_msg(message_str(1702, 100));
        end
        else begin
            display_msg(message_str(1702, 101));
        end
    end
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(4) == 19736) then begin
        display_msg(message_str(1702, 250));
    end
    else begin
        if (get_critter_stat(self_obj, 34) == 0) then begin
            display_msg(message_str(1702, 200));
        end
        else begin
            display_msg(message_str(1702, 201));
        end
    end
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(861, 1);
    end
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, 1, 6, 0);
    critter_add_trait(self_obj, 1, 5, 13);
    if (local_var(4) == 0) then begin
        set_local_var(4, tile_num(self_obj));
    end
    if ((global_var(867) bwand 16) != 0) then begin
        destroy_object(self_obj);
    end
end

procedure combat_p_proc
begin
    if (fixed_param == 4) then begin
        if ((map_var(0) == 1) and (local_var(4) == 19736)) then begin
            terminate_combat;
            add_timer_event(self_obj, 0, 1);
        end
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        game_ui_disable;
        animate_move_obj_to_tile(self_obj, 21554, 1);
        float_msg(self_obj, message_str(1702, 310), 8);
        set_map_var(0, 2);
    end
end

