variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure use_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure timed_event_p_proc;
procedure map_enter_p_proc;

variable Open_Gate;

import variable cisvoj_obj;
import variable cisdoor_obj;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777293) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777293)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
    cisdoor_obj := self_obj;
end

procedure use_p_proc
begin
    if (((global_var(904) bwand 1) != 0) or (((global_var(904) bwand 2) != 0) and not((global_var(904) bwand 8192) != 0)) or ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0))) then begin
        if (global_var(998) == 0) then begin
            Open_Gate := 1;
        end
    end
    if (local_var(4) != 1) then begin
        if (Open_Gate == 0) then begin
            script_overrides;
            add_timer_event(cisvoj_obj, 0, 1);
        end
        else begin
            add_timer_event(cisvoj_obj, 0, 2);
            if (not(obj_is_open(self_obj))) then begin
                obj_open(self_obj);
            end
            Open_Gate := 0;
        end
    end
end

procedure use_skill_on_p_proc
begin
    call use_p_proc();
end

procedure use_obj_on_p_proc
begin
    call use_p_proc();
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        set_local_var(4, 1);
    end
    if (fixed_param == 2) then begin
        Open_Gate := 1;
        call use_p_proc();
    end
    if (fixed_param == 3) then begin
        Open_Gate := 1;
        if (not(obj_is_open(self_obj))) then begin
            obj_open(self_obj);
        end
    end
end

procedure map_enter_p_proc
begin
    if (obj_is_open(self_obj) and not(metarule(22, 0))) then begin
        obj_close(self_obj);
    end
end

