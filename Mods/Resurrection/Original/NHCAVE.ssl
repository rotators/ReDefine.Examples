variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Initial_Inven;

export variable cave_obj;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
    cave_obj := self_obj;
end

procedure map_enter_p_proc
begin
    set_light_level(50);
    if (metarule(14, 0)) then begin
        call Initial_Inven();
        display_msg(message_str(1304, 200));
    end
end

procedure timed_event_p_proc
begin
    display_msg(message_str(1304, 100));
    give_exp_points(500);
    display_msg(message_str(14, 100) + 500 + message_str(14, 101));
    set_global_var(47, global_var(47) + 10);
end

procedure Initial_Inven
begin
    variable LVar0 := 0;
    LVar0 := create_object_sid(309, 0, 0, -1);
    add_mult_objs_to_inven(dude_obj, LVar0, 1);
    LVar0 := create_object_sid(300, 0, 0, -1);
    add_mult_objs_to_inven(dude_obj, LVar0, 1);
    LVar0 := create_object_sid(29, 0, 0, -1);
    add_mult_objs_to_inven(dude_obj, LVar0, 1);
    LVar0 := create_object_sid(40, 0, 0, -1);
    add_mult_objs_to_inven(dude_obj, LVar0, 3);
    LVar0 := create_object_sid(4, 0, 0, -1);
    add_mult_objs_to_inven(dude_obj, LVar0, 1);
    if (has_skill(dude_obj, 3) > 70) then begin
        LVar0 := create_object_sid(21, 0, 0, -1);
        add_mult_objs_to_inven(dude_obj, LVar0, 1);
    end
    if (has_skill(dude_obj, 5) > 40) then begin
        LVar0 := create_object_sid(45, 0, 0, -1);
        add_mult_objs_to_inven(dude_obj, LVar0, 2);
    end
    if (has_skill(dude_obj, 9) > 35) then begin
        LVar0 := create_object_sid(84, 0, 0, -1);
        add_mult_objs_to_inven(dude_obj, LVar0, 1);
    end
    if (has_skill(dude_obj, 6) > 45) then begin
        LVar0 := create_object_sid(47, 0, 0, -1);
        add_mult_objs_to_inven(dude_obj, LVar0, 1);
    end
    if (has_skill(dude_obj, 7) > 35) then begin
        LVar0 := create_object_sid(49, 0, 0, -1);
        add_mult_objs_to_inven(dude_obj, LVar0, 1);
    end
    if (has_skill(dude_obj, 13) > 35) then begin
        LVar0 := create_object_sid(75, 0, 0, -1);
        add_mult_objs_to_inven(dude_obj, LVar0, 1);
    end
    if (has_skill(dude_obj, 15) > 40) then begin
        LVar0 := create_object_sid(71, 0, 0, -1);
        add_mult_objs_to_inven(dude_obj, LVar0, 2);
    end
    if (has_skill(dude_obj, 16) > 45) then begin
        LVar0 := create_object_sid(325, 0, 0, -1);
        add_mult_objs_to_inven(dude_obj, LVar0, 1);
    end
    if (has_skill(dude_obj, 17) > 40) then begin
        LVar0 := create_object_sid(284, 0, 0, -1);
        add_mult_objs_to_inven(dude_obj, LVar0, 3);
    end
    critter_heal(dude_obj, -5);
end

