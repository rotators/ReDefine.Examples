variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure look_at_p_proc;
procedure description_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure map_enter_p_proc;
procedure critter_p_proc;

import variable Map_event;
import variable force_switcher;

variable see_time;
variable what_tile;
variable team_swap;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777293) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777293)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777958) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777958)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777957) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777957)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778018) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778018)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(1741, 100));
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(1741, 200));
end

procedure damage_p_proc
begin
    if ((source_obj == dude_obj) and (map_var(2) == 0) and (global_var(864) == 0) and not((global_var(865) bwand 4194304) != 0) and not((global_var(865) bwand 67108864) != 0)) then begin
        set_global_var(864, 1);
        if (team_swap == 0) then begin
            critter_add_trait(self_obj, 1, 6, 258);
            team_swap := 1;
        end
    end
end

procedure destroy_p_proc
begin
    set_global_var(1012, global_var(1012) + 1);
    if ((global_var(1012) >= 18) and ((global_var(865) bwand 268435456) != 0) and (elevation(dude_obj) == 2) and ((global_var(865) bwand 4194304) != 0)) then begin
        if ((global_var(865) bwand 134217728) != 0) then begin
            add_timer_event(Map_event, game_ticks(0), 25);
        end
        else begin
            if (global_var(1014) >= (20 + (2 * map_var(1)))) then begin
                add_timer_event(Map_event, game_ticks(0), 25);
            end
        end
    end
end

procedure map_enter_p_proc
begin
    if (local_var(4) == 0) then begin
        set_local_var(4, tile_num(self_obj));
    end
    critter_add_trait(self_obj, 1, 6, 197);
    critter_add_trait(self_obj, 1, 5, 130);
end

procedure critter_p_proc
begin
    if ((global_var(903) == 4) and (elevation(self_obj) == 2) and (elevation(dude_obj) == 1)) then begin
        add_timer_event(force_switcher, 0, 10);
        critter_heal(self_obj, -get_critter_stat(self_obj, 7));
    end
    if ((map_var(0) bwand 32768) != 0) then begin
    end
    else begin
        if (elevation(dude_obj) == elevation(self_obj)) then begin
            if ((see_time < game_time) and ((map_var(2) == 1) or not(tile_in_tile_rect(17148, 17132, 21948, 21932, tile_num(self_obj))))) then begin
                if (obj_can_see_obj(self_obj, dude_obj)) then begin
                    attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
                end
                see_time := game_time + random(10 * 2, 10 * 5);
            end
            if (not((global_var(865) bwand 4194304) != 0) and not(tile_in_tile_rect(17148, 17132, 21948, 21932, tile_num(self_obj)))) then begin
                set_global_var(865, global_var(865) bwor 4194304);
            end
            if (not(anim_busy(self_obj))) then begin
                reg_anim_func(2, self_obj);
                reg_anim_func(1, 1);
                if ((map_var(2) == 1) and tile_in_tile_rect(17148, 17132, 21948, 21932, tile_num(self_obj))) then begin
                    if (what_tile == 0) then begin
                        what_tile := random(1, 5);
                    end
                    if (what_tile == 1) then begin
                        animate_move_obj_to_tile(self_obj, 18925, 0);
                    end
                    if (what_tile == 2) then begin
                        animate_move_obj_to_tile(self_obj, 18127, 0);
                    end
                    if (what_tile == 3) then begin
                        animate_move_obj_to_tile(self_obj, 20528, 0);
                    end
                    if (what_tile == 4) then begin
                        animate_move_obj_to_tile(self_obj, 18727, 0);
                    end
                    if (what_tile == 5) then begin
                        animate_move_obj_to_tile(self_obj, 18527, 0);
                    end
                    if ((global_var(859) == 1) and ((global_var(865) bwand 4194304) != 0) and (see_time < game_time) and not((global_var(865) bwand 67108864) != 0)) then begin
                        set_global_var(864, 1);
                    end
                    see_time := game_time + random(10 * 2, 10 * 5);
                end
                else begin
                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(0, 5), random(1, 9)), 0);
                end
                reg_anim_func(3, 0);
            end
        end
    end
end

