variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);

variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_exit_p_proc;
procedure timed_event_p_proc;
procedure push_p_proc;

variable Projed_smycku;
variable probability;
variable DO_FLOAT_PST := 9;
variable pojistka;
variable temp_critter;
variable clearni;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if ((local_var(4) == 1) or (global_var(860) == 1) and (tile_distance(tile_num(self_obj), tile_num(dude_obj)) < 13) and obj_can_see_obj(self_obj, dude_obj) and (has_trait(1, self_obj, 666) == 1)) then begin
        if (critter_is_fleeing(self_obj)) then begin
            if (anim_busy(self_obj) == 0) then begin
                if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                    if (anim_busy(self_obj) == 0) then begin
                        global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                        global_temp := (global_temp + 1) % 6;
                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                            debug_msg("flee loop: rot == " + global_temp);
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                        end
                    end
                end
            end
        end
        else begin
            attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
        end
    end
    if (tile_in_tile_rect(23897, 23888, 26497, 26488, tile_num(self_obj))) then begin
        if (clearni == 0) then begin
            reg_anim_func(2, self_obj);
            clearni := 1;
        end
        animate_move_obj_to_tile(self_obj, local_var(5), 0);
    end
    else begin
        if (clearni == 1) then begin
            clearni := 0;
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(4, 1);
    end
end

procedure talk_p_proc
begin
    if ((Projed_smycku == 0) and (global_var(859) == 1)) then begin
        if (get_critter_stat(self_obj, 34) == 0) then begin
            float_msg(self_obj, message_str(1681, random(330, 336)), 8);
        end
        if (get_critter_stat(self_obj, 34) == 1) then begin
            float_msg(self_obj, message_str(1681, random(331, 337)), 8);
        end
        Projed_smycku := 1;
    end
    if (Projed_smycku == 0) then begin
        while (Projed_smycku == 0) do begin
            probability := random(0, 10);
            if ((party_member_obj(16777812) != 0) and (probability >= DO_FLOAT_PST) and (Projed_smycku == 0)) then begin
                if (get_critter_stat(self_obj, 34) == 0) then begin
                    float_msg(self_obj, message_str(1681, random(318, 320)), 8);
                end
                if (get_critter_stat(self_obj, 34) == 1) then begin
                    float_msg(self_obj, message_str(1681, random(319, 321)), 8);
                end
                Projed_smycku := 1;
            end
            probability := random(0, 10);
            if ((Projed_smycku == 0) and (probability >= DO_FLOAT_PST) and (global_var(891) >= 6)) then begin
                float_msg(self_obj, message_str(1681, 317), 8);
                Projed_smycku := 1;
            end
            probability := random(0, 11);
            if ((Projed_smycku == 0) and (probability >= DO_FLOAT_PST) and ((global_var(867) bwand 2) == 0) and (((global_var(867) bwand 4) != 0) or ((global_var(867) bwand 8) != 0))) then begin
                float_msg(self_obj, message_str(1681, 314), 8);
                Projed_smycku := 1;
            end
            probability := random(0, 12);
            if ((Projed_smycku == 0) and (probability >= DO_FLOAT_PST) and (global_var(886) == 1)) then begin
                float_msg(self_obj, message_str(1681, random(312, 313)), 8);
                Projed_smycku := 1;
            end
            probability := random(0, 10);
            if ((Projed_smycku == 0) and (probability >= DO_FLOAT_PST) and ((global_var(867) bwand 16) != 0)) then begin
                float_msg(self_obj, message_str(1681, 311), 8);
                Projed_smycku := 1;
            end
            probability := random(0, 10);
            if ((Projed_smycku == 0) and (probability >= DO_FLOAT_PST) and (global_var(878) >= 3)) then begin
                float_msg(self_obj, message_str(1681, 310), 8);
                Projed_smycku := 1;
            end
            probability := random(0, 10);
            if ((Projed_smycku == 0) and (probability >= DO_FLOAT_PST) and (global_var(871) < 1) and not((global_var(867) bwand 16) != 0)) then begin
                float_msg(self_obj, message_str(1681, 309), 8);
                Projed_smycku := 1;
            end
            probability := random(0, 10);
            if ((Projed_smycku == 0) and (probability >= DO_FLOAT_PST) and (global_var(886) == 0)) then begin
                float_msg(self_obj, message_str(1681, 308), 8);
                Projed_smycku := 1;
            end
            if (cur_map_index == 21) then begin
                probability := random(0, 10);
                if ((Projed_smycku == 0) and (probability >= DO_FLOAT_PST) and ((game_time - map_var(3)) < (24 * (60 * (60 * 10)) * 4)) and (cur_map_index == 21)) then begin
                    float_msg(self_obj, message_str(1681, 307), 8);
                    if (map_var(3) == 0) then begin
                        set_map_var(3, game_time);
                    end
                    Projed_smycku := 1;
                end
            end
            probability := random(0, 10);
            if ((Projed_smycku == 0) and (probability >= DO_FLOAT_PST) and not((global_var(867) bwand 4) != 0) and not((global_var(867) bwand 8) != 0)) then begin
                float_msg(self_obj, message_str(1681, 306), 8);
                Projed_smycku := 1;
            end
            probability := random(0, 10);
            if ((Projed_smycku == 0) and (probability >= DO_FLOAT_PST) and not((global_var(865) bwand 262144) != 0)) then begin
                if (get_critter_stat(self_obj, 34) == 0) then begin
                    float_msg(self_obj, message_str(1681, 304), 8);
                end
                if (get_critter_stat(self_obj, 34) == 1) then begin
                    float_msg(self_obj, message_str(1681, 305), 8);
                end
                Projed_smycku := 1;
            end
            probability := random(0, 10);
            if ((Projed_smycku == 0) and (probability >= DO_FLOAT_PST) and (global_var(870) != 2)) then begin
                if (get_critter_stat(dude_obj, 34) == 0) then begin
                    float_msg(self_obj, message_str(1681, 300), 8);
                end
                if (get_critter_stat(dude_obj, 34) == 1) then begin
                    float_msg(self_obj, message_str(1681, 301), 8);
                end
                Projed_smycku := 1;
            end
            probability := random(0, 17);
            if ((Projed_smycku == 0) and (probability >= 17) and (global_var(891) < 6)) then begin
                if (get_critter_stat(self_obj, 34) == 0) then begin
                    float_msg(self_obj, message_str(1681, 315), 8);
                end
                if (get_critter_stat(self_obj, 34) == 1) then begin
                    float_msg(self_obj, message_str(1681, 316), 8);
                end
                Projed_smycku := 1;
            end
            pojistka := pojistka + 1;
            probability := random(0, 11);
            if ((Projed_smycku == 0) and (probability >= DO_FLOAT_PST) or (pojistka > 4)) then begin
                probability := random(1, 2);
                if (probability == 1) then begin
                    float_msg(self_obj, message_str(1681, random(302, 303)), 8);
                end
                else begin
                    float_msg(self_obj, message_str(1681, random(322, 324)), 8);
                end
                pojistka := 0;
                Projed_smycku := 1;
            end
        end
    end
    Projed_smycku := 0;
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(5, global_var(5) + 1);
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
            set_global_var(2, 1);
            set_global_var(3, 0);
        end
        if (metarule(51, self_obj) == 2) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(2, 0);
                set_global_var(1, global_var(1) + 1);
                set_global_var(0, global_var(0) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(37, 0);
                set_global_var(38, 0);
                set_global_var(39, 0);
                set_global_var(40, 0);
                set_global_var(41, 0);
                set_global_var(42, 0);
                set_global_var(43, 0);
                set_global_var(44, 0);
                set_global_var(45, 0);
                if (global_var(0) >= 1000) then begin
                    set_global_var(37, 1);
                end
                else begin
                    if (global_var(0) >= 750) then begin
                        set_global_var(38, 1);
                    end
                    else begin
                        if (global_var(0) >= 500) then begin
                            set_global_var(39, 1);
                        end
                        else begin
                            if (global_var(0) >= 250) then begin
                                set_global_var(40, 1);
                            end
                            else begin
                                if (global_var(0) > -250) then begin
                                    set_global_var(41, 1);
                                end
                                else begin
                                    if (global_var(0) > -500) then begin
                                        set_global_var(42, 1);
                                    end
                                    else begin
                                        if (global_var(0) > -750) then begin
                                            set_global_var(43, 1);
                                        end
                                        else begin
                                            if (global_var(0) > -1000) then begin
                                                set_global_var(44, 1);
                                            end
                                            else begin
                                                set_global_var(45, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(51, global_var(51) + -8);
                debug_msg("Added " + -8 + " to Town Rep");
            end
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
            set_global_var(3, 1);
            set_global_var(2, 0);
        end
        set_global_var(0, global_var(0) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(51, global_var(51) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
    if (((tile_contains_pid_obj(local_var(5), elevation(self_obj), 33554499) != 0) == 0) and (cur_map_index == 21)) then begin
        temp_critter := create_object_sid(obj_pid(self_obj), 0, 0, 1681);
        set_obj_visibility(temp_critter, 1);
        move_to(temp_critter, local_var(5), elevation(self_obj));
    end
    if (cur_map_index == 21) then begin
        set_map_var(2, map_var(2) + 1);
    end
    if (local_var(5) == 11879) then begin
        set_global_var(867, global_var(867) bwor 16384);
    end
    if (local_var(5) == 12076) then begin
        set_global_var(867, global_var(867) bwor 32768);
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (get_critter_stat(self_obj, 34) == 0) then begin
        display_msg(message_str(1681, 100));
    end
    else begin
        display_msg(message_str(1681, 101));
    end
end

procedure description_p_proc
begin
    script_overrides;
    if (get_critter_stat(self_obj, 34) == 0) then begin
        display_msg(message_str(1681, 200));
    end
    else begin
        display_msg(message_str(1681, 201));
    end
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(860, 1);
    end
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, 1, 6, 255);
    critter_add_trait(self_obj, 1, 5, 14);
    if (global_var(878) == 1) then begin
        set_local_var(4, 0);
    end
    if (not(metarule(22, 0))) then begin
        if ((local_var(5) == 11879) and ((global_var(867) bwand 16384) != 0)) then begin
            destroy_object(self_obj);
        end
        if ((local_var(5) == 12076) and ((global_var(867) bwand 32768) != 0)) then begin
            destroy_object(self_obj);
        end
        if (local_var(5) == 0) then begin
            set_local_var(5, tile_num(self_obj));
        end
        if (local_var(5) == 23090) then begin
            set_local_var(6, 1);
        end
        if (local_var(5) == 20702) then begin
            set_local_var(6, 1);
        end
        if (local_var(5) == 15116) then begin
            set_local_var(6, 1);
        end
        if (local_var(5) == 16529) then begin
            set_local_var(6, 1);
        end
        if (local_var(5) == 15336) then begin
            set_local_var(6, 1);
        end
        if (local_var(5) == 14698) then begin
            set_local_var(6, 1);
        end
        if (local_var(5) == 12691) then begin
            set_local_var(6, 1);
        end
        if (local_var(5) == 17489) then begin
            set_local_var(6, 1);
        end
        if (local_var(5) == 26887) then begin
            set_local_var(6, 1);
        end
        if (local_var(5) == 26882) then begin
            set_local_var(6, 1);
        end
        if (local_var(5) == 19324) then begin
            set_local_var(6, 1);
        end
        if (local_var(5) == 17923) then begin
            set_local_var(6, 1);
        end
        if (local_var(5) == 17326) then begin
            set_local_var(6, 1);
        end
        if (local_var(5) == 16914) then begin
            set_local_var(6, 1);
        end
        if (local_var(5) == 17110) then begin
            set_local_var(6, 1);
        end
        if ((tile_num(self_obj) != local_var(5)) and not(metarule(14, 0)) and not(metarule(22, 0))) then begin
            if (global_var(860) != 1) then begin
                move_to(self_obj, local_var(5), elevation(self_obj));
            end
        end
        if ((has_trait(1, self_obj, 666) == 0) and (random(1, 4) == 4) and not(metarule(22, 0))) then begin
            set_obj_visibility(self_obj, 0);
        end
    end
    if ((local_var(6) == 1) and (has_trait(1, self_obj, 666) == 1)) then begin
        metarule3(100, self_obj, 1, 0);
    end
    add_timer_event(self_obj, game_ticks(random(10, 30)), 1);
end

procedure map_exit_p_proc
begin
    float_msg(self_obj, 0, 0);
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and (local_var(6) == 1)) then begin
        if (not(anim_busy(self_obj))) then begin
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            if ((local_var(5) == 23090) or (local_var(5) == 26887) or (local_var(5) == 20702) or (local_var(5) == 17489)) then begin
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(local_var(5), random(0, 3), random(1, 5)), 0);
            end
            else begin
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(local_var(5), random(0, 5), random(1, 5)), 0);
            end
            reg_anim_func(3, 0);
        end
        if (local_var(6) == 1) then begin
            metarule3(100, self_obj, 1, 0);
        end
        add_timer_event(self_obj, game_ticks(random(10, 30)), 1);
    end
end

procedure push_p_proc
begin
    if (not(local_var(6) == 1)) then begin
        script_overrides;
    end
end

