variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure map_enter_p_proc;
procedure map_exit_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure Node999;
procedure Node999_5HB_down;
procedure Node500;
procedure Node550;
procedure Node600;
procedure Node650;
procedure Node700;
procedure Node750;
procedure Node800;
procedure Node850;
procedure Node900;
procedure Node950;
procedure Node1000;
procedure Node1250;
procedure Node1300;
procedure Node1350;
procedure Node1400;
procedure Node1450;
procedure Robo_party_add;
procedure Robo_party_remove;
procedure Follow_me_close;
procedure Follow_me_medium;
procedure Follow_me_far;

variable dialog_loop;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if (party_member_obj(16777294) != 0) then begin
        if (((local_var(6) != 0) == 0) and ((global_var(398) != 0) == 0)) then begin
            if (local_var(5) == 0) then begin
                set_local_var(5, 6);
            end
            if (tile_distance_objs(self_obj, dude_obj) > (3 * local_var(5) / 2)) then begin
                if (tile_distance_objs(self_obj, dude_obj) > (3 * local_var(5) / 2 * 2)) then begin
                    if ((tile_num(self_obj) != tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5))) and (tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5)) != 0)) then begin
                        if ((dest_tile == tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5))) and (step_tile < 0)) then begin
                            step_tile := step_tile + 1;
                        end
                        else begin
                            if (anim_busy(self_obj) == 0) then begin
                                dest_tile := tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5));
                                step_tile := tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5));
                                animate_move_obj_to_tile(self_obj, step_tile, 1);
                                debug_msg("move_to_point: self_tile == " + tile_num(self_obj));
                                while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5))) >= tile_distance(step_tile, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5))))) do begin
                                    step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), ((tile_distance_objs(dude_obj, self_obj) / 5) + 1) % tile_distance(step_tile, tile_num(self_obj)));
                                    debug_msg("move_to_point: step_tile == " + step_tile);
                                    animate_move_obj_to_tile(self_obj, step_tile, 1);
                                end
                                if (anim_busy(self_obj) == 0) then begin
                                    if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
                                        if (anim_busy(self_obj) == 0) then begin
                                            global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                            global_temp := (global_temp + 1) % 6;
                                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                debug_msg("flee loop: rot == " + global_temp);
                                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                global_temp := (global_temp + 1) % 6;
                                            end
                                        end
                                    end
                                    else begin
                                        step_tile := -10;
                                    end
                                end
                            end
                            else begin
                                if (tile_distance(tile_num(self_obj), tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5))) < tile_distance(dest_tile, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5)))) then begin
                                    reg_anim_func(2, self_obj);
                                end
                            end
                        end
                    end
                end
                else begin
                    if ((tile_num(self_obj) != tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5))) and (tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5)) != 0)) then begin
                        if ((dest_tile == tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5))) and (step_tile < 0)) then begin
                            step_tile := step_tile + 1;
                        end
                        else begin
                            if (anim_busy(self_obj) == 0) then begin
                                dest_tile := tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5));
                                step_tile := tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5));
                                animate_move_obj_to_tile(self_obj, step_tile, 0);
                                debug_msg("move_to_point: self_tile == " + tile_num(self_obj));
                                while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5))) >= tile_distance(step_tile, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5))))) do begin
                                    step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), ((tile_distance_objs(dude_obj, self_obj) / 5) + 1) % tile_distance(step_tile, tile_num(self_obj)));
                                    debug_msg("move_to_point: step_tile == " + step_tile);
                                    animate_move_obj_to_tile(self_obj, step_tile, 0);
                                end
                                if (anim_busy(self_obj) == 0) then begin
                                    if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
                                        if (anim_busy(self_obj) == 0) then begin
                                            global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                            global_temp := (global_temp + 1) % 6;
                                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                                debug_msg("flee loop: rot == " + global_temp);
                                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                                global_temp := (global_temp + 1) % 6;
                                            end
                                        end
                                    end
                                    else begin
                                        step_tile := -10;
                                    end
                                end
                            end
                            else begin
                                if (tile_distance(tile_num(self_obj), tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5))) < tile_distance(dest_tile, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), local_var(5)))) then begin
                                    reg_anim_func(2, self_obj);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure pickup_p_proc
begin
end

procedure push_p_proc
begin
    if (not(party_member_obj(16777294) != 0)) then begin
        script_overrides;
    end
end

procedure talk_p_proc
begin
    if (get_critter_stat(dude_obj, 4) < 4) then begin
        display_msg(message_str(437, 300));
    end
    else begin
        anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
        if (party_member_obj(16777294) != 0) then begin
            anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
        end
        start_gdialog(437, self_obj, 4, -1, -1);
        gsay_start;
        if ((global_var(938) == 1) and (map_var(6) == 0) and (dialog_loop == 0)) then begin
            dialog_loop := 1;
            call Node650();
        end
        if ((global_var(938) == 1) and (map_var(6) == 1) and (dialog_loop == 0)) then begin
            dialog_loop := 1;
            call Node700();
        end
        if ((global_var(938) == 2) and (dialog_loop == 0)) then begin
            dialog_loop := 1;
            call Node850();
        end
        if ((global_var(938) == 3) and ((local_var(4) bwand 64) == 0) and (dialog_loop == 0)) then begin
            dialog_loop := 1;
            call Node1250();
        end
        if ((global_var(938) == 3) and (party_member_obj(16777294) != 0) and (dialog_loop == 0)) then begin
            dialog_loop := 1;
            call Node1300();
        end
        if ((global_var(938) == 3) and (dialog_loop == 0) and not(party_member_obj(16777294) != 0)) then begin
            dialog_loop := 1;
            call Node1450();
        end
        if (dialog_loop == 0) then begin
            dialog_loop := 1;
            if (get_critter_stat(dude_obj, 1) > 4) then begin
                call Node500();
            end
            else begin
                call Node550();
            end
        end
        gsay_end;
        end_dialogue;
        dialog_loop := 0;
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(437, 100));
end

procedure description_p_proc
begin
    script_overrides;
    if (party_member_obj(16777294) != 0) then begin
        display_msg(message_str(437, 201));
    end
    else begin
        display_msg(message_str(437, 200));
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        critter_attempt_placement(self_obj, tile_num_in_direction(tile_num(dude_obj), has_trait(1, dude_obj, 10), 2), elevation(dude_obj));
    end
end

procedure map_enter_p_proc
begin
    if (local_var(7) == 1) then begin
        critter_add_trait(self_obj, 1, 6, 0);
    end
    else begin
        critter_add_trait(self_obj, 1, 5, 180);
        critter_add_trait(self_obj, 1, 6, 277);
    end
    if (cur_map_index == 30) then begin
        set_obj_visibility(self_obj, 1);
    end
    if (cur_map_index == 31) then begin
        if (not(has_trait(1, self_obj, 666))) then begin
            set_obj_visibility(self_obj, 0);
            add_timer_event(self_obj, 1, 1);
        end
    end
end

procedure map_exit_p_proc
begin
end

procedure damage_p_proc
begin
end

procedure destroy_p_proc
begin
    set_global_var(1042, self_obj);
    terminate_combat;
    add_timer_event(dude_obj, 0, 4);
end

procedure Node999
begin
end

procedure Node999_5HB_down
begin
    critter_dmg(dude_obj, 5, 0);
end

procedure Node500
begin
    gsay_reply(437, 500);
    if ((local_var(4) bwand 1) == 0) then begin
        giq_option(4, 437, 501, Node600, 50);
    end
    giq_option(4, 437, 502, Node999, 50);
end

procedure Node550
begin
    gsay_reply(437, 550);
    giq_option(4, 437, 551, Node999, 50);
end

procedure Node600
begin
    gsay_reply(437, 600);
    set_local_var(4, local_var(4) bwor 1);
    giq_option(4, 437, 601, Node999, 50);
end

procedure Node650
begin
    gsay_reply(437, 650);
    giq_option(4, 437, 651, Node999, 50);
end

procedure Node700
begin
    gsay_reply(437, 700);
    if (obj_carrying_pid_obj(dude_obj, 364)) then begin
        if ((get_critter_stat(dude_obj, 34) == 0) and ((local_var(4) bwand 2) == 0)) then begin
            giq_option(4, 437, 701, Node750, 50);
        end
        if ((get_critter_stat(dude_obj, 34) == 1) and ((local_var(4) bwand 4) == 0)) then begin
            giq_option(4, 437, 701, Node800, 50);
        end
    end
    giq_option(4, 437, 702, Node999, 50);
end

procedure Node750
begin
    gsay_reply(437, 750);
    set_local_var(4, local_var(4) bwor 2);
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 364);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 364);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 364);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    metarule(43, dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 1;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 364)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 364);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    giq_option(4, 437, 751, Node999_5HB_down, 50);
end

procedure Node800
begin
    gsay_reply(437, 800);
    set_local_var(4, local_var(4) bwor 4);
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 364);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 364);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 364);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    metarule(43, dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 1;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 364)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 364);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    giq_option(4, 437, 801, Node999_5HB_down, 50);
end

procedure Node850
begin
    gsay_reply(437, 850);
    if ((has_skill(dude_obj, 13) > 125) and obj_carrying_pid_obj(dude_obj, 551) and ((local_var(4) bwand 8) == 0)) then begin
        giq_option(4, 437, 851, Node900, 50);
    end
    if ((has_skill(dude_obj, 13) > 125) and obj_carrying_pid_obj(dude_obj, 364) and ((local_var(4) bwand 16) == 0)) then begin
        giq_option(4, 437, 852, Node950, 50);
    end
    if ((has_skill(dude_obj, 13) > 125) and obj_carrying_pid_obj(dude_obj, 12) and ((local_var(4) bwand 32) == 0)) then begin
        giq_option(4, 437, 853, Node1000, 50);
    end
    giq_option(4, 437, 854, Node999, 50);
end

procedure Node900
begin
    gsay_reply(437, 900 + (get_critter_stat(dude_obj, 34) == 1));
    set_local_var(4, local_var(4) bwor 8);
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 551);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 551);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 551);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    metarule(43, dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 1;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 551)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 551);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    give_exp_points(200);
    display_msg(message_str(14, 100) + 200 + message_str(14, 101));
    if (not(((local_var(4) bwand 8) == 0) or ((local_var(4) bwand 16) == 0) or ((local_var(4) bwand 32) == 0))) then begin
        critter_heal(self_obj, get_critter_stat(self_obj, 7) - get_critter_stat(self_obj, 35));
        set_global_var(938, 3);
    end
    if ((has_skill(dude_obj, 13) > 125) and obj_carrying_pid_obj(dude_obj, 364) and ((local_var(4) bwand 16) == 0)) then begin
        giq_option(4, 437, 852, Node950, 50);
    end
    if ((has_skill(dude_obj, 13) > 125) and obj_carrying_pid_obj(dude_obj, 12) and ((local_var(4) bwand 32) == 0)) then begin
        giq_option(4, 437, 853, Node1000, 50);
    end
    if (global_var(938) == 3) then begin
        giq_option(4, 437, 904, Robo_party_add, 50);
    end
    giq_option(4, 437, 905, Node999, 50);
end

procedure Node950
begin
    gsay_reply(437, 950 + (get_critter_stat(dude_obj, 34) == 1));
    set_local_var(4, local_var(4) bwor 16);
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 364);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 364);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 364);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    metarule(43, dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 1;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 364)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 364);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    give_exp_points(200);
    display_msg(message_str(14, 100) + 200 + message_str(14, 101));
    if (not(((local_var(4) bwand 8) == 0) or ((local_var(4) bwand 16) == 0) or ((local_var(4) bwand 32) == 0))) then begin
        critter_heal(self_obj, get_critter_stat(self_obj, 7) - get_critter_stat(self_obj, 35));
        set_global_var(938, 3);
    end
    if ((has_skill(dude_obj, 13) > 125) and obj_carrying_pid_obj(dude_obj, 551) and ((local_var(4) bwand 8) == 0)) then begin
        giq_option(4, 437, 851, Node900, 50);
    end
    if ((has_skill(dude_obj, 13) > 125) and obj_carrying_pid_obj(dude_obj, 12) and ((local_var(4) bwand 32) == 0)) then begin
        giq_option(4, 437, 853, Node1000, 50);
    end
    if (global_var(938) == 3) then begin
        giq_option(4, 437, 904, Robo_party_add, 50);
    end
    giq_option(4, 437, 905, Node999, 50);
end

procedure Node1000
begin
    gsay_reply(437, 1000 + (get_critter_stat(dude_obj, 34) == 1));
    set_local_var(4, local_var(4) bwor 32);
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 12);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 12);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 12);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    metarule(43, dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 1;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 12)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 12);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    give_exp_points(200);
    display_msg(message_str(14, 100) + 200 + message_str(14, 101));
    if (not(((local_var(4) bwand 8) == 0) or ((local_var(4) bwand 16) == 0) or ((local_var(4) bwand 32) == 0))) then begin
        critter_heal(self_obj, get_critter_stat(self_obj, 7) - get_critter_stat(self_obj, 35));
        set_global_var(938, 3);
    end
    if ((has_skill(dude_obj, 13) > 125) and obj_carrying_pid_obj(dude_obj, 551) and ((local_var(4) bwand 8) == 0)) then begin
        giq_option(4, 437, 851, Node900, 50);
    end
    if ((has_skill(dude_obj, 13) > 125) and obj_carrying_pid_obj(dude_obj, 364) and ((local_var(4) bwand 16) == 0)) then begin
        giq_option(4, 437, 852, Node950, 50);
    end
    if (global_var(938) == 3) then begin
        giq_option(4, 437, 904, Robo_party_add, 50);
    end
    giq_option(4, 437, 905, Node999, 50);
end

procedure Node1250
begin
    gsay_reply(437, 1250);
    giq_option(4, 437, 1251, Robo_party_add, 50);
    giq_option(4, 437, 1252, Node999, 50);
end

procedure Node1300
begin
    gsay_reply(437, 1300);
    if ((local_var(4) bwand 64) == 0) then begin
        give_exp_points(2000);
        display_msg(message_str(14, 100) + 2000 + message_str(14, 101));
    end
    set_local_var(4, local_var(4) bwor 64);
    giq_option(4, 437, 1301, Node1350, 50);
    giq_option(4, 437, 1302, Robo_party_remove, 50);
    giq_option(4, 437, 1303, Node999, 50);
end

procedure Node1350
begin
    gsay_reply(437, 1350);
    if (local_var(5) != 3) then begin
        giq_option(4, 437, 1351, Follow_me_close, 50);
    end
    if (local_var(5) != 6) then begin
        giq_option(4, 437, 1352, Follow_me_medium, 50);
    end
    if (local_var(5) != 9) then begin
        giq_option(4, 437, 1353, Follow_me_far, 50);
    end
    giq_option(4, 437, 1354, Node999, 50);
end

procedure Node1400
begin
    gsay_reply(437, 1400);
    if (local_var(5) != 3) then begin
        giq_option(4, 437, 1401, Follow_me_close, 50);
    end
    if (local_var(5) != 6) then begin
        giq_option(4, 437, 1402, Follow_me_medium, 50);
    end
    if (local_var(5) != 9) then begin
        giq_option(4, 437, 1403, Follow_me_far, 50);
    end
    giq_option(4, 437, 1404, Node999, 50);
end

procedure Node1450
begin
    gsay_reply(437, 1450);
    giq_option(4, 437, 1451, Robo_party_add, 50);
    giq_option(4, 437, 1452, Node999, 50);
end

procedure Robo_party_add
begin
    party_add(self_obj);
    critter_add_trait(self_obj, 1, 5, 32);
    critter_add_trait(self_obj, 1, 6, 0);
    set_local_var(7, 1);
    call Node1300();
end

procedure Robo_party_remove
begin
    party_remove(party_member_obj(16777294));
    critter_add_trait(self_obj, 1, 5, 180);
    critter_add_trait(self_obj, 1, 6, 277);
    set_local_var(7, 0);
end

procedure Follow_me_close
begin
    set_local_var(5, 3);
    call Node1400();
end

procedure Follow_me_medium
begin
    set_local_var(5, 6);
    call Node1400();
end

procedure Follow_me_far
begin
    set_local_var(5, 9);
    call Node1400();
end

