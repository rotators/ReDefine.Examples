variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure map_enter_p_proc;
procedure map_exit_p_proc;
procedure damage_p_proc;
procedure combat_p_proc;
procedure destroy_p_proc;
procedure Node998;
procedure Node999;
procedure Node500;
procedure Node550;
procedure Node600;
procedure Node650;
procedure Node700;
procedure Bet_1;
procedure Bet_2;
procedure Bet_3;
procedure Bet_4;
procedure Bet_5;

variable bet_amt;
variable girl_rotation;
variable ShootingDist;
variable ShootingTile;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777293) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777293)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if ((local_var(5) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
    if (global_var(774) > 2) then begin
        if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
            if (anim_busy(self_obj) == 0) then begin
                global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                global_temp := (global_temp + 1) % 6;
                while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                    debug_msg("flee loop: rot == " + global_temp);
                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                    global_temp := (global_temp + 1) % 6;
                end
            end
        end
    end
    if (map_var(9) > 0) then begin
        if (ShootingTile == 0) then begin
            ShootingDist := tile_distance(tile_num(self_obj), 14102);
            ShootingTile := 14102;
            if (tile_distance(tile_num(self_obj), 23133) < ShootingDist) then begin
                ShootingDist := tile_distance(tile_num(self_obj), 23133);
                ShootingTile := 23133;
            end
            if (tile_distance(tile_num(self_obj), 23123) < ShootingDist) then begin
                ShootingDist := tile_distance(tile_num(self_obj), 23123);
                ShootingTile := 23123;
            end
        end
        if ((map_var(9) == 1) and (art_anim(obj_art_fid(self_obj)) != 1) and (ShootingTile != 0)) then begin
            animate_move_obj_to_tile(self_obj, ShootingTile, 1);
        end
        if (map_var(9) == 2) then begin
            destroy_object(self_obj);
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure talk_p_proc
begin
    if ((global_var(770) == 1) or (global_var(774) > 0)) then begin
        if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
            if (anim_busy(self_obj) == 0) then begin
                global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                global_temp := (global_temp + 1) % 6;
                while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                    debug_msg("flee loop: rot == " + global_temp);
                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                    global_temp := (global_temp + 1) % 6;
                end
            end
        end
    end
    else begin
        anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
        start_gdialog(1431, self_obj, 4, -1, -1);
        gsay_start;
        if (global_var(792) == 2) then begin
            call Node650();
        end
        else begin
            if (obj_carrying_pid_obj(self_obj, 325)) then begin
                call Node500();
            end
            else begin
                call Node550();
            end
        end
        gsay_end;
        end_dialogue;
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(1431, 100 + (10 * (((get_critter_stat(dude_obj, 4) > 3) and (has_skill(dude_obj, 16) >= 25)) == 0))));
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(1431, random(150, 154) + (10 * (((get_critter_stat(dude_obj, 4) > 3) and (has_skill(dude_obj, 16) >= 25)) == 0))));
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if ((combat_is_initialized == 0) and (map_var(9) == 0)) then begin
            if (tile_distance(tile_num(self_obj), tile_num(dude_obj)) <= 4) then begin
                if (random(0, 2) == 0) then begin
                    play_sfx("dice1");
                end
                else begin
                    if (global_var(231) == 1) then begin
                        if (get_critter_stat(dude_obj, 34) == 0) then begin
                            float_msg(self_obj, message_str(1431, random(300, 311)), 8);
                        end
                        if (get_critter_stat(dude_obj, 34) == 1) then begin
                            float_msg(self_obj, message_str(1431, random(302, 313)), 8);
                        end
                    end
                    else begin
                        float_msg(self_obj, message_str(1431, random(302, 311)), 8);
                    end
                end
            end
        end
        metarule3(100, self_obj, 1, 0);
        add_timer_event(self_obj, game_ticks(random(10, 25)), 1);
    end
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, 1, 6, 212);
    critter_add_trait(self_obj, 1, 5, 33);
    girl_rotation := has_trait(1, self_obj, 10);
    metarule3(100, self_obj, 1, 0);
    add_timer_event(self_obj, game_ticks(random(10, 25)), 1);
end

procedure map_exit_p_proc
begin
    if (global_var(792) == 2) then begin
        destroy_object(self_obj);
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(770, 1);
        if (global_var(774) < 3) then begin
            set_global_var(774, global_var(774) + 1);
        end
        set_global_var(1015, global_var(1015) bwand (-1 - 256));
        set_global_var(1018, global_var(1018) bwand (-1 - 1));
        set_global_var(1019, global_var(1019) bwand (-1 - 256));
    end
end

procedure combat_p_proc
begin
    if ((fixed_param == 4) and ((global_var(770) == 1) or (global_var(774) > 0))) then begin
        critter_set_flee_state(self_obj, 1);
    end
end

procedure destroy_p_proc
begin
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
    anim(self_obj, 1000, girl_rotation);
end

procedure Node500
begin
    if ((get_critter_stat(dude_obj, 4) + has_trait(0, dude_obj, 49)) <= 3) then begin
        gsay_reply(1431, 500);
    end
    else begin
        if (global_var(591) == 1) then begin
            gsay_reply(1431, 501 + (get_critter_stat(dude_obj, 34) == 1));
        end
        else begin
            gsay_reply(1431, 503);
        end
    end
    if (item_caps_total(dude_obj) >= 5) then begin
        giq_option(4, 1431, message_str(1431, 504) + 5 + message_str(1431, 505), Bet_1, 50);
    end
    if (item_caps_total(dude_obj) >= 15) then begin
        giq_option(4, 1431, message_str(1431, 504) + 15 + message_str(1431, 505), Bet_2, 50);
    end
    if (item_caps_total(dude_obj) >= 25) then begin
        giq_option(4, 1431, message_str(1431, 504) + 25 + message_str(1431, 505), Bet_3, 50);
    end
    if (item_caps_total(dude_obj) >= 50) then begin
        giq_option(4, 1431, message_str(1431, 504) + 50 + message_str(1431, 505), Bet_4, 50);
    end
    if (item_caps_total(dude_obj) >= 100) then begin
        giq_option(4, 1431, message_str(1431, 504) + 100 + message_str(1431, 505), Bet_5, 50);
    end
    if (item_caps_total(dude_obj) >= 5) then begin
        giq_option(4, 1431, 506, Node999, 50);
    end
    else begin
        giq_option(4, 1431, 507, Node999, 50);
    end
    if (item_caps_total(dude_obj) >= 5) then begin
        giq_option(-3, 1431, message_str(1431, 508) + 5 + message_str(1431, 509), Bet_1, 50);
    end
    if (item_caps_total(dude_obj) >= 15) then begin
        giq_option(-3, 1431, message_str(1431, 508) + 15 + message_str(1431, 509), Bet_2, 50);
    end
    if (item_caps_total(dude_obj) >= 25) then begin
        giq_option(-3, 1431, message_str(1431, 508) + 25 + message_str(1431, 509), Bet_3, 50);
    end
    if (item_caps_total(dude_obj) >= 50) then begin
        giq_option(-3, 1431, message_str(1431, 508) + 50 + message_str(1431, 509), Bet_4, 50);
    end
    if (item_caps_total(dude_obj) >= 100) then begin
        giq_option(-3, 1431, message_str(1431, 508) + 100 + message_str(1431, 509), Bet_5, 50);
    end
    giq_option(-3, 1431, 510, Node999, 50);
end

procedure Node550
begin
    gsay_reply(1431, 550);
    if (obj_carrying_pid_obj(dude_obj, 325)) then begin
        giq_option(4, 1431, 551, Node600, 50);
    end
    giq_option(4, 1431, 552, Node999, 50);
    giq_option(-3, 1431, 553, Node999, 50);
end

procedure Node600
begin
    gsay_reply(1431, 600);
    giq_option(4, 1431, 601, Node999, 50);
end

procedure Node650
begin
    gsay_reply(1431, 650);
    giq_option(4, 1431, 651, Node999, 50);
    giq_option(-3, 1431, 652, Node999, 50);
end

procedure Node700
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    if (random(0, 1)) then begin
        play_sfx("dice");
    end
    else begin
        play_sfx("dice1");
    end
    LVar0 := roll_vs_skill(dude_obj, 16, ((bet_amt == 5) * 0) + ((bet_amt == 15) * -10) + ((bet_amt == 25) * -25) + ((bet_amt == 50) * -50) + ((bet_amt == 100) * -75));
    if (is_success(LVar0)) then begin
        LVar1 := 2;
        if (is_critical(LVar0)) then begin
            LVar1 := 3;
            if (is_success(LVar0)) then begin
                LVar1 := 4;
            end
        end
    end
    item_caps_adjust(dude_obj, (LVar1 * bet_amt) - bet_amt);
    if (global_var(591) == 1) then begin
        gsay_reply(1431, 701 + (10 * LVar1) + (get_critter_stat(dude_obj, 34) == 1));
    end
    else begin
        gsay_reply(1431, 700 + (10 * LVar1));
    end
    giq_option(4, 1431, 750, Node500, 50);
    giq_option(4, 1431, 751, Node999, 50);
    giq_option(-3, 1431, 752, Node500, 50);
    giq_option(-3, 1431, 753, Node999, 50);
end

procedure Bet_1
begin
    bet_amt := 5;
    call Node700();
end

procedure Bet_2
begin
    bet_amt := 15;
    call Node700();
end

procedure Bet_3
begin
    bet_amt := 25;
    call Node700();
end

procedure Bet_4
begin
    bet_amt := 50;
    call Node700();
end

procedure Bet_5
begin
    bet_amt := 100;
    call Node700();
end

