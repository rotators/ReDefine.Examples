variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure map_enter_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure Node999;
procedure Node500;
procedure Robo_starts_instructions;

import variable progema1_map;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if (local_var(4) == 3) then begin
        if ((art_anim(obj_art_fid(self_obj)) != 1) and (tile_num(self_obj) != 17291)) then begin
            animate_move_obj_to_tile(self_obj, 17291, 0);
        end
        if (tile_num(self_obj) == 17291) then begin
            set_local_var(4, 4);
            add_timer_event(self_obj, 0, 4);
        end
    end
end

procedure pickup_p_proc
begin
end

procedure talk_p_proc
begin
    if (local_var(4) == 1) then begin
        anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
        start_gdialog(201, self_obj, 4, -1, -1);
        gsay_start;
        call Node500();
        gsay_end;
        end_dialogue;
    end
    if (local_var(4) == 0) then begin
        metarule3(100, self_obj, 1, 0);
        add_timer_event(self_obj, game_ticks(random(5, 10)), 1);
        float_msg(self_obj, message_str(201, 300), 8);
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(201, 100));
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(201, 200));
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if (local_var(4) == 0) then begin
            if (tile_distance(tile_num(self_obj), tile_num(dude_obj)) < 6) then begin
                float_msg(self_obj, message_str(201, random(303, 307)), 8);
            end
            metarule3(100, self_obj, 1, 0);
            add_timer_event(self_obj, game_ticks(random(5, 10)), 1);
        end
    end
    if (fixed_param == 2) then begin
        if (art_anim(obj_art_fid(self_obj)) != 0) then begin
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            reg_anim_animate(self_obj, 36, -1);
            reg_anim_func(3, 0);
            add_timer_event(self_obj, 25, 3);
        end
        else begin
            add_timer_event(self_obj, 5, 3);
        end
    end
    if (fixed_param == 3) then begin
        if (art_anim(obj_art_fid(self_obj)) != 0) then begin
            add_timer_event(self_obj, 0, 2);
        end
        else begin
            set_local_var(4, 3);
            animate_move_obj_to_tile(self_obj, 17291, 0);
        end
    end
    if (fixed_param == 4) then begin
        float_msg(self_obj, message_str(201, 302), 2);
        add_timer_event(self_obj, game_ticks(1), 5);
    end
    if (fixed_param == 5) then begin
        add_timer_event(progema1_map, 5, 6);
        if (tile_distance_objs(self_obj, dude_obj) <= 4) then begin
            set_obj_visibility(dude_obj, 1);
        end
        explosion(17291, 2, 999);
        destroy_object(self_obj);
    end
end

procedure map_enter_p_proc
begin
    if (not(metarule(22, 0))) then begin
        if (local_var(4) == 0) then begin
            anim(self_obj, 49, 0);
        end
    end
    if (local_var(4) == 0) then begin
        metarule3(100, self_obj, 1, 0);
    end
    add_timer_event(self_obj, game_ticks(random(5, 12)), 1);
end

procedure use_obj_on_p_proc
begin
    variable LVar0 := 0;
    LVar0 := obj_pid(obj_being_used_with);
    if ((LVar0 == 75) or (LVar0 == 308)) then begin
        if (local_var(4) == 0) then begin
            if (is_success(roll_vs_skill(dude_obj, 13, -50))) then begin
                script_overrides;
                set_local_var(4, 1);
                display_msg(message_str(201, 400));
                dialogue_system_enter;
            end
            else begin
                script_overrides;
                display_msg(message_str(201, 310));
            end
        end
        else begin
            script_overrides;
            display_msg(message_str(201, 311));
        end
    end
end

procedure use_skill_on_p_proc
begin
    variable LVar0 := 0;
    LVar0 := action_being_used;
    if (LVar0 == 13) then begin
        if (local_var(4) == 0) then begin
            if (is_success(roll_vs_skill(dude_obj, 13, -50))) then begin
                script_overrides;
                set_local_var(4, 1);
                display_msg(message_str(201, 400));
                dialogue_system_enter;
            end
            else begin
                script_overrides;
                display_msg(message_str(201, 310));
            end
        end
        else begin
            script_overrides;
            display_msg(message_str(201, 311));
        end
    end
end

procedure damage_p_proc
begin
end

procedure destroy_p_proc
begin
end

procedure Node999
begin
    if ((local_var(4) == 1) and (art_anim(obj_art_fid(self_obj)) != 0)) then begin
        reg_anim_func(2, self_obj);
        reg_anim_func(1, 1);
        reg_anim_animate(self_obj, 36, -1);
        reg_anim_func(3, 0);
    end
end

procedure Node500
begin
    gsay_reply(201, 500);
    giq_option(4, 201, 501, Robo_starts_instructions, 50);
    giq_option(1, 201, 502, Node999, 50);
end

procedure Robo_starts_instructions
begin
    set_local_var(4, 2);
    float_msg(self_obj, message_str(201, 301), 8);
    add_timer_event(self_obj, game_ticks(1), 2);
end

