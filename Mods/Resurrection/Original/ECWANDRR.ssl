variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure Node998;
procedure Node999;
procedure Node500;
procedure Node550;
procedure Barter;

variable reaction_parametr;
variable leader_parametr;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if ((global_var(921) == 3) or (global_var(921) == 4) and obj_can_see_obj(self_obj, dude_obj)) then begin
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (global_var(921) == 2) then begin
            set_global_var(921, 4);
        end
        if (not(combat_is_initialized)) then begin
            attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
        end
    end
end

procedure talk_p_proc
begin
    if ((global_var(921) == 3) or (global_var(921) == 4)) then begin
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
    else begin
        if (local_var(4) == 0) then begin
            if (get_critter_stat(self_obj, 34) == 0) then begin
                float_msg(self_obj, message_str(84, random(320, 341)), 8);
            end
            if (get_critter_stat(self_obj, 34) == 1) then begin
                float_msg(self_obj, message_str(84, random(323, 344)), 8);
            end
        end
        else begin
            anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
            anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
            start_gdialog(84, self_obj, 4, -1, -1);
            gsay_start;
            call Node500();
            gsay_end;
            end_dialogue;
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(84, 100 + (get_critter_stat(self_obj, 34) == 1)));
end

procedure description_p_proc
begin
    script_overrides;
    if (get_critter_stat(self_obj, 34) == 0) then begin
        display_msg(message_str(84, random(200, 203)));
    end
    if (get_critter_stat(self_obj, 34) == 1) then begin
        display_msg(message_str(84, random(204, 207)));
    end
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, 1, 6, 102);
    critter_add_trait(self_obj, 1, 5, 147);
    if (not(metarule(22, 0))) then begin
        if (global_var(1048) >= 6) then begin
            destroy_object(self_obj);
        end
        else begin
            set_global_var(1048, global_var(1048) + 1);
        end
        add_timer_event(self_obj, 1, 1);
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if (global_var(921) == 0) then begin
            set_global_var(921, 1);
            game_ui_disable;
            if (has_trait(0, dude_obj, 20)) then begin
                item_caps_adjust(self_obj, random(55, 112));
            end
            reaction_parametr := (item_caps_total(dude_obj) + item_caps_total(party_member_obj(16777779)) + item_caps_total(party_member_obj(16777811)) + item_caps_total(party_member_obj(16777813)) + item_caps_total(party_member_obj(16777814))) / 1000;
            if (reaction_parametr > 20) then begin
                reaction_parametr := 20;
            end
            if (get_critter_stat(dude_obj, 6) > 5) then begin
                reaction_parametr := reaction_parametr - (5 * (metarule(16, 0) - (((global_var(910) bwand 32) != 0) and not((global_var(632) bwand 2) != 0)) - (((global_var(910) bwand 64) != 0) and not((global_var(632) bwand 4) != 0)) - (((global_var(910) bwand 128) != 0) and not((global_var(632) bwand 32) != 0)) - 1)) - (get_critter_stat(dude_obj, 6) - 5) + 50;
            end
            else begin
                reaction_parametr := reaction_parametr - (5 * (metarule(16, 0) - (((global_var(910) bwand 32) != 0) and not((global_var(632) bwand 2) != 0)) - (((global_var(910) bwand 64) != 0) and not((global_var(632) bwand 4) != 0)) - (((global_var(910) bwand 128) != 0) and not((global_var(632) bwand 32) != 0)) - 1)) + (-1 * (get_critter_stat(dude_obj, 6) - 6)) + 50;
            end
            if (random(1, 100) > reaction_parametr) then begin
                set_global_var(921, 2);
            end
            else begin
                if (get_critter_stat(self_obj, 34) == 0) then begin
                    float_msg(self_obj, message_str(84, random(310, 317)), 8);
                end
                else begin
                    float_msg(self_obj, message_str(84, random(311, 318)), 8);
                end
                set_global_var(921, 3);
            end
            if (global_var(921) == 2) then begin
                set_local_var(4, random(1, 7));
                if (local_var(4) == 1) then begin
                    float_msg(self_obj, message_str(84, 300), 8);
                end
                if (local_var(4) == 2) then begin
                    float_msg(self_obj, message_str(84, 301 + (get_critter_stat(self_obj, 34) == 1)), 8);
                end
                if (local_var(4) == 3) then begin
                    float_msg(self_obj, message_str(84, 303 + (get_critter_stat(self_obj, 34) == 1)), 8);
                end
                if (local_var(4) == 4) then begin
                    float_msg(self_obj, message_str(84, 305), 8);
                end
                if (local_var(4) == 5) then begin
                    float_msg(self_obj, message_str(84, 306), 8);
                end
                if (local_var(4) == 6) then begin
                    float_msg(self_obj, message_str(84, 307), 8);
                end
                if (local_var(4) == 7) then begin
                    float_msg(self_obj, message_str(84, 308 + (get_critter_stat(dude_obj, 34) == 1)), 8);
                end
                if (has_trait(0, dude_obj, 20)) then begin
                    item_caps_adjust(self_obj, random(64, 122));
                end
                else begin
                    item_caps_adjust(self_obj, random(23, 48));
                end
                restock_amt := random(1, 2);
                if (obj_is_carrying_obj_pid(self_obj, 124) < restock_amt) then begin
                    if (100 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 124) < restock_amt) then begin
                            restock_obj := create_object_sid(124, 0, 0, -1);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 124));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 124) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 124);
                                if ((obj_is_carrying_obj_pid(self_obj, 124) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 124) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 124);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 124);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                metarule(43, self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    if (restock_amt == 0) then begin
                                        toRemove_qty := obj_is_carrying_obj_pid(self_obj, 124) - restock_amt;
                                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 124)) do begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 124);
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            destroy_object(restock_obj);
                                            toRemove_qty := toRemove_qty - 1;
                                        end
                                    end
                                    else begin
                                        destroy_object(restock_obj);
                                    end
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 124) < restock_amt) then begin
                        restock_obj := create_object_sid(124, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 124));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 124) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 124);
                            if ((obj_is_carrying_obj_pid(self_obj, 124) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 124) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 124);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 124);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 124) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 124)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 124);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 1);
                if (obj_is_carrying_obj_pid(self_obj, 125) < restock_amt) then begin
                    if (80 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 125) < restock_amt) then begin
                            restock_obj := create_object_sid(125, 0, 0, -1);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 125));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 125) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 125);
                                if ((obj_is_carrying_obj_pid(self_obj, 125) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 125) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 125);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 125);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                metarule(43, self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    if (restock_amt == 0) then begin
                                        toRemove_qty := obj_is_carrying_obj_pid(self_obj, 125) - restock_amt;
                                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 125)) do begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 125);
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            destroy_object(restock_obj);
                                            toRemove_qty := toRemove_qty - 1;
                                        end
                                    end
                                    else begin
                                        destroy_object(restock_obj);
                                    end
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 125) < restock_amt) then begin
                        restock_obj := create_object_sid(125, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 125));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 125) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 125);
                            if ((obj_is_carrying_obj_pid(self_obj, 125) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 125) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 125);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 125);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 125) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 125)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 125);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 2);
                if (obj_is_carrying_obj_pid(self_obj, 71) < restock_amt) then begin
                    if (100 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 71) < restock_amt) then begin
                            restock_obj := create_object_sid(71, 0, 0, -1);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 71));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 71) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 71);
                                if ((obj_is_carrying_obj_pid(self_obj, 71) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 71) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 71);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 71);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                metarule(43, self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    if (restock_amt == 0) then begin
                                        toRemove_qty := obj_is_carrying_obj_pid(self_obj, 71) - restock_amt;
                                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 71)) do begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 71);
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            destroy_object(restock_obj);
                                            toRemove_qty := toRemove_qty - 1;
                                        end
                                    end
                                    else begin
                                        destroy_object(restock_obj);
                                    end
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 71) < restock_amt) then begin
                        restock_obj := create_object_sid(71, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 71));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 71) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 71);
                            if ((obj_is_carrying_obj_pid(self_obj, 71) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 71) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 71);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 71);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 71) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 71)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 71);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 3);
                if (obj_is_carrying_obj_pid(self_obj, 284) < restock_amt) then begin
                    if (80 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 284) < restock_amt) then begin
                            restock_obj := create_object_sid(284, 0, 0, -1);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 284));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 284) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 284);
                                if ((obj_is_carrying_obj_pid(self_obj, 284) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 284) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 284);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 284);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                metarule(43, self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    if (restock_amt == 0) then begin
                                        toRemove_qty := obj_is_carrying_obj_pid(self_obj, 284) - restock_amt;
                                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 284)) do begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 284);
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            destroy_object(restock_obj);
                                            toRemove_qty := toRemove_qty - 1;
                                        end
                                    end
                                    else begin
                                        destroy_object(restock_obj);
                                    end
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 284) < restock_amt) then begin
                        restock_obj := create_object_sid(284, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 284));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 284) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 284);
                            if ((obj_is_carrying_obj_pid(self_obj, 284) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 284) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 284);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 284);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 284) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 284)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 284);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 1);
                if (obj_is_carrying_obj_pid(self_obj, 49) < restock_amt) then begin
                    if (40 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 49) < restock_amt) then begin
                            restock_obj := create_object_sid(49, 0, 0, -1);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 49));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 49) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 49);
                                if ((obj_is_carrying_obj_pid(self_obj, 49) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 49) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 49);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 49);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                metarule(43, self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    if (restock_amt == 0) then begin
                                        toRemove_qty := obj_is_carrying_obj_pid(self_obj, 49) - restock_amt;
                                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 49)) do begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 49);
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            destroy_object(restock_obj);
                                            toRemove_qty := toRemove_qty - 1;
                                        end
                                    end
                                    else begin
                                        destroy_object(restock_obj);
                                    end
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 49) < restock_amt) then begin
                        restock_obj := create_object_sid(49, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 49));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 49) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 49);
                            if ((obj_is_carrying_obj_pid(self_obj, 49) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 49) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 49);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 49);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 49) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 49)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 49);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 2);
                if (obj_is_carrying_obj_pid(self_obj, 81) < restock_amt) then begin
                    if (40 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 81) < restock_amt) then begin
                            restock_obj := create_object_sid(81, 0, 0, -1);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 81));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 81) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 81);
                                if ((obj_is_carrying_obj_pid(self_obj, 81) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 81) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 81);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 81);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                metarule(43, self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    if (restock_amt == 0) then begin
                                        toRemove_qty := obj_is_carrying_obj_pid(self_obj, 81) - restock_amt;
                                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 81)) do begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 81);
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            destroy_object(restock_obj);
                                            toRemove_qty := toRemove_qty - 1;
                                        end
                                    end
                                    else begin
                                        destroy_object(restock_obj);
                                    end
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 81) < restock_amt) then begin
                        restock_obj := create_object_sid(81, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 81));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 81) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 81);
                            if ((obj_is_carrying_obj_pid(self_obj, 81) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 81) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 81);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 81);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 81) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 81)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 81);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(2, 4);
                if (obj_is_carrying_obj_pid(self_obj, 271) < restock_amt) then begin
                    if (80 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 271) < restock_amt) then begin
                            restock_obj := create_object_sid(271, 0, 0, -1);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 271));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 271) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 271);
                                if ((obj_is_carrying_obj_pid(self_obj, 271) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 271) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 271);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 271);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                metarule(43, self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    if (restock_amt == 0) then begin
                                        toRemove_qty := obj_is_carrying_obj_pid(self_obj, 271) - restock_amt;
                                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 271)) do begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 271);
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            destroy_object(restock_obj);
                                            toRemove_qty := toRemove_qty - 1;
                                        end
                                    end
                                    else begin
                                        destroy_object(restock_obj);
                                    end
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 271) < restock_amt) then begin
                        restock_obj := create_object_sid(271, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 271));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 271) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 271);
                            if ((obj_is_carrying_obj_pid(self_obj, 271) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 271) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 271);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 271);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 271) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 271)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 271);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 2);
                if (obj_is_carrying_obj_pid(self_obj, 311) < restock_amt) then begin
                    if (10 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 311) < restock_amt) then begin
                            restock_obj := create_object_sid(311, 0, 0, -1);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 311));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 311) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 311);
                                if ((obj_is_carrying_obj_pid(self_obj, 311) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 311) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 311);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 311);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                metarule(43, self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    if (restock_amt == 0) then begin
                                        toRemove_qty := obj_is_carrying_obj_pid(self_obj, 311) - restock_amt;
                                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 311)) do begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 311);
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            destroy_object(restock_obj);
                                            toRemove_qty := toRemove_qty - 1;
                                        end
                                    end
                                    else begin
                                        destroy_object(restock_obj);
                                    end
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 311) < restock_amt) then begin
                        restock_obj := create_object_sid(311, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 311));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 311) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 311);
                            if ((obj_is_carrying_obj_pid(self_obj, 311) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 311) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 311);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 311);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 311) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 311)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 311);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 1);
                if (obj_is_carrying_obj_pid(self_obj, 47) < restock_amt) then begin
                    if (5 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 47) < restock_amt) then begin
                            restock_obj := create_object_sid(47, 0, 0, -1);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 47));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 47) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 47);
                                if ((obj_is_carrying_obj_pid(self_obj, 47) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 47) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 47);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 47);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                metarule(43, self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    if (restock_amt == 0) then begin
                                        toRemove_qty := obj_is_carrying_obj_pid(self_obj, 47) - restock_amt;
                                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 47)) do begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 47);
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            destroy_object(restock_obj);
                                            toRemove_qty := toRemove_qty - 1;
                                        end
                                    end
                                    else begin
                                        destroy_object(restock_obj);
                                    end
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 47) < restock_amt) then begin
                        restock_obj := create_object_sid(47, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 47));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 47) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 47);
                            if ((obj_is_carrying_obj_pid(self_obj, 47) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 47) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 47);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 47);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 47) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 47)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 47);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            game_ui_enable;
        end
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (global_var(921) == 2) then begin
            set_global_var(921, 4);
        end
    end
end

procedure destroy_p_proc
begin
    if ((global_var(921) == 2) or (global_var(921) == 4)) then begin
        set_global_var(0, global_var(0) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure Node998
begin
    set_global_var(0, global_var(0) - 2);
    set_global_var(37, 0);
    set_global_var(38, 0);
    set_global_var(39, 0);
    set_global_var(40, 0);
    set_global_var(41, 0);
    set_global_var(42, 0);
    set_global_var(43, 0);
    set_global_var(44, 0);
    set_global_var(45, 0);
    if (global_var(0) >= 1000) then begin
        set_global_var(37, 1);
    end
    else begin
        if (global_var(0) >= 750) then begin
            set_global_var(38, 1);
        end
        else begin
            if (global_var(0) >= 500) then begin
                set_global_var(39, 1);
            end
            else begin
                if (global_var(0) >= 250) then begin
                    set_global_var(40, 1);
                end
                else begin
                    if (global_var(0) > -250) then begin
                        set_global_var(41, 1);
                    end
                    else begin
                        if (global_var(0) > -500) then begin
                            set_global_var(42, 1);
                        end
                        else begin
                            if (global_var(0) > -750) then begin
                                set_global_var(43, 1);
                            end
                            else begin
                                if (global_var(0) > -1000) then begin
                                    set_global_var(44, 1);
                                end
                                else begin
                                    set_global_var(45, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    set_global_var(921, 4);
end

procedure Node999
begin
end

procedure Node500
begin
    gsay_reply(84, 499 + local_var(4));
    giq_option(4, 84, 507, Barter, 50);
    giq_option(4, 84, 508, Node998, 50);
    giq_option(4, 84, 509, Node999, 50);
    giq_option(-3, 84, 510, Barter, 50);
    giq_option(-3, 84, 511, Node998, 50);
    giq_option(-3, 84, 512, Node999, 50);
end

procedure Node550
begin
    gsay_reply(84, 550);
    giq_option(4, 84, 551, Node998, 50);
    giq_option(4, 84, 552, Node999, 50);
    giq_option(-3, 84, 553, Node998, 50);
    giq_option(-3, 84, 554, Node999, 50);
end

procedure Barter
begin
    gdialog_mod_barter(20 - 15);
    call Node550();
end

