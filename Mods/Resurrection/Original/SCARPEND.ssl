variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure push_p_proc;
procedure talk_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure map_enter_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure combat_p_proc;
procedure Node998;
procedure Node999;
procedure Node500;
procedure Node550;
procedure Node600;
procedure Node650;
procedure Node700;
procedure Node750;
procedure Node800;
procedure Node850;
procedure Node900;
procedure Node950;
procedure Node1000;
procedure Node1050;
procedure Node1100;
procedure Node1150;
procedure Node1200;
procedure Node1250;
procedure Node1300;
procedure Node1350;
procedure Node1400;
procedure Node1450;
procedure Node1500;
procedure Node1550;
procedure Node1600;
procedure Node1650;
procedure Node1700;
procedure Node1750;
procedure Node1800;
procedure Node1850;
procedure Node1900;
procedure Node1950;
procedure David_party_add;
procedure Kidnap;

import variable Sedit_downtown;

variable place;
variable combat_cry;

import variable Chuva;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777293) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777293)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if ((local_var(5) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
    if ((self_obj == party_member_obj(16777748)) and ((global_var(1020) bwand 131072) == 0) and ((global_var(1020) bwand 262144) == 0) and ((global_var(910) bwand 65536) == 0) and ((global_var(910) bwand 262144) == 0) and ((global_var(910) bwand 524288) == 0)) then begin
        if (tile_distance_objs(self_obj, dude_obj) > (9 / 2)) then begin
            if (tile_distance_objs(self_obj, dude_obj) > (9 / 2 * 2)) then begin
                if ((tile_num(self_obj) != tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 3)) and (tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 3) != 0)) then begin
                    if ((dest_tile == tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 3)) and (step_tile < 0)) then begin
                        step_tile := step_tile + 1;
                    end
                    else begin
                        if (anim_busy(self_obj) == 0) then begin
                            dest_tile := tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 3);
                            step_tile := tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 3);
                            animate_move_obj_to_tile(self_obj, step_tile, 1);
                            debug_msg("move_to_point: self_tile == " + tile_num(self_obj));
                            while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 3)) >= tile_distance(step_tile, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 3)))) do begin
                                step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), ((tile_distance_objs(dude_obj, self_obj) / 5) + 1) % tile_distance(step_tile, tile_num(self_obj)));
                                debug_msg("move_to_point: step_tile == " + step_tile);
                                animate_move_obj_to_tile(self_obj, step_tile, 1);
                            end
                            if (anim_busy(self_obj) == 0) then begin
                                if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
                                    if (anim_busy(self_obj) == 0) then begin
                                        global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                        global_temp := (global_temp + 1) % 6;
                                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                            debug_msg("flee loop: rot == " + global_temp);
                                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                            global_temp := (global_temp + 1) % 6;
                                        end
                                    end
                                end
                                else begin
                                    step_tile := -10;
                                end
                            end
                        end
                        else begin
                            if (tile_distance(tile_num(self_obj), tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 3)) < tile_distance(dest_tile, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 3))) then begin
                                reg_anim_func(2, self_obj);
                            end
                        end
                    end
                end
            end
            else begin
                if ((tile_num(self_obj) != tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 3)) and (tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 3) != 0)) then begin
                    if ((dest_tile == tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 3)) and (step_tile < 0)) then begin
                        step_tile := step_tile + 1;
                    end
                    else begin
                        if (anim_busy(self_obj) == 0) then begin
                            dest_tile := tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 3);
                            step_tile := tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 3);
                            animate_move_obj_to_tile(self_obj, step_tile, 0);
                            debug_msg("move_to_point: self_tile == " + tile_num(self_obj));
                            while ((anim_busy(self_obj) == 0) and (tile_distance(tile_num(self_obj), tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 3)) >= tile_distance(step_tile, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 3)))) do begin
                                step_tile := tile_num_in_direction(step_tile, rotation_to_tile(step_tile, tile_num(self_obj)), ((tile_distance_objs(dude_obj, self_obj) / 5) + 1) % tile_distance(step_tile, tile_num(self_obj)));
                                debug_msg("move_to_point: step_tile == " + step_tile);
                                animate_move_obj_to_tile(self_obj, step_tile, 0);
                            end
                            if (anim_busy(self_obj) == 0) then begin
                                if (metarule3(106, tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), elevation(self_obj), 0) != 0) then begin
                                    if (anim_busy(self_obj) == 0) then begin
                                        global_temp := rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj));
                                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                        global_temp := (global_temp + 1) % 6;
                                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num_in_direction(tile_num(self_obj), has_trait(1, self_obj, 10), 1), tile_num(self_obj)), 1), tile_num(self_obj)))) do begin
                                            debug_msg("flee loop: rot == " + global_temp);
                                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(2, 5)), 0);
                                            global_temp := (global_temp + 1) % 6;
                                        end
                                    end
                                end
                                else begin
                                    step_tile := -10;
                                end
                            end
                        end
                        else begin
                            if (tile_distance(tile_num(self_obj), tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 3)) < tile_distance(dest_tile, tile_num_in_direction(tile_num(dude_obj), rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)), 3))) then begin
                                reg_anim_func(2, self_obj);
                            end
                        end
                    end
                end
            end
        end
    end
    if ((cur_map_index == 10) and (global_var(769) == 1)) then begin
        if (obj_can_see_obj(self_obj, dude_obj) or obj_can_hear_obj(self_obj, dude_obj)) then begin
            attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
        end
    end
end

procedure pickup_p_proc
begin
    if ((source_obj == dude_obj) and (self_obj != party_member_obj(16777748))) then begin
        set_local_var(5, 2);
    end
end

procedure push_p_proc
begin
    if (self_obj != party_member_obj(16777748)) then begin
        script_overrides;
    end
end

procedure talk_p_proc
begin
    if (self_obj == party_member_obj(16777748)) then begin
        anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
        start_gdialog(1359, self_obj, 4, -1, -1);
        gsay_start;
        call Node1950();
        gsay_end;
        end_dialogue;
    end
    else begin
        if (cur_map_index == 10) then begin
            if ((global_var(724) == 3) and (global_var(775) != 1) or (global_var(723) >= 7)) then begin
                if (global_var(724) == 3) then begin
                    if (place == 2) then begin
                        anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
                        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
                        start_gdialog(1359, self_obj, 4, -1, -1);
                        gsay_start;
                        if ((local_var(6) bwand 1) == 0) then begin
                            call Node500();
                        end
                        else begin
                            call Node1550();
                        end
                        gsay_end;
                        end_dialogue;
                        set_local_var(4, 1);
                        set_global_var(730, 1);
                    end
                    else begin
                        add_timer_event(Chuva, 0, 12);
                    end
                end
                if (global_var(723) >= 7) then begin
                    anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
                    anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
                    start_gdialog(1359, self_obj, 4, -1, -1);
                    gsay_start;
                    if (get_critter_stat(dude_obj, 34) == 0) then begin
                        call Node1650();
                    end
                    if (get_critter_stat(dude_obj, 34) == 1) then begin
                        call Node1700();
                    end
                    gsay_end;
                    end_dialogue;
                    set_local_var(4, 1);
                    set_global_var(730, 1);
                end
            end
            else begin
                add_timer_event(Chuva, 0, 10);
            end
        end
        if (cur_map_index == 11) then begin
            float_msg(self_obj, message_str(1359, 300), 8);
        end
        if (cur_map_index == 21) then begin
            if (global_var(723) >= 4) then begin
                anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
                anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
                start_gdialog(1359, self_obj, 4, -1, -1);
                gsay_start;
                call Node1750();
                gsay_end;
                end_dialogue;
                set_local_var(4, 1);
                set_global_var(730, 1);
            end
            else begin
                if (random(1, 2) == 1) then begin
                    float_msg(self_obj, message_str(1359, 301), 2);
                end
                else begin
                    float_msg(self_obj, message_str(1359, 300), 8);
                end
            end
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if ((local_var(4) == 1) or (self_obj == party_member_obj(16777748))) then begin
        display_msg(message_str(1359, 150));
    end
    else begin
        display_msg(message_str(1359, 100));
    end
end

procedure description_p_proc
begin
    script_overrides;
    if ((local_var(4) == 1) or (self_obj == party_member_obj(16777748))) then begin
        display_msg(message_str(1359, 250));
    end
    else begin
        display_msg(message_str(1359, 200));
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 2) then begin
        if ((game_time_hour >= 1200) and (game_time_hour <= 2000)) then begin
            if (place == 2) then begin
                metarule3(100, self_obj, 2, 0);
                add_timer_event(self_obj, game_ticks(240), 2);
            end
            else begin
                place := 2;
                move_to(self_obj, 22652, 0);
                metarule3(100, self_obj, 2, 0);
                add_timer_event(self_obj, game_ticks(240), 2);
            end
        end
        else begin
            if (place == 1) then begin
                metarule3(100, self_obj, 2, 0);
                add_timer_event(self_obj, game_ticks(240), 2);
            end
            else begin
                place := 1;
                move_to(self_obj, 21877, 0);
                metarule3(100, self_obj, 2, 0);
                add_timer_event(self_obj, game_ticks(240), 2);
            end
        end
    end
    if (fixed_param == 3) then begin
        if ((get_critter_stat(self_obj, 35) < (get_critter_stat(self_obj, 7) / 10)) and not(combat_is_initialized)) then begin
            float_msg(self_obj, message_str(1359, 302), 8);
        end
        metarule3(100, self_obj, 3, 0);
        add_timer_event(self_obj, game_ticks(random(60, 120)), 3);
    end
end

procedure map_enter_p_proc
begin
    if (global_var(731) == 1) then begin
        destroy_object(self_obj);
    end
    if (global_var(730) == 1) then begin
        set_local_var(4, 1);
    end
    if (self_obj == party_member_obj(16777748)) then begin
        critter_add_trait(self_obj, 1, 6, 0);
    end
    else begin
        critter_add_trait(self_obj, 1, 6, 219);
    end
    if (self_obj == party_member_obj(16777748)) then begin
        metarule3(100, self_obj, 3, 0);
        add_timer_event(self_obj, game_ticks(random(60, 120)), 3);
    end
    if (cur_map_index == 10) then begin
        if (self_obj == party_member_obj(16777748)) then begin
            game_ui_disable;
            gfade_out(1);
            set_global_var(723, 7);
            display_msg(message_str(1359, 350));
            add_timer_event(Sedit_downtown, game_ticks(1), 1);
            party_remove(self_obj);
            destroy_object(self_obj);
        end
        else begin
            if ((global_var(724) == 0) and (global_var(723) == 0)) then begin
                set_obj_visibility(self_obj, 0);
            end
            else begin
                if (global_var(724) > 0) then begin
                    if (global_var(724) < 4) then begin
                        set_obj_visibility(self_obj, 0);
                    end
                    else begin
                        set_obj_visibility(self_obj, 1);
                    end
                end
                if (global_var(723) > 0) then begin
                    if ((global_var(723) == 7) or (party_member_obj(16777748) != 0) or (global_var(723) == 8)) then begin
                        set_obj_visibility(self_obj, 0);
                    end
                    else begin
                        set_obj_visibility(self_obj, 1);
                    end
                end
            end
        end
        if ((game_time_hour >= 1200) and (game_time_hour <= 2000)) then begin
            place := 2;
            move_to(self_obj, 22652, 0);
        end
        else begin
            place := 1;
            move_to(self_obj, 21877, 0);
        end
        metarule3(100, self_obj, 2, 0);
        add_timer_event(self_obj, game_ticks(240), 2);
    end
    if ((cur_map_index == 11) and (self_obj != party_member_obj(16777748))) then begin
        if ((global_var(724) >= 4) and (global_var(724) < 6)) then begin
            set_obj_visibility(self_obj, 0);
        end
        else begin
            set_obj_visibility(self_obj, 1);
        end
    end
    if ((cur_map_index == 21) and (self_obj != party_member_obj(16777748))) then begin
        if ((global_var(724) >= 8) and (global_var(724) <= 10)) then begin
            set_obj_visibility(self_obj, 0);
        end
        else begin
            if ((global_var(723) >= 4) and (global_var(723) <= 6)) then begin
                set_obj_visibility(self_obj, 0);
            end
            else begin
                set_obj_visibility(self_obj, 1);
            end
        end
    end
end

procedure damage_p_proc
begin
    if ((source_obj == dude_obj) and (self_obj != party_member_obj(16777748))) then begin
        call Node998();
        if (cur_map_index == 10) then begin
            set_global_var(769, 1);
            if ((get_critter_stat(self_obj, 35) < 6) and (combat_cry != 1)) then begin
                combat_cry := 1;
                float_msg(self_obj, message_str(1359, 400), 8);
            end
        end
        if (cur_map_index == 11) then begin
            set_global_var(775, 1);
        end
        if ((cur_map_index == 21) and not(party_member_obj(16777748) != 0)) then begin
            set_global_var(861, 1);
        end
    end
end

procedure destroy_p_proc
begin
    if (global_var(731) != 1) then begin
        set_global_var(1019, global_var(1019) bwand (-1 - 8192));
        set_global_var(1019, global_var(1019) bwand (-1 - 16384));
        set_global_var(0, global_var(0) + -15);
        debug_msg("Player gains " + -15 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (self_obj != party_member_obj(16777748)) then begin
            set_global_var(2, 0);
            set_global_var(1, global_var(1) + 1);
        end
        if ((global_var(724) >= 1) and (global_var(724) < 8)) then begin
            set_global_var(895, 1);
        end
    end
    set_global_var(731, 1);
    if ((cur_map_index == 21) or (self_obj == party_member_obj(16777748))) then begin
        set_global_var(1042, self_obj);
        terminate_combat;
        add_timer_event(dude_obj, 0, 4);
    end
end

procedure combat_p_proc
begin
    if ((self_obj == party_member_obj(16777748)) and (global_var(849) == 0)) then begin
        script_overrides;
    end
end

procedure Node998
begin
    if (cur_map_index == 10) then begin
        if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
            if (anim_busy(self_obj) == 0) then begin
                global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                global_temp := (global_temp + 1) % 6;
                while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                    debug_msg("flee loop: rot == " + global_temp);
                    animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                    global_temp := (global_temp + 1) % 6;
                end
            end
        end
        set_global_var(769, 1);
    end
    set_local_var(5, 2);
end

procedure Node999
begin
    if (cur_map_index == 10) then begin
        anim(self_obj, 1000, 0);
    end
end

procedure Node500
begin
    gsay_reply(1359, 500);
    giq_option(4, 1359, 501, Node550, 50);
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        giq_option(4, 1359, 502, Node850, 50);
    end
    if (get_critter_stat(dude_obj, 34) == 1) then begin
        giq_option(4, 1359, 502, Node900, 50);
    end
    giq_option(-3, 1359, 503, Node999, 50);
end

procedure Node550
begin
    gsay_reply(1359, 550);
    giq_option(4, 1359, 551, Node600, 50);
end

procedure Node600
begin
    gsay_reply(1359, 600);
    set_local_var(6, local_var(6) bwor 1);
    if (obj_name(dude_obj) == "David") then begin
        giq_option(4, 1359, message_str(1359, 601) + obj_name(dude_obj) + message_str(1359, 602), Node700, 50);
    end
    else begin
        if (obj_name(dude_obj) == "Carpenter") then begin
            giq_option(4, 1359, message_str(1359, 601) + obj_name(dude_obj) + message_str(1359, 602), Node750, 50);
        end
        else begin
            if ((obj_name(dude_obj) == "Lucy") or (obj_name(dude_obj) == "Bruce") or (obj_name(dude_obj) == "Kyle") or (obj_name(dude_obj) == "Alice") or (obj_name(dude_obj) == "Winston")) then begin
                giq_option(4, 1359, message_str(1359, 601) + obj_name(dude_obj) + message_str(1359, 602), Node800, 50);
            end
            else begin
                giq_option(4, 1359, message_str(1359, 601) + obj_name(dude_obj) + message_str(1359, 602), Node650, 50);
            end
        end
    end
end

procedure Node650
begin
    gsay_reply(1359, 650);
    giq_option(4, 1359, 651, Node1050, 50);
end

procedure Node700
begin
    gsay_reply(1359, 700);
    giq_option(4, 1359, 701, Node1050, 50);
end

procedure Node750
begin
    gsay_reply(1359, 750);
    giq_option(4, 1359, 751, Node1050, 50);
end

procedure Node800
begin
    gsay_reply(1359, 800);
    giq_option(4, 1359, 801, Node1050, 50);
end

procedure Node850
begin
    gsay_reply(1359, 850);
    set_global_var(0, global_var(0) - 2);
    set_global_var(37, 0);
    set_global_var(38, 0);
    set_global_var(39, 0);
    set_global_var(40, 0);
    set_global_var(41, 0);
    set_global_var(42, 0);
    set_global_var(43, 0);
    set_global_var(44, 0);
    set_global_var(45, 0);
    if (global_var(0) >= 1000) then begin
        set_global_var(37, 1);
    end
    else begin
        if (global_var(0) >= 750) then begin
            set_global_var(38, 1);
        end
        else begin
            if (global_var(0) >= 500) then begin
                set_global_var(39, 1);
            end
            else begin
                if (global_var(0) >= 250) then begin
                    set_global_var(40, 1);
                end
                else begin
                    if (global_var(0) > -250) then begin
                        set_global_var(41, 1);
                    end
                    else begin
                        if (global_var(0) > -500) then begin
                            set_global_var(42, 1);
                        end
                        else begin
                            if (global_var(0) > -750) then begin
                                set_global_var(43, 1);
                            end
                            else begin
                                if (global_var(0) > -1000) then begin
                                    set_global_var(44, 1);
                                end
                                else begin
                                    set_global_var(45, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    if (get_critter_stat(dude_obj, 3) < 5) then begin
        giq_option(4, 1359, 851, Node950, 50);
    end
    else begin
        giq_option(4, 1359, 851, Node1000, 50);
    end
end

procedure Node900
begin
    gsay_reply(1359, 900);
    set_global_var(0, global_var(0) - 2);
    set_global_var(37, 0);
    set_global_var(38, 0);
    set_global_var(39, 0);
    set_global_var(40, 0);
    set_global_var(41, 0);
    set_global_var(42, 0);
    set_global_var(43, 0);
    set_global_var(44, 0);
    set_global_var(45, 0);
    if (global_var(0) >= 1000) then begin
        set_global_var(37, 1);
    end
    else begin
        if (global_var(0) >= 750) then begin
            set_global_var(38, 1);
        end
        else begin
            if (global_var(0) >= 500) then begin
                set_global_var(39, 1);
            end
            else begin
                if (global_var(0) >= 250) then begin
                    set_global_var(40, 1);
                end
                else begin
                    if (global_var(0) > -250) then begin
                        set_global_var(41, 1);
                    end
                    else begin
                        if (global_var(0) > -500) then begin
                            set_global_var(42, 1);
                        end
                        else begin
                            if (global_var(0) > -750) then begin
                                set_global_var(43, 1);
                            end
                            else begin
                                if (global_var(0) > -1000) then begin
                                    set_global_var(44, 1);
                                end
                                else begin
                                    set_global_var(45, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    if (get_critter_stat(dude_obj, 3) < 5) then begin
        giq_option(4, 1359, 901, Node950, 50);
    end
    else begin
        giq_option(4, 1359, 901, Node1000, 50);
    end
end

procedure Node950
begin
    gsay_reply(1359, 950);
    giq_option(4, 1359, 951, Kidnap, 50);
end

procedure Node1000
begin
    gsay_reply(1359, 1000);
    giq_option(4, 1359, 1001, Node998, 50);
end

procedure Node1050
begin
    gsay_reply(1359, 1050);
    giq_option(4, 1359, 1051, Node1100, 50);
end

procedure Node1100
begin
    gsay_reply(1359, 1100);
    if ((get_critter_stat(dude_obj, 3) > 4) and is_success(roll_vs_skill(dude_obj, 14, 20))) then begin
        giq_option(4, 1359, 1101, Node1150, 50);
    end
    else begin
        giq_option(4, 1359, 1101, Node1200, 50);
    end
end

procedure Node1150
begin
    gsay_reply(1359, 1150);
    giq_option(4, 1359, 1151, Kidnap, 50);
end

procedure Node1200
begin
    gsay_reply(1359, 1200);
    giq_option(4, 1359, 1201, Node1250, 50);
end

procedure Node1250
begin
    gsay_reply(1359, 1250);
    giq_option(4, 1359, 1251, Node1300, 50);
end

procedure Node1300
begin
    gsay_reply(1359, 1300);
    if (obj_carrying_pid_obj(dude_obj, 225)) then begin
        giq_option(4, 1359, 1301, Node1350, 50);
    end
    if (obj_carrying_pid_obj(dude_obj, 491)) then begin
        giq_option(4, 1359, 1302, Node1400, 50);
    end
    if (obj_carrying_pid_obj(dude_obj, 309)) then begin
        giq_option(4, 1359, 1303, Node1450, 50);
    end
    if (obj_carrying_pid_obj(dude_obj, 4)) then begin
        giq_option(4, 1359, 1304, Node1500, 50);
    end
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        giq_option(4, 1359, 1305, Node850, 50);
    end
    if (get_critter_stat(dude_obj, 34) == 1) then begin
        giq_option(4, 1359, 1305, Node900, 50);
    end
    giq_option(4, 1359, 1306, Node999, 50);
end

procedure Node1350
begin
    gsay_reply(1359, 1350);
    set_local_var(6, local_var(6) bwor 2);
    giq_option(4, 1359, 1351, Node1550, 50);
end

procedure Node1400
begin
    gsay_reply(1359, 1400);
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 491);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 491);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 491);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    metarule(43, dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 1;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 491)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 491);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    giq_option(4, 1359, 1401, Node1600, 50);
end

procedure Node1450
begin
    gsay_reply(1359, 1450);
    set_local_var(6, local_var(6) bwor 4);
    giq_option(4, 1359, 1451, Node1550, 50);
end

procedure Node1500
begin
    gsay_reply(1359, 1500);
    set_local_var(6, local_var(6) bwor 8);
    giq_option(4, 1359, 1501, Node1550, 50);
end

procedure Node1550
begin
    gsay_reply(1359, 1550);
    if (obj_carrying_pid_obj(dude_obj, 225) and ((local_var(6) bwand 2) == 0)) then begin
        giq_option(4, 1359, 1551, Node1350, 50);
    end
    if (obj_carrying_pid_obj(dude_obj, 491)) then begin
        giq_option(4, 1359, 1552, Node1400, 50);
    end
    if (obj_carrying_pid_obj(dude_obj, 309) and ((local_var(6) bwand 4) == 0)) then begin
        giq_option(4, 1359, 1553, Node1450, 50);
    end
    if (obj_carrying_pid_obj(dude_obj, 4) and ((local_var(6) bwand 8) == 0)) then begin
        giq_option(4, 1359, 1554, Node1500, 50);
    end
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        giq_option(4, 1359, 1555, Node850, 50);
    end
    if (get_critter_stat(dude_obj, 34) == 1) then begin
        giq_option(4, 1359, 1555, Node900, 50);
    end
    giq_option(4, 1359, 1556, Node999, 50);
    giq_option(-3, 1359, 1557, Node999, 50);
end

procedure Node1600
begin
    gsay_reply(1359, 1600);
    giq_option(4, 1359, 1601, Kidnap, 50);
end

procedure Node1650
begin
    gsay_reply(1359, 1650);
    giq_option(4, 1359, 1651, Node999, 50);
    giq_option(-3, 1359, 1652, Node999, 50);
end

procedure Node1700
begin
    gsay_reply(1359, 1700);
    giq_option(4, 1359, 1701, Node999, 50);
    giq_option(-3, 1359, 1702, Node999, 50);
end

procedure Node1750
begin
    gsay_reply(1359, 1750);
    giq_option(4, 1359, 1751, Node1800, 50);
    giq_option(-3, 1359, 1752, Node999, 50);
end

procedure Node1800
begin
    gsay_reply(1359, 1800);
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        giq_option(4, 1359, 1801, Node1850, 50);
    end
    if (get_critter_stat(dude_obj, 34) == 1) then begin
        giq_option(4, 1359, 1801, Node1900, 50);
    end
end

procedure Node1850
begin
    gsay_reply(1359, 1850);
    giq_option(4, 1359, 1851, David_party_add, 50);
end

procedure Node1900
begin
    gsay_reply(1359, 1900);
    giq_option(4, 1359, 1901, David_party_add, 50);
end

procedure Node1950
begin
    gsay_reply(1359, 1950);
    giq_option(4, 1359, 1951, Node999, 50);
    giq_option(-3, 1359, 1952, Node999, 50);
end

procedure David_party_add
begin
    party_add(self_obj);
    critter_add_trait(self_obj, 1, 6, 0);
end

procedure Kidnap
begin
    game_ui_disable;
    gfade_out(1);
    set_global_var(724, 4);
    set_global_var(0, global_var(0) - 15);
    set_global_var(37, 0);
    set_global_var(38, 0);
    set_global_var(39, 0);
    set_global_var(40, 0);
    set_global_var(41, 0);
    set_global_var(42, 0);
    set_global_var(43, 0);
    set_global_var(44, 0);
    set_global_var(45, 0);
    if (global_var(0) >= 1000) then begin
        set_global_var(37, 1);
    end
    else begin
        if (global_var(0) >= 750) then begin
            set_global_var(38, 1);
        end
        else begin
            if (global_var(0) >= 500) then begin
                set_global_var(39, 1);
            end
            else begin
                if (global_var(0) >= 250) then begin
                    set_global_var(40, 1);
                end
                else begin
                    if (global_var(0) > -250) then begin
                        set_global_var(41, 1);
                    end
                    else begin
                        if (global_var(0) > -500) then begin
                            set_global_var(42, 1);
                        end
                        else begin
                            if (global_var(0) > -750) then begin
                                set_global_var(43, 1);
                            end
                            else begin
                                if (global_var(0) > -1000) then begin
                                    set_global_var(44, 1);
                                end
                                else begin
                                    set_global_var(45, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    give_exp_points(1000);
    display_msg(message_str(14, 100) + 1000 + message_str(14, 101));
    load_map(11, 0);
end

