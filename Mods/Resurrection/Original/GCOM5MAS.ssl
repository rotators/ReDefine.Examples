variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure Node999;
procedure Start_base_destraction;
procedure Node500;
procedure Node550;
procedure Node600;
procedure Node650;
procedure Node700;
procedure Node750;
procedure Node800;
procedure Node800b;
procedure Node800c;
procedure Node850;
procedure Node900;
procedure Node950;
procedure Node1000;
procedure Node1050;
procedure Node1100;
procedure Node1150;
procedure Node1200;
procedure Node1250;
procedure Node1300;
procedure Node1350;
procedure Node1400;
procedure silent_autodestruct;
procedure noise_autodestruct;

import variable ghoul46_map;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
end

procedure use_p_proc
begin
    script_overrides;
    if (combat_is_initialized) then begin
        display_msg(message_str(467, 300));
    end
    else begin
        start_gdialog(467, self_obj, 4, -1, -1);
        gsay_start;
        if (get_critter_stat(dude_obj, 4) < 4) then begin
            call Node500();
        end
        else begin
            if (global_var(953) == 0) then begin
                if ((local_var(0) bwand 8) != 0) then begin
                    call Node750();
                end
                else begin
                    call Node550();
                end
            end
            else begin
                if ((global_var(953) == 1) or (global_var(953) == 2)) then begin
                    call Node950();
                end
                else begin
                    call Node850();
                end
            end
        end
        gsay_end;
        end_dialogue;
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(467, 100));
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(467, 200));
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 12) then begin
        script_overrides;
        call use_p_proc();
    end
end

procedure map_enter_p_proc
begin
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if (global_var(953) == 0) then begin
            set_global_var(953, 4);
            add_timer_event(ghoul46_map, 10, 12);
        end
    end
    if (fixed_param == 2) then begin
        if (global_var(953) == 0) then begin
            set_global_var(953, 3);
            add_timer_event(ghoul46_map, 10, 8);
        end
    end
end

procedure Node999
begin
end

procedure Start_base_destraction
begin
    if ((local_var(0) bwand 1) != 0) then begin
        add_timer_event(self_obj, 1, 1);
    end
    if ((local_var(0) bwand 2) != 0) then begin
        add_timer_event(self_obj, 1, 2);
    end
end

procedure Node500
begin
    gsay_reply(467, 500);
    if ((local_var(0) bwand 8) != 0) then begin
        if ((local_var(0) bwand 32) == 0) then begin
            giq_option(-3, 467, 502, Node1200, 50);
        end
        else begin
            if ((local_var(0) bwand 64) == 0) then begin
                giq_option(-3, 467, 502, Node1250, 50);
            end
            else begin
                if (global_var(953) == 0) then begin
                    giq_option(-3, 467, 502, Node1300, 50);
                end
            end
        end
    end
    else begin
        giq_option(-3, 467, 502, Node1050, 50);
    end
    giq_option(-3, 467, 501, Node999, 50);
end

procedure Node550
begin
    gsay_reply(467, 550);
    if (obj_is_carrying_obj_pid(dude_obj, 221)) then begin
        giq_option(4, 467, 551, Node600, 50);
    end
    giq_option(4, 467, 552, Node999, 50);
end

procedure Node600
begin
    gsay_reply(467, 600);
    giq_option(4, 467, 601, Node800, 50);
    giq_option(4, 467, 602, Node650, 50);
    giq_option(4, 467, 603, Node999, 50);
end

procedure Node650
begin
    gsay_reply(467, 650);
    giq_option(4, 467, (5 * 60 * 10 / 60 / 10) + message_str(467, 651), silent_autodestruct, 50);
    giq_option(4, 467, (5 * 60 * 10 / 60 / 10) + message_str(467, 652), noise_autodestruct, 50);
    giq_option(4, 467, 653, Node750, 50);
    giq_option(4, 467, 654, Node999, 50);
end

procedure Node700
begin
    gsay_reply(467, 700);
    giq_option(4, 467, 701, Start_base_destraction, 50);
    giq_option(4, 467, 702, Node750, 50);
end

procedure Node750
begin
    gsay_reply(467, 750);
    if ((local_var(0) bwand 1) != 0) then begin
        set_local_var(0, local_var(0) bwand (-1 - 1));
    end
    if ((local_var(0) bwand 2) != 0) then begin
        set_local_var(0, local_var(0) bwand (-1 - 2));
    end
    giq_option(4, 467, 751, Node800, 50);
    giq_option(4, 467, 752, Node650, 50);
    giq_option(4, 467, 753, Node999, 50);
end

procedure Node800
begin
    gsay_reply(467, 800);
    giq_option(4, 467, 804, Node800b, 50);
    giq_option(4, 467, 801, Node750, 50);
    giq_option(4, 467, 802, Node999, 50);
end

procedure Node800b
begin
    gsay_reply(467, 805);
    giq_option(4, 467, 804, Node800c, 50);
    giq_option(4, 467, 803, Node800, 50);
    giq_option(4, 467, 801, Node750, 50);
    giq_option(4, 467, 802, Node999, 50);
end

procedure Node800c
begin
    gsay_reply(467, 806);
    giq_option(4, 467, 803, Node800b, 50);
    giq_option(4, 467, 801, Node750, 50);
    giq_option(4, 467, 802, Node999, 50);
end

procedure Node850
begin
    gsay_reply(467, message_str(467, 850) + ((global_var(954) - game_time) / 10) + message_str(467, 851));
    giq_option(4, 467, 852, Node900, 50);
    giq_option(4, 467, 853, Node999, 50);
end

procedure Node900
begin
    gsay_reply(467, 900);
    giq_option(4, 467, 901, Node999, 50);
end

procedure Node950
begin
    gsay_reply(467, message_str(467, 950) + ((global_var(954) - game_time) / 10) + message_str(467, 951));
    if ((local_var(0) bwand 4) == 0) then begin
        giq_option(4, 467, 952, Node1000, 50);
    end
    giq_option(4, 467, 953, Node999, 50);
end

procedure Node1000
begin
    gsay_reply(467, 1000);
    set_local_var(0, local_var(0) bwor 4);
    giq_option(4, 467, 1001, Node999, 50);
end

procedure Node1050
begin
    if (obj_is_carrying_obj_pid(dude_obj, 221)) then begin
        gsay_reply(467, 1051);
    end
    else begin
        gsay_reply(467, 1050);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 221)) then begin
        giq_option(-3, 467, 1052, Node1100, 50);
    end
    giq_option(-3, 467, 1053, Node999, 50);
end

procedure Node1100
begin
    gsay_reply(467, 1100 + (get_critter_stat(dude_obj, 34) == 1));
    set_local_var(0, local_var(0) bwor 8);
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 221);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 221);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 221);
            if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, 0)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, 0);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, 2) == restock_obj) or (critter_inven_obj(dude_obj, 1) == restock_obj)) then begin
                    metarule(43, dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 1;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 221)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 221);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    giq_option(-3, 467, 1102, Node1200, 50);
    if ((local_var(0) bwand 16) == 0) then begin
        giq_option(-3, 467, 1103, Node1150, 50);
    end
    giq_option(-3, 467, 1104, Node999, 50);
end

procedure Node1150
begin
    gsay_reply(467, 1150);
    set_local_var(0, local_var(0) bwor 16);
    if ((local_var(0) bwand 32) == 0) then begin
        giq_option(-3, 467, 1151, Node1200, 50);
    end
    else begin
        if ((local_var(0) bwand 64) == 0) then begin
            giq_option(-3, 467, 1151, Node1250, 50);
        end
        else begin
            giq_option(-3, 467, 1151, Node1300, 50);
        end
    end
    giq_option(-3, 467, 1152, Node999, 50);
end

procedure Node1200
begin
    gsay_reply(467, 1200);
    set_local_var(0, local_var(0) bwor 32);
    giq_option(-3, 467, 1201, Node1250, 50);
    if ((local_var(0) bwand 16) == 0) then begin
        giq_option(-3, 467, 1202, Node1150, 50);
    end
    giq_option(-3, 467, 1203, Node999, 50);
end

procedure Node1250
begin
    gsay_reply(467, 1250);
    set_local_var(0, local_var(0) bwor 64);
    giq_option(-3, 467, 1251, Node1300, 50);
    if ((local_var(0) bwand 16) == 0) then begin
        giq_option(-3, 467, 1252, Node1150, 50);
    end
    giq_option(-3, 467, 1253, Node999, 50);
end

procedure Node1300
begin
    gsay_reply(467, 1300);
    giq_option(-3, 467, 1301, Node1400, 50);
    giq_option(-3, 467, 1302, Node1350, 50);
end

procedure Node1350
begin
    gsay_reply(467, 1350 + (get_critter_stat(dude_obj, 34) == 1));
    giq_option(-3, 467, 1352, Node999, 50);
end

procedure Node1400
begin
    gsay_reply(467, message_str(467, 1400) + (5 * 60 * 10 / 10) + message_str(467, 1401));
    set_local_var(0, local_var(0) bwor 2);
    giq_option(-3, 467, 1402, Start_base_destraction, 50);
end

procedure silent_autodestruct
begin
    set_local_var(0, local_var(0) bwor 1);
    call Node700();
end

procedure noise_autodestruct
begin
    set_local_var(0, local_var(0) bwor 2);
    call Node700();
end

