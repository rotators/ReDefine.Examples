variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure critter_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure use_obj_on_p_proc;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if (obj_can_see_obj(self_obj, dude_obj)) then begin
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
end

procedure destroy_p_proc
begin
    set_map_var(0, map_var(0) + 1);
    if ((global_var(786) == 1) and (map_var(0) >= 9)) then begin
        display_msg(message_str(1450, 200 + (get_critter_stat(dude_obj, 34) == 1)));
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(1450, 100));
end

procedure description_p_proc
begin
end

procedure use_skill_on_p_proc
begin
    if (action_being_used == 10) then begin
        script_overrides;
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
end

procedure map_enter_p_proc
begin
    if (local_var(4) == 0) then begin
        set_local_var(4, tile_num(self_obj));
    end
    critter_add_trait(self_obj, 1, 6, 5);
    critter_add_trait(self_obj, 1, 5, 9);
    metarule3(100, self_obj, 0, 0);
    add_timer_event(self_obj, game_ticks(random(1, 5)), 0);
end

procedure timed_event_p_proc
begin
    if ((combat_is_initialized == 0) and ((critter_state(self_obj) bwand 1) == 0)) then begin
        reg_anim_func(2, self_obj);
        reg_anim_func(1, 1);
        if (tile_distance(local_var(4), tile_num(self_obj)) < 9) then begin
            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), random(1, 3), 1), 0);
        end
        else begin
            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), rotation_to_tile(tile_num(self_obj), local_var(4)), 4), 0);
        end
        reg_anim_func(3, 0);
    end
    metarule3(100, self_obj, 0, 0);
    add_timer_event(self_obj, game_ticks(random(10, 15)), 0);
end

procedure use_obj_on_p_proc
begin
    if ((obj_pid(obj_being_used_with) == 124) or (obj_pid(obj_being_used_with) == 125) or (obj_pid(obj_being_used_with) == 106)) then begin
        script_overrides;
        rm_obj_from_inven(source_obj, obj_being_used_with);
        destroy_object(obj_being_used_with);
        critter_dmg(self_obj, get_critter_stat(self_obj, 35) + 10, 6);
    end
end

