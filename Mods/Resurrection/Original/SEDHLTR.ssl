variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure map_exit_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure timed_event_p_proc;

export variable Carpenter_Lucy;
export variable Kevin;
export variable Sabrina;
export variable Sabrina_table;
export variable Tim;
export variable Jeremy;
export variable Clark;
export variable Loiz;
export variable Distiller;
export variable Prostitute1;
export variable Prostitute2;
export variable Prostitute3;
export variable Prostitute4;
export variable Door_guard;
export variable SC_Barman;

variable policeman1;
variable policeman2;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
end

procedure map_exit_p_proc
begin
end

procedure map_enter_p_proc
begin
    if (elevation(dude_obj) == 1) then begin
        set_light_level(50);
    end
    else begin
        if ((get_month >= 3) and (get_month < 5)) then begin
            if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                set_light_level(game_time_hour - 600 + 40);
            end
            else begin
                if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1800));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 5) and (get_month < 9)) then begin
                if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                    set_light_level(game_time_hour - 500 + 40);
                end
                else begin
                    if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1900));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((get_month >= 9) and (get_month < 11)) then begin
                    if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                        set_light_level(game_time_hour - 600 + 40);
                    end
                    else begin
                        if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                            set_light_level(100);
                        end
                        else begin
                            if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                                set_light_level(100 - (game_time_hour - 1800));
                            end
                            else begin
                                set_light_level(40);
                            end
                        end
                    end
                end
                else begin
                    if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                        set_light_level(game_time_hour - 700 + 40);
                    end
                    else begin
                        if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                            set_light_level(100);
                        end
                        else begin
                            if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                                set_light_level(100 - (game_time_hour - 1700));
                            end
                            else begin
                                set_light_level(40);
                            end
                        end
                    end
                end
            end
        end
    end
    if (not(metarule(22, 0)) and (global_var(776) != 0)) then begin
        if (((3 * (30 * (24 * (60 * (60 * 10))))) + global_var(776)) <= game_time) then begin
            set_global_var(776, 0);
        end
        else begin
            set_global_var(769, 1);
        end
    end
    policeman1 := tile_contains_pid_obj(11890, 0, 16777752);
    policeman2 := tile_contains_pid_obj(12489, 0, 16777753);
    if (map_var(5) < 15) then begin
        add_timer_event(self_obj, 5, 1);
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
        set_global_var(1018, global_var(1018) bwor 2);
    end
end

procedure map_update_p_proc
begin
    if (elevation(dude_obj) == 1) then begin
        set_light_level(50);
    end
    else begin
        if ((get_month >= 3) and (get_month < 5)) then begin
            if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                set_light_level(game_time_hour - 600 + 40);
            end
            else begin
                if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1800));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 5) and (get_month < 9)) then begin
                if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                    set_light_level(game_time_hour - 500 + 40);
                end
                else begin
                    if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1900));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((get_month >= 9) and (get_month < 11)) then begin
                    if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                        set_light_level(game_time_hour - 600 + 40);
                    end
                    else begin
                        if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                            set_light_level(100);
                        end
                        else begin
                            if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                                set_light_level(100 - (game_time_hour - 1800));
                            end
                            else begin
                                set_light_level(40);
                            end
                        end
                    end
                end
                else begin
                    if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                        set_light_level(game_time_hour - 700 + 40);
                    end
                    else begin
                        if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                            set_light_level(100);
                        end
                        else begin
                            if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                                set_light_level(100 - (game_time_hour - 1700));
                            end
                            else begin
                                set_light_level(40);
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        set_map_var(5, map_var(5) + 1);
        if (not(combat_is_initialized)) then begin
            if (map_var(5) == 1) then begin
                float_msg(policeman1, message_str(1355, 100), 0);
                add_timer_event(self_obj, game_ticks(6), 1);
            end
            if (map_var(5) == 2) then begin
                float_msg(policeman2, message_str(1355, 200), 0);
                float_msg(policeman1, 0, 0);
                add_timer_event(self_obj, game_ticks(4), 1);
            end
            if (map_var(5) == 3) then begin
                float_msg(policeman1, message_str(1355, 300), 0);
                float_msg(policeman2, 0, 0);
                add_timer_event(self_obj, game_ticks(5), 1);
            end
            if (map_var(5) == 4) then begin
                float_msg(policeman2, message_str(1355, 400), 0);
                float_msg(policeman1, 0, 0);
                add_timer_event(self_obj, game_ticks(3), 1);
            end
            if (map_var(5) == 5) then begin
                float_msg(policeman1, message_str(1355, 500), 0);
                float_msg(policeman2, 0, 0);
                add_timer_event(self_obj, game_ticks(7), 1);
            end
            if (map_var(5) == 6) then begin
                float_msg(policeman2, message_str(1355, 600), 0);
                float_msg(policeman1, 0, 0);
                add_timer_event(self_obj, game_ticks(4), 1);
            end
            if (map_var(5) == 7) then begin
                float_msg(policeman1, message_str(1355, 700), 0);
                float_msg(policeman2, 0, 0);
                add_timer_event(self_obj, game_ticks(7), 1);
            end
            if (map_var(5) == 8) then begin
                float_msg(policeman2, message_str(1355, 800), 0);
                float_msg(policeman1, 0, 0);
                add_timer_event(self_obj, game_ticks(7), 1);
            end
            if (map_var(5) == 9) then begin
                float_msg(policeman1, message_str(1355, 900), 0);
                float_msg(policeman2, 0, 0);
                add_timer_event(self_obj, game_ticks(8), 1);
            end
            if (map_var(5) == 10) then begin
                float_msg(policeman2, message_str(1355, 1000), 0);
                float_msg(policeman1, 0, 0);
                add_timer_event(self_obj, game_ticks(4), 1);
            end
            if (map_var(5) == 11) then begin
                float_msg(policeman1, message_str(1355, 1100), 0);
                float_msg(policeman2, 0, 0);
                add_timer_event(self_obj, game_ticks(7), 1);
            end
            if (map_var(5) == 12) then begin
                float_msg(policeman2, message_str(1355, 1200), 0);
                float_msg(policeman1, 0, 0);
                add_timer_event(self_obj, game_ticks(6), 1);
            end
            if (map_var(5) == 13) then begin
                float_msg(policeman1, message_str(1355, 1300), 0);
                float_msg(policeman2, 0, 0);
                add_timer_event(self_obj, game_ticks(3), 1);
            end
            if (map_var(5) == 14) then begin
                float_msg(policeman1, message_str(1355, 1301), 0);
                float_msg(policeman2, 0, 0);
                add_timer_event(self_obj, game_ticks(5), 1);
            end
            if (map_var(5) == 15) then begin
                float_msg(policeman2, message_str(1355, 1400), 0);
                float_msg(policeman1, 0, 0);
            end
        end
    end
end

