variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure map_exit_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure timed_event_p_proc;

export variable progema1_map;
export variable rock_level3_1;
export variable rock_level3_2;
export variable rock_level3_3;

variable incrush_scene;
variable index_party;
variable index_radiation;
variable incrush_Party;
variable ldeath;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
    progema1_map := self_obj;
end

procedure map_exit_p_proc
begin
end

procedure map_enter_p_proc
begin
    if (metarule(14, 0)) then begin
        display_msg(message_str(189, 100));
        set_map_var(1, random(2, 3));
    end
    if (elevation(dude_obj) == 0) then begin
        if ((get_month >= 3) and (get_month < 5)) then begin
            if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                set_light_level(game_time_hour - 600 + 40);
            end
            else begin
                if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1800));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 5) and (get_month < 9)) then begin
                if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                    set_light_level(game_time_hour - 500 + 40);
                end
                else begin
                    if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1900));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((get_month >= 9) and (get_month < 11)) then begin
                    if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                        set_light_level(game_time_hour - 600 + 40);
                    end
                    else begin
                        if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                            set_light_level(100);
                        end
                        else begin
                            if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                                set_light_level(100 - (game_time_hour - 1800));
                            end
                            else begin
                                set_light_level(40);
                            end
                        end
                    end
                end
                else begin
                    if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                        set_light_level(game_time_hour - 700 + 40);
                    end
                    else begin
                        if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                            set_light_level(100);
                        end
                        else begin
                            if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                                set_light_level(100 - (game_time_hour - 1700));
                            end
                            else begin
                                set_light_level(40);
                            end
                        end
                    end
                end
            end
        end
    end
    if (elevation(dude_obj) == 1) then begin
        set_light_level(50);
    end
    if (elevation(dude_obj) == 2) then begin
        set_light_level(50);
    end
    if (not(metarule(22, 0))) then begin
        set_map_var(6, game_time);
    end
end

procedure map_update_p_proc
begin
    if (elevation(dude_obj) == 0) then begin
        if ((get_month >= 3) and (get_month < 5)) then begin
            if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                set_light_level(game_time_hour - 600 + 40);
            end
            else begin
                if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1800));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 5) and (get_month < 9)) then begin
                if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                    set_light_level(game_time_hour - 500 + 40);
                end
                else begin
                    if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1900));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((get_month >= 9) and (get_month < 11)) then begin
                    if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                        set_light_level(game_time_hour - 600 + 40);
                    end
                    else begin
                        if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                            set_light_level(100);
                        end
                        else begin
                            if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                                set_light_level(100 - (game_time_hour - 1800));
                            end
                            else begin
                                set_light_level(40);
                            end
                        end
                    end
                end
                else begin
                    if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                        set_light_level(game_time_hour - 700 + 40);
                    end
                    else begin
                        if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                            set_light_level(100);
                        end
                        else begin
                            if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                                set_light_level(100 - (game_time_hour - 1700));
                            end
                            else begin
                                set_light_level(40);
                            end
                        end
                    end
                end
            end
        end
    end
    if (elevation(dude_obj) == 1) then begin
        set_light_level(50);
    end
    if (elevation(dude_obj) == 2) then begin
        set_light_level(50);
    end
    if (elevation(dude_obj) == 0) then begin
        if (((game_time - map_var(6)) / 10) >= 80) then begin
            index_radiation := (game_time - map_var(6)) / 10;
            while (index_radiation >= 80) do begin
                if (random(1, 100) > get_critter_stat(dude_obj, 31)) then begin
                    radiation_inc(dude_obj, 1);
                end
                index_radiation := index_radiation - 80;
            end
            set_map_var(6, game_time);
        end
    end
    if (elevation(dude_obj) == 1) then begin
        if (((game_time - map_var(6)) / 10) >= 30) then begin
            index_radiation := (game_time - map_var(6)) / 10;
            while (index_radiation >= 30) do begin
                if (random(1, 100) > get_critter_stat(dude_obj, 31)) then begin
                    radiation_inc(dude_obj, 1);
                end
                index_radiation := index_radiation - 30;
            end
            set_map_var(6, game_time);
        end
    end
    if (elevation(dude_obj) == 2) then begin
        if (((game_time - map_var(6)) / 10) >= 30) then begin
            index_radiation := (game_time - map_var(6)) / 10;
            while (index_radiation >= 30) do begin
                if (random(1, 100) > get_critter_stat(dude_obj, 31)) then begin
                    radiation_inc(dude_obj, 1);
                end
                index_radiation := index_radiation - 30;
            end
            set_map_var(6, game_time);
        end
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        game_ui_enable;
        gfade_in(1);
    end
    if (fixed_param == 2) then begin
        gfade_in(1);
        display_msg(message_str(189, 101 + (get_critter_stat(dude_obj, 34) == 1)));
        add_timer_event(self_obj, game_ticks(1), 3);
        if (get_critter_stat(dude_obj, 4) <= 3) then begin
            float_msg(dude_obj, message_str(189, 120), 2);
        end
        else begin
            float_msg(dude_obj, message_str(189, 103), 2);
        end
    end
    if (fixed_param == 3) then begin
        if (incrush_scene == 0) then begin
            gfade_out(1);
            move_to(dude_obj, 18899, 1);
            anim(dude_obj, 21, 0);
            anim(dude_obj, 1000, 1);
            create_object_sid(33554839, 18706, 1, 192);
            create_object_sid(33554499, 18501, 1, 192);
            create_object_sid(33554499, 18701, 1, 192);
            create_object_sid(33554499, 18901, 1, 192);
            create_object_sid(33554499, 19101, 1, 192);
            create_object_sid(33554499, 19301, 1, 192);
            create_object_sid(33554499, 19102, 1, 192);
            create_object_sid(33554499, 19303, 1, 192);
            create_object_sid(33554499, 19304, 1, 192);
            create_object_sid(33554499, 19305, 1, 192);
            create_object_sid(33554499, 19105, 1, 192);
            create_object_sid(33554499, 18905, 1, 192);
            create_object_sid(33554499, 18907, 1, 192);
            create_object_sid(33554499, 19107, 1, 192);
            play_sfx("HOWITZER");
            add_timer_event(self_obj, game_ticks(2), 3);
        end
        if (incrush_scene == 1) then begin
            gfade_in(1);
            incrush_Party := 0;
            if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
                incrush_Party := incrush_Party + 1;
            end
            if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
                incrush_Party := incrush_Party + 1;
            end
            if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
                incrush_Party := incrush_Party + 1;
            end
            if (party_member_obj(16777748) != 0) then begin
                incrush_Party := incrush_Party + 1;
            end
            if (party_member_obj(16777729) != 0) then begin
                incrush_Party := incrush_Party + 1;
            end
            if (party_member_obj(16777812) != 0) then begin
                incrush_Party := incrush_Party + 1;
            end
            if (incrush_Party > 0) then begin
                if (incrush_Party > 1) then begin
                    index_party := 106;
                end
                else begin
                    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
                        index_party := 107;
                    end
                    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
                        index_party := 109;
                    end
                    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
                        index_party := 110;
                    end
                    if (party_member_obj(16777748) != 0) then begin
                        index_party := 111;
                    end
                    if (party_member_obj(16777729) != 0) then begin
                        index_party := 112;
                    end
                    if (party_member_obj(16777812) != 0) then begin
                        index_party := 113;
                    end
                end
            end
            else begin
                index_party := 0;
            end
            reg_anim_func(2, dude_obj);
            reg_anim_func(1, 1);
            reg_anim_animate(dude_obj, 36, -1);
            reg_anim_func(3, 0);
            if (index_party != 0) then begin
                display_msg(message_str(189, 104 + (get_critter_stat(dude_obj, 34) == 1)) + message_str(189, index_party));
            end
            else begin
                display_msg(message_str(189, 104 + (get_critter_stat(dude_obj, 34) == 1)));
            end
            if (get_critter_stat(dude_obj, 4) <= 3) then begin
                float_msg(dude_obj, message_str(189, 121), 2);
            end
            else begin
                float_msg(dude_obj, message_str(189, 114), 8);
            end
            game_ui_enable;
        end
        incrush_scene := 1;
    end
    if (fixed_param == 4) then begin
        if (ldeath == 0) then begin
            ldeath := 1;
            anim(dude_obj, 31, has_trait(1, dude_obj, 10));
            add_timer_event(self_obj, 12, 4);
        end
        else begin
            kill_critter(dude_obj, 59);
            game_ui_enable;
        end
    end
    if (fixed_param == 5) then begin
        game_ui_enable;
        gfade_in(1);
    end
    if (fixed_param == 6) then begin
        gfade_out(1);
        game_ui_disable;
        destroy_object(rock_level3_1);
        destroy_object(rock_level3_2);
        destroy_object(rock_level3_3);
        destroy_object(tile_contains_pid_obj(17091, 2, 33554499));
        destroy_object(tile_contains_pid_obj(17092, 2, 33554499));
        destroy_object(tile_contains_pid_obj(17093, 2, 33554499));
        destroy_object(tile_contains_pid_obj(16893, 2, 33554499));
        display_msg(message_str(189, 200));
        if (has_trait(1, dude_obj, 666) == 0) then begin
            set_obj_visibility(dude_obj, 0);
        end
        add_timer_event(self_obj, game_ticks(1), 1);
    end
    if (fixed_param == 7) then begin
        reg_anim_func(2, dude_obj);
        reg_anim_func(1, 1);
        reg_anim_animate(dude_obj, 0, -1);
        reg_anim_func(3, 0);
    end
end

