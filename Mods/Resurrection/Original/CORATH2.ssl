variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);

variable sequence;
variable sequence2;
variable sequence4;
variable random_place;
variable uncle_talker;
variable francis;
variable dynamite;

export variable Grave1;
export variable Grave2;
export variable Grave3;
export variable Grave4;
export variable Grave5;
export variable Grave6;
export variable Grave7;
export variable Grave8;
export variable Grave9;
export variable Grave10;
export variable Grave11;
export variable Grave12;
export variable Grave13;
export variable Grave14;
export variable Grave15;
export variable Grave16;
export variable Grave17;
export variable Grave18;
export variable Grave19;
export variable Grave20;
export variable Hrobnik_obj;
export variable Gravedigger_obj;
export variable Cedrick_obj;
export variable Strycek_obj;
export variable Uncle_door;
export variable Ademar_obj;
export variable uncle_wall1;
export variable uncle_wall2;
export variable uncle_wall3;
export variable uncle_entrance_door;
export variable map_event;
export variable items_carrier;
export variable corath_temp_box2;
export variable Police3_obj;
export variable victim_door;
export variable police1;
export variable police2;
export variable police3;
export variable police4;
export variable police5;

variable cigarets;

procedure start;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure map_exit_p_proc;
procedure timed_event_p_proc;
procedure prepare_police;
procedure create_big_hole;
procedure attack_uncles_enemies;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777293) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777293)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
    map_event := self_obj;
end

procedure map_enter_p_proc
begin
    if (((global_var(843) bwand 2097152) != 0) and not(metarule(22, 0))) then begin
        gfade_in(1);
        set_global_var(843, global_var(843) bwand (-1 - 2097152));
    end
    if (metarule(14, 0) and not(metarule(22, 0))) then begin
        random_place := random(1, 4);
        if (random_place == 1) then begin
            cigarets := create_object_sid(556, 15309, 0, 1562);
        end
        if (random_place == 2) then begin
            cigarets := create_object_sid(556, 13909, 0, 1562);
        end
        if (random_place == 3) then begin
            cigarets := create_object_sid(556, 16501, 0, 1562);
        end
        if (random_place == 4) then begin
            cigarets := create_object_sid(556, 16309, 0, 1562);
        end
        create_object_sid(33555758, 15304, 0, -1);
    end
    if ((global_var(837) == 0) and ((global_var(842) bwand 1048576) != 0) and not((global_var(842) bwand 2097152) != 0) and not(metarule(22, 0))) then begin
        uncle_talker := tile_contains_pid_obj(17685, 0, 16777898);
        set_global_var(857, 0);
        obj_close(uncle_entrance_door);
        call prepare_police();
        game_ui_disable;
        add_timer_event(self_obj, game_ticks(0), 10);
    end
    if (metarule(22, 0) and (map_var(2) > 0)) then begin
        add_timer_event(self_obj, 0, 20);
    end
    if ((map_var(3) > 0) and (map_var(3) < 20)) then begin
        add_timer_event(self_obj, 0, 40);
    end
    if ((get_month >= 3) and (get_month < 5)) then begin
        if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
            set_light_level(game_time_hour - 600 + 40);
        end
        else begin
            if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                set_light_level(100);
            end
            else begin
                if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                    set_light_level(100 - (game_time_hour - 1800));
                end
                else begin
                    set_light_level(40);
                end
            end
        end
    end
    else begin
        if ((get_month >= 5) and (get_month < 9)) then begin
            if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                set_light_level(game_time_hour - 500 + 40);
            end
            else begin
                if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1900));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 9) and (get_month < 11)) then begin
                if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                    set_light_level(game_time_hour - 600 + 40);
                end
                else begin
                    if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1800));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                    set_light_level(game_time_hour - 700 + 40);
                end
                else begin
                    if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1700));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
        end
    end
end

procedure map_update_p_proc
begin
    if ((get_month >= 3) and (get_month < 5)) then begin
        if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
            set_light_level(game_time_hour - 600 + 40);
        end
        else begin
            if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                set_light_level(100);
            end
            else begin
                if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                    set_light_level(100 - (game_time_hour - 1800));
                end
                else begin
                    set_light_level(40);
                end
            end
        end
    end
    else begin
        if ((get_month >= 5) and (get_month < 9)) then begin
            if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                set_light_level(game_time_hour - 500 + 40);
            end
            else begin
                if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1900));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 9) and (get_month < 11)) then begin
                if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                    set_light_level(game_time_hour - 600 + 40);
                end
                else begin
                    if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1800));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                    set_light_level(game_time_hour - 700 + 40);
                end
                else begin
                    if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1700));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
        end
    end
    if (((global_var(842) bwand 8388608) != 0) and (elevation(dude_obj) == 1) and not((global_var(842) bwand 16777216) != 0)) then begin
        add_timer_event(self_obj, game_ticks(0), 40);
        set_global_var(842, global_var(842) bwor 16777216);
    end
end

procedure map_exit_p_proc
begin
    if (((global_var(842) bwand 1048576) != 0) and not((global_var(842) bwand 2097152) != 0)) then begin
        if ((global_var(842) bwand 8388608) != 0) then begin
            set_global_var(842, global_var(842) bwand (-1 - 8388608));
        end
        set_global_var(857, 0);
        set_global_var(842, global_var(842) bwor 2097152);
    end
    if ((global_var(837) == 1) and not((global_var(842) bwand 131072) != 0)) then begin
        set_global_var(842, global_var(842) bwor 131072);
        set_global_var(837, 0);
    end
end

procedure timed_event_p_proc
begin
    if (((global_var(842) bwand 1048576) != 0) and not((global_var(842) bwand 2097152) != 0)) then begin
        if (fixed_param == 10) then begin
            if (fixed_param == 10) then begin
                sequence := sequence + 1;
            end
            if (sequence == 1) then begin
                metarule3(108, 18487, 0, 0);
                display_msg(message_str(1546, 100));
                add_timer_event(self_obj, game_ticks(2), 10);
            end
            if (sequence == 2) then begin
                float_msg(francis, message_str(1546, 600), 4);
                add_timer_event(self_obj, game_ticks(4), 10);
            end
            if (sequence == 3) then begin
                float_msg(francis, message_str(1546, 601), 4);
                add_timer_event(self_obj, game_ticks(5), 10);
            end
            if (sequence == 4) then begin
                float_msg(uncle_talker, message_str(1546, 700), 2);
                add_timer_event(self_obj, game_ticks(6), 10);
            end
            if (sequence == 5) then begin
                float_msg(francis, message_str(1546, 800), 4);
                add_timer_event(self_obj, game_ticks(6), 10);
            end
            if (sequence == 6) then begin
                float_msg(uncle_talker, message_str(1546, 900), 2);
                add_timer_event(self_obj, game_ticks(5), 10);
            end
            if (sequence == 7) then begin
                animate_move_obj_to_tile(uncle_talker, 17676, 0);
                add_timer_event(self_obj, game_ticks(1), 10);
            end
            if (sequence == 8) then begin
                obj_close(uncle_entrance_door);
                add_timer_event(self_obj, game_ticks(3), 10);
            end
            if (sequence == 9) then begin
                move_to(uncle_talker, 17871, elevation(self_obj));
                anim(uncle_talker, 1000, 3);
                float_msg(francis, message_str(1546, 1000), 4);
                add_timer_event(self_obj, game_ticks(5), 10);
            end
            if (sequence == 10) then begin
                add_timer_event(self_obj, game_ticks(1), 10);
            end
            if (sequence == 11) then begin
                game_ui_enable;
                sequence := 0;
                add_timer_event(Ademar_obj, game_ticks(0), 3);
            end
        end
        if (fixed_param == 20) then begin
            if (fixed_param == 20) then begin
                set_map_var(2, map_var(2) + 1);
            end
            if (map_var(2) == 1) then begin
                reg_anim_func(2, police1);
                animate_move_obj_to_tile(police1, 18285, 0);
                add_timer_event(self_obj, game_ticks(1), 20);
            end
            if (map_var(2) == 2) then begin
                add_timer_event(self_obj, game_ticks(3), 20);
            end
            if (map_var(2) == 3) then begin
                anim(police1, 1000, 0);
                reg_anim_func(2, police1);
                reg_anim_func(1, 1);
                reg_anim_animate(police1, 11, -1);
                reg_anim_func(3, 0);
                add_timer_event(self_obj, game_ticks(1), 20);
            end
            if (map_var(2) == 4) then begin
                dynamite := create_object_sid(51, 18285, 0, -1);
                add_timer_event(self_obj, game_ticks(1), 20);
            end
            if (map_var(2) == 5) then begin
                reg_anim_func(2, police1);
                animate_move_obj_to_tile(police1, 19282, 1);
                add_timer_event(self_obj, game_ticks(1), 20);
            end
            if (map_var(2) == 6) then begin
                anim(police1, 1000, 4);
                destroy_object(dynamite);
                call create_big_hole();
                set_global_var(842, global_var(842) bwor 8388608);
                add_timer_event(Ademar_obj, game_ticks(0), 4);
                add_timer_event(police1, game_ticks(0), 5);
                add_timer_event(police2, game_ticks(1), 6);
                add_timer_event(police3, game_ticks(1), 7);
                add_timer_event(police4, game_ticks(1), 8);
                add_timer_event(police5, game_ticks(1), 4);
                add_timer_event(francis, game_ticks(0), 4);
                float_msg(francis, message_str(1546, 1100), 4);
                add_timer_event(self_obj, game_ticks(2), 20);
            end
            if (map_var(2) == 7) then begin
                animate_move_obj_to_tile(police2, 17480, 1);
                animate_move_obj_to_tile(police3, 18679, 1);
                animate_move_obj_to_tile(police4, 17880, 1);
                animate_move_obj_to_tile(dude_obj, 17676, 1);
                animate_move_obj_to_tile(Ademar_obj, 18276, 1);
                animate_move_obj_to_tile(police1, 19286, 0);
                add_timer_event(self_obj, game_ticks(1), 20);
            end
            if (map_var(2) == 8) then begin
                metarule3(108, 17474, 0, 0);
                reg_anim_func(2, police5);
                animate_move_obj_to_tile(police5, 19691, 1);
                add_timer_event(self_obj, 6, 20);
            end
            if (map_var(2) == 9) then begin
                add_timer_event(self_obj, game_ticks(1), 20);
            end
            if (map_var(2) == 10) then begin
                reg_anim_func(2, dude_obj);
                reg_anim_func(2, Ademar_obj);
                reg_anim_func(2, police2);
                reg_anim_func(2, police3);
                reg_anim_func(2, police4);
                anim(dude_obj, 1000, 0);
                anim(Ademar_obj, 1000, 0);
                anim(police1, 1000, 5);
                anim(police2, 1000, 0);
                anim(police3, 1000, 0);
                anim(police4, 1000, 0);
                add_timer_event(self_obj, 1, 20);
            end
            if (map_var(2) == 11) then begin
                add_timer_event(self_obj, game_ticks(2), 21);
                add_timer_event(police2, 0, 1);
                add_timer_event(police3, 0, 1);
                add_timer_event(police4, 0, 1);
                set_map_var(2, 0);
                set_global_var(837, 1);
            end
        end
        if (fixed_param == 21) then begin
            game_ui_enable;
        end
        if (fixed_param == 30) then begin
            if (fixed_param == 30) then begin
                sequence2 := sequence2 + 1;
            end
            if (sequence2 == 1) then begin
                reg_anim_func(2, police1);
                animate_move_obj_to_tile(police1, 18285, 0);
                add_timer_event(self_obj, game_ticks(1), 30);
            end
            if (sequence2 == 2) then begin
                add_timer_event(self_obj, game_ticks(3), 30);
            end
            if (sequence2 == 3) then begin
                anim(police1, 1000, 0);
                reg_anim_func(2, police1);
                reg_anim_func(1, 1);
                reg_anim_animate(police1, 11, -1);
                reg_anim_func(3, 0);
                add_timer_event(self_obj, game_ticks(1), 30);
            end
            if (sequence2 == 4) then begin
                dynamite := create_object_sid(51, 18285, 0, -1);
                add_timer_event(self_obj, game_ticks(1), 30);
            end
            if (sequence2 == 5) then begin
                reg_anim_func(2, police1);
                animate_move_obj_to_tile(police1, 19282, 1);
                add_timer_event(self_obj, game_ticks(1), 30);
            end
            if (sequence2 == 6) then begin
                anim(police1, 1000, 4);
                destroy_object(dynamite);
                call create_big_hole();
                add_timer_event(self_obj, game_ticks(1), 30);
            end
            if (sequence2 == 7) then begin
                game_ui_disable;
                add_timer_event(self_obj, game_ticks(1), 30);
            end
            if (sequence2 == 8) then begin
                gfade_out(600);
                add_timer_event(self_obj, game_ticks(1), 30);
            end
            if (sequence2 == 9) then begin
                set_global_var(842, global_var(842) bwor 4194304);
                move_to(police1, 21295, 1);
                anim(police1, 1000, 1);
                move_to(police3, 18272, elevation(self_obj));
                anim(police3, 1000, 0);
                move_to(police4, 17476, elevation(self_obj));
                anim(police4, 1000, 2);
                add_timer_event(self_obj, game_ticks(1), 30);
            end
            if (sequence2 == 10) then begin
                reg_anim_func(2, Strycek_obj);
                reg_anim_func(1, 1);
                reg_anim_animate(Strycek_obj, 34, -1);
                reg_anim_func(3, 0);
                reg_anim_func(2, police1);
                reg_anim_func(1, 1);
                reg_anim_animate(police1, 34, -1);
                reg_anim_func(3, 0);
                reg_anim_func(2, police3);
                reg_anim_func(1, 1);
                reg_anim_animate(police3, 34, -1);
                reg_anim_func(3, 0);
                reg_anim_func(2, police4);
                reg_anim_func(1, 1);
                reg_anim_animate(police4, 34, -1);
                reg_anim_func(3, 0);
                add_timer_event(self_obj, game_ticks(3), 30);
            end
            if (sequence2 == 11) then begin
                destroy_object(francis);
                destroy_object(police2);
                destroy_object(police5);
                destroy_object(Ademar_obj);
                kill_critter(police1, 34);
                kill_critter(police3, 34);
                kill_critter(police4, 34);
                kill_critter(Strycek_obj, 34);
                gfade_in(600);
                add_timer_event(self_obj, game_ticks(1), 30);
            end
            if (sequence2 == 12) then begin
                set_global_var(842, global_var(842) bwor 2097152);
                set_global_var(842, global_var(842) bwor 131072);
                game_ui_enable;
                sequence2 := 0;
                game_time_advance(1 * (60 * (60 * 10)));
            end
        end
        if ((fixed_param == 40) and not(combat_is_initialized) and not((global_var(842) bwand 131072) != 0)) then begin
            if (fixed_param == 40) then begin
                set_map_var(3, map_var(3) + 1);
            end
            if (map_var(3) == 1) then begin
                set_global_var(842, global_var(842) bwor 16777216);
                if (not((global_var(842) bwand 524288) != 0)) then begin
                    reg_anim_func(2, Ademar_obj);
                    move_to(Ademar_obj, 21270, 1);
                    anim(Ademar_obj, 1000, 3);
                    reg_anim_func(2, Ademar_obj);
                    add_timer_event(Ademar_obj, game_ticks(0), 5);
                end
                add_timer_event(self_obj, game_ticks(4), 40);
            end
            if (map_var(3) == 2) then begin
                if ((global_var(834) == 5) or ((global_var(842) bwand 16384) != 0) and ((global_var(835) == 3) or (global_var(841) == 2))) then begin
                    if (global_var(855) >= 6) then begin
                        if (police3 and (police3 != -1)) then begin
                            move_to(police3, 21869, 1);
                            anim(police3, 1000, 3);
                        end
                        else begin
                            if (police2 and (police2 != -1)) then begin
                                move_to(police2, 21869, 1);
                                anim(police2, 1000, 3);
                            end
                        end
                        if (police4 and (police4 != -1)) then begin
                            move_to(police4, 21470, 1);
                            anim(police4, 1000, 3);
                        end
                        else begin
                            if (police2 and (police2 != -1)) then begin
                                move_to(police2, 21869, 1);
                                anim(police2, 1000, 3);
                            end
                        end
                    end
                end
                add_timer_event(self_obj, game_ticks(1), 40);
            end
            if (map_var(3) == 3) then begin
                if (elevation(police2) == 1) then begin
                    animate_move_obj_to_tile(police2, 21892, 0);
                end
                if (elevation(police3) == 1) then begin
                    animate_move_obj_to_tile(police3, 21892, 0);
                end
                if (elevation(police4) == 1) then begin
                    animate_move_obj_to_tile(police4, 21892, 0);
                end
                add_timer_event(self_obj, game_ticks(2), 40);
            end
            if (map_var(3) == 4) then begin
                add_timer_event(self_obj, game_ticks(2), 40);
            end
            if (map_var(3) == 5) then begin
                call attack_uncles_enemies();
                add_timer_event(self_obj, game_ticks(2), 40);
            end
            if (map_var(3) == 6) then begin
                call attack_uncles_enemies();
                add_timer_event(self_obj, game_ticks(2), 40);
            end
            if (map_var(3) == 7) then begin
                call attack_uncles_enemies();
                add_timer_event(self_obj, game_ticks(2), 40);
            end
            if (map_var(3) == 8) then begin
                call attack_uncles_enemies();
                add_timer_event(self_obj, game_ticks(2), 40);
            end
            if (map_var(3) == 9) then begin
                call attack_uncles_enemies();
                add_timer_event(self_obj, game_ticks(2), 40);
            end
        end
        if ((fixed_param == 40) and (combat_is_initialized or ((global_var(842) bwand 131072) != 0))) then begin
            set_map_var(3, 20);
        end
        if (fixed_param == 50) then begin
            if (fixed_param == 50) then begin
                sequence4 := sequence4 + 1;
            end
            if (sequence4 == 1) then begin
                game_ui_disable;
                gfade_out(600);
                add_timer_event(self_obj, game_ticks(1), 50);
            end
            if (sequence4 == 2) then begin
                destroy_object(Ademar_obj);
                add_timer_event(self_obj, game_ticks(1), 50);
            end
            if (sequence4 == 3) then begin
                game_ui_enable;
                gfade_in(600);
                if ((global_var(842) bwand 8388608) != 0) then begin
                    set_global_var(842, global_var(842) bwand (-1 - 8388608));
                end
                if (((global_var(842) bwand 1048576) != 0) and not((global_var(842) bwand 2097152) != 0)) then begin
                    set_global_var(842, global_var(842) bwor 2097152);
                end
            end
        end
    end
end

procedure prepare_police
begin
    move_to(dude_obj, 18492, elevation(self_obj));
    anim(dude_obj, 1000, 0);
    if (party_member_obj(16777729) != 0) then begin
        if (party_member_obj(16777729) != 0) then begin
            if (has_trait(1, party_member_obj(16777729), 666)) then begin
                critter_attempt_placement(party_member_obj(16777729), tile_num_in_direction(tile_num(dude_obj), (has_trait(1, dude_obj, 10) + 3) % 6, 2), elevation(dude_obj));
            end
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
        if (party_member_obj(16777779) != 0) then begin
            if (has_trait(1, party_member_obj(16777779), 666)) then begin
                critter_attempt_placement(party_member_obj(16777779), tile_num_in_direction(tile_num(dude_obj), (has_trait(1, dude_obj, 10) + 3) % 6, 2), elevation(dude_obj));
            end
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
        if (party_member_obj(16777811) != 0) then begin
            if (has_trait(1, party_member_obj(16777811), 666)) then begin
                critter_attempt_placement(party_member_obj(16777811), tile_num_in_direction(tile_num(dude_obj), (has_trait(1, dude_obj, 10) + 3) % 6, 2), elevation(dude_obj));
            end
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (party_member_obj(16777812) != 0) then begin
            if (has_trait(1, party_member_obj(16777812), 666)) then begin
                critter_attempt_placement(party_member_obj(16777812), tile_num_in_direction(tile_num(dude_obj), (has_trait(1, dude_obj, 10) + 3) % 6, 2), elevation(dude_obj));
            end
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
        if (party_member_obj(16777814) != 0) then begin
            if (has_trait(1, party_member_obj(16777814), 666)) then begin
                critter_attempt_placement(party_member_obj(16777814), tile_num_in_direction(tile_num(dude_obj), (has_trait(1, dude_obj, 10) + 3) % 6, 2), elevation(dude_obj));
            end
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (party_member_obj(16777748) != 0) then begin
            if (has_trait(1, party_member_obj(16777748), 666)) then begin
                critter_attempt_placement(party_member_obj(16777748), tile_num_in_direction(tile_num(dude_obj), (has_trait(1, dude_obj, 10) + 3) % 6, 2), elevation(dude_obj));
            end
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (party_member_obj(16778017) != 0) then begin
            if (has_trait(1, party_member_obj(16778017), 666)) then begin
                critter_attempt_placement(party_member_obj(16778017), tile_num_in_direction(tile_num(dude_obj), (has_trait(1, dude_obj, 10) + 3) % 6, 2), elevation(dude_obj));
            end
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (party_member_obj(16778016) != 0) then begin
            if (has_trait(1, party_member_obj(16778016), 666)) then begin
                critter_attempt_placement(party_member_obj(16778016), tile_num_in_direction(tile_num(dude_obj), (has_trait(1, dude_obj, 10) + 3) % 6, 2), elevation(dude_obj));
            end
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (party_member_obj(16778049) != 0) then begin
            if (has_trait(1, party_member_obj(16778049), 666)) then begin
                critter_attempt_placement(party_member_obj(16778049), tile_num_in_direction(tile_num(dude_obj), (has_trait(1, dude_obj, 10) + 3) % 6, 2), elevation(dude_obj));
            end
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (party_member_obj(16778050) != 0) then begin
            if (has_trait(1, party_member_obj(16778050), 666)) then begin
                critter_attempt_placement(party_member_obj(16778050), tile_num_in_direction(tile_num(dude_obj), (has_trait(1, dude_obj, 10) + 3) % 6, 2), elevation(dude_obj));
            end
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (party_member_obj(16778051) != 0) then begin
            if (has_trait(1, party_member_obj(16778051), 666)) then begin
                critter_attempt_placement(party_member_obj(16778051), tile_num_in_direction(tile_num(dude_obj), (has_trait(1, dude_obj, 10) + 3) % 6, 2), elevation(dude_obj));
            end
        end
    end
    if (party_member_obj(16777293) != 0) then begin
        if (party_member_obj(16777293) != 0) then begin
            if (has_trait(1, party_member_obj(16777293), 666)) then begin
                critter_attempt_placement(party_member_obj(16777293), tile_num_in_direction(tile_num(dude_obj), (has_trait(1, dude_obj, 10) + 3) % 6, 2), elevation(dude_obj));
            end
        end
    end
    if (party_member_obj(16777729) != 0) then begin
        anim(party_member_obj(16777729), 1000, 0);
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
        anim(party_member_obj(16777779), 1000, 0);
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
        anim(party_member_obj(16777811), 1000, 0);
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
        anim(party_member_obj(16777814), 1000, 0);
    end
    if (party_member_obj(16778017) != 0) then begin
        anim(party_member_obj(16778017), 1000, 0);
    end
    if (party_member_obj(16778016) != 0) then begin
        anim(party_member_obj(16778016), 1000, 0);
    end
    if (party_member_obj(16778049) != 0) then begin
        anim(party_member_obj(16778049), 1000, 0);
    end
    if (party_member_obj(16778050) != 0) then begin
        anim(party_member_obj(16778050), 1000, 0);
    end
    if (party_member_obj(16778051) != 0) then begin
        anim(party_member_obj(16778051), 1000, 0);
    end
    if (party_member_obj(16777812) != 0) then begin
        anim(party_member_obj(16777812), 1000, 0);
    end
    Ademar_obj := create_object_sid(16777901, 17893, 0, 1549);
    anim(Ademar_obj, 1000, 1);
    restock_obj := create_object_sid(241, 0, 0, -1);
    add_mult_objs_to_inven(Ademar_obj, restock_obj, 1);
    restock_obj := create_object_sid(34, 0, 0, -1);
    add_mult_objs_to_inven(Ademar_obj, restock_obj, 1);
    restock_obj := create_object_sid(40, 0, 0, -1);
    add_mult_objs_to_inven(Ademar_obj, restock_obj, 2);
    wield_obj_critter(Ademar_obj, obj_carrying_pid_obj(Ademar_obj, 241));
    francis := create_object_sid(16777893, 18690, 0, 1588);
    anim(francis, 1000, 0);
    police1 := create_object_sid(16777895, 19293, 0, 1585);
    anim(police1, 1000, 0);
    police2 := create_object_sid(16777895, 20295, 0, 1585);
    anim(police2, 1000, 0);
    police3 := create_object_sid(16777894, 18696, 0, 1585);
    anim(police3, 1000, 0);
    police4 := create_object_sid(16777894, 19496, 0, 1585);
    anim(police4, 1000, 0);
    police5 := create_object_sid(16777894, 19692, 0, 1585);
    anim(police5, 1000, 0);
    restock_obj := create_object_sid(242, 0, 0, -1);
    add_mult_objs_to_inven(francis, restock_obj, 1);
    restock_obj := create_object_sid(40, 0, 0, -1);
    add_mult_objs_to_inven(francis, restock_obj, 1);
    wield_obj_critter(francis, obj_carrying_pid_obj(francis, 242));
    restock_obj := create_object_sid(22, 0, 0, -1);
    add_mult_objs_to_inven(police1, restock_obj, 1);
    restock_obj := create_object_sid(33, 0, 0, -1);
    add_mult_objs_to_inven(police1, restock_obj, 1);
    restock_obj := create_object_sid(595, 0, 0, -1);
    add_mult_objs_to_inven(police2, restock_obj, 1);
    restock_obj := create_object_sid(33, 0, 0, -1);
    add_mult_objs_to_inven(police2, restock_obj, 1);
    restock_obj := create_object_sid(18, 0, 0, -1);
    add_mult_objs_to_inven(police3, restock_obj, 1);
    restock_obj := create_object_sid(31, 0, 0, -1);
    add_mult_objs_to_inven(police3, restock_obj, 1);
    restock_obj := create_object_sid(242, 0, 0, -1);
    add_mult_objs_to_inven(police4, restock_obj, 1);
    restock_obj := create_object_sid(95, 0, 0, -1);
    add_mult_objs_to_inven(police4, restock_obj, 2);
    restock_obj := create_object_sid(595, 0, 0, -1);
    add_mult_objs_to_inven(police5, restock_obj, 1);
    restock_obj := create_object_sid(33, 0, 0, -1);
    add_mult_objs_to_inven(police5, restock_obj, 1);
    wield_obj_critter(police1, obj_carrying_pid_obj(police1, 22));
    wield_obj_critter(police2, obj_carrying_pid_obj(police2, 595));
    wield_obj_critter(police3, obj_carrying_pid_obj(police3, 18));
    wield_obj_critter(police4, obj_carrying_pid_obj(police4, 242));
    wield_obj_critter(police5, obj_carrying_pid_obj(police5, 595));
end

procedure create_big_hole
begin
    explosion(18084, 0, 5);
    explosion(18284, 0, 5);
    explosion(17884, 0, 5);
    add_timer_event(uncle_wall1, game_ticks(0), 1);
    add_timer_event(uncle_wall2, game_ticks(0), 1);
    add_timer_event(uncle_wall3, game_ticks(0), 1);
    add_timer_event(uncle_entrance_door, game_ticks(0), 1);
end

procedure attack_uncles_enemies
begin
    if (not(combat_is_initialized) and not((global_var(842) bwand 131072) != 0)) then begin
        if (tile_in_tile_rect(19504, 19691, 23904, 23891, tile_num(Ademar_obj))) then begin
            if (not((global_var(842) bwand 524288) != 0) and not((global_var(842) bwand 131072) != 0)) then begin
                add_timer_event(Strycek_obj, game_ticks(1), 5);
            end
            attack_setup(Ademar_obj, Strycek_obj);
        end
        if (tile_in_tile_rect(19504, 19691, 23904, 23891, tile_num(police2))) then begin
            attack_setup(police2, Strycek_obj);
        end
        if (tile_in_tile_rect(19504, 19691, 23904, 23891, tile_num(police3))) then begin
            attack_setup(police3, Strycek_obj);
        end
        if (tile_in_tile_rect(19504, 19691, 23904, 23891, tile_num(police4))) then begin
            attack_setup(police4, Strycek_obj);
        end
    end
    else begin
        set_map_var(3, 20);
    end
end

