variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);

export variable Alexa_box;
export variable alexa_obj;
export variable Grave_Marry;
export variable Grave_Reed;
export variable Grave4_4;
export variable Grave4_3;
export variable Grave4_2;
export variable Grave4_1;
export variable Grave5_5;
export variable Grave5_4;
export variable Grave5_3;
export variable Grave5_2;
export variable Grave5_1;
export variable lguard_obj;
export variable attack_target1_obj;
export variable attack_target2_obj;
export variable attack_target3_obj;
export variable attack_target4_obj;
export variable attack_target5_obj;
export variable kill_guard;
export variable talk_guard;
export variable kid;
export variable alexa_table_trade;
export variable table_swap;
export variable map_event;

procedure start;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure map_exit_p_proc;
procedure timed_event_p_proc;

variable random_place;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
    map_event := self_obj;
end

procedure map_enter_p_proc
begin
    if (metarule(14, 0)) then begin
        display_msg(message_str(1514, 100));
    end
    if (not(metarule(22, 0))) then begin
        if ((global_var(800) == 6) or (global_var(800) == 8) and ((global_var(801) != 4) or (global_var(805) != 5)) and ((global_var(804) < 4) or (global_var(797) != 1))) then begin
            set_global_var(820, 1);
        end
        if ((global_var(805) == 5) or (global_var(801) == 4)) then begin
            if (map_var(5) == 0) then begin
                set_global_var(820, 0);
                set_map_var(5, 1);
            end
        end
        if (not(metarule(14, 0))) then begin
            if (map_var(6) == 1) then begin
                set_map_var(6, 2);
            end
        end
        if (metarule(14, 0) and (map_var(6) == 0)) then begin
            random_place := random(1, 5);
            if (random_place == 1) then begin
                create_object_sid(87, 13849, 0, -1);
            end
            if (random_place == 2) then begin
                create_object_sid(87, 8890, 0, -1);
            end
            if (random_place == 3) then begin
                create_object_sid(87, 21957, 0, -1);
            end
            if (random_place == 4) then begin
                create_object_sid(87, 14931, 0, -1);
            end
            if (random_place == 5) then begin
                create_object_sid(87, 9713, 0, -1);
            end
            create_object_sid(16777911, 27080, 0, 1519);
            set_map_var(6, 1);
        end
    end
    else begin
        if (map_var(6) == 1) then begin
            metarule3(100, self_obj, 10, 0);
            add_timer_event(self_obj, 0, 10);
        end
    end
    if ((get_month >= 3) and (get_month < 5)) then begin
        if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
            set_light_level(game_time_hour - 600 + 40);
        end
        else begin
            if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                set_light_level(100);
            end
            else begin
                if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                    set_light_level(100 - (game_time_hour - 1800));
                end
                else begin
                    set_light_level(40);
                end
            end
        end
    end
    else begin
        if ((get_month >= 5) and (get_month < 9)) then begin
            if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                set_light_level(game_time_hour - 500 + 40);
            end
            else begin
                if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1900));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 9) and (get_month < 11)) then begin
                if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                    set_light_level(game_time_hour - 600 + 40);
                end
                else begin
                    if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1800));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                    set_light_level(game_time_hour - 700 + 40);
                end
                else begin
                    if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1700));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
        end
    end
end

procedure map_update_p_proc
begin
    if (elevation(dude_obj) == 0) then begin
        if ((get_month >= 3) and (get_month < 5)) then begin
            if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                set_light_level(game_time_hour - 600 + 40);
            end
            else begin
                if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1800));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 5) and (get_month < 9)) then begin
                if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                    set_light_level(game_time_hour - 500 + 40);
                end
                else begin
                    if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1900));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((get_month >= 9) and (get_month < 11)) then begin
                    if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                        set_light_level(game_time_hour - 600 + 40);
                    end
                    else begin
                        if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                            set_light_level(100);
                        end
                        else begin
                            if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                                set_light_level(100 - (game_time_hour - 1800));
                            end
                            else begin
                                set_light_level(40);
                            end
                        end
                    end
                end
                else begin
                    if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                        set_light_level(game_time_hour - 700 + 40);
                    end
                    else begin
                        if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                            set_light_level(100);
                        end
                        else begin
                            if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                                set_light_level(100 - (game_time_hour - 1700));
                            end
                            else begin
                                set_light_level(40);
                            end
                        end
                    end
                end
            end
        end
    end
    else begin
        set_light_level(50);
        if (global_var(818) == 0) then begin
            set_global_var(818, 1);
        end
    end
end

procedure map_exit_p_proc
begin
    if ((global_var(798) != 1) and (global_var(801) == 4) and (map_var(4) != 1)) then begin
        set_global_var(821, 4);
        set_global_var(822, 2);
        set_global_var(823, 1);
        set_map_var(4, 1);
    end
    if ((global_var(798) != 1) and (global_var(805) == 5) and (map_var(4) != 1)) then begin
        set_global_var(797, 1);
        set_map_var(4, 1);
    end
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 10) and (map_var(6) != 2) and (kid and (kid != -1) or (map_var(10) >= 7)) and kill_guard and (kill_guard != -1) and talk_guard and (talk_guard != -1)) then begin
        if (combat_is_initialized) then begin
            add_timer_event(self_obj, game_ticks(1), 10);
        end
        else begin
            if (map_var(10) == 0) then begin
                if (tile_num(kid) == 27086) then begin
                    set_map_var(10, map_var(10) + 1);
                    add_timer_event(self_obj, game_ticks(1), 10);
                end
                else begin
                    animate_move_obj_to_tile(kid, 27086, 0);
                    add_timer_event(self_obj, 5, 10);
                end
            end
            else begin
                if (map_var(10) == 1) then begin
                    reg_anim_func(2, kid);
                    reg_anim_func(1, 1);
                    reg_anim_animate(kid, 11, -1);
                    reg_anim_func(3, 0);
                    set_map_var(10, map_var(10) + 1);
                    add_timer_event(self_obj, game_ticks(1), 10);
                end
                else begin
                    if (map_var(10) == 2) then begin
                        reg_anim_func(2, kid);
                        reg_anim_func(1, 1);
                        reg_anim_animate(kid, 11, -1);
                        reg_anim_func(3, 0);
                        float_msg(kill_guard, message_str(1514, 360), 8);
                        set_map_var(10, map_var(10) + 1);
                        add_timer_event(self_obj, game_ticks(1), 10);
                    end
                    else begin
                        if (map_var(10) == 3) then begin
                            anim(kill_guard, 1000, 1);
                            float_msg(kill_guard, message_str(1514, 361), 2);
                            set_map_var(10, map_var(10) + 1);
                            add_timer_event(self_obj, game_ticks(1), 10);
                        end
                        else begin
                            if (map_var(10) == 4) then begin
                                animate_move_obj_to_tile(kid, 30088, 1);
                                anim(kill_guard, 1000, 2);
                                float_msg(talk_guard, message_str(1514, 363), 8);
                                anim(talk_guard, 1000, 0);
                                set_map_var(10, map_var(10) + 1);
                                add_timer_event(self_obj, game_ticks(1), 10);
                            end
                            else begin
                                if (map_var(10) == 5) then begin
                                    anim(kill_guard, 1000, rotation_to_tile(tile_num(kill_guard), tile_num(kid)));
                                    reg_anim_func(2, kill_guard);
                                    reg_anim_func(1, 1);
                                    reg_anim_animate(kill_guard, 45, -1);
                                    reg_anim_func(3, 0);
                                    if (obj_on_screen(kill_guard) == 1) then begin
                                        play_sfx("whg1sxx1");
                                    end
                                    if (obj_on_screen(kid) == 1) then begin
                                        play_sfx("NACHLDBA");
                                    end
                                    if (obj_on_screen(kid) == 1) then begin
                                        play_sfx("hfxxxxyb");
                                    end
                                    anim(kid, 1000, 2);
                                    reg_anim_func(2, kid);
                                    reg_anim_func(1, 1);
                                    reg_anim_animate(kid, 35, -1);
                                    reg_anim_func(3, 0);
                                    set_map_var(10, map_var(10) + 1);
                                    add_timer_event(self_obj, game_ticks(1), 10);
                                end
                                else begin
                                    if (map_var(10) == 6) then begin
                                        kill_critter(kid, 35);
                                        set_map_var(10, map_var(10) + 1);
                                        add_timer_event(self_obj, game_ticks(2), 10);
                                    end
                                    else begin
                                        if (map_var(10) == 7) then begin
                                            float_msg(kill_guard, message_str(1514, 362), 2);
                                            set_map_var(10, map_var(10) + 1);
                                            add_timer_event(self_obj, game_ticks(4), 10);
                                        end
                                        else begin
                                            if (map_var(10) == 8) then begin
                                                float_msg(talk_guard, message_str(1514, 364), 2);
                                                set_map_var(10, map_var(10) + 1);
                                                add_timer_event(self_obj, game_ticks(3), 10);
                                            end
                                            else begin
                                                if (map_var(10) == 9) then begin
                                                    anim(kill_guard, 1000, 3);
                                                    float_msg(kill_guard, message_str(1514, 365), 2);
                                                    set_map_var(10, map_var(10) + 1);
                                                    add_timer_event(self_obj, game_ticks(3), 10);
                                                end
                                                else begin
                                                    if (map_var(10) == 10) then begin
                                                        anim(talk_guard, 1000, 2);
                                                        set_map_var(10, map_var(10) + 1);
                                                        set_map_var(6, 2);
                                                        rm_timer_event(self_obj);
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

