variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure map_exit_p_proc;
procedure timed_event_p_proc;

variable brad_partym;
variable brad_combine;
variable sequence;
variable gateguard1;
variable gateguard2;

export variable Map_event;
export variable Sophie_obj;
export variable Brad_obj;
export variable cardoor_door;
export variable Elisas_table;
export variable Palace_door_guard1;
export variable Palace_door_guard2;
export variable Parlson_substitution;
export variable obyv_barman;
export variable obyv_palace_food;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
    Map_event := self_obj;
end

procedure map_enter_p_proc
begin
    if ((get_month >= 3) and (get_month < 5)) then begin
        if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
            set_light_level(game_time_hour - 600 + 40);
        end
        else begin
            if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                set_light_level(100);
            end
            else begin
                if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                    set_light_level(100 - (game_time_hour - 1800));
                end
                else begin
                    set_light_level(40);
                end
            end
        end
    end
    else begin
        if ((get_month >= 5) and (get_month < 9)) then begin
            if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                set_light_level(game_time_hour - 500 + 40);
            end
            else begin
                if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1900));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 9) and (get_month < 11)) then begin
                if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                    set_light_level(game_time_hour - 600 + 40);
                end
                else begin
                    if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1800));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                    set_light_level(game_time_hour - 700 + 40);
                end
                else begin
                    if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1700));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
        end
    end
    if (not((global_var(865) bwand 1) != 0)) then begin
        set_global_var(865, global_var(865) bwor 1);
    end
    if (not(metarule(22, 0))) then begin
        if ((global_var(1029) == 3) or (global_var(1029) == 4) and (global_var(998) == 0) and not((global_var(904) bwand 2) != 0)) then begin
            set_global_var(967, 2);
            if (not((global_var(904) bwand 32) != 0)) then begin
                set_global_var(904, global_var(904) bwor 32);
            end
            if (not((global_var(904) bwand 2) != 0)) then begin
                set_global_var(904, global_var(904) bwor 2);
            end
        end
        if ((global_var(1017) bwand 32) != 0) then begin
            if ((global_var(998) != 1) and (global_var(1008) != 3) and ((global_var(904) bwand 8388608) != 0) and ((game_time - global_var(1001)) >= (60 * (60 * 10) * 8))) then begin
                if (not((map_var(0) bwand 16777216) != 0)) then begin
                    set_map_var(0, map_var(0) bwor 16777216);
                end
            end
            set_global_var(1017, global_var(1017) bwand (-1 - 32));
        end
        if ((global_var(998) != 1) and not((global_var(1000) bwand 32) != 0)) then begin
            if ((global_var(574) == 1) and (global_var(992) == 0) and (global_var(1008) == 0) and not((global_var(1000) bwand 8) != 0)) then begin
                set_global_var(1000, global_var(1000) bwor 32);
                create_object_sid(16777804, 0, 0, 107);
            end
            if ((global_var(898) < 4) and ((global_var(882) != 4) and (global_var(881) != 2) and (global_var(883) != 2)) and (global_var(859) == 0) and ((global_var(1000) bwand 16) == 0) and not((global_var(867) bwand 33554432) != 0) and ((global_var(1017) bwand 131072) == 0)) then begin
                if ((global_var(574) == 1) and ((global_var(1006) == 0) and ((global_var(904) bwand 2) != 0) and not((global_var(904) bwand 8192) != 0) or ((global_var(1007) == 0) and ((global_var(904) bwand 1) != 0)))) then begin
                    set_global_var(1000, global_var(1000) bwor 32);
                    create_object_sid(16777804, 0, 0, 107);
                end
            end
            if ((global_var(574) == 1) and ((global_var(1017) bwand 131072) == 0) and ((global_var(1017) bwand 65536) != 0) and (global_var(864) == 0) and ((global_var(1000) bwand 16) == 0) and ((global_var(882) == 4) or (global_var(881) == 2) or (global_var(883) == 2))) then begin
                set_global_var(1000, global_var(1000) bwor 32);
                create_object_sid(16777804, 0, 0, 107);
            end
        end
        if ((global_var(998) != 1) and ((global_var(904) bwand 8388608) != 0) and ((game_time - global_var(1001)) >= (60 * (60 * 10) * 8))) then begin
            if ((map_var(0) bwand 16777216) != 0) then begin
                game_ui_disable;
                brad_partym := create_object_sid(16778026, 28902, 0, 118);
                restock_obj := create_object_sid(16, 0, 0, -1);
                add_mult_objs_to_inven(brad_partym, restock_obj, 1);
                wield_obj_critter(brad_partym, obj_carrying_pid_obj(brad_partym, 16));
                gateguard1 := create_object_sid(16778031, 28500, 0, 130);
                gateguard2 := create_object_sid(16778045, 28504, 0, 130);
                restock_obj := create_object_sid(24, 0, 0, -1);
                add_mult_objs_to_inven(gateguard1, restock_obj, 1);
                restock_obj := create_object_sid(24, 0, 0, -1);
                add_mult_objs_to_inven(gateguard2, restock_obj, 1);
                wield_obj_critter(gateguard1, obj_carrying_pid_obj(gateguard1, 24));
                wield_obj_critter(gateguard2, obj_carrying_pid_obj(gateguard2, 24));
                anim(brad_partym, 1000, 2);
                anim(gateguard1, 1000, 2);
                anim(gateguard2, 1000, 2);
                add_timer_event(brad_partym, game_ticks(3), 20);
            end
        end
        if ((global_var(998) != 1) and (global_var(997) == 2) and not((global_var(904) bwand 2097152) != 0)) then begin
            set_global_var(904, global_var(904) bwor 2097152);
            brad_partym := create_object_sid(16778026, tile_num_in_direction(tile_num(dude_obj), (has_trait(1, dude_obj, 10) + 3) % 6, 2), elevation(dude_obj), 118);
            anim(brad_partym, 1000, has_trait(1, dude_obj, 10));
            restock_obj := create_object_sid(16, 0, 0, -1);
            add_mult_objs_to_inven(brad_partym, restock_obj, 1);
            wield_obj_critter(brad_partym, obj_carrying_pid_obj(brad_partym, 16));
            critter_add_trait(brad_partym, 1, 6, 0);
            add_timer_event(brad_partym, game_ticks(random(10, 20)), 1);
            add_timer_event(brad_partym, game_ticks(1), 70);
        end
    end
end

procedure map_update_p_proc
begin
    if ((get_month >= 3) and (get_month < 5)) then begin
        if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
            set_light_level(game_time_hour - 600 + 40);
        end
        else begin
            if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                set_light_level(100);
            end
            else begin
                if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                    set_light_level(100 - (game_time_hour - 1800));
                end
                else begin
                    set_light_level(40);
                end
            end
        end
    end
    else begin
        if ((get_month >= 5) and (get_month < 9)) then begin
            if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                set_light_level(game_time_hour - 500 + 40);
            end
            else begin
                if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1900));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 9) and (get_month < 11)) then begin
                if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                    set_light_level(game_time_hour - 600 + 40);
                end
                else begin
                    if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1800));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                    set_light_level(game_time_hour - 700 + 40);
                end
                else begin
                    if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1700));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
        end
    end
end

procedure map_exit_p_proc
begin
    if (tile_in_tile_rect(32307, 32398, 33907, 33898, tile_num(dude_obj))) then begin
        set_global_var(1017, global_var(1017) bwor 4);
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if (fixed_param == 1) then begin
            sequence := sequence + 1;
        end
        if (sequence == 1) then begin
            gfade_out(600);
            set_map_var(0, map_var(0) bwor 256);
            add_timer_event(self_obj, game_ticks(1), 1);
        end
        if (sequence == 2) then begin
            destroy_object(Brad_obj);
            if (not((map_var(0) bwand 16) != 0)) then begin
                create_object_sid(579, 16723, 0, -1);
            end
            brad_combine := create_object_sid(16778041, 16522, 0, 111);
            anim(brad_combine, 1000, 3);
            add_timer_event(self_obj, game_ticks(1), 1);
        end
        if (sequence == 3) then begin
            gfade_in(600);
            game_ui_enable;
            add_timer_event(self_obj, game_ticks(1), 1);
        end
        if (sequence == 4) then begin
            add_timer_event(brad_combine, game_ticks(0), 20);
        end
    end
end

