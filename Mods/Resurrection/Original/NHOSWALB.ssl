variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);

variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure Start;
procedure map_enter_p_proc;
procedure talk_p_proc;
procedure critter_p_proc;
procedure damage_p_proc;
procedure combat_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure Node999;
procedure Node100;
procedure Node150;
procedure Node200;

variable fleeing;

procedure timed_event_p_proc;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777293) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777293)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777958) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777958)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777957) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777957)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778018) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778018)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure Start
begin
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, 1, 6, 211);
end

procedure talk_p_proc
begin
    start_gdialog(1309, self_obj, 4, -1, -1);
    gsay_start;
    call Node100();
    gsay_end;
    end_dialogue;
end

procedure critter_p_proc
begin
    if (fleeing and not(anim_busy(self_obj))) then begin
        metarule3(108, tile_num(dude_obj), 0, 0);
        game_ui_enable;
        destroy_object(self_obj);
    end
    if (obj_can_see_obj(self_obj, dude_obj) and (tile_distance(tile_num(self_obj), tile_num(dude_obj)) < 8)) then begin
        dialogue_system_enter;
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(700, 1);
    end
    set_global_var(701, get_critter_stat(self_obj, 7) - get_critter_stat(self_obj, 35));
end

procedure combat_p_proc
begin
    fleeing := 0;
    if (fixed_param != 5) then begin
        critter_stop_attacking(self_obj);
        critter_stop_attacking(dude_obj);
        add_timer_event(self_obj, 1, 0);
    end
end

procedure destroy_p_proc
begin
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(1309, 50));
end

procedure description_p_proc
begin
    script_overrides;
end

procedure Node999
begin
    move_to(self_obj, 0, 1);
    load_map("NH_VILL.MAP", 0);
end

procedure Node100
begin
    gsay_reply(1309, message_str(1309, 100));
    giq_option(4, 1309, 101, Node150, 50);
    giq_option(-3, 1309, 102, Node200, 50);
end

procedure Node150
begin
    gsay_reply(1309, message_str(1309, 150));
    giq_option(4, 1309, 103, Node999, 50);
end

procedure Node200
begin
    gsay_reply(1309, message_str(1309, 200 + (get_critter_stat(dude_obj, 34) == 1)));
    giq_option(-3, 1309, 103, Node999, 50);
end

procedure timed_event_p_proc
begin
    metarule3(108, 17714, 0, 0);
    animate_move_obj_to_tile(self_obj, 18332, 1);
    fleeing := 1;
    game_ui_disable;
end

