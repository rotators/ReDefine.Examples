variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;

import variable margaret_obj;
import variable margaret_table_trade;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
    margaret_table_trade := self_obj;
end

procedure use_p_proc
begin
    if (margaret_obj and (has_trait(1, margaret_obj, 666) == 1) and (margaret_obj != -1) and (global_var(998) != 1)) then begin
        script_overrides;
        add_timer_event(margaret_obj, game_ticks(0), 10);
    end
end

procedure look_at_p_proc
begin
end

procedure description_p_proc
begin
end

procedure use_skill_on_p_proc
begin
    if (margaret_obj and (margaret_obj != -1) and (global_var(998) != 1)) then begin
        call use_p_proc();
    end
end

procedure use_obj_on_p_proc
begin
    if (margaret_obj and (margaret_obj != -1) and (global_var(998) != 1)) then begin
        call use_p_proc();
    end
end

procedure damage_p_proc
begin
end

procedure map_enter_p_proc
begin
    if (margaret_obj and (margaret_obj != -1) and (global_var(998) != 1)) then begin
        if ((game_time < 0) and (local_var(4) > 0)) then begin
            set_local_var(4, game_time - 1);
        end
        if (not(metarule(22, 0)) and (global_var(1008) > 2) and (global_var(1008) < 10)) then begin
            if ((local_var(5) == 0) and margaret_obj and (margaret_obj != -1)) then begin
                move_obj_inven_to_obj(self_obj, margaret_obj);
                set_local_var(5, 1);
            end
        end
        else begin
            if (local_var(4) < game_time) then begin
                item_caps_adjust(self_obj, random(800, 1200) - item_caps_total(self_obj));
                restock_amt := random(2, 4);
                if (obj_is_carrying_obj_pid(self_obj, 39) < restock_amt) then begin
                    if (90 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 39) < restock_amt) then begin
                            restock_obj := create_object_sid(39, 0, 0, -1);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 39));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 39) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 39);
                                if ((obj_is_carrying_obj_pid(self_obj, 39) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 39) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 39);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 39);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                metarule(43, self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    if (restock_amt == 0) then begin
                                        toRemove_qty := obj_is_carrying_obj_pid(self_obj, 39) - restock_amt;
                                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 39)) do begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 39);
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            destroy_object(restock_obj);
                                            toRemove_qty := toRemove_qty - 1;
                                        end
                                    end
                                    else begin
                                        destroy_object(restock_obj);
                                    end
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 39) < restock_amt) then begin
                        restock_obj := create_object_sid(39, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 39));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 39) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 39);
                            if ((obj_is_carrying_obj_pid(self_obj, 39) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 39) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 39);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 39);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 39) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 39)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 39);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(3, 5);
                if (obj_is_carrying_obj_pid(self_obj, 38) < restock_amt) then begin
                    if (95 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 38) < restock_amt) then begin
                            restock_obj := create_object_sid(38, 0, 0, -1);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 38));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 38) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 38);
                                if ((obj_is_carrying_obj_pid(self_obj, 38) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 38) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 38);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 38);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                metarule(43, self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    if (restock_amt == 0) then begin
                                        toRemove_qty := obj_is_carrying_obj_pid(self_obj, 38) - restock_amt;
                                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 38)) do begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 38);
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            destroy_object(restock_obj);
                                            toRemove_qty := toRemove_qty - 1;
                                        end
                                    end
                                    else begin
                                        destroy_object(restock_obj);
                                    end
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 38) < restock_amt) then begin
                        restock_obj := create_object_sid(38, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 38));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 38) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 38);
                            if ((obj_is_carrying_obj_pid(self_obj, 38) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 38) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 38);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 38);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 38) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 38)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 38);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 1);
                if (obj_is_carrying_obj_pid(self_obj, 77) < restock_amt) then begin
                    if (60 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 77) < restock_amt) then begin
                            restock_obj := create_object_sid(77, 0, 0, -1);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 77));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 77) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 77);
                                if ((obj_is_carrying_obj_pid(self_obj, 77) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 77) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 77);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 77);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                metarule(43, self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    if (restock_amt == 0) then begin
                                        toRemove_qty := obj_is_carrying_obj_pid(self_obj, 77) - restock_amt;
                                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 77)) do begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 77);
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            destroy_object(restock_obj);
                                            toRemove_qty := toRemove_qty - 1;
                                        end
                                    end
                                    else begin
                                        destroy_object(restock_obj);
                                    end
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 77) < restock_amt) then begin
                        restock_obj := create_object_sid(77, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 77));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 77) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 77);
                            if ((obj_is_carrying_obj_pid(self_obj, 77) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 77) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 77);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 77);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 77) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 77)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 77);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 1);
                if (obj_is_carrying_obj_pid(self_obj, 411) < restock_amt) then begin
                    if (20 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 411) < restock_amt) then begin
                            restock_obj := create_object_sid(411, 0, 0, -1);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 411));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 411) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 411);
                                if ((obj_is_carrying_obj_pid(self_obj, 411) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 411) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 411);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 411);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                metarule(43, self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    if (restock_amt == 0) then begin
                                        toRemove_qty := obj_is_carrying_obj_pid(self_obj, 411) - restock_amt;
                                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 411)) do begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 411);
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            destroy_object(restock_obj);
                                            toRemove_qty := toRemove_qty - 1;
                                        end
                                    end
                                    else begin
                                        destroy_object(restock_obj);
                                    end
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 411) < restock_amt) then begin
                        restock_obj := create_object_sid(411, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 411));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 411) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 411);
                            if ((obj_is_carrying_obj_pid(self_obj, 411) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 411) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 411);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 411);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 411) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 411)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 411);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 1);
                if (obj_is_carrying_obj_pid(self_obj, 59) < restock_amt) then begin
                    if (70 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 59) < restock_amt) then begin
                            restock_obj := create_object_sid(59, 0, 0, -1);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 59));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 59) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 59);
                                if ((obj_is_carrying_obj_pid(self_obj, 59) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 59) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 59);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 59);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                metarule(43, self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    if (restock_amt == 0) then begin
                                        toRemove_qty := obj_is_carrying_obj_pid(self_obj, 59) - restock_amt;
                                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 59)) do begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 59);
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            destroy_object(restock_obj);
                                            toRemove_qty := toRemove_qty - 1;
                                        end
                                    end
                                    else begin
                                        destroy_object(restock_obj);
                                    end
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 59) < restock_amt) then begin
                        restock_obj := create_object_sid(59, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 59));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 59) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 59);
                            if ((obj_is_carrying_obj_pid(self_obj, 59) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 59) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 59);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 59);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 59) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 59)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 59);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 1);
                if (obj_is_carrying_obj_pid(self_obj, 52) < restock_amt) then begin
                    if (80 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 52) < restock_amt) then begin
                            restock_obj := create_object_sid(52, 0, 0, -1);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 52));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 52) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 52);
                                if ((obj_is_carrying_obj_pid(self_obj, 52) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 52) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 52);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 52);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                metarule(43, self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    if (restock_amt == 0) then begin
                                        toRemove_qty := obj_is_carrying_obj_pid(self_obj, 52) - restock_amt;
                                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 52)) do begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 52);
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            destroy_object(restock_obj);
                                            toRemove_qty := toRemove_qty - 1;
                                        end
                                    end
                                    else begin
                                        destroy_object(restock_obj);
                                    end
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 52) < restock_amt) then begin
                        restock_obj := create_object_sid(52, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 52));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 52) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 52);
                            if ((obj_is_carrying_obj_pid(self_obj, 52) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 52) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 52);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 52);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 52) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 52)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 52);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(2, 4);
                if (obj_is_carrying_obj_pid(self_obj, 40) < restock_amt) then begin
                    if (100 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 40) < restock_amt) then begin
                            restock_obj := create_object_sid(40, 0, 0, -1);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 40));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 40) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 40);
                                if ((obj_is_carrying_obj_pid(self_obj, 40) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 40) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 40);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 40);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                metarule(43, self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    if (restock_amt == 0) then begin
                                        toRemove_qty := obj_is_carrying_obj_pid(self_obj, 40) - restock_amt;
                                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 40)) do begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 40);
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            destroy_object(restock_obj);
                                            toRemove_qty := toRemove_qty - 1;
                                        end
                                    end
                                    else begin
                                        destroy_object(restock_obj);
                                    end
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 40) < restock_amt) then begin
                        restock_obj := create_object_sid(40, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 40));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 40) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 40);
                            if ((obj_is_carrying_obj_pid(self_obj, 40) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 40) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 40);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 40);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 40) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 40)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 40);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 1);
                if (obj_is_carrying_obj_pid(self_obj, 47) < restock_amt) then begin
                    if (70 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 47) < restock_amt) then begin
                            restock_obj := create_object_sid(47, 0, 0, -1);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 47));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 47) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 47);
                                if ((obj_is_carrying_obj_pid(self_obj, 47) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 47) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 47);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 47);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                metarule(43, self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    if (restock_amt == 0) then begin
                                        toRemove_qty := obj_is_carrying_obj_pid(self_obj, 47) - restock_amt;
                                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 47)) do begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 47);
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            destroy_object(restock_obj);
                                            toRemove_qty := toRemove_qty - 1;
                                        end
                                    end
                                    else begin
                                        destroy_object(restock_obj);
                                    end
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 47) < restock_amt) then begin
                        restock_obj := create_object_sid(47, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 47));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 47) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 47);
                            if ((obj_is_carrying_obj_pid(self_obj, 47) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 47) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 47);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 47);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 47) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 47)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 47);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 3);
                if (obj_is_carrying_obj_pid(self_obj, 48) < restock_amt) then begin
                    if (95 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 48) < restock_amt) then begin
                            restock_obj := create_object_sid(48, 0, 0, -1);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 48));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 48) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 48);
                                if ((obj_is_carrying_obj_pid(self_obj, 48) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 48) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 48);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 48);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                metarule(43, self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    if (restock_amt == 0) then begin
                                        toRemove_qty := obj_is_carrying_obj_pid(self_obj, 48) - restock_amt;
                                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 48)) do begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 48);
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            destroy_object(restock_obj);
                                            toRemove_qty := toRemove_qty - 1;
                                        end
                                    end
                                    else begin
                                        destroy_object(restock_obj);
                                    end
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 48) < restock_amt) then begin
                        restock_obj := create_object_sid(48, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 48));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 48) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 48);
                            if ((obj_is_carrying_obj_pid(self_obj, 48) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 48) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 48);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 48);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 48) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 48)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 48);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 4);
                if (obj_is_carrying_obj_pid(self_obj, 109) < restock_amt) then begin
                    if (95 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 109) < restock_amt) then begin
                            restock_obj := create_object_sid(109, 0, 0, -1);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 109));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 109) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 109);
                                if ((obj_is_carrying_obj_pid(self_obj, 109) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 109) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 109);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 109);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                metarule(43, self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    if (restock_amt == 0) then begin
                                        toRemove_qty := obj_is_carrying_obj_pid(self_obj, 109) - restock_amt;
                                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 109)) do begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 109);
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            destroy_object(restock_obj);
                                            toRemove_qty := toRemove_qty - 1;
                                        end
                                    end
                                    else begin
                                        destroy_object(restock_obj);
                                    end
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 109) < restock_amt) then begin
                        restock_obj := create_object_sid(109, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 109));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 109) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 109);
                            if ((obj_is_carrying_obj_pid(self_obj, 109) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 109) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 109);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 109);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 109) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 109)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 109);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 3);
                if (obj_is_carrying_obj_pid(self_obj, 53) < restock_amt) then begin
                    if (90 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 53) < restock_amt) then begin
                            restock_obj := create_object_sid(53, 0, 0, -1);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 53));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 53) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 53);
                                if ((obj_is_carrying_obj_pid(self_obj, 53) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 53) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 53);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 53);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                metarule(43, self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    if (restock_amt == 0) then begin
                                        toRemove_qty := obj_is_carrying_obj_pid(self_obj, 53) - restock_amt;
                                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 53)) do begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 53);
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            destroy_object(restock_obj);
                                            toRemove_qty := toRemove_qty - 1;
                                        end
                                    end
                                    else begin
                                        destroy_object(restock_obj);
                                    end
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 53) < restock_amt) then begin
                        restock_obj := create_object_sid(53, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 53));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 53) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 53);
                            if ((obj_is_carrying_obj_pid(self_obj, 53) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 53) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 53);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 53);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 53) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 53)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 53);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 3);
                if (obj_is_carrying_obj_pid(self_obj, 110) < restock_amt) then begin
                    if (90 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 110) < restock_amt) then begin
                            restock_obj := create_object_sid(110, 0, 0, -1);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 110));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 110) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 110);
                                if ((obj_is_carrying_obj_pid(self_obj, 110) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 110) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 110);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 110);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                metarule(43, self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    if (restock_amt == 0) then begin
                                        toRemove_qty := obj_is_carrying_obj_pid(self_obj, 110) - restock_amt;
                                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 110)) do begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 110);
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            destroy_object(restock_obj);
                                            toRemove_qty := toRemove_qty - 1;
                                        end
                                    end
                                    else begin
                                        destroy_object(restock_obj);
                                    end
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 110) < restock_amt) then begin
                        restock_obj := create_object_sid(110, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 110));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 110) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 110);
                            if ((obj_is_carrying_obj_pid(self_obj, 110) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 110) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 110);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 110);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 110) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 110)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 110);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 5);
                if (obj_is_carrying_obj_pid(self_obj, 79) < restock_amt) then begin
                    if (90 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 79) < restock_amt) then begin
                            restock_obj := create_object_sid(79, 0, 0, -1);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 79));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 79) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 79);
                                if ((obj_is_carrying_obj_pid(self_obj, 79) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 79) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 79);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 79);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                metarule(43, self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    if (restock_amt == 0) then begin
                                        toRemove_qty := obj_is_carrying_obj_pid(self_obj, 79) - restock_amt;
                                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 79)) do begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 79);
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            destroy_object(restock_obj);
                                            toRemove_qty := toRemove_qty - 1;
                                        end
                                    end
                                    else begin
                                        destroy_object(restock_obj);
                                    end
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 79) < restock_amt) then begin
                        restock_obj := create_object_sid(79, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 79));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 79) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 79);
                            if ((obj_is_carrying_obj_pid(self_obj, 79) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 79) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 79);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 79);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 79) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 79)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 79);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 1);
                if (obj_is_carrying_obj_pid(self_obj, 24) < restock_amt) then begin
                    if (40 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 24) < restock_amt) then begin
                            restock_obj := create_object_sid(24, 0, 0, -1);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 24));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 24) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 24);
                                if ((obj_is_carrying_obj_pid(self_obj, 24) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 24) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 24);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 24);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                metarule(43, self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    if (restock_amt == 0) then begin
                                        toRemove_qty := obj_is_carrying_obj_pid(self_obj, 24) - restock_amt;
                                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 24)) do begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 24);
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            destroy_object(restock_obj);
                                            toRemove_qty := toRemove_qty - 1;
                                        end
                                    end
                                    else begin
                                        destroy_object(restock_obj);
                                    end
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 24) < restock_amt) then begin
                        restock_obj := create_object_sid(24, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 24));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 24) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 24);
                            if ((obj_is_carrying_obj_pid(self_obj, 24) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 24) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 24);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 24);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 24) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 24)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 24);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 1);
                if (obj_is_carrying_obj_pid(self_obj, 16) < restock_amt) then begin
                    if (50 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 16) < restock_amt) then begin
                            restock_obj := create_object_sid(16, 0, 0, -1);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 16));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 16) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 16);
                                if ((obj_is_carrying_obj_pid(self_obj, 16) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 16) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 16);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 16);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                metarule(43, self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    if (restock_amt == 0) then begin
                                        toRemove_qty := obj_is_carrying_obj_pid(self_obj, 16) - restock_amt;
                                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 16)) do begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 16);
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            destroy_object(restock_obj);
                                            toRemove_qty := toRemove_qty - 1;
                                        end
                                    end
                                    else begin
                                        destroy_object(restock_obj);
                                    end
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 16) < restock_amt) then begin
                        restock_obj := create_object_sid(16, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 16));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 16) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 16);
                            if ((obj_is_carrying_obj_pid(self_obj, 16) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 16) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 16);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 16);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 16) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 16)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 16);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 1);
                if (obj_is_carrying_obj_pid(self_obj, 602) < restock_amt) then begin
                    if (70 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 602) < restock_amt) then begin
                            restock_obj := create_object_sid(602, 0, 0, -1);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 602));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 602) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 602);
                                if ((obj_is_carrying_obj_pid(self_obj, 602) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 602) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 602);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 602);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                metarule(43, self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    if (restock_amt == 0) then begin
                                        toRemove_qty := obj_is_carrying_obj_pid(self_obj, 602) - restock_amt;
                                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 602)) do begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 602);
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            destroy_object(restock_obj);
                                            toRemove_qty := toRemove_qty - 1;
                                        end
                                    end
                                    else begin
                                        destroy_object(restock_obj);
                                    end
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 602) < restock_amt) then begin
                        restock_obj := create_object_sid(602, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 602));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 602) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 602);
                            if ((obj_is_carrying_obj_pid(self_obj, 602) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 602) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 602);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 602);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 602) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 602)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 602);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                restock_amt := random(1, 3);
                if (obj_is_carrying_obj_pid(self_obj, 33) < restock_amt) then begin
                    if (70 >= random(1, 100)) then begin
                        if (obj_is_carrying_obj_pid(self_obj, 33) < restock_amt) then begin
                            restock_obj := create_object_sid(33, 0, 0, -1);
                            add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 33));
                        end
                        else begin
                            if (obj_is_carrying_obj_pid(self_obj, 33) > restock_amt) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 33);
                                if ((obj_is_carrying_obj_pid(self_obj, 33) - restock_amt) < removed_qty) then begin
                                    removed_qty := obj_is_carrying_obj_pid(self_obj, 33) - restock_amt;
                                end
                                if (removed_qty > 0) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 33);
                                    if (obj_type(self_obj) == 1) then begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 33);
                                        if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                            if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                                restock_obj := critter_inven_obj(self_obj, 0);
                                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                                rm_obj_from_inven(self_obj, restock_obj);
                                                add_obj_to_inven(self_obj, restock_obj);
                                            end
                                        end
                                        else begin
                                            if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                                metarule(43, self_obj);
                                            end
                                        end
                                    end
                                    restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                    if (restock_amt == 0) then begin
                                        toRemove_qty := obj_is_carrying_obj_pid(self_obj, 33) - restock_amt;
                                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 33)) do begin
                                            restock_obj := obj_carrying_pid_obj(self_obj, 33);
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            destroy_object(restock_obj);
                                            toRemove_qty := toRemove_qty - 1;
                                        end
                                    end
                                    else begin
                                        destroy_object(restock_obj);
                                    end
                                end
                                restock_obj := 0;
                                restock_amt := 0;
                            end
                            else begin
                                restock_obj := 0;
                            end
                        end
                    end
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 33) < restock_amt) then begin
                        restock_obj := create_object_sid(33, 0, 0, -1);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 33));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 33) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 33);
                            if ((obj_is_carrying_obj_pid(self_obj, 33) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 33) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 33);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 33);
                                    if (critter_inven_obj(self_obj, 0) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, 0)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, 0);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, 2) == restock_obj) or (critter_inven_obj(self_obj, 1) == restock_obj)) then begin
                                            metarule(43, self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 33) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 33)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 33);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
                set_local_var(4, (random(7, 14) * (24 * (60 * (60 * 10)))) + game_time);
                if ((game_time < 0) and (local_var(4) > 0)) then begin
                    set_local_var(4, 0);
                end
            end
        end
    end
end

procedure map_update_p_proc
begin
    if ((global_var(1008) == 10) and (local_var(5) != 0) and margaret_obj and (margaret_obj != -1)) then begin
        move_obj_inven_to_obj(margaret_obj, self_obj);
        set_local_var(5, 0);
    end
end

