variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure Node998;
procedure Node999;
procedure NodePassLine;
procedure NodeDontPassLine;
procedure NodeComeLine;
procedure NodeDontComeLine;
procedure NodePropBet;
procedure NodePlaceBet;
procedure NodeFieldBet;
procedure Node001;
procedure NodeBet1;
procedure NodeBet2;
procedure NodeBet3;
procedure NodeBet4;
procedure NodeBet5;
procedure calculateTotal;
procedure getValue(variable arg0);
procedure exchangeCaps(variable arg0);
procedure Clear_All_Vars;

variable Only_Once;
variable betOption;
variable die1;
variable die2;
variable sayString;
variable canleave;
variable removePoint;

procedure NodeBet0;
procedure Node7_Prop;
procedure Node3s_Prop;
procedure Node4s_Prop;
procedure Node5s_Prop;
procedure Node2s_Prop;
procedure Node1_2_Prop;
procedure Node5_6_Prop;
procedure Node1_1_Prop;
procedure Node6_6_Prop;
procedure Node_Craps_Prop;
procedure NodeSingleProp;
procedure NodeHardwayProp;
procedure NodePlace4;
procedure NodePlace5;
procedure NodePlace6;
procedure NodePlace8;
procedure NodePlace9;
procedure NodePlace10;
procedure getNumVar(variable arg0);
procedure getOddsVar(variable arg0);
procedure set_number_bet(variable arg0, variable arg1);
procedure set_dont_number_bet(variable arg0, variable arg1);
procedure check_Pass_Line;
procedure check_Dont_Pass_Line;
procedure check_Come_Line;
procedure check_Dont_Come_Line;
procedure check_Prop_7;
procedure check_Prop_d3;
procedure check_Prop_d4;
procedure check_Prop_d5;
procedure check_Prop_d2;
procedure check_Prop_1_2;
procedure check_Prop_5_6;
procedure check_Prop_1_1;
procedure check_Prop_6_6;
procedure check_Prop_Craps;
procedure check_Place_4;
procedure check_Place_5;
procedure check_Place_6;
procedure check_Place_8;
procedure check_Place_9;
procedure check_Place_10;
procedure check_Field_Bet;
procedure calculateOdds(variable arg0);
procedure calculateDont(variable arg0);
procedure check_Num_4;
procedure check_Num_5;
procedure check_Num_6;
procedure check_Num_8;
procedure check_Num_9;
procedure check_Num_10;
procedure checkPoint;
procedure NodePayOff;
procedure superRandom(variable arg0, variable arg1);
procedure NodeRoll;
procedure NOdds04;
procedure NOdds14;
procedure NOdds24;
procedure NOdds34;
procedure NOdds05;
procedure NOdds15;
procedure NOdds25;
procedure NOdds35;
procedure NOdds06;
procedure NOdds16;
procedure NOdds26;
procedure NOdds36;
procedure NOdds08;
procedure NOdds18;
procedure NOdds28;
procedure NOdds38;
procedure NOdds09;
procedure NOdds19;
procedure NOdds29;
procedure NOdds39;
procedure NOdds010;
procedure NOdds110;
procedure NOdds210;
procedure NOdds310;
procedure NodeOdds4;
procedure NodeOdds5;
procedure NodeOdds6;
procedure NodeOdds8;
procedure NodeOdds9;
procedure NodeOdds10;
procedure NodeOdds;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777278) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777278)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777376) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777376)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777377) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777377)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777305) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777305)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777313) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777313)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777323) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777323)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777352) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777352)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777378) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777378)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777368) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777368)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777379) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777379)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777380) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777380)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777295) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777295)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777381) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777381)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777407) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777407)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777411) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777411)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777412) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777412)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777413) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777413)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777481) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777481)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777558) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777558)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777600) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777600)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if ((local_var(5) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure talk_p_proc
begin
    Evil_Critter := 0;
    Slavery_Tolerant := 2;
    Karma_Perception := 1;
    start_gdialog(583, self_obj, 4, -1, -1);
    gsay_start;
    call Node001();
    gsay_end;
    end_dialogue;
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(5, global_var(5) + 1);
        if (metarule(51, self_obj) == 2) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(2, 0);
                set_global_var(1, global_var(1) + 1);
                set_global_var(0, global_var(0) - -15);
                set_global_var(37, 0);
                set_global_var(38, 0);
                set_global_var(39, 0);
                set_global_var(40, 0);
                set_global_var(41, 0);
                set_global_var(42, 0);
                set_global_var(43, 0);
                set_global_var(44, 0);
                set_global_var(45, 0);
                if (global_var(0) >= 1000) then begin
                    set_global_var(37, 1);
                end
                else begin
                    if (global_var(0) >= 750) then begin
                        set_global_var(38, 1);
                    end
                    else begin
                        if (global_var(0) >= 500) then begin
                            set_global_var(39, 1);
                        end
                        else begin
                            if (global_var(0) >= 250) then begin
                                set_global_var(40, 1);
                            end
                            else begin
                                if (global_var(0) > -250) then begin
                                    set_global_var(41, 1);
                                end
                                else begin
                                    if (global_var(0) > -500) then begin
                                        set_global_var(42, 1);
                                    end
                                    else begin
                                        if (global_var(0) > -750) then begin
                                            set_global_var(43, 1);
                                        end
                                        else begin
                                            if (global_var(0) > -1000) then begin
                                                set_global_var(44, 1);
                                            end
                                            else begin
                                                set_global_var(45, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
            set_global_var(2, 1);
            set_global_var(3, 0);
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
            set_global_var(3, 1);
            set_global_var(2, 0);
        end
        set_global_var(0, global_var(0) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 0) then begin
        display_msg(message_str(583, 100 + (1000 * (get_critter_stat(self_obj, 34) == 1))));
    end
    else begin
        display_msg(message_str(583, 101));
    end
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(583, 102 + (1000 * (get_critter_stat(self_obj, 34) == 1))));
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(6, 1);
    end
end

procedure map_enter_p_proc
begin
    Only_Once := 0;
    critter_add_trait(self_obj, 1, 6, 116);
    critter_add_trait(self_obj, 1, 5, 14);
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
    call Clear_All_Vars();
end

procedure NodePassLine
begin
    betOption := 1;
    gsay_reply(583, 104);
    if ((item_caps_total(dude_obj) - local_var(41)) > 5) then begin
        giq_option(1, 583, message_str(583, 500) + 5 + message_str(583, 501), NodeBet1, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 10) then begin
        giq_option(1, 583, message_str(583, 500) + 10 + message_str(583, 501), NodeBet2, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 15) then begin
        giq_option(1, 583, message_str(583, 500) + 15 + message_str(583, 501), NodeBet3, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 20) then begin
        giq_option(1, 583, message_str(583, 500) + 20 + message_str(583, 501), NodeBet4, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 100) then begin
        giq_option(1, 583, message_str(583, 500) + 100 + message_str(583, 501), NodeBet5, 50);
    end
    giq_option(1, 583, message_str(583, 713), Node001, 50);
end

procedure NodeDontPassLine
begin
    betOption := 2;
    gsay_reply(583, 105);
    if ((item_caps_total(dude_obj) - local_var(41)) > 5) then begin
        giq_option(1, 583, message_str(583, 500) + 5 + message_str(583, 501), NodeBet1, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 10) then begin
        giq_option(1, 583, message_str(583, 500) + 10 + message_str(583, 501), NodeBet2, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 15) then begin
        giq_option(1, 583, message_str(583, 500) + 15 + message_str(583, 501), NodeBet3, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 20) then begin
        giq_option(1, 583, message_str(583, 500) + 20 + message_str(583, 501), NodeBet4, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 100) then begin
        giq_option(1, 583, message_str(583, 500) + 100 + message_str(583, 501), NodeBet5, 50);
    end
    giq_option(1, 583, message_str(583, 713), Node001, 50);
end

procedure NodeComeLine
begin
    betOption := 4;
    gsay_reply(583, 106);
    if ((item_caps_total(dude_obj) - local_var(41)) > 5) then begin
        giq_option(1, 583, message_str(583, 500) + 5 + message_str(583, 501), NodeBet1, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 10) then begin
        giq_option(1, 583, message_str(583, 500) + 10 + message_str(583, 501), NodeBet2, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 15) then begin
        giq_option(1, 583, message_str(583, 500) + 15 + message_str(583, 501), NodeBet3, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 20) then begin
        giq_option(1, 583, message_str(583, 500) + 20 + message_str(583, 501), NodeBet4, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 100) then begin
        giq_option(1, 583, message_str(583, 500) + 100 + message_str(583, 501), NodeBet5, 50);
    end
    giq_option(1, 583, message_str(583, 713), Node001, 50);
end

procedure NodeDontComeLine
begin
    betOption := 5;
    gsay_reply(583, 107);
    if ((item_caps_total(dude_obj) - local_var(41)) > 5) then begin
        giq_option(1, 583, message_str(583, 500) + 5 + message_str(583, 501), NodeBet1, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 10) then begin
        giq_option(1, 583, message_str(583, 500) + 10 + message_str(583, 501), NodeBet2, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 15) then begin
        giq_option(1, 583, message_str(583, 500) + 15 + message_str(583, 501), NodeBet3, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 20) then begin
        giq_option(1, 583, message_str(583, 500) + 20 + message_str(583, 501), NodeBet4, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 100) then begin
        giq_option(1, 583, message_str(583, 500) + 100 + message_str(583, 501), NodeBet5, 50);
    end
    giq_option(1, 583, message_str(583, 713), Node001, 50);
end

procedure NodePropBet
begin
    gsay_reply(583, 156);
    giq_option(1, 583, 154, NodeSingleProp, 50);
    giq_option(1, 583, 155, NodeHardwayProp, 50);
    giq_option(1, 583, 713, Node001, 50);
end

procedure NodePlaceBet
begin
    gsay_reply(583, 299);
    giq_option(1, 583, 300, NodePlace4, 50);
    giq_option(1, 583, 301, NodePlace5, 50);
    giq_option(1, 583, 302, NodePlace6, 50);
    giq_option(1, 583, 303, NodePlace8, 50);
    giq_option(1, 583, 304, NodePlace9, 50);
    giq_option(1, 583, 305, NodePlace10, 50);
    giq_option(1, 583, 713, Node001, 50);
end

procedure NodeFieldBet
begin
    betOption := 3;
    gsay_reply(583, 108);
    if ((item_caps_total(dude_obj) - local_var(41)) > 5) then begin
        giq_option(1, 583, message_str(583, 500) + 5 + message_str(583, 501), NodeBet1, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 10) then begin
        giq_option(1, 583, message_str(583, 500) + 10 + message_str(583, 501), NodeBet2, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 15) then begin
        giq_option(1, 583, message_str(583, 500) + 15 + message_str(583, 501), NodeBet3, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 20) then begin
        giq_option(1, 583, message_str(583, 500) + 20 + message_str(583, 501), NodeBet4, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 100) then begin
        giq_option(1, 583, message_str(583, 500) + 100 + message_str(583, 501), NodeBet5, 50);
    end
    giq_option(1, 583, 713, Node001, 50);
end

procedure Node001
begin
    call calculateTotal();
    sayString := "";
    if (local_var(40) == 0) then begin
        gsay_reply(583, message_str(583, 103) + " " + (message_str(583, 109) + " " + local_var(40) + ". " + message_str(583, 139) + getValue(28) + " " + message_str(583, 145) + local_var(34) + " " + message_str(583, 140) + getValue(29) + " " + message_str(583, 146) + local_var(35) + " " + message_str(583, 141) + getValue(30) + " " + message_str(583, 147) + local_var(36) + " " + message_str(583, 142) + getValue(31) + " " + message_str(583, 148) + local_var(37) + " " + message_str(583, 143) + getValue(32) + " " + message_str(583, 149) + local_var(38) + " " + message_str(583, 144) + getValue(33) + " " + message_str(583, 150) + local_var(39)));
        if (local_var(7) == 0) then begin
            giq_option(1, 583, 110, NodePassLine, 50);
        end
        else begin
            giq_option(1, 583, message_str(583, 119) + local_var(7), NodePassLine, 50);
        end
    end
    else begin
        gsay_reply(583, message_str(583, 109) + " " + local_var(40) + ". " + message_str(583, 139) + getValue(28) + " " + message_str(583, 145) + local_var(34) + " " + message_str(583, 140) + getValue(29) + " " + message_str(583, 146) + local_var(35) + " " + message_str(583, 141) + getValue(30) + " " + message_str(583, 147) + local_var(36) + " " + message_str(583, 142) + getValue(31) + " " + message_str(583, 148) + local_var(37) + " " + message_str(583, 143) + getValue(32) + " " + message_str(583, 149) + local_var(38) + " " + message_str(583, 144) + getValue(33) + " " + message_str(583, 150) + local_var(39));
        if (local_var(9) == 0) then begin
            giq_option(1, 583, 112, NodeComeLine, 50);
        end
        else begin
            giq_option(1, 583, message_str(583, 121) + local_var(9), NodeComeLine, 50);
        end
        giq_option(1, 583, 800, NodeOdds, 50);
    end
    if ((local_var(11) or local_var(12) or local_var(13) or local_var(14) or local_var(15) or local_var(16) or local_var(17) or local_var(18) or local_var(19) or local_var(20)) == 0) then begin
        giq_option(1, 583, 114, NodePropBet, 50);
    end
    else begin
        giq_option(1, 583, message_str(583, 123) + local_var(11) + " " + message_str(583, 124) + local_var(12) + " " + message_str(583, 125) + local_var(13) + " " + message_str(583, 126) + local_var(14) + " " + message_str(583, 127) + local_var(15) + " " + message_str(583, 128) + local_var(16) + " " + message_str(583, 129) + local_var(17) + " " + message_str(583, 130) + local_var(18) + " " + message_str(583, 131) + local_var(19) + " " + message_str(583, 132) + local_var(20), NodePropBet, 50);
    end
    if ((local_var(21) or local_var(22) or local_var(23) or local_var(24) or local_var(25) or local_var(26)) == 0) then begin
        giq_option(1, 583, 115, NodePlaceBet, 50);
    end
    else begin
        giq_option(1, 583, message_str(583, 133) + local_var(21) + " " + message_str(583, 134) + local_var(22) + " " + message_str(583, 135) + local_var(23) + " " + message_str(583, 136) + local_var(24) + " " + message_str(583, 137) + local_var(25) + " " + message_str(583, 138) + local_var(26), NodePlaceBet, 50);
    end
    if (local_var(27) == 0) then begin
        giq_option(1, 583, 116, NodeFieldBet, 50);
    end
    else begin
        giq_option(1, 583, message_str(583, 151) + local_var(27), NodeFieldBet, 50);
    end
    if (local_var(41) > 0) then begin
        giq_option(1, 583, 118, NodeRoll, 50);
    end
    if ((local_var(28) or local_var(29) or local_var(30) or local_var(31) or local_var(32) or local_var(33)) == 0) then begin
        giq_option(1, 583, 712, Node999, 50);
    end
end

procedure NodeBet1
begin
    if (betOption == 1) then begin
        set_local_var(7, 5);
    end
    else begin
        if (betOption == 2) then begin
            set_local_var(8, 5);
        end
        else begin
            if (betOption == 3) then begin
                set_local_var(27, 5);
            end
            else begin
                if (betOption == 4) then begin
                    set_local_var(9, 5);
                end
                else begin
                    if (betOption == 5) then begin
                        set_local_var(10, 5);
                    end
                    else begin
                        if (betOption == 6) then begin
                            set_local_var(20, 5);
                        end
                        else begin
                            if (betOption == 7) then begin
                                set_local_var(19, 5);
                            end
                            else begin
                                if (betOption == 8) then begin
                                    set_local_var(18, 5);
                                end
                                else begin
                                    if (betOption == 9) then begin
                                        set_local_var(16, 5);
                                    end
                                    else begin
                                        if (betOption == 10) then begin
                                            set_local_var(17, 5);
                                        end
                                        else begin
                                            if (betOption == 11) then begin
                                                set_local_var(15, 5);
                                            end
                                            else begin
                                                if (betOption == 12) then begin
                                                    set_local_var(14, 5);
                                                end
                                                else begin
                                                    if (betOption == 13) then begin
                                                        set_local_var(13, 5);
                                                    end
                                                    else begin
                                                        if (betOption == 14) then begin
                                                            set_local_var(12, 5);
                                                        end
                                                        else begin
                                                            if (betOption == 15) then begin
                                                                set_local_var(11, 5);
                                                            end
                                                            else begin
                                                                if (betOption == 16) then begin
                                                                    set_local_var(21, 10);
                                                                end
                                                                else begin
                                                                    if (betOption == 17) then begin
                                                                        set_local_var(22, 10);
                                                                    end
                                                                    else begin
                                                                        if (betOption == 18) then begin
                                                                            set_local_var(23, 10);
                                                                        end
                                                                        else begin
                                                                            if (betOption == 19) then begin
                                                                                set_local_var(24, 10);
                                                                            end
                                                                            else begin
                                                                                if (betOption == 20) then begin
                                                                                    set_local_var(25, 10);
                                                                                end
                                                                                else begin
                                                                                    if (betOption == 21) then begin
                                                                                        set_local_var(26, 10);
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    call Node001();
end

procedure NodeBet2
begin
    if (betOption == 1) then begin
        set_local_var(7, 10);
    end
    else begin
        if (betOption == 2) then begin
            set_local_var(8, 10);
        end
        else begin
            if (betOption == 3) then begin
                set_local_var(27, 10);
            end
            else begin
                if (betOption == 4) then begin
                    set_local_var(9, 10);
                end
                else begin
                    if (betOption == 5) then begin
                        set_local_var(10, 10);
                    end
                    else begin
                        if (betOption == 6) then begin
                            set_local_var(20, 10);
                        end
                        else begin
                            if (betOption == 7) then begin
                                set_local_var(19, 10);
                            end
                            else begin
                                if (betOption == 8) then begin
                                    set_local_var(18, 10);
                                end
                                else begin
                                    if (betOption == 9) then begin
                                        set_local_var(16, 10);
                                    end
                                    else begin
                                        if (betOption == 10) then begin
                                            set_local_var(17, 10);
                                        end
                                        else begin
                                            if (betOption == 11) then begin
                                                set_local_var(15, 10);
                                            end
                                            else begin
                                                if (betOption == 12) then begin
                                                    set_local_var(14, 10);
                                                end
                                                else begin
                                                    if (betOption == 13) then begin
                                                        set_local_var(13, 10);
                                                    end
                                                    else begin
                                                        if (betOption == 14) then begin
                                                            set_local_var(12, 10);
                                                        end
                                                        else begin
                                                            if (betOption == 15) then begin
                                                                set_local_var(11, 10);
                                                            end
                                                            else begin
                                                                if (betOption == 16) then begin
                                                                    set_local_var(21, 10);
                                                                end
                                                                else begin
                                                                    if (betOption == 17) then begin
                                                                        set_local_var(22, 10);
                                                                    end
                                                                    else begin
                                                                        if (betOption == 18) then begin
                                                                            set_local_var(23, 10);
                                                                        end
                                                                        else begin
                                                                            if (betOption == 19) then begin
                                                                                set_local_var(24, 10);
                                                                            end
                                                                            else begin
                                                                                if (betOption == 20) then begin
                                                                                    set_local_var(25, 10);
                                                                                end
                                                                                else begin
                                                                                    if (betOption == 21) then begin
                                                                                        set_local_var(26, 10);
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    call Node001();
end

procedure NodeBet3
begin
    if (betOption == 1) then begin
        set_local_var(7, 15);
    end
    else begin
        if (betOption == 2) then begin
            set_local_var(8, 15);
        end
        else begin
            if (betOption == 3) then begin
                set_local_var(27, 15);
            end
            else begin
                if (betOption == 4) then begin
                    set_local_var(9, 15);
                end
                else begin
                    if (betOption == 5) then begin
                        set_local_var(10, 15);
                    end
                    else begin
                        if (betOption == 6) then begin
                            set_local_var(20, 15);
                        end
                        else begin
                            if (betOption == 7) then begin
                                set_local_var(19, 15);
                            end
                            else begin
                                if (betOption == 8) then begin
                                    set_local_var(18, 15);
                                end
                                else begin
                                    if (betOption == 9) then begin
                                        set_local_var(16, 15);
                                    end
                                    else begin
                                        if (betOption == 10) then begin
                                            set_local_var(17, 15);
                                        end
                                        else begin
                                            if (betOption == 11) then begin
                                                set_local_var(15, 15);
                                            end
                                            else begin
                                                if (betOption == 12) then begin
                                                    set_local_var(14, 15);
                                                end
                                                else begin
                                                    if (betOption == 13) then begin
                                                        set_local_var(13, 15);
                                                    end
                                                    else begin
                                                        if (betOption == 14) then begin
                                                            set_local_var(12, 15);
                                                        end
                                                        else begin
                                                            if (betOption == 15) then begin
                                                                set_local_var(11, 15);
                                                            end
                                                            else begin
                                                                if (betOption == 16) then begin
                                                                    set_local_var(21, 15);
                                                                end
                                                                else begin
                                                                    if (betOption == 17) then begin
                                                                        set_local_var(22, 15);
                                                                    end
                                                                    else begin
                                                                        if (betOption == 18) then begin
                                                                            set_local_var(23, 15);
                                                                        end
                                                                        else begin
                                                                            if (betOption == 19) then begin
                                                                                set_local_var(24, 15);
                                                                            end
                                                                            else begin
                                                                                if (betOption == 20) then begin
                                                                                    set_local_var(25, 15);
                                                                                end
                                                                                else begin
                                                                                    if (betOption == 21) then begin
                                                                                        set_local_var(26, 15);
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    call Node001();
end

procedure NodeBet4
begin
    if (betOption == 1) then begin
        set_local_var(7, 20);
    end
    else begin
        if (betOption == 2) then begin
            set_local_var(8, 20);
        end
        else begin
            if (betOption == 3) then begin
                set_local_var(27, 20);
            end
            else begin
                if (betOption == 4) then begin
                    set_local_var(9, 20);
                end
                else begin
                    if (betOption == 5) then begin
                        set_local_var(10, 20);
                    end
                    else begin
                        if (betOption == 6) then begin
                            set_local_var(20, 20);
                        end
                        else begin
                            if (betOption == 7) then begin
                                set_local_var(19, 20);
                            end
                            else begin
                                if (betOption == 8) then begin
                                    set_local_var(18, 20);
                                end
                                else begin
                                    if (betOption == 9) then begin
                                        set_local_var(16, 20);
                                    end
                                    else begin
                                        if (betOption == 10) then begin
                                            set_local_var(17, 20);
                                        end
                                        else begin
                                            if (betOption == 11) then begin
                                                set_local_var(15, 20);
                                            end
                                            else begin
                                                if (betOption == 12) then begin
                                                    set_local_var(14, 20);
                                                end
                                                else begin
                                                    if (betOption == 13) then begin
                                                        set_local_var(13, 20);
                                                    end
                                                    else begin
                                                        if (betOption == 14) then begin
                                                            set_local_var(12, 20);
                                                        end
                                                        else begin
                                                            if (betOption == 15) then begin
                                                                set_local_var(11, 20);
                                                            end
                                                            else begin
                                                                if (betOption == 16) then begin
                                                                    set_local_var(21, 20);
                                                                end
                                                                else begin
                                                                    if (betOption == 17) then begin
                                                                        set_local_var(22, 20);
                                                                    end
                                                                    else begin
                                                                        if (betOption == 18) then begin
                                                                            set_local_var(23, 20);
                                                                        end
                                                                        else begin
                                                                            if (betOption == 19) then begin
                                                                                set_local_var(24, 20);
                                                                            end
                                                                            else begin
                                                                                if (betOption == 20) then begin
                                                                                    set_local_var(25, 20);
                                                                                end
                                                                                else begin
                                                                                    if (betOption == 21) then begin
                                                                                        set_local_var(26, 20);
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    call Node001();
end

procedure NodeBet5
begin
    if (betOption == 1) then begin
        set_local_var(7, 100);
    end
    else begin
        if (betOption == 2) then begin
            set_local_var(8, 100);
        end
        else begin
            if (betOption == 3) then begin
                set_local_var(27, 100);
            end
            else begin
                if (betOption == 4) then begin
                    set_local_var(9, 100);
                end
                else begin
                    if (betOption == 5) then begin
                        set_local_var(10, 100);
                    end
                    else begin
                        if (betOption == 6) then begin
                            set_local_var(20, 100);
                        end
                        else begin
                            if (betOption == 7) then begin
                                set_local_var(19, 100);
                            end
                            else begin
                                if (betOption == 8) then begin
                                    set_local_var(18, 100);
                                end
                                else begin
                                    if (betOption == 9) then begin
                                        set_local_var(16, 100);
                                    end
                                    else begin
                                        if (betOption == 10) then begin
                                            set_local_var(17, 100);
                                        end
                                        else begin
                                            if (betOption == 11) then begin
                                                set_local_var(15, 100);
                                            end
                                            else begin
                                                if (betOption == 12) then begin
                                                    set_local_var(14, 100);
                                                end
                                                else begin
                                                    if (betOption == 13) then begin
                                                        set_local_var(13, 100);
                                                    end
                                                    else begin
                                                        if (betOption == 14) then begin
                                                            set_local_var(12, 100);
                                                        end
                                                        else begin
                                                            if (betOption == 15) then begin
                                                                set_local_var(11, 100);
                                                            end
                                                            else begin
                                                                if (betOption == 16) then begin
                                                                    set_local_var(21, 100);
                                                                end
                                                                else begin
                                                                    if (betOption == 17) then begin
                                                                        set_local_var(22, 100);
                                                                    end
                                                                    else begin
                                                                        if (betOption == 18) then begin
                                                                            set_local_var(23, 100);
                                                                        end
                                                                        else begin
                                                                            if (betOption == 19) then begin
                                                                                set_local_var(24, 100);
                                                                            end
                                                                            else begin
                                                                                if (betOption == 20) then begin
                                                                                    set_local_var(25, 100);
                                                                                end
                                                                                else begin
                                                                                    if (betOption == 21) then begin
                                                                                        set_local_var(26, 100);
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    call Node001();
end

procedure calculateTotal
begin
    set_local_var(41, local_var(7) + local_var(8) + local_var(9) + local_var(10) + local_var(11) + local_var(12) + local_var(13) + local_var(14) + local_var(15) + local_var(16) + local_var(17) + local_var(18) + local_var(19) + local_var(20) + local_var(21) + local_var(22) + local_var(23) + local_var(24) + local_var(25) + local_var(26) + local_var(27) + local_var(28) + local_var(29) + local_var(30) + local_var(31) + local_var(32) + local_var(33) + local_var(34) + local_var(35) + local_var(36) + local_var(37) + local_var(38) + local_var(39));
end

procedure getValue(variable arg0)
begin
    return local_var(arg0);
end

procedure exchangeCaps(variable arg0)
begin
    arg0 := floor(arg0);
    debug_msg("ZCCRPDEL: giving player: " + arg0);
    item_caps_adjust(dude_obj, arg0);
end

procedure Clear_All_Vars
begin
    set_local_var(7, 0);
    set_local_var(8, 0);
    set_local_var(9, 0);
    set_local_var(10, 0);
    set_local_var(11, 0);
    set_local_var(12, 0);
    set_local_var(13, 0);
    set_local_var(14, 0);
    set_local_var(15, 0);
    set_local_var(16, 0);
    set_local_var(17, 0);
    set_local_var(18, 0);
    set_local_var(19, 0);
    set_local_var(20, 0);
    set_local_var(21, 0);
    set_local_var(22, 0);
    set_local_var(23, 0);
    set_local_var(24, 0);
    set_local_var(25, 0);
    set_local_var(26, 0);
    set_local_var(27, 0);
    set_local_var(28, 0);
    set_local_var(29, 0);
    set_local_var(30, 0);
    set_local_var(31, 0);
    set_local_var(32, 0);
    set_local_var(33, 0);
    set_local_var(34, 0);
    set_local_var(35, 0);
    set_local_var(36, 0);
    set_local_var(37, 0);
    set_local_var(38, 0);
    set_local_var(39, 0);
    set_local_var(40, 0);
    set_local_var(41, 0);
end

procedure NodeBet0
begin
    if (betOption == 1) then begin
        set_local_var(7, 0);
    end
    else begin
        if (betOption == 2) then begin
            set_local_var(8, 0);
        end
        else begin
            if (betOption == 3) then begin
                set_local_var(27, 0);
            end
            else begin
                if (betOption == 4) then begin
                    set_local_var(9, 0);
                end
                else begin
                    if (betOption == 5) then begin
                        set_local_var(10, 0);
                    end
                    else begin
                        if (betOption == 6) then begin
                            set_local_var(20, 0);
                        end
                        else begin
                            if (betOption == 7) then begin
                                set_local_var(19, 0);
                            end
                            else begin
                                if (betOption == 8) then begin
                                    set_local_var(18, 0);
                                end
                                else begin
                                    if (betOption == 9) then begin
                                        set_local_var(16, 0);
                                    end
                                    else begin
                                        if (betOption == 10) then begin
                                            set_local_var(17, 0);
                                        end
                                        else begin
                                            if (betOption == 11) then begin
                                                set_local_var(15, 0);
                                            end
                                            else begin
                                                if (betOption == 12) then begin
                                                    set_local_var(14, 0);
                                                end
                                                else begin
                                                    if (betOption == 13) then begin
                                                        set_local_var(13, 0);
                                                    end
                                                    else begin
                                                        if (betOption == 14) then begin
                                                            set_local_var(12, 0);
                                                        end
                                                        else begin
                                                            if (betOption == 15) then begin
                                                                set_local_var(11, 0);
                                                            end
                                                            else begin
                                                                if (betOption == 16) then begin
                                                                    set_local_var(21, 0);
                                                                end
                                                                else begin
                                                                    if (betOption == 17) then begin
                                                                        set_local_var(22, 0);
                                                                    end
                                                                    else begin
                                                                        if (betOption == 18) then begin
                                                                            set_local_var(23, 0);
                                                                        end
                                                                        else begin
                                                                            if (betOption == 19) then begin
                                                                                set_local_var(24, 0);
                                                                            end
                                                                            else begin
                                                                                if (betOption == 20) then begin
                                                                                    set_local_var(25, 0);
                                                                                end
                                                                                else begin
                                                                                    if (betOption == 21) then begin
                                                                                        set_local_var(26, 0);
                                                                                    end
                                                                                end
                                                                            end
                                                                        end
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    call Node001();
end

procedure Node7_Prop
begin
    betOption := 15;
    gsay_reply(583, 153);
    if ((item_caps_total(dude_obj) - local_var(41)) > 5) then begin
        giq_option(1, 583, message_str(583, 500) + 5 + message_str(583, 501), NodeBet1, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 10) then begin
        giq_option(1, 583, message_str(583, 500) + 10 + message_str(583, 501), NodeBet2, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 15) then begin
        giq_option(1, 583, message_str(583, 500) + 15 + message_str(583, 501), NodeBet3, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 20) then begin
        giq_option(1, 583, message_str(583, 500) + 20 + message_str(583, 501), NodeBet4, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 100) then begin
        giq_option(1, 583, message_str(583, 500) + 100 + message_str(583, 501), NodeBet5, 50);
    end
    giq_option(1, 583, message_str(583, 713), Node001, 50);
end

procedure Node3s_Prop
begin
    betOption := 14;
    gsay_reply(583, 153);
    if ((item_caps_total(dude_obj) - local_var(41)) > 5) then begin
        giq_option(1, 583, message_str(583, 500) + 5 + message_str(583, 501), NodeBet1, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 10) then begin
        giq_option(1, 583, message_str(583, 500) + 10 + message_str(583, 501), NodeBet2, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 15) then begin
        giq_option(1, 583, message_str(583, 500) + 15 + message_str(583, 501), NodeBet3, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 20) then begin
        giq_option(1, 583, message_str(583, 500) + 20 + message_str(583, 501), NodeBet4, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 100) then begin
        giq_option(1, 583, message_str(583, 500) + 100 + message_str(583, 501), NodeBet5, 50);
    end
    giq_option(1, 583, message_str(583, 713), Node001, 50);
end

procedure Node4s_Prop
begin
    betOption := 13;
    gsay_reply(583, 153);
    if ((item_caps_total(dude_obj) - local_var(41)) > 5) then begin
        giq_option(1, 583, message_str(583, 500) + 5 + message_str(583, 501), NodeBet1, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 10) then begin
        giq_option(1, 583, message_str(583, 500) + 10 + message_str(583, 501), NodeBet2, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 15) then begin
        giq_option(1, 583, message_str(583, 500) + 15 + message_str(583, 501), NodeBet3, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 20) then begin
        giq_option(1, 583, message_str(583, 500) + 20 + message_str(583, 501), NodeBet4, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 100) then begin
        giq_option(1, 583, message_str(583, 500) + 100 + message_str(583, 501), NodeBet5, 50);
    end
    giq_option(1, 583, message_str(583, 713), Node001, 50);
end

procedure Node5s_Prop
begin
    betOption := 12;
    gsay_reply(583, 153);
    if ((item_caps_total(dude_obj) - local_var(41)) > 5) then begin
        giq_option(1, 583, message_str(583, 500) + 5 + message_str(583, 501), NodeBet1, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 10) then begin
        giq_option(1, 583, message_str(583, 500) + 10 + message_str(583, 501), NodeBet2, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 15) then begin
        giq_option(1, 583, message_str(583, 500) + 15 + message_str(583, 501), NodeBet3, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 20) then begin
        giq_option(1, 583, message_str(583, 500) + 20 + message_str(583, 501), NodeBet4, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 100) then begin
        giq_option(1, 583, message_str(583, 500) + 100 + message_str(583, 501), NodeBet5, 50);
    end
    giq_option(1, 583, message_str(583, 713), Node001, 50);
end

procedure Node2s_Prop
begin
    betOption := 11;
    gsay_reply(583, 153);
    if ((item_caps_total(dude_obj) - local_var(41)) > 5) then begin
        giq_option(1, 583, message_str(583, 500) + 5 + message_str(583, 501), NodeBet1, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 10) then begin
        giq_option(1, 583, message_str(583, 500) + 10 + message_str(583, 501), NodeBet2, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 15) then begin
        giq_option(1, 583, message_str(583, 500) + 15 + message_str(583, 501), NodeBet3, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 20) then begin
        giq_option(1, 583, message_str(583, 500) + 20 + message_str(583, 501), NodeBet4, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 100) then begin
        giq_option(1, 583, message_str(583, 500) + 100 + message_str(583, 501), NodeBet5, 50);
    end
    giq_option(1, 583, message_str(583, 713), Node001, 50);
end

procedure Node1_2_Prop
begin
    betOption := 9;
    gsay_reply(583, 153);
    if ((item_caps_total(dude_obj) - local_var(41)) > 5) then begin
        giq_option(1, 583, message_str(583, 500) + 5 + message_str(583, 501), NodeBet1, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 10) then begin
        giq_option(1, 583, message_str(583, 500) + 10 + message_str(583, 501), NodeBet2, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 15) then begin
        giq_option(1, 583, message_str(583, 500) + 15 + message_str(583, 501), NodeBet3, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 20) then begin
        giq_option(1, 583, message_str(583, 500) + 20 + message_str(583, 501), NodeBet4, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 100) then begin
        giq_option(1, 583, message_str(583, 500) + 100 + message_str(583, 501), NodeBet5, 50);
    end
    giq_option(1, 583, message_str(583, 713), Node001, 50);
end

procedure Node5_6_Prop
begin
    betOption := 10;
    gsay_reply(583, 153);
    if ((item_caps_total(dude_obj) - local_var(41)) > 5) then begin
        giq_option(1, 583, message_str(583, 500) + 5 + message_str(583, 501), NodeBet1, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 10) then begin
        giq_option(1, 583, message_str(583, 500) + 10 + message_str(583, 501), NodeBet2, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 15) then begin
        giq_option(1, 583, message_str(583, 500) + 15 + message_str(583, 501), NodeBet3, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 20) then begin
        giq_option(1, 583, message_str(583, 500) + 20 + message_str(583, 501), NodeBet4, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 100) then begin
        giq_option(1, 583, message_str(583, 500) + 100 + message_str(583, 501), NodeBet5, 50);
    end
    giq_option(1, 583, message_str(583, 713), Node001, 50);
end

procedure Node1_1_Prop
begin
    betOption := 8;
    gsay_reply(583, 153);
    if ((item_caps_total(dude_obj) - local_var(41)) > 5) then begin
        giq_option(1, 583, message_str(583, 500) + 5 + message_str(583, 501), NodeBet1, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 10) then begin
        giq_option(1, 583, message_str(583, 500) + 10 + message_str(583, 501), NodeBet2, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 15) then begin
        giq_option(1, 583, message_str(583, 500) + 15 + message_str(583, 501), NodeBet3, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 20) then begin
        giq_option(1, 583, message_str(583, 500) + 20 + message_str(583, 501), NodeBet4, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 100) then begin
        giq_option(1, 583, message_str(583, 500) + 100 + message_str(583, 501), NodeBet5, 50);
    end
    giq_option(1, 583, message_str(583, 713), Node001, 50);
end

procedure Node6_6_Prop
begin
    betOption := 7;
    gsay_reply(583, 153);
    if ((item_caps_total(dude_obj) - local_var(41)) > 5) then begin
        giq_option(1, 583, message_str(583, 500) + 5 + message_str(583, 501), NodeBet1, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 10) then begin
        giq_option(1, 583, message_str(583, 500) + 10 + message_str(583, 501), NodeBet2, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 15) then begin
        giq_option(1, 583, message_str(583, 500) + 15 + message_str(583, 501), NodeBet3, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 20) then begin
        giq_option(1, 583, message_str(583, 500) + 20 + message_str(583, 501), NodeBet4, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 100) then begin
        giq_option(1, 583, message_str(583, 500) + 100 + message_str(583, 501), NodeBet5, 50);
    end
    giq_option(1, 583, message_str(583, 713), Node001, 50);
end

procedure Node_Craps_Prop
begin
    betOption := 6;
    gsay_reply(583, 153);
    if ((item_caps_total(dude_obj) - local_var(41)) > 5) then begin
        giq_option(1, 583, message_str(583, 500) + 5 + message_str(583, 501), NodeBet1, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 10) then begin
        giq_option(1, 583, message_str(583, 500) + 10 + message_str(583, 501), NodeBet2, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 15) then begin
        giq_option(1, 583, message_str(583, 500) + 15 + message_str(583, 501), NodeBet3, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 20) then begin
        giq_option(1, 583, message_str(583, 500) + 20 + message_str(583, 501), NodeBet4, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 100) then begin
        giq_option(1, 583, message_str(583, 500) + 100 + message_str(583, 501), NodeBet5, 50);
    end
    giq_option(1, 583, 713, Node001, 50);
end

procedure NodeSingleProp
begin
    gsay_reply(583, 152);
    giq_option(1, 583, message_str(583, 200) + ": " + local_var(11), Node7_Prop, 50);
    giq_option(1, 583, message_str(583, 205) + ": " + local_var(16), Node1_2_Prop, 50);
    giq_option(1, 583, message_str(583, 206) + ": " + local_var(17), Node5_6_Prop, 50);
    giq_option(1, 583, message_str(583, 207) + ": " + local_var(18), Node1_1_Prop, 50);
    giq_option(1, 583, message_str(583, 208) + ": " + local_var(19), Node6_6_Prop, 50);
    giq_option(1, 583, message_str(583, 209) + ": " + local_var(20), Node_Craps_Prop, 50);
    giq_option(1, 583, 713, Node001, 50);
end

procedure NodeHardwayProp
begin
    gsay_reply(583, 152);
    giq_option(1, 583, message_str(583, 201) + ": " + local_var(12), Node3s_Prop, 50);
    giq_option(1, 583, message_str(583, 202) + ": " + local_var(13), Node4s_Prop, 50);
    giq_option(1, 583, message_str(583, 203) + ": " + local_var(14), Node5s_Prop, 50);
    giq_option(1, 583, message_str(583, 204) + ": " + local_var(15), Node2s_Prop, 50);
    giq_option(1, 583, 713, Node001, 50);
end

procedure NodePlace4
begin
    betOption := 16;
    gsay_reply(583, 157);
    giq_option(1, 583, message_str(583, 500) + 0 + message_str(583, 501), NodeBet0, 50);
    if ((item_caps_total(dude_obj) - local_var(41)) > 5) then begin
        giq_option(1, 583, message_str(583, 500) + 5 + message_str(583, 501), NodeBet1, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 10) then begin
        giq_option(1, 583, message_str(583, 500) + 10 + message_str(583, 501), NodeBet2, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 15) then begin
        giq_option(1, 583, message_str(583, 500) + 15 + message_str(583, 501), NodeBet3, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 20) then begin
        giq_option(1, 583, message_str(583, 500) + 20 + message_str(583, 501), NodeBet4, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 100) then begin
        giq_option(1, 583, message_str(583, 500) + 100 + message_str(583, 501), NodeBet5, 50);
    end
    giq_option(1, 583, 713, Node001, 50);
end

procedure NodePlace5
begin
    betOption := 17;
    gsay_reply(583, 157);
    giq_option(1, 583, message_str(583, 500) + 0 + message_str(583, 501), NodeBet0, 50);
    if ((item_caps_total(dude_obj) - local_var(41)) > 5) then begin
        giq_option(1, 583, message_str(583, 500) + 5 + message_str(583, 501), NodeBet1, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 10) then begin
        giq_option(1, 583, message_str(583, 500) + 10 + message_str(583, 501), NodeBet2, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 15) then begin
        giq_option(1, 583, message_str(583, 500) + 15 + message_str(583, 501), NodeBet3, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 20) then begin
        giq_option(1, 583, message_str(583, 500) + 20 + message_str(583, 501), NodeBet4, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 100) then begin
        giq_option(1, 583, message_str(583, 500) + 100 + message_str(583, 501), NodeBet5, 50);
    end
    giq_option(1, 583, 713, Node001, 50);
end

procedure NodePlace6
begin
    betOption := 18;
    gsay_reply(583, 157);
    giq_option(1, 583, message_str(583, 500) + 0 + message_str(583, 501), NodeBet0, 50);
    if ((item_caps_total(dude_obj) - local_var(41)) > 5) then begin
        giq_option(1, 583, message_str(583, 500) + 5 + message_str(583, 501), NodeBet1, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 10) then begin
        giq_option(1, 583, message_str(583, 500) + 10 + message_str(583, 501), NodeBet2, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 15) then begin
        giq_option(1, 583, message_str(583, 500) + 15 + message_str(583, 501), NodeBet3, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 20) then begin
        giq_option(1, 583, message_str(583, 500) + 20 + message_str(583, 501), NodeBet4, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 100) then begin
        giq_option(1, 583, message_str(583, 500) + 100 + message_str(583, 501), NodeBet5, 50);
    end
    giq_option(1, 583, 713, Node001, 50);
end

procedure NodePlace8
begin
    betOption := 19;
    gsay_reply(583, 157);
    giq_option(1, 583, message_str(583, 500) + 0 + message_str(583, 501), NodeBet0, 50);
    if ((item_caps_total(dude_obj) - local_var(41)) > 5) then begin
        giq_option(1, 583, message_str(583, 500) + 5 + message_str(583, 501), NodeBet1, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 10) then begin
        giq_option(1, 583, message_str(583, 500) + 10 + message_str(583, 501), NodeBet2, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 15) then begin
        giq_option(1, 583, message_str(583, 500) + 15 + message_str(583, 501), NodeBet3, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 20) then begin
        giq_option(1, 583, message_str(583, 500) + 20 + message_str(583, 501), NodeBet4, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 100) then begin
        giq_option(1, 583, message_str(583, 500) + 100 + message_str(583, 501), NodeBet5, 50);
    end
    giq_option(1, 583, 713, Node001, 50);
end

procedure NodePlace9
begin
    betOption := 20;
    gsay_reply(583, 157);
    giq_option(1, 583, message_str(583, 500) + 0 + message_str(583, 501), NodeBet0, 50);
    if ((item_caps_total(dude_obj) - local_var(41)) > 5) then begin
        giq_option(1, 583, message_str(583, 500) + 5 + message_str(583, 501), NodeBet1, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 10) then begin
        giq_option(1, 583, message_str(583, 500) + 10 + message_str(583, 501), NodeBet2, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 15) then begin
        giq_option(1, 583, message_str(583, 500) + 15 + message_str(583, 501), NodeBet3, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 20) then begin
        giq_option(1, 583, message_str(583, 500) + 20 + message_str(583, 501), NodeBet4, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 100) then begin
        giq_option(1, 583, message_str(583, 500) + 100 + message_str(583, 501), NodeBet5, 50);
    end
    giq_option(1, 583, 713, Node001, 50);
end

procedure NodePlace10
begin
    betOption := 21;
    gsay_reply(583, 157);
    giq_option(1, 583, message_str(583, 500) + 0 + message_str(583, 501), NodeBet0, 50);
    if ((item_caps_total(dude_obj) - local_var(41)) > 5) then begin
        giq_option(1, 583, message_str(583, 500) + 5 + message_str(583, 501), NodeBet1, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 10) then begin
        giq_option(1, 583, message_str(583, 500) + 10 + message_str(583, 501), NodeBet2, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 15) then begin
        giq_option(1, 583, message_str(583, 500) + 15 + message_str(583, 501), NodeBet3, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 20) then begin
        giq_option(1, 583, message_str(583, 500) + 20 + message_str(583, 501), NodeBet4, 50);
    end
    if ((item_caps_total(dude_obj) - local_var(41)) > 100) then begin
        giq_option(1, 583, message_str(583, 500) + 100 + message_str(583, 501), NodeBet5, 50);
    end
    giq_option(1, 583, 713, Node001, 50);
end

procedure getNumVar(variable arg0)
begin
    if (arg0 == 4) then begin
        return 28;
    end
    if (arg0 == 5) then begin
        return 29;
    end
    if (arg0 == 6) then begin
        return 30;
    end
    if (arg0 == 8) then begin
        return 31;
    end
    if (arg0 == 9) then begin
        return 32;
    end
    if (arg0 == 10) then begin
        return 33;
    end
end

procedure getOddsVar(variable arg0)
begin
    if (arg0 == 4) then begin
        return 34;
    end
    if (arg0 == 5) then begin
        return 35;
    end
    if (arg0 == 6) then begin
        return 36;
    end
    if (arg0 == 8) then begin
        return 37;
    end
    if (arg0 == 9) then begin
        return 38;
    end
    if (arg0 == 10) then begin
        return 39;
    end
end

procedure set_number_bet(variable arg0, variable arg1)
begin
    variable LVar2 := 0;
    LVar2 := getNumVar(arg0);
    set_local_var(LVar2, arg1);
end

procedure set_dont_number_bet(variable arg0, variable arg1)
begin
    variable LVar2 := 0;
    LVar2 := getNumVar(arg0);
    set_local_var(LVar2, arg1);
    set_local_var(LVar2, local_var(LVar2) bwor --2147483648);
end

procedure check_Pass_Line
begin
    variable LVar0 := 0;
    LVar0 := die1 + die2;
    debug_msg("ZCCRPDEL: checking pass line totol die rolls: " + LVar0);
    if (local_var(40) == 0) then begin
        if (LVar0 == 7) then begin
            sayString := sayString + (message_str(583, 600) + " ");
            call exchangeCaps(local_var(7));
            set_local_var(7, 0);
        end
        else begin
            if (LVar0 == 11) then begin
                sayString := sayString + (message_str(583, 601) + " ");
                call exchangeCaps(local_var(7));
                set_local_var(7, 0);
            end
            else begin
                if (LVar0 == 2) then begin
                    sayString := sayString + (message_str(583, 602) + " ");
                    call exchangeCaps(-local_var(7));
                    set_local_var(7, 0);
                end
                else begin
                    if (LVar0 == 3) then begin
                        sayString := sayString + (message_str(583, 603) + " ");
                        call exchangeCaps(-local_var(7));
                        set_local_var(7, 0);
                    end
                    else begin
                        if (LVar0 == 12) then begin
                            sayString := sayString + (message_str(583, 604) + " ");
                            call exchangeCaps(-local_var(7));
                            set_local_var(7, 0);
                        end
                        else begin
                            removePoint := 0;
                            set_local_var(40, LVar0);
                            call set_number_bet(LVar0, local_var(7));
                            set_local_var(7, 0);
                        end
                    end
                end
            end
        end
    end
end

procedure check_Dont_Pass_Line
begin
    variable LVar0 := 0;
    if (local_var(40) == 0) then begin
        LVar0 := die1 + die2;
        if (local_var(8) > 0) then begin
            if (LVar0 == 7) then begin
                sayString := sayString + (message_str(583, 610) + " ");
                call exchangeCaps(-local_var(8));
                set_local_var(8, 0);
            end
            else begin
                if (LVar0 == 11) then begin
                    sayString := sayString + (message_str(583, 611) + " ");
                    call exchangeCaps(-local_var(8));
                    set_local_var(8, 0);
                end
                else begin
                    if (LVar0 == 2) then begin
                        sayString := sayString + (message_str(583, 612) + " ");
                        call exchangeCaps(local_var(8));
                        set_local_var(8, 0);
                    end
                    else begin
                        if (LVar0 == 3) then begin
                            sayString := sayString + (message_str(583, 613) + " ");
                            call exchangeCaps(local_var(8));
                            item_caps_adjust(dude_obj, local_var(8));
                            set_local_var(8, 0);
                        end
                        else begin
                            if (LVar0 == 12) then begin
                                sayString := sayString + (message_str(583, 614) + " ");
                                set_local_var(8, 0);
                            end
                            else begin
                                set_local_var(40, LVar0);
                                call set_dont_number_bet(LVar0, local_var(8));
                                set_local_var(8, 0);
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure check_Come_Line
begin
    variable LVar0 := 0;
    LVar0 := die1 + die2;
    if (local_var(9) > 0) then begin
        if (LVar0 == 7) then begin
            sayString := sayString + (message_str(583, 600) + " ");
            call exchangeCaps(local_var(9));
            set_local_var(9, 0);
        end
        else begin
            if (LVar0 == 11) then begin
                sayString := sayString + (message_str(583, 601) + " ");
                call exchangeCaps(local_var(9));
                set_local_var(9, 0);
            end
            else begin
                if (LVar0 == 2) then begin
                    sayString := sayString + (message_str(583, 602) + " ");
                    call exchangeCaps(-local_var(9));
                    set_local_var(9, 0);
                end
                else begin
                    if (LVar0 == 3) then begin
                        sayString := sayString + (message_str(583, 603) + " ");
                        call exchangeCaps(-local_var(9));
                        set_local_var(9, 0);
                    end
                    else begin
                        if (LVar0 == 12) then begin
                            sayString := sayString + (message_str(583, 604) + " ");
                            call exchangeCaps(-local_var(9));
                            set_local_var(9, 0);
                        end
                        else begin
                            call set_number_bet(LVar0, local_var(9));
                            set_local_var(9, 0);
                        end
                    end
                end
            end
        end
    end
end

procedure check_Dont_Come_Line
begin
    variable LVar0 := 0;
    LVar0 := die1 + die2;
    if (local_var(10) > 0) then begin
        if (LVar0 == 7) then begin
            sayString := sayString + (message_str(583, 610) + " ");
            call exchangeCaps(-local_var(10));
            set_local_var(10, 0);
        end
        else begin
            if (LVar0 == 11) then begin
                sayString := sayString + (message_str(583, 611) + " ");
                call exchangeCaps(-local_var(10));
                set_local_var(10, 0);
            end
            else begin
                if (LVar0 == 2) then begin
                    sayString := sayString + (message_str(583, 612) + " ");
                    call exchangeCaps(local_var(10));
                    set_local_var(10, 0);
                end
                else begin
                    if (LVar0 == 3) then begin
                        sayString := sayString + (message_str(583, 613) + " ");
                        call exchangeCaps(local_var(10));
                        set_local_var(10, 0);
                    end
                    else begin
                        if (LVar0 == 12) then begin
                            sayString := sayString + (message_str(583, 614) + " ");
                            set_local_var(10, 0);
                        end
                        else begin
                            call set_dont_number_bet(LVar0, local_var(10));
                            set_local_var(10, 0);
                        end
                    end
                end
            end
        end
    end
end

procedure check_Prop_7
begin
    variable LVar0 := 0;
    LVar0 := die1 + die2;
    if (local_var(11)) then begin
        if (LVar0 == 7) then begin
            sayString := sayString + (message_str(583, 620) + " ");
            sayString := sayString + (message_str(583, 631) + " ");
            call exchangeCaps(local_var(11) * 5);
            set_local_var(11, 0);
        end
        else begin
            if (LVar0 != 7) then begin
                sayString := sayString + (message_str(583, 620) + " ");
                sayString := sayString + (message_str(583, 630) + " ");
                call exchangeCaps(-local_var(11));
                set_local_var(11, 0);
            end
        end
    end
end

procedure check_Prop_d3
begin
    variable LVar0 := 0;
    LVar0 := die1 + die2;
    if (local_var(12)) then begin
        if ((die1 == 3) and (die2 == 3)) then begin
            sayString := sayString + (message_str(583, 621) + " ");
            sayString := sayString + (message_str(583, 631) + " ");
            call exchangeCaps(local_var(12) * 9);
            set_local_var(12, 0);
        end
        else begin
            if ((LVar0 == 6) or ((LVar0 == 7) or (LVar0 == 11) and (local_var(40) == 0))) then begin
                sayString := sayString + (message_str(583, 621) + " ");
                sayString := sayString + (message_str(583, 630) + " ");
                call exchangeCaps(-local_var(12));
                set_local_var(12, 0);
            end
        end
    end
end

procedure check_Prop_d4
begin
    variable LVar0 := 0;
    LVar0 := die1 + die2;
    if (local_var(13)) then begin
        if ((die1 == 4) and (die2 == 4)) then begin
            sayString := sayString + (message_str(583, 622) + " ");
            sayString := sayString + (message_str(583, 631) + " ");
            call exchangeCaps(local_var(13) * 9);
            set_local_var(13, 0);
        end
        else begin
            if ((LVar0 == 8) or ((LVar0 == 7) or (LVar0 == 11) and (local_var(40) == 0))) then begin
                sayString := sayString + (message_str(583, 622) + " ");
                sayString := sayString + (message_str(583, 630) + " ");
                call exchangeCaps(-local_var(13));
                set_local_var(13, 0);
            end
        end
    end
end

procedure check_Prop_d5
begin
    variable LVar0 := 0;
    LVar0 := die1 + die2;
    if (local_var(14)) then begin
        if ((die1 == 5) and (die2 == 5)) then begin
            sayString := sayString + (message_str(583, 623) + " ");
            sayString := sayString + (message_str(583, 631) + " ");
            call exchangeCaps(local_var(14) * 7);
            set_local_var(14, 0);
        end
        else begin
            if ((LVar0 == 10) or ((LVar0 == 7) or (LVar0 == 11) and (local_var(40) == 0))) then begin
                sayString := sayString + (message_str(583, 623) + " ");
                sayString := sayString + (message_str(583, 630) + " ");
                call exchangeCaps(-local_var(14));
                set_local_var(14, 0);
            end
        end
    end
end

procedure check_Prop_d2
begin
    variable LVar0 := 0;
    LVar0 := die1 + die2;
    if (local_var(15)) then begin
        if ((die1 == 2) and (die2 == 2)) then begin
            sayString := sayString + (message_str(583, 624) + " ");
            sayString := sayString + (message_str(583, 631) + " ");
            call exchangeCaps(local_var(15) * 7);
            set_local_var(15, 0);
        end
        else begin
            if ((LVar0 == 4) or ((LVar0 == 7) or (LVar0 == 11) and (local_var(40) == 0))) then begin
                sayString := sayString + (message_str(583, 624) + " ");
                sayString := sayString + (message_str(583, 630) + " ");
                call exchangeCaps(-local_var(15));
                set_local_var(15, 0);
            end
        end
    end
end

procedure check_Prop_1_2
begin
    variable LVar0 := 0;
    LVar0 := die1 + die2;
    if (local_var(16)) then begin
        if (LVar0 == 3) then begin
            sayString := sayString + (message_str(583, 625) + " ");
            sayString := sayString + (message_str(583, 631) + " ");
            call exchangeCaps(local_var(16) * 15);
            set_local_var(16, 0);
        end
        else begin
            if (LVar0 != 3) then begin
                sayString := sayString + (message_str(583, 625) + " ");
                sayString := sayString + (message_str(583, 630) + " ");
                call exchangeCaps(-local_var(16));
                set_local_var(16, 0);
            end
        end
    end
end

procedure check_Prop_5_6
begin
    variable LVar0 := 0;
    LVar0 := die1 + die2;
    if (local_var(17)) then begin
        if (LVar0 == 11) then begin
            sayString := sayString + (message_str(583, 626) + " ");
            sayString := sayString + (message_str(583, 631) + " ");
            call exchangeCaps(local_var(17) * 15);
            set_local_var(17, 0);
        end
        else begin
            if (LVar0 != 11) then begin
                sayString := sayString + (message_str(583, 626) + " ");
                sayString := sayString + (message_str(583, 630) + " ");
                call exchangeCaps(-local_var(17));
                set_local_var(17, 0);
            end
        end
    end
end

procedure check_Prop_1_1
begin
    variable LVar0 := 0;
    LVar0 := die1 + die2;
    if (local_var(18)) then begin
        if (LVar0 == 2) then begin
            sayString := sayString + (message_str(583, 627) + " ");
            sayString := sayString + (message_str(583, 631) + " ");
            call exchangeCaps(local_var(18) * 30);
            set_local_var(18, 0);
        end
        else begin
            if (LVar0 != 2) then begin
                sayString := sayString + (message_str(583, 627) + " ");
                sayString := sayString + (message_str(583, 630) + " ");
                call exchangeCaps(-local_var(18));
                set_local_var(18, 0);
            end
        end
    end
end

procedure check_Prop_6_6
begin
    variable LVar0 := 0;
    LVar0 := die1 + die2;
    if (local_var(19)) then begin
        if (LVar0 == 12) then begin
            sayString := sayString + (message_str(583, 628) + " ");
            sayString := sayString + (message_str(583, 631) + " ");
            call exchangeCaps(local_var(19) * 30);
            set_local_var(19, 0);
        end
        else begin
            if (LVar0 != 12) then begin
                sayString := sayString + (message_str(583, 628) + " ");
                sayString := sayString + (message_str(583, 630) + " ");
                call exchangeCaps(-local_var(19));
                set_local_var(19, 0);
            end
        end
    end
end

procedure check_Prop_Craps
begin
    variable LVar0 := 0;
    LVar0 := die1 + die2;
    if (local_var(20)) then begin
        if ((LVar0 == 2) or (LVar0 == 3) or (LVar0 == 12)) then begin
            sayString := sayString + (message_str(583, 629) + " ");
            sayString := sayString + (message_str(583, 631) + " ");
            call exchangeCaps(local_var(20) * 7);
            set_local_var(20, 0);
        end
        else begin
            if ((LVar0 != 2) or (LVar0 != 3) or (LVar0 != 12)) then begin
                sayString := sayString + (message_str(583, 629) + " ");
                sayString := sayString + (message_str(583, 630) + " ");
                call exchangeCaps(-local_var(20));
                set_local_var(20, 0);
            end
        end
    end
end

procedure check_Place_4
begin
    variable LVar0 := 0;
    LVar0 := die1 + die2;
    if (local_var(21)) then begin
        if (LVar0 == 4) then begin
            sayString := sayString + (message_str(583, 650) + " ");
            sayString := sayString + (message_str(583, 631) + " ");
            call exchangeCaps(local_var(21) * 1.80000);
            set_local_var(21, 0);
        end
        else begin
            if (LVar0 == 7) then begin
                sayString := sayString + (message_str(583, 650) + " ");
                sayString := sayString + (message_str(583, 630) + " ");
                call exchangeCaps(-local_var(21));
                set_local_var(21, 0);
            end
        end
    end
end

procedure check_Place_5
begin
    variable LVar0 := 0;
    LVar0 := die1 + die2;
    if (local_var(22)) then begin
        if (LVar0 == 5) then begin
            sayString := sayString + (message_str(583, 651) + " ");
            sayString := sayString + (message_str(583, 631) + " ");
            call exchangeCaps(local_var(22) * 1.50000);
            set_local_var(22, 0);
        end
        else begin
            if (LVar0 == 7) then begin
                sayString := sayString + (message_str(583, 651) + " ");
                sayString := sayString + (message_str(583, 630) + " ");
                call exchangeCaps(-local_var(22));
                set_local_var(22, 0);
            end
        end
    end
end

procedure check_Place_6
begin
    variable LVar0 := 0;
    LVar0 := die1 + die2;
    if (local_var(23)) then begin
        if (LVar0 == 6) then begin
            sayString := sayString + (message_str(583, 652) + " ");
            sayString := sayString + (message_str(583, 631) + " ");
            call exchangeCaps(local_var(23) * 1.16000);
            set_local_var(23, 0);
        end
        else begin
            if (LVar0 == 7) then begin
                sayString := sayString + (message_str(583, 652) + " ");
                sayString := sayString + (message_str(583, 630) + " ");
                call exchangeCaps(-local_var(23));
                set_local_var(23, 0);
            end
        end
    end
end

procedure check_Place_8
begin
    variable LVar0 := 0;
    LVar0 := die1 + die2;
    if (local_var(24)) then begin
        if (LVar0 == 8) then begin
            sayString := sayString + (message_str(583, 653) + " ");
            sayString := sayString + (message_str(583, 631) + " ");
            call exchangeCaps(local_var(24) * 1.16000);
            set_local_var(24, 0);
        end
        else begin
            if (LVar0 == 7) then begin
                sayString := sayString + (message_str(583, 653) + " ");
                sayString := sayString + (message_str(583, 630) + " ");
                call exchangeCaps(-local_var(24));
                set_local_var(24, 0);
            end
        end
    end
end

procedure check_Place_9
begin
    variable LVar0 := 0;
    LVar0 := die1 + die2;
    if (local_var(25)) then begin
        if (LVar0 == 9) then begin
            sayString := sayString + (message_str(583, 654) + " ");
            sayString := sayString + (message_str(583, 631) + " ");
            call exchangeCaps(local_var(25) * 1.50000);
            set_local_var(25, 0);
        end
        else begin
            if (LVar0 == 7) then begin
                sayString := sayString + (message_str(583, 654) + " ");
                sayString := sayString + (message_str(583, 630) + " ");
                call exchangeCaps(-local_var(25));
                set_local_var(25, 0);
            end
        end
    end
end

procedure check_Place_10
begin
    variable LVar0 := 0;
    LVar0 := die1 + die2;
    if (local_var(26)) then begin
        if (LVar0 == 10) then begin
            sayString := sayString + (message_str(583, 655) + " ");
            sayString := sayString + (message_str(583, 631) + " ");
            call exchangeCaps(local_var(26) * 1.80000);
            set_local_var(26, 0);
        end
        else begin
            if (LVar0 == 7) then begin
                sayString := sayString + (message_str(583, 655) + " ");
                sayString := sayString + (message_str(583, 630) + " ");
                call exchangeCaps(-local_var(26));
                set_local_var(26, 0);
            end
        end
    end
end

procedure check_Field_Bet
begin
    variable LVar0 := 0;
    LVar0 := die1 + die2;
    if (local_var(27)) then begin
        if (LVar0 == 2) then begin
            sayString := sayString + (message_str(583, 660) + " ");
            call exchangeCaps(local_var(27) * 2);
        end
        else begin
            if (LVar0 == 3) then begin
                sayString := sayString + (message_str(583, 661) + " ");
                call exchangeCaps(local_var(27));
            end
            else begin
                if (LVar0 == 4) then begin
                    sayString := sayString + (message_str(583, 662) + " ");
                    call exchangeCaps(local_var(27));
                end
                else begin
                    if (LVar0 == 9) then begin
                        sayString := sayString + (message_str(583, 663) + " ");
                        call exchangeCaps(local_var(27));
                    end
                    else begin
                        if (LVar0 == 10) then begin
                            sayString := sayString + (message_str(583, 664) + " ");
                            call exchangeCaps(local_var(27));
                        end
                        else begin
                            if (LVar0 == 11) then begin
                                sayString := sayString + (message_str(583, 665) + " ");
                                call exchangeCaps(local_var(27));
                            end
                            else begin
                                if (LVar0 == 12) then begin
                                    sayString := sayString + (message_str(583, 666) + " ");
                                    call exchangeCaps(local_var(27) * 3);
                                end
                                else begin
                                    sayString := sayString + message_str(583, 667);
                                    call exchangeCaps(-local_var(27));
                                end
                            end
                        end
                    end
                end
            end
        end
        set_local_var(27, 0);
    end
end

procedure calculateOdds(variable arg0)
begin
    if ((arg0 == 4) or (arg0 == 10)) then begin
        return 2;
    end
    if ((arg0 == 5) or (arg0 == 9)) then begin
        return 1.50000;
    end
    if ((arg0 == 6) or (arg0 == 8)) then begin
        return 1.20000;
    end
end

procedure calculateDont(variable arg0)
begin
    if ((arg0 == 4) or (arg0 == 10)) then begin
        return 0.50000;
    end
    if ((arg0 == 5) or (arg0 == 9)) then begin
        return 0.66600;
    end
    if ((arg0 == 6) or (arg0 == 8)) then begin
        return 0.83300;
    end
end

procedure check_Num_4
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    LVar0 := die1 + die2;
    if (local_var(28)) then begin
        if (local_var(28) bwand --2147483648) then begin
            local_var(28);
            LVar2 := --2147483648;
            LVar1 := 1;
        end
        else begin
            LVar2 := local_var(28);
            LVar1 := 0;
        end
        if (LVar0 == 4) then begin
            if (local_var(40)) then begin
                if (LVar1 == 0) then begin
                    sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 670) + " " + message_str(583, 631) + " ");
                    call exchangeCaps(LVar2);
                    if (local_var(34)) then begin
                        sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 680) + " " + message_str(583, 631) + " ");
                        call exchangeCaps(local_var(34) * calculateOdds(4));
                    end
                end
                else begin
                    sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 670) + " " + message_str(583, 630) + " ");
                    call exchangeCaps(-LVar2);
                    if (local_var(34)) then begin
                        sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 680) + " " + message_str(583, 630) + " ");
                        call exchangeCaps(-local_var(34));
                    end
                end
            end
            else begin
                if (LVar1 == 0) then begin
                    sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 670) + " " + message_str(583, 631) + " ");
                    call exchangeCaps(LVar2);
                    if (local_var(34)) then begin
                        sayString := sayString + (message_str(583, 701) + message_str(583, 680) + " " + message_str(583, 700) + " ");
                    end
                end
                else begin
                    sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 670) + " " + message_str(583, 630) + " ");
                    call exchangeCaps(-LVar2);
                    if (local_var(34)) then begin
                        sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 680) + " " + message_str(583, 700) + " ");
                    end
                end
            end
            if (local_var(40) == LVar0) then begin
                debug_msg("ZCCRPDEL: uhh removing point: " + local_var(40) + " total " + LVar0);
                removePoint := 1;
            end
            set_local_var(28, 0);
            set_local_var(34, 0);
        end
        else begin
            if (LVar0 == 7) then begin
                if (local_var(40)) then begin
                    if (LVar1 == 0) then begin
                        sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 670) + " " + message_str(583, 630) + " ");
                        call exchangeCaps(-LVar2);
                        if (local_var(34)) then begin
                            sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 680) + " " + message_str(583, 630) + " ");
                            call exchangeCaps(-local_var(34));
                        end
                    end
                    else begin
                        sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 670) + " " + message_str(583, 631) + " ");
                        call exchangeCaps(LVar2);
                        if (local_var(34)) then begin
                            sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 680) + " " + message_str(583, 631) + " ");
                            call exchangeCaps(local_var(34) * calculateDont(4));
                        end
                    end
                end
                else begin
                    if (LVar1 == 0) then begin
                        sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 670) + " " + message_str(583, 630) + " ");
                        call exchangeCaps(-LVar2);
                        if (local_var(34)) then begin
                            sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 680) + " " + message_str(583, 700) + " ");
                        end
                    end
                    else begin
                        sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 670) + " " + message_str(583, 631) + " ");
                        call exchangeCaps(LVar2);
                        if (local_var(34)) then begin
                            sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 680) + " " + message_str(583, 702) + " ");
                        end
                    end
                end
                removePoint := 1;
                set_local_var(28, 0);
                set_local_var(34, 0);
            end
        end
    end
end

procedure check_Num_5
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    LVar0 := die1 + die2;
    if (local_var(29)) then begin
        if (local_var(29) bwand --2147483648) then begin
            local_var(29);
            LVar2 := --2147483648;
            LVar1 := 1;
        end
        else begin
            LVar2 := local_var(29);
            LVar1 := 0;
        end
        if (LVar0 == 5) then begin
            if (local_var(40)) then begin
                if (LVar1 == 0) then begin
                    sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 671) + " " + message_str(583, 631) + " ");
                    call exchangeCaps(LVar2);
                    if (local_var(35)) then begin
                        sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 681) + " " + message_str(583, 631) + " ");
                        call exchangeCaps(local_var(35) * calculateOdds(5));
                    end
                end
                else begin
                    sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 671) + " " + message_str(583, 630) + " ");
                    call exchangeCaps(-LVar2);
                    if (local_var(35)) then begin
                        sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 681) + " " + message_str(583, 630) + " ");
                        call exchangeCaps(-local_var(35));
                    end
                end
            end
            else begin
                if (LVar1 == 0) then begin
                    sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 671) + " " + message_str(583, 631) + " ");
                    call exchangeCaps(LVar2);
                    if (local_var(35)) then begin
                        sayString := sayString + (message_str(583, 701) + message_str(583, 681) + " " + message_str(583, 700) + " ");
                    end
                end
                else begin
                    sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 671) + " " + message_str(583, 630) + " ");
                    call exchangeCaps(-LVar2);
                    if (local_var(35)) then begin
                        sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 681) + " " + message_str(583, 700) + " ");
                    end
                end
            end
            if (local_var(40) == LVar0) then begin
                debug_msg("ZCCRPDEL: uhh removing point: " + local_var(40) + " total " + LVar0);
                removePoint := 1;
            end
            set_local_var(29, 0);
            set_local_var(35, 0);
        end
        else begin
            if (LVar0 == 7) then begin
                if (local_var(40)) then begin
                    if (LVar1 == 0) then begin
                        sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 671) + " " + message_str(583, 630) + " ");
                        call exchangeCaps(-LVar2);
                        if (local_var(35)) then begin
                            sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 681) + " " + message_str(583, 630) + " ");
                            call exchangeCaps(-local_var(35));
                        end
                    end
                    else begin
                        sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 671) + " " + message_str(583, 631) + " ");
                        call exchangeCaps(LVar2);
                        if (local_var(35)) then begin
                            sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 681) + " " + message_str(583, 631) + " ");
                            call exchangeCaps(local_var(35) * calculateDont(5));
                        end
                    end
                end
                else begin
                    if (LVar1 == 0) then begin
                        sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 671) + " " + message_str(583, 630) + " ");
                        call exchangeCaps(-LVar2);
                        if (local_var(35)) then begin
                            sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 681) + " " + message_str(583, 700) + " ");
                        end
                    end
                    else begin
                        sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 671) + " " + message_str(583, 631) + " ");
                        call exchangeCaps(LVar2);
                        if (local_var(35)) then begin
                            sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 681) + " " + message_str(583, 702) + " ");
                        end
                    end
                end
                removePoint := 1;
                set_local_var(29, 0);
                set_local_var(35, 0);
            end
        end
    end
end

procedure check_Num_6
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    LVar0 := die1 + die2;
    if (local_var(30)) then begin
        if (local_var(30) bwand --2147483648) then begin
            local_var(30);
            LVar2 := --2147483648;
            LVar1 := 1;
        end
        else begin
            LVar2 := local_var(30);
            LVar1 := 0;
        end
        if (LVar0 == 6) then begin
            if (local_var(40)) then begin
                if (LVar1 == 0) then begin
                    sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 672) + " " + message_str(583, 631) + " ");
                    call exchangeCaps(LVar2);
                    if (local_var(36)) then begin
                        sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 682) + " " + message_str(583, 631) + " ");
                        call exchangeCaps(local_var(36) * calculateOdds(6));
                    end
                end
                else begin
                    sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 672) + " " + message_str(583, 630) + " ");
                    call exchangeCaps(-LVar2);
                    if (local_var(36)) then begin
                        sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 682) + " " + message_str(583, 630) + " ");
                        call exchangeCaps(-local_var(36));
                    end
                end
            end
            else begin
                if (LVar1 == 0) then begin
                    sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 672) + " " + message_str(583, 631) + " ");
                    call exchangeCaps(LVar2);
                    if (local_var(36)) then begin
                        sayString := sayString + (message_str(583, 701) + message_str(583, 682) + " " + message_str(583, 700) + " ");
                    end
                end
                else begin
                    sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 672) + " " + message_str(583, 630) + " ");
                    call exchangeCaps(-LVar2);
                    if (local_var(36)) then begin
                        sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 682) + " " + message_str(583, 700) + " ");
                    end
                end
            end
            if (local_var(40) == LVar0) then begin
                debug_msg("ZCCRPDEL: uhh removing point: " + local_var(40) + " total " + LVar0);
                removePoint := 1;
            end
            set_local_var(30, 0);
            set_local_var(36, 0);
        end
        else begin
            if (LVar0 == 7) then begin
                if (local_var(40)) then begin
                    if (LVar1 == 0) then begin
                        sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 672) + " " + message_str(583, 630) + " ");
                        call exchangeCaps(-LVar2);
                        if (local_var(36)) then begin
                            sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 682) + " " + message_str(583, 630) + " ");
                            call exchangeCaps(-local_var(36));
                        end
                    end
                    else begin
                        sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 672) + " " + message_str(583, 631) + " ");
                        call exchangeCaps(LVar2);
                        if (local_var(36)) then begin
                            sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 682) + " " + message_str(583, 631) + " ");
                            call exchangeCaps(local_var(36) * calculateDont(6));
                        end
                    end
                end
                else begin
                    if (LVar1 == 0) then begin
                        sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 672) + " " + message_str(583, 630) + " ");
                        call exchangeCaps(-LVar2);
                        if (local_var(36)) then begin
                            sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 682) + " " + message_str(583, 700) + " ");
                        end
                    end
                    else begin
                        sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 672) + " " + message_str(583, 631) + " ");
                        call exchangeCaps(LVar2);
                        if (local_var(36)) then begin
                            sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 682) + " " + message_str(583, 702) + " ");
                        end
                    end
                end
                removePoint := 1;
                set_local_var(30, 0);
                set_local_var(36, 0);
            end
        end
    end
end

procedure check_Num_8
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    LVar0 := die1 + die2;
    if (local_var(31)) then begin
        if (local_var(31) bwand --2147483648) then begin
            local_var(31);
            LVar2 := --2147483648;
            LVar1 := 1;
        end
        else begin
            LVar2 := local_var(31);
            LVar1 := 0;
        end
        if (LVar0 == 8) then begin
            if (local_var(40)) then begin
                if (LVar1 == 0) then begin
                    sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 673) + " " + message_str(583, 631) + " ");
                    call exchangeCaps(LVar2);
                    if (local_var(37)) then begin
                        sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 683) + " " + message_str(583, 631) + " ");
                        call exchangeCaps(local_var(37) * calculateOdds(8));
                    end
                end
                else begin
                    sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 673) + " " + message_str(583, 630) + " ");
                    call exchangeCaps(-LVar2);
                    if (local_var(37)) then begin
                        sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 683) + " " + message_str(583, 630) + " ");
                        call exchangeCaps(-local_var(37));
                    end
                end
            end
            else begin
                if (LVar1 == 0) then begin
                    sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 673) + " " + message_str(583, 631) + " ");
                    call exchangeCaps(LVar2);
                    if (local_var(37)) then begin
                        sayString := sayString + (message_str(583, 701) + message_str(583, 683) + " " + message_str(583, 700) + " ");
                    end
                end
                else begin
                    sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 673) + " " + message_str(583, 630) + " ");
                    call exchangeCaps(-LVar2);
                    if (local_var(37)) then begin
                        sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 683) + " " + message_str(583, 700) + " ");
                    end
                end
            end
            if (local_var(40) == LVar0) then begin
                debug_msg("ZCCRPDEL: uhh removing point: " + local_var(40) + " total " + LVar0);
                removePoint := 1;
            end
            set_local_var(31, 0);
            set_local_var(37, 0);
        end
        else begin
            if (LVar0 == 7) then begin
                if (local_var(40)) then begin
                    if (LVar1 == 0) then begin
                        sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 673) + " " + message_str(583, 630) + " ");
                        call exchangeCaps(-LVar2);
                        if (local_var(37)) then begin
                            sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 683) + " " + message_str(583, 630) + " ");
                            call exchangeCaps(-local_var(37));
                        end
                    end
                    else begin
                        sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 673) + " " + message_str(583, 631) + " ");
                        call exchangeCaps(LVar2);
                        if (local_var(37)) then begin
                            sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 683) + " " + message_str(583, 631) + " ");
                            call exchangeCaps(local_var(37) * calculateDont(8));
                        end
                    end
                end
                else begin
                    if (LVar1 == 0) then begin
                        sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 673) + " " + message_str(583, 630) + " ");
                        call exchangeCaps(-LVar2);
                        if (local_var(37)) then begin
                            sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 683) + " " + message_str(583, 700) + " ");
                        end
                    end
                    else begin
                        sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 673) + " " + message_str(583, 631) + " ");
                        call exchangeCaps(LVar2);
                        if (local_var(37)) then begin
                            sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 683) + " " + message_str(583, 702) + " ");
                        end
                    end
                end
                removePoint := 1;
                set_local_var(31, 0);
                set_local_var(37, 0);
            end
        end
    end
end

procedure check_Num_9
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    LVar0 := die1 + die2;
    if (local_var(32)) then begin
        if (local_var(32) bwand --2147483648) then begin
            local_var(32);
            LVar2 := --2147483648;
            LVar1 := 1;
        end
        else begin
            LVar2 := local_var(32);
            LVar1 := 0;
        end
        if (LVar0 == 9) then begin
            if (local_var(40)) then begin
                if (LVar1 == 0) then begin
                    sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 674) + " " + message_str(583, 631) + " ");
                    call exchangeCaps(LVar2);
                    if (local_var(38)) then begin
                        sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 684) + " " + message_str(583, 631) + " ");
                        call exchangeCaps(local_var(38) * calculateOdds(9));
                    end
                end
                else begin
                    sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 674) + " " + message_str(583, 630) + " ");
                    call exchangeCaps(-LVar2);
                    if (local_var(38)) then begin
                        sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 684) + " " + message_str(583, 630) + " ");
                        call exchangeCaps(-local_var(38));
                    end
                end
            end
            else begin
                if (LVar1 == 0) then begin
                    sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 674) + " " + message_str(583, 631) + " ");
                    call exchangeCaps(LVar2);
                    if (local_var(38)) then begin
                        sayString := sayString + (message_str(583, 701) + message_str(583, 684) + " " + message_str(583, 700) + " ");
                    end
                end
                else begin
                    sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 674) + " " + message_str(583, 630) + " ");
                    call exchangeCaps(-LVar2);
                    if (local_var(38)) then begin
                        sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 684) + " " + message_str(583, 700) + " ");
                    end
                end
            end
            if (local_var(40) == LVar0) then begin
                debug_msg("ZCCRPDEL: uhh removing point: " + local_var(40) + " total " + LVar0);
                removePoint := 1;
            end
            set_local_var(32, 0);
            set_local_var(38, 0);
        end
        else begin
            if (LVar0 == 7) then begin
                if (local_var(40)) then begin
                    if (LVar1 == 0) then begin
                        sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 674) + " " + message_str(583, 630) + " ");
                        call exchangeCaps(-LVar2);
                        if (local_var(38)) then begin
                            sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 684) + " " + message_str(583, 630) + " ");
                            call exchangeCaps(-local_var(38));
                        end
                    end
                    else begin
                        sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 674) + " " + message_str(583, 631) + " ");
                        call exchangeCaps(LVar2);
                        if (local_var(38)) then begin
                            sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 684) + " " + message_str(583, 631) + " ");
                            call exchangeCaps(local_var(38) * calculateDont(9));
                        end
                    end
                end
                else begin
                    if (LVar1 == 0) then begin
                        sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 674) + " " + message_str(583, 630) + " ");
                        call exchangeCaps(-LVar2);
                        if (local_var(38)) then begin
                            sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 684) + " " + message_str(583, 700) + " ");
                        end
                    end
                    else begin
                        sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 674) + " " + message_str(583, 631) + " ");
                        call exchangeCaps(LVar2);
                        if (local_var(38)) then begin
                            sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 684) + " " + message_str(583, 702) + " ");
                        end
                    end
                end
                removePoint := 1;
                set_local_var(32, 0);
                set_local_var(38, 0);
            end
        end
    end
end

procedure check_Num_10
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    variable LVar2 := 0;
    LVar0 := die1 + die2;
    if (local_var(33)) then begin
        if (local_var(33) bwand --2147483648) then begin
            local_var(33);
            LVar2 := --2147483648;
            LVar1 := 1;
        end
        else begin
            LVar2 := local_var(33);
            LVar1 := 0;
        end
        if (LVar0 == 10) then begin
            if (local_var(40)) then begin
                if (LVar1 == 0) then begin
                    sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 675) + " " + message_str(583, 631) + " ");
                    call exchangeCaps(LVar2);
                    if (local_var(39)) then begin
                        sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 685) + " " + message_str(583, 631) + " ");
                        call exchangeCaps(local_var(39) * calculateOdds(10));
                    end
                end
                else begin
                    sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 675) + " " + message_str(583, 630) + " ");
                    call exchangeCaps(-LVar2);
                    if (local_var(39)) then begin
                        sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 685) + " " + message_str(583, 630) + " ");
                        call exchangeCaps(-local_var(39));
                    end
                end
            end
            else begin
                if (LVar1 == 0) then begin
                    sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 675) + " " + message_str(583, 631) + " ");
                    call exchangeCaps(LVar2);
                    if (local_var(39)) then begin
                        sayString := sayString + (message_str(583, 701) + message_str(583, 685) + " " + message_str(583, 700) + " ");
                    end
                end
                else begin
                    sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 675) + " " + message_str(583, 630) + " ");
                    call exchangeCaps(-LVar2);
                    if (local_var(39)) then begin
                        sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 685) + " " + message_str(583, 700) + " ");
                    end
                end
            end
            if (local_var(40) == LVar0) then begin
                debug_msg("ZCCRPDEL: uhh removing point: " + local_var(40) + " total " + LVar0);
                removePoint := 1;
            end
            set_local_var(33, 0);
            set_local_var(39, 0);
        end
        else begin
            if (LVar0 == 7) then begin
                if (local_var(40)) then begin
                    if (LVar1 == 0) then begin
                        sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 675) + " " + message_str(583, 630) + " ");
                        call exchangeCaps(-LVar2);
                        if (local_var(39)) then begin
                            sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 685) + " " + message_str(583, 630) + " ");
                            call exchangeCaps(-local_var(39));
                        end
                    end
                    else begin
                        sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 675) + " " + message_str(583, 631) + " ");
                        call exchangeCaps(LVar2);
                        if (local_var(39)) then begin
                            sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 685) + " " + message_str(583, 631) + " ");
                            call exchangeCaps(local_var(39) * calculateDont(10));
                        end
                    end
                end
                else begin
                    if (LVar1 == 0) then begin
                        sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 675) + " " + message_str(583, 630) + " ");
                        call exchangeCaps(-LVar2);
                        if (local_var(39)) then begin
                            sayString := sayString + (message_str(583, 701) + ":" + message_str(583, 685) + " " + message_str(583, 700) + " ");
                        end
                    end
                    else begin
                        sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 675) + " " + message_str(583, 631) + " ");
                        call exchangeCaps(LVar2);
                        if (local_var(39)) then begin
                            sayString := sayString + (message_str(583, 702) + ":" + message_str(583, 685) + " " + message_str(583, 702) + " ");
                        end
                    end
                end
                removePoint := 1;
                set_local_var(33, 0);
                set_local_var(39, 0);
            end
        end
    end
end

procedure checkPoint
begin
    if (removePoint) then begin
        removePoint := 0;
        set_local_var(40, 0);
    end
    if (local_var(40)) then begin
        sayString := sayString + (message_str(583, 109) + " " + local_var(40) + " ");
    end
    else begin
        sayString := sayString + (message_str(583, 714) + " ");
    end
end

procedure NodePayOff
begin
    call check_Prop_7();
    call check_Prop_d3();
    call check_Prop_d4();
    call check_Prop_d5();
    call check_Prop_d2();
    call check_Prop_1_2();
    call check_Prop_5_6();
    call check_Prop_1_1();
    call check_Prop_6_6();
    call check_Prop_Craps();
    call check_Place_4();
    call check_Place_5();
    call check_Place_6();
    call check_Place_8();
    call check_Place_9();
    call check_Place_10();
    call check_Field_Bet();
    call check_Num_4();
    call check_Num_5();
    call check_Num_6();
    call check_Num_8();
    call check_Num_9();
    call check_Num_10();
    call check_Pass_Line();
    call check_Dont_Pass_Line();
    call check_Come_Line();
    call check_Dont_Come_Line();
    call checkPoint();
    gsay_reply(583, sayString);
    giq_option(1, 583, message_str(14, 352), Node001, 50);
end

procedure superRandom(variable arg0, variable arg1)
begin
    variable LVar2 := 0;
    variable LVar3 := 0;
    variable LVar4 := 0;
    variable LVar5 := 0;
    LVar2 := random(25, 55);
    LVar5 := random(arg0, arg1);
    while (LVar3 < LVar2) do begin
        LVar5 := random(arg0, arg1);
        if (random(0, 1)) then begin
            LVar4 := LVar5;
        end
        LVar3 := LVar3 + 1;
    end
    return LVar4;
end

procedure NodeRoll
begin
    if (local_var(41) > item_caps_total(dude_obj)) then begin
        gsay_reply(583, message_str(583, 154) + local_var(41));
        giq_option(0, 583, message_str(14, 352), Node001, 50);
    end
    else begin
        play_sfx("dice");
        die1 := superRandom(1, 6);
        die2 := superRandom(1, 6);
        gsay_reply(583, message_str(583, 710) + " " + die1 + " " + message_str(583, 711) + " " + die2);
        giq_option(1, 583, message_str(14, 352), NodePayOff, 50);
    end
end

procedure NOdds04
begin
    set_local_var(getOddsVar(4), local_var(getNumVar(4)) * 0);
    call Node001();
end

procedure NOdds14
begin
    set_local_var(getOddsVar(4), local_var(getNumVar(4)) * 1);
    call Node001();
end

procedure NOdds24
begin
    set_local_var(getOddsVar(4), local_var(getNumVar(4)) * 2);
    call Node001();
end

procedure NOdds34
begin
    set_local_var(getOddsVar(4), local_var(getNumVar(4)) * 3);
    call Node001();
end

procedure NOdds05
begin
    set_local_var(getOddsVar(5), local_var(getNumVar(5)) * 0);
    call Node001();
end

procedure NOdds15
begin
    set_local_var(getOddsVar(5), local_var(getNumVar(5)) * 1);
    call Node001();
end

procedure NOdds25
begin
    set_local_var(getOddsVar(5), local_var(getNumVar(5)) * 2);
    call Node001();
end

procedure NOdds35
begin
    set_local_var(getOddsVar(5), local_var(getNumVar(5)) * 3);
    call Node001();
end

procedure NOdds06
begin
    set_local_var(getOddsVar(6), local_var(getNumVar(6)) * 0);
    call Node001();
end

procedure NOdds16
begin
    set_local_var(getOddsVar(6), local_var(getNumVar(6)) * 1);
    call Node001();
end

procedure NOdds26
begin
    set_local_var(getOddsVar(6), local_var(getNumVar(6)) * 2);
    call Node001();
end

procedure NOdds36
begin
    set_local_var(getOddsVar(6), local_var(getNumVar(6)) * 3);
    call Node001();
end

procedure NOdds08
begin
    set_local_var(getOddsVar(8), local_var(getNumVar(8)) * 0);
    call Node001();
end

procedure NOdds18
begin
    set_local_var(getOddsVar(8), local_var(getNumVar(8)) * 1);
    call Node001();
end

procedure NOdds28
begin
    set_local_var(getOddsVar(8), local_var(getNumVar(8)) * 2);
    call Node001();
end

procedure NOdds38
begin
    set_local_var(getOddsVar(8), local_var(getNumVar(8)) * 3);
    call Node001();
end

procedure NOdds09
begin
    set_local_var(getOddsVar(9), local_var(getNumVar(9)) * 0);
    call Node001();
end

procedure NOdds19
begin
    set_local_var(getOddsVar(9), local_var(getNumVar(9)) * 1);
    call Node001();
end

procedure NOdds29
begin
    set_local_var(getOddsVar(9), local_var(getNumVar(9)) * 2);
    call Node001();
end

procedure NOdds39
begin
    set_local_var(getOddsVar(9), local_var(getNumVar(9)) * 3);
    call Node001();
end

procedure NOdds010
begin
    set_local_var(getOddsVar(10), local_var(getNumVar(10)) * 0);
    call Node001();
end

procedure NOdds110
begin
    set_local_var(getOddsVar(10), local_var(getNumVar(10)) * 1);
    call Node001();
end

procedure NOdds210
begin
    set_local_var(getOddsVar(10), local_var(getNumVar(10)) * 2);
    call Node001();
end

procedure NOdds310
begin
    set_local_var(getOddsVar(10), local_var(getNumVar(10)) * 3);
    call Node001();
end

procedure NodeOdds4
begin
    variable LVar0 := 0;
    variable LVar1 := 1;
    variable LVar2 := 2;
    variable LVar3 := 3;
    LVar1 := local_var(getNumVar(4)) * 1;
    LVar2 := local_var(getNumVar(4)) * 2;
    LVar3 := local_var(getNumVar(4)) * 3;
    LVar0 := local_var(getOddsVar(4));
    gsay_reply(583, message_str(583, 801) + 4 + " " + message_str(583, 803) + LVar0);
    giq_option(1, 583, "0" + message_str(583, 802) + ". (0)", NOdds04, 50);
    giq_option(1, 583, 1 + message_str(583, 802) + ". (" + LVar1 + ")", NOdds14, 50);
    giq_option(1, 583, 2 + message_str(583, 802) + ". (" + LVar2 + ")", NOdds24, 50);
    giq_option(1, 583, 3 + message_str(583, 802) + ". (" + LVar3 + ")", NOdds34, 50);
    giq_option(1, 583, 713, Node001, 50);
end

procedure NodeOdds5
begin
    variable LVar0 := 0;
    variable LVar1 := 1;
    variable LVar2 := 2;
    variable LVar3 := 3;
    LVar1 := local_var(getNumVar(5)) * 1;
    LVar2 := local_var(getNumVar(5)) * 2;
    LVar3 := local_var(getNumVar(5)) * 3;
    LVar0 := local_var(getOddsVar(5));
    gsay_reply(583, message_str(583, 801) + 5 + " " + message_str(583, 803) + LVar0);
    giq_option(1, 583, "0" + message_str(583, 802) + ". (0)", NOdds05, 50);
    giq_option(1, 583, 1 + message_str(583, 802) + ". (" + LVar1 + ")", NOdds15, 50);
    giq_option(1, 583, 2 + message_str(583, 802) + ". (" + LVar2 + ")", NOdds25, 50);
    giq_option(1, 583, 3 + message_str(583, 802) + ". (" + LVar3 + ")", NOdds35, 50);
    giq_option(1, 583, 713, Node001, 50);
end

procedure NodeOdds6
begin
    variable LVar0 := 0;
    variable LVar1 := 1;
    variable LVar2 := 2;
    variable LVar3 := 3;
    LVar1 := local_var(getNumVar(6)) * 1;
    LVar2 := local_var(getNumVar(6)) * 2;
    LVar3 := local_var(getNumVar(6)) * 3;
    LVar0 := local_var(getOddsVar(6));
    gsay_reply(583, message_str(583, 801) + 6 + " " + message_str(583, 803) + LVar0);
    giq_option(1, 583, "0" + message_str(583, 802) + ". (0)", NOdds06, 50);
    giq_option(1, 583, 1 + message_str(583, 802) + ". (" + LVar1 + ")", NOdds16, 50);
    giq_option(1, 583, 2 + message_str(583, 802) + ". (" + LVar2 + ")", NOdds26, 50);
    giq_option(1, 583, 3 + message_str(583, 802) + ". (" + LVar3 + ")", NOdds36, 50);
    giq_option(1, 583, 713, Node001, 50);
end

procedure NodeOdds8
begin
    variable LVar0 := 0;
    variable LVar1 := 1;
    variable LVar2 := 2;
    variable LVar3 := 3;
    LVar1 := local_var(getNumVar(8)) * 1;
    LVar2 := local_var(getNumVar(8)) * 2;
    LVar3 := local_var(getNumVar(8)) * 3;
    LVar0 := local_var(getOddsVar(8));
    gsay_reply(583, message_str(583, 801) + 8 + " " + message_str(583, 803) + LVar0);
    giq_option(1, 583, "0" + message_str(583, 802) + ". (0)", NOdds08, 50);
    giq_option(1, 583, 1 + message_str(583, 802) + ". (" + LVar1 + ")", NOdds18, 50);
    giq_option(1, 583, 2 + message_str(583, 802) + ". (" + LVar2 + ")", NOdds28, 50);
    giq_option(1, 583, 3 + message_str(583, 802) + ". (" + LVar3 + ")", NOdds38, 50);
    giq_option(1, 583, 713, Node001, 50);
end

procedure NodeOdds9
begin
    variable LVar0 := 0;
    variable LVar1 := 1;
    variable LVar2 := 2;
    variable LVar3 := 3;
    LVar1 := local_var(getNumVar(9)) * 1;
    LVar2 := local_var(getNumVar(9)) * 2;
    LVar3 := local_var(getNumVar(9)) * 3;
    LVar0 := local_var(getOddsVar(9));
    gsay_reply(583, message_str(583, 801) + 9 + " " + message_str(583, 803) + LVar0);
    giq_option(1, 583, "0" + message_str(583, 802) + ". (0)", NOdds09, 50);
    giq_option(1, 583, 1 + message_str(583, 802) + ". (" + LVar1 + ")", NOdds19, 50);
    giq_option(1, 583, 2 + message_str(583, 802) + ". (" + LVar2 + ")", NOdds29, 50);
    giq_option(1, 583, 3 + message_str(583, 802) + ". (" + LVar3 + ")", NOdds39, 50);
    giq_option(1, 583, 713, Node001, 50);
end

procedure NodeOdds10
begin
    variable LVar0 := 0;
    variable LVar1 := 1;
    variable LVar2 := 2;
    variable LVar3 := 3;
    LVar1 := local_var(getNumVar(10)) * 1;
    LVar2 := local_var(getNumVar(10)) * 2;
    LVar3 := local_var(getNumVar(10)) * 3;
    LVar0 := local_var(getOddsVar(10));
    gsay_reply(583, message_str(583, 801) + 10 + " " + message_str(583, 803) + LVar0);
    giq_option(1, 583, "0" + message_str(583, 802) + ". (0)", NOdds010, 50);
    giq_option(1, 583, 1 + message_str(583, 802) + ". (" + LVar1 + ")", NOdds110, 50);
    giq_option(1, 583, 2 + message_str(583, 802) + ". (" + LVar2 + ")", NOdds210, 50);
    giq_option(1, 583, 3 + message_str(583, 802) + ". (" + LVar3 + ")", NOdds310, 50);
    giq_option(1, 583, 713, Node001, 50);
end

procedure NodeOdds
begin
    debug_msg("got to node odds");
    gsay_reply(583, 810);
    if (local_var(28)) then begin
        giq_option(1, 583, 804, NodeOdds4, 50);
    end
    if (local_var(29)) then begin
        giq_option(1, 583, 805, NodeOdds5, 50);
    end
    if (local_var(30)) then begin
        giq_option(1, 583, 806, NodeOdds6, 50);
    end
    if (local_var(31)) then begin
        giq_option(1, 583, 807, NodeOdds8, 50);
    end
    if (local_var(32)) then begin
        giq_option(1, 583, 808, NodeOdds9, 50);
    end
    if (local_var(33)) then begin
        giq_option(1, 583, 809, NodeOdds10, 50);
    end
    giq_option(1, 583, 713, Node001, 50);
end

