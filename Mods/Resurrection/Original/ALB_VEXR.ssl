variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);

export variable Map_event;
export variable Police_obj;
export variable Vex_obj;

variable sequence;
variable vex;
variable policista;
variable david;
variable capbag;

procedure start;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure map_exit_p_proc;
procedure timed_event_p_proc;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777293) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777293)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
    Map_event := self_obj;
end

procedure map_enter_p_proc
begin
    if (not(metarule(22, 0))) then begin
        set_global_var(910, global_var(910) bwor 32768);
        game_time_advance(6 * (60 * (60 * 10)));
        vex := tile_contains_pid_obj(19736, 0, 16777921);
        policista := tile_contains_pid_obj(18520, 0, 16777752);
        david := tile_contains_pid_obj(19532, 0, 16778056);
        add_timer_event(self_obj, game_ticks(0), 1);
    end
    if ((get_month >= 3) and (get_month < 5)) then begin
        if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
            set_light_level(game_time_hour - 600 + 40);
        end
        else begin
            if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                set_light_level(100);
            end
            else begin
                if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                    set_light_level(100 - (game_time_hour - 1800));
                end
                else begin
                    set_light_level(40);
                end
            end
        end
    end
    else begin
        if ((get_month >= 5) and (get_month < 9)) then begin
            if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                set_light_level(game_time_hour - 500 + 40);
            end
            else begin
                if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1900));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 9) and (get_month < 11)) then begin
                if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                    set_light_level(game_time_hour - 600 + 40);
                end
                else begin
                    if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1800));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                    set_light_level(game_time_hour - 700 + 40);
                end
                else begin
                    if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1700));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
        end
    end
end

procedure map_update_p_proc
begin
    if ((get_month >= 3) and (get_month < 5)) then begin
        if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
            set_light_level(game_time_hour - 600 + 40);
        end
        else begin
            if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                set_light_level(100);
            end
            else begin
                if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                    set_light_level(100 - (game_time_hour - 1800));
                end
                else begin
                    set_light_level(40);
                end
            end
        end
    end
    else begin
        if ((get_month >= 5) and (get_month < 9)) then begin
            if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                set_light_level(game_time_hour - 500 + 40);
            end
            else begin
                if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1900));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 9) and (get_month < 11)) then begin
                if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                    set_light_level(game_time_hour - 600 + 40);
                end
                else begin
                    if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1800));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                    set_light_level(game_time_hour - 700 + 40);
                end
                else begin
                    if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1700));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
        end
    end
end

procedure map_exit_p_proc
begin
    script_overrides;
    load_map(21, 0);
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if (fixed_param == 1) then begin
            sequence := sequence + 1;
        end
        if (sequence == 1) then begin
            move_to(dude_obj, 20336, elevation(self_obj));
            anim(dude_obj, 1000, 0);
            if (party_member_obj(16777729) != 0) then begin
                if (party_member_obj(16777729) != 0) then begin
                    if (has_trait(1, party_member_obj(16777729), 666)) then begin
                        critter_attempt_placement(party_member_obj(16777729), tile_num_in_direction(tile_num(dude_obj), (has_trait(1, dude_obj, 10) + 3) % 6, 3), elevation(dude_obj));
                    end
                end
            end
            if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
                if (party_member_obj(16777779) != 0) then begin
                    if (has_trait(1, party_member_obj(16777779), 666)) then begin
                        critter_attempt_placement(party_member_obj(16777779), tile_num_in_direction(tile_num(dude_obj), (has_trait(1, dude_obj, 10) + 3) % 6, 3), elevation(dude_obj));
                    end
                end
            end
            if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
                if (party_member_obj(16777811) != 0) then begin
                    if (has_trait(1, party_member_obj(16777811), 666)) then begin
                        critter_attempt_placement(party_member_obj(16777811), tile_num_in_direction(tile_num(dude_obj), (has_trait(1, dude_obj, 10) + 3) % 6, 3), elevation(dude_obj));
                    end
                end
            end
            if (party_member_obj(16777812) != 0) then begin
                if (party_member_obj(16777812) != 0) then begin
                    if (has_trait(1, party_member_obj(16777812), 666)) then begin
                        critter_attempt_placement(party_member_obj(16777812), tile_num_in_direction(tile_num(dude_obj), (has_trait(1, dude_obj, 10) + 3) % 6, 3), elevation(dude_obj));
                    end
                end
            end
            if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
                if (party_member_obj(16777814) != 0) then begin
                    if (has_trait(1, party_member_obj(16777814), 666)) then begin
                        critter_attempt_placement(party_member_obj(16777814), tile_num_in_direction(tile_num(dude_obj), (has_trait(1, dude_obj, 10) + 3) % 6, 3), elevation(dude_obj));
                    end
                end
            end
            if (party_member_obj(16777748) != 0) then begin
                if (party_member_obj(16777748) != 0) then begin
                    if (has_trait(1, party_member_obj(16777748), 666)) then begin
                        critter_attempt_placement(party_member_obj(16777748), tile_num_in_direction(tile_num(dude_obj), (has_trait(1, dude_obj, 10) + 3) % 6, 3), elevation(dude_obj));
                    end
                end
            end
            if (party_member_obj(16778017) != 0) then begin
                if (party_member_obj(16778017) != 0) then begin
                    if (has_trait(1, party_member_obj(16778017), 666)) then begin
                        critter_attempt_placement(party_member_obj(16778017), tile_num_in_direction(tile_num(dude_obj), (has_trait(1, dude_obj, 10) + 3) % 6, 3), elevation(dude_obj));
                    end
                end
            end
            if (party_member_obj(16778016) != 0) then begin
                if (party_member_obj(16778016) != 0) then begin
                    if (has_trait(1, party_member_obj(16778016), 666)) then begin
                        critter_attempt_placement(party_member_obj(16778016), tile_num_in_direction(tile_num(dude_obj), (has_trait(1, dude_obj, 10) + 3) % 6, 3), elevation(dude_obj));
                    end
                end
            end
            if (party_member_obj(16778049) != 0) then begin
                if (party_member_obj(16778049) != 0) then begin
                    if (has_trait(1, party_member_obj(16778049), 666)) then begin
                        critter_attempt_placement(party_member_obj(16778049), tile_num_in_direction(tile_num(dude_obj), (has_trait(1, dude_obj, 10) + 3) % 6, 3), elevation(dude_obj));
                    end
                end
            end
            if (party_member_obj(16778050) != 0) then begin
                if (party_member_obj(16778050) != 0) then begin
                    if (has_trait(1, party_member_obj(16778050), 666)) then begin
                        critter_attempt_placement(party_member_obj(16778050), tile_num_in_direction(tile_num(dude_obj), (has_trait(1, dude_obj, 10) + 3) % 6, 3), elevation(dude_obj));
                    end
                end
            end
            if (party_member_obj(16778051) != 0) then begin
                if (party_member_obj(16778051) != 0) then begin
                    if (has_trait(1, party_member_obj(16778051), 666)) then begin
                        critter_attempt_placement(party_member_obj(16778051), tile_num_in_direction(tile_num(dude_obj), (has_trait(1, dude_obj, 10) + 3) % 6, 3), elevation(dude_obj));
                    end
                end
            end
            if (party_member_obj(16777293) != 0) then begin
                if (party_member_obj(16777293) != 0) then begin
                    if (has_trait(1, party_member_obj(16777293), 666)) then begin
                        critter_attempt_placement(party_member_obj(16777293), tile_num_in_direction(tile_num(dude_obj), (has_trait(1, dude_obj, 10) + 3) % 6, 3), elevation(dude_obj));
                    end
                end
            end
            if (party_member_obj(16777729) != 0) then begin
                anim(party_member_obj(16777729), 1000, 0);
            end
            if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
                anim(party_member_obj(16777779), 1000, 0);
            end
            if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
                anim(party_member_obj(16777811), 1000, 0);
            end
            if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
                anim(party_member_obj(16777814), 1000, 0);
            end
            if (party_member_obj(16778017) != 0) then begin
                anim(party_member_obj(16778017), 1000, 0);
            end
            if (party_member_obj(16778016) != 0) then begin
                anim(party_member_obj(16778016), 1000, 0);
            end
            if (party_member_obj(16778049) != 0) then begin
                anim(party_member_obj(16778049), 1000, 0);
            end
            if (party_member_obj(16778050) != 0) then begin
                anim(party_member_obj(16778050), 1000, 0);
            end
            if (party_member_obj(16778051) != 0) then begin
                anim(party_member_obj(16778051), 1000, 0);
            end
            if (party_member_obj(16777812) != 0) then begin
                anim(party_member_obj(16777812), 1000, 0);
            end
            metarule3(108, 18925, 0, 0);
            game_ui_disable;
            add_timer_event(self_obj, game_ticks(1), 1);
        end
        if (sequence == 2) then begin
            float_msg(vex, message_str(1701, 100), 2);
            add_timer_event(self_obj, game_ticks(5), 1);
        end
        if (sequence == 3) then begin
            float_msg(policista, message_str(1701, 200), 8);
            add_timer_event(self_obj, game_ticks(5), 1);
        end
        if (sequence == 4) then begin
            float_msg(vex, message_str(1701, 300), 2);
            add_timer_event(self_obj, game_ticks(6), 1);
        end
        if (sequence == 5) then begin
            float_msg(policista, message_str(1701, 400), 8);
            add_timer_event(self_obj, game_ticks(2), 1);
        end
        if (sequence == 6) then begin
            reg_anim_func(2, policista);
            reg_anim_func(1, 1);
            reg_anim_animate(policista, 11, -1);
            reg_anim_func(3, 0);
            add_timer_event(self_obj, game_ticks(1), 1);
        end
        if (sequence == 7) then begin
            capbag := create_object_sid(567, 18721, 0, -1);
            add_timer_event(self_obj, game_ticks(1), 1);
        end
        if (sequence == 8) then begin
            float_msg(vex, message_str(1701, 500), 2);
            add_timer_event(self_obj, game_ticks(8), 1);
        end
        if (sequence == 9) then begin
            float_msg(policista, message_str(1701, 600), 8);
            add_timer_event(self_obj, game_ticks(3), 1);
        end
        if (sequence == 10) then begin
            float_msg(vex, message_str(1701, 700), 2);
            add_timer_event(self_obj, game_ticks(1), 1);
        end
        if (sequence == 11) then begin
            reg_anim_func(2, dude_obj);
            animate_move_obj_to_tile(dude_obj, 18921, 0);
            if (get_critter_stat(dude_obj, 34) == 0) then begin
                add_timer_event(self_obj, game_ticks(6), 1);
            end
            else begin
                add_timer_event(self_obj, game_ticks(7), 1);
            end
        end
        if (sequence == 12) then begin
            anim(dude_obj, 1000, 5);
            reg_anim_func(2, dude_obj);
            reg_anim_func(1, 1);
            reg_anim_animate(dude_obj, 11, -1);
            reg_anim_func(3, 0);
            script_overrides;
            display_msg(message_str(1701, 800));
            add_timer_event(self_obj, game_ticks(1), 1);
        end
        if (sequence == 13) then begin
            reg_anim_func(2, dude_obj);
            anim(dude_obj, 1000, 3);
            add_timer_event(self_obj, 7, 1);
        end
        if (sequence == 14) then begin
            float_msg(dude_obj, message_str(1701, 801), 4);
            add_timer_event(self_obj, game_ticks(1), 1);
        end
        if (sequence == 15) then begin
            reg_anim_func(2, dude_obj);
            anim(dude_obj, 1000, 5);
            add_timer_event(self_obj, 7, 1);
        end
        if (sequence == 16) then begin
            add_obj_to_inven(dude_obj, capbag);
            add_timer_event(self_obj, game_ticks(1), 1);
        end
        if (sequence == 17) then begin
            reg_anim_func(2, dude_obj);
            animate_move_obj_to_tile(dude_obj, 20336, 0);
            reg_anim_func(2, david);
            animate_move_obj_to_tile(david, 18521, 0);
            if (not(obj_is_carrying_obj_pid(vex, 22))) then begin
                restock_obj := create_object_sid(22, 0, 0, -1);
                add_mult_objs_to_inven(vex, restock_obj, 1);
            end
            add_timer_event(self_obj, game_ticks(2), 1);
        end
        if (sequence == 18) then begin
            reg_anim_func(2, vex);
            wield_obj_critter(vex, obj_carrying_pid_obj(vex, 22));
            float_msg(vex, message_str(1701, 900), 2);
            add_timer_event(self_obj, game_ticks(1), 1);
        end
        if (sequence == 19) then begin
            reg_anim_func(2, vex);
            reg_anim_func(1, 1);
            reg_anim_animate(vex, 45, -1);
            reg_anim_func(3, 0);
            play_sfx("whg1sxx1");
            play_sfx("NACHLDBA");
            play_sfx("hfxxxxyb");
            reg_anim_func(2, david);
            reg_anim_func(1, 1);
            reg_anim_animate(david, 35, -1);
            reg_anim_func(3, 0);
            add_timer_event(self_obj, 5, 1);
        end
        if (sequence == 20) then begin
            kill_critter(david, 35);
            float_msg(policista, message_str(1701, 1000), 2);
            set_map_var(0, 1);
            add_timer_event(self_obj, 6, 1);
        end
        if (sequence == 21) then begin
            set_global_var(910, global_var(910) bwand (-1 - 32768));
            set_exit_grids(0, 21, 0, 0, 0);
            game_ui_enable;
            add_timer_event(self_obj, game_ticks(0), 2);
        end
    end
    if (fixed_param == 2) then begin
        attack_setup(policista, vex);
    end
    if (fixed_param == 3) then begin
        game_ui_enable;
        attack_setup(Police_obj, dude_obj);
    end
end

