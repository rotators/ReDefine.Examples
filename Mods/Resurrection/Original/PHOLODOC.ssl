variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure map_enter_p_proc;
procedure destroy_p_proc;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777293) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777293)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777958) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777958)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777957) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777957)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778018) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778018)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
end

procedure critter_p_proc
begin
end

procedure pickup_p_proc
begin
end

procedure talk_p_proc
begin
    metarule3(100, self_obj, 1, 0);
    add_timer_event(self_obj, 0, 1);
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(209, 100));
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(209, 200));
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if (local_var(0) == 0) then begin
            set_obj_visibility(self_obj, 1);
            add_timer_event(self_obj, 2, 1);
        end
        if (local_var(0) == 1) then begin
            set_obj_visibility(self_obj, 0);
            add_timer_event(self_obj, 4, 1);
        end
        if (local_var(0) == 2) then begin
            set_obj_visibility(self_obj, 1);
            add_timer_event(self_obj, 2, 1);
        end
        if (local_var(0) == 3) then begin
            set_obj_visibility(self_obj, 0);
            add_timer_event(self_obj, 2, 1);
        end
        if (local_var(0) == 4) then begin
            float_msg(self_obj, message_str(209, 300), 8);
            add_timer_event(self_obj, game_ticks(5), 1);
        end
        if (local_var(0) == 5) then begin
            float_msg(self_obj, message_str(209, 301), 8);
            add_timer_event(self_obj, game_ticks(10), 1);
        end
        if (local_var(0) == 6) then begin
            float_msg(self_obj, message_str(209, 302), 8);
            add_timer_event(self_obj, game_ticks(5), 1);
        end
        if (local_var(0) == 7) then begin
            float_msg(self_obj, message_str(209, 303), 8);
            add_timer_event(self_obj, game_ticks(9), 1);
        end
        if (local_var(0) == 8) then begin
            float_msg(self_obj, message_str(209, 304), 8);
            add_timer_event(self_obj, game_ticks(12), 1);
        end
        if (local_var(0) == 9) then begin
            float_msg(self_obj, message_str(209, 305), 8);
            add_timer_event(self_obj, game_ticks(13), 1);
        end
        if (local_var(0) == 10) then begin
            float_msg(self_obj, message_str(209, 306), 8);
            if (map_var(4) == 0) then begin
                set_map_var(4, 1);
            end
            set_global_var(957, 1);
            add_timer_event(self_obj, game_ticks(11), 1);
        end
        if (local_var(0) == 11) then begin
            float_msg(self_obj, message_str(209, 307), 8);
            add_timer_event(self_obj, game_ticks(3), 1);
        end
        if (local_var(0) == 12) then begin
            destroy_object(self_obj);
        end
        set_local_var(0, local_var(0) + 1);
    end
end

procedure map_enter_p_proc
begin
end

procedure destroy_p_proc
begin
end

