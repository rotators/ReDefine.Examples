variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure map_enter_p_proc;
procedure map_exit_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;

variable combat_cry;
variable ShootingDist;
variable ShootingTile;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if ((local_var(5) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
    if (global_var(774) > 2) then begin
        if (obj_can_see_obj(self_obj, dude_obj)) then begin
            attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
        end
    end
    if (map_var(9) > 0) then begin
        if (ShootingTile == 0) then begin
            ShootingDist := tile_distance(tile_num(self_obj), 14102);
            ShootingTile := 14102;
            if (tile_distance(tile_num(self_obj), 23133) < ShootingDist) then begin
                ShootingDist := tile_distance(tile_num(self_obj), 23133);
                ShootingTile := 23133;
            end
            if (tile_distance(tile_num(self_obj), 23123) < ShootingDist) then begin
                ShootingDist := tile_distance(tile_num(self_obj), 23123);
                ShootingTile := 23123;
            end
        end
        if ((map_var(9) == 1) and (art_anim(obj_art_fid(self_obj)) != 1) and (ShootingTile != 0)) then begin
            animate_move_obj_to_tile(self_obj, ShootingTile, 1);
        end
        if (map_var(9) == 2) then begin
            destroy_object(self_obj);
        end
    end
end

procedure combat_p_proc
begin
    if (fixed_param == 4) then begin
        if ((global_var(770) == 1) or (global_var(774) > 0) and (global_var(774) < 3)) then begin
            critter_set_flee_state(self_obj, 1);
        end
        else begin
            if (global_var(774) > 2) then begin
                if (critter_is_fleeing(self_obj)) then begin
                    attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
                end
            end
        end
        if ((get_critter_stat(dude_obj, 34) == 0) and (get_critter_stat(dude_obj, 6) == 10) and (combat_cry != 41) and (global_var(769) == 1)) then begin
            combat_cry := random(1, 40);
            if (combat_cry == 13) then begin
                float_msg(self_obj, message_str(1432, 400), 8);
                combat_cry := 41;
            end
            if (combat_cry == 23) then begin
                float_msg(self_obj, message_str(1432, 401), 8);
                combat_cry := 41;
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        float_msg(self_obj, message_str(1432, 350 + (get_critter_stat(dude_obj, 34) == 1)), 2);
        set_local_var(5, 2);
    end
end

procedure talk_p_proc
begin
    float_msg(self_obj, message_str(1432, random(308, 315)), 8);
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(1432, 100));
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(1432, 200));
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if (not(combat_is_initialized) and (map_var(9) == 0)) then begin
            float_msg(self_obj, message_str(1432, random(300, 307)), 8);
        end
        if (global_var(792) != 2) then begin
            metarule3(100, self_obj, 1, 0);
            add_timer_event(self_obj, game_ticks(random(7, 14)), 1);
        end
    end
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, 1, 6, 212);
    critter_add_trait(self_obj, 1, 5, 146);
    metarule3(100, self_obj, 1, 0);
    add_timer_event(self_obj, game_ticks(random(7, 14)), 1);
end

procedure map_exit_p_proc
begin
    float_msg(self_obj, 0, 0);
    if (global_var(792) == 2) then begin
        destroy_object(self_obj);
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(770, 1);
        if (global_var(774) < 3) then begin
            set_global_var(774, global_var(774) + 1);
        end
    end
end

procedure destroy_p_proc
begin
end

