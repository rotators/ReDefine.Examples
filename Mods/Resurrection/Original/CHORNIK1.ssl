/*******************************************************
*      Some unreferenced imported varables found.      *
*      Because of it it is impossible to specify       *
*      the real names of global variables.             *
*******************************************************/

variable GVar0;
variable GVar1 := 1;
variable GVar2;
variable GVar3;
variable GVar4;
variable GVar5;
variable GVar6;
variable GVar7;
variable GVar8;
variable GVar9;
variable GVar10;
variable GVar11;
variable GVar12;
variable GVar13;
variable GVar14;
variable GVar15;
variable GVar16;
variable GVar17;
variable GVar18;
variable GVar19;
variable GVar20;
variable GVar21;
variable GVar22;

/* ?import? variable ProtoOfItemGiven; */
/* ?import? variable ValueOfRollCheck; */
/* ?import? variable Scenery_Creation; */
/* ?import? variable Scenery_Creation_Hex; */
/* ?import? variable Scenery_Creation_Count; */
/* ?import? variable Temp_Scenery_Creation_Hex; */
/* ?import? variable Scenery_Creation_Ptr; */
/* ?import? variable lPartyWornArmor; */
/* ?import? variable How_Many_Party_Members_Are_Injured; */
/* ?import? variable How_Many_Party_Members_Armed; */
/* ?import? variable PartyHealingItem; */

procedure checkPartyMembersNearDoor;

/* ?import? variable global_temp; */
/* ?import? variable dest_tile; */
/* ?import? variable step_tile; */
/* ?import? variable in_dialog; */
/* ?import? variable forced_node; */
/* ?import? variable restock_amt; */
/* ?import? variable restock_obj; */
/* ?import? variable restock_trash; */
/* ?import? variable removed_qty; */
/* ?import? variable toRemove_qty; */

procedure div(variable arg0, variable arg1);
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure combat_p_proc;
procedure Node998;
procedure Node999;
procedure Node500;
procedure Node550;
procedure Node600;
procedure Node650;
procedure Node700;
procedure Node750;
procedure Node800;
procedure Node850;
procedure Node900;
procedure Node950;
procedure Node1000;
procedure Node1050;
procedure Node1100;
procedure Node1150;
procedure Node1200;
procedure Node1250;
procedure Node1300;
procedure Node1350;
procedure Node1400;
procedure Node1450;
procedure Node1500;
procedure Node1550;
procedure Strike_End;
procedure Rebelion_Start;

/* ?import? variable Miners_obj; */

import variable Mine_map;

/* ?import? variable Rebelion_float; */
/* ?import? variable probability; */


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if (map_var(3) != 0) then begin
        set_local_var(4, 0);
    end
    if ((local_var(4) == 1) or (global_var(853) == 1) or (global_var(850) == 1) and obj_can_see_obj(self_obj, dude_obj) and (has_trait(1, self_obj, 666) == 1)) then begin
        if (critter_is_fleeing(self_obj)) then begin
            if (anim_busy(self_obj) == 0) then begin
                if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                    if (anim_busy(self_obj) == 0) then begin
                        GVar11 := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), GVar11, random(3, 10)), 1);
                        GVar11 := (GVar11 + 1) % 6;
                        while ((anim_busy(self_obj) == 0) and (GVar11 != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                            debug_msg("flee loop: rot == " + GVar11);
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), GVar11, random(3, 10)), 1);
                            GVar11 := (GVar11 + 1) % 6;
                        end
                    end
                end
            end
        end
        else begin
            attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
        end
    end
    if ((map_var(1) == 1) and ((map_var(0) bwand 64) == 0) and (GVar21 == 0)) then begin
        float_msg(self_obj, message_str(1548, random(409, 418)), 2);
        GVar21 := 1;
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(4, 1);
    end
end

procedure talk_p_proc
begin
    if ((map_var(0) bwand 32) == 0) then begin
        anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
        start_gdialog(1548, self_obj, 4, -1, -1);
        gsay_start;
        if ((map_var(0) bwand 1) == 0) then begin
            call Node500();
        end
        else begin
            call Node1550();
        end
        gsay_end;
        end_dialogue;
    end
    else begin
        if (not(combat_is_initialized)) then begin
            float_msg(self_obj, message_str(1548, random(302, 305)), 8);
        end
    end
    if (global_var(841) == 2) then begin
        game_ui_disable;
        add_timer_event(Mine_map, game_ticks(1), 2);
    end
    if (global_var(841) == 3) then begin
        game_ui_disable;
        add_timer_event(Mine_map, game_ticks(1), 3);
    end
end

procedure destroy_p_proc
begin
    if (global_var(841) == 1) then begin
        set_global_var(0, global_var(0) - 5);
    end
    set_global_var(37, 0);
    set_global_var(38, 0);
    set_global_var(39, 0);
    set_global_var(40, 0);
    set_global_var(41, 0);
    set_global_var(42, 0);
    set_global_var(43, 0);
    set_global_var(44, 0);
    set_global_var(45, 0);
    if (global_var(0) >= 1000) then begin
        set_global_var(37, 1);
    end
    else begin
        if (global_var(0) >= 750) then begin
            set_global_var(38, 1);
        end
        else begin
            if (global_var(0) >= 500) then begin
                set_global_var(39, 1);
            end
            else begin
                if (global_var(0) >= 250) then begin
                    set_global_var(40, 1);
                end
                else begin
                    if (global_var(0) > -250) then begin
                        set_global_var(41, 1);
                    end
                    else begin
                        if (global_var(0) > -500) then begin
                            set_global_var(42, 1);
                        end
                        else begin
                            if (global_var(0) > -750) then begin
                                set_global_var(43, 1);
                            end
                            else begin
                                if (global_var(0) > -1000) then begin
                                    set_global_var(44, 1);
                                end
                                else begin
                                    set_global_var(45, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    add_timer_event(Mine_map, game_ticks(0), 5);
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(1548, 100));
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(1548, 200));
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (map_var(3) == 0) then begin
            set_local_var(4, 1);
        end
    end
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, 1, 6, 248);
    critter_add_trait(self_obj, 1, 5, 2);
    if (global_var(841) == 1) then begin
        set_obj_visibility(self_obj, 0);
    end
    else begin
        set_obj_visibility(self_obj, 1);
    end
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and (global_var(841) == 1) and not(combat_is_initialized)) then begin
        float_msg(self_obj, message_str(1548, random(306, 318)), 8);
    end
end

procedure combat_p_proc
begin
    if ((global_var(841) == 1) and (map_var(3) != 0)) then begin
        critter_add_trait(self_obj, 1, 6, 244);
        critter_add_trait(self_obj, 1, 5, 2);
    end
    if (fixed_param == 4) then begin
        GVar22 := random(0, 12);
        if ((GVar22 >= 12) and (has_trait(1, self_obj, 666) == 1) and (map_var(3) != 0) and not(critter_is_fleeing(self_obj))) then begin
            if (obj_can_see_obj(self_obj, dude_obj)) then begin
                float_msg(self_obj, message_str(1548, random(401, 408)), 2);
            end
        end
    end
end

procedure Node998
begin
    set_local_var(4, 1);
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        float_msg(self_obj, message_str(1548, 300), 2);
    end
    if (get_critter_stat(dude_obj, 34) == 1) then begin
        float_msg(self_obj, message_str(1548, 301), 2);
    end
    set_global_var(0, global_var(0) - 10);
    set_global_var(37, 0);
    set_global_var(38, 0);
    set_global_var(39, 0);
    set_global_var(40, 0);
    set_global_var(41, 0);
    set_global_var(42, 0);
    set_global_var(43, 0);
    set_global_var(44, 0);
    set_global_var(45, 0);
    if (global_var(0) >= 1000) then begin
        set_global_var(37, 1);
    end
    else begin
        if (global_var(0) >= 750) then begin
            set_global_var(38, 1);
        end
        else begin
            if (global_var(0) >= 500) then begin
                set_global_var(39, 1);
            end
            else begin
                if (global_var(0) >= 250) then begin
                    set_global_var(40, 1);
                end
                else begin
                    if (global_var(0) > -250) then begin
                        set_global_var(41, 1);
                    end
                    else begin
                        if (global_var(0) > -500) then begin
                            set_global_var(42, 1);
                        end
                        else begin
                            if (global_var(0) > -750) then begin
                                set_global_var(43, 1);
                            end
                            else begin
                                if (global_var(0) > -1000) then begin
                                    set_global_var(44, 1);
                                end
                                else begin
                                    set_global_var(45, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure Node999
begin
    if (tile_num(self_obj) == 24106) then begin
        anim(self_obj, 1000, 2);
    end
    if (tile_num(self_obj) == 24304) then begin
        anim(self_obj, 1000, 3);
    end
    if (tile_num(self_obj) == 24704) then begin
        anim(self_obj, 1000, 4);
    end
    if (tile_num(self_obj) == 24906) then begin
        anim(self_obj, 1000, 5);
    end
    if (tile_num(self_obj) == 24708) then begin
        anim(self_obj, 1000, 0);
    end
end

procedure Node500
begin
    gsay_reply(1548, 500);
    if ((get_critter_stat(dude_obj, 34) == 0) and ((global_var(835) == 1) or (global_var(831) == 1))) then begin
        giq_option(4, 1548, 501, Node550, 50);
    end
    if ((get_critter_stat(dude_obj, 34) == 1) and ((global_var(835) == 1) or (global_var(831) == 1))) then begin
        giq_option(4, 1548, 502, Node550, 50);
    end
    giq_option(4, 1548, 503, Node600, 50);
    giq_option(4, 1548, 504, Node1000, 50);
end

procedure Node550
begin
    gsay_reply(1548, 550);
    giq_option(4, 1548, 551, Node650, 50);
    giq_option(4, 1548, 552, Node999, 50);
end

procedure Node600
begin
    gsay_reply(1548, 600);
    giq_option(4, 1548, 601, Node650, 50);
    giq_option(4, 1548, 602, Node999, 50);
end

procedure Node650
begin
    gsay_reply(1548, 650);
    set_map_var(0, map_var(0) bwor 1);
    if ((map_var(0) bwand 2) == 0) then begin
        giq_option(4, 1548, 651, Node700, 50);
    end
    if ((map_var(0) bwand 4) == 0) then begin
        giq_option(4, 1548, 652, Node750, 50);
    end
    if ((map_var(0) bwand 8) == 0) then begin
        giq_option(4, 1548, 653, Node800, 50);
    end
    if ((map_var(0) bwand 16) == 0) then begin
        giq_option(4, 1548, 654, Node850, 50);
    end
    giq_option(4, 1548, 655, Node1050, 50);
    giq_option(4, 1548, 656, Node1350, 50);
    giq_option(4, 1548, 657, Node999, 50);
end

procedure Node700
begin
    gsay_reply(1548, 700);
    set_map_var(0, map_var(0) bwor 2);
    if ((map_var(0) bwand 4) == 0) then begin
        giq_option(4, 1548, 701, Node750, 50);
    end
    if ((map_var(0) bwand 8) == 0) then begin
        giq_option(4, 1548, 702, Node800, 50);
    end
    if ((map_var(0) bwand 16) == 0) then begin
        giq_option(4, 1548, 703, Node850, 50);
    end
    giq_option(4, 1548, 704, Node1050, 50);
    giq_option(4, 1548, 705, Node1350, 50);
    giq_option(4, 1548, 706, Node999, 50);
end

procedure Node750
begin
    gsay_reply(1548, 750);
    set_map_var(0, map_var(0) bwor 4);
    if ((map_var(0) bwand 2) == 0) then begin
        giq_option(4, 1548, 751, Node700, 50);
    end
    if ((map_var(0) bwand 8) == 0) then begin
        giq_option(4, 1548, 752, Node800, 50);
    end
    if ((map_var(0) bwand 16) == 0) then begin
        giq_option(4, 1548, 753, Node850, 50);
    end
    giq_option(4, 1548, 754, Node1050, 50);
    giq_option(4, 1548, 755, Node1350, 50);
    giq_option(4, 1548, 756, Node999, 50);
end

procedure Node800
begin
    gsay_reply(1548, 800);
    set_map_var(0, map_var(0) bwor 8);
    giq_option(4, 1548, 801, Node998, 50);
    if ((map_var(0) bwand 2) == 0) then begin
        giq_option(4, 1548, 802, Node700, 50);
    end
    if ((map_var(0) bwand 4) == 0) then begin
        giq_option(4, 1548, 803, Node750, 50);
    end
    if ((map_var(0) bwand 16) == 0) then begin
        giq_option(4, 1548, 804, Node850, 50);
    end
    giq_option(4, 1548, 805, Node1050, 50);
    giq_option(4, 1548, 806, Node1350, 50);
    giq_option(4, 1548, 807, Node999, 50);
end

procedure Node850
begin
    gsay_reply(1548, 850);
    set_map_var(0, map_var(0) bwor 16);
    giq_option(4, 1548, 851, Node900, 50);
    if ((map_var(0) bwand 2) == 0) then begin
        giq_option(4, 1548, 852, Node700, 50);
    end
    if ((map_var(0) bwand 4) == 0) then begin
        giq_option(4, 1548, 853, Node750, 50);
    end
    if ((map_var(0) bwand 8) == 0) then begin
        giq_option(4, 1548, 854, Node800, 50);
    end
    giq_option(4, 1548, 855, Node1050, 50);
    giq_option(4, 1548, 856, Node1350, 50);
    giq_option(4, 1548, 857, Node999, 50);
end

procedure Node900
begin
    gsay_reply(1548, 900);
    giq_option(4, 1548, 901, Node950, 50);
    if ((map_var(0) bwand 2) == 0) then begin
        giq_option(4, 1548, 902, Node700, 50);
    end
    if ((map_var(0) bwand 4) == 0) then begin
        giq_option(4, 1548, 903, Node750, 50);
    end
    if ((map_var(0) bwand 8) == 0) then begin
        giq_option(4, 1548, 904, Node800, 50);
    end
    giq_option(4, 1548, 905, Node1050, 50);
    giq_option(4, 1548, 906, Node1350, 50);
    giq_option(4, 1548, 907, Node999, 50);
end

procedure Node950
begin
    gsay_reply(1548, 950);
    set_map_var(0, map_var(0) bwor 32);
    giq_option(4, 1548, 951, Node999, 50);
end

procedure Node1000
begin
    gsay_reply(1548, 1000);
    giq_option(4, 1548, 1001, Node600, 50);
    giq_option(4, 1548, 1002, Node999, 50);
end

procedure Node1050
begin
    gsay_reply(1548, 1050);
    if (has_skill(dude_obj, 14) > 60) then begin
        giq_option(4, 1548, 1051, Node1100, 50);
    end
    if (item_caps_total(dude_obj) > 999) then begin
        giq_option(4, 1548, 1052, Node1250, 50);
    end
    giq_option(4, 1548, 1053, Node998, 50);
    giq_option(4, 1548, 1054, Node999, 50);
end

procedure Node1100
begin
    gsay_reply(1548, 1100);
    if (has_skill(dude_obj, 14) > 70) then begin
        giq_option(4, 1548, 1101, Node1150, 50);
    end
    if (item_caps_total(dude_obj) > 999) then begin
        giq_option(4, 1548, 1102, Node1250, 50);
    end
    giq_option(4, 1548, 1103, Node998, 50);
    giq_option(4, 1548, 1104, Node999, 50);
end

procedure Node1150
begin
    gsay_reply(1548, 1150);
    giq_option(4, 1548, 1151, Node1200, 50);
end

procedure Node1200
begin
    gsay_reply(1548, 1200);
    set_global_var(0, global_var(0) + 5);
    debug_msg("Player gains " + 5 + " Karma Points.");
    set_global_var(37, 0);
    set_global_var(38, 0);
    set_global_var(39, 0);
    set_global_var(40, 0);
    set_global_var(41, 0);
    set_global_var(42, 0);
    set_global_var(43, 0);
    set_global_var(44, 0);
    set_global_var(45, 0);
    if (global_var(0) >= 1000) then begin
        set_global_var(37, 1);
    end
    else begin
        if (global_var(0) >= 750) then begin
            set_global_var(38, 1);
        end
        else begin
            if (global_var(0) >= 500) then begin
                set_global_var(39, 1);
            end
            else begin
                if (global_var(0) >= 250) then begin
                    set_global_var(40, 1);
                end
                else begin
                    if (global_var(0) > -250) then begin
                        set_global_var(41, 1);
                    end
                    else begin
                        if (global_var(0) > -500) then begin
                            set_global_var(42, 1);
                        end
                        else begin
                            if (global_var(0) > -750) then begin
                                set_global_var(43, 1);
                            end
                            else begin
                                if (global_var(0) > -1000) then begin
                                    set_global_var(44, 1);
                                end
                                else begin
                                    set_global_var(45, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    giq_option(4, 1548, 1201, Strike_End, 50);
end

procedure Node1250
begin
    gsay_reply(1548, 1250);
    giq_option(4, 1548, 1251, Node1300, 50);
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        giq_option(4, 1548, 1252, Node998, 50);
    end
    if (get_critter_stat(dude_obj, 34) == 1) then begin
        giq_option(4, 1548, 1253, Node998, 50);
    end
    giq_option(4, 1548, 1254, Node999, 50);
end

procedure Node1300
begin
    gsay_reply(1548, 1300);
    item_caps_adjust(dude_obj, -1000);
    giq_option(4, 1548, 1301, Strike_End, 50);
end

procedure Node1350
begin
    gsay_reply(1548, 1350);
    if (has_skill(dude_obj, 14) > 70) then begin
        giq_option(4, 1548, 1351, Node1400, 50);
    end
    if (item_caps_total(dude_obj) > 999) then begin
        giq_option(4, 1548, 1352, Node1450, 50);
    end
    giq_option(4, 1548, 1353, Node999, 50);
end

procedure Node1400
begin
    gsay_reply(1548, 1400);
    giq_option(4, 1548, 1401, Rebelion_Start, 50);
end

procedure Node1450
begin
    gsay_reply(1548, 1450);
    giq_option(4, 1548, 1451, Node1500, 50);
    giq_option(4, 1548, 1452, Node999, 50);
end

procedure Node1500
begin
    gsay_reply(1548, 1500);
    item_caps_adjust(dude_obj, -1000);
    giq_option(4, 1548, 1501, Rebelion_Start, 50);
end

procedure Node1550
begin
    gsay_reply(1548, 1550);
    giq_option(4, 1548, 1551, Node650, 50);
    giq_option(4, 1548, 1552, Node1000, 50);
end

procedure Strike_End
begin
    game_time_advance(30 * (60 * 10));
    set_global_var(841, 2);
    call Node999();
end

procedure Rebelion_Start
begin
    set_global_var(841, 3);
    set_map_var(1, 1);
    call Node999();
end

