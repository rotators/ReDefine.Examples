variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure map_enter_p_proc;
procedure critter_p_proc;
procedure timed_event_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure destroy_p_proc;
procedure damage_p_proc;
procedure map_update_p_proc;

import variable crystos;
import variable fighter_floater;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
    fighter_floater := self_obj;
    if (obj_pid(self_obj) == 16778048) then begin
        set_local_var(6, 1);
    end
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, 1, 6, 188);
    critter_add_trait(self_obj, 1, 5, 132);
    if (obj_pid(self_obj) == 16778048) then begin
        set_local_var(6, 1);
    end
end

procedure critter_p_proc
begin
    if ((local_var(5) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
        set_local_var(5, 2);
        set_local_var(7, 1);
    end
end

procedure look_at_p_proc
begin
    if (local_var(6) == 1) then begin
        script_overrides;
        display_msg(message_str(1335, 100));
    end
end

procedure description_p_proc
begin
    variable LVar0 := 0;
    if (local_var(6) == 1) then begin
        LVar0 := random(0, 2);
        script_overrides;
        if (LVar0 == 0) then begin
            display_msg(message_str(1335, 201));
        end
        if (LVar0 == 1) then begin
            display_msg(message_str(1335, 202));
        end
        if (LVar0 == 2) then begin
            display_msg(message_str(1335, 203));
        end
    end
    else begin
        script_overrides;
        display_msg(message_str(1335, 200));
    end
end

procedure destroy_p_proc
begin
    if (local_var(7) == 1) then begin
        add_timer_event(crystos, 5, 10);
    end
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (local_var(7) != 1) then begin
            set_global_var(770, 1);
        end
    end
end

procedure map_update_p_proc
begin
end

