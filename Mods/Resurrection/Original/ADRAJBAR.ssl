variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_exit_p_proc;
procedure combat_p_proc;
procedure timed_event_p_proc;
procedure Node998;
procedure Node999;
procedure Node500;
procedure Node550;
procedure Node600;
procedure Node650;
procedure Node700;
procedure Node750;
procedure Node800;
procedure Node850;
procedure Node900;
procedure Node950;
procedure Node1000;
procedure Node1050;
procedure Node1100;
procedure Node1150;
procedure Node1170;
procedure Node1200;
procedure Node1250;
procedure Node1300;
procedure Node1350;
procedure Node1400;
procedure Node1450;
procedure Node1500;
procedure Barter;
procedure Barter_id;
procedure To_Barter_swap;
procedure Table_swap;
procedure Bridge700;
procedure Bridge800;
procedure Bridge950;
procedure Bridge1000;
procedure Bridge1100;
procedure Bridge999;

import variable barman_obj;
import variable barman_table_swap;
import variable barman_table_trade;

variable probability;
variable projed_smycku;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
    barman_obj := self_obj;
end

procedure critter_p_proc
begin
    if ((map_var(1) == 1) and obj_can_see_obj(self_obj, dude_obj)) then begin
        if (critter_is_fleeing(self_obj)) then begin
            if (anim_busy(self_obj) == 0) then begin
                if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                    if (anim_busy(self_obj) == 0) then begin
                        global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                        global_temp := (global_temp + 1) % 6;
                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                            debug_msg("flee loop: rot == " + global_temp);
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                        end
                    end
                end
            end
        end
        else begin
            attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
        end
    end
    if (local_var(4) == 1) then begin
        set_local_var(4, 2);
        if (critter_is_fleeing(self_obj)) then begin
            if (anim_busy(self_obj) == 0) then begin
                if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                    if (anim_busy(self_obj) == 0) then begin
                        global_temp := rotation_to_tile(tile_num(dude_obj), tile_num(self_obj));
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                        global_temp := (global_temp + 1) % 6;
                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)))) do begin
                            debug_msg("flee loop: rot == " + global_temp);
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                        end
                    end
                end
            end
        end
        else begin
            attack_complex(dude_obj, 0, 1, 0, 0, 30000, 0, 0);
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(4, 1);
    end
end

procedure talk_p_proc
begin
    anim(dude_obj, 1000, rotation_to_tile(tile_num(dude_obj), tile_num(self_obj)));
    anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), tile_num(dude_obj)));
    start_gdialog(1615, self_obj, 4, -1, -1);
    gsay_start;
    if ((party_member_obj(16777812) != 0) and ((local_var(5) bwand 16) == 0) and (projed_smycku == 0)) then begin
        if (get_critter_stat(dude_obj, 34) == 0) then begin
            call Node1250();
        end
        if (get_critter_stat(dude_obj, 34) == 1) then begin
            call Node1300();
        end
        projed_smycku := 1;
    end
    if (((get_critter_stat(dude_obj, 4) + has_trait(0, dude_obj, 49)) <= 3) and (projed_smycku == 0)) then begin
        call Node1200();
        projed_smycku := 1;
    end
    if ((global_var(859) == 1) and (projed_smycku == 0)) then begin
        if (get_critter_stat(dude_obj, 34) == 0) then begin
            call Node550();
        end
        if (get_critter_stat(dude_obj, 34) == 1) then begin
            call Node600();
        end
        projed_smycku := 1;
    end
    if ((global_var(859) == 0) and (projed_smycku == 0)) then begin
        call Node500();
        projed_smycku := 1;
    end
    gsay_end;
    end_dialogue;
    projed_smycku := 0;
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(4) > (3 * global_var(5))) or (global_var(2) == 1)) and (global_var(1) == 0)) then begin
            set_global_var(2, 1);
            set_global_var(3, 0);
        end
        if (metarule(51, self_obj) == 2) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(2, 0);
                set_global_var(1, global_var(1) + 1);
                set_global_var(0, global_var(0) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(37, 0);
                set_global_var(38, 0);
                set_global_var(39, 0);
                set_global_var(40, 0);
                set_global_var(41, 0);
                set_global_var(42, 0);
                set_global_var(43, 0);
                set_global_var(44, 0);
                set_global_var(45, 0);
                if (global_var(0) >= 1000) then begin
                    set_global_var(37, 1);
                end
                else begin
                    if (global_var(0) >= 750) then begin
                        set_global_var(38, 1);
                    end
                    else begin
                        if (global_var(0) >= 500) then begin
                            set_global_var(39, 1);
                        end
                        else begin
                            if (global_var(0) >= 250) then begin
                                set_global_var(40, 1);
                            end
                            else begin
                                if (global_var(0) > -250) then begin
                                    set_global_var(41, 1);
                                end
                                else begin
                                    if (global_var(0) > -500) then begin
                                        set_global_var(42, 1);
                                    end
                                    else begin
                                        if (global_var(0) > -750) then begin
                                            set_global_var(43, 1);
                                        end
                                        else begin
                                            if (global_var(0) > -1000) then begin
                                                set_global_var(44, 1);
                                            end
                                            else begin
                                                set_global_var(45, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(51, global_var(51) + -8);
                debug_msg("Added " + -8 + " to Town Rep");
            end
        end
        if (((global_var(4) + global_var(5)) >= 25) and ((global_var(5) > (2 * global_var(4))) or (global_var(3) == 1))) then begin
            set_global_var(3, 1);
            set_global_var(2, 0);
        end
        set_global_var(0, global_var(0) + 0);
        debug_msg("Player gains " + 0 + " Karma Points.");
        set_global_var(37, 0);
        set_global_var(38, 0);
        set_global_var(39, 0);
        set_global_var(40, 0);
        set_global_var(41, 0);
        set_global_var(42, 0);
        set_global_var(43, 0);
        set_global_var(44, 0);
        set_global_var(45, 0);
        if (global_var(0) >= 1000) then begin
            set_global_var(37, 1);
        end
        else begin
            if (global_var(0) >= 750) then begin
                set_global_var(38, 1);
            end
            else begin
                if (global_var(0) >= 500) then begin
                    set_global_var(39, 1);
                end
                else begin
                    if (global_var(0) >= 250) then begin
                        set_global_var(40, 1);
                    end
                    else begin
                        if (global_var(0) > -250) then begin
                            set_global_var(41, 1);
                        end
                        else begin
                            if (global_var(0) > -500) then begin
                                set_global_var(42, 1);
                            end
                            else begin
                                if (global_var(0) > -750) then begin
                                    set_global_var(43, 1);
                                end
                                else begin
                                    if (global_var(0) > -1000) then begin
                                        set_global_var(44, 1);
                                    end
                                    else begin
                                        set_global_var(45, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    set_global_var(1061, global_var(1061) + 1);
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(1615, 100));
end

procedure description_p_proc
begin
    script_overrides;
    display_msg(message_str(1615, 200));
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_map_var(1, 1);
    end
end

procedure map_enter_p_proc
begin
    if ((local_var(5) bwand 1) == 0) then begin
        critter_add_trait(self_obj, 1, 6, 260);
    end
    else begin
        critter_add_trait(self_obj, 1, 6, 258);
    end
    critter_add_trait(self_obj, 1, 5, 14);
end

procedure map_exit_p_proc
begin
    float_msg(self_obj, 0, 0);
end

procedure combat_p_proc
begin
    if ((map_var(1) == 1) and ((local_var(5) bwand 1) == 0)) then begin
        critter_add_trait(self_obj, 1, 6, 258);
        set_global_var(864, 1);
        set_local_var(5, local_var(5) bwor 1);
    end
    if (fixed_param == 4) then begin
        probability := random(0, 12);
        if ((probability >= 12) and not(critter_is_fleeing(self_obj))) then begin
            if (global_var(859) == 1) then begin
                if ((map_var(1) == 1) and obj_can_see_obj(self_obj, dude_obj) and (get_critter_stat(dude_obj, 34) == 0)) then begin
                    float_msg(self_obj, message_str(1615, random(401, 405)), 2);
                end
                if ((map_var(1) == 1) and obj_can_see_obj(self_obj, dude_obj) and (get_critter_stat(dude_obj, 34) == 1)) then begin
                    float_msg(self_obj, message_str(1615, random(403, 407)), 2);
                end
            end
            else begin
                if ((map_var(1) == 1) and obj_can_see_obj(self_obj, dude_obj) and (get_critter_stat(dude_obj, 34) == 0)) then begin
                    float_msg(self_obj, message_str(1615, random(400, 405)), 2);
                end
                if ((map_var(1) == 1) and obj_can_see_obj(self_obj, dude_obj) and (get_critter_stat(dude_obj, 34) == 1)) then begin
                    float_msg(self_obj, message_str(1615, random(403, 408)), 2);
                end
            end
        end
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 10) then begin
        dialogue_system_enter;
    end
end

procedure Node998
begin
    set_local_var(4, 1);
end

procedure Node999
begin
    anim(self_obj, 1000, 2);
end

procedure Node500
begin
    gsay_reply(1615, 500);
    giq_option(4, 1615, 501, Barter, 50);
    if (((local_var(5) bwand 2) == 0) and ((global_var(865) bwand 64) != 0) and not((global_var(865) bwand 128) != 0)) then begin
        giq_option(4, 1615, 506, Node1000, 50);
    end
    giq_option(4, 1615, 502, Node700, 50);
    giq_option(4, 1615, 503, Node800, 50);
    giq_option(4, 1615, 504, Node800, 50);
    if (((local_var(5) bwand 4) == 0) and not((map_var(0) bwand 1) != 0)) then begin
        giq_option(4, 1615, 505, Node950, 50);
    end
    giq_option(4, 1615, 507, Node1100, 50);
    giq_option(4, 1615, 508, Node999, 50);
end

procedure Node550
begin
    gsay_reply(1615, 550);
    giq_option(4, 1615, 551, Barter, 50);
    giq_option(4, 1615, 552, Node700, 50);
    giq_option(4, 1615, 553, Node800, 50);
    giq_option(4, 1615, 554, Node800, 50);
    if (((local_var(5) bwand 4) == 0) and not((map_var(0) bwand 1) != 0)) then begin
        giq_option(4, 1615, 555, Node950, 50);
    end
    if (((local_var(5) bwand 2) == 0) and ((global_var(865) bwand 64) != 0) and not((global_var(865) bwand 128) != 0)) then begin
        giq_option(4, 1615, 556, Node1000, 50);
    end
    giq_option(4, 1615, 558, Node1100, 50);
    giq_option(4, 1615, 557, Node999, 50);
end

procedure Node600
begin
    gsay_reply(1615, 600);
    giq_option(4, 1615, 601, Barter, 50);
    giq_option(4, 1615, 602, Node700, 50);
    giq_option(4, 1615, 603, Node800, 50);
    giq_option(4, 1615, 604, Node800, 50);
    if (((local_var(5) bwand 4) == 0) and not((map_var(0) bwand 1) != 0)) then begin
        giq_option(4, 1615, 605, Node950, 50);
    end
    giq_option(4, 1615, 607, Node1100, 50);
    giq_option(4, 1615, 606, Node999, 50);
end

procedure Node650
begin
    gsay_reply(1615, 650);
    giq_option(4, 1615, 651, Barter, 50);
    if (((local_var(5) bwand 2) == 0) and ((global_var(865) bwand 64) != 0) and not((global_var(865) bwand 128) != 0)) then begin
        giq_option(4, 1615, 656, Bridge1000, 50);
    end
    giq_option(4, 1615, 652, Bridge700, 50);
    giq_option(4, 1615, 653, Bridge800, 50);
    giq_option(4, 1615, 654, Bridge800, 50);
    if (((local_var(5) bwand 4) == 0) and not((map_var(0) bwand 1) != 0)) then begin
        giq_option(4, 1615, 655, Bridge950, 50);
    end
    giq_option(4, 1615, 657, Bridge1100, 50);
    giq_option(4, 1615, 658, Bridge999, 50);
end

procedure Node700
begin
    gsay_reply(1615, 700);
    if (((local_var(5) bwand 2) == 0) and ((global_var(865) bwand 64) != 0) and not((global_var(865) bwand 128) != 0)) then begin
        giq_option(4, 1615, 704, Node1000, 50);
    end
    giq_option(4, 1615, 701, Node750, 50);
    giq_option(4, 1615, 702, Barter, 50);
    if (((local_var(5) bwand 4) == 0) and not((map_var(0) bwand 1) != 0)) then begin
        giq_option(4, 1615, 703, Node950, 50);
    end
    giq_option(4, 1615, 705, Node999, 50);
end

procedure Node750
begin
    gsay_reply(1615, 750);
    if (((local_var(5) bwand 2) == 0) and ((global_var(865) bwand 64) != 0) and not((global_var(865) bwand 128) != 0)) then begin
        giq_option(4, 1615, 757, Node1000, 50);
    end
    giq_option(4, 1615, 751, Node850, 50);
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        giq_option(4, 1615, 752, Node900, 50);
    end
    if (get_critter_stat(dude_obj, 34) == 1) then begin
        giq_option(4, 1615, 753, Node900, 50);
    end
    giq_option(4, 1615, 754, Barter, 50);
    giq_option(4, 1615, 755, Node800, 50);
    if (((local_var(5) bwand 4) == 0) and not((map_var(0) bwand 1) != 0)) then begin
        giq_option(4, 1615, 756, Node950, 50);
    end
    giq_option(4, 1615, 758, Node999, 50);
end

procedure Node800
begin
    gsay_reply(1615, 800);
    giq_option(4, 1615, 801, Barter, 50);
    if (((local_var(5) bwand 8) == 0) and not((map_var(0) bwand 1) != 0)) then begin
        giq_option(4, 1615, 802, Node1400, 50);
    end
    giq_option(4, 1615, 803, Node999, 50);
end

procedure Node850
begin
    gsay_reply(1615, 850);
    if (((local_var(5) bwand 2) == 0) and ((global_var(865) bwand 64) != 0) and not((global_var(865) bwand 128) != 0)) then begin
        giq_option(4, 1615, 857, Node1000, 50);
    end
    giq_option(6, 1615, 851, Node1350, 50);
    if (get_critter_stat(dude_obj, 34) == 0) then begin
        giq_option(4, 1615, 852, Node900, 50);
    end
    if (get_critter_stat(dude_obj, 34) == 1) then begin
        giq_option(4, 1615, 853, Node900, 50);
    end
    giq_option(4, 1615, 854, Barter, 50);
    giq_option(4, 1615, 855, Node800, 50);
    if (((local_var(5) bwand 8) == 0) and not((map_var(0) bwand 1) != 0)) then begin
        giq_option(4, 1615, 856, Node1400, 50);
    end
    giq_option(4, 1615, 858, Node999, 50);
end

procedure Node900
begin
    gsay_reply(1615, 900);
    giq_option(4, 1615, 901, Barter, 50);
    if (((local_var(5) bwand 2) == 0) and ((global_var(865) bwand 64) != 0) and not((global_var(865) bwand 128) != 0)) then begin
        giq_option(4, 1615, 904, Node1000, 50);
    end
    giq_option(4, 1615, 902, Node800, 50);
    if (((local_var(5) bwand 8) == 0) and not((map_var(0) bwand 1) != 0)) then begin
        giq_option(4, 1615, 903, Node1400, 50);
    end
    giq_option(4, 1615, 905, Node999, 50);
end

procedure Node950
begin
    gsay_reply(1615, 950);
    set_local_var(5, local_var(5) bwor 4);
    giq_option(4, 1615, 951, Node1050, 50);
    giq_option(4, 1615, 952, Node1100, 50);
    giq_option(4, 1615, 953, Node999, 50);
end

procedure Node1000
begin
    gsay_reply(1615, 1000);
    set_local_var(5, local_var(5) bwor 2);
    if (((local_var(5) bwand 8) == 0) and not((map_var(0) bwand 1) != 0)) then begin
        giq_option(4, 1615, 1001, Node1400, 50);
    end
    giq_option(4, 1615, 1002, Node1050, 50);
    giq_option(4, 1615, 1003, Node999, 50);
end

procedure Node1050
begin
    gsay_reply(1615, 1050);
    giq_option(4, 1615, 1051, Node999, 50);
end

procedure Node1100
begin
    if (global_var(859) == 1) then begin
        gsay_reply(1615, 1101);
    end
    else begin
        gsay_reply(1615, 1100);
    end
    giq_option(4, 1615, 1102, Node1150, 50);
    if ((global_var(994) < 3) and (global_var(995) < 3)) then begin
        giq_option(4, 1615, 1103, Node1170, 50);
    end
    if (((local_var(5) bwand 4) == 0) and not((map_var(0) bwand 1) != 0)) then begin
        giq_option(4, 1615, 1104, Node950, 50);
    end
    giq_option(4, 1615, 1105, Node999, 50);
end

procedure Node1150
begin
    if (global_var(859) == 1) then begin
        gsay_reply(1615, 1151);
    end
    else begin
        gsay_reply(1615, 1150);
    end
    if ((global_var(994) < 3) and (global_var(995) < 3)) then begin
        giq_option(4, 1615, 1152, Node1170, 50);
    end
    if (((local_var(5) bwand 8) == 0) and not((map_var(0) bwand 1) != 0)) then begin
        giq_option(4, 1615, 1153, Node1400, 50);
    end
    giq_option(4, 1615, 1154, Node999, 50);
end

procedure Node1170
begin
    gsay_reply(1615, 1170 + (get_critter_stat(dude_obj, 34) == 1));
    giq_option(4, 1615, 1172, Node1150, 50);
    if (((local_var(5) bwand 4) == 0) and not((map_var(0) bwand 1) != 0)) then begin
        giq_option(4, 1615, 1173, Node950, 50);
    end
    giq_option(4, 1615, 1174, Node999, 50);
end

procedure Node1200
begin
    gsay_reply(1615, 1200);
    giq_option(-3, 1615, 1201, Barter_id, 50);
    giq_option(-3, 1615, 1202, Node999, 50);
    giq_option(-3, 1615, 1203, Node998, 50);
end

procedure Node1250
begin
    gsay_reply(1615, 1250);
    set_local_var(5, local_var(5) bwor 16);
    giq_option(-3, 1615, 1251, Node1500, 50);
    giq_option(-3, 1615, 1252, Node999, 50);
    giq_option(-3, 1615, 1253, Node998, 50);
end

procedure Node1300
begin
    gsay_reply(1615, 1300);
    set_local_var(5, local_var(5) bwor 16);
    giq_option(-3, 1615, 1301, Node1500, 50);
    giq_option(-3, 1615, 1302, Node999, 50);
    giq_option(-3, 1615, 1303, Node998, 50);
end

procedure Node1350
begin
    gsay_reply(1615, 1350);
    giq_option(4, 1615, 1351, Barter, 50);
    if (((local_var(5) bwand 2) == 0) and ((global_var(865) bwand 64) != 0) and not((global_var(865) bwand 128) != 0)) then begin
        giq_option(4, 1615, 1354, Node1000, 50);
    end
    giq_option(4, 1615, 1352, Node800, 50);
    if (((local_var(5) bwand 8) == 0) and not((map_var(0) bwand 1) != 0)) then begin
        giq_option(4, 1615, 1353, Node1400, 50);
    end
    giq_option(4, 1615, 1355, Node999, 50);
end

procedure Node1400
begin
    gsay_reply(1615, 1400);
    set_local_var(5, local_var(5) bwor 8);
    giq_option(4, 1615, 1401, Node1050, 50);
    giq_option(4, 1615, 1402, Node999, 50);
end

procedure Node1450
begin
    gsay_reply(1615, 1450);
    giq_option(-3, 1615, 1451, Barter_id, 50);
    giq_option(-3, 1615, 1452, Bridge999, 50);
end

procedure Node1500
begin
    gsay_reply(1615, 1500);
    giq_option(-3, 1615, 1501, Barter_id, 50);
    giq_option(-3, 1615, 1502, Node999, 50);
end

procedure Barter
begin
    call To_Barter_swap();
    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
        gdialog_mod_barter(30 - 15);
    end
    else begin
        gdialog_mod_barter(30);
    end
    call Node650();
end

procedure Barter_id
begin
    call To_Barter_swap();
    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
        gdialog_mod_barter(30 - 15);
    end
    else begin
        gdialog_mod_barter(30);
    end
    call Node1450();
end

procedure To_Barter_swap
begin
    move_obj_inven_to_obj(barman_obj, barman_table_swap);
    move_obj_inven_to_obj(barman_table_trade, barman_obj);
end

procedure Table_swap
begin
    move_obj_inven_to_obj(barman_obj, barman_table_trade);
    move_obj_inven_to_obj(barman_table_swap, barman_obj);
end

procedure Bridge700
begin
    call Table_swap();
    call Node700();
end

procedure Bridge800
begin
    call Table_swap();
    call Node800();
end

procedure Bridge950
begin
    call Table_swap();
    call Node950();
end

procedure Bridge1000
begin
    call Table_swap();
    call Node1000();
end

procedure Bridge1100
begin
    call Table_swap();
    call Node1100();
end

procedure Bridge999
begin
    call Table_swap();
    call Node999();
end

