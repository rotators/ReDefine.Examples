variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure use_p_proc;
procedure use_skill_on_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure map_enter_p_proc;
procedure destroy_p_proc;
procedure Node999;
procedure Node500;
procedure Node550;
procedure Node600;
procedure Node650;
procedure Node700;
procedure Node750;
procedure Node800;
procedure Node850;
procedure Node900;
procedure Node950;
procedure Node1000;
procedure Node1050;
procedure Node1100;
procedure Node1150;
procedure Node1250;
procedure Node1300;
procedure Set_status_Attack_ALL;
procedure Set_status_Attack_DUDE;
procedure Set_status_Attack_OBRODA;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(910) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(910) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(910) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
end

procedure use_p_proc
begin
    script_overrides;
    set_global_var(963, global_var(963) bwor 64);
    if (combat_is_initialized) then begin
        terminate_combat;
        add_timer_event(self_obj, 1, 1);
    end
    else begin
        add_timer_event(self_obj, 0, 1);
    end
end

procedure use_skill_on_p_proc
begin
    variable LVar0 := 0;
    LVar0 := action_being_used;
    if (LVar0 == 12) then begin
        script_overrides;
        call use_p_proc();
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_msg(message_str(475, 100));
end

procedure description_p_proc
begin
    script_overrides;
    if (global_var(927) == 1) then begin
        display_msg(message_str(475, 201));
    end
    else begin
        display_msg(message_str(475, 200));
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        start_gdialog(475, self_obj, 4, -1, -1);
        gsay_start;
        if (global_var(927) == 1) then begin
            call Node550();
        end
        else begin
            call Node500();
        end
        gsay_end;
        end_dialogue;
    end
end

procedure map_enter_p_proc
begin
end

procedure destroy_p_proc
begin
end

procedure Node999
begin
    set_global_var(963, global_var(963) bwand (-1 - 64));
end

procedure Node500
begin
    gsay_reply(475, 500);
    if (has_skill(dude_obj, 12) >= 130) then begin
        giq_option(4, 475, 501, Node950, 50);
    end
    if ((has_skill(dude_obj, 12) > 115) and (has_skill(dude_obj, 12) < 130)) then begin
        giq_option(4, 475, 501, Node750, 50);
    end
    if ((has_skill(dude_obj, 12) > 100) and (has_skill(dude_obj, 12) <= 115)) then begin
        giq_option(4, 475, 501, Node600, 50);
    end
    if (has_skill(dude_obj, 12) <= 100) then begin
        giq_option(4, 475, 501, Node1150, 50);
    end
    giq_option(4, 475, 502, Node1300, 50);
    giq_option(4, 475, 503, Node999, 50);
    giq_option(-3, 475, 504, Node999, 50);
end

procedure Node550
begin
    gsay_reply(475, 550);
    if (has_skill(dude_obj, 12) >= 130) then begin
        giq_option(4, 475, 551, Node950, 50);
    end
    if ((has_skill(dude_obj, 12) > 115) and (has_skill(dude_obj, 12) < 130)) then begin
        giq_option(4, 475, 551, Node750, 50);
    end
    if ((has_skill(dude_obj, 12) > 100) and (has_skill(dude_obj, 12) <= 115)) then begin
        giq_option(4, 475, 551, Node600, 50);
    end
    if (has_skill(dude_obj, 12) <= 100) then begin
        giq_option(4, 475, 551, Node1250, 50);
    end
    giq_option(4, 475, 552, Node999, 50);
    giq_option(-3, 475, 553, Node999, 50);
end

procedure Node600
begin
    gsay_reply(475, 600);
    set_local_var(0, 0);
    if ((global_var(963) bwand 2) != 0) then begin
        giq_option(4, 475, 601, Node650, 50);
    end
    else begin
        giq_option(4, 475, 602, Node700, 50);
    end
    if (global_var(927) == 1) then begin
        giq_option(4, 475, 603, Node550, 50);
    end
    else begin
        giq_option(4, 475, 603, Node500, 50);
    end
    giq_option(4, 475, 604, Node999, 50);
end

procedure Node650
begin
    gsay_reply(475, 650);
    set_global_var(963, global_var(963) bwand (-1 - 2));
    giq_option(4, 475, 651, Node700, 50);
    if (global_var(927) == 1) then begin
        giq_option(4, 475, 652, Node550, 50);
    end
    else begin
        giq_option(4, 475, 652, Node500, 50);
    end
    giq_option(4, 475, 653, Node999, 50);
end

procedure Node700
begin
    gsay_reply(475, 700);
    set_global_var(963, global_var(963) bwor 2);
    giq_option(4, 475, 701, Node650, 50);
    if (global_var(927) == 1) then begin
        giq_option(4, 475, 702, Node550, 50);
    end
    else begin
        giq_option(4, 475, 702, Node500, 50);
    end
    giq_option(4, 475, 703, Node999, 50);
end

procedure Node750
begin
    gsay_reply(475, 750);
    set_local_var(0, 1);
    if ((global_var(963) bwand 2) != 0) then begin
        giq_option(4, 475, 751, Node800, 50);
    end
    else begin
        giq_option(4, 475, 752, Node850, 50);
    end
    if (map_var(8) != 1) then begin
        giq_option(4, 475, 753, Set_status_Attack_ALL, 50);
    end
    if (map_var(8) != 0) then begin
        giq_option(4, 475, 754, Set_status_Attack_DUDE, 50);
    end
    if (global_var(927) == 1) then begin
        giq_option(4, 475, 755, Node550, 50);
    end
    else begin
        giq_option(4, 475, 755, Node500, 50);
    end
    giq_option(4, 475, 756, Node999, 50);
end

procedure Node800
begin
    gsay_reply(475, 800);
    set_global_var(963, global_var(963) bwand (-1 - 2));
    giq_option(4, 475, 801, Node850, 50);
    if (map_var(8) != 1) then begin
        giq_option(4, 475, 802, Set_status_Attack_ALL, 50);
    end
    if (map_var(8) != 0) then begin
        giq_option(4, 475, 803, Set_status_Attack_DUDE, 50);
    end
    if (global_var(927) == 1) then begin
        giq_option(4, 475, 804, Node550, 50);
    end
    else begin
        giq_option(4, 475, 804, Node500, 50);
    end
    giq_option(4, 475, 805, Node999, 50);
end

procedure Node850
begin
    gsay_reply(475, 850);
    set_global_var(963, global_var(963) bwor 2);
    giq_option(4, 475, 851, Node800, 50);
    if (map_var(8) != 1) then begin
        giq_option(4, 475, 852, Set_status_Attack_ALL, 50);
    end
    if (map_var(8) != 0) then begin
        giq_option(4, 475, 853, Set_status_Attack_DUDE, 50);
    end
    if (global_var(927) == 1) then begin
        giq_option(4, 475, 854, Node550, 50);
    end
    else begin
        giq_option(4, 475, 854, Node500, 50);
    end
    giq_option(4, 475, 855, Node999, 50);
end

procedure Node900
begin
    gsay_reply(475, 900);
    if ((global_var(963) bwand 2) != 0) then begin
        giq_option(4, 475, 901, Node800, 50);
    end
    else begin
        giq_option(4, 475, 902, Node850, 50);
    end
    if (map_var(8) != 1) then begin
        giq_option(4, 475, 903, Set_status_Attack_ALL, 50);
    end
    if (map_var(8) != 0) then begin
        giq_option(4, 475, 904, Set_status_Attack_DUDE, 50);
    end
    if (global_var(927) == 1) then begin
        giq_option(4, 475, 905, Node550, 50);
    end
    else begin
        giq_option(4, 475, 905, Node500, 50);
    end
    giq_option(4, 475, 906, Node999, 50);
end

procedure Node950
begin
    gsay_reply(475, 950);
    set_local_var(0, 2);
    if ((global_var(963) bwand 2) != 0) then begin
        giq_option(4, 475, 951, Node1000, 50);
    end
    else begin
        giq_option(4, 475, 952, Node1050, 50);
    end
    if (map_var(8) != 1) then begin
        giq_option(4, 475, 953, Set_status_Attack_ALL, 50);
    end
    if (map_var(8) != 0) then begin
        giq_option(4, 475, 954, Set_status_Attack_DUDE, 50);
    end
    if (map_var(8) != 2) then begin
        giq_option(4, 475, 955, Set_status_Attack_OBRODA, 50);
    end
    if (global_var(927) == 1) then begin
        giq_option(4, 475, 956, Node550, 50);
    end
    else begin
        giq_option(4, 475, 956, Node500, 50);
    end
    giq_option(4, 475, 957, Node999, 50);
end

procedure Node1000
begin
    gsay_reply(475, 1000);
    set_global_var(963, global_var(963) bwand (-1 - 2));
    giq_option(4, 475, 1001, Node1050, 50);
    if (map_var(8) != 1) then begin
        giq_option(4, 475, 1002, Set_status_Attack_ALL, 50);
    end
    if (map_var(8) != 0) then begin
        giq_option(4, 475, 1003, Set_status_Attack_DUDE, 50);
    end
    if (map_var(8) != 2) then begin
        giq_option(4, 475, 1004, Set_status_Attack_OBRODA, 50);
    end
    if (global_var(927) == 1) then begin
        giq_option(4, 475, 1005, Node550, 50);
    end
    else begin
        giq_option(4, 475, 1005, Node500, 50);
    end
    giq_option(4, 475, 1006, Node999, 50);
end

procedure Node1050
begin
    gsay_reply(475, 1050);
    set_global_var(963, global_var(963) bwor 2);
    giq_option(4, 475, 1051, Node1000, 50);
    if (map_var(8) != 1) then begin
        giq_option(4, 475, 1052, Set_status_Attack_ALL, 50);
    end
    if (map_var(8) != 0) then begin
        giq_option(4, 475, 1053, Set_status_Attack_DUDE, 50);
    end
    if (map_var(8) != 2) then begin
        giq_option(4, 475, 1054, Set_status_Attack_OBRODA, 50);
    end
    if (global_var(927) == 1) then begin
        giq_option(4, 475, 1055, Node550, 50);
    end
    else begin
        giq_option(4, 475, 1055, Node500, 50);
    end
    giq_option(4, 475, 1056, Node999, 50);
end

procedure Node1100
begin
    gsay_reply(475, 1100);
    if ((global_var(963) bwand 2) != 0) then begin
        giq_option(4, 475, 1101, Node1000, 50);
    end
    else begin
        giq_option(4, 475, 1102, Node1050, 50);
    end
    if (map_var(8) != 1) then begin
        giq_option(4, 475, 1103, Set_status_Attack_ALL, 50);
    end
    if (map_var(8) != 0) then begin
        giq_option(4, 475, 1104, Set_status_Attack_DUDE, 50);
    end
    if (map_var(8) != 2) then begin
        giq_option(4, 475, 1105, Set_status_Attack_OBRODA, 50);
    end
    if (global_var(927) == 1) then begin
        giq_option(4, 475, 1106, Node550, 50);
    end
    else begin
        giq_option(4, 475, 1106, Node500, 50);
    end
    giq_option(4, 475, 1107, Node999, 50);
end

procedure Node1150
begin
    gsay_reply(475, 1150);
    set_global_var(927, 1);
    giq_option(4, 475, 1151, Node550, 50);
    giq_option(4, 475, 1152, Node999, 50);
end

procedure Node1250
begin
    gsay_reply(475, 1250);
    giq_option(4, 475, 1251, Node550, 50);
    giq_option(4, 475, 1252, Node999, 50);
end

procedure Node1300
begin
    gsay_reply(475, 1300);
    set_global_var(927, 1);
    giq_option(4, 475, 1301, Node550, 50);
    giq_option(4, 475, 1302, Node999, 50);
end

procedure Set_status_Attack_ALL
begin
    set_map_var(8, 1);
    if (local_var(0) == 1) then begin
        call Node900();
    end
    else begin
        call Node1100();
    end
end

procedure Set_status_Attack_DUDE
begin
    set_map_var(8, 0);
    if (local_var(0) == 1) then begin
        call Node900();
    end
    else begin
        call Node1100();
    end
end

procedure Set_status_Attack_OBRODA
begin
    set_map_var(8, 2);
    if (local_var(0) == 1) then begin
        call Node900();
    end
    else begin
        call Node1100();
    end
end

