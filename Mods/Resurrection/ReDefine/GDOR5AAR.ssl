variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure damage_p_proc;
procedure timed_event_p_proc;

import variable Aaron;
import variable Aaron_door;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
    Aaron_door := self_obj;
end

procedure use_p_proc
begin
    if ((global_var(GVAR_G_TALKED_WITH_SPASITEL) == 2) or (global_var(GVAR_G_DUDE_ENTER_TO_SPAS) != 0)) then begin
        if (local_var(4) == 0) then begin
            set_local_var(4, 1);
            obj_unlock(self_obj);
        end
    end
    if (local_var(4) == 0) then begin
        script_overrides;
        if (Aaron and (Aaron != -1) and (global_var(GVAR_G_DUDE_ENTER_TO_SPAS) == 0)) then begin
            add_timer_event(Aaron, 1, 1);
        end
        else begin
            display_mstr(200);
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(200);
end

procedure use_skill_on_p_proc
begin
    variable LVar0 := 0;
    LVar0 := action_being_used;
    if (LVar0 == 9) then begin
        if (local_var(4) == 0) then begin
            script_overrides;
            if (Aaron and (Aaron != -1) and (global_var(GVAR_G_DUDE_ENTER_TO_SPAS) == 0)) then begin
                add_timer_event(Aaron, 1, 1);
            end
            else begin
                display_mstr(200);
            end
        end
    end
    if (LVar0 == 11) then begin
        script_overrides;
        display_mstr(303);
    end
end

procedure use_obj_on_p_proc
begin
    variable LVar0 := 0;
    LVar0 := obj_pid(obj_being_used_with);
    if ((LVar0 == 84) or (LVar0 == 410) or (LVar0 == 77) or (LVar0 == 411)) then begin
        if (local_var(4) == 0) then begin
            script_overrides;
            if (Aaron and (Aaron != -1) and (global_var(GVAR_G_DUDE_ENTER_TO_SPAS) == 0)) then begin
                add_timer_event(Aaron, 1, 1);
            end
            else begin
                display_mstr(200);
            end
        end
    end
    if (LVar0 == 20) then begin
        script_overrides;
        if (Aaron and (Aaron != -1) and (global_var(GVAR_G_DUDE_ENTER_TO_SPAS) == 0)) then begin
            add_timer_event(Aaron, 1, 1);
        end
        else begin
            display_mstr(300);
        end
    end
end

procedure map_enter_p_proc
begin
    if (map_first_run) then begin
        set_local_var(4, 0);
        obj_lock(self_obj);
    end
end

procedure map_update_p_proc
begin
    if ((global_var(GVAR_G_TALKED_WITH_SPASITEL) == 2) or (global_var(GVAR_G_DUDE_ENTER_TO_SPAS) != 0)) then begin
        if (local_var(4) == 0) then begin
            set_local_var(4, 1);
            obj_unlock(self_obj);
        end
    end
end

procedure damage_p_proc
begin
    if (weapon_dmg_type(target_obj) == 6) then begin
        script_overrides;
        display_mstr(302);
        set_global_var(GVAR_ENEMY_OBRODA, 1);
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 2) then begin
        set_local_var(4, 1);
        obj_unlock(self_obj);
        obj_open(self_obj);
    end
end
