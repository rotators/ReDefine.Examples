variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_exit_p_proc;
procedure combat_p_proc;
procedure timed_event_p_proc;

variable Waiting_time;
variable nextfloater;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if ((map_var(1) == 1) and obj_can_see_obj(self_obj, dude_obj)) then begin
        if (critter_is_fleeing(self_obj)) then begin
            if (anim_busy(self_obj) == 0) then begin
                if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                    if (anim_busy(self_obj) == 0) then begin
                        global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                        global_temp := (global_temp + 1) % 6;
                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                            debug_msg("flee loop: rot == " + global_temp);
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                        end
                    end
                end
            end
        end
        else begin
            attack(dude_obj);
        end
    end
    if (local_var(4) == 1) then begin
        set_local_var(4, 2);
        if (critter_is_fleeing(self_obj)) then begin
            if (anim_busy(self_obj) == 0) then begin
                if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                    if (anim_busy(self_obj) == 0) then begin
                        global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                        global_temp := (global_temp + 1) % 6;
                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                            debug_msg("flee loop: rot == " + global_temp);
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                        end
                    end
                end
            end
        end
        else begin
            attack(dude_obj);
        end
    end
    if (tile_in_tile_rect(19677, 21877, 19670, 21670, tile_num(self_obj))) then begin
        if (tile_in_tile_rect(20277, 20267, 20877, 20867, dude_tile) and (dude_elevation == 0)) then begin
            if ((tile_num(self_obj) == 19874) and (map_var(3) == 1)) then begin
                if ((local_var(5) bwand 2) == 0) then begin
                    if (dude_gender == 0) then begin
                        float_msg(self_obj, mstr(random(364, 367)), FLOAT_MSG_YELLOW);
                    end
                    else begin
                        float_msg(self_obj, mstr(random(360, 363)), FLOAT_MSG_YELLOW);
                    end
                    set_local_var(5, local_var(5) bwor 2);
                    Waiting_time := game_time + random(2, 4);
                end
                if (((game_time - Waiting_time) > (10 * random(2, 4))) and not((local_var(5) bwand 2) == 0)) then begin
                    nextfloater := random(2, 4);
                    set_map_var(3, nextfloater);
                    set_local_var(5, local_var(5) bwand (-1 - 2));
                end
            end
            if ((tile_num(self_obj) == 21275) and (map_var(3) == 2)) then begin
                if ((local_var(5) bwand 2) == 0) then begin
                    if (dude_gender == 0) then begin
                        float_msg(self_obj, mstr(random(364, 367)), FLOAT_MSG_YELLOW);
                    end
                    else begin
                        float_msg(self_obj, mstr(random(360, 363)), FLOAT_MSG_YELLOW);
                    end
                    set_local_var(5, local_var(5) bwor 2);
                    Waiting_time := game_time + random(1, 4);
                end
                if (((game_time - Waiting_time) > (10 * random(2, 4))) and not((local_var(5) bwand 2) == 0)) then begin
                    nextfloater := random(1, 4);
                    if (nextfloater == 2) then begin
                        nextfloater := random(1, 4);
                    end
                    if (nextfloater == 2) then begin
                        nextfloater := random(1, 4);
                    end
                    if (nextfloater == 2) then begin
                        nextfloater := random(1, 4);
                    end
                    set_map_var(3, nextfloater);
                    set_local_var(5, local_var(5) bwand (-1 - 2));
                end
            end
            if ((tile_num(self_obj) == 21271) and (map_var(3) == 3)) then begin
                if ((local_var(5) bwand 2) == 0) then begin
                    if (dude_gender == 0) then begin
                        float_msg(self_obj, mstr(random(364, 367)), FLOAT_MSG_YELLOW);
                    end
                    else begin
                        float_msg(self_obj, mstr(random(360, 363)), FLOAT_MSG_YELLOW);
                    end
                    set_local_var(5, local_var(5) bwor 2);
                    Waiting_time := game_time + random(1, 4);
                end
                if (((game_time - Waiting_time) > (10 * random(2, 4))) and not((local_var(5) bwand 2) == 0)) then begin
                    nextfloater := random(1, 4);
                    if (nextfloater == 3) then begin
                        nextfloater := random(1, 4);
                    end
                    if (nextfloater == 3) then begin
                        nextfloater := random(1, 4);
                    end
                    if (nextfloater == 3) then begin
                        nextfloater := random(1, 4);
                    end
                    set_map_var(3, nextfloater);
                    set_local_var(5, local_var(5) bwand (-1 - 2));
                end
            end
            if ((tile_num(self_obj) == 19872) and (map_var(3) == 4)) then begin
                if ((local_var(5) bwand 2) == 0) then begin
                    if (dude_gender == 0) then begin
                        float_msg(self_obj, mstr(random(364, 367)), FLOAT_MSG_YELLOW);
                    end
                    else begin
                        float_msg(self_obj, mstr(random(360, 363)), FLOAT_MSG_YELLOW);
                    end
                    set_local_var(5, local_var(5) bwor 2);
                    Waiting_time := game_time + random(1, 4);
                end
                if (((game_time - Waiting_time) > (10 * random(2, 4))) and not((local_var(5) bwand 2) == 0)) then begin
                    nextfloater := random(1, 3);
                    set_map_var(3, nextfloater);
                    set_local_var(5, local_var(5) bwand (-1 - 2));
                end
            end
        end
        else begin
            if ((map_var(2) == 2) or (map_var(2) == 5) or (map_var(2) == 8)) then begin
                if ((tile_num(self_obj) == 19874) and (map_var(3) == 1)) then begin
                    if ((local_var(5) bwand 2) == 0) then begin
                        float_msg(self_obj, mstr(random(350, 359)), FLOAT_MSG_YELLOW);
                        set_local_var(5, local_var(5) bwor 2);
                        Waiting_time := game_time + 10;
                    end
                    if (((game_time - Waiting_time) > (10 * random(2, 8))) and not((local_var(5) bwand 2) == 0)) then begin
                        nextfloater := random(2, 4);
                        set_map_var(3, nextfloater);
                        set_local_var(5, local_var(5) bwand (-1 - 2));
                    end
                end
                if ((tile_num(self_obj) == 21275) and (map_var(3) == 2)) then begin
                    if ((local_var(5) bwand 2) == 0) then begin
                        float_msg(self_obj, mstr(random(350, 359)), FLOAT_MSG_YELLOW);
                        set_local_var(5, local_var(5) bwor 2);
                        Waiting_time := game_time + 10;
                    end
                    if (((game_time - Waiting_time) > (10 * random(2, 8))) and not((local_var(5) bwand 2) == 0)) then begin
                        nextfloater := random(1, 4);
                        if (nextfloater == 2) then begin
                            nextfloater := random(1, 4);
                        end
                        if (nextfloater == 2) then begin
                            nextfloater := random(1, 4);
                        end
                        if (nextfloater == 2) then begin
                            nextfloater := random(1, 4);
                        end
                        set_map_var(3, nextfloater);
                        set_local_var(5, local_var(5) bwand (-1 - 2));
                    end
                end
                if ((tile_num(self_obj) == 21271) and (map_var(3) == 3)) then begin
                    if ((local_var(5) bwand 2) == 0) then begin
                        float_msg(self_obj, mstr(random(350, 359)), FLOAT_MSG_YELLOW);
                        set_local_var(5, local_var(5) bwor 2);
                        Waiting_time := game_time + 10;
                    end
                    if (((game_time - Waiting_time) > (10 * random(2, 8))) and not((local_var(5) bwand 2) == 0)) then begin
                        nextfloater := random(1, 4);
                        if (nextfloater == 3) then begin
                            nextfloater := random(1, 4);
                        end
                        if (nextfloater == 3) then begin
                            nextfloater := random(1, 4);
                        end
                        if (nextfloater == 3) then begin
                            nextfloater := random(1, 4);
                        end
                        set_map_var(3, nextfloater);
                        set_local_var(5, local_var(5) bwand (-1 - 2));
                    end
                end
                if ((tile_num(self_obj) == 19872) and (map_var(3) == 4)) then begin
                    if ((local_var(5) bwand 2) == 0) then begin
                        float_msg(self_obj, mstr(random(350, 359)), FLOAT_MSG_YELLOW);
                        set_local_var(5, local_var(5) bwor 2);
                        Waiting_time := game_time + 10;
                    end
                    if (((game_time - Waiting_time) > (10 * random(2, 8))) and not((local_var(5) bwand 2) == 0)) then begin
                        nextfloater := random(1, 3);
                        set_map_var(3, nextfloater);
                        set_local_var(5, local_var(5) bwand (-1 - 2));
                    end
                end
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(4, 1);
    end
end

procedure talk_p_proc
begin
    if (global_var(GVAR_AQ_MUTANT_HUNTER) == 1) then begin
        float_msg(self_obj, mstr(random(320, 329)), FLOAT_MSG_YELLOW);
    end
    else begin
        float_msg(self_obj, mstr(random(300, 312)), FLOAT_MSG_YELLOW);
    end
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (critter_kill_type(self_obj) == KILL_TYPE_children_kills) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(GVAR_TOWN_REP_ALBUQUERQUE, global_var(GVAR_TOWN_REP_ALBUQUERQUE) + -8);
                debug_msg("Added " + -8 + " to Town Rep");
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 0);
        debug_msg("Player gains " + 0 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(200);
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_map_var(1, 1);
    end
end

procedure map_enter_p_proc
begin
    if ((local_var(5) bwand 1) == 0) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 260);
    end
    else begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 258);
    end
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_PEASANTS);
    if (Waiting_time == 0) then begin
        Waiting_time := game_time + random(2, 4);
    end
end

procedure map_exit_p_proc
begin
    float_msg_clear(self_obj);
end

procedure combat_p_proc
begin
    if ((map_var(1) == 1) and ((local_var(5) bwand 1) == 0)) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 258);
        set_global_var(GVAR_AQ_ENEMY_HUNTERS, 1);
        set_local_var(5, local_var(5) bwor 1);
    end
end

procedure timed_event_p_proc
begin
end
