variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure critter_p_proc;
procedure combat_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure map_exit_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure Node998;
procedure Node999;
procedure Node500;
procedure Node550;
procedure Node600;
procedure Node650;
procedure Node700;
procedure Node750;
procedure Node800;
procedure Node850;
procedure Node1000;
procedure Node1050;
procedure Node1100;
procedure Node1150;
procedure Node1200;

variable combat_cry;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if ((local_var(5) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack(dude_obj);
    end
    if (global_var(GVAR_ENEMY_SEDIT) == 1) then begin
        if (obj_can_see_obj(self_obj, dude_obj) or obj_can_hear_obj(self_obj, dude_obj)) then begin
            attack(dude_obj);
        end
    end
    if ((tile_distance(dude_tile, 23102) <= 3) and (local_var(7) != 1) and (local_var(8) != 1)) then begin
        set_local_var(8, 1);
        dialogue_system_enter;
    end
    if ((tile_distance(dude_tile, 23102) <= 3) and (local_var(7) == 1) and (local_var(8) != 1)) then begin
        set_local_var(8, 1);
        if ((obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 3) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 348) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 349) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 232)) then begin
            float_msg(self_obj, mstr(random(306, 308)), FLOAT_MSG_YELLOW);
        end
        else begin
            if ((dude_gender == 1) and ((dude_charisma > 6) or has_trait(TRAIT_TRAIT, dude_obj, TRAIT_sex_appeal))) then begin
                float_msg(self_obj, mstr(random(303, 305)), FLOAT_MSG_YELLOW);
            end
            else begin
                float_msg(self_obj, mstr(random(300, 302)), FLOAT_MSG_YELLOW);
            end
        end
    end
end

procedure combat_p_proc
begin
    if (fixed_param == 4) then begin
        if ((dude_gender == 0) and (dude_luck == 10) and (combat_cry != 41) and (global_var(GVAR_ENEMY_SEDIT) == 1)) then begin
            combat_cry := random(1, 40);
            if (combat_cry == 13) then begin
                float_msg(self_obj, mstr(400), FLOAT_MSG_YELLOW);
                combat_cry := 41;
            end
            if (combat_cry == 23) then begin
                float_msg(self_obj, mstr(401), FLOAT_MSG_YELLOW);
                combat_cry := 41;
            end
        end
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (random(1, 2) == 1) then begin
            float_msg(self_obj, mstr(350 + (dude_gender == 1)), FLOAT_MSG_RED);
        end
        else begin
            float_msg(self_obj, mstr(352), FLOAT_MSG_RED);
        end
        set_local_var(5, 2);
    end
end

procedure talk_p_proc
begin
    anim(dude_obj, 1000, rotation_to_tile(dude_tile, tile_num(self_obj)));
    anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
    start_gdialog(1411, self_obj, 4, -1, -1);
    gsay_start;
    if (local_var(4) != 1) then begin
        call Node500();
    end
    else begin
        call Node1000();
    end
    gsay_end;
    end_dialogue;
    set_local_var(7, 1);
end

procedure look_at_p_proc
begin
    script_overrides;
    display_mstr(100);
end

procedure description_p_proc
begin
    script_overrides;
    display_mstr(200);
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        set_local_var(8, 0);
    end
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 212);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_SEDIT_POLICE);
    if ((local_var(7) == 1) and not(is_loading_game)) then begin
        set_local_var(8, 1);
        add_timer_event(self_obj, game_ticks(2), 1);
    end
end

procedure map_update_p_proc
begin
    if ((local_var(8) == 1) and (dude_elevation != 0)) then begin
        float_msg_clear(self_obj);
    end
end

procedure map_exit_p_proc
begin
    float_msg_clear(self_obj);
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
        set_global_var(GVAR_ENEMY_SEDIT, 1);
    end
end

procedure destroy_p_proc
begin
    set_global_var(GVAR_TOWN_REP_SEDIT, global_var(GVAR_TOWN_REP_SEDIT) + -5);
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
    anim(self_obj, 1000, 1);
end

procedure Node500
begin
    Reply(500);
    giq_option(4, NAME, 501, Node550, NEUTRAL_REACTION);
    giq_option(4, NAME, 502, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 503, Node999, NEUTRAL_REACTION);
end

procedure Node550
begin
    Reply(550);
    set_local_var(4, 1);
    giq_option(4, NAME, 551, Node600, NEUTRAL_REACTION);
    giq_option(4, NAME, 552, Node650, NEUTRAL_REACTION);
    giq_option(4, NAME, 553, Node700, NEUTRAL_REACTION);
    giq_option(6, NAME, 554, Node750, NEUTRAL_REACTION);
    giq_option(4, NAME, 555, Node800, NEUTRAL_REACTION);
    if ((global_var(GVAR_S_TUNNEL_DEATHCLAWS) == 8) and (dude_gender == 0) and (local_var(6) != 1)) then begin
        giq_option(4, NAME, 556, Node1050, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_S_TUNNEL_DEATHCLAWS) == 8) and (dude_gender == 1) and (local_var(6) != 1)) then begin
        giq_option(4, NAME, 557, Node1150, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 558, Node999, NEUTRAL_REACTION);
end

procedure Node600
begin
    Reply(600 + (dude_gender == 1));
    giq_option(4, NAME, 602, Node650, NEUTRAL_REACTION);
    giq_option(4, NAME, 603, Node700, NEUTRAL_REACTION);
    giq_option(6, NAME, 604, Node750, NEUTRAL_REACTION);
    giq_option(4, NAME, 605, Node800, NEUTRAL_REACTION);
    giq_option(4, NAME, 606, Node999, NEUTRAL_REACTION);
end

procedure Node650
begin
    Reply(650);
    giq_option(4, NAME, 651, Node600, NEUTRAL_REACTION);
    giq_option(4, NAME, 652, Node700, NEUTRAL_REACTION);
    giq_option(6, NAME, 653, Node750, NEUTRAL_REACTION);
    giq_option(4, NAME, 654, Node800, NEUTRAL_REACTION);
    giq_option(4, NAME, 655, Node999, NEUTRAL_REACTION);
end

procedure Node700
begin
    Reply(700 + (dude_gender == 1));
    giq_option(4, NAME, 702, Node600, NEUTRAL_REACTION);
    giq_option(4, NAME, 703, Node650, NEUTRAL_REACTION);
    giq_option(6, NAME, 704, Node750, NEUTRAL_REACTION);
    giq_option(4, NAME, 705, Node800, NEUTRAL_REACTION);
    giq_option(4, NAME, 706, Node999, NEUTRAL_REACTION);
end

procedure Node750
begin
    Reply(750);
    giq_option(4, NAME, 751, Node600, NEUTRAL_REACTION);
    giq_option(4, NAME, 752, Node650, NEUTRAL_REACTION);
    giq_option(4, NAME, 753, Node700, NEUTRAL_REACTION);
    giq_option(4, NAME, 754, Node800, NEUTRAL_REACTION);
    giq_option(4, NAME, 755, Node999, NEUTRAL_REACTION);
end

procedure Node800
begin
    Reply(800);
    giq_option(6, NAME, 801, Node850, NEUTRAL_REACTION);
    giq_option(4, NAME, 802, Node600, NEUTRAL_REACTION);
    giq_option(4, NAME, 803, Node650, NEUTRAL_REACTION);
    giq_option(4, NAME, 804, Node700, NEUTRAL_REACTION);
    giq_option(6, NAME, 805, Node750, NEUTRAL_REACTION);
    giq_option(4, NAME, 806, Node999, NEUTRAL_REACTION);
end

procedure Node850
begin
    Reply(850);
    giq_option(4, NAME, 851, Node600, NEUTRAL_REACTION);
    giq_option(4, NAME, 852, Node650, NEUTRAL_REACTION);
    giq_option(4, NAME, 853, Node700, NEUTRAL_REACTION);
    giq_option(6, NAME, 854, Node750, NEUTRAL_REACTION);
    giq_option(4, NAME, 855, Node999, NEUTRAL_REACTION);
end

procedure Node1000
begin
    Reply(1000);
    giq_option(4, NAME, 1001, Node600, NEUTRAL_REACTION);
    giq_option(4, NAME, 1002, Node650, NEUTRAL_REACTION);
    giq_option(4, NAME, 1003, Node700, NEUTRAL_REACTION);
    giq_option(6, NAME, 1004, Node750, NEUTRAL_REACTION);
    giq_option(4, NAME, 1005, Node800, NEUTRAL_REACTION);
    if ((global_var(GVAR_S_TUNNEL_DEATHCLAWS) == 8) and (dude_gender == 0) and (local_var(6) != 1)) then begin
        giq_option(4, NAME, 1006, Node1050, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_S_TUNNEL_DEATHCLAWS) == 8) and (dude_gender == 1) and (local_var(6) != 1)) then begin
        giq_option(4, NAME, 1007, Node1150, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 1008, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 1009, Node999, NEUTRAL_REACTION);
end

procedure Node1050
begin
    Reply(1050);
    set_local_var(6, 1);
    giq_option(4, NAME, 1051, Node1100, NEUTRAL_REACTION);
    giq_option(4, NAME, 1052, Node999, NEUTRAL_REACTION);
end

procedure Node1100
begin
    Reply(1100);
    giq_option(4, NAME, 1101, Node999, NEUTRAL_REACTION);
end

procedure Node1150
begin
    Reply(1150);
    set_local_var(6, 1);
    giq_option(4, NAME, 1151, Node1200, NEUTRAL_REACTION);
    giq_option(4, NAME, 1152, Node999, NEUTRAL_REACTION);
end

procedure Node1200
begin
    Reply(1200);
    giq_option(4, NAME, 1201, Node999, NEUTRAL_REACTION);
end
