variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);

export variable Melkyr_obj;
export variable coffield_obj;
export variable Richie_obj;
export variable Gordon_obj;
export variable Chadwic_obj;
export variable Francis_obj;
export variable Linsday_obj;
export variable Vodka_obj;
export variable Vykladac_zakona;
export variable coffield_table_swap;
export variable coffield_table_trade;
export variable Jail_door;
export variable operation_table;
export variable corath_temp_box;
export variable corath_temp_box2;
export variable corath_forbidden_box;
export variable map_event;
export variable items_carrier;
export variable caravan_cart1;
export variable caravan_cart2;
export variable caravan_cart3;
export variable Cedrick_obj;
export variable Desert_obj;
export variable Bill_obj;
export variable Blaster_obj;

variable sequence;
variable ring_cosmetics;
variable ring_cosmetics2;
variable idiot_cosmetics;
variable cadwic_move;
variable bill_move;
variable cadwic_done;
variable bill_done;
variable cizinec;
variable blaster;
variable fighted_party_member;
variable obyv1;
variable obyv2;
variable obyv3;
variable obyv4;
variable obyv5;
variable obyv6;
variable obyv7;
variable obyv8;
variable cedr;
variable str1;
variable str2;
variable adem;
variable nes1;
variable nes2;
variable neszol1;
variable neszol2;
variable neszol3;
variable neszol4;
variable neszol5;
variable neszol6;
variable neszol7;
variable armor;
variable curr_turn := 1;
variable ring_turn;
variable probability;
variable party_hit_points;
variable enemy_hit_points;
variable party_avg_damage;
variable enemy_avg_damage;
variable party_difficulty;
variable enemy_difficulty;
variable item_pid_number;
variable chadwic_knife_out;
variable hit_chance;
variable need_to_hit;
variable random_number;
variable hb_party;
variable hb_enemy;
variable party_dies;
variable enemy_dies;
variable can_kick;
variable kick_or_hand;
variable party_fighter;
variable enemy_fighter;
variable PartyFigher;
variable notremove_timer;
variable destroyItemsBox;

procedure start;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure map_exit_p_proc;
procedure timed_event_p_proc;
procedure create_fake_hero;
procedure create_obecenstvo;
procedure destroy_obecenstvo;
procedure place_vykladac_near_ring;
procedure return_vykladac_home;
procedure dude_out_of_ring;
procedure generate_oponent;
procedure place_party;
procedure chadwic_wield_knife;
procedure hand_hit_enemy;
procedure hand_hit_party;
procedure hand_miss_enemy;
procedure hand_miss_party;
procedure kick_hit_enemy;
procedure kick_hit_party;
procedure kick_miss_enemy;
procedure kick_miss_party;
procedure knife_hit_party;
procedure knife_miss_party;
procedure party_loose;
procedure enemy_loose;
procedure generate_party_and_oponent;
procedure floats_when_party_fight;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
    map_event := self_obj;
end

procedure map_enter_p_proc
begin
    if (map_first_run and ((map_var(0) bwand 2) == 0) and not(is_loading_game)) then begin
        while ((game_time_hour > 2000) or (game_time_hour < 800)) do begin
            game_time_advance(1 * (60 * (60 * 10)));
        end
        if (dude_gender == 0) then begin
            display_mstr(100);
        end
        if (dude_gender == 1) then begin
            display_mstr(101);
        end
    end
    if (not(is_loading_game)) then begin
        if (global_var(GVAR_C_RING_POINTER) != 0) then begin
            while ((game_time_hour > 2000) or (game_time_hour < 800)) do begin
                game_time_advance(1 * (60 * (60 * 10)));
            end
            game_ui_disable;
            if (global_var(GVAR_C_RING_POINTER) != 5) then begin
                add_timer_event(self_obj, game_ticks(0), 20);
            end
            else begin
                add_timer_event(self_obj, game_ticks(0), 50);
            end
        end
        if (((map_var(0) bwand 8) == 0) and (global_var(GVAR_NESTOR_LEAVED_CORATH) == 1) and ((global_var(GVAR_C_QUEST_UNCLE_Q1) == 4) or ((global_var(GVAR_C_CORATH_STATUS) bwand 1024) != 0) and ((global_var(GVAR_C_QUEST_UNCLE_Q2) == 3) or (global_var(GVAR_C_STRIKE_IN_MINE) == 3)))) then begin
            neszol1 := create_object_sid(16777906, 27682, 0, SCRIPT_CNESPRIS);
            neszol2 := create_object_sid(16777905, 27479, 0, SCRIPT_CNESPRIS);
            neszol3 := create_object_sid(16777904, 27471, 0, SCRIPT_CNESPRIS);
            neszol4 := create_object_sid(16777903, 28283, 0, SCRIPT_CNESPRIS);
            neszol5 := create_object_sid(16777902, 28271, 0, SCRIPT_CNESPRIS);
            neszol6 := create_object_sid(16777903, 27268, 0, SCRIPT_CNESPRIS);
            neszol7 := create_object_sid(16777905, 28080, 0, SCRIPT_CNESPRIS);
            anim(neszol1, 1000, 1);
            anim(neszol2, 1000, 2);
            anim(neszol3, 1000, 2);
            anim(neszol4, 1000, 0);
            anim(neszol5, 1000, 4);
            anim(neszol6, 1000, 3);
            anim(neszol7, 1000, 0);
            set_map_var(0, map_var(0) bwor 8);
        end
        sequence := 0;
        ring_cosmetics := 0;
        ring_cosmetics2 := 0;
    end
    if (((global_var(GVAR_PTR_LYSTRA_REACTIONS_1) bwand 2) != 0) and ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0))) then begin
        set_global_var(GVAR_PTR_LYSTRA_REACTIONS_1, global_var(GVAR_PTR_LYSTRA_REACTIONS_1) bwand (-1 - 2));
        set_global_var(GVAR_PTR_LYSTRA_REACTIONS_1, global_var(GVAR_PTR_LYSTRA_REACTIONS_1) bwor 8);
    end
    if ((get_month >= 3) and (get_month < 5)) then begin
        if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
            set_light_level(game_time_hour - 600 + 40);
        end
        else begin
            if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                set_light_level(100);
            end
            else begin
                if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                    set_light_level(100 - (game_time_hour - 1800));
                end
                else begin
                    set_light_level(40);
                end
            end
        end
    end
    else begin
        if ((get_month >= 5) and (get_month < 9)) then begin
            if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                set_light_level(game_time_hour - 500 + 40);
            end
            else begin
                if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1900));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 9) and (get_month < 11)) then begin
                if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                    set_light_level(game_time_hour - 600 + 40);
                end
                else begin
                    if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1800));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                    set_light_level(game_time_hour - 700 + 40);
                end
                else begin
                    if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1700));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
        end
    end
end

procedure map_update_p_proc
begin
    if ((get_month >= 3) and (get_month < 5)) then begin
        if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
            set_light_level(game_time_hour - 600 + 40);
        end
        else begin
            if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                set_light_level(100);
            end
            else begin
                if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                    set_light_level(100 - (game_time_hour - 1800));
                end
                else begin
                    set_light_level(40);
                end
            end
        end
    end
    else begin
        if ((get_month >= 5) and (get_month < 9)) then begin
            if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                set_light_level(game_time_hour - 500 + 40);
            end
            else begin
                if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1900));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 9) and (get_month < 11)) then begin
                if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                    set_light_level(game_time_hour - 600 + 40);
                end
                else begin
                    if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1800));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                    set_light_level(game_time_hour - 700 + 40);
                end
                else begin
                    if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1700));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
        end
    end
end

procedure map_exit_p_proc
begin
end

procedure timed_event_p_proc
begin
    if (((map_var(0) bwand 2) == 0) and (fixed_param == 1)) then begin
        if (fixed_param == 1) then begin
            sequence := sequence + 1;
        end
        if (sequence == 1) then begin
            game_ui_disable;
            add_timer_event(self_obj, game_ticks(1), 1);
        end
        if (sequence == 2) then begin
            gfade_out(600);
            add_timer_event(self_obj, game_ticks(1), 1);
        end
        if (sequence == 3) then begin
            game_time_advance(15 * (60 * 10));
            if (not((global_var(GVAR_C_CORATH_STATUS) bwand 1073741824) != 0)) then begin
                set_global_var(GVAR_C_CORATH_STATUS, global_var(GVAR_C_CORATH_STATUS) bwor 1073741824);
            end
            add_timer_event(self_obj, game_ticks(1), 1);
        end
        if (sequence == 4) then begin
            gfade_in(600);
            add_timer_event(self_obj, game_ticks(1), 1);
        end
        if (sequence == 5) then begin
            game_ui_enable;
            set_map_var(0, map_var(0) bwor 2);
            sequence := 0;
            rm_timer_event(self_obj);
        end
    end
    if (((map_var(0) bwand 2) == 0) and (fixed_param == 10)) then begin
        if (fixed_param == 10) then begin
            sequence := sequence + 1;
        end
        if (sequence == 1) then begin
            gfade_out(600);
            if (not((global_var(GVAR_C_CORATH_STATUS) bwand 1073741824) != 0)) then begin
                set_global_var(GVAR_C_CORATH_STATUS, global_var(GVAR_C_CORATH_STATUS) bwor 1073741824);
            end
            blaster := create_object_sid(16777858, 16091, 0, SCRIPT_CBLASTER);
            anim(blaster, 1000, 3);
            cizinec := create_object(16777907, 16092, 0);
            anim(cizinec, 1000, 0);
            call create_obecenstvo();
            call place_vykladac_near_ring();
            float_msg(obyv5, mstr(310), FLOAT_MSG_YELLOW);
            float_msg(obyv6, mstr(311), FLOAT_MSG_YELLOW);
            add_timer_event(self_obj, game_ticks(1), 10);
        end
        if (sequence == 2) then begin
            float_msg(obyv1, mstr(312), FLOAT_MSG_YELLOW);
            play_sfx("HMXXXXAQ");
            play_sfx("HMXXXXZQ");
            reg_anim_func(2, dude_obj);
            move_to(dude_obj, 16908, dude_elevation);
            if (party_member_obj(16777729) != 0) then begin
                if (party_member_obj(16777729) != 0) then begin
                    if (obj_is_visible_flag(party_member_obj(16777729))) then begin
                        critter_attempt_placement(party_member_obj(16777729), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 4), dude_elevation);
                    end
                end
            end
            if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
                if (party_member_obj(16777779) != 0) then begin
                    if (obj_is_visible_flag(party_member_obj(16777779))) then begin
                        critter_attempt_placement(party_member_obj(16777779), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 4), dude_elevation);
                    end
                end
            end
            if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
                if (party_member_obj(16777811) != 0) then begin
                    if (obj_is_visible_flag(party_member_obj(16777811))) then begin
                        critter_attempt_placement(party_member_obj(16777811), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 4), dude_elevation);
                    end
                end
            end
            if (party_member_obj(16777812) != 0) then begin
                if (party_member_obj(16777812) != 0) then begin
                    if (obj_is_visible_flag(party_member_obj(16777812))) then begin
                        critter_attempt_placement(party_member_obj(16777812), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 4), dude_elevation);
                    end
                end
            end
            if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
                if (party_member_obj(16777814) != 0) then begin
                    if (obj_is_visible_flag(party_member_obj(16777814))) then begin
                        critter_attempt_placement(party_member_obj(16777814), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 4), dude_elevation);
                    end
                end
            end
            if (party_member_obj(16777748) != 0) then begin
                if (party_member_obj(16777748) != 0) then begin
                    if (obj_is_visible_flag(party_member_obj(16777748))) then begin
                        critter_attempt_placement(party_member_obj(16777748), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 4), dude_elevation);
                    end
                end
            end
            if (party_member_obj(16778017) != 0) then begin
                if (party_member_obj(16778017) != 0) then begin
                    if (obj_is_visible_flag(party_member_obj(16778017))) then begin
                        critter_attempt_placement(party_member_obj(16778017), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 4), dude_elevation);
                    end
                end
            end
            if (party_member_obj(16778016) != 0) then begin
                if (party_member_obj(16778016) != 0) then begin
                    if (obj_is_visible_flag(party_member_obj(16778016))) then begin
                        critter_attempt_placement(party_member_obj(16778016), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 4), dude_elevation);
                    end
                end
            end
            if (party_member_obj(16778049) != 0) then begin
                if (party_member_obj(16778049) != 0) then begin
                    if (obj_is_visible_flag(party_member_obj(16778049))) then begin
                        critter_attempt_placement(party_member_obj(16778049), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 4), dude_elevation);
                    end
                end
            end
            if (party_member_obj(16778050) != 0) then begin
                if (party_member_obj(16778050) != 0) then begin
                    if (obj_is_visible_flag(party_member_obj(16778050))) then begin
                        critter_attempt_placement(party_member_obj(16778050), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 4), dude_elevation);
                    end
                end
            end
            if (party_member_obj(16778051) != 0) then begin
                if (party_member_obj(16778051) != 0) then begin
                    if (obj_is_visible_flag(party_member_obj(16778051))) then begin
                        critter_attempt_placement(party_member_obj(16778051), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 4), dude_elevation);
                    end
                end
            end
            if (party_member_obj(16777294) != 0) then begin
                if (party_member_obj(16777294) != 0) then begin
                    if (obj_is_visible_flag(party_member_obj(16777294))) then begin
                        critter_attempt_placement(party_member_obj(16777294), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 4), dude_elevation);
                    end
                end
            end
            animate_move_obj_to_tile(dude_obj, 16301, 0);
            tile_set_center(15691);
            add_timer_event(self_obj, game_ticks(1), 10);
        end
        if (sequence == 3) then begin
            gfade_in(600);
            add_timer_event(self_obj, game_ticks(1), 10);
        end
        if (sequence == 4) then begin
            add_timer_event(self_obj, game_ticks(0), 10);
        end
        if (sequence == 5) then begin
            add_timer_event(self_obj, game_ticks(0), 10);
        end
        if (sequence == 6) then begin
            if (not(dude_tile == 16301)) then begin
                animate_move_obj_to_tile(dude_obj, 16301, 1);
            end
            if (dude_tile == 16301) then begin
                anim(dude_obj, 1000, 0);
            end
            float_msg(obyv4, mstr(310), FLOAT_MSG_YELLOW);
            reg_anim_func(2, cizinec);
            reg_anim_func(1, 1);
            reg_anim_animate(cizinec, 16, -1);
            reg_anim_func(3, 0);
            reg_anim_func(2, blaster);
            reg_anim_func(1, 1);
            reg_anim_animate(blaster, 14, -1);
            play_sfx("HMXXXXAQ");
            play_sfx("HMXXXXZQ");
            reg_anim_func(3, 0);
            float_msg(obyv6, mstr(316), FLOAT_MSG_YELLOW);
            add_timer_event(self_obj, game_ticks(2), 10);
        end
        if (sequence == 7) then begin
            reg_anim_func(2, cizinec);
            reg_anim_func(1, 1);
            reg_anim_animate(cizinec, 16, -1);
            reg_anim_func(3, 0);
            reg_anim_func(2, blaster);
            reg_anim_func(1, 1);
            reg_anim_animate(blaster, 14, -1);
            reg_anim_func(3, 0);
            play_sfx("HMXXXXAQ");
            play_sfx("HMXXXXZQ");
            float_msg(obyv5, mstr(318), FLOAT_MSG_YELLOW);
            add_timer_event(self_obj, game_ticks(2), 10);
        end
        if (sequence == 8) then begin
            reg_anim_func(2, cizinec);
            reg_anim_func(1, 1);
            reg_anim_animate(cizinec, 14, -1);
            reg_anim_func(3, 0);
            reg_anim_func(2, blaster);
            reg_anim_func(1, 1);
            reg_anim_animate(blaster, 16, -1);
            reg_anim_func(3, 0);
            play_sfx("HMXXXXAQ");
            play_sfx("HMXXXXAP");
            play_sfx("HMXXXXZQ");
            float_msg(obyv6, mstr(320), FLOAT_MSG_YELLOW);
            add_timer_event(self_obj, game_ticks(2), 10);
        end
        if (sequence == 9) then begin
            reg_anim_func(2, cizinec);
            reg_anim_func(1, 1);
            reg_anim_animate(cizinec, 17, -1);
            reg_anim_func(3, 0);
            reg_anim_func(2, blaster);
            reg_anim_func(1, 1);
            reg_anim_animate(blaster, 14, -1);
            reg_anim_func(3, 0);
            play_sfx("HMXXXXAR");
            play_sfx("HMXXXXZR");
            float_msg(obyv4, mstr(315), FLOAT_MSG_YELLOW);
            add_timer_event(self_obj, game_ticks(2), 10);
        end
        if (sequence == 10) then begin
            reg_anim_func(2, cizinec);
            reg_anim_func(1, 1);
            reg_anim_animate(cizinec, 16, -1);
            reg_anim_func(3, 0);
            reg_anim_func(2, blaster);
            reg_anim_func(1, 1);
            reg_anim_animate(blaster, 14, -1);
            reg_anim_func(3, 0);
            play_sfx("HMXXXXAQ");
            play_sfx("HMXXXXZQ");
            float_msg(obyv5, mstr(322), FLOAT_MSG_YELLOW);
            add_timer_event(self_obj, game_ticks(2), 10);
        end
        if (sequence == 11) then begin
            reg_anim_func(2, cizinec);
            reg_anim_func(1, 1);
            reg_anim_animate(cizinec, 20, -1);
            reg_anim_func(3, 0);
            reg_anim_func(2, blaster);
            reg_anim_func(1, 1);
            reg_anim_animate(blaster, 16, -1);
            reg_anim_func(3, 0);
            play_sfx("HMXXXXAQ");
            play_sfx("HMXXXXZQ");
            play_sfx("HMXXXXBA");
            float_msg(adem, mstr(333), FLOAT_MSG_YELLOW);
            float_msg(cedr, mstr(330), FLOAT_MSG_YELLOW);
            add_timer_event(self_obj, game_ticks(2), 10);
        end
        if (sequence == 12) then begin
            reg_anim_func(2, cizinec);
            reg_anim_func(1, 1);
            reg_anim_animate(cizinec, 37, -1);
            reg_anim_func(3, 0);
            float_msg(obyv1, mstr(310), FLOAT_MSG_YELLOW);
            float_msg(str1, mstr(331), FLOAT_MSG_YELLOW);
            add_timer_event(self_obj, game_ticks(2), 10);
        end
        if (sequence == 13) then begin
            reg_anim_func(2, cizinec);
            reg_anim_func(1, 1);
            reg_anim_animate(cizinec, 17, -1);
            reg_anim_func(3, 0);
            reg_anim_func(2, blaster);
            reg_anim_func(1, 1);
            reg_anim_animate(blaster, 14, -1);
            reg_anim_func(3, 0);
            play_sfx("HMXXXXAR");
            play_sfx("HMXXXXZR");
            add_timer_event(self_obj, game_ticks(2), 10);
        end
        if (sequence == 14) then begin
            reg_anim_func(2, cizinec);
            reg_anim_func(1, 1);
            reg_anim_animate(cizinec, 28, -1);
            reg_anim_func(3, 0);
            reg_anim_func(2, blaster);
            reg_anim_func(1, 1);
            reg_anim_animate(blaster, 16, -1);
            reg_anim_func(3, 0);
            play_sfx("HMXXXXBE");
            play_sfx("HMXXXXAQ");
            play_sfx("HMXXXXBI");
            play_sfx("HMXXXXZQ");
            float_msg(adem, mstr(335), FLOAT_MSG_YELLOW);
            float_msg(cedr, mstr(332), FLOAT_MSG_YELLOW);
            add_timer_event(Melkyr_obj, game_ticks(0), 1);
            add_timer_event(self_obj, game_ticks(1), 10);
        end
        if (sequence == 15) then begin
            kill_critter(cizinec, 28);
            add_timer_event(Melkyr_obj, game_ticks(3), 2);
        end
        if (sequence == 16) then begin
            game_ui_disable;
            gfade_out(600);
            add_timer_event(self_obj, game_ticks(1), 10);
        end
        if (sequence == 17) then begin
            destroy_object(blaster);
            destroy_object(cizinec);
            call destroy_obecenstvo();
            call return_vykladac_home();
            add_timer_event(self_obj, game_ticks(1), 10);
        end
        if (sequence == 18) then begin
            gfade_in(600);
            add_timer_event(self_obj, game_ticks(1), 10);
        end
        if (sequence == 19) then begin
            game_ui_enable;
            set_map_var(0, map_var(0) bwor 2);
            sequence := 0;
            rm_timer_event(self_obj);
        end
    end
    if ((global_var(GVAR_C_RING_POINTER) != 0) and (fixed_param == 20) and not((global_var(GVAR_C_RING_VICTORIES) bwand 262144) != 0)) then begin
        if (fixed_param == 20) then begin
            ring_cosmetics := ring_cosmetics + 1;
        end
        if (ring_cosmetics == 1) then begin
            move_to(dude_obj, 18098, elevation(self_obj));
            anim(dude_obj, 1000, 1);
            if (party_member_obj(16777729) != 0) then begin
                if (party_member_obj(16777729) != 0) then begin
                    if (obj_is_visible_flag(party_member_obj(16777729))) then begin
                        critter_attempt_placement(party_member_obj(16777729), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
                    end
                end
            end
            if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
                if (party_member_obj(16777779) != 0) then begin
                    if (obj_is_visible_flag(party_member_obj(16777779))) then begin
                        critter_attempt_placement(party_member_obj(16777779), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
                    end
                end
            end
            if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
                if (party_member_obj(16777811) != 0) then begin
                    if (obj_is_visible_flag(party_member_obj(16777811))) then begin
                        critter_attempt_placement(party_member_obj(16777811), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
                    end
                end
            end
            if (party_member_obj(16777812) != 0) then begin
                if (party_member_obj(16777812) != 0) then begin
                    if (obj_is_visible_flag(party_member_obj(16777812))) then begin
                        critter_attempt_placement(party_member_obj(16777812), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
                    end
                end
            end
            if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
                if (party_member_obj(16777814) != 0) then begin
                    if (obj_is_visible_flag(party_member_obj(16777814))) then begin
                        critter_attempt_placement(party_member_obj(16777814), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
                    end
                end
            end
            if (party_member_obj(16777748) != 0) then begin
                if (party_member_obj(16777748) != 0) then begin
                    if (obj_is_visible_flag(party_member_obj(16777748))) then begin
                        critter_attempt_placement(party_member_obj(16777748), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
                    end
                end
            end
            if (party_member_obj(16778017) != 0) then begin
                if (party_member_obj(16778017) != 0) then begin
                    if (obj_is_visible_flag(party_member_obj(16778017))) then begin
                        critter_attempt_placement(party_member_obj(16778017), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
                    end
                end
            end
            if (party_member_obj(16778016) != 0) then begin
                if (party_member_obj(16778016) != 0) then begin
                    if (obj_is_visible_flag(party_member_obj(16778016))) then begin
                        critter_attempt_placement(party_member_obj(16778016), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
                    end
                end
            end
            if (party_member_obj(16778049) != 0) then begin
                if (party_member_obj(16778049) != 0) then begin
                    if (obj_is_visible_flag(party_member_obj(16778049))) then begin
                        critter_attempt_placement(party_member_obj(16778049), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
                    end
                end
            end
            if (party_member_obj(16778050) != 0) then begin
                if (party_member_obj(16778050) != 0) then begin
                    if (obj_is_visible_flag(party_member_obj(16778050))) then begin
                        critter_attempt_placement(party_member_obj(16778050), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
                    end
                end
            end
            if (party_member_obj(16778051) != 0) then begin
                if (party_member_obj(16778051) != 0) then begin
                    if (obj_is_visible_flag(party_member_obj(16778051))) then begin
                        critter_attempt_placement(party_member_obj(16778051), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
                    end
                end
            end
            if (party_member_obj(16777294) != 0) then begin
                if (party_member_obj(16777294) != 0) then begin
                    if (obj_is_visible_flag(party_member_obj(16777294))) then begin
                        critter_attempt_placement(party_member_obj(16777294), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
                    end
                end
            end
            move_to(Vykladac_zakona, 18495, elevation(self_obj));
            anim(Vykladac_zakona, 1000, 4);
            add_timer_event(self_obj, game_ticks(2), 20);
        end
        if (ring_cosmetics == 2) then begin
            if ((global_var(GVAR_C_RING_POINTER) == 2) or ((global_var(GVAR_C_RING_POINTER) == 1) and (bill_done == 1))) then begin
                gfade_in(600);
            end
            game_ui_enable;
            add_timer_event(Vykladac_zakona, game_ticks(0), 1);
        end
        if (ring_cosmetics == 3) then begin
            if (not(game_ui_is_disabled)) then begin
                game_ui_disable;
            end
            add_timer_event(self_obj, game_ticks(1), 20);
        end
        if (ring_cosmetics == 4) then begin
            gfade_out(600);
            add_timer_event(self_obj, game_ticks(1), 20);
        end
        if (ring_cosmetics == 5) then begin
            if (map_var(1) == 0) then begin
                move_to(dude_obj, 16491, elevation(self_obj));
                anim(dude_obj, 1000, 5);
                tile_set_center(15690);
                set_map_var(2, obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND)));
                set_map_var(3, obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND)));
                armor := obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN));
                move_obj_inven_to_obj(dude_obj, corath_temp_box);
                if (obj_is_carrying_obj_pid(corath_temp_box, 319)) then begin
                    removed_qty := obj_is_carrying_obj_pid(corath_temp_box, 319);
                    if (1 < removed_qty) then begin
                        removed_qty := 1;
                    end
                    if (removed_qty > 0) then begin
                        restock_obj := obj_carrying_pid_obj(corath_temp_box, 319);
                        if (obj_type(self_obj) == 1) then begin
                            restock_obj := obj_carrying_pid_obj(corath_temp_box, 319);
                            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                if (obj_item_subtype(critter_inven_obj(corath_temp_box, INVEN_TYPE_WORN)) == 0) then begin
                                    restock_obj := critter_inven_obj(corath_temp_box, INVEN_TYPE_WORN);
                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                    rm_obj_from_inven(corath_temp_box, restock_obj);
                                    add_obj_to_inven(corath_temp_box, restock_obj);
                                end
                            end
                            else begin
                                if ((critter_inven_obj(corath_temp_box, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(corath_temp_box, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                    inven_unwield(corath_temp_box);
                                end
                            end
                        end
                        restock_amt := rm_mult_objs_from_inven(corath_temp_box, restock_obj, removed_qty);
                        if (restock_amt == 0) then begin
                            toRemove_qty := 1;
                            while ((toRemove_qty > 0) and obj_carrying_pid_obj(corath_temp_box, 319)) do begin
                                restock_obj := obj_carrying_pid_obj(corath_temp_box, 319);
                                rm_obj_from_inven(corath_temp_box, restock_obj);
                                destroy_object(restock_obj);
                                toRemove_qty := toRemove_qty - 1;
                            end
                        end
                        else begin
                            destroy_object(restock_obj);
                        end
                    end
                    restock_obj := 0;
                    restock_amt := 0;
                    restock_obj := create_object(319, 0, 0);
                    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
                end
                restock_obj := create_object(armor, 0, 0);
                add_mult_objs_to_inven(dude_obj, restock_obj, 1);
                wield_obj_critter(dude_obj, restock_obj);
                removed_qty := obj_is_carrying_obj_pid(corath_temp_box, armor);
                if (1 < removed_qty) then begin
                    removed_qty := 1;
                end
                if (removed_qty > 0) then begin
                    restock_obj := obj_carrying_pid_obj(corath_temp_box, armor);
                    if (obj_type(self_obj) == 1) then begin
                        restock_obj := obj_carrying_pid_obj(corath_temp_box, armor);
                        if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                            if (obj_item_subtype(critter_inven_obj(corath_temp_box, INVEN_TYPE_WORN)) == 0) then begin
                                restock_obj := critter_inven_obj(corath_temp_box, INVEN_TYPE_WORN);
                                debug_msg("armour pid == " + obj_pid(restock_obj));
                                rm_obj_from_inven(corath_temp_box, restock_obj);
                                add_obj_to_inven(corath_temp_box, restock_obj);
                            end
                        end
                        else begin
                            if ((critter_inven_obj(corath_temp_box, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(corath_temp_box, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                inven_unwield(corath_temp_box);
                            end
                        end
                    end
                    restock_amt := rm_mult_objs_from_inven(corath_temp_box, restock_obj, removed_qty);
                    if (restock_amt == 0) then begin
                        toRemove_qty := 1;
                        while ((toRemove_qty > 0) and obj_carrying_pid_obj(corath_temp_box, armor)) do begin
                            restock_obj := obj_carrying_pid_obj(corath_temp_box, armor);
                            rm_obj_from_inven(corath_temp_box, restock_obj);
                            destroy_object(restock_obj);
                            toRemove_qty := toRemove_qty - 1;
                        end
                    end
                    else begin
                        destroy_object(restock_obj);
                    end
                end
                restock_obj := 0;
                restock_amt := 0;
                call generate_oponent();
                call place_party();
            end
            else begin
                if (global_var(GVAR_C_RING_POINTER) == 1) then begin
                    while ((item_pid_number < 560) and not((global_var(GVAR_C_RING_VICTORIES) bwand 524288) != 0)) do begin
                        if ((map_var(1) == 1) and ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) and obj_is_carrying_obj_pid(party_member_obj(16777779), item_pid_number)) then begin
                            set_global_var(GVAR_C_RING_VICTORIES, global_var(GVAR_C_RING_VICTORIES) bwor 524288);
                        end
                        if ((map_var(1) == 2) and ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) and obj_is_carrying_obj_pid(party_member_obj(16777811), item_pid_number)) then begin
                            set_global_var(GVAR_C_RING_VICTORIES, global_var(GVAR_C_RING_VICTORIES) bwor 524288);
                        end
                        if ((map_var(1) == 3) and ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) and obj_is_carrying_obj_pid(party_member_obj(16777814), item_pid_number)) then begin
                            set_global_var(GVAR_C_RING_VICTORIES, global_var(GVAR_C_RING_VICTORIES) bwor 524288);
                        end
                        item_pid_number := item_pid_number + 1;
                    end
                    item_pid_number := 0;
                end
                if ((map_var(1) == 1) and ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0))) then begin
                    set_map_var(4, obj_pid(critter_inven_obj(party_member_obj(16777779), INVEN_TYPE_WORN)));
                    move_obj_inven_to_obj(party_member_obj(16777779), corath_temp_box);
                end
                if ((map_var(1) == 2) and ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0))) then begin
                    set_map_var(4, obj_pid(critter_inven_obj(party_member_obj(16777811), INVEN_TYPE_WORN)));
                    move_obj_inven_to_obj(party_member_obj(16777811), corath_temp_box);
                end
                if ((map_var(1) == 3) and ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0))) then begin
                    set_map_var(4, obj_pid(critter_inven_obj(party_member_obj(16777814), INVEN_TYPE_WORN)));
                    move_obj_inven_to_obj(party_member_obj(16777814), corath_temp_box);
                end
                call generate_party_and_oponent();
                call create_fake_hero();
            end
            call place_vykladac_near_ring();
            call create_obecenstvo();
            if (global_var(GVAR_C_RING_POINTER) == 5) then begin
                destroy_object(Cedrick_obj);
            end
            add_timer_event(self_obj, game_ticks(2), 20);
        end
        if (ring_cosmetics == 6) then begin
            gfade_in(600);
            add_timer_event(self_obj, game_ticks(1), 20);
        end
        if (ring_cosmetics == 7) then begin
            if (global_var(GVAR_C_RING_POINTER) <= 2) then begin
                float_msg(Vykladac_zakona, mstr(200), FLOAT_MSG_YELLOW);
            end
            else begin
                float_msg(Vykladac_zakona, mstr(400), FLOAT_MSG_YELLOW);
            end
            add_timer_event(self_obj, game_ticks(5), 20);
        end
        if (ring_cosmetics == 8) then begin
            if (((global_var(GVAR_C_RING_VICTORIES) bwand 16384) != 0) or ((global_var(GVAR_C_RING_VICTORIES) bwand 32768) != 0) or ((global_var(GVAR_C_RING_VICTORIES) bwand 65536) != 0)) then begin
                float_msg(Vykladac_zakona, mstr(202), FLOAT_MSG_YELLOW);
            end
            else begin
                float_msg(Vykladac_zakona, mstr(201), FLOAT_MSG_YELLOW);
            end
            add_timer_event(self_obj, game_ticks(3), 20);
        end
        if (ring_cosmetics == 9) then begin
            if (not((global_var(GVAR_C_RING_VICTORIES) bwand 16384) != 0)) then begin
                if (not((global_var(GVAR_C_RING_VICTORIES) bwand 32768) != 0)) then begin
                    if (not((global_var(GVAR_C_RING_VICTORIES) bwand 65536) != 0)) then begin
                        float_msg(obyv6, mstr(250), FLOAT_MSG_RED);
                    end
                end
            end
            add_timer_event(self_obj, game_ticks(3), 20);
        end
        if (ring_cosmetics == 10) then begin
            if (((global_var(GVAR_C_RING_VICTORIES) bwand 16384) != 0) or ((global_var(GVAR_C_RING_VICTORIES) bwand 32768) != 0) or ((global_var(GVAR_C_RING_VICTORIES) bwand 65536) != 0)) then begin
                float_msg(Vykladac_zakona, mstr(301), FLOAT_MSG_YELLOW);
            end
            else begin
                float_msg(Vykladac_zakona, mstr(300), FLOAT_MSG_YELLOW);
            end
            if (((global_var(GVAR_C_RING_VICTORIES) bwand 16384) != 0) or ((global_var(GVAR_C_RING_VICTORIES) bwand 32768) != 0) or ((global_var(GVAR_C_RING_VICTORIES) bwand 65536) != 0)) then begin
                add_timer_event(self_obj, game_ticks(5), 20);
            end
            else begin
                add_timer_event(self_obj, game_ticks(3), 20);
            end
        end
        if (ring_cosmetics == 11) then begin
            if ((global_var(GVAR_C_RING_VICTORIES) bwand 16384) != 0) then begin
                float_msg(Vykladac_zakona, mstr(302), FLOAT_MSG_YELLOW);
            end
            else begin
                float_msg(Vykladac_zakona, mstr(301), FLOAT_MSG_YELLOW);
            end
            if ((global_var(GVAR_C_RING_VICTORIES) bwand 16384) != 0) then begin
                ring_cosmetics := ring_cosmetics + 1;
                add_timer_event(self_obj, game_ticks(5), 20);
            end
            else begin
                add_timer_event(self_obj, game_ticks(3), 20);
            end
        end
        if (ring_cosmetics == 12) then begin
            float_msg(Vykladac_zakona, mstr(302), FLOAT_MSG_YELLOW);
            if ((global_var(GVAR_C_RING_POINTER) == 3) and (map_var(1) == 4)) then begin
                add_timer_event(self_obj, game_ticks(2), 997);
                add_timer_event(self_obj, game_ticks(7), 998);
            end
            if ((global_var(GVAR_C_RING_POINTER) == 4) or (global_var(GVAR_C_RING_POINTER) == 5)) then begin
                if (map_var(1) == 1) then begin
                    float_msg(party_fighter, mstr(1200) + dude_name + mstr(1201 + (dude_gender == 1)), FLOAT_MSG_RED);
                end
                if (map_var(1) == 2) then begin
                    float_msg(party_fighter, mstr(1203), FLOAT_MSG_RED);
                end
                if (map_var(1) == 3) then begin
                    float_msg(party_fighter, mstr(1204), FLOAT_MSG_RED);
                end
            end
            if (map_var(1) == 0) then begin
                add_timer_event(self_obj, game_ticks(3), 20);
            end
            else begin
                if (map_var(1) == 4) then begin
                    add_timer_event(self_obj, game_ticks(11), 60);
                end
                else begin
                    add_timer_event(self_obj, game_ticks(3), 60);
                end
            end
        end
        if ((ring_cosmetics == 13) and (map_var(1) == 0)) then begin
            game_ui_enable;
            set_global_var(GVAR_C_RING_VICTORIES, global_var(GVAR_C_RING_VICTORIES) bwor 262144);
        end
    end
    if ((global_var(GVAR_C_RING_POINTER) != 0) and (fixed_param == 30) and (((global_var(GVAR_C_RING_VICTORIES) bwand 262144) != 0) or (map_var(1) != 0))) then begin
        if (fixed_param == 30) then begin
            ring_cosmetics2 := ring_cosmetics2 + 1;
        end
        if (ring_cosmetics2 == 1) then begin
            if (map_var(1) == 0) then begin
                game_ui_disable;
            end
            if ((map_var(0) bwand 128) != 0) then begin
                set_map_var(0, map_var(0) bwand (-1 - 128));
            end
            if ((map_var(0) bwand 256) != 0) then begin
                set_map_var(0, map_var(0) bwand (-1 - 256));
            end
            if ((map_var(0) bwand 512) != 0) then begin
                set_map_var(0, map_var(0) bwand (-1 - 512));
            end
            if ((map_var(0) bwand 1024) != 0) then begin
                set_map_var(0, map_var(0) bwand (-1 - 1024));
            end
            add_timer_event(self_obj, game_ticks(1), 30);
        end
        if (ring_cosmetics2 == 2) then begin
            gfade_out(600);
            add_timer_event(self_obj, game_ticks(1), 30);
        end
        if (ring_cosmetics2 == 3) then begin
            if (global_var(GVAR_C_RING_POINTER) == 1) then begin
                set_global_var(GVAR_TOWN_REP_CORATH, global_var(GVAR_TOWN_REP_CORATH) - 2);
            end
            if (global_var(GVAR_C_RING_POINTER) == 3) then begin
                set_global_var(GVAR_TOWN_REP_CORATH, global_var(GVAR_TOWN_REP_CORATH) - 5);
            end
            if (global_var(GVAR_C_RING_POINTER) == 4) then begin
                set_global_var(GVAR_TOWN_REP_CORATH, global_var(GVAR_TOWN_REP_CORATH) + 10);
            end
            if (global_var(GVAR_C_RING_POINTER) == 5) then begin
                set_global_var(GVAR_TOWN_REP_CORATH, global_var(GVAR_TOWN_REP_CORATH) + 10);
            end
            if (map_var(1) == 0) then begin
                move_obj_inven_to_obj(corath_temp_box, dude_obj);
                move_obj_inven_to_obj(corath_temp_box2, dude_obj);
                call dude_out_of_ring();
                if (global_var(GVAR_C_RING_POINTER) == 1) then begin
                    destroy_object(Bill_obj);
                end
                if (global_var(GVAR_C_RING_POINTER) == 2) then begin
                    destroy_object(Chadwic_obj);
                end
                if (global_var(GVAR_C_RING_POINTER) == 3) then begin
                    destroy_object(Cedrick_obj);
                end
                if (global_var(GVAR_C_RING_POINTER) == 4) then begin
                    destroy_object(Blaster_obj);
                end
                if (global_var(GVAR_C_RING_POINTER) == 5) then begin
                    destroy_object(Blaster_obj);
                end
            end
            else begin
                destroy_object(enemy_fighter);
                destroy_object(party_fighter);
                if (enemy_dies == 1) then begin
                    if (global_var(GVAR_C_RING_POINTER) == 1) then begin
                        set_global_var(GVAR_C_RING_VICTORIES, global_var(GVAR_C_RING_VICTORIES) bwor 1);
                    end
                    if (global_var(GVAR_C_RING_POINTER) == 2) then begin
                        set_global_var(GVAR_C_RING_VICTORIES, global_var(GVAR_C_RING_VICTORIES) bwor 1024);
                    end
                    if (global_var(GVAR_C_RING_POINTER) == 3) then begin
                        set_global_var(GVAR_C_RING_VICTORIES, global_var(GVAR_C_RING_VICTORIES) bwor 64);
                    end
                    if (global_var(GVAR_C_RING_POINTER) == 4) then begin
                        set_global_var(GVAR_C_RING_VICTORIES, global_var(GVAR_C_RING_VICTORIES) bwor 4);
                    end
                    if ((map_var(1) == 1) and ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0))) then begin
                        move_obj_inven_to_obj(corath_temp_box, party_member_obj(16777779));
                        move_obj_inven_to_obj(corath_temp_box2, party_member_obj(16777779));
                        if (obj_is_carrying_obj_pid(party_member_obj(16777779), map_var(4))) then begin
                            wield_obj_critter(party_member_obj(16777779), obj_carrying_pid_obj(party_member_obj(16777779), map_var(4)));
                        end
                        set_obj_visibility(party_member_obj(16777779), 0);
                    end
                    if ((map_var(1) == 2) and ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0))) then begin
                        move_obj_inven_to_obj(corath_temp_box, party_member_obj(16777811));
                        move_obj_inven_to_obj(corath_temp_box2, party_member_obj(16777811));
                        if (obj_is_carrying_obj_pid(party_member_obj(16777811), map_var(4))) then begin
                            wield_obj_critter(party_member_obj(16777811), obj_carrying_pid_obj(party_member_obj(16777811), map_var(4)));
                        end
                        set_obj_visibility(party_member_obj(16777811), 0);
                    end
                    if ((map_var(1) == 3) and ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0))) then begin
                        move_obj_inven_to_obj(corath_temp_box, party_member_obj(16777814));
                        move_obj_inven_to_obj(corath_temp_box2, party_member_obj(16777814));
                        if (obj_is_carrying_obj_pid(party_member_obj(16777814), map_var(4))) then begin
                            wield_obj_critter(party_member_obj(16777814), obj_carrying_pid_obj(party_member_obj(16777814), map_var(4)));
                        end
                        set_obj_visibility(party_member_obj(16777814), 0);
                    end
                    if (map_var(1) == 4) then begin
                        set_obj_visibility(Vodka_obj, 0);
                    end
                end
                else begin
                    if ((map_var(1) == 1) and ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0))) then begin
                        fighted_party_member := party_member_obj(16777779);
                        party_remove(party_member_obj(16777779));
                        destroy_object(fighted_party_member);
                    end
                    if ((map_var(1) == 2) and ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0))) then begin
                        fighted_party_member := party_member_obj(16777811);
                        party_remove(party_member_obj(16777811));
                        destroy_object(fighted_party_member);
                    end
                    if ((map_var(1) == 3) and ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0))) then begin
                        fighted_party_member := party_member_obj(16777814);
                        party_remove(party_member_obj(16777814));
                        destroy_object(fighted_party_member);
                    end
                    if (map_var(1) == 4) then begin
                        destroy_object(Vodka_obj);
                    end
                    if (global_var(GVAR_C_RING_POINTER) == 1) then begin
                        set_global_var(GVAR_C_RING_VICTORIES, global_var(GVAR_C_RING_VICTORIES) bwor 2);
                    end
                    if (global_var(GVAR_C_RING_POINTER) == 2) then begin
                        if (map_var(1) == 2) then begin
                            set_global_var(GVAR_C_RING_VICTORIES, global_var(GVAR_C_RING_VICTORIES) bwor 2048);
                        end
                        else begin
                            set_global_var(GVAR_C_RING_VICTORIES, global_var(GVAR_C_RING_VICTORIES) bwor 4096);
                        end
                        set_global_var(GVAR_TOWN_REP_CORATH, global_var(GVAR_TOWN_REP_CORATH) - 3);
                    end
                    if (global_var(GVAR_C_RING_POINTER) >= 3) then begin
                        set_global_var(GVAR_C_RING_VICTORIES, global_var(GVAR_C_RING_VICTORIES) bwor 8192);
                    end
                    if (map_var(1) != 4) then begin
                        move_obj_inven_to_obj(corath_temp_box, coffield_table_trade);
                        move_obj_inven_to_obj(corath_temp_box2, corath_forbidden_box);
                    end
                end
            end
            call return_vykladac_home();
            call destroy_obecenstvo();
            add_timer_event(self_obj, game_ticks(2), 30);
        end
        if (ring_cosmetics2 == 4) then begin
            if (((global_var(GVAR_C_RING_VICTORIES) bwand 8192) != 0) or (((global_var(GVAR_C_RING_VICTORIES) bwand 4) != 0) and (global_var(GVAR_NESTOR_LEAVED_CORATH) == 0)) or (((global_var(GVAR_C_RING_VICTORIES) bwand 64) != 0) and not((global_var(GVAR_C_CORATH_STATUS) bwand 1048576) != 0))) then begin
                set_global_var(GVAR_C_RING_VICTORIES, global_var(GVAR_C_RING_VICTORIES) bwor 2097152);
            end
            else begin
                gfade_in(600);
            end
            add_timer_event(self_obj, game_ticks(1), 30);
        end
        if (ring_cosmetics2 == 5) then begin
            if (map_var(1) == 0) then begin
                if (not((global_var(GVAR_C_RING_VICTORIES) bwand 16384) != 0)) then begin
                    set_global_var(GVAR_C_RING_VICTORIES, global_var(GVAR_C_RING_VICTORIES) bwor 16384);
                end
                if ((global_var(GVAR_C_RING_POINTER) == 4) or (global_var(GVAR_C_RING_POINTER) == 5)) then begin
                    set_global_var(GVAR_C_RING_VICTORIES, global_var(GVAR_C_RING_VICTORIES) bwor 8);
                end
                if (global_var(GVAR_C_RING_POINTER) == 3) then begin
                    set_global_var(GVAR_C_RING_VICTORIES, global_var(GVAR_C_RING_VICTORIES) bwor 128);
                end
                if (global_var(GVAR_C_RING_POINTER) == 3) then begin
                    set_global_var(GVAR_CORATH_DIALOG_BITS_NEXT, global_var(GVAR_CORATH_DIALOG_BITS_NEXT) bwor 4);
                end
            end
            if (not((global_var(GVAR_C_RING_VICTORIES) bwand 8192) != 0)) then begin
                if (map_var(1) == 1) then begin
                    if (not((global_var(GVAR_C_RING_VICTORIES) bwand 32768) != 0)) then begin
                        set_global_var(GVAR_C_RING_VICTORIES, global_var(GVAR_C_RING_VICTORIES) bwor 32768);
                    end
                    if (enemy_dies == 1) then begin
                        if (global_var(GVAR_C_RING_POINTER) == 4) then begin
                            set_global_var(GVAR_C_RING_VICTORIES, global_var(GVAR_C_RING_VICTORIES) bwor 32);
                        end
                        if (global_var(GVAR_C_RING_POINTER) == 3) then begin
                            set_global_var(GVAR_C_RING_VICTORIES, global_var(GVAR_C_RING_VICTORIES) bwor 512);
                        end
                        PartyFigher := map_var(1);
                    end
                end
                if (map_var(1) == 2) then begin
                    if (not((global_var(GVAR_C_RING_VICTORIES) bwand 65536) != 0)) then begin
                        set_global_var(GVAR_C_RING_VICTORIES, global_var(GVAR_C_RING_VICTORIES) bwor 65536);
                    end
                    if (enemy_dies == 1) then begin
                        if (global_var(GVAR_C_RING_POINTER) == 4) then begin
                            set_global_var(GVAR_C_RING_VICTORIES, global_var(GVAR_C_RING_VICTORIES) bwor 16);
                        end
                        if (global_var(GVAR_C_RING_POINTER) == 3) then begin
                            set_global_var(GVAR_C_RING_VICTORIES, global_var(GVAR_C_RING_VICTORIES) bwor 256);
                        end
                        PartyFigher := map_var(1);
                    end
                end
                if (map_var(1) == 3) then begin
                    if (not((global_var(GVAR_C_RING_VICTORIES) bwand 32768) != 0)) then begin
                        set_global_var(GVAR_C_RING_VICTORIES, global_var(GVAR_C_RING_VICTORIES) bwor 32768);
                    end
                    if (enemy_dies == 1) then begin
                        if (global_var(GVAR_C_RING_POINTER) == 4) then begin
                            set_global_var(GVAR_C_RING_VICTORIES, global_var(GVAR_C_RING_VICTORIES) bwor 32);
                        end
                        if (global_var(GVAR_C_RING_POINTER) == 3) then begin
                            set_global_var(GVAR_C_RING_VICTORIES, global_var(GVAR_C_RING_VICTORIES) bwor 512);
                        end
                        PartyFigher := map_var(1);
                    end
                end
            end
            if (global_var(GVAR_C_RING_POINTER) == 2) then begin
                if (obj_is_carrying_obj_pid(dude_obj, 540)) then begin
                    removed_qty := obj_is_carrying_obj_pid(dude_obj, 540);
                    if (1 < removed_qty) then begin
                        removed_qty := 1;
                    end
                    if (removed_qty > 0) then begin
                        restock_obj := obj_carrying_pid_obj(dude_obj, 540);
                        if (obj_type(self_obj) == 1) then begin
                            restock_obj := obj_carrying_pid_obj(dude_obj, 540);
                            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                    rm_obj_from_inven(dude_obj, restock_obj);
                                    add_obj_to_inven(dude_obj, restock_obj);
                                end
                            end
                            else begin
                                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                    inven_unwield(dude_obj);
                                end
                            end
                        end
                        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
                        if (restock_amt == 0) then begin
                            toRemove_qty := 1;
                            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 540)) do begin
                                restock_obj := obj_carrying_pid_obj(dude_obj, 540);
                                rm_obj_from_inven(dude_obj, restock_obj);
                                destroy_object(restock_obj);
                                toRemove_qty := toRemove_qty - 1;
                            end
                        end
                        else begin
                            destroy_object(restock_obj);
                        end
                    end
                    restock_obj := 0;
                    restock_amt := 0;
                end
                if (obj_is_carrying_obj_pid(dude_obj, 319)) then begin
                    removed_qty := obj_is_carrying_obj_pid(dude_obj, 319);
                    if (1 < removed_qty) then begin
                        removed_qty := 1;
                    end
                    if (removed_qty > 0) then begin
                        restock_obj := obj_carrying_pid_obj(dude_obj, 319);
                        if (obj_type(self_obj) == 1) then begin
                            restock_obj := obj_carrying_pid_obj(dude_obj, 319);
                            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                    rm_obj_from_inven(dude_obj, restock_obj);
                                    add_obj_to_inven(dude_obj, restock_obj);
                                end
                            end
                            else begin
                                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                    inven_unwield(dude_obj);
                                end
                            end
                        end
                        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
                        if (restock_amt == 0) then begin
                            toRemove_qty := 1;
                            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 319)) do begin
                                restock_obj := obj_carrying_pid_obj(dude_obj, 319);
                                rm_obj_from_inven(dude_obj, restock_obj);
                                destroy_object(restock_obj);
                                toRemove_qty := toRemove_qty - 1;
                            end
                        end
                        else begin
                            destroy_object(restock_obj);
                        end
                    end
                    restock_obj := 0;
                    restock_amt := 0;
                end
                if (obj_is_carrying_obj_pid(dude_obj, 319)) then begin
                    removed_qty := obj_is_carrying_obj_pid(dude_obj, 319);
                    if (1 < removed_qty) then begin
                        removed_qty := 1;
                    end
                    if (removed_qty > 0) then begin
                        restock_obj := obj_carrying_pid_obj(dude_obj, 319);
                        if (obj_type(self_obj) == 1) then begin
                            restock_obj := obj_carrying_pid_obj(dude_obj, 319);
                            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                                    debug_msg("armour pid == " + obj_pid(restock_obj));
                                    rm_obj_from_inven(dude_obj, restock_obj);
                                    add_obj_to_inven(dude_obj, restock_obj);
                                end
                            end
                            else begin
                                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                    inven_unwield(dude_obj);
                                end
                            end
                        end
                        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
                        if (restock_amt == 0) then begin
                            toRemove_qty := 1;
                            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 319)) do begin
                                restock_obj := obj_carrying_pid_obj(dude_obj, 319);
                                rm_obj_from_inven(dude_obj, restock_obj);
                                destroy_object(restock_obj);
                                toRemove_qty := toRemove_qty - 1;
                            end
                        end
                        else begin
                            destroy_object(restock_obj);
                        end
                    end
                    restock_obj := 0;
                    restock_amt := 0;
                end
            end
            if (map_var(1) != 0) then begin
                curr_turn := 1;
                ring_turn := 0;
                probability := 0;
                party_hit_points := 0;
                enemy_hit_points := 0;
                party_avg_damage := 0;
                enemy_avg_damage := 0;
                party_difficulty := 0;
                enemy_difficulty := 0;
                chadwic_knife_out := 0;
                hit_chance := 0;
                need_to_hit := 0;
                random_number := 0;
                hb_party := 0;
                hb_enemy := 0;
                party_dies := 0;
                enemy_dies := 0;
                can_kick := 0;
                kick_or_hand := 0;
            end
            set_map_var(1, 0);
            set_global_var(GVAR_C_RING_POINTER, 0);
            sequence := 0;
            ring_cosmetics := 0;
            ring_cosmetics2 := 0;
            idiot_cosmetics := 0;
            cadwic_move := 0;
            cadwic_done := 0;
            set_global_var(GVAR_C_RING_VICTORIES, global_var(GVAR_C_RING_VICTORIES) bwand (-1 - 262144));
            game_ui_enable;
            if ((PartyFigher != 0) or ((global_var(GVAR_C_RING_VICTORIES) bwand 8192) != 0) or (((global_var(GVAR_C_RING_VICTORIES) bwand 4) != 0) and (global_var(GVAR_NESTOR_LEAVED_CORATH) == 0)) or (((global_var(GVAR_C_RING_VICTORIES) bwand 64) != 0) and not((global_var(GVAR_C_CORATH_STATUS) bwand 1048576) != 0))) then begin
                add_timer_event(self_obj, game_ticks(0), 99);
            end
            else begin
                rm_timer_event(self_obj);
            end
        end
    end
    if ((global_var(GVAR_C_RING_POINTER) == 2) and (fixed_param == 40) and (cadwic_done == 0)) then begin
        if (fixed_param == 40) then begin
            cadwic_move := cadwic_move + 1;
        end
        if (cadwic_move == 1) then begin
            gfade_out(600);
            add_timer_event(self_obj, game_ticks(1), 40);
        end
        if (cadwic_move == 2) then begin
            while ((game_time_hour > 2000) or (game_time_hour < 800)) do begin
                game_time_advance(1 * (60 * (60 * 10)));
            end
            game_ui_disable;
            cadwic_done := 1;
            add_timer_event(self_obj, game_ticks(1), 20);
        end
    end
    if (global_var(GVAR_C_RING_POINTER) == 2) then begin
        if (fixed_param == 45) then begin
            if (obj_on_screen(obyv5) == 1) then begin
                float_msg(obyv5, mstr(700), FLOAT_MSG_RED);
            end
            else begin
                if ((obj_on_screen(obyv6) == 1) and (obj_on_screen(obyv5) == 0)) then begin
                    float_msg(obyv6, mstr(700), FLOAT_MSG_RED);
                end
                else begin
                    float_msg(obyv4, mstr(700), FLOAT_MSG_RED);
                end
            end
        end
        if (fixed_param == 46) then begin
            float_msg(Vykladac_zakona, mstr(800), FLOAT_MSG_BLUE);
        end
    end
    if ((global_var(GVAR_C_RING_POINTER) == 1) and (fixed_param == 140) and (bill_done == 0)) then begin
        if (fixed_param == 140) then begin
            bill_move := bill_move + 1;
        end
        if (bill_move == 1) then begin
            gfade_out(600);
            add_timer_event(self_obj, game_ticks(1), 140);
        end
        if (bill_move == 2) then begin
            while ((game_time_hour > 2000) or (game_time_hour < 800)) do begin
                game_time_advance(1 * (60 * (60 * 10)));
            end
            game_ui_disable;
            bill_done := 1;
            add_timer_event(self_obj, game_ticks(1), 20);
        end
    end
    if ((global_var(GVAR_C_RING_POINTER) == 5) and (fixed_param == 50) and (map_var(1) == 0)) then begin
        if (fixed_param == 50) then begin
            idiot_cosmetics := idiot_cosmetics + 1;
        end
        if (idiot_cosmetics == 1) then begin
            Cedrick_obj := create_object(16777897, 18098, 0);
            anim(Cedrick_obj, 1000, 1);
            move_to(dude_obj, 18300, elevation(self_obj));
            anim(dude_obj, 1000, 1);
            if (party_member_obj(16777729) != 0) then begin
                if (party_member_obj(16777729) != 0) then begin
                    if (obj_is_visible_flag(party_member_obj(16777729))) then begin
                        critter_attempt_placement(party_member_obj(16777729), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
                    end
                end
            end
            if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
                if (party_member_obj(16777779) != 0) then begin
                    if (obj_is_visible_flag(party_member_obj(16777779))) then begin
                        critter_attempt_placement(party_member_obj(16777779), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
                    end
                end
            end
            if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
                if (party_member_obj(16777811) != 0) then begin
                    if (obj_is_visible_flag(party_member_obj(16777811))) then begin
                        critter_attempt_placement(party_member_obj(16777811), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
                    end
                end
            end
            if (party_member_obj(16777812) != 0) then begin
                if (party_member_obj(16777812) != 0) then begin
                    if (obj_is_visible_flag(party_member_obj(16777812))) then begin
                        critter_attempt_placement(party_member_obj(16777812), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
                    end
                end
            end
            if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
                if (party_member_obj(16777814) != 0) then begin
                    if (obj_is_visible_flag(party_member_obj(16777814))) then begin
                        critter_attempt_placement(party_member_obj(16777814), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
                    end
                end
            end
            if (party_member_obj(16777748) != 0) then begin
                if (party_member_obj(16777748) != 0) then begin
                    if (obj_is_visible_flag(party_member_obj(16777748))) then begin
                        critter_attempt_placement(party_member_obj(16777748), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
                    end
                end
            end
            if (party_member_obj(16778017) != 0) then begin
                if (party_member_obj(16778017) != 0) then begin
                    if (obj_is_visible_flag(party_member_obj(16778017))) then begin
                        critter_attempt_placement(party_member_obj(16778017), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
                    end
                end
            end
            if (party_member_obj(16778016) != 0) then begin
                if (party_member_obj(16778016) != 0) then begin
                    if (obj_is_visible_flag(party_member_obj(16778016))) then begin
                        critter_attempt_placement(party_member_obj(16778016), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
                    end
                end
            end
            if (party_member_obj(16778049) != 0) then begin
                if (party_member_obj(16778049) != 0) then begin
                    if (obj_is_visible_flag(party_member_obj(16778049))) then begin
                        critter_attempt_placement(party_member_obj(16778049), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
                    end
                end
            end
            if (party_member_obj(16778050) != 0) then begin
                if (party_member_obj(16778050) != 0) then begin
                    if (obj_is_visible_flag(party_member_obj(16778050))) then begin
                        critter_attempt_placement(party_member_obj(16778050), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
                    end
                end
            end
            if (party_member_obj(16778051) != 0) then begin
                if (party_member_obj(16778051) != 0) then begin
                    if (obj_is_visible_flag(party_member_obj(16778051))) then begin
                        critter_attempt_placement(party_member_obj(16778051), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
                    end
                end
            end
            if (party_member_obj(16777294) != 0) then begin
                if (party_member_obj(16777294) != 0) then begin
                    if (obj_is_visible_flag(party_member_obj(16777294))) then begin
                        critter_attempt_placement(party_member_obj(16777294), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
                    end
                end
            end
            move_to(Vykladac_zakona, 18495, elevation(self_obj));
            anim(Vykladac_zakona, 1000, 4);
            add_timer_event(self_obj, game_ticks(2), 50);
        end
        if (idiot_cosmetics == 2) then begin
            float_msg(Vykladac_zakona, mstr(1000), FLOAT_MSG_WHITE);
            add_timer_event(self_obj, game_ticks(6), 50);
        end
        if (idiot_cosmetics == 3) then begin
            if (dude_gender == 0) then begin
                float_msg(Cedrick_obj, mstr(1100), FLOAT_MSG_YELLOW);
            end
            else begin
                float_msg(Cedrick_obj, mstr(1101), FLOAT_MSG_YELLOW);
            end
            add_timer_event(self_obj, game_ticks(6), 50);
        end
        if (idiot_cosmetics == 4) then begin
            ring_cosmetics := 3;
            idiot_cosmetics := 0;
            add_timer_event(self_obj, game_ticks(0), 20);
        end
    end
    if (fixed_param == 99) then begin
        if (((global_var(GVAR_C_RING_VICTORIES) bwand 64) != 0) and not((global_var(GVAR_C_CORATH_STATUS) bwand 1048576) != 0)) then begin
            if ((global_var(GVAR_CORATH_DIALOG_BITS_NEXT) bwand 4) != 0) then begin
                game_ui_disable;
                wield_obj_critter(dude_obj, obj_carrying_pid_obj(dude_obj, map_var(2)));
                wield_obj_critter(dude_obj, obj_carrying_pid_obj(dude_obj, map_var(3)));
            end
            set_global_var(GVAR_C_CORATH_STATUS, global_var(GVAR_C_CORATH_STATUS) bwor 1048576);
            if ((PartyFigher == 2) and ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0))) then begin
                fade_in;
                add_timer_event(party_member_obj(16777811), 5, 18);
            end
            else begin
                game_ui_disable;
                notremove_timer := 1;
                add_timer_event(self_obj, game_ticks(1), 77);
            end
        end
        else begin
            if (((global_var(GVAR_C_RING_VICTORIES) bwand 4) != 0) and (global_var(GVAR_NESTOR_LEAVED_CORATH) == 0)) then begin
                if ((PartyFigher == 2) and ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0))) then begin
                    fade_in;
                    add_timer_event(party_member_obj(16777811), 5, 17);
                end
                else begin
                    load_map(91, 0);
                end
            end
            else begin
                if ((PartyFigher == 1) and ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 256) == 0)) then begin
                    add_timer_event(party_member_obj(16777779), 5, 13);
                end
                else begin
                    if ((PartyFigher == 2) and ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0))) then begin
                        add_timer_event(party_member_obj(16777811), 5, 16);
                    end
                end
            end
        end
        if ((global_var(GVAR_C_RING_VICTORIES) bwand 8192) != 0) then begin
            load_map(90, 0);
        end
        PartyFigher := 0;
        if (notremove_timer == 0) then begin
            rm_timer_event(self_obj);
        end
    end
    if (fixed_param == 77) then begin
        game_ui_enable;
        load_map(16, 0);
    end
    if ((global_var(GVAR_C_RING_POINTER) != 0) and (map_var(1) != 0)) then begin
        if (fixed_param == 60) then begin
            animate_move_obj_to_tile(enemy_fighter, 16291, 0);
            add_timer_event(self_obj, game_ticks(2), 61);
        end
        if (fixed_param == 61) then begin
            if (ring_turn == 0) then begin
                if ((global_var(GVAR_C_RING_POINTER) == 2) and (chadwic_knife_out == 0)) then begin
                    call chadwic_wield_knife();
                end
                else begin
                    call floats_when_party_fight();
                    random_number := random(1, enemy_difficulty) - (dude_luck / 3);
                    hit_chance := enemy_difficulty + random_number;
                    random_number := random(1, party_difficulty) + (dude_luck / 3);
                    need_to_hit := (party_difficulty / 2) + random_number;
                    if (hit_chance > need_to_hit) then begin
                        if ((hb_party > 0) or (enemy_difficulty < party_difficulty)) then begin
                            if ((global_var(GVAR_C_RING_POINTER) == 2) and (chadwic_knife_out == 1)) then begin
                                call knife_hit_party();
                                hb_party := hb_party - (enemy_avg_damage + random(-1, 5));
                            end
                            else begin
                                if (global_var(GVAR_C_RING_POINTER) == 3) then begin
                                    kick_or_hand := random(0, 3);
                                    if (kick_or_hand < 3) then begin
                                        can_kick := 0;
                                    end
                                    else begin
                                        can_kick := 1;
                                    end
                                end
                                else begin
                                    can_kick := 0;
                                end
                                if (can_kick == 0) then begin
                                    call hand_hit_party();
                                    hb_party := hb_party - (enemy_avg_damage + random(-1, 4));
                                end
                                else begin
                                    call kick_hit_party();
                                    hb_party := hb_party - (enemy_avg_damage + random(0, 5));
                                    can_kick := 0;
                                end
                            end
                        end
                        else begin
                            call party_loose();
                            party_dies := 1;
                        end
                    end
                    else begin
                        if ((global_var(GVAR_C_RING_POINTER) == 2) and (chadwic_knife_out == 1)) then begin
                            call knife_miss_party();
                        end
                        else begin
                            if (global_var(GVAR_C_RING_POINTER) == 3) then begin
                                kick_or_hand := random(0, 3);
                                if (kick_or_hand < 3) then begin
                                    can_kick := 0;
                                end
                                else begin
                                    can_kick := 1;
                                end
                            end
                            else begin
                                can_kick := 0;
                            end
                            if (can_kick == 0) then begin
                                call hand_miss_party();
                            end
                            else begin
                                call kick_miss_party();
                            end
                            can_kick := 0;
                        end
                    end
                end
            end
            if (ring_turn == 1) then begin
                call floats_when_party_fight();
                random_number := random(1, party_difficulty) + (dude_luck / 3);
                hit_chance := party_difficulty + random_number;
                random_number := random(1, enemy_difficulty) - (dude_luck / 3);
                need_to_hit := (enemy_difficulty / 2) + random_number;
                if (hit_chance > need_to_hit) then begin
                    if ((hb_enemy > 0) or (enemy_difficulty > party_difficulty)) then begin
                        if ((map_var(1) == 1) or (map_var(1) == 2)) then begin
                            kick_or_hand := random(0, 3);
                            if (kick_or_hand < 3) then begin
                                can_kick := 0;
                            end
                            else begin
                                can_kick := 1;
                            end
                        end
                        else begin
                            can_kick := 0;
                        end
                        if (can_kick == 0) then begin
                            call hand_hit_enemy();
                            hb_enemy := hb_enemy - (party_avg_damage + random(-1, 4));
                        end
                        else begin
                            call kick_hit_enemy();
                            hb_enemy := hb_enemy - (party_avg_damage + random(0, 5));
                            can_kick := 0;
                        end
                    end
                    else begin
                        call enemy_loose();
                        enemy_dies := 1;
                        if (map_var(1) == 4) then begin
                            add_timer_event(self_obj, game_ticks(1), 996);
                        end
                    end
                end
                else begin
                    if ((map_var(1) == 1) or (map_var(1) == 2)) then begin
                        kick_or_hand := random(0, 3);
                        if (kick_or_hand < 3) then begin
                            can_kick := 0;
                        end
                        else begin
                            can_kick := 1;
                        end
                    end
                    else begin
                        can_kick := 0;
                    end
                    if (can_kick == 0) then begin
                        call hand_miss_enemy();
                    end
                    else begin
                        call kick_miss_enemy();
                    end
                    can_kick := 0;
                end
            end
            if ((curr_turn == 1) and ((party_dies == 0) and (enemy_dies == 0)) and ((enemy_difficulty > 5) and (ring_turn == 0) or ((party_difficulty > 5) and (ring_turn == 1)))) then begin
                curr_turn := 2;
            end
            else begin
                if (ring_turn == 1) then begin
                    ring_turn := 0;
                end
                else begin
                    ring_turn := 1;
                end
                curr_turn := 1;
            end
            if ((party_dies == 0) and (enemy_dies == 0)) then begin
                add_timer_event(self_obj, game_ticks(2), 61);
            end
            else begin
                add_timer_event(self_obj, game_ticks(4), 30);
            end
        end
    end
    if (fixed_param == 995) then begin
        game_ui_disable;
    end
    if (fixed_param == 996) then begin
        float_msg(party_fighter, mstr(1207), FLOAT_MSG_RED);
    end
    if (fixed_param == 997) then begin
        float_msg(party_fighter, mstr(1205), FLOAT_MSG_RED);
    end
    if (fixed_param == 998) then begin
        float_msg(enemy_fighter, mstr(1206), FLOAT_MSG_YELLOW);
    end
    if ((fixed_param == 999) and combat_is_initialized) then begin
        terminate_combat;
    end
end

procedure create_fake_hero
begin
    move_to(dude_obj, 16301, elevation(self_obj));
    anim(dude_obj, 1000, 0);
    if (party_member_obj(16777729) != 0) then begin
        if (party_member_obj(16777729) != 0) then begin
            if (obj_is_visible_flag(party_member_obj(16777729))) then begin
                critter_attempt_placement(party_member_obj(16777729), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
            end
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        if (party_member_obj(16777779) != 0) then begin
            if (obj_is_visible_flag(party_member_obj(16777779))) then begin
                critter_attempt_placement(party_member_obj(16777779), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
            end
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        if (party_member_obj(16777811) != 0) then begin
            if (obj_is_visible_flag(party_member_obj(16777811))) then begin
                critter_attempt_placement(party_member_obj(16777811), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
            end
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (party_member_obj(16777812) != 0) then begin
            if (obj_is_visible_flag(party_member_obj(16777812))) then begin
                critter_attempt_placement(party_member_obj(16777812), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
            end
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        if (party_member_obj(16777814) != 0) then begin
            if (obj_is_visible_flag(party_member_obj(16777814))) then begin
                critter_attempt_placement(party_member_obj(16777814), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
            end
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (party_member_obj(16777748) != 0) then begin
            if (obj_is_visible_flag(party_member_obj(16777748))) then begin
                critter_attempt_placement(party_member_obj(16777748), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
            end
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (party_member_obj(16778017) != 0) then begin
            if (obj_is_visible_flag(party_member_obj(16778017))) then begin
                critter_attempt_placement(party_member_obj(16778017), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
            end
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (party_member_obj(16778016) != 0) then begin
            if (obj_is_visible_flag(party_member_obj(16778016))) then begin
                critter_attempt_placement(party_member_obj(16778016), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
            end
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (party_member_obj(16778049) != 0) then begin
            if (obj_is_visible_flag(party_member_obj(16778049))) then begin
                critter_attempt_placement(party_member_obj(16778049), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
            end
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (party_member_obj(16778050) != 0) then begin
            if (obj_is_visible_flag(party_member_obj(16778050))) then begin
                critter_attempt_placement(party_member_obj(16778050), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
            end
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (party_member_obj(16778051) != 0) then begin
            if (obj_is_visible_flag(party_member_obj(16778051))) then begin
                critter_attempt_placement(party_member_obj(16778051), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
            end
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (party_member_obj(16777294) != 0) then begin
            if (obj_is_visible_flag(party_member_obj(16777294))) then begin
                critter_attempt_placement(party_member_obj(16777294), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
            end
        end
    end
    tile_set_center(15690);
end

procedure create_obecenstvo
begin
    obyv4 := create_object_sid(16777885, 14900, 0, SCRIPT_COBECENS);
    anim(obyv4, 1000, 1);
    obyv5 := create_object_sid(16777887, 14484, 0, SCRIPT_COBECENS);
    anim(obyv5, 1000, 3);
    obyv6 := create_object_sid(16777886, 18099, 0, SCRIPT_COBECENS);
    anim(obyv6, 1000, 0);
    if ((global_var(GVAR_C_RING_POINTER) == 1) or (global_var(GVAR_C_RING_POINTER) == 2)) then begin
        obyv1 := create_object_sid(16777890, 18096, 0, SCRIPT_COBECENS);
        anim(obyv1, 1000, 5);
        obyv2 := create_object_sid(16777890, 14088, 0, SCRIPT_COBECENS);
        anim(obyv2, 1000, 2);
        obyv8 := create_object_sid(16777884, 18694, 0, SCRIPT_COBECENS);
        anim(obyv8, 1000, 5);
    end
    else begin
        obyv1 := create_object_sid(16777890, 14297, 0, SCRIPT_COBECENS);
        anim(obyv1, 1000, 1);
        str1 := create_object_sid(16777900, 18492, 0, SCRIPT_COBECENS);
        anim(str1, 1000, 5);
        str2 := create_object_sid(16777899, 18297, 0, SCRIPT_COBECENS);
        anim(str2, 1000, 5);
        if (global_var(GVAR_C_RING_POINTER) != 3) then begin
            cedr := create_object_sid(16777897, 18094, 0, SCRIPT_COBECENS);
        end
        else begin
            cedr := create_object_sid(16777898, 18094, 0, SCRIPT_COBECENS);
        end
        anim(cedr, 1000, 5);
        adem := create_object_sid(16777901, 14288, 0, SCRIPT_COBECENS);
        anim(adem, 1000, 2);
        nes1 := create_object_sid(16777903, 14086, 0, SCRIPT_COBECENS);
        anim(nes1, 1000, 2);
        nes2 := create_object_sid(16777905, 14090, 0, SCRIPT_COBECENS);
        anim(nes2, 1000, 2);
    end
end

procedure destroy_obecenstvo
begin
    destroy_object(obyv1);
    destroy_object(obyv4);
    destroy_object(obyv5);
    destroy_object(obyv6);
    if ((global_var(GVAR_C_RING_POINTER) == 1) or (global_var(GVAR_C_RING_POINTER) == 2)) then begin
        destroy_object(obyv2);
        destroy_object(obyv8);
    end
    else begin
        destroy_object(cedr);
        destroy_object(adem);
        destroy_object(str1);
        destroy_object(str2);
        destroy_object(nes1);
        destroy_object(nes2);
    end
end

procedure place_vykladac_near_ring
begin
    move_to(Vykladac_zakona, 15884, elevation(self_obj));
    anim(Vykladac_zakona, 1000, 3);
end

procedure return_vykladac_home
begin
    move_to(Vykladac_zakona, 15652, elevation(self_obj));
    anim(Vykladac_zakona, 1000, 1);
end

procedure dude_out_of_ring
begin
    move_to(dude_obj, 16101, elevation(self_obj));
    anim(dude_obj, 1000, 4);
end

procedure generate_oponent
begin
    if (global_var(GVAR_C_RING_POINTER) == 1) then begin
        destroyItemsBox := create_object(133, 0, 0);
        move_obj_inven_to_obj(Bill_obj, destroyItemsBox);
        destroy_object(destroyItemsBox);
        move_to(Bill_obj, 15691, 0);
        set_obj_visibility(Bill_obj, 0);
        anim(Bill_obj, 1000, 2);
        critter_add_trait(Bill_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_TOUGH_CITIZEN_NO_TALKING);
    end
    else begin
        if (global_var(GVAR_C_RING_POINTER) == 2) then begin
            move_obj_inven_to_obj(Chadwic_obj, corath_temp_box2);
            move_to(Chadwic_obj, 15691, 0);
            anim(Chadwic_obj, 1000, 2);
            critter_add_trait(Chadwic_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_TOUGH_CITIZEN_NO_TALKING);
        end
        else begin
            if (global_var(GVAR_C_RING_POINTER) == 3) then begin
                Cedrick_obj := create_object_sid(16777897, 15691, 0, SCRIPT_CCEDRING);
                anim(Cedrick_obj, 1000, 2);
                critter_add_trait(Cedrick_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_TOUGH_GUARD_NO_TALKING);
            end
            else begin
                if ((global_var(GVAR_C_RING_POINTER) == 4) or (global_var(GVAR_C_RING_POINTER) == 5)) then begin
                    if ((global_var(GVAR_C_RING_VICTORIES) bwand 131072) != 0) then begin
                        Blaster_obj := create_object_sid(16778040, 15691, 0, SCRIPT_CBLASTER);
                    end
                    else begin
                        Blaster_obj := create_object_sid(16777858, 15691, 0, SCRIPT_CBLASTER);
                    end
                    anim(Blaster_obj, 1000, 2);
                    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_BERSERKER_NO_TALKING);
                end
            end
        end
    end
end

procedure place_party
begin
    if (party_member_obj(16777729) != 0) then begin
        move_to(party_member_obj(16777729), 16501, dude_elevation);
        anim(party_member_obj(16777729), 1000, 1);
    end
    if (party_member_obj(16777813) != 0) then begin
        move_to(party_member_obj(16777813), 16703, dude_elevation);
        anim(party_member_obj(16777813), 1000, 1);
    end
    if (party_member_obj(16777748) != 0) then begin
        move_to(party_member_obj(16777748), 16103, dude_elevation);
        anim(party_member_obj(16777748), 1000, 1);
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        move_to(party_member_obj(16777814), 15902, dude_elevation);
        anim(party_member_obj(16777814), 1000, 1);
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        move_to(party_member_obj(16777779), 16500, dude_elevation);
        anim(party_member_obj(16777779), 1000, 1);
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        move_to(party_member_obj(16777811), 15901, dude_elevation);
        anim(party_member_obj(16777811), 1000, 1);
    end
    if (party_member_obj(16777812) != 0) then begin
        move_to(party_member_obj(16777812), 15902, dude_elevation);
        anim(party_member_obj(16777812), 1000, 1);
    end
end

procedure chadwic_wield_knife
begin
    if (global_var(GVAR_C_RING_POINTER) == 2) then begin
        if (chadwic_knife_out == 0) then begin
            restock_obj := create_object(4, 0, 0);
            add_mult_objs_to_inven(enemy_fighter, restock_obj, 1);
            wield_obj_critter(enemy_fighter, obj_carrying_pid_obj(enemy_fighter, 4));
            float_msg(enemy_fighter, mstr(350), FLOAT_MSG_RED);
            add_timer_event(self_obj, game_ticks(1), 45);
            add_timer_event(self_obj, game_ticks(2), 46);
            chadwic_knife_out := 1;
        end
    end
end

procedure hand_hit_enemy
begin
    reg_anim_func(2, party_fighter);
    reg_anim_func(1, 1);
    reg_anim_animate(party_fighter, 16, -1);
    reg_anim_play_sfx(party_fighter, sfx_build_char_name(party_fighter, 16, 4), 0);
    reg_anim_func(3, 0);
    reg_anim_func(2, enemy_fighter);
    reg_anim_func(1, 1);
    reg_anim_animate(enemy_fighter, 14, -1);
    reg_anim_play_sfx(enemy_fighter, sfx_build_char_name(enemy_fighter, 14, 4), 0);
    reg_anim_func(3, 0);
end

procedure hand_hit_party
begin
    reg_anim_func(2, enemy_fighter);
    reg_anim_func(1, 1);
    reg_anim_animate(enemy_fighter, 16, -1);
    reg_anim_play_sfx(enemy_fighter, sfx_build_char_name(enemy_fighter, 16, 4), 0);
    reg_anim_func(3, 0);
    reg_anim_func(2, party_fighter);
    reg_anim_func(1, 1);
    reg_anim_animate(party_fighter, 14, -1);
    reg_anim_play_sfx(party_fighter, sfx_build_char_name(party_fighter, 14, 4), 0);
    reg_anim_func(3, 0);
end

procedure hand_miss_enemy
begin
    reg_anim_func(2, party_fighter);
    reg_anim_func(1, 1);
    reg_anim_animate(party_fighter, 16, -1);
    reg_anim_play_sfx(party_fighter, sfx_build_char_name(party_fighter, 16, 2), 0);
    reg_anim_func(3, 0);
    reg_anim_func(2, enemy_fighter);
    reg_anim_func(1, 1);
    reg_anim_animate(enemy_fighter, 13, -1);
    reg_anim_play_sfx(enemy_fighter, sfx_build_char_name(enemy_fighter, 16, 2), 0);
    reg_anim_func(3, 0);
end

procedure hand_miss_party
begin
    reg_anim_func(2, enemy_fighter);
    reg_anim_func(1, 1);
    reg_anim_animate(enemy_fighter, 16, -1);
    reg_anim_play_sfx(enemy_fighter, sfx_build_char_name(enemy_fighter, 16, 2), 0);
    reg_anim_func(3, 0);
    reg_anim_func(2, party_fighter);
    reg_anim_func(1, 1);
    reg_anim_animate(party_fighter, 13, -1);
    reg_anim_play_sfx(party_fighter, sfx_build_char_name(party_fighter, 16, 2), 0);
    reg_anim_func(3, 0);
end

procedure kick_hit_enemy
begin
    reg_anim_func(2, party_fighter);
    reg_anim_func(1, 1);
    reg_anim_animate(party_fighter, 17, -1);
    reg_anim_play_sfx(party_fighter, sfx_build_char_name(party_fighter, 17, 4), 0);
    reg_anim_func(3, 0);
    reg_anim_func(2, enemy_fighter);
    reg_anim_func(1, 1);
    reg_anim_animate(enemy_fighter, 14, -1);
    reg_anim_play_sfx(enemy_fighter, sfx_build_char_name(enemy_fighter, 14, 4), 0);
    reg_anim_func(3, 0);
end

procedure kick_hit_party
begin
    reg_anim_func(2, enemy_fighter);
    reg_anim_func(1, 1);
    reg_anim_animate(enemy_fighter, 17, -1);
    reg_anim_play_sfx(enemy_fighter, sfx_build_char_name(enemy_fighter, 17, 4), 0);
    reg_anim_func(3, 0);
    reg_anim_func(2, party_fighter);
    reg_anim_func(1, 1);
    reg_anim_animate(party_fighter, 14, -1);
    reg_anim_play_sfx(party_fighter, sfx_build_char_name(party_fighter, 14, 4), 0);
    reg_anim_func(3, 0);
end

procedure kick_miss_enemy
begin
    reg_anim_func(2, party_fighter);
    reg_anim_func(1, 1);
    reg_anim_animate(party_fighter, 17, -1);
    reg_anim_play_sfx(party_fighter, sfx_build_char_name(party_fighter, 17, 2), 0);
    reg_anim_func(3, 0);
    reg_anim_func(2, enemy_fighter);
    reg_anim_func(1, 1);
    reg_anim_animate(enemy_fighter, 13, -1);
    reg_anim_play_sfx(enemy_fighter, sfx_build_char_name(enemy_fighter, 16, 2), 0);
    reg_anim_func(3, 0);
end

procedure kick_miss_party
begin
    reg_anim_func(2, enemy_fighter);
    reg_anim_func(1, 1);
    reg_anim_animate(enemy_fighter, 17, -1);
    reg_anim_play_sfx(enemy_fighter, sfx_build_char_name(enemy_fighter, 17, 2), 0);
    reg_anim_func(3, 0);
    reg_anim_func(2, party_fighter);
    reg_anim_func(1, 1);
    reg_anim_animate(party_fighter, 13, -1);
    reg_anim_play_sfx(party_fighter, sfx_build_char_name(party_fighter, 16, 2), 0);
    reg_anim_func(3, 0);
end

procedure knife_hit_party
begin
    reg_anim_func(2, enemy_fighter);
    reg_anim_func(1, 1);
    reg_anim_animate(enemy_fighter, 42, -1);
    reg_anim_play_sfx(enemy_fighter, sfx_build_char_name(enemy_fighter, 42, 4), 0);
    reg_anim_func(3, 0);
    reg_anim_func(2, party_fighter);
    reg_anim_func(1, 1);
    reg_anim_animate(party_fighter, 14, -1);
    reg_anim_play_sfx(party_fighter, sfx_build_char_name(party_fighter, 14, 4), 0);
    reg_anim_func(3, 0);
end

procedure knife_miss_party
begin
    reg_anim_func(2, enemy_fighter);
    reg_anim_func(1, 1);
    reg_anim_animate(enemy_fighter, 42, -1);
    reg_anim_play_sfx(enemy_fighter, sfx_build_char_name(enemy_fighter, 42, 2), 0);
    reg_anim_func(3, 0);
    reg_anim_func(2, party_fighter);
    reg_anim_func(1, 1);
    reg_anim_animate(party_fighter, 13, -1);
    reg_anim_play_sfx(party_fighter, sfx_build_char_name(party_fighter, 16, 2), 0);
    reg_anim_func(3, 0);
end

procedure party_loose
begin
    reg_anim_func(2, party_fighter);
    reg_anim_func(1, 1);
    reg_anim_animate(party_fighter, 20, -1);
    reg_anim_play_sfx(party_fighter, sfx_build_char_name(party_fighter, 20, 3), 0);
    reg_anim_animate(party_fighter, 34, -1);
    reg_anim_func(3, 0);
    if ((global_var(GVAR_C_RING_POINTER) == 2) and (chadwic_knife_out == 1)) then begin
        reg_anim_func(2, enemy_fighter);
        reg_anim_func(1, 1);
        reg_anim_animate(enemy_fighter, 42, -1);
        reg_anim_play_sfx(enemy_fighter, sfx_build_char_name(enemy_fighter, 42, 4), 0);
        reg_anim_func(3, 0);
    end
    else begin
        reg_anim_func(2, enemy_fighter);
        reg_anim_func(1, 1);
        reg_anim_animate(enemy_fighter, 16, -1);
        reg_anim_play_sfx(enemy_fighter, sfx_build_char_name(enemy_fighter, 16, 4), 0);
        reg_anim_func(3, 0);
    end
end

procedure enemy_loose
begin
    reg_anim_func(2, enemy_fighter);
    reg_anim_func(1, 1);
    reg_anim_animate(enemy_fighter, 20, -1);
    reg_anim_play_sfx(enemy_fighter, sfx_build_char_name(enemy_fighter, 20, 3), 0);
    reg_anim_animate(enemy_fighter, 34, -1);
    reg_anim_func(3, 0);
    reg_anim_func(2, party_fighter);
    reg_anim_func(1, 1);
    reg_anim_animate(party_fighter, 16, -1);
    reg_anim_play_sfx(party_fighter, sfx_build_char_name(party_fighter, 16, 4), 0);
    reg_anim_func(3, 0);
end

procedure generate_party_and_oponent
begin
    if (global_var(GVAR_C_RING_POINTER) == 1) then begin
        enemy_fighter := create_object(16777859, 15691, 0);
        enemy_hit_points := 35;
        enemy_avg_damage := 4;
        enemy_difficulty := 2;
    end
    if (global_var(GVAR_C_RING_POINTER) == 2) then begin
        enemy_fighter := create_object(16777865, 15691, 0);
        enemy_hit_points := 50;
        enemy_avg_damage := 5;
        enemy_difficulty := 3;
    end
    if (global_var(GVAR_C_RING_POINTER) == 3) then begin
        enemy_fighter := create_object(16777897, 15691, 0);
        enemy_hit_points := 70;
        enemy_avg_damage := 8;
        enemy_difficulty := 7;
    end
    if (global_var(GVAR_C_RING_POINTER) == 4) then begin
        enemy_fighter := create_object(16777858, 15691, 0);
        if ((global_var(GVAR_C_RING_VICTORIES) bwand 131072) != 0) then begin
            enemy_hit_points := 55;
            enemy_avg_damage := 7;
            enemy_difficulty := 4;
        end
        else begin
            enemy_hit_points := 80;
            enemy_avg_damage := 10;
            enemy_difficulty := 9;
        end
    end
    if (map_var(1) == 1) then begin
        party_fighter := create_object(16778054, 16491, 0);
        art_change_fid_num(party_fighter, obj_art_fid(party_member_obj(16777779)));
        set_obj_visibility(party_member_obj(16777779), 1);
        party_hit_points := 60;
        party_avg_damage := 5;
        party_difficulty := 5;
    end
    if (map_var(1) == 2) then begin
        party_fighter := create_object(16778052, 16491, 0);
        art_change_fid_num(party_fighter, obj_art_fid(party_member_obj(16777811)));
        set_obj_visibility(party_member_obj(16777811), 1);
        if ((map_var(4) == 17) or (map_var(4) == 3) or (map_var(4) == 2)) then begin
            party_hit_points := 90;
            party_avg_damage := 9;
            party_difficulty := 10;
        end
        else begin
            party_hit_points := 75;
            party_avg_damage := 9;
            party_difficulty := 8;
        end
    end
    if (map_var(1) == 3) then begin
        party_fighter := create_object(16778053, 16491, 0);
        art_change_fid_num(party_fighter, obj_art_fid(party_member_obj(16777814)));
        set_obj_visibility(party_member_obj(16777814), 1);
        party_hit_points := 20;
        party_avg_damage := 1;
        party_difficulty := 1;
    end
    if (map_var(1) == 4) then begin
        party_fighter := create_object(16778044, 16491, 0);
        set_obj_visibility(Vodka_obj, 1);
        party_hit_points := 100;
        party_avg_damage := 10;
        party_difficulty := 8;
    end
    anim(enemy_fighter, 1000, 2);
    anim(party_fighter, 1000, 5);
    hb_party := party_hit_points;
    hb_enemy := enemy_hit_points;
    party_dies := 0;
    enemy_dies := 0;
end

procedure floats_when_party_fight
begin
    probability := random(0, 19);
    if ((probability == 2) or (probability == 3)) then begin
        float_msg(obyv4, mstr(random(310, 324)), FLOAT_MSG_YELLOW);
    end
    if ((probability == 4) or (probability == 5) and (global_var(GVAR_C_RING_POINTER) != 2)) then begin
        float_msg(obyv5, mstr(random(310, 324)), FLOAT_MSG_YELLOW);
    end
    if ((probability == 15) or (probability == 9)) then begin
        float_msg(obyv6, mstr(random(310, 324)), FLOAT_MSG_YELLOW);
    end
    if ((global_var(GVAR_C_RING_POINTER) == 1) or (global_var(GVAR_C_RING_POINTER) == 2)) then begin
        if ((probability == 6) or (probability == 1)) then begin
            float_msg(obyv1, mstr(random(310, 324)), FLOAT_MSG_YELLOW);
        end
        if ((probability == 7) or (probability == 11)) then begin
            float_msg(obyv2, mstr(random(310, 324)), FLOAT_MSG_YELLOW);
        end
        if ((probability == 8) or (probability == 12)) then begin
            float_msg(obyv8, mstr(random(310, 324)), FLOAT_MSG_YELLOW);
        end
    end
    else begin
        if (probability == 18) then begin
            float_msg(obyv1, mstr(random(310, 320)), FLOAT_MSG_YELLOW);
        end
        if (probability == 17) then begin
            float_msg(str1, mstr(random(310, 324)), FLOAT_MSG_YELLOW);
        end
        if (probability == 10) then begin
            float_msg(str2, mstr(random(310, 324)), FLOAT_MSG_YELLOW);
        end
        if (probability == 11) then begin
            float_msg(nes1, mstr(random(310, 324)), FLOAT_MSG_YELLOW);
        end
        if (probability == 12) then begin
            float_msg(nes2, mstr(random(310, 324)), FLOAT_MSG_YELLOW);
        end
    end
end
