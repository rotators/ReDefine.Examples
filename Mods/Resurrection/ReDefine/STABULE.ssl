variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure map_enter_p_proc;
procedure use_p_proc;
procedure Node999;
procedure Node500;
procedure Node550;
procedure Node600;
procedure Node650;
procedure Node700;
procedure Node750;
procedure Node800;
procedure Node850;
procedure Node900;
procedure Node950;
procedure Node1000;
procedure Node1050;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777293) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777293)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777958) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777958)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777957) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777957)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778018) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778018)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
end

procedure look_at_p_proc
begin
    script_overrides;
    if (dude_is_stupid) then begin
        display_mstr(101);
    end
    else begin
        display_mstr(100);
    end
end

procedure description_p_proc
begin
    script_overrides;
    if (dude_is_stupid) then begin
        display_mstr(201);
    end
    else begin
        display_mstr(200);
    end
end

procedure use_skill_on_p_proc
begin
end

procedure map_enter_p_proc
begin
end

procedure use_p_proc
begin
    start_gdialog(1397, self_obj, 4, -1, -1);
    gsay_start;
    if (dude_iq >= 4) then begin
        call Node550();
    end
    if (dude_is_stupid) then begin
        call Node500();
    end
    gsay_end;
    end_dialogue;
end

procedure Node999
begin
end

procedure Node500
begin
    Reply(500);
    giq_option(-3, NAME, 501, Node999, NEUTRAL_REACTION);
end

procedure Node550
begin
    Reply(550);
    giq_option(4, NAME, 551, Node600, NEUTRAL_REACTION);
    giq_option(4, NAME, 552, Node750, NEUTRAL_REACTION);
    if (global_var(GVAR_QUEST_S_KEVIN_MEETING) == 3) then begin
        giq_option(4, NAME, 553, Node850, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 553, Node800, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 554, Node900, NEUTRAL_REACTION);
    giq_option(4, NAME, 555, Node950, NEUTRAL_REACTION);
    giq_option(4, NAME, 556, Node1000, NEUTRAL_REACTION);
    giq_option(4, NAME, 557, Node1050, NEUTRAL_REACTION);
    giq_option(4, NAME, 558, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 558, Node999, NEUTRAL_REACTION);
end

procedure Node600
begin
    Reply(600);
    giq_option(4, NAME, 601, Node650, NEUTRAL_REACTION);
    giq_option(4, NAME, 602, Node550, NEUTRAL_REACTION);
    giq_option(4, NAME, 603, Node999, NEUTRAL_REACTION);
end

procedure Node650
begin
    Reply(650);
    giq_option(4, NAME, 651, Node700, NEUTRAL_REACTION);
    giq_option(4, NAME, 652, Node550, NEUTRAL_REACTION);
    giq_option(4, NAME, 653, Node999, NEUTRAL_REACTION);
end

procedure Node700
begin
    Reply(700);
    giq_option(4, NAME, 701, Node550, NEUTRAL_REACTION);
    giq_option(4, NAME, 702, Node999, NEUTRAL_REACTION);
end

procedure Node750
begin
    Reply(750);
    giq_option(4, NAME, 751, Node550, NEUTRAL_REACTION);
    giq_option(4, NAME, 752, Node999, NEUTRAL_REACTION);
end

procedure Node800
begin
    Reply(800);
    giq_option(4, NAME, 801, Node550, NEUTRAL_REACTION);
    giq_option(4, NAME, 802, Node999, NEUTRAL_REACTION);
end

procedure Node850
begin
    Reply(850);
    set_global_var(GVAR_KNOW_ABOUT_FREDERYKS_DEAD, 1);
    giq_option(4, NAME, 851, Node550, NEUTRAL_REACTION);
    giq_option(4, NAME, 852, Node999, NEUTRAL_REACTION);
end

procedure Node900
begin
    Reply(900);
    giq_option(4, NAME, 901, Node550, NEUTRAL_REACTION);
    giq_option(4, NAME, 902, Node999, NEUTRAL_REACTION);
end

procedure Node950
begin
    Reply(950);
    giq_option(4, NAME, 951, Node550, NEUTRAL_REACTION);
    giq_option(4, NAME, 952, Node999, NEUTRAL_REACTION);
end

procedure Node1000
begin
    Reply(1000);
    giq_option(4, NAME, 1001, Node550, NEUTRAL_REACTION);
    giq_option(4, NAME, 1002, Node999, NEUTRAL_REACTION);
end

procedure Node1050
begin
    Reply(1050);
    giq_option(4, NAME, 1051, Node550, NEUTRAL_REACTION);
    giq_option(4, NAME, 1052, Node999, NEUTRAL_REACTION);
end
