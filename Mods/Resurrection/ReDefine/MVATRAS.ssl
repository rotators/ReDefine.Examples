variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure combat_p_proc;
procedure timed_event_p_proc;
procedure Node998;
procedure Node999;
procedure Node500;
procedure Node550;
procedure Node600;
procedure Node650;
procedure Node700;
procedure Node750;
procedure Node800;
procedure Node850;
procedure Node900;
procedure Node950;
procedure Node1000;
procedure Node1050;
procedure Node1100;
procedure Node1150;
procedure Node1200;
procedure Node1250;
procedure Node1300;
procedure Node1350;
procedure Improve_Flamer;
procedure Improve_Gatling;
procedure Improve_Fuel;

variable probability;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if (has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) == 0) then begin
        if ((local_var(4) == 1) or (map_var(2) >= 3) or (map_var(4) >= 7)) then begin
            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 268);
        end
    end
    if ((local_var(4) == 1) or (map_var(2) >= 3) and obj_can_see_obj(self_obj, dude_obj)) then begin
        if (critter_is_fleeing(self_obj)) then begin
            if (anim_busy(self_obj) == 0) then begin
                if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                    if (anim_busy(self_obj) == 0) then begin
                        global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                        animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                        global_temp := (global_temp + 1) % 6;
                        while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                            debug_msg("flee loop: rot == " + global_temp);
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                        end
                    end
                end
            end
        end
        else begin
            attack(dude_obj);
        end
    end
    if ((elevation(self_obj) == 0) and ((global_var(GVAR_AQ_ALBUQ_DEATHS) bwand 1) != 0) and (art_anim(obj_art_fid(self_obj)) != 1) and (tile_num(self_obj) != 13680)) then begin
        animate_move_obj_to_tile(self_obj, 13680, 0);
    end
    if ((elevation(self_obj) == 0) and ((global_var(GVAR_AQ_ALBUQ_DEATHS) bwand 1) != 0) and (tile_num(self_obj) == 13680) and (obj_get_rot(self_obj) != 3)) then begin
        anim(self_obj, 1000, 2);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(4, 1);
    end
end

procedure talk_p_proc
begin
    anim(dude_obj, 1000, rotation_to_tile(dude_tile, tile_num(self_obj)));
    anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
    start_gdialog(1768, self_obj, 4, -1, -1);
    gsay_start;
    if (map_var(1) == 1) then begin
        if (local_var(7) != 0) then begin
            if ((game_time - local_var(7)) >= (60 * (60 * 10) * 1)) then begin
                if ((local_var(6) bwand 16) != 0) then begin
                    call Node1350();
                end
                else begin
                    call Node1300();
                end
            end
            else begin
                call Node1250();
            end
        end
        else begin
            call Node900();
        end
    end
    else begin
        if (local_var(5) == 1) then begin
            call Node850();
        end
        else begin
            call Node500();
        end
    end
    set_local_var(5, 1);
    gsay_end;
    end_dialogue;
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (critter_kill_type(self_obj) == KILL_TYPE_children_kills) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(GVAR_TOWN_REP_MUTANT_CAMP, global_var(GVAR_TOWN_REP_MUTANT_CAMP) + -8);
                debug_msg("Added " + -8 + " to Town Rep");
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 0);
        debug_msg("Player gains " + 0 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    set_map_var(3, map_var(3) + 1);
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(5) == 1) then begin
        display_mstr(150);
    end
    else begin
        display_mstr(100);
    end
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(5) == 1) then begin
        display_mstr(250);
    end
    else begin
        display_mstr(200);
    end
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        if ((map_var(2) < 3) and (global_var(GVAR_MC_SEBASTIAN_NOT_CONVINCED) > 0) and (global_var(GVAR_MC_SEBASTIAN_NOT_CONVINCED) != 3) and (map_var(4) < 7)) then begin
            set_map_var(2, map_var(2) + 1);
        end
        else begin
            set_map_var(2, 3);
        end
        if (map_var(2) >= 3) then begin
            set_local_var(4, 1);
            if (not((global_var(GVAR_MC_MUTANT_CAMP_EVENTS) bwand 32) != 0)) then begin
                set_global_var(GVAR_MC_MUTANT_CAMP_EVENTS, global_var(GVAR_MC_MUTANT_CAMP_EVENTS) bwor 32);
            end
            if (global_var(GVAR_MC_QUEST_BRING_SEBASTIAN) != 4) then begin
                set_global_var(GVAR_MC_QUEST_BRING_SEBASTIAN, 0);
            end
            set_global_var(GVAR_PTR_KERI_REACTIONS, global_var(GVAR_PTR_KERI_REACTIONS) bwand (-1 - 262144));
            set_global_var(GVAR_PTR_GABRIEL_REACTIONS, global_var(GVAR_PTR_GABRIEL_REACTIONS) bwand (-1 - 67108864));
            set_global_var(GVAR_PTR_KERI_REACTIONS, global_var(GVAR_PTR_KERI_REACTIONS) bwand (-1 - 524288));
            set_global_var(GVAR_PTR_LYSTRA_REACTIONS_2, global_var(GVAR_PTR_LYSTRA_REACTIONS_2) bwand (-1 - 2048));
            set_global_var(GVAR_PTR_LYSTRA_REACTIONS_2, global_var(GVAR_PTR_LYSTRA_REACTIONS_2) bwand (-1 - 4096));
        end
    end
end

procedure map_enter_p_proc
begin
    if ((map_var(2) < 3) and (global_var(GVAR_MC_SEBASTIAN_NOT_CONVINCED) > 0) and (global_var(GVAR_MC_SEBASTIAN_NOT_CONVINCED) != 3) and (map_var(4) < 7)) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 0);
    end
    else begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 268);
    end
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_SUPER_MUTANT);
    if (map_var(2) < 3) then begin
        add_timer_event(self_obj, game_ticks(random(300, 320)), 1);
    end
    if ((elevation(self_obj) == 0) and ((global_var(GVAR_AQ_ALBUQ_DEATHS) bwand 1) != 0) and (tile_num(self_obj) != 13680) and not(is_loading_game)) then begin
        critter_attempt_placement(self_obj, 13680, 0);
    end
end

procedure combat_p_proc
begin
    if ((has_trait(TRAIT_OBJECT, self_obj, OBJECT_TEAM_NUM) == 0) and (map_var(2) >= 3)) then begin
        critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 268);
    end
    if (fixed_param == 4) then begin
        if (map_var(2) >= 3) then begin
            probability := random(0, 13);
            if ((probability >= 13) and not(critter_is_fleeing(self_obj))) then begin
                float_msg(self_obj, mstr(random(400, 401)), FLOAT_MSG_RED);
            end
        end
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if (not(combat_is_initialized)) then begin
            float_msg(self_obj, mstr(300), FLOAT_MSG_YELLOW);
        end
        if (map_var(2) < 3) then begin
            add_timer_event(self_obj, game_ticks(random(300, 320)), 1);
        end
    end
end

procedure Node998
begin
    set_local_var(4, 1);
    set_map_var(2, 1);
    set_global_var(GVAR_PTR_KERI_REACTIONS, global_var(GVAR_PTR_KERI_REACTIONS) bwand (-1 - 262144));
    set_global_var(GVAR_PTR_GABRIEL_REACTIONS, global_var(GVAR_PTR_GABRIEL_REACTIONS) bwand (-1 - 67108864));
    set_global_var(GVAR_PTR_LYSTRA_REACTIONS_2, global_var(GVAR_PTR_LYSTRA_REACTIONS_2) bwand (-1 - 2048));
end

procedure Node999
begin
    anim(self_obj, 1000, 2);
end

procedure Node500
begin
    Reply(500);
    giq_option(4, NAME, 501, Node550, NEUTRAL_REACTION);
    giq_option(-3, NAME, 502, Node800, NEUTRAL_REACTION);
    giq_option(1, NAME, 503, Node999, NEUTRAL_REACTION);
end

procedure Node550
begin
    Reply(550);
    set_local_var(6, local_var(6) bwor 1);
    giq_option(4, NAME, 551, Node600, NEUTRAL_REACTION);
    giq_option(4, NAME, 552, Node999, NEUTRAL_REACTION);
end

procedure Node600
begin
    Reply(600);
    set_local_var(6, local_var(6) bwor 2);
    giq_option(4, NAME, 601, Node650, NEUTRAL_REACTION);
    giq_option(4, NAME, 602, Node999, NEUTRAL_REACTION);
end

procedure Node650
begin
    Reply(650);
    giq_option(4, NAME, 651, Node700, NEUTRAL_REACTION);
    giq_option(4, NAME, 652, Node999, NEUTRAL_REACTION);
end

procedure Node700
begin
    Reply(700);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 701, Node750, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 702, Node750, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 703, Node999, NEUTRAL_REACTION);
end

procedure Node750
begin
    Reply(750);
    giq_option(4, NAME, 751, Node999, NEUTRAL_REACTION);
end

procedure Node800
begin
    Reply(800);
    giq_option(-3, NAME, 801, Node999, NEUTRAL_REACTION);
end

procedure Node850
begin
    Reply(850);
    giq_option(4, NAME, 851, Node550, NEUTRAL_REACTION);
    giq_option(-3, NAME, 852, Node800, NEUTRAL_REACTION);
    giq_option(1, NAME, 853, Node999, NEUTRAL_REACTION);
end

procedure Node900
begin
    Reply(900);
    if ((local_var(6) bwand 32) == 0) then begin
        set_local_var(6, local_var(6) bwor 32);
        give_exp_points(500);
        display_msg(g_mstr(100) + 500 + g_mstr(101));
    end
    if ((local_var(6) bwand 1) == 0) then begin
        giq_option(4, NAME, 901, Node950, NEUTRAL_REACTION);
    end
    if ((local_var(6) bwand 2) != 0) then begin
        giq_option(4, NAME, 902, Node1050, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 903, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 904, Node999, NEUTRAL_REACTION);
end

procedure Node950
begin
    Reply(950);
    set_local_var(6, local_var(6) bwor 1);
    giq_option(4, NAME, 951, Node1000, NEUTRAL_REACTION);
    giq_option(4, NAME, 952, Node999, NEUTRAL_REACTION);
end

procedure Node1000
begin
    Reply(1000);
    set_local_var(6, local_var(6) bwor 2);
    giq_option(4, NAME, 1001, Node1050, NEUTRAL_REACTION);
    giq_option(4, NAME, 1002, Node999, NEUTRAL_REACTION);
end

procedure Node1050
begin
    Reply(1050);
    if (obj_is_carrying_obj_pid(dude_obj, 11) or obj_is_carrying_obj_pid(dude_obj, 12) or obj_is_carrying_obj_pid(dude_obj, 32)) then begin
        giq_option(4, NAME, 1051, Node1150, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 1051, Node1100, NEUTRAL_REACTION);
    end
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 1052, Node999, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 1053, Node999, NEUTRAL_REACTION);
    end
end

procedure Node1100
begin
    Reply(1100);
    giq_option(4, NAME, 1101, Node999, NEUTRAL_REACTION);
end

procedure Node1150
begin
    Reply(1150);
    if (obj_is_carrying_obj_pid(dude_obj, 11)) then begin
        giq_option(4, NAME, 1151, Improve_Flamer, NEUTRAL_REACTION);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 12)) then begin
        giq_option(4, NAME, 1152, Improve_Gatling, NEUTRAL_REACTION);
    end
    if (obj_is_carrying_obj_pid(dude_obj, 32)) then begin
        giq_option(4, NAME, 1154, Improve_Fuel, NEUTRAL_REACTION);
    end
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 1155, Node999, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 1156, Node999, NEUTRAL_REACTION);
    end
end

procedure Node1200
begin
    Reply(1200);
    set_local_var(7, game_time);
    giq_option(4, NAME, 1201, Node999, NEUTRAL_REACTION);
end

procedure Node1250
begin
    Reply(1250);
    giq_option(4, NAME, 1251, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 1252, Node999, NEUTRAL_REACTION);
end

procedure Node1300
begin
    Reply(1300);
    if ((local_var(6) bwand 4) != 0) then begin
        restock_obj := create_object(400, 0, 0);
    end
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    if ((local_var(6) bwand 8) != 0) then begin
        restock_obj := create_object(389, 0, 0);
    end
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    set_local_var(6, local_var(6) bwand (-1 - 4));
    set_local_var(6, local_var(6) bwand (-1 - 8));
    set_local_var(7, 0);
    giq_option(4, NAME, 1301, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 1302, Node999, NEUTRAL_REACTION);
end

procedure Node1350
begin
    Reply(1350);
    if ((local_var(6) bwand 16) != 0) then begin
        restock_obj := create_object(382, 0, 0);
    end
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    set_local_var(6, local_var(6) bwand (-1 - 16));
    set_local_var(7, 0);
    giq_option(4, NAME, 1351, Node999, NEUTRAL_REACTION);
    giq_option(-3, NAME, 1352, Node999, NEUTRAL_REACTION);
end

procedure Improve_Flamer
begin
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 11);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 11);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 11);
            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 1;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 11)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 11);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    set_local_var(6, local_var(6) bwor 4);
    call Node1200();
end

procedure Improve_Gatling
begin
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 12);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 12);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 12);
            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 1;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 12)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 12);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    set_local_var(6, local_var(6) bwor 8);
    call Node1200();
end

procedure Improve_Fuel
begin
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 32);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 32);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 32);
            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 1;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 32)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 32);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    set_local_var(6, local_var(6) bwor 16);
    call Node1200();
end
