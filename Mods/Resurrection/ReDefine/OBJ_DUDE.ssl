variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure look_at_p_proc;
procedure description_p_proc;
procedure timed_event_p_proc;
procedure critter_p_proc;
procedure map_enter_p_proc;
procedure combat_p_proc;
procedure map_update_p_proc;
procedure use_obj_on_p_proc;
procedure use_skill_on_p_proc;
procedure is_dropping_p_proc;
procedure damage_p_proc;
procedure destroy_p_proc;
procedure Unconnecting_robo;

variable statAIDS;
variable statLoss;
variable partyDummyBoddy;
variable DeadPartyTile;
variable DeadPartyElev;
variable DeadPartyPID;
variable DeadPartyAnim;
variable DummyPartyPID;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
end

procedure look_at_p_proc
begin
    if (global_var(GVAR_PROGEMA_DUDE_IS_ROBOT) == 1) then begin
        script_overrides;
        display_mstr(200);
    end
end

procedure description_p_proc
begin
    if (global_var(GVAR_PROGEMA_DUDE_IS_ROBOT) == 1) then begin
        script_overrides;
        display_mstr(201);
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        game_ui_enable;
        fade_in;
    end
    if (fixed_param == 2) then begin
        if (CUR_MAP_PROGEMA1) then begin
            call Unconnecting_robo();
        end
    end
    if (fixed_param == 3) then begin
        inven_unwield;
        anim(self_obj, 1010, 39);
    end
    if (fixed_param == 4) then begin
        if (global_var(GVAR_DEAD_PARTYMEMBER) != 0) then begin
            DeadPartyTile := tile_num(global_var(GVAR_DEAD_PARTYMEMBER));
            DeadPartyElev := elevation(global_var(GVAR_DEAD_PARTYMEMBER));
            DeadPartyPID := obj_pid(global_var(GVAR_DEAD_PARTYMEMBER));
            DeadPartyAnim := art_anim(obj_art_fid(global_var(GVAR_DEAD_PARTYMEMBER)));
            if (DeadPartyPID == 16777729) then begin
                DummyPartyPID := 16778055;
            end
            else begin
                if (DeadPartyPID == 16777779) then begin
                    DummyPartyPID := 16778054;
                end
                else begin
                    if (DeadPartyPID == 16777811) then begin
                        DummyPartyPID := 16778052;
                    end
                    else begin
                        if (DeadPartyPID == 16777814) then begin
                            DummyPartyPID := 16778053;
                        end
                        else begin
                            if (DeadPartyPID == 16777812) then begin
                                DummyPartyPID := 16778048;
                            end
                            else begin
                                if (DeadPartyPID == 16777748) then begin
                                    DummyPartyPID := 16778056;
                                end
                                else begin
                                    if (DeadPartyPID == 16777294) then begin
                                        DummyPartyPID := 16777293;
                                    end
                                    else begin
                                        DummyPartyPID := 0;
                                    end
                                end
                            end
                        end
                    end
                end
            end
            if ((DummyPartyPID != 0) and (global_var(GVAR_DEAD_PARTYMEMBER) != 0)) then begin
                if (obj_in_party(global_var(GVAR_DEAD_PARTYMEMBER))) then begin
                    party_remove(global_var(GVAR_DEAD_PARTYMEMBER));
                end
                partyDummyBoddy := create_object(DummyPartyPID, 0, 0);
                move_obj_inven_to_obj(global_var(GVAR_DEAD_PARTYMEMBER), partyDummyBoddy);
                art_change_fid_num(partyDummyBoddy, obj_art_fid(global_var(GVAR_DEAD_PARTYMEMBER)));
                anim(partyDummyBoddy, 1000, obj_get_rot(global_var(GVAR_DEAD_PARTYMEMBER)));
                if (DeadPartyAnim > 32) then begin
                    kill_critter(partyDummyBoddy, DeadPartyAnim + 27);
                end
                else begin
                    kill_critter(partyDummyBoddy, DeadPartyAnim + 28);
                end
                move_to(partyDummyBoddy, DeadPartyTile, DeadPartyElev);
                set_obj_visibility(global_var(GVAR_DEAD_PARTYMEMBER), 1);
            end
            partyDummyBoddy := 0;
            set_global_var(GVAR_DEAD_PARTYMEMBER, 0);
        end
    end
    if (fixed_param == 5) then begin
        set_global_var(GVAR_ENC_NUMBERS_GHOULS, 0);
        set_global_var(GVAR_ENC_NUMBERS_CARAVANS, 0);
        set_global_var(GVAR_ENC_NUMBERS_ANIMALS, 0);
        set_global_var(GVAR_ENC_NUMBERS_RAIDERS, 0);
        set_global_var(GVAR_ENC_NUMBERS_HITMEN, 0);
        set_global_var(GVAR_ENC_NUMBERS_WANDERER, 0);
        set_global_var(GVAR_ENC_NUMBERS_REFUGEES, 0);
        set_global_var(GVAR_ENC_NUMBERS_JUNKIES, 0);
        set_global_var(GVAR_ENC_NUMBERS_MHUNTERS, 0);
        set_global_var(GVAR_ENC_NUMBERS_TRIBALS, 0);
    end
end

procedure critter_p_proc
begin
    if (global_var(GVAR_PROGEMA_DUDE_IS_ROBOT) == 1) then begin
        if (obj_art_fid(dude_obj) != 16777269) then begin
            art_change_fid_num(dude_obj, 16777269);
        end
        if (dude_iq < 4) then begin
            display_mstr(203);
            call Unconnecting_robo();
        end
    end
end

procedure map_enter_p_proc
begin
    if (not(is_loading_game)) then begin
        set_global_var(GVAR_EC_WANDERER, 0);
    end
    if ((global_var(GVAR_NESTOR_LEAVED_CORATH) == 1) and (global_var(GVAR_NESTORS_CONTRACT_KILLERS_ON) == 0) and (global_var(GVAR_C_QUEST_UNCLE_Q4) != 3) and (((random(6, 10) * (24 * (60 * (60 * 10)))) + global_var(GVAR_NESTOR_LEAVED_CORATH_TIME)) <= game_time)) then begin
        set_global_var(GVAR_NESTORS_CONTRACT_KILLERS_ON, 1);
    end
    if ((global_var(GVAR_NESTORS_CONTRACT_KILLERS_ON) == 1) and (global_var(GVAR_C_QUEST_UNCLE_Q4) == 3)) then begin
        set_global_var(GVAR_NESTORS_CONTRACT_KILLERS_ON, 0);
    end
    add_timer_event(self_obj, 1, 5);
end

procedure combat_p_proc
begin
    if (global_var(GVAR_PROGEMA_DUDE_IS_ROBOT) == 1) then begin
        terminate_combat;
    end
end

procedure map_update_p_proc
begin
    variable LVar0 := 0;
    if (global_var(GVAR_MUTATE_STAGE) == 0) then begin
        if (get_critter_stat(dude_obj, STAT_current_rad) >= 150) then begin
            if (global_var(GVAR_MUTATE) > 0) then begin
                if (((game_time / (10 * 60 * 60 * 24)) + 7) >= global_var(GVAR_MUTATE)) then begin
                    set_global_var(GVAR_MUTATE_WHEN, game_time / (10 * 60 * 60 * 24));
                    set_global_var(GVAR_MUTATE_STAGE, 1);
                end
            end
            else begin
                set_global_var(GVAR_MUTATE, game_time / (10 * 60 * 60 * 24));
            end
        end
        else begin
            if (global_var(GVAR_MUTATE) > 0) then begin
                set_global_var(GVAR_MUTATE, 0);
            end
        end
    end
    if (global_var(GVAR_HAVE_MUTATED) == 0) then begin
        if ((global_var(GVAR_MUTATE_STAGE) > 0) and (global_var(GVAR_MUTATE_STAGE) < 5)) then begin
            LVar0 := (game_time / (10 * 60 * 60 * 24)) - global_var(GVAR_MUTATE_WHEN);
            if (LVar0 > 30) then begin
                if (global_var(GVAR_MUTATE_STAGE) < 5) then begin
                    display_mstr(140);
                    set_global_var(GVAR_MUTATE_STAGE, 5);
                    set_global_var(GVAR_HAVE_MUTATED, 1);
                end
            end
            else begin
                if (LVar0 > 25) then begin
                    if (global_var(GVAR_MUTATE_STAGE) < 4) then begin
                        display_mstr(130);
                        set_global_var(GVAR_MUTATE_STAGE, 4);
                    end
                end
                else begin
                    if (LVar0 > 20) then begin
                        if (global_var(GVAR_MUTATE_STAGE) < 3) then begin
                            display_mstr(120);
                            set_global_var(GVAR_MUTATE_STAGE, 3);
                        end
                    end
                    else begin
                        if (LVar0 > 15) then begin
                            if (global_var(GVAR_MUTATE_STAGE) < 2) then begin
                                display_mstr(110);
                                set_global_var(GVAR_MUTATE_STAGE, 2);
                            end
                        end
                    end
                end
            end
        end
    end
    if ((global_var(GVAR_PLAYER_WAS_MARRIED) == 1) and (global_var(GVAR_HIV_NEXT_STAGE_TIME) == 0)) then begin
        set_global_var(GVAR_HIV_NEXT_STAGE_TIME, random(60 * (24 * (60 * (60 * 10))), (60 + (3 * get_pc_base_stat(6))) * (24 * (60 * (60 * 10)))));
    end
    if (global_var(GVAR_PLAYER_WAS_MARRIED) == 1) then begin
        if ((global_var(GVAR_HIV_NEXT_STAGE_TIME) + global_var(GVAR_HIV_LAST_STAGE_TIME)) <= game_time) then begin
            set_global_var(GVAR_PLAYER_WAS_MARRIED, 0);
            set_global_var(GVAR_AIDS_STADIUM_1, 1);
            set_global_var(GVAR_HIV_LAST_STAGE_TIME, game_time);
            set_global_var(GVAR_HIV_NEXT_STAGE_TIME, random(60 * (24 * (60 * (60 * 10))), (60 + (3 * get_pc_base_stat(6))) * (24 * (60 * (60 * 10)))));
            display_mstr(400);
            statAIDS := get_pc_base_stat(2);
            if (statAIDS > 1) then begin
                statAIDS := statAIDS - 1;
                set_global_var(GVAR_AIDS_ENDURANCE_LOSS, global_var(GVAR_AIDS_ENDURANCE_LOSS) + 1);
                set_pc_base_stat(2, statAIDS);
                if (get_critter_stat(dude_obj, STAT_current_hp) > (get_critter_stat(dude_obj, STAT_max_hp) - 2)) then begin
                    critter_heal(dude_obj, -2);
                end
            end
        end
    end
    else begin
        if (global_var(GVAR_AIDS_STADIUM_1) == 1) then begin
            if ((global_var(GVAR_HIV_NEXT_STAGE_TIME) + global_var(GVAR_HIV_LAST_STAGE_TIME)) <= game_time) then begin
                set_global_var(GVAR_AIDS_STADIUM_1, 0);
                set_global_var(GVAR_AIDS_STADIUM_2, 1);
                set_global_var(GVAR_HIV_LAST_STAGE_TIME, game_time);
                set_global_var(GVAR_HIV_NEXT_STAGE_TIME, random(60 * (24 * (60 * (60 * 10))), (60 + (3 * get_pc_base_stat(6))) * (24 * (60 * (60 * 10)))));
                display_mstr(401);
                statAIDS := get_pc_base_stat(2);
                if (statAIDS > 1) then begin
                    statAIDS := statAIDS - 1;
                    set_global_var(GVAR_AIDS_ENDURANCE_LOSS, global_var(GVAR_AIDS_ENDURANCE_LOSS) + 1);
                    set_pc_base_stat(2, statAIDS);
                    if (get_critter_stat(dude_obj, STAT_current_hp) > (get_critter_stat(dude_obj, STAT_max_hp) - 2)) then begin
                        critter_heal(dude_obj, -2);
                    end
                end
            end
        end
        else begin
            if (global_var(GVAR_AIDS_STADIUM_2) == 1) then begin
                if ((global_var(GVAR_HIV_NEXT_STAGE_TIME) + global_var(GVAR_HIV_LAST_STAGE_TIME)) <= game_time) then begin
                    set_global_var(GVAR_AIDS_STADIUM_2, 0);
                    set_global_var(GVAR_AIDS_STADIUM_3, 1);
                    set_global_var(GVAR_HIV_LAST_STAGE_TIME, game_time);
                    set_global_var(GVAR_HIV_NEXT_STAGE_TIME, random(60 * (24 * (60 * (60 * 10))), (60 + (3 * get_pc_base_stat(6))) * (24 * (60 * (60 * 10)))));
                    display_mstr(402);
                    statAIDS := get_pc_base_stat(2);
                    if (statAIDS > 1) then begin
                        if (statAIDS > 2) then begin
                            statLoss := 2;
                        end
                        else begin
                            statLoss := 1;
                        end
                        statAIDS := statAIDS - statLoss;
                        set_global_var(GVAR_AIDS_ENDURANCE_LOSS, global_var(GVAR_AIDS_ENDURANCE_LOSS) + statLoss);
                        set_pc_base_stat(2, statAIDS);
                        if (get_critter_stat(dude_obj, STAT_current_hp) > (get_critter_stat(dude_obj, STAT_max_hp) - 4)) then begin
                            critter_heal(dude_obj, -4);
                        end
                    end
                    statAIDS := get_pc_base_stat(3);
                    if (statAIDS > 1) then begin
                        statAIDS := statAIDS - 1;
                        set_global_var(GVAR_AIDS_CHARISMA_LOSS, global_var(GVAR_AIDS_CHARISMA_LOSS) + 1);
                        set_pc_base_stat(3, statAIDS);
                    end
                end
            end
        end
    end
end

procedure use_obj_on_p_proc
begin
end

procedure use_skill_on_p_proc
begin
    if (global_var(GVAR_PROGEMA_DUDE_IS_ROBOT) == 1) then begin
        if (action_being_used == 12) then begin
            script_overrides;
            display_mstr(202);
            call Unconnecting_robo();
        end
        if (action_being_used == 6) then begin
            script_overrides;
        end
        if (action_being_used == 7) then begin
            script_overrides;
        end
    end
end

procedure is_dropping_p_proc
begin
    if (obj_pid(source_obj) == 567) then begin
        script_overrides;
        display_msg(g_mstr(1099));
    end
    if (obj_pid(source_obj) == 558) then begin
        if ((cur_town == 0) or (cur_town == 1) or (cur_town == 2) or (cur_town == 3) or (cur_town == 6) or (cur_town == 7) or (cur_town == 8)) then begin
            script_overrides;
            display_msg(g_mstr(1100 + (dude_gender == 1)));
        end
    end
    if (global_var(GVAR_PROGEMA_DUDE_IS_ROBOT) == 1) then begin
        script_overrides;
        display_mstr(204);
    end
end

procedure damage_p_proc
begin
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        if ((source_obj == party_member_obj(16777779)) and (random(1, 6) == 3)) then begin
            float_msg(party_member_obj(16777779), mstr(300), FLOAT_MSG_YELLOW);
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        if ((source_obj == party_member_obj(16777811)) and (random(1, 6) == 3)) then begin
            float_msg(party_member_obj(16777811), mstr(301), FLOAT_MSG_RED);
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        if ((source_obj == party_member_obj(16777814)) and (random(1, 6) == 3)) then begin
            float_msg(party_member_obj(16777814), mstr(302), FLOAT_MSG_YELLOW);
        end
    end
end

procedure destroy_p_proc
begin
    if (combat_is_initialized) then begin
        terminate_combat;
    end
end

procedure Unconnecting_robo
begin
    set_global_var(GVAR_PROGEMA_DUDE_IS_ROBOT, 0);
    fade_out;
    game_ui_disable;
    set_map_var(3, dude_tile);
    move_to(dude_obj, 20466, 1);
    anim(dude_obj, 1000, 5);
    move_obj_inven_to_obj(tile_contains_pid_obj(23641, 1, 129), dude_obj);
    wield_obj_critter(dude_obj, obj_carrying_pid_obj(self_obj, map_var(8)));
    art_change_fid_num(dude_obj, map_var(2));
    wield_obj_critter(dude_obj, obj_carrying_pid_obj(self_obj, map_var(9)));
    wield_obj_critter(dude_obj, obj_carrying_pid_obj(self_obj, map_var(10)));
    add_timer_event(self_obj, game_ticks(1), 1);
end
