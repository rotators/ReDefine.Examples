variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure use_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure use_obj_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;

import variable coffield_table_trade;
import variable coffield_obj;

procedure timed_event_p_proc;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
    coffield_table_trade := self_obj;
end

procedure use_p_proc
begin
    if (coffield_obj and (coffield_obj != -1) and (global_var(GVAR_C_ENEMY_OBYVAT) != 1)) then begin
        script_overrides;
        add_timer_event(coffield_obj, 0, 10);
    end
end

procedure look_at_p_proc
begin
end

procedure description_p_proc
begin
end

procedure use_skill_on_p_proc
begin
    if (coffield_obj and (coffield_obj != -1) and (global_var(GVAR_C_ENEMY_OBYVAT) != 1)) then begin
        call use_p_proc();
    end
end

procedure use_obj_on_p_proc
begin
    if (coffield_obj and (coffield_obj != -1) and (global_var(GVAR_C_ENEMY_OBYVAT) != 1)) then begin
        call use_p_proc();
    end
end

procedure damage_p_proc
begin
end

procedure map_enter_p_proc
begin
    if (coffield_obj and (coffield_obj != -1) and (global_var(GVAR_C_ENEMY_OBYVAT) != 1)) then begin
        if ((game_time < 0) and (local_var(4) > 0)) then begin
            set_local_var(4, game_time - 1);
        end
        if (local_var(4) < game_time) then begin
            item_caps_adjust(self_obj, random(400, 800) - item_caps_total(self_obj));
            restock_amt := random(1, 4);
            if (obj_is_carrying_obj_pid(self_obj, 284) < restock_amt) then begin
                if (100 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 284) < restock_amt) then begin
                        restock_obj := create_object(284, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 284));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 284) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 284);
                            if ((obj_is_carrying_obj_pid(self_obj, 284) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 284) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 284);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 284);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 284) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 284)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 284);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 284) < restock_amt) then begin
                    restock_obj := create_object(284, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 284));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 284) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 284);
                        if ((obj_is_carrying_obj_pid(self_obj, 284) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 284) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 284);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 284);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 284) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 284)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 284);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(2, 6);
            if (obj_is_carrying_obj_pid(self_obj, 40) < restock_amt) then begin
                if (100 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 40) < restock_amt) then begin
                        restock_obj := create_object(40, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 40));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 40) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 40);
                            if ((obj_is_carrying_obj_pid(self_obj, 40) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 40) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 40);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 40);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 40) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 40)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 40);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 40) < restock_amt) then begin
                    restock_obj := create_object(40, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 40));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 40) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 40);
                        if ((obj_is_carrying_obj_pid(self_obj, 40) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 40) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 40);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 40);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 40) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 40)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 40);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := 1;
            if (obj_is_carrying_obj_pid(self_obj, 47) < restock_amt) then begin
                if (70 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 47) < restock_amt) then begin
                        restock_obj := create_object(47, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 47));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 47) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 47);
                            if ((obj_is_carrying_obj_pid(self_obj, 47) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 47) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 47);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 47);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 47) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 47)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 47);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 47) < restock_amt) then begin
                    restock_obj := create_object(47, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 47));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 47) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 47);
                        if ((obj_is_carrying_obj_pid(self_obj, 47) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 47) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 47);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 47);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 47) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 47)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 47);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := 1;
            if (obj_is_carrying_obj_pid(self_obj, 91) < restock_amt) then begin
                if (50 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 91) < restock_amt) then begin
                        restock_obj := create_object(91, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 91));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 91) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 91);
                            if ((obj_is_carrying_obj_pid(self_obj, 91) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 91) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 91);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 91);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 91) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 91)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 91);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 91) < restock_amt) then begin
                    restock_obj := create_object(91, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 91));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 91) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 91);
                        if ((obj_is_carrying_obj_pid(self_obj, 91) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 91) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 91);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 91);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 91) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 91)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 91);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(1, 2);
            if (obj_is_carrying_obj_pid(self_obj, 49) < restock_amt) then begin
                if (70 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 49) < restock_amt) then begin
                        restock_obj := create_object(49, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 49));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 49) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 49);
                            if ((obj_is_carrying_obj_pid(self_obj, 49) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 49) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 49);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 49);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 49) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 49)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 49);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 49) < restock_amt) then begin
                    restock_obj := create_object(49, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 49));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 49) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 49);
                        if ((obj_is_carrying_obj_pid(self_obj, 49) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 49) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 49);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 49);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 49) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 49)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 49);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(2, 4);
            if (obj_is_carrying_obj_pid(self_obj, 556) < restock_amt) then begin
                if (90 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 556) < restock_amt) then begin
                        restock_obj := create_object(556, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 556));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 556) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 556);
                            if ((obj_is_carrying_obj_pid(self_obj, 556) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 556) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 556);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 556);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 556) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 556)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 556);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 556) < restock_amt) then begin
                    restock_obj := create_object(556, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 556));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 556) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 556);
                        if ((obj_is_carrying_obj_pid(self_obj, 556) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 556) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 556);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 556);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 556) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 556)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 556);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := 1;
            if (obj_is_carrying_obj_pid(self_obj, 84) < restock_amt) then begin
                if (100 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 84) < restock_amt) then begin
                        restock_obj := create_object(84, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 84));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 84) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 84);
                            if ((obj_is_carrying_obj_pid(self_obj, 84) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 84) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 84);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 84);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 84) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 84)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 84);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 84) < restock_amt) then begin
                    restock_obj := create_object(84, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 84));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 84) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 84);
                        if ((obj_is_carrying_obj_pid(self_obj, 84) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 84) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 84);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 84);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 84) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 84)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 84);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(1, 2);
            if (obj_is_carrying_obj_pid(self_obj, 127) < restock_amt) then begin
                if (70 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 127) < restock_amt) then begin
                        restock_obj := create_object(127, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 127));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 127) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 127);
                            if ((obj_is_carrying_obj_pid(self_obj, 127) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 127) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 127);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 127);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 127) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 127)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 127);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 127) < restock_amt) then begin
                    restock_obj := create_object(127, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 127));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 127) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 127);
                        if ((obj_is_carrying_obj_pid(self_obj, 127) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 127) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 127);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 127);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 127) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 127)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 127);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(1, 3);
            if (obj_is_carrying_obj_pid(self_obj, 314) < restock_amt) then begin
                if (90 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 314) < restock_amt) then begin
                        restock_obj := create_object(314, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 314));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 314) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 314);
                            if ((obj_is_carrying_obj_pid(self_obj, 314) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 314) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 314);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 314);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 314) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 314)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 314);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 314) < restock_amt) then begin
                    restock_obj := create_object(314, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 314));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 314) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 314);
                        if ((obj_is_carrying_obj_pid(self_obj, 314) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 314) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 314);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 314);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 314) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 314)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 314);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(1, 3);
            if (obj_is_carrying_obj_pid(self_obj, 315) < restock_amt) then begin
                if (90 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 315) < restock_amt) then begin
                        restock_obj := create_object(315, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 315));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 315) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 315);
                            if ((obj_is_carrying_obj_pid(self_obj, 315) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 315) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 315);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 315);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 315) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 315)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 315);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 315) < restock_amt) then begin
                    restock_obj := create_object(315, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 315));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 315) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 315);
                        if ((obj_is_carrying_obj_pid(self_obj, 315) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 315) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 315);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 315);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 315) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 315)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 315);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(1, 3);
            if (obj_is_carrying_obj_pid(self_obj, 316) < restock_amt) then begin
                if (90 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 316) < restock_amt) then begin
                        restock_obj := create_object(316, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 316));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 316) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 316);
                            if ((obj_is_carrying_obj_pid(self_obj, 316) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 316) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 316);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 316);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 316) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 316)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 316);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 316) < restock_amt) then begin
                    restock_obj := create_object(316, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 316));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 316) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 316);
                        if ((obj_is_carrying_obj_pid(self_obj, 316) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 316) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 316);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 316);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 316) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 316)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 316);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := 1;
            if (obj_is_carrying_obj_pid(self_obj, 289) < restock_amt) then begin
                if (60 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 289) < restock_amt) then begin
                        restock_obj := create_object(289, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 289));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 289) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 289);
                            if ((obj_is_carrying_obj_pid(self_obj, 289) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 289) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 289);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 289);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 289) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 289)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 289);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 289) < restock_amt) then begin
                    restock_obj := create_object(289, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 289));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 289) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 289);
                        if ((obj_is_carrying_obj_pid(self_obj, 289) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 289) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 289);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 289);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 289) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 289)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 289);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(1, 3);
            if (obj_is_carrying_obj_pid(self_obj, 79) < restock_amt) then begin
                if (90 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 79) < restock_amt) then begin
                        restock_obj := create_object(79, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 79));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 79) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 79);
                            if ((obj_is_carrying_obj_pid(self_obj, 79) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 79) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 79);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 79);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 79) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 79)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 79);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 79) < restock_amt) then begin
                    restock_obj := create_object(79, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 79));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 79) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 79);
                        if ((obj_is_carrying_obj_pid(self_obj, 79) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 79) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 79);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 79);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 79) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 79)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 79);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := 1;
            if (obj_is_carrying_obj_pid(self_obj, 2) < restock_amt) then begin
                if (100 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 2) < restock_amt) then begin
                        restock_obj := create_object(2, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 2));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 2) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 2);
                            if ((obj_is_carrying_obj_pid(self_obj, 2) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 2) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 2);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 2);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 2) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 2)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 2);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 2) < restock_amt) then begin
                    restock_obj := create_object(2, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 2));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 2) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 2);
                        if ((obj_is_carrying_obj_pid(self_obj, 2) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 2) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 2);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 2);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 2) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 2)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 2);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := 1;
            if (obj_is_carrying_obj_pid(self_obj, 12) < restock_amt) then begin
                if (90 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 12) < restock_amt) then begin
                        restock_obj := create_object(12, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 12));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 12) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 12);
                            if ((obj_is_carrying_obj_pid(self_obj, 12) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 12) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 12);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 12);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 12) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 12)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 12);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 12) < restock_amt) then begin
                    restock_obj := create_object(12, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 12));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 12) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 12);
                        if ((obj_is_carrying_obj_pid(self_obj, 12) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 12) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 12);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 12);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 12) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 12)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 12);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := 1;
            if (obj_is_carrying_obj_pid(self_obj, 18) < restock_amt) then begin
                if (90 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 18) < restock_amt) then begin
                        restock_obj := create_object(18, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 18));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 18) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 18);
                            if ((obj_is_carrying_obj_pid(self_obj, 18) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 18) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 18);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 18);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 18) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 18)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 18);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 18) < restock_amt) then begin
                    restock_obj := create_object(18, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 18));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 18) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 18);
                        if ((obj_is_carrying_obj_pid(self_obj, 18) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 18) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 18);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 18);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 18) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 18)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 18);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := 1;
            if (obj_is_carrying_obj_pid(self_obj, 23) < restock_amt) then begin
                if (90 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 23) < restock_amt) then begin
                        restock_obj := create_object(23, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 23));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 23) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 23);
                            if ((obj_is_carrying_obj_pid(self_obj, 23) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 23) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 23);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 23);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 23) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 23)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 23);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 23) < restock_amt) then begin
                    restock_obj := create_object(23, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 23));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 23) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 23);
                        if ((obj_is_carrying_obj_pid(self_obj, 23) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 23) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 23);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 23);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 23) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 23)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 23);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := 1;
            if (obj_is_carrying_obj_pid(self_obj, 242) < restock_amt) then begin
                if (80 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 242) < restock_amt) then begin
                        restock_obj := create_object(242, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 242));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 242) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 242);
                            if ((obj_is_carrying_obj_pid(self_obj, 242) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 242) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 242);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 242);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 242) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 242)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 242);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 242) < restock_amt) then begin
                    restock_obj := create_object(242, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 242));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 242) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 242);
                        if ((obj_is_carrying_obj_pid(self_obj, 242) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 242) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 242);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 242);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 242) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 242)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 242);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := 1;
            if (obj_is_carrying_obj_pid(self_obj, 11) < restock_amt) then begin
                if (90 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 11) < restock_amt) then begin
                        restock_obj := create_object(11, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 11));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 11) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 11);
                            if ((obj_is_carrying_obj_pid(self_obj, 11) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 11) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 11);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 11);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 11) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 11)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 11);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 11) < restock_amt) then begin
                    restock_obj := create_object(11, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 11));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 11) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 11);
                        if ((obj_is_carrying_obj_pid(self_obj, 11) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 11) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 11);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 11);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 11) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 11)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 11);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(1, 2);
            if (obj_is_carrying_obj_pid(self_obj, 4) < restock_amt) then begin
                if (90 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 4) < restock_amt) then begin
                        restock_obj := create_object(4, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 4));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 4) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 4);
                            if ((obj_is_carrying_obj_pid(self_obj, 4) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 4) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 4);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 4);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 4) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 4)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 4);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 4) < restock_amt) then begin
                    restock_obj := create_object(4, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 4));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 4) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 4);
                        if ((obj_is_carrying_obj_pid(self_obj, 4) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 4) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 4);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 4);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 4) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 4)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 4);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := 1;
            if (obj_is_carrying_obj_pid(self_obj, 235) < restock_amt) then begin
                if (80 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 235) < restock_amt) then begin
                        restock_obj := create_object(235, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 235));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 235) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 235);
                            if ((obj_is_carrying_obj_pid(self_obj, 235) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 235) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 235);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 235);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 235) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 235)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 235);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 235) < restock_amt) then begin
                    restock_obj := create_object(235, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 235));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 235) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 235);
                        if ((obj_is_carrying_obj_pid(self_obj, 235) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 235) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 235);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 235);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 235) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 235)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 235);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := 1;
            if (obj_is_carrying_obj_pid(self_obj, 234) < restock_amt) then begin
                if (80 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 234) < restock_amt) then begin
                        restock_obj := create_object(234, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 234));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 234) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 234);
                            if ((obj_is_carrying_obj_pid(self_obj, 234) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 234) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 234);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 234);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 234) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 234)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 234);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 234) < restock_amt) then begin
                    restock_obj := create_object(234, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 234));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 234) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 234);
                        if ((obj_is_carrying_obj_pid(self_obj, 234) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 234) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 234);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 234);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 234) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 234)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 234);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := 1;
            if (obj_is_carrying_obj_pid(self_obj, 20) < restock_amt) then begin
                if (80 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 20) < restock_amt) then begin
                        restock_obj := create_object(20, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 20));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 20) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 20);
                            if ((obj_is_carrying_obj_pid(self_obj, 20) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 20) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 20);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 20);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 20) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 20)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 20);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 20) < restock_amt) then begin
                    restock_obj := create_object(20, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 20));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 20) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 20);
                        if ((obj_is_carrying_obj_pid(self_obj, 20) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 20) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 20);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 20);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 20) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 20)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 20);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(4, 7);
            if (obj_is_carrying_obj_pid(self_obj, 25) < restock_amt) then begin
                if (90 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 25) < restock_amt) then begin
                        restock_obj := create_object(25, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 25));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 25) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 25);
                            if ((obj_is_carrying_obj_pid(self_obj, 25) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 25) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 25);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 25);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 25) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 25)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 25);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 25) < restock_amt) then begin
                    restock_obj := create_object(25, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 25));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 25) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 25);
                        if ((obj_is_carrying_obj_pid(self_obj, 25) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 25) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 25);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 25);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 25) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 25)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 25);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := 1;
            if (obj_is_carrying_obj_pid(self_obj, 588) < restock_amt) then begin
                if (90 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 588) < restock_amt) then begin
                        restock_obj := create_object(588, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 588));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 588) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 588);
                            if ((obj_is_carrying_obj_pid(self_obj, 588) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 588) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 588);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 588);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 588) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 588)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 588);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 588) < restock_amt) then begin
                    restock_obj := create_object(588, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 588));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 588) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 588);
                        if ((obj_is_carrying_obj_pid(self_obj, 588) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 588) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 588);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 588);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 588) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 588)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 588);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := 1;
            if (obj_is_carrying_obj_pid(self_obj, 595) < restock_amt) then begin
                if (100 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 595) < restock_amt) then begin
                        restock_obj := create_object(595, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 595));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 595) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 595);
                            if ((obj_is_carrying_obj_pid(self_obj, 595) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 595) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 595);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 595);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 595) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 595)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 595);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 595) < restock_amt) then begin
                    restock_obj := create_object(595, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 595));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 595) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 595);
                        if ((obj_is_carrying_obj_pid(self_obj, 595) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 595) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 595);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 595);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 595) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 595)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 595);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(2, 5);
            if (obj_is_carrying_obj_pid(self_obj, 600) < restock_amt) then begin
                if (50 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 600) < restock_amt) then begin
                        restock_obj := create_object(600, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 600));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 600) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 600);
                            if ((obj_is_carrying_obj_pid(self_obj, 600) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 600) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 600);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 600);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 600) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 600)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 600);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 600) < restock_amt) then begin
                    restock_obj := create_object(600, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 600));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 600) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 600);
                        if ((obj_is_carrying_obj_pid(self_obj, 600) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 600) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 600);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 600);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 600) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 600)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 600);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(1, 2);
            if (obj_is_carrying_obj_pid(self_obj, 38) < restock_amt) then begin
                if (90 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 38) < restock_amt) then begin
                        restock_obj := create_object(38, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 38));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 38) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 38);
                            if ((obj_is_carrying_obj_pid(self_obj, 38) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 38) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 38);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 38);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 38) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 38)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 38);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 38) < restock_amt) then begin
                    restock_obj := create_object(38, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 38));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 38) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 38);
                        if ((obj_is_carrying_obj_pid(self_obj, 38) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 38) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 38);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 38);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 38) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 38)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 38);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(1, 3);
            if (obj_is_carrying_obj_pid(self_obj, 32) < restock_amt) then begin
                if (90 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 32) < restock_amt) then begin
                        restock_obj := create_object(32, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 32));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 32) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 32);
                            if ((obj_is_carrying_obj_pid(self_obj, 32) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 32) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 32);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 32);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 32) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 32)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 32);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 32) < restock_amt) then begin
                    restock_obj := create_object(32, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 32));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 32) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 32);
                        if ((obj_is_carrying_obj_pid(self_obj, 32) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 32) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 32);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 32);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 32) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 32)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 32);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(2, 4);
            if (obj_is_carrying_obj_pid(self_obj, 35) < restock_amt) then begin
                if (90 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 35) < restock_amt) then begin
                        restock_obj := create_object(35, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 35));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 35) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 35);
                            if ((obj_is_carrying_obj_pid(self_obj, 35) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 35) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 35);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 35);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 35) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 35)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 35);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 35) < restock_amt) then begin
                    restock_obj := create_object(35, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 35));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 35) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 35);
                        if ((obj_is_carrying_obj_pid(self_obj, 35) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 35) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 35);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 35);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 35) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 35)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 35);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(1, 2);
            if (obj_is_carrying_obj_pid(self_obj, 36) < restock_amt) then begin
                if (90 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 36) < restock_amt) then begin
                        restock_obj := create_object(36, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 36));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 36) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 36);
                            if ((obj_is_carrying_obj_pid(self_obj, 36) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 36) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 36);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 36);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 36) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 36)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 36);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 36) < restock_amt) then begin
                    restock_obj := create_object(36, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 36));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 36) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 36);
                        if ((obj_is_carrying_obj_pid(self_obj, 36) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 36) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 36);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 36);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 36) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 36)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 36);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(2, 4);
            if (obj_is_carrying_obj_pid(self_obj, 95) < restock_amt) then begin
                if (95 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 95) < restock_amt) then begin
                        restock_obj := create_object(95, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 95));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 95) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 95);
                            if ((obj_is_carrying_obj_pid(self_obj, 95) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 95) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 95);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 95);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 95) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 95)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 95);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 95) < restock_amt) then begin
                    restock_obj := create_object(95, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 95));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 95) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 95);
                        if ((obj_is_carrying_obj_pid(self_obj, 95) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 95) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 95);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 95);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 95) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 95)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 95);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(2, 4);
            if (obj_is_carrying_obj_pid(self_obj, 31) < restock_amt) then begin
                if (90 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 31) < restock_amt) then begin
                        restock_obj := create_object(31, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 31));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 31) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 31);
                            if ((obj_is_carrying_obj_pid(self_obj, 31) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 31) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 31);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 31);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 31) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 31)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 31);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 31) < restock_amt) then begin
                    restock_obj := create_object(31, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 31));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 31) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 31);
                        if ((obj_is_carrying_obj_pid(self_obj, 31) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 31) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 31);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 31);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 31) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 31)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 31);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(2, 5);
            if (obj_is_carrying_obj_pid(self_obj, 363) < restock_amt) then begin
                if (95 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 363) < restock_amt) then begin
                        restock_obj := create_object(363, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 363));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 363) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 363);
                            if ((obj_is_carrying_obj_pid(self_obj, 363) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 363) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 363);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 363);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 363) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 363)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 363);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 363) < restock_amt) then begin
                    restock_obj := create_object(363, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 363));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 363) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 363);
                        if ((obj_is_carrying_obj_pid(self_obj, 363) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 363) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 363);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 363);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 363) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 363)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 363);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(1, 4);
            if (obj_is_carrying_obj_pid(self_obj, 111) < restock_amt) then begin
                if (90 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 111) < restock_amt) then begin
                        restock_obj := create_object(111, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 111));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 111) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 111);
                            if ((obj_is_carrying_obj_pid(self_obj, 111) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 111) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 111);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 111);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 111) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 111)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 111);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 111) < restock_amt) then begin
                    restock_obj := create_object(111, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 111));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 111) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 111);
                        if ((obj_is_carrying_obj_pid(self_obj, 111) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 111) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 111);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 111);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 111) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 111)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 111);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(2, 3);
            if (obj_is_carrying_obj_pid(self_obj, 14) < restock_amt) then begin
                if (70 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 14) < restock_amt) then begin
                        restock_obj := create_object(14, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 14));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 14) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 14);
                            if ((obj_is_carrying_obj_pid(self_obj, 14) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 14) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 14);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 14);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 14) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 14)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 14);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 14) < restock_amt) then begin
                    restock_obj := create_object(14, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 14));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 14) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 14);
                        if ((obj_is_carrying_obj_pid(self_obj, 14) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 14) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 14);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 14);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 14) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 14)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 14);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(1, 3);
            if (obj_is_carrying_obj_pid(self_obj, 589) < restock_amt) then begin
                if (90 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 589) < restock_amt) then begin
                        restock_obj := create_object(589, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 589));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 589) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 589);
                            if ((obj_is_carrying_obj_pid(self_obj, 589) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 589) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 589);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 589);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 589) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 589)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 589);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 589) < restock_amt) then begin
                    restock_obj := create_object(589, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 589));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 589) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 589);
                        if ((obj_is_carrying_obj_pid(self_obj, 589) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 589) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 589);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 589);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 589) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 589)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 589);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := 1;
            if (obj_is_carrying_obj_pid(self_obj, 590) < restock_amt) then begin
                if (60 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 590) < restock_amt) then begin
                        restock_obj := create_object(590, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 590));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 590) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 590);
                            if ((obj_is_carrying_obj_pid(self_obj, 590) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 590) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 590);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 590);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 590) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 590)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 590);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 590) < restock_amt) then begin
                    restock_obj := create_object(590, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 590));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 590) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 590);
                        if ((obj_is_carrying_obj_pid(self_obj, 590) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 590) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 590);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 590);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 590) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 590)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 590);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            restock_amt := random(1, 3);
            if (obj_is_carrying_obj_pid(self_obj, 22) < restock_amt) then begin
                if (100 >= random(1, 100)) then begin
                    if (obj_is_carrying_obj_pid(self_obj, 22) < restock_amt) then begin
                        restock_obj := create_object(22, 0, 0);
                        add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 22));
                    end
                    else begin
                        if (obj_is_carrying_obj_pid(self_obj, 22) > restock_amt) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 22);
                            if ((obj_is_carrying_obj_pid(self_obj, 22) - restock_amt) < removed_qty) then begin
                                removed_qty := obj_is_carrying_obj_pid(self_obj, 22) - restock_amt;
                            end
                            if (removed_qty > 0) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 22);
                                if (obj_type(self_obj) == 1) then begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 22);
                                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                            debug_msg("armour pid == " + obj_pid(restock_obj));
                                            rm_obj_from_inven(self_obj, restock_obj);
                                            add_obj_to_inven(self_obj, restock_obj);
                                        end
                                    end
                                    else begin
                                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                            inven_unwield(self_obj);
                                        end
                                    end
                                end
                                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                                if (restock_amt == 0) then begin
                                    toRemove_qty := obj_is_carrying_obj_pid(self_obj, 22) - restock_amt;
                                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 22)) do begin
                                        restock_obj := obj_carrying_pid_obj(self_obj, 22);
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        destroy_object(restock_obj);
                                        toRemove_qty := toRemove_qty - 1;
                                    end
                                end
                                else begin
                                    destroy_object(restock_obj);
                                end
                            end
                            restock_obj := 0;
                            restock_amt := 0;
                        end
                        else begin
                            restock_obj := 0;
                        end
                    end
                end
            end
            else begin
                if (obj_is_carrying_obj_pid(self_obj, 22) < restock_amt) then begin
                    restock_obj := create_object(22, 0, 0);
                    add_mult_objs_to_inven(self_obj, restock_obj, restock_amt - obj_is_carrying_obj_pid(self_obj, 22));
                end
                else begin
                    if (obj_is_carrying_obj_pid(self_obj, 22) > restock_amt) then begin
                        removed_qty := obj_is_carrying_obj_pid(self_obj, 22);
                        if ((obj_is_carrying_obj_pid(self_obj, 22) - restock_amt) < removed_qty) then begin
                            removed_qty := obj_is_carrying_obj_pid(self_obj, 22) - restock_amt;
                        end
                        if (removed_qty > 0) then begin
                            restock_obj := obj_carrying_pid_obj(self_obj, 22);
                            if (obj_type(self_obj) == 1) then begin
                                restock_obj := obj_carrying_pid_obj(self_obj, 22);
                                if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                                    if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                                        restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                                        debug_msg("armour pid == " + obj_pid(restock_obj));
                                        rm_obj_from_inven(self_obj, restock_obj);
                                        add_obj_to_inven(self_obj, restock_obj);
                                    end
                                end
                                else begin
                                    if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                                        inven_unwield(self_obj);
                                    end
                                end
                            end
                            restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                            if (restock_amt == 0) then begin
                                toRemove_qty := obj_is_carrying_obj_pid(self_obj, 22) - restock_amt;
                                while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, 22)) do begin
                                    restock_obj := obj_carrying_pid_obj(self_obj, 22);
                                    rm_obj_from_inven(self_obj, restock_obj);
                                    destroy_object(restock_obj);
                                    toRemove_qty := toRemove_qty - 1;
                                end
                            end
                            else begin
                                destroy_object(restock_obj);
                            end
                        end
                        restock_obj := 0;
                        restock_amt := 0;
                    end
                    else begin
                        restock_obj := 0;
                    end
                end
            end
            set_local_var(4, (random(7, 14) * (24 * (60 * (60 * 10)))) + game_time);
            if ((game_time < 0) and (local_var(4) > 0)) then begin
                set_local_var(4, 0);
            end
        end
    end
end

procedure map_update_p_proc
begin
end

procedure timed_event_p_proc
begin
end
