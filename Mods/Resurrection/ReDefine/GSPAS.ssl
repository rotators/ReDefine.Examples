variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure timed_event_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure combat_p_proc;
procedure Node997;
procedure Node998;
procedure Node999_BAD_END;
procedure Node999_SILENT_AUTODESTRUCTION;
procedure Node500;
procedure Node550;
procedure Node600;
procedure Node650;
procedure Node700;
procedure Node750;
procedure Node800;
procedure Node850;
procedure Node900;
procedure Node950;
procedure Node1000;
procedure Node1050;
procedure Node1100;
procedure Node1150;
procedure Node1200;
procedure Node1250;
procedure Node1300;
procedure Node1350;
procedure Node1400;
procedure Node1450;
procedure Node1500;
procedure Node1550;
procedure Node1600;
procedure Node1650;
procedure Node1700;
procedure Node1750;
procedure Node1800;
procedure Node1850;
procedure Node1900;
procedure Node2050;
procedure Node2100;
procedure Node2150;
procedure Node2200;
procedure Node2250;
procedure Node2300;
procedure Node2350;
procedure Node2400;
procedure Node2450;
procedure Node2500;
procedure Node2550;
procedure Node2600;
procedure Node2650;
procedure Node2660;
procedure Node2700;
procedure Node2750;
procedure Node2800;
procedure Node2850;
procedure Node2900;
procedure Node2950;
procedure Node3000;
procedure Node3050;
procedure Node3100;
procedure Node3150;
procedure Node3200;
procedure Node3250;
procedure Node3300;
procedure Node3350;
procedure Node3400;
procedure Node3450;
procedure Node3500;
procedure Node3550;
procedure Node3600;
procedure Node3650;
procedure Node3700;
procedure Node3750;
procedure Node3800;
procedure Node3850;
procedure Node3900;
procedure Node3950;
procedure Node4000;
procedure Node4150;
procedure Node4200;
procedure Node4250;
procedure Node4300;
procedure Node4350;
procedure Node4400;
procedure Node4450;
procedure Node4500;
procedure Node4550;
procedure Node4600;
procedure Node4650;
procedure Node4700;
procedure Node4750;
procedure Node4800;
procedure Node4850;
procedure Node4900;
procedure Node4950;
procedure Node5000;
procedure Node5050;
procedure Node5100;
procedure Node5150;
procedure Node5200;
procedure Node5250;
procedure Node5300;
procedure Node5350;
procedure Node5400;
procedure Node5450;
procedure Node5500;
procedure Node5550;
procedure Node5600;
procedure Node5650;
procedure Node5700;
procedure Node5750;
procedure Node5800;
procedure Node5850;
procedure Node5900;
procedure Node5950;
procedure Node6000;
procedure Node6050;
procedure Node6100;
procedure Node6150;
procedure Node6200;
procedure Node6250;
procedure Node6300;
procedure Node6350;
procedure Node6400;
procedure Node6550;
procedure Node6600;
procedure Node6650;
procedure Node6700;
procedure Node6750;
procedure Node6800;
procedure Node6850;
procedure Node6900;
procedure Node6950;
procedure Node7000;
procedure Node7050;
procedure Node7100;
procedure Node7150;
procedure Node7160;
procedure Node7200;
procedure Node7250;
procedure Node7300;
procedure Node7350;
procedure Node7400;
procedure Node7450;
procedure Node7500;
procedure Node7550;
procedure Node7600;
procedure Node7650;
procedure Node7700;
procedure Node7750;
procedure Node7800;
procedure Node7850;
procedure Node7900;
procedure Node7950;
procedure Node8000;
procedure Node8050;
procedure Node8100;
procedure Node8250;
procedure Node8300;
procedure Node8350;
procedure Node8400;
procedure Node8450;
procedure Node8500;
procedure Node8550;
procedure Node8600;
procedure Node8650;
procedure Node8700;
procedure Node8750;
procedure Node8800;
procedure Node8850;
procedure Node8900;
procedure Node8950;
procedure Node9000;
procedure Node9050;
procedure odstraneni_zbrani;

import variable ghoul46_map;

variable probability;
variable probability2;
variable Projed_smycku;
variable human_party_number;
variable new_emporer;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if (local_var(4) == 1) then begin
        if ((tile_distance(tile_num(self_obj), dude_tile) < 9) and (dude_elevation == elevation(self_obj)) or obj_can_see_obj(self_obj, dude_obj)) then begin
            if (critter_is_fleeing(self_obj)) then begin
                if (anim_busy(self_obj) == 0) then begin
                    if ((tile_distance_objs(self_obj, dude_obj) < 8) or obj_can_see_obj(self_obj, dude_obj)) then begin
                        if (anim_busy(self_obj) == 0) then begin
                            global_temp := rotation_to_tile(dude_tile, tile_num(self_obj));
                            animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                            global_temp := (global_temp + 1) % 6;
                            while ((anim_busy(self_obj) == 0) and (global_temp != rotation_to_tile(dude_tile, tile_num(self_obj)))) do begin
                                debug_msg("flee loop: rot == " + global_temp);
                                animate_move_obj_to_tile(self_obj, tile_num_in_direction(tile_num(self_obj), global_temp, random(3, 10)), 1);
                                global_temp := (global_temp + 1) % 6;
                            end
                        end
                    end
                end
            end
            else begin
                attack(dude_obj);
            end
        end
    end
    if ((global_var(GVAR_G_DUDE_ENTER_TO_SPAS) <= 1) and (local_var(8) == 0) and not(combat_is_initialized)) then begin
        if (obj_can_see_obj(self_obj, dude_obj) or ((tile_distance(tile_num(self_obj), dude_tile) < 9) and (dude_elevation == elevation(self_obj)))) then begin
            if (using_skill(dude_obj, 8) and (global_var(GVAR_G_BASE_DESTROYED) != 3)) then begin
                if ((dude_skill(SKILL_SNEAK) < (150 - (tile_distance_objs(self_obj, dude_obj) * 10))) or (tile_distance_objs(self_obj, dude_obj) <= 1)) then begin
                    dialogue_system_enter;
                end
            end
            else begin
                dialogue_system_enter;
            end
        end
    end
    if ((local_var(8) == 0) and (dude_tile == 24117) and (dude_elevation == elevation(self_obj)) and (global_var(GVAR_G_DUDE_ENTER_TO_SPAS) >= 2)) then begin
        set_local_var(8, 1);
        tile_set_center(tile_num(self_obj));
        fade_in;
        add_timer_event(self_obj, 20, 3);
    end
    if ((local_var(9) == 1) and (tile_num(self_obj) == 22517)) then begin
        set_local_var(9, 2);
        reg_anim_func(2, self_obj);
        reg_anim_func(1, 1);
        reg_anim_animate(self_obj, 11, -1);
        reg_anim_func(3, 0);
        add_timer_event(self_obj, 15, 1);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_ENEMY_OBRODA, 1);
        set_local_var(4, 1);
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        display_mstr(350);
        anim(self_obj, 1000, 2);
        if (global_var(GVAR_G_BASE_DESTROYED) == 0) then begin
            set_global_var(GVAR_G_BASE_DESTROYED, 4);
            critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_PEASANT_NO_MOVE);
            add_timer_event(ghoul46_map, 10, 12);
            call odstraneni_zbrani();
        end
        game_ui_enable;
    end
    if (fixed_param == 2) then begin
        game_ui_enable;
        gfade_out(600);
        if ((global_var(GVAR_AQ_EMPEROR_STATUS) == 1) or (global_var(GVAR_AQ_EMPEROR_STATUS) == 2)) then begin
            new_emporer := 1;
        end
        if (((global_var(GVAR_AQ_ALBUQ_DEATHS) bwand 1) == 0) and (new_emporer == 0)) then begin
            set_global_var(GVAR_END_ALBU_CITY, 12);
        end
        if (((global_var(GVAR_AQ_ALBUQ_DEATHS) bwand 1) == 0) and (new_emporer == 1)) then begin
            set_global_var(GVAR_END_ALBU_CITY, 11);
        end
        if (((global_var(GVAR_AQ_ALBUQ_DEATHS) bwand 1) != 0) and (new_emporer == 0)) then begin
            set_global_var(GVAR_END_ALBU_CITY, 13);
        end
        if (((global_var(GVAR_AQ_ALBUQ_DEATHS) bwand 1) != 0) and (new_emporer == 1)) then begin
            set_global_var(GVAR_END_ALBU_CITY, 14);
        end
        set_global_var(GVAR_G_QUEST_FREE_PRISONERS_FIGHT, 0);
        set_global_var(GVAR_G_QUEST_FREE_PRISONERS_SNEAK, 0);
        give_exp_points(20000);
        display_msg(g_mstr(100) + 20000 + g_mstr(101));
        if (dude_gender == 0) then begin
            set_global_var(GVAR_END_PLAYER, 3);
        end
        else begin
            set_global_var(GVAR_END_PLAYER, 4);
        end
        play_gmovie(9);
        endgame_slideshow;
        add_timer_event(self_obj, 0, 4);
    end
    if (fixed_param == 4) then begin
        signal_end_game;
    end
    if (fixed_param == 3) then begin
        game_ui_enable;
        dialogue_system_enter;
    end
end

procedure talk_p_proc
begin
    if ((local_var(6) bwand 128) != 0) then begin
        script_overrides;
        display_mstr(301);
    end
    else begin
        if (local_var(5) == 0) then begin
            anim(dude_obj, 1000, rotation_to_tile(dude_tile, tile_num(self_obj)));
            anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
            if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
                anim(party_member_obj(16777779), 1000, rotation_to_tile(tile_num(party_member_obj(16777779)), tile_num(self_obj)));
            end
            if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
                anim(party_member_obj(16777811), 1000, rotation_to_tile(tile_num(party_member_obj(16777811)), tile_num(self_obj)));
            end
            if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
                anim(party_member_obj(16777814), 1000, rotation_to_tile(tile_num(party_member_obj(16777814)), tile_num(self_obj)));
            end
            if (party_member_obj(16777729) != 0) then begin
                anim(party_member_obj(16777729), 1000, rotation_to_tile(tile_num(party_member_obj(16777729)), tile_num(self_obj)));
            end
            if (party_member_obj(16777812) != 0) then begin
                anim(party_member_obj(16777812), 1000, rotation_to_tile(tile_num(party_member_obj(16777812)), tile_num(self_obj)));
            end
            give_exp_points(500);
            display_msg(g_mstr(100) + 500 + g_mstr(101));
            start_gdialog(469, self_obj, 4, -1, -1);
            gsay_start;
            set_local_var(8, 1);
            if ((global_var(GVAR_G_BASE_DESTROYED) == 1) or (global_var(GVAR_G_BASE_DESTROYED) == 2) and (Projed_smycku == 0) and ((obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 3) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 113))) then begin
                if (dude_gender == 0) then begin
                    call Node4450();
                end
                if (dude_gender == 1) then begin
                    call Node8550();
                end
                Projed_smycku := 1;
            end
            if ((global_var(GVAR_G_BASE_DESTROYED) == 1) or (global_var(GVAR_G_BASE_DESTROYED) == 2) and (Projed_smycku == 0)) then begin
                if (dude_gender == 0) then begin
                    call Node4400();
                end
                if (dude_gender == 1) then begin
                    call Node8500();
                end
                Projed_smycku := 1;
            end
            if ((global_var(GVAR_G_BASE_DESTROYED) == 3) or (global_var(GVAR_G_BASE_DESTROYED) == 4) and ((obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 3) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 113))) then begin
                if (dude_gender == 0) then begin
                    call Node4500();
                end
                if (dude_gender == 1) then begin
                    call Node8600();
                end
                Projed_smycku := 1;
            end
            if ((global_var(GVAR_G_BASE_DESTROYED) == 3) or (global_var(GVAR_G_BASE_DESTROYED) == 4) and (Projed_smycku == 0)) then begin
                if (dude_gender == 0) then begin
                    call Node4550();
                end
                if (dude_gender == 1) then begin
                    call Node8650();
                end
                Projed_smycku := 1;
            end
            if ((global_var(GVAR_G_HUNTERS_COUNTER) != 0) and (Projed_smycku == 0)) then begin
                if (dude_gender == 0) then begin
                    call Node4350();
                end
                if (dude_gender == 1) then begin
                    call Node8450();
                end
                Projed_smycku := 1;
            end
            if ((global_var(GVAR_G_DUDE_ENTER_TO_SPAS) == 1) and (Projed_smycku == 0)) then begin
                if (dude_gender == 0) then begin
                    call Node4250();
                end
                if (dude_gender == 1) then begin
                    call Node8350();
                end
                Projed_smycku := 1;
            end
            if ((global_var(GVAR_G_DUDE_ENTER_TO_SPAS) == 3) and (Projed_smycku == 0)) then begin
                if (dude_gender == 0) then begin
                    call Node4250();
                end
                if (dude_gender == 1) then begin
                    call Node8350();
                end
                Projed_smycku := 1;
            end
            if ((global_var(GVAR_G_DUDE_ENTER_TO_SPAS) == 2) and (Projed_smycku == 0)) then begin
                if (dude_gender == 0) then begin
                    call Node4300();
                end
                if (dude_gender == 1) then begin
                    call Node8400();
                end
                Projed_smycku := 1;
            end
            if ((Projed_smycku == 0) and ((obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 3) or (obj_pid(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 113))) then begin
                if (dude_gender == 0) then begin
                    call Node500();
                end
                if (dude_gender == 1) then begin
                    call Node5000();
                end
                Projed_smycku := 1;
            end
            if (Projed_smycku == 0) then begin
                if (dude_gender == 0) then begin
                    call Node4200();
                end
                if (dude_gender == 1) then begin
                    call Node8300();
                end
                Projed_smycku := 1;
            end
            Projed_smycku := 0;
            gsay_end;
            end_dialogue;
            set_local_var(5, 1);
        end
        else begin
            if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0) or ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) or ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) or (global_var(GVAR_G_PARTY_LEFT_COUNTER) != 0)) then begin
                float_msg(self_obj, mstr(351 + (dude_gender == 1)), FLOAT_MSG_YELLOW);
            end
            else begin
                anim(dude_obj, 1000, rotation_to_tile(dude_tile, tile_num(self_obj)));
                anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
                if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
                    anim(party_member_obj(16777779), 1000, rotation_to_tile(tile_num(party_member_obj(16777779)), tile_num(self_obj)));
                end
                if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
                    anim(party_member_obj(16777811), 1000, rotation_to_tile(tile_num(party_member_obj(16777811)), tile_num(self_obj)));
                end
                if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
                    anim(party_member_obj(16777814), 1000, rotation_to_tile(tile_num(party_member_obj(16777814)), tile_num(self_obj)));
                end
                if (party_member_obj(16777729) != 0) then begin
                    anim(party_member_obj(16777729), 1000, rotation_to_tile(tile_num(party_member_obj(16777729)), tile_num(self_obj)));
                end
                if (party_member_obj(16777812) != 0) then begin
                    anim(party_member_obj(16777812), 1000, rotation_to_tile(tile_num(party_member_obj(16777812)), tile_num(self_obj)));
                end
                start_gdialog(469, self_obj, 4, -1, -1);
                gsay_start;
                if (dude_gender == 0) then begin
                    call Node4150();
                end
                if (dude_gender == 1) then begin
                    call Node8250();
                end
                gsay_end;
                end_dialogue;
            end
        end
    end
    set_global_var(GVAR_G_TALKED_WITH_SPASITEL, 2);
end

procedure destroy_p_proc
begin
    add_mult_objs_to_inven(self_obj, create_object_sid(582, 0, 0, SCRIPT_GSPASHD), 1);
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_BAD_MONSTER, global_var(GVAR_BAD_MONSTER) + 1);
        if (critter_kill_type(self_obj) == KILL_TYPE_children_kills) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 5);
        debug_msg("Player gains " + 5 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    if ((local_var(6) bwand 256) != 0) then begin
        set_global_var(GVAR_PTR_KERI_REACTIONS, global_var(GVAR_PTR_KERI_REACTIONS) bwor 16777216);
    end
    if ((local_var(6) bwand 512) != 0) then begin
        set_global_var(GVAR_PTR_GABRIEL_REACTIONS, global_var(GVAR_PTR_GABRIEL_REACTIONS) bwor 536870912);
    end
    if ((local_var(6) bwand 1024) != 0) then begin
        set_global_var(GVAR_PTR_LYSTRA_REACTIONS_2, global_var(GVAR_PTR_LYSTRA_REACTIONS_2) bwor 32768);
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(5) == 1) then begin
        display_mstr(150);
    end
    else begin
        display_mstr(100);
    end
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(5) == 1) then begin
        if (((local_var(6) bwand 64) != 0) and not((local_var(6) bwand 128) != 0)) then begin
            display_mstr(251);
        end
        else begin
            if ((local_var(6) bwand 128) != 0) then begin
                display_mstr(252);
            end
            else begin
                display_mstr(250);
            end
        end
    end
    else begin
        display_mstr(200);
    end
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_ENEMY_OBRODA, 1);
        set_local_var(4, 1);
        if (probability != 11) then begin
            probability := random(0, 10);
        end
        if ((probability >= 9) and not(critter_is_fleeing(self_obj))) then begin
            float_msg(self_obj, mstr(412), FLOAT_MSG_RED);
            probability := 11;
        end
    end
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 280);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_TOUGH_GUARD_NO_TALKING);
end

procedure combat_p_proc
begin
    if (fixed_param == 4) then begin
        if ((local_var(4) == 1) and not((local_var(6) bwand 128) != 0)) then begin
            if ((get_critter_stat(self_obj, STAT_current_hp) <= (get_critter_stat(self_obj, STAT_max_hp) / 10)) and (get_critter_stat(self_obj, STAT_current_hp) > 0) and (local_var(10) == 0)) then begin
                set_local_var(10, 1);
                float_msg(self_obj, mstr(300), FLOAT_MSG_RED);
            end
            else begin
                probability := random(0, 10);
                if ((probability >= 6) and not(critter_is_fleeing(self_obj))) then begin
                    probability2 := random(0, 10);
                    if (dude_gender == 0) then begin
                        if (not((local_var(6) bwand 64) != 0)) then begin
                            float_msg(self_obj, mstr(random(400, 407)), FLOAT_MSG_RED);
                        end
                        else begin
                            if (probability2 >= 3) then begin
                                float_msg(self_obj, mstr(random(402, 407)), FLOAT_MSG_RED);
                            end
                            else begin
                                float_msg(self_obj, mstr(random(410, 411)), FLOAT_MSG_RED);
                            end
                        end
                    end
                    else begin
                        if (not((local_var(6) bwand 64) != 0)) then begin
                            float_msg(self_obj, mstr(random(402, 409)), FLOAT_MSG_RED);
                        end
                        else begin
                            if (probability2 >= 3) then begin
                                float_msg(self_obj, mstr(random(402, 407)), FLOAT_MSG_RED);
                            end
                            else begin
                                float_msg(self_obj, mstr(random(410, 411)), FLOAT_MSG_RED);
                            end
                        end
                    end
                end
            end
        end
    end
end

procedure Node997
begin
    anim(self_obj, 1000, 2);
    set_local_var(7, 1);
    set_global_var(GVAR_G_PARTY_LEFT_COUNTER, 0);
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        add_timer_event(party_member_obj(16777779), 1, 19);
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        add_timer_event(party_member_obj(16777811), 1, 31);
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        add_timer_event(party_member_obj(16777814), 1, 34);
    end
    set_global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS, global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwor 512);
end

procedure Node998
begin
    set_local_var(4, 1);
    set_global_var(GVAR_ENEMY_OBRODA, 1);
end

procedure Node999_BAD_END
begin
    game_ui_disable;
    add_timer_event(self_obj, 10, 2);
end

procedure Node999_SILENT_AUTODESTRUCTION
begin
    game_ui_disable;
    set_local_var(9, 1);
    animate_move_obj_to_tile(self_obj, 22517, 0);
    if ((local_var(6) bwand 256) != 0) then begin
        set_global_var(GVAR_PTR_KERI_REACTIONS, global_var(GVAR_PTR_KERI_REACTIONS) bwor 16777216);
    end
    if ((local_var(6) bwand 512) != 0) then begin
        set_global_var(GVAR_PTR_GABRIEL_REACTIONS, global_var(GVAR_PTR_GABRIEL_REACTIONS) bwor 536870912);
    end
    if ((local_var(6) bwand 1024) != 0) then begin
        set_global_var(GVAR_PTR_LYSTRA_REACTIONS_2, global_var(GVAR_PTR_LYSTRA_REACTIONS_2) bwor 32768);
    end
end

procedure Node500
begin
    Reply(500);
    giq_option(4, NAME, 501, Node550, NEUTRAL_REACTION);
    giq_option(-3, NAME, 502, Node4600, NEUTRAL_REACTION);
end

procedure Node550
begin
    Reply(550);
    giq_option(4, NAME, 551, Node600, NEUTRAL_REACTION);
    if ((local_var(6) bwand 4) == 0) then begin
        if (global_var(GVAR_AQ_MUTANT_HUNTER) != 0) then begin
            giq_option(4, NAME, 552, Node1150, NEUTRAL_REACTION);
        end
        else begin
            giq_option(4, NAME, 552, Node1100, NEUTRAL_REACTION);
        end
    end
    if ((local_var(6) bwand 8) == 0) then begin
        giq_option(4, NAME, 553, Node1200, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 554, Node1400, NEUTRAL_REACTION);
end

procedure Node600
begin
    Reply(600);
    giq_option(4, NAME, 601, Node998, NEUTRAL_REACTION);
    if ((local_var(6) bwand 1) == 0) then begin
        giq_option(4, NAME, 602, Node650, NEUTRAL_REACTION);
    end
    if ((local_var(6) bwand 2) == 0) then begin
        giq_option(4, NAME, 603, Node750, NEUTRAL_REACTION);
    end
end

procedure Node650
begin
    Reply(650);
    set_local_var(6, local_var(6) bwor 1);
    giq_option(4, NAME, 651, Node700, NEUTRAL_REACTION);
end

procedure Node700
begin
    Reply(700);
    if ((local_var(6) bwand 4) == 0) then begin
        if (global_var(GVAR_AQ_MUTANT_HUNTER) != 0) then begin
            giq_option(4, NAME, 701, Node1150, NEUTRAL_REACTION);
        end
        else begin
            giq_option(4, NAME, 701, Node1100, NEUTRAL_REACTION);
        end
    end
    if ((local_var(6) bwand 2) == 0) then begin
        giq_option(4, NAME, 702, Node750, NEUTRAL_REACTION);
    end
    if ((local_var(6) bwand 8) == 0) then begin
        giq_option(4, NAME, 703, Node1200, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 704, Node1400, NEUTRAL_REACTION);
end

procedure Node750
begin
    Reply(750);
    set_local_var(6, local_var(6) bwor 2);
    if (global_var(GVAR_MC_SPEAKED_WITH_THOMAS) == 1) then begin
        giq_option(4, NAME, 751, Node800, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 752, Node800, NEUTRAL_REACTION);
    end
end

procedure Node800
begin
    Reply(800);
    giq_option(4, NAME, 801, Node850, NEUTRAL_REACTION);
    if (global_var(GVAR_MC_SPEAKED_WITH_THOMAS) == 1) then begin
        giq_option(4, NAME, 802, Node900, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_MC_SPEAKED_WITH_THOMAS) == 0) and (map_var(10) == 1)) then begin
        giq_option(4, NAME, 803, Node950, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_MC_SPEAKED_WITH_THOMAS) == 0) and (map_var(10) == 0)) then begin
        if ((dude_skill(SKILL_SCIENCE) >= 130) and (dude_skill(SKILL_DOCTOR) > 60)) then begin
            giq_option(4, NAME, 804, Node1050, NEUTRAL_REACTION);
        end
        else begin
            giq_option(6, NAME, 805, Node2350, NEUTRAL_REACTION);
            if (dude_iq < 6) then begin
                giq_option(4, NAME, 806, Node1400, NEUTRAL_REACTION);
            end
        end
    end
end

procedure Node850
begin
    Reply(850);
    if (global_var(GVAR_MC_SPEAKED_WITH_THOMAS) == 1) then begin
        giq_option(4, NAME, 851, Node900, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_MC_SPEAKED_WITH_THOMAS) == 0) and (map_var(10) == 1)) then begin
        giq_option(4, NAME, 852, Node950, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_MC_SPEAKED_WITH_THOMAS) == 0) and (map_var(10) == 0)) then begin
        if ((dude_skill(SKILL_SCIENCE) >= 130) and (dude_skill(SKILL_DOCTOR) > 60)) then begin
            giq_option(4, NAME, 853, Node1050, NEUTRAL_REACTION);
        end
        else begin
            giq_option(6, NAME, 854, Node2350, NEUTRAL_REACTION);
            if (dude_iq < 6) then begin
                giq_option(4, NAME, 855, Node1400, NEUTRAL_REACTION);
            end
        end
    end
end

procedure Node900
begin
    Reply(900);
    if (map_var(10) == 1) then begin
        giq_option(4, NAME, 901, Node950, NEUTRAL_REACTION);
    end
    if (map_var(10) == 0) then begin
        if ((dude_skill(SKILL_SCIENCE) >= 130) and (dude_skill(SKILL_DOCTOR) > 60)) then begin
            giq_option(4, NAME, 902, Node1050, NEUTRAL_REACTION);
        end
        else begin
            giq_option(6, NAME, 903, Node2350, NEUTRAL_REACTION);
            if (dude_iq < 6) then begin
                giq_option(4, NAME, 904, Node1400, NEUTRAL_REACTION);
            end
        end
    end
end

procedure Node950
begin
    Reply(950);
    giq_option(4, NAME, 951, Node1000, NEUTRAL_REACTION);
    if ((dude_skill(SKILL_SCIENCE) >= 130) and (dude_skill(SKILL_DOCTOR) > 60)) then begin
        giq_option(4, NAME, 952, Node1050, NEUTRAL_REACTION);
    end
    else begin
        giq_option(6, NAME, 953, Node2350, NEUTRAL_REACTION);
        if (dude_iq < 6) then begin
            giq_option(4, NAME, 954, Node1400, NEUTRAL_REACTION);
        end
    end
end

procedure Node1000
begin
    Reply(1000);
    if ((dude_skill(SKILL_SCIENCE) >= 130) and (dude_skill(SKILL_DOCTOR) > 60)) then begin
        giq_option(4, NAME, 1001, Node1050, NEUTRAL_REACTION);
    end
    else begin
        giq_option(6, NAME, 1002, Node2350, NEUTRAL_REACTION);
        if (dude_iq < 6) then begin
            giq_option(4, NAME, 1003, Node1400, NEUTRAL_REACTION);
        end
    end
end

procedure Node1050
begin
    Reply(1050);
    giq_option(6, NAME, 1051, Node2300, NEUTRAL_REACTION);
    if (map_var(11) == 1) then begin
        giq_option(4, NAME, 1052, Node2350, NEUTRAL_REACTION);
    end
    if (dude_iq < 6) then begin
        giq_option(4, NAME, 1053, Node1400, NEUTRAL_REACTION);
    end
end

procedure Node1100
begin
    Reply(1100);
    set_local_var(6, local_var(6) bwor 4);
    if ((local_var(6) bwand 1) == 0) then begin
        giq_option(4, NAME, 1101, Node650, NEUTRAL_REACTION);
    end
    if ((local_var(6) bwand 2) == 0) then begin
        giq_option(4, NAME, 1102, Node750, NEUTRAL_REACTION);
    end
    if ((local_var(6) bwand 8) == 0) then begin
        giq_option(4, NAME, 1103, Node1200, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 1104, Node1400, NEUTRAL_REACTION);
end

procedure Node1150
begin
    Reply(1150);
    set_local_var(6, local_var(6) bwor 4);
    if ((local_var(6) bwand 1) == 0) then begin
        giq_option(4, NAME, 1151, Node650, NEUTRAL_REACTION);
    end
    if ((local_var(6) bwand 2) == 0) then begin
        giq_option(4, NAME, 1152, Node750, NEUTRAL_REACTION);
    end
    if ((local_var(6) bwand 8) == 0) then begin
        giq_option(4, NAME, 1153, Node1200, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 1154, Node1400, NEUTRAL_REACTION);
end

procedure Node1200
begin
    Reply(1200);
    set_local_var(6, local_var(6) bwor 8);
    if ((local_var(6) bwand 16) == 0) then begin
        giq_option(4, NAME, 1201, Node1250, NEUTRAL_REACTION);
    end
    if ((local_var(6) bwand 32) == 0) then begin
        giq_option(4, NAME, 1202, Node1300, NEUTRAL_REACTION);
    end
    if ((local_var(6) bwand 2) == 0) then begin
        giq_option(4, NAME, 1203, Node750, NEUTRAL_REACTION);
    end
    if ((local_var(6) bwand 1) == 0) then begin
        giq_option(4, NAME, 1204, Node650, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 1205, Node1400, NEUTRAL_REACTION);
end

procedure Node1250
begin
    Reply(1250);
    set_local_var(6, local_var(6) bwor 16);
    if ((local_var(6) bwand 32) == 0) then begin
        giq_option(4, NAME, 1251, Node1300, NEUTRAL_REACTION);
    end
    if ((local_var(6) bwand 2) == 0) then begin
        giq_option(4, NAME, 1252, Node750, NEUTRAL_REACTION);
    end
    if ((local_var(6) bwand 1) == 0) then begin
        giq_option(4, NAME, 1253, Node650, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 1254, Node1400, NEUTRAL_REACTION);
end

procedure Node1300
begin
    Reply(1300);
    set_local_var(6, local_var(6) bwor 32);
    giq_option(4, NAME, 1301, Node1350, NEUTRAL_REACTION);
    if ((local_var(6) bwand 16) == 0) then begin
        giq_option(4, NAME, 1302, Node1250, NEUTRAL_REACTION);
    end
    if ((local_var(6) bwand 2) == 0) then begin
        giq_option(4, NAME, 1303, Node750, NEUTRAL_REACTION);
    end
    if ((local_var(6) bwand 1) == 0) then begin
        giq_option(4, NAME, 1304, Node650, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 1305, Node1400, NEUTRAL_REACTION);
end

procedure Node1350
begin
    Reply(1350);
    if ((local_var(6) bwand 16) == 0) then begin
        giq_option(4, NAME, 1351, Node1250, NEUTRAL_REACTION);
    end
    if ((local_var(6) bwand 2) == 0) then begin
        giq_option(4, NAME, 1352, Node750, NEUTRAL_REACTION);
    end
    if ((local_var(6) bwand 1) == 0) then begin
        giq_option(4, NAME, 1353, Node650, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 1354, Node1400, NEUTRAL_REACTION);
end

procedure Node1400
begin
    Reply(1400);
    giq_option(4, NAME, 1401, Node1450, NEUTRAL_REACTION);
    giq_option(4, NAME, 1402, Node1500, NEUTRAL_REACTION);
    if ((local_var(6) bwand 2) == 0) then begin
        giq_option(4, NAME, 1403, Node750, NEUTRAL_REACTION);
    end
    if ((local_var(6) bwand 1) == 0) then begin
        giq_option(4, NAME, 1404, Node650, NEUTRAL_REACTION);
    end
    if ((local_var(6) bwand 8) == 0) then begin
        giq_option(4, NAME, 1405, Node1200, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 1406, Node998, NEUTRAL_REACTION);
end

procedure Node1450
begin
    Reply(1450);
    giq_option(4, NAME, 1451, Node1550, NEUTRAL_REACTION);
end

procedure Node1500
begin
    Reply(1500);
    giq_option(4, NAME, 1501, Node1550, NEUTRAL_REACTION);
end

procedure Node1550
begin
    Reply(1550);
    human_party_number := 0;
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        human_party_number := human_party_number + 1;
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        human_party_number := human_party_number + 1;
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        human_party_number := human_party_number + 1;
    end
    giq_option(6, NAME, 1551, Node1600, NEUTRAL_REACTION);
    if ((human_party_number == 0) and (global_var(GVAR_G_PARTY_LEFT_COUNTER) == 0)) then begin
        giq_option(4, NAME, 1552, Node1650, NEUTRAL_REACTION);
    end
    if ((human_party_number == 1) and (global_var(GVAR_G_PARTY_LEFT_COUNTER) == 0)) then begin
        giq_option(4, NAME, 1552, Node1700, NEUTRAL_REACTION);
    end
    if ((human_party_number > 1) and (global_var(GVAR_G_PARTY_LEFT_COUNTER) == 0)) then begin
        giq_option(4, NAME, 1552, Node1750, NEUTRAL_REACTION);
    end
    if ((human_party_number == 0) and (global_var(GVAR_G_PARTY_LEFT_COUNTER) == 1)) then begin
        giq_option(4, NAME, 1552, Node1800, NEUTRAL_REACTION);
    end
    if ((human_party_number == 0) and (global_var(GVAR_G_PARTY_LEFT_COUNTER) > 1)) then begin
        giq_option(4, NAME, 1552, Node1850, NEUTRAL_REACTION);
    end
    if ((human_party_number == 1) and (global_var(GVAR_G_PARTY_LEFT_COUNTER) == 1)) then begin
        giq_option(4, NAME, 1552, Node1900, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 1553, Node2050, NEUTRAL_REACTION);
end

procedure Node1600
begin
    Reply(1600);
    human_party_number := 0;
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        human_party_number := human_party_number + 1;
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        human_party_number := human_party_number + 1;
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        human_party_number := human_party_number + 1;
    end
    if ((human_party_number == 0) and (global_var(GVAR_G_PARTY_LEFT_COUNTER) == 0)) then begin
        giq_option(4, NAME, 1601, Node1650, NEUTRAL_REACTION);
    end
    if ((human_party_number == 1) and (global_var(GVAR_G_PARTY_LEFT_COUNTER) == 0)) then begin
        giq_option(4, NAME, 1601, Node1700, NEUTRAL_REACTION);
    end
    if ((human_party_number > 1) and (global_var(GVAR_G_PARTY_LEFT_COUNTER) == 0)) then begin
        giq_option(4, NAME, 1601, Node1750, NEUTRAL_REACTION);
    end
    if ((human_party_number == 0) and (global_var(GVAR_G_PARTY_LEFT_COUNTER) == 1)) then begin
        giq_option(4, NAME, 1601, Node1800, NEUTRAL_REACTION);
    end
    if ((human_party_number == 0) and (global_var(GVAR_G_PARTY_LEFT_COUNTER) > 1)) then begin
        giq_option(4, NAME, 1601, Node1850, NEUTRAL_REACTION);
    end
    if ((human_party_number == 1) and (global_var(GVAR_G_PARTY_LEFT_COUNTER) == 1)) then begin
        giq_option(4, NAME, 1601, Node1900, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 1602, Node2050, NEUTRAL_REACTION);
end

procedure Node1650
begin
    Reply(1650);
    giq_option(4, NAME, 1651, Node999_BAD_END, NEUTRAL_REACTION);
    giq_option(-3, NAME, 1652, Node999_BAD_END, NEUTRAL_REACTION);
end

procedure Node1700
begin
    Reply(1700);
    giq_option(4, NAME, 1701, Node997, NEUTRAL_REACTION);
    giq_option(4, NAME, 1702, Node2100, NEUTRAL_REACTION);
end

procedure Node1750
begin
    Reply(1750);
    giq_option(4, NAME, 1751, Node997, NEUTRAL_REACTION);
    giq_option(4, NAME, 1752, Node2150, NEUTRAL_REACTION);
end

procedure Node1800
begin
    Reply(1800);
    giq_option(4, NAME, 1801, Node1650, NEUTRAL_REACTION);
    giq_option(4, NAME, 1802, Node2200, NEUTRAL_REACTION);
end

procedure Node1850
begin
    Reply(1850);
    giq_option(4, NAME, 1851, Node1650, NEUTRAL_REACTION);
    giq_option(4, NAME, 1852, Node2250, NEUTRAL_REACTION);
end

procedure Node1900
begin
    Reply(1900);
    giq_option(4, NAME, 1901, Node997, NEUTRAL_REACTION);
    giq_option(4, NAME, 1902, Node2100, NEUTRAL_REACTION);
end

procedure Node2050
begin
    Reply(2050);
    giq_option(4, NAME, 2051, Node998, NEUTRAL_REACTION);
    giq_option(-3, NAME, 2052, Node998, NEUTRAL_REACTION);
end

procedure Node2100
begin
    Reply(2100);
    giq_option(4, NAME, 2101, Node997, NEUTRAL_REACTION);
    giq_option(4, NAME, 2102, Node2050, NEUTRAL_REACTION);
end

procedure Node2150
begin
    Reply(2150);
    giq_option(4, NAME, 2151, Node997, NEUTRAL_REACTION);
    giq_option(4, NAME, 2152, Node2050, NEUTRAL_REACTION);
end

procedure Node2200
begin
    Reply(2200);
    giq_option(4, NAME, 2201, Node1650, NEUTRAL_REACTION);
    giq_option(4, NAME, 2202, Node2050, NEUTRAL_REACTION);
end

procedure Node2250
begin
    Reply(2250);
    giq_option(4, NAME, 2251, Node1650, NEUTRAL_REACTION);
    giq_option(4, NAME, 2252, Node2050, NEUTRAL_REACTION);
end

procedure Node2300
begin
    Reply(2300);
    giq_option(4, NAME, 2301, Node2350, NEUTRAL_REACTION);
    giq_option(4, NAME, 2302, Node1400, NEUTRAL_REACTION);
end

procedure Node2350
begin
    Reply(2350);
    if (dude_skill(SKILL_SPEECH) > 110) then begin
        giq_option(4, NAME, 2351, Node2450, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 2352, Node2400, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 2353, Node998, NEUTRAL_REACTION);
end

procedure Node2400
begin
    Reply(2400);
    giq_option(4, NAME, 2401, Node998, NEUTRAL_REACTION);
end

procedure Node2450
begin
    Reply(2450);
    giq_option(4, NAME, 2451, Node2500, NEUTRAL_REACTION);
end

procedure Node2500
begin
    Reply(2500);
    give_exp_points(5000);
    display_msg(g_mstr(100) + 5000 + g_mstr(101));
    giq_option(4, NAME, 2501, Node2550, NEUTRAL_REACTION);
end

procedure Node2550
begin
    Reply(2550);
    giq_option(4, NAME, 2551, Node2600, NEUTRAL_REACTION);
end

procedure Node2600
begin
    Reply(2600);
    giq_option(4, NAME, 2601, Node2650, NEUTRAL_REACTION);
end

procedure Node2650
begin
    Reply(2650);
    set_local_var(6, local_var(6) bwor 64);
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        set_local_var(6, local_var(6) bwor 256);
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        set_local_var(6, local_var(6) bwor 512);
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        set_local_var(6, local_var(6) bwor 1024);
    end
    giq_option(4, NAME, 2651, Node2660, NEUTRAL_REACTION);
end

procedure Node2660
begin
    Reply(2660);
    giq_option(4, NAME, 2661, Node2700, NEUTRAL_REACTION);
    giq_option(4, NAME, 2662, Node2750, NEUTRAL_REACTION);
    giq_option(4, NAME, 2663, Node2950, NEUTRAL_REACTION);
    giq_option(4, NAME, 2664, Node2800, NEUTRAL_REACTION);
    giq_option(4, NAME, 2665, Node3500, NEUTRAL_REACTION);
end

procedure Node2700
begin
    Reply(2700);
    giq_option(4, NAME, 2701, Node2750, NEUTRAL_REACTION);
    giq_option(4, NAME, 2702, Node2950, NEUTRAL_REACTION);
    giq_option(4, NAME, 2703, Node2800, NEUTRAL_REACTION);
    giq_option(4, NAME, 2704, Node3500, NEUTRAL_REACTION);
end

procedure Node2750
begin
    Reply(2750);
    giq_option(4, NAME, 2751, Node2700, NEUTRAL_REACTION);
    giq_option(4, NAME, 2752, Node2950, NEUTRAL_REACTION);
    giq_option(4, NAME, 2753, Node2800, NEUTRAL_REACTION);
    giq_option(4, NAME, 2754, Node3500, NEUTRAL_REACTION);
end

procedure Node2800
begin
    Reply(2800);
    giq_option(4, NAME, 2801, Node2850, NEUTRAL_REACTION);
    giq_option(4, NAME, 2802, Node2900, NEUTRAL_REACTION);
    giq_option(4, NAME, 2803, Node3050, NEUTRAL_REACTION);
    giq_option(4, NAME, 2804, Node2650, NEUTRAL_REACTION);
    giq_option(4, NAME, 2805, Node3500, NEUTRAL_REACTION);
end

procedure Node2850
begin
    Reply(2850);
    giq_option(4, NAME, 2851, Node2900, NEUTRAL_REACTION);
    giq_option(4, NAME, 2852, Node3050, NEUTRAL_REACTION);
    giq_option(4, NAME, 2853, Node2650, NEUTRAL_REACTION);
    giq_option(4, NAME, 2854, Node3500, NEUTRAL_REACTION);
end

procedure Node2900
begin
    Reply(2900);
    giq_option(4, NAME, 2901, Node2850, NEUTRAL_REACTION);
    giq_option(4, NAME, 2902, Node3050, NEUTRAL_REACTION);
    giq_option(4, NAME, 2903, Node2650, NEUTRAL_REACTION);
    giq_option(4, NAME, 2904, Node3500, NEUTRAL_REACTION);
end

procedure Node2950
begin
    Reply(2950);
    giq_option(7, NAME, 2951, Node3000, NEUTRAL_REACTION);
    giq_option(4, NAME, 2952, Node2700, NEUTRAL_REACTION);
    giq_option(4, NAME, 2953, Node2750, NEUTRAL_REACTION);
    giq_option(4, NAME, 2954, Node2800, NEUTRAL_REACTION);
    giq_option(4, NAME, 2955, Node3500, NEUTRAL_REACTION);
end

procedure Node3000
begin
    Reply(3000);
    giq_option(4, NAME, 3001, Node2700, NEUTRAL_REACTION);
    giq_option(4, NAME, 3002, Node2750, NEUTRAL_REACTION);
    giq_option(4, NAME, 3003, Node2800, NEUTRAL_REACTION);
    giq_option(4, NAME, 3004, Node3500, NEUTRAL_REACTION);
end

procedure Node3050
begin
    Reply(3050);
    if (dude_skill(SKILL_SPEECH) > 120) then begin
        giq_option(4, NAME, 3051, Node3100, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 3052, Node2850, NEUTRAL_REACTION);
    giq_option(4, NAME, 3053, Node2900, NEUTRAL_REACTION);
    giq_option(4, NAME, 3054, Node2650, NEUTRAL_REACTION);
    giq_option(4, NAME, 3055, Node3500, NEUTRAL_REACTION);
end

procedure Node3100
begin
    Reply(3100);
    if (dude_skill(SKILL_SPEECH) > 125) then begin
        giq_option(4, NAME, 3101, Node3150, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 3102, Node3450, NEUTRAL_REACTION);
end

procedure Node3150
begin
    Reply(3150);
    if (dude_skill(SKILL_SPEECH) >= 130) then begin
        giq_option(4, NAME, 3151, Node3200, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 3152, Node3450, NEUTRAL_REACTION);
end

procedure Node3200
begin
    Reply(3200);
    giq_option(4, NAME, 3201, Node3250, NEUTRAL_REACTION);
end

procedure Node3250
begin
    Reply(3250);
    giq_option(4, NAME, 3251, Node3300, NEUTRAL_REACTION);
end

procedure Node3300
begin
    Reply(3300);
    giq_option(4, NAME, 3301, Node3350, NEUTRAL_REACTION);
end

procedure Node3350
begin
    Reply(3350);
    giq_option(4, NAME, 3351, Node3400, NEUTRAL_REACTION);
end

procedure Node3400
begin
    Reply(3400);
    set_local_var(6, local_var(6) bwor 128);
    giq_option(4, NAME, 3401, Node999_SILENT_AUTODESTRUCTION, NEUTRAL_REACTION);
end

procedure Node3450
begin
    Reply(3450);
    giq_option(4, NAME, 3451, Node998, NEUTRAL_REACTION);
end

procedure Node3500
begin
    Reply(3500);
    giq_option(4, NAME, 3501, Node3550, NEUTRAL_REACTION);
    giq_option(4, NAME, 3502, Node3600, NEUTRAL_REACTION);
    giq_option(4, NAME, 3503, Node3650, NEUTRAL_REACTION);
    giq_option(4, NAME, 3504, Node2800, NEUTRAL_REACTION);
end

procedure Node3550
begin
    Reply(3550);
    giq_option(4, NAME, 3551, Node998, NEUTRAL_REACTION);
end

procedure Node3600
begin
    Reply(3600);
    giq_option(4, NAME, 3601, Node998, NEUTRAL_REACTION);
end

procedure Node3650
begin
    Reply(3650);
    giq_option(4, NAME, 3651, Node3700, NEUTRAL_REACTION);
end

procedure Node3700
begin
    Reply(3700);
    human_party_number := 0;
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        human_party_number := human_party_number + 1;
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        human_party_number := human_party_number + 1;
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        human_party_number := human_party_number + 1;
    end
    if ((human_party_number == 0) and (global_var(GVAR_G_PARTY_LEFT_COUNTER) == 0)) then begin
        giq_option(4, NAME, 3701, Node1650, NEUTRAL_REACTION);
    end
    if ((human_party_number == 1) and (global_var(GVAR_G_PARTY_LEFT_COUNTER) == 0)) then begin
        giq_option(4, NAME, 3701, Node3800, NEUTRAL_REACTION);
    end
    if ((human_party_number > 1) and (global_var(GVAR_G_PARTY_LEFT_COUNTER) == 0)) then begin
        giq_option(4, NAME, 3701, Node3850, NEUTRAL_REACTION);
    end
    if ((human_party_number == 0) and (global_var(GVAR_G_PARTY_LEFT_COUNTER) == 1)) then begin
        giq_option(4, NAME, 3701, Node3900, NEUTRAL_REACTION);
    end
    if ((human_party_number == 0) and (global_var(GVAR_G_PARTY_LEFT_COUNTER) > 1)) then begin
        giq_option(4, NAME, 3701, Node3950, NEUTRAL_REACTION);
    end
    if ((human_party_number == 1) and (global_var(GVAR_G_PARTY_LEFT_COUNTER) == 1)) then begin
        giq_option(4, NAME, 3701, Node4000, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 3702, Node3750, NEUTRAL_REACTION);
end

procedure Node3750
begin
    Reply(3750);
    giq_option(4, NAME, 3751, Node998, NEUTRAL_REACTION);
end

procedure Node3800
begin
    Reply(3800);
    giq_option(4, NAME, 3801, Node997, NEUTRAL_REACTION);
    giq_option(4, NAME, 3802, Node3750, NEUTRAL_REACTION);
end

procedure Node3850
begin
    Reply(3850);
    giq_option(4, NAME, 3851, Node997, NEUTRAL_REACTION);
    giq_option(4, NAME, 3852, Node3750, NEUTRAL_REACTION);
end

procedure Node3900
begin
    Reply(3900);
    giq_option(4, NAME, 3901, Node1650, NEUTRAL_REACTION);
    giq_option(4, NAME, 3902, Node3750, NEUTRAL_REACTION);
end

procedure Node3950
begin
    Reply(3950);
    giq_option(4, NAME, 3951, Node1650, NEUTRAL_REACTION);
    giq_option(4, NAME, 3952, Node3750, NEUTRAL_REACTION);
end

procedure Node4000
begin
    Reply(4000);
    giq_option(4, NAME, 4001, Node997, NEUTRAL_REACTION);
    giq_option(4, NAME, 4002, Node3750, NEUTRAL_REACTION);
end

procedure Node4150
begin
    Reply(4150);
    giq_option(4, NAME, 4151, Node999_BAD_END, NEUTRAL_REACTION);
    giq_option(-3, NAME, 4152, Node999_BAD_END, NEUTRAL_REACTION);
end

procedure Node4200
begin
    Reply(4200);
    giq_option(4, NAME, 4201, Node550, NEUTRAL_REACTION);
    giq_option(-3, NAME, 4202, Node4600, NEUTRAL_REACTION);
end

procedure Node4250
begin
    Reply(4250);
    giq_option(4, NAME, 4251, Node550, NEUTRAL_REACTION);
    giq_option(-3, NAME, 4252, Node4600, NEUTRAL_REACTION);
end

procedure Node4300
begin
    Reply(4300);
    giq_option(4, NAME, 4301, Node550, NEUTRAL_REACTION);
    giq_option(-3, NAME, 4302, Node4600, NEUTRAL_REACTION);
end

procedure Node4350
begin
    Reply(4350);
    giq_option(4, NAME, 4351, Node998, NEUTRAL_REACTION);
    giq_option(-3, NAME, 4352, Node998, NEUTRAL_REACTION);
end

procedure Node4400
begin
    Reply(4400);
    giq_option(4, NAME, 4401, Node998, NEUTRAL_REACTION);
    giq_option(-3, NAME, 4402, Node998, NEUTRAL_REACTION);
end

procedure Node4450
begin
    Reply(4450);
    giq_option(4, NAME, 4451, Node998, NEUTRAL_REACTION);
    giq_option(-3, NAME, 4452, Node998, NEUTRAL_REACTION);
end

procedure Node4500
begin
    Reply(4500);
    giq_option(4, NAME, 4501, Node998, NEUTRAL_REACTION);
    giq_option(-3, NAME, 4502, Node998, NEUTRAL_REACTION);
end

procedure Node4550
begin
    Reply(4550);
    giq_option(4, NAME, 4551, Node998, NEUTRAL_REACTION);
    giq_option(-3, NAME, 4552, Node998, NEUTRAL_REACTION);
end

procedure Node4600
begin
    Reply(4600);
    giq_option(-3, NAME, 4601, Node4650, NEUTRAL_REACTION);
    giq_option(-3, NAME, 4602, Node4700, NEUTRAL_REACTION);
    giq_option(-3, NAME, 4603, Node4800, NEUTRAL_REACTION);
    giq_option(-3, NAME, 4604, Node4950, NEUTRAL_REACTION);
    giq_option(-3, NAME, dude_name + mstr(4605), Node4850, NEUTRAL_REACTION);
end

procedure Node4650
begin
    Reply(4650);
    giq_option(-3, NAME, 4651, Node4700, NEUTRAL_REACTION);
    giq_option(-3, NAME, 4652, Node4800, NEUTRAL_REACTION);
    giq_option(-3, NAME, 4653, Node4950, NEUTRAL_REACTION);
    giq_option(-3, NAME, dude_name + mstr(4654), Node4850, NEUTRAL_REACTION);
end

procedure Node4700
begin
    Reply(4700);
    giq_option(-3, NAME, 4701, Node4750, NEUTRAL_REACTION);
    giq_option(-3, NAME, 4702, Node4650, NEUTRAL_REACTION);
    giq_option(-3, NAME, 4703, Node4800, NEUTRAL_REACTION);
    giq_option(-3, NAME, 4704, Node4950, NEUTRAL_REACTION);
    giq_option(-3, NAME, dude_name + mstr(4705), Node4850, NEUTRAL_REACTION);
end

procedure Node4750
begin
    Reply(4750);
    giq_option(-3, NAME, 4751, Node4650, NEUTRAL_REACTION);
    giq_option(-3, NAME, 4752, Node4800, NEUTRAL_REACTION);
    giq_option(-3, NAME, 4753, Node4950, NEUTRAL_REACTION);
    giq_option(-3, NAME, dude_name + mstr(4754), Node4850, NEUTRAL_REACTION);
end

procedure Node4800
begin
    Reply(4800);
    giq_option(-3, NAME, 4801, Node4650, NEUTRAL_REACTION);
    giq_option(-3, NAME, 4802, Node4700, NEUTRAL_REACTION);
    giq_option(-3, NAME, 4803, Node4950, NEUTRAL_REACTION);
    giq_option(-3, NAME, dude_name + mstr(4804), Node4850, NEUTRAL_REACTION);
end

procedure Node4850
begin
    Reply(4850);
    giq_option(-3, NAME, 4851, Node4900, NEUTRAL_REACTION);
end

procedure Node4900
begin
    Reply(4900);
    giq_option(-3, NAME, mstr(4901) + dude_name + mstr(4902), Node1650, NEUTRAL_REACTION);
    giq_option(-3, NAME, 4903, Node2050, NEUTRAL_REACTION);
end

procedure Node4950
begin
    Reply(4950);
    giq_option(-3, NAME, 4951, Node998, NEUTRAL_REACTION);
end

procedure Node5000
begin
    Reply(5000);
    giq_option(4, NAME, 5001, Node5050, NEUTRAL_REACTION);
    giq_option(-3, NAME, 5002, Node8700, NEUTRAL_REACTION);
end

procedure Node5050
begin
    Reply(5050);
    giq_option(4, NAME, 5051, Node5100, NEUTRAL_REACTION);
    if ((local_var(6) bwand 4) == 0) then begin
        if (global_var(GVAR_AQ_MUTANT_HUNTER) != 0) then begin
            giq_option(4, NAME, 5052, Node5650, NEUTRAL_REACTION);
        end
        else begin
            giq_option(4, NAME, 5052, Node5600, NEUTRAL_REACTION);
        end
    end
    if ((local_var(6) bwand 8) == 0) then begin
        giq_option(4, NAME, 5053, Node5700, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 5054, Node5900, NEUTRAL_REACTION);
end

procedure Node5100
begin
    Reply(5100);
    giq_option(4, NAME, 5101, Node998, NEUTRAL_REACTION);
    if ((local_var(6) bwand 1) == 0) then begin
        giq_option(4, NAME, 5102, Node5150, NEUTRAL_REACTION);
    end
    if ((local_var(6) bwand 2) == 0) then begin
        giq_option(4, NAME, 5103, Node5250, NEUTRAL_REACTION);
    end
end

procedure Node5150
begin
    Reply(5150);
    set_local_var(6, local_var(6) bwor 1);
    giq_option(4, NAME, 5151, Node5200, NEUTRAL_REACTION);
end

procedure Node5200
begin
    Reply(5200);
    if ((local_var(6) bwand 4) == 0) then begin
        if (global_var(GVAR_AQ_MUTANT_HUNTER) != 0) then begin
            giq_option(4, NAME, 5201, Node5650, NEUTRAL_REACTION);
        end
        else begin
            giq_option(4, NAME, 5201, Node5600, NEUTRAL_REACTION);
        end
    end
    if ((local_var(6) bwand 2) == 0) then begin
        giq_option(4, NAME, 5202, Node5250, NEUTRAL_REACTION);
    end
    if ((local_var(6) bwand 8) == 0) then begin
        giq_option(4, NAME, 5203, Node5700, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 5204, Node5900, NEUTRAL_REACTION);
end

procedure Node5250
begin
    Reply(5250);
    set_local_var(6, local_var(6) bwor 2);
    if (global_var(GVAR_MC_SPEAKED_WITH_THOMAS) == 1) then begin
        giq_option(4, NAME, 5251, Node5300, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 5252, Node5300, NEUTRAL_REACTION);
    end
end

procedure Node5300
begin
    Reply(5300);
    giq_option(4, NAME, 5301, Node5350, NEUTRAL_REACTION);
    if (global_var(GVAR_MC_SPEAKED_WITH_THOMAS) == 1) then begin
        giq_option(4, NAME, 5302, Node5400, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_MC_SPEAKED_WITH_THOMAS) == 0) and (map_var(10) == 1)) then begin
        giq_option(4, NAME, 5303, Node5450, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_MC_SPEAKED_WITH_THOMAS) == 0) and (map_var(10) == 0)) then begin
        if ((dude_skill(SKILL_SCIENCE) >= 130) and (dude_skill(SKILL_DOCTOR) > 60)) then begin
            giq_option(4, NAME, 5304, Node5550, NEUTRAL_REACTION);
        end
        else begin
            giq_option(6, NAME, 5305, Node6850, NEUTRAL_REACTION);
            if (dude_iq < 6) then begin
                giq_option(4, NAME, 5306, Node5900, NEUTRAL_REACTION);
            end
        end
    end
end

procedure Node5350
begin
    Reply(5350);
    if (global_var(GVAR_MC_SPEAKED_WITH_THOMAS) == 1) then begin
        giq_option(4, NAME, 5351, Node5400, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_MC_SPEAKED_WITH_THOMAS) == 0) and (map_var(10) == 1)) then begin
        giq_option(4, NAME, 5352, Node5450, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_MC_SPEAKED_WITH_THOMAS) == 0) and (map_var(10) == 0)) then begin
        if ((dude_skill(SKILL_SCIENCE) >= 130) and (dude_skill(SKILL_DOCTOR) > 60)) then begin
            giq_option(4, NAME, 5353, Node5550, NEUTRAL_REACTION);
        end
        else begin
            giq_option(6, NAME, 5354, Node6850, NEUTRAL_REACTION);
            if (dude_iq < 6) then begin
                giq_option(4, NAME, 5355, Node5900, NEUTRAL_REACTION);
            end
        end
    end
end

procedure Node5400
begin
    Reply(5400);
    if (map_var(10) == 1) then begin
        giq_option(4, NAME, 5401, Node5450, NEUTRAL_REACTION);
    end
    if (map_var(10) == 0) then begin
        if ((dude_skill(SKILL_SCIENCE) >= 130) and (dude_skill(SKILL_DOCTOR) > 60)) then begin
            giq_option(4, NAME, 5402, Node5550, NEUTRAL_REACTION);
        end
        else begin
            giq_option(6, NAME, 5403, Node6850, NEUTRAL_REACTION);
            if (dude_iq < 6) then begin
                giq_option(4, NAME, 5404, Node5900, NEUTRAL_REACTION);
            end
        end
    end
end

procedure Node5450
begin
    Reply(5450);
    giq_option(4, NAME, 5451, Node5500, NEUTRAL_REACTION);
    if ((dude_skill(SKILL_SCIENCE) >= 130) and (dude_skill(SKILL_DOCTOR) > 60)) then begin
        giq_option(4, NAME, 5452, Node5550, NEUTRAL_REACTION);
    end
    else begin
        giq_option(6, NAME, 5453, Node6850, NEUTRAL_REACTION);
        if (dude_iq < 6) then begin
            giq_option(4, NAME, 5454, Node5900, NEUTRAL_REACTION);
        end
    end
end

procedure Node5500
begin
    Reply(5500);
    if ((dude_skill(SKILL_SCIENCE) >= 130) and (dude_skill(SKILL_DOCTOR) > 60)) then begin
        giq_option(4, NAME, 5501, Node5550, NEUTRAL_REACTION);
    end
    else begin
        giq_option(6, NAME, 5502, Node6850, NEUTRAL_REACTION);
        if (dude_iq < 6) then begin
            giq_option(4, NAME, 5503, Node5900, NEUTRAL_REACTION);
        end
    end
end

procedure Node5550
begin
    Reply(5550);
    giq_option(6, NAME, 5551, Node6800, NEUTRAL_REACTION);
    if (map_var(11) == 1) then begin
        giq_option(4, NAME, 5552, Node6850, NEUTRAL_REACTION);
    end
    if (dude_iq < 6) then begin
        giq_option(4, NAME, 5553, Node5900, NEUTRAL_REACTION);
    end
end

procedure Node5600
begin
    Reply(5600);
    set_local_var(6, local_var(6) bwor 4);
    if ((local_var(6) bwand 1) == 0) then begin
        giq_option(4, NAME, 5601, Node5150, NEUTRAL_REACTION);
    end
    if ((local_var(6) bwand 2) == 0) then begin
        giq_option(4, NAME, 5602, Node5250, NEUTRAL_REACTION);
    end
    if ((local_var(6) bwand 8) == 0) then begin
        giq_option(4, NAME, 5603, Node5700, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 5604, Node5900, NEUTRAL_REACTION);
end

procedure Node5650
begin
    Reply(5650);
    set_local_var(6, local_var(6) bwor 4);
    if ((local_var(6) bwand 1) == 0) then begin
        giq_option(4, NAME, 5651, Node5150, NEUTRAL_REACTION);
    end
    if ((local_var(6) bwand 2) == 0) then begin
        giq_option(4, NAME, 5652, Node5250, NEUTRAL_REACTION);
    end
    if ((local_var(6) bwand 8) == 0) then begin
        giq_option(4, NAME, 5653, Node5700, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 5654, Node5900, NEUTRAL_REACTION);
end

procedure Node5700
begin
    Reply(5700);
    set_local_var(6, local_var(6) bwor 8);
    if ((local_var(6) bwand 16) == 0) then begin
        giq_option(4, NAME, 5701, Node5750, NEUTRAL_REACTION);
    end
    if ((local_var(6) bwand 32) == 0) then begin
        giq_option(4, NAME, 5702, Node5800, NEUTRAL_REACTION);
    end
    if ((local_var(6) bwand 2) == 0) then begin
        giq_option(4, NAME, 5703, Node5250, NEUTRAL_REACTION);
    end
    if ((local_var(6) bwand 1) == 0) then begin
        giq_option(4, NAME, 5704, Node5150, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 5705, Node5900, NEUTRAL_REACTION);
end

procedure Node5750
begin
    Reply(5750);
    set_local_var(6, local_var(6) bwor 16);
    if ((local_var(6) bwand 32) == 0) then begin
        giq_option(4, NAME, 5751, Node5800, NEUTRAL_REACTION);
    end
    if ((local_var(6) bwand 2) == 0) then begin
        giq_option(4, NAME, 5752, Node5250, NEUTRAL_REACTION);
    end
    if ((local_var(6) bwand 1) == 0) then begin
        giq_option(4, NAME, 5753, Node5150, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 5754, Node5900, NEUTRAL_REACTION);
end

procedure Node5800
begin
    Reply(5800);
    set_local_var(6, local_var(6) bwor 32);
    giq_option(4, NAME, 5801, Node5850, NEUTRAL_REACTION);
    if ((local_var(6) bwand 16) == 0) then begin
        giq_option(4, NAME, 5802, Node5750, NEUTRAL_REACTION);
    end
    if ((local_var(6) bwand 2) == 0) then begin
        giq_option(4, NAME, 5803, Node5250, NEUTRAL_REACTION);
    end
    if ((local_var(6) bwand 1) == 0) then begin
        giq_option(4, NAME, 5804, Node5150, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 5805, Node5900, NEUTRAL_REACTION);
end

procedure Node5850
begin
    Reply(5850);
    if ((local_var(6) bwand 16) == 0) then begin
        giq_option(4, NAME, 5851, Node5750, NEUTRAL_REACTION);
    end
    if ((local_var(6) bwand 2) == 0) then begin
        giq_option(4, NAME, 5852, Node5250, NEUTRAL_REACTION);
    end
    if ((local_var(6) bwand 1) == 0) then begin
        giq_option(4, NAME, 5853, Node5150, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 5854, Node5900, NEUTRAL_REACTION);
end

procedure Node5900
begin
    Reply(5900);
    giq_option(4, NAME, 5901, Node5950, NEUTRAL_REACTION);
    giq_option(4, NAME, 5902, Node6000, NEUTRAL_REACTION);
    if ((local_var(6) bwand 2) == 0) then begin
        giq_option(4, NAME, 5903, Node5250, NEUTRAL_REACTION);
    end
    if ((local_var(6) bwand 1) == 0) then begin
        giq_option(4, NAME, 5904, Node5150, NEUTRAL_REACTION);
    end
    if ((local_var(6) bwand 8) == 0) then begin
        giq_option(4, NAME, 5905, Node5700, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 5906, Node998, NEUTRAL_REACTION);
end

procedure Node5950
begin
    Reply(5950);
    giq_option(4, NAME, 5951, Node6050, NEUTRAL_REACTION);
end

procedure Node6000
begin
    Reply(6000);
    giq_option(4, NAME, 6001, Node6050, NEUTRAL_REACTION);
end

procedure Node6050
begin
    Reply(6050);
    human_party_number := 0;
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        human_party_number := human_party_number + 1;
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        human_party_number := human_party_number + 1;
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        human_party_number := human_party_number + 1;
    end
    giq_option(6, NAME, 6051, Node6100, NEUTRAL_REACTION);
    if ((human_party_number == 0) and (global_var(GVAR_G_PARTY_LEFT_COUNTER) == 0)) then begin
        giq_option(4, NAME, 6052, Node6150, NEUTRAL_REACTION);
    end
    if ((human_party_number == 1) and (global_var(GVAR_G_PARTY_LEFT_COUNTER) == 0)) then begin
        giq_option(4, NAME, 6052, Node6200, NEUTRAL_REACTION);
    end
    if ((human_party_number > 1) and (global_var(GVAR_G_PARTY_LEFT_COUNTER) == 0)) then begin
        giq_option(4, NAME, 6052, Node6250, NEUTRAL_REACTION);
    end
    if ((human_party_number == 0) and (global_var(GVAR_G_PARTY_LEFT_COUNTER) == 1)) then begin
        giq_option(4, NAME, 6052, Node6300, NEUTRAL_REACTION);
    end
    if ((human_party_number == 0) and (global_var(GVAR_G_PARTY_LEFT_COUNTER) > 1)) then begin
        giq_option(4, NAME, 6052, Node6350, NEUTRAL_REACTION);
    end
    if ((human_party_number == 1) and (global_var(GVAR_G_PARTY_LEFT_COUNTER) == 1)) then begin
        giq_option(4, NAME, 6052, Node6400, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 6053, Node6550, NEUTRAL_REACTION);
end

procedure Node6100
begin
    Reply(6100);
    human_party_number := 0;
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        human_party_number := human_party_number + 1;
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        human_party_number := human_party_number + 1;
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        human_party_number := human_party_number + 1;
    end
    if ((human_party_number == 0) and (global_var(GVAR_G_PARTY_LEFT_COUNTER) == 0)) then begin
        giq_option(4, NAME, 6101, Node6150, NEUTRAL_REACTION);
    end
    if ((human_party_number == 1) and (global_var(GVAR_G_PARTY_LEFT_COUNTER) == 0)) then begin
        giq_option(4, NAME, 6101, Node6200, NEUTRAL_REACTION);
    end
    if ((human_party_number > 1) and (global_var(GVAR_G_PARTY_LEFT_COUNTER) == 0)) then begin
        giq_option(4, NAME, 6101, Node6250, NEUTRAL_REACTION);
    end
    if ((human_party_number == 0) and (global_var(GVAR_G_PARTY_LEFT_COUNTER) == 1)) then begin
        giq_option(4, NAME, 6101, Node6300, NEUTRAL_REACTION);
    end
    if ((human_party_number == 0) and (global_var(GVAR_G_PARTY_LEFT_COUNTER) > 1)) then begin
        giq_option(4, NAME, 6101, Node6350, NEUTRAL_REACTION);
    end
    if ((human_party_number == 1) and (global_var(GVAR_G_PARTY_LEFT_COUNTER) == 1)) then begin
        giq_option(4, NAME, 6101, Node6400, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 6102, Node6550, NEUTRAL_REACTION);
end

procedure Node6150
begin
    Reply(6150);
    giq_option(4, NAME, 6151, Node999_BAD_END, NEUTRAL_REACTION);
    giq_option(-3, NAME, 6152, Node999_BAD_END, NEUTRAL_REACTION);
end

procedure Node6200
begin
    Reply(6200);
    giq_option(4, NAME, 6201, Node997, NEUTRAL_REACTION);
    giq_option(4, NAME, 6202, Node6600, NEUTRAL_REACTION);
end

procedure Node6250
begin
    Reply(6250);
    giq_option(4, NAME, 6251, Node997, NEUTRAL_REACTION);
    giq_option(4, NAME, 6252, Node6650, NEUTRAL_REACTION);
end

procedure Node6300
begin
    Reply(6300);
    giq_option(4, NAME, 6301, Node1650, NEUTRAL_REACTION);
    giq_option(4, NAME, 6302, Node6700, NEUTRAL_REACTION);
end

procedure Node6350
begin
    Reply(6350);
    giq_option(4, NAME, 6351, Node1650, NEUTRAL_REACTION);
    giq_option(4, NAME, 6352, Node6750, NEUTRAL_REACTION);
end

procedure Node6400
begin
    Reply(6400);
    giq_option(4, NAME, 6401, Node997, NEUTRAL_REACTION);
    giq_option(4, NAME, 6402, Node6600, NEUTRAL_REACTION);
end

procedure Node6550
begin
    Reply(6550);
    giq_option(4, NAME, 6551, Node998, NEUTRAL_REACTION);
    giq_option(-3, NAME, 6552, Node998, NEUTRAL_REACTION);
end

procedure Node6600
begin
    Reply(6600);
    giq_option(4, NAME, 6601, Node997, NEUTRAL_REACTION);
    giq_option(4, NAME, 6602, Node6550, NEUTRAL_REACTION);
end

procedure Node6650
begin
    Reply(6650);
    giq_option(4, NAME, 6651, Node997, NEUTRAL_REACTION);
    giq_option(4, NAME, 6652, Node6550, NEUTRAL_REACTION);
end

procedure Node6700
begin
    Reply(6700);
    giq_option(4, NAME, 6701, Node6150, NEUTRAL_REACTION);
    giq_option(4, NAME, 6702, Node6550, NEUTRAL_REACTION);
end

procedure Node6750
begin
    Reply(6750);
    giq_option(4, NAME, 6751, Node6150, NEUTRAL_REACTION);
    giq_option(4, NAME, 6752, Node6550, NEUTRAL_REACTION);
end

procedure Node6800
begin
    Reply(6800);
    giq_option(4, NAME, 6801, Node6850, NEUTRAL_REACTION);
    giq_option(4, NAME, 6802, Node5900, NEUTRAL_REACTION);
end

procedure Node6850
begin
    Reply(6850);
    if (dude_skill(SKILL_SPEECH) > 110) then begin
        giq_option(4, NAME, 6851, Node6950, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 6852, Node6900, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 6853, Node998, NEUTRAL_REACTION);
end

procedure Node6900
begin
    Reply(6900);
    giq_option(4, NAME, 6901, Node998, NEUTRAL_REACTION);
end

procedure Node6950
begin
    Reply(6950);
    giq_option(4, NAME, 6951, Node7000, NEUTRAL_REACTION);
end

procedure Node7000
begin
    Reply(7000);
    give_exp_points(5000);
    display_msg(g_mstr(100) + 5000 + g_mstr(101));
    giq_option(4, NAME, 7001, Node7050, NEUTRAL_REACTION);
end

procedure Node7050
begin
    Reply(7050);
    giq_option(4, NAME, 7051, Node7100, NEUTRAL_REACTION);
end

procedure Node7100
begin
    Reply(7100);
    giq_option(4, NAME, 7101, Node7150, NEUTRAL_REACTION);
end

procedure Node7150
begin
    Reply(7150);
    set_local_var(6, local_var(6) bwor 64);
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        set_local_var(6, local_var(6) bwor 256);
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        set_local_var(6, local_var(6) bwor 512);
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        set_local_var(6, local_var(6) bwor 1024);
    end
    giq_option(4, NAME, 7151, Node7160, NEUTRAL_REACTION);
end

procedure Node7160
begin
    Reply(7160);
    giq_option(4, NAME, 7161, Node7200, NEUTRAL_REACTION);
    giq_option(4, NAME, 7162, Node7250, NEUTRAL_REACTION);
    giq_option(4, NAME, 7163, Node7450, NEUTRAL_REACTION);
    giq_option(4, NAME, 7164, Node7300, NEUTRAL_REACTION);
    giq_option(4, NAME, 7165, Node7600, NEUTRAL_REACTION);
end

procedure Node7200
begin
    Reply(7200);
    giq_option(4, NAME, 7201, Node7250, NEUTRAL_REACTION);
    giq_option(4, NAME, 7202, Node7450, NEUTRAL_REACTION);
    giq_option(4, NAME, 7203, Node7300, NEUTRAL_REACTION);
    giq_option(4, NAME, 7204, Node7600, NEUTRAL_REACTION);
end

procedure Node7250
begin
    Reply(7250);
    giq_option(4, NAME, 7251, Node7200, NEUTRAL_REACTION);
    giq_option(4, NAME, 7252, Node7450, NEUTRAL_REACTION);
    giq_option(4, NAME, 7253, Node7300, NEUTRAL_REACTION);
    giq_option(4, NAME, 7254, Node7600, NEUTRAL_REACTION);
end

procedure Node7300
begin
    Reply(7300);
    giq_option(4, NAME, 7301, Node7350, NEUTRAL_REACTION);
    giq_option(4, NAME, 7302, Node7400, NEUTRAL_REACTION);
    giq_option(4, NAME, 7303, Node7550, NEUTRAL_REACTION);
    giq_option(4, NAME, 7304, Node7150, NEUTRAL_REACTION);
    giq_option(4, NAME, 7305, Node7600, NEUTRAL_REACTION);
end

procedure Node7350
begin
    Reply(7350);
    giq_option(4, NAME, 7351, Node7400, NEUTRAL_REACTION);
    giq_option(4, NAME, 7352, Node7550, NEUTRAL_REACTION);
    giq_option(4, NAME, 7353, Node7150, NEUTRAL_REACTION);
    giq_option(4, NAME, 7354, Node7600, NEUTRAL_REACTION);
end

procedure Node7400
begin
    Reply(7400);
    giq_option(4, NAME, 7401, Node7350, NEUTRAL_REACTION);
    giq_option(4, NAME, 7402, Node7550, NEUTRAL_REACTION);
    giq_option(4, NAME, 7403, Node7150, NEUTRAL_REACTION);
    giq_option(4, NAME, 7404, Node7600, NEUTRAL_REACTION);
end

procedure Node7450
begin
    Reply(7450);
    giq_option(7, NAME, 7451, Node7500, NEUTRAL_REACTION);
    giq_option(4, NAME, 7452, Node7200, NEUTRAL_REACTION);
    giq_option(4, NAME, 7453, Node7250, NEUTRAL_REACTION);
    giq_option(4, NAME, 7454, Node7300, NEUTRAL_REACTION);
    giq_option(4, NAME, 7455, Node7600, NEUTRAL_REACTION);
end

procedure Node7500
begin
    Reply(7500);
    giq_option(4, NAME, 7501, Node7200, NEUTRAL_REACTION);
    giq_option(4, NAME, 7502, Node7250, NEUTRAL_REACTION);
    giq_option(4, NAME, 7503, Node7300, NEUTRAL_REACTION);
    giq_option(4, NAME, 7504, Node7600, NEUTRAL_REACTION);
end

procedure Node7550
begin
    Reply(7550);
    if (dude_skill(SKILL_SPEECH) > 120) then begin
        giq_option(4, NAME, 7551, Node3100, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 7552, Node7350, NEUTRAL_REACTION);
    giq_option(4, NAME, 7553, Node7400, NEUTRAL_REACTION);
    giq_option(4, NAME, 7554, Node7150, NEUTRAL_REACTION);
    giq_option(4, NAME, 7555, Node7600, NEUTRAL_REACTION);
end

procedure Node7600
begin
    Reply(7600);
    giq_option(4, NAME, 7601, Node7650, NEUTRAL_REACTION);
    giq_option(4, NAME, 7602, Node7700, NEUTRAL_REACTION);
    giq_option(4, NAME, 7603, Node7750, NEUTRAL_REACTION);
    giq_option(4, NAME, 7604, Node7300, NEUTRAL_REACTION);
end

procedure Node7650
begin
    Reply(7650);
    giq_option(4, NAME, 7651, Node998, NEUTRAL_REACTION);
end

procedure Node7700
begin
    Reply(7700);
    giq_option(4, NAME, 7701, Node998, NEUTRAL_REACTION);
end

procedure Node7750
begin
    Reply(7750);
    giq_option(4, NAME, 7751, Node7800, NEUTRAL_REACTION);
end

procedure Node7800
begin
    Reply(7800);
    human_party_number := 0;
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        human_party_number := human_party_number + 1;
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        human_party_number := human_party_number + 1;
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        human_party_number := human_party_number + 1;
    end
    if ((human_party_number == 0) and (global_var(GVAR_G_PARTY_LEFT_COUNTER) == 0)) then begin
        giq_option(4, NAME, 7801, Node6150, NEUTRAL_REACTION);
    end
    if ((human_party_number == 1) and (global_var(GVAR_G_PARTY_LEFT_COUNTER) == 0)) then begin
        giq_option(4, NAME, 7801, Node7900, NEUTRAL_REACTION);
    end
    if ((human_party_number > 1) and (global_var(GVAR_G_PARTY_LEFT_COUNTER) == 0)) then begin
        giq_option(4, NAME, 7801, Node7950, NEUTRAL_REACTION);
    end
    if ((human_party_number == 0) and (global_var(GVAR_G_PARTY_LEFT_COUNTER) == 1)) then begin
        giq_option(4, NAME, 7801, Node8000, NEUTRAL_REACTION);
    end
    if ((human_party_number == 0) and (global_var(GVAR_G_PARTY_LEFT_COUNTER) > 1)) then begin
        giq_option(4, NAME, 7801, Node8050, NEUTRAL_REACTION);
    end
    if ((human_party_number == 1) and (global_var(GVAR_G_PARTY_LEFT_COUNTER) == 1)) then begin
        giq_option(4, NAME, 7801, Node8100, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 7802, Node7850, NEUTRAL_REACTION);
end

procedure Node7850
begin
    Reply(7850);
    giq_option(4, NAME, 7851, Node998, NEUTRAL_REACTION);
end

procedure Node7900
begin
    Reply(7900);
    giq_option(4, NAME, 7901, Node997, NEUTRAL_REACTION);
    giq_option(4, NAME, 7902, Node7850, NEUTRAL_REACTION);
end

procedure Node7950
begin
    Reply(7950);
    giq_option(4, NAME, 7951, Node997, NEUTRAL_REACTION);
    giq_option(4, NAME, 7952, Node7850, NEUTRAL_REACTION);
end

procedure Node8000
begin
    Reply(8000);
    giq_option(4, NAME, 8001, Node6150, NEUTRAL_REACTION);
    giq_option(4, NAME, 8002, Node7850, NEUTRAL_REACTION);
end

procedure Node8050
begin
    Reply(8050);
    giq_option(4, NAME, 8051, Node6150, NEUTRAL_REACTION);
    giq_option(4, NAME, 8052, Node7850, NEUTRAL_REACTION);
end

procedure Node8100
begin
    Reply(8100);
    giq_option(4, NAME, 8101, Node997, NEUTRAL_REACTION);
    giq_option(4, NAME, 8102, Node7850, NEUTRAL_REACTION);
end

procedure Node8250
begin
    Reply(8250);
    giq_option(4, NAME, 8251, Node999_BAD_END, NEUTRAL_REACTION);
    giq_option(-3, NAME, 8252, Node999_BAD_END, NEUTRAL_REACTION);
end

procedure Node8300
begin
    Reply(8300);
    giq_option(4, NAME, 8301, Node5050, NEUTRAL_REACTION);
    giq_option(-3, NAME, 8302, Node8700, NEUTRAL_REACTION);
end

procedure Node8350
begin
    Reply(8350);
    giq_option(4, NAME, 8351, Node5050, NEUTRAL_REACTION);
    giq_option(-3, NAME, 8352, Node8700, NEUTRAL_REACTION);
end

procedure Node8400
begin
    Reply(8400);
    giq_option(4, NAME, 8401, Node5050, NEUTRAL_REACTION);
    giq_option(-3, NAME, 8402, Node8700, NEUTRAL_REACTION);
end

procedure Node8450
begin
    Reply(8450);
    giq_option(4, NAME, 8451, Node998, NEUTRAL_REACTION);
    giq_option(-3, NAME, 8452, Node998, NEUTRAL_REACTION);
end

procedure Node8500
begin
    Reply(8500);
    giq_option(4, NAME, 8501, Node998, NEUTRAL_REACTION);
    giq_option(-3, NAME, 8502, Node998, NEUTRAL_REACTION);
end

procedure Node8550
begin
    Reply(8550);
    giq_option(4, NAME, 8551, Node998, NEUTRAL_REACTION);
    giq_option(-3, NAME, 8552, Node998, NEUTRAL_REACTION);
end

procedure Node8600
begin
    Reply(8600);
    giq_option(4, NAME, 8601, Node998, NEUTRAL_REACTION);
    giq_option(-3, NAME, 8602, Node998, NEUTRAL_REACTION);
end

procedure Node8650
begin
    Reply(8650);
    giq_option(4, NAME, 8651, Node998, NEUTRAL_REACTION);
    giq_option(-3, NAME, 8652, Node998, NEUTRAL_REACTION);
end

procedure Node8700
begin
    Reply(8700);
    giq_option(-3, NAME, 8701, Node8750, NEUTRAL_REACTION);
    giq_option(-3, NAME, 8702, Node8800, NEUTRAL_REACTION);
    giq_option(-3, NAME, 8703, Node8900, NEUTRAL_REACTION);
    giq_option(-3, NAME, 8704, Node9050, NEUTRAL_REACTION);
    giq_option(-3, NAME, dude_name + mstr(8705), Node8950, NEUTRAL_REACTION);
end

procedure Node8750
begin
    Reply(8750);
    giq_option(-3, NAME, 8751, Node8800, NEUTRAL_REACTION);
    giq_option(-3, NAME, 8752, Node8900, NEUTRAL_REACTION);
    giq_option(-3, NAME, 8753, Node9050, NEUTRAL_REACTION);
    giq_option(-3, NAME, dude_name + mstr(8754), Node8950, NEUTRAL_REACTION);
end

procedure Node8800
begin
    Reply(8800);
    giq_option(-3, NAME, 8801, Node8850, NEUTRAL_REACTION);
    giq_option(-3, NAME, 8802, Node8750, NEUTRAL_REACTION);
    giq_option(-3, NAME, 8803, Node8900, NEUTRAL_REACTION);
    giq_option(-3, NAME, 8804, Node9050, NEUTRAL_REACTION);
    giq_option(-3, NAME, dude_name + mstr(8805), Node8950, NEUTRAL_REACTION);
end

procedure Node8850
begin
    Reply(8850);
    giq_option(-3, NAME, 8851, Node8750, NEUTRAL_REACTION);
    giq_option(-3, NAME, 8852, Node8900, NEUTRAL_REACTION);
    giq_option(-3, NAME, 8853, Node9050, NEUTRAL_REACTION);
    giq_option(-3, NAME, dude_name + mstr(8854), Node8950, NEUTRAL_REACTION);
end

procedure Node8900
begin
    Reply(8900);
    giq_option(-3, NAME, 8901, Node8750, NEUTRAL_REACTION);
    giq_option(-3, NAME, 8902, Node8850, NEUTRAL_REACTION);
    giq_option(-3, NAME, 8903, Node9050, NEUTRAL_REACTION);
    giq_option(-3, NAME, dude_name + mstr(8904), Node8950, NEUTRAL_REACTION);
end

procedure Node8950
begin
    Reply(8950);
    giq_option(-3, NAME, 8951, Node9000, NEUTRAL_REACTION);
end

procedure Node9000
begin
    Reply(9000);
    giq_option(-3, NAME, mstr(9001) + dude_name + mstr(9002), Node6150, NEUTRAL_REACTION);
    giq_option(-3, NAME, 9003, Node6550, NEUTRAL_REACTION);
end

procedure Node9050
begin
    Reply(9050);
    giq_option(-3, NAME, 9051, Node998, NEUTRAL_REACTION);
end

procedure odstraneni_zbrani
begin
    variable LVar0 := 0;
    variable LVar1 := 0;
    while (LVar1 < 700) do begin
        if (obj_item_subtype(obj_carrying_pid_obj(self_obj, LVar1)) == 3) then begin
            LVar0 := obj_is_carrying_obj_pid(self_obj, LVar1);
            removed_qty := obj_is_carrying_obj_pid(self_obj, LVar1);
            if (LVar0 < removed_qty) then begin
                removed_qty := LVar0;
            end
            if (removed_qty > 0) then begin
                restock_obj := obj_carrying_pid_obj(self_obj, LVar1);
                if (obj_type(self_obj) == 1) then begin
                    restock_obj := obj_carrying_pid_obj(self_obj, LVar1);
                    if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                        if (obj_item_subtype(critter_inven_obj(self_obj, INVEN_TYPE_WORN)) == 0) then begin
                            restock_obj := critter_inven_obj(self_obj, INVEN_TYPE_WORN);
                            debug_msg("armour pid == " + obj_pid(restock_obj));
                            rm_obj_from_inven(self_obj, restock_obj);
                            add_obj_to_inven(self_obj, restock_obj);
                        end
                    end
                    else begin
                        if ((critter_inven_obj(self_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(self_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                            inven_unwield(self_obj);
                        end
                    end
                end
                restock_amt := rm_mult_objs_from_inven(self_obj, restock_obj, removed_qty);
                if (restock_amt == 0) then begin
                    toRemove_qty := LVar0;
                    while ((toRemove_qty > 0) and obj_carrying_pid_obj(self_obj, LVar1)) do begin
                        restock_obj := obj_carrying_pid_obj(self_obj, LVar1);
                        rm_obj_from_inven(self_obj, restock_obj);
                        destroy_object(restock_obj);
                        toRemove_qty := toRemove_qty - 1;
                    end
                end
                else begin
                    destroy_object(restock_obj);
                end
            end
            restock_obj := 0;
            restock_amt := 0;
        end
        LVar1 := LVar1 + 1;
    end
end
