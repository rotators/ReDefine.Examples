variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure timed_event_p_proc;
procedure combat_p_proc;
procedure Node998;
procedure Node998_bag;
procedure Node999;
procedure Node500;
procedure Node550;
procedure Node600;
procedure Node650;
procedure Node700;
procedure Node750;
procedure Node800;
procedure Node850;
procedure Node900;
procedure Node950;
procedure Node1000;
procedure Node1050;
procedure Node1100;
procedure Node1150;
procedure Node1200;
procedure Node1250;
procedure Node1300;
procedure Node1350;
procedure Node1400;
procedure Node1450;
procedure Node1500;
procedure Node1600;
procedure Node1650;
procedure Node1700;
procedure Node1750;
procedure Node1800;
procedure Node1850;
procedure Node1900;
procedure Node1950;
procedure Node2000;
procedure Node2100;
procedure Node2150;
procedure Node2200;
procedure Node2250;
procedure Node2300;
procedure Node2350;
procedure Node2400;
procedure Node2450;
procedure Node2500;
procedure Node2550;
procedure Node2600;
procedure Node2650;
procedure Node2700;
procedure Node2750;
procedure Node2800;
procedure Node2850;
procedure Node2900;
procedure Node3000;
procedure Node3050;
procedure Node3100;
procedure Node3150;
procedure Node3200;
procedure Node3250;
procedure Node3350;
procedure Node3400;
procedure Node3450;
procedure Node3500;
procedure Node3550;
procedure Node3600;
procedure Node3650;
procedure Node3700;
procedure Node3750;
procedure Node3800;
procedure Node3850;
procedure Node3900;
procedure Node3950;
procedure Node4000;
procedure Node4050;
procedure Node4100;
procedure Node4150;
procedure Node4200;
procedure Node4250;
procedure Node4300;
procedure Node4350;
procedure Node4400;
procedure Node4450;
procedure Node4500;
procedure Node4550;
procedure Node4600;
procedure Node4650;
procedure Node4700;
procedure Node4750;
procedure Node4800;
procedure Node4850;
procedure Node4900;
procedure Node4950;
procedure Node5000;
procedure Node5050;
procedure Node5100;
procedure Node5150;
procedure Node5200;
procedure Node5250;
procedure Node5300;
procedure Node5350;
procedure Node5400;
procedure Node5450;
procedure Node5500;
procedure Node5550;
procedure Node5600;
procedure Node5700;
procedure Node5750;
procedure Node5800;
procedure Node5850;
procedure Node5900;
procedure Node5950;
procedure Node6000;
procedure Node6050;
procedure Node6100;
procedure Node6150;
procedure Node6200;
procedure Node6250;
procedure Node6300;
procedure Node6350;
procedure Node6400;
procedure Node6450;
procedure Node6500;
procedure Node6550;
procedure Node6600;
procedure Node6650;
procedure Node6700;
procedure Node6750;
procedure Node6800;
procedure Node6850;
procedure Node6900;
procedure Node6950;
procedure Node7000;
procedure Node7050;
procedure Node7100;
procedure Node7150;
procedure Node7200;
procedure Node7250;
procedure Node7300;
procedure Node7350;
procedure Node7400;
procedure Node7450;
procedure Node7500;
procedure Node7520;
procedure Node7550;
procedure Node7600;
procedure Node7650;
procedure Node7700;
procedure Node7750;
procedure Alexa_Barter;
procedure Node_Bridge1;
procedure Node_Bridge2;
procedure Node_Bridge3;
procedure Node_Bridge_QuestBAG;
procedure Node_Bridge_PaymentLow;
procedure Node_Bridge_PaymentMiddle;
procedure Node_Bridge_PaymentHigh;
procedure Node_Bridge_Payment;
procedure Node_Bridge_Alexa_Suicide;
procedure Node_Bridge_Quest1;
procedure Node_Bridge_Quest2;
procedure Node_Bridge_Quest2_pois;
procedure Node_Bridge_Quest3;
procedure Node_Bridge_Quest3_Declined;
procedure Node_Bridge351;
procedure Node_Bridge352;
procedure Node_Bridge354;
procedure Node_Bridge356;
procedure Node_Bridge357;
procedure Node_Bridge358;
procedure Generate_Guards;
procedure Dude_Attack;
procedure Equip_Entrance;
procedure Barter_swap;
procedure Node999_swap;
procedure Node1200_swap;
procedure Node5150_swap;

import variable Alexa_box;
import variable alexa_obj;
import variable alexa_table_trade;
import variable table_swap;

variable Projed_Smycku;
variable Barter_skip;
variable steal_count;
variable sequence;
variable suicide_sequence;
variable question;
variable Barter_modificator := 1;
variable harry_healed;
variable warning_minute;
variable Waiting_time;
variable Suicide_Phase;
variable Fade_Time;
variable Combat_Talk1;
variable Combat_Talk2;
variable Combat_Talk3;
variable Combat_Second_Initialized;
variable Gabriel_Reaction;
variable need_to_wield_gun;
variable harry_obj;
variable guard_obj;
variable Stage_one;
variable Stage_two;
variable Stage_three;
variable New_Map_Enter;
variable talk_after_self_replace_julian;
variable Cosmetic_End;
variable Entrance_Killed;
variable mjulian_guard1;
variable mjulian_guard2;
variable zjulian_guard1;
variable julian_self;
variable trevor_self;
variable mleonard_guard1;
variable mleonard_guard2;
variable mleonard_guard3;
variable mleonard_guard4;
variable mleonard_guard5;
variable mleonard_guard6;
variable mleonard_guard7;
variable mleonard_guard8;
variable zleonard_guard1;
variable zleonard_guard3;
variable zleonard_guard4;
variable fake_alexa;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
    alexa_obj := self_obj;
end

procedure critter_p_proc
begin
    if ((local_var(4) == 1) and (obj_can_see_obj(self_obj, dude_obj) or tile_in_tile_rect(12918, 12896, 15918, 15896, dude_tile))) then begin
        attack(dude_obj);
    end
    if ((global_var(GVAR_RH_ENEMY_LEONARD) == 1) and obj_can_see_obj(self_obj, dude_obj)) then begin
        attack(dude_obj);
    end
    if ((global_var(GVAR_RH_Q_ALEXA_QUEST1) == 8) and (map_var(7) != 1) and ((game_time - Waiting_time) > (10 * 2))) then begin
        set_map_var(7, 1);
    end
    if (not(combat_is_initialized) and (local_var(5) != 1) and (tile_distance(tile_num(self_obj), dude_tile) <= 6) and (local_var(4) != 1) and (global_var(GVAR_RH_ENEMY_LEONARD) != 1) and (obj_can_see_obj(self_obj, dude_obj) and tile_in_tile_rect(12918, 12896, 15918, 15896, dude_tile))) then begin
        dialogue_system_enter;
    end
    if ((global_var(GVAR_RH_Q_ALEXA_QUEST3) == 2) and (local_var(13) != 1)) then begin
        if (Stage_one == 0) then begin
            game_ui_disable;
            fade_out;
            Stage_one := 1;
        end
        if (((game_time - Waiting_time) > (10 * 1)) and (Stage_one == 1) and (Stage_two == 0)) then begin
            set_global_var(GVAR_RH_KILLS_MAN, 5);
            set_global_var(GVAR_RH_KILLS_WOMAN, 3);
            set_global_var(GVAR_RH_KILLS_OTHER, 1);
            set_global_var(GVAR_RH_JULIAN_DEAD, 1);
            Stage_two := 1;
        end
        if (((game_time - Waiting_time) > (10 * 2)) and (Stage_two == 1) and (Stage_three == 0)) then begin
            fade_in;
            Stage_three := 1;
        end
        if (((game_time - Waiting_time) > (10 * 3)) and (Stage_three == 1)) then begin
            game_ui_enable;
            game_time_advance(1 * (60 * (60 * 10)));
            set_local_var(13, 1);
            talk_after_self_replace_julian := 1;
            dialogue_system_enter;
        end
    end
    if (not(combat_is_initialized) and ((global_var(GVAR_RH_Q_JULIAN_QUEST3) == 4) or (global_var(GVAR_RH_Q_QUEST_MARIE) == 5))) then begin
        if (((game_time - Waiting_time) > (10 * 1)) and (Cosmetic_End == 0)) then begin
            set_global_var(GVAR_RH_ENEMY_LEONARD, 1);
            game_ui_enable;
            if ((map_var(3) bwand 4) == 0) then begin
                attack_setup(mjulian_guard1, mleonard_guard3);
            end
            if ((map_var(3) bwand 1) == 0) then begin
                attack_setup(mjulian_guard1, mleonard_guard1);
            end
            if ((map_var(3) bwand 2) == 0) then begin
                attack_setup(mjulian_guard1, mleonard_guard2);
            end
            if ((map_var(3) bwand 512) == 0) then begin
                attack_setup(mjulian_guard1, zleonard_guard1);
            end
            Cosmetic_End := 1;
        end
        if ((get_critter_stat(dude_obj, STAT_current_hp) > 0) and (Combat_Second_Initialized == 1)) then begin
            animate_move_obj_to_tile(self_obj, 15706, 0);
            if (obj_can_see_obj(self_obj, mjulian_guard1)) then begin
                attack_setup(self_obj, mjulian_guard1);
            end
            if (obj_can_see_obj(self_obj, mjulian_guard2)) then begin
                attack_setup(self_obj, mjulian_guard2);
            end
            if (obj_can_see_obj(self_obj, zjulian_guard1)) then begin
                attack_setup(self_obj, zjulian_guard1);
            end
            if (obj_can_see_obj(self_obj, trevor_self)) then begin
                attack_setup(self_obj, trevor_self);
            end
            if (obj_can_see_obj(self_obj, julian_self) and (global_var(GVAR_RH_Q_QUEST_MARIE) == 5)) then begin
                attack_setup(self_obj, julian_self);
            end
        end
        if ((get_critter_stat(dude_obj, STAT_current_hp) > 0) and (Combat_Second_Initialized == 0)) then begin
            if (tile_in_tile_rect(12918, 12893, 18118, 18093, tile_num(mjulian_guard1))) then begin
                Combat_Second_Initialized := 1;
                if (((map_var(3) bwand 2048) == 0) and obj_can_see_obj(mjulian_guard1, zleonard_guard3)) then begin
                    attack_setup(mjulian_guard1, zleonard_guard3);
                end
                if (((map_var(3) bwand 8) == 0) and obj_can_see_obj(mjulian_guard1, mleonard_guard4)) then begin
                    attack_setup(mjulian_guard1, mleonard_guard4);
                end
                if (((map_var(3) bwand 16) == 0) and obj_can_see_obj(mjulian_guard1, mleonard_guard5)) then begin
                    attack_setup(mjulian_guard1, mleonard_guard5);
                end
                if (((map_var(3) bwand 32) == 0) and obj_can_see_obj(mjulian_guard1, mleonard_guard6)) then begin
                    attack_setup(mjulian_guard1, mleonard_guard6);
                end
            end
            if (tile_in_tile_rect(12918, 12893, 18118, 18093, tile_num(mjulian_guard2))) then begin
                Combat_Second_Initialized := 1;
                if (((map_var(3) bwand 2048) == 0) and obj_can_see_obj(mjulian_guard2, zleonard_guard3)) then begin
                    attack_setup(mjulian_guard2, zleonard_guard3);
                end
                if (((map_var(3) bwand 8) == 0) and obj_can_see_obj(mjulian_guard2, mleonard_guard4)) then begin
                    attack_setup(mjulian_guard2, mleonard_guard4);
                end
                if (((map_var(3) bwand 16) == 0) and obj_can_see_obj(mjulian_guard2, mleonard_guard5)) then begin
                    attack_setup(mjulian_guard2, mleonard_guard5);
                end
                if (((map_var(3) bwand 32) == 0) and obj_can_see_obj(mjulian_guard2, mleonard_guard6)) then begin
                    attack_setup(mjulian_guard2, mleonard_guard6);
                end
            end
            if (tile_in_tile_rect(12918, 12893, 18118, 18093, tile_num(zjulian_guard1))) then begin
                Combat_Second_Initialized := 1;
                if (((map_var(3) bwand 2048) == 0) and obj_can_see_obj(zjulian_guard1, zleonard_guard3)) then begin
                    attack_setup(zjulian_guard1, zleonard_guard3);
                end
                if (((map_var(3) bwand 8) == 0) and obj_can_see_obj(zjulian_guard1, mleonard_guard4)) then begin
                    attack_setup(zjulian_guard1, mleonard_guard4);
                end
                if (((map_var(3) bwand 16) == 0) and obj_can_see_obj(zjulian_guard1, mleonard_guard5)) then begin
                    attack_setup(zjulian_guard1, mleonard_guard5);
                end
                if (((map_var(3) bwand 32) == 0) and obj_can_see_obj(zjulian_guard1, mleonard_guard6)) then begin
                    attack_setup(zjulian_guard1, mleonard_guard6);
                end
            end
            if (tile_in_tile_rect(12918, 12893, 18118, 18093, tile_num(trevor_self))) then begin
                Combat_Second_Initialized := 1;
                if (((map_var(3) bwand 2048) == 0) and obj_can_see_obj(trevor_self, zleonard_guard3)) then begin
                    attack_setup(trevor_self, zleonard_guard3);
                end
                if (((map_var(3) bwand 8) == 0) and obj_can_see_obj(trevor_self, mleonard_guard4)) then begin
                    attack_setup(trevor_self, mleonard_guard4);
                end
                if (((map_var(3) bwand 16) == 0) and obj_can_see_obj(trevor_self, mleonard_guard5)) then begin
                    attack_setup(trevor_self, mleonard_guard5);
                end
                if (((map_var(3) bwand 32) == 0) and obj_can_see_obj(trevor_self, mleonard_guard6)) then begin
                    attack_setup(trevor_self, mleonard_guard6);
                end
            end
            if (tile_in_tile_rect(12918, 12893, 18118, 18093, tile_num(julian_self)) and (global_var(GVAR_RH_Q_QUEST_MARIE) == 5)) then begin
                Combat_Second_Initialized := 1;
                if (((map_var(3) bwand 2048) == 0) and obj_can_see_obj(julian_self, zleonard_guard3)) then begin
                    attack_setup(julian_self, zleonard_guard3);
                end
                if (((map_var(3) bwand 8) == 0) and obj_can_see_obj(julian_self, mleonard_guard4)) then begin
                    attack_setup(julian_self, mleonard_guard4);
                end
                if (((map_var(3) bwand 16) == 0) and obj_can_see_obj(julian_self, mleonard_guard5)) then begin
                    attack_setup(julian_self, mleonard_guard5);
                end
                if (((map_var(3) bwand 32) == 0) and obj_can_see_obj(julian_self, mleonard_guard6)) then begin
                    attack_setup(julian_self, mleonard_guard6);
                end
            end
        end
    end
    if (map_var(2) == 1) then begin
        game_ui_disable;
        fade_out;
        move_to(dude_obj, 13704, 0);
        anim(dude_obj, 1000, 2);
        if (party_member_obj(16777729) != 0) then begin
            if (party_member_obj(16777729) != 0) then begin
                if (obj_is_visible_flag(party_member_obj(16777729))) then begin
                    critter_attempt_placement(party_member_obj(16777729), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 1), dude_elevation);
                end
            end
        end
        if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
            if (party_member_obj(16777779) != 0) then begin
                if (obj_is_visible_flag(party_member_obj(16777779))) then begin
                    critter_attempt_placement(party_member_obj(16777779), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 1), dude_elevation);
                end
            end
        end
        if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
            if (party_member_obj(16777811) != 0) then begin
                if (obj_is_visible_flag(party_member_obj(16777811))) then begin
                    critter_attempt_placement(party_member_obj(16777811), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 1), dude_elevation);
                end
            end
        end
        if (party_member_obj(16777812) != 0) then begin
            if (party_member_obj(16777812) != 0) then begin
                if (obj_is_visible_flag(party_member_obj(16777812))) then begin
                    critter_attempt_placement(party_member_obj(16777812), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 1), dude_elevation);
                end
            end
        end
        if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
            if (party_member_obj(16777814) != 0) then begin
                if (obj_is_visible_flag(party_member_obj(16777814))) then begin
                    critter_attempt_placement(party_member_obj(16777814), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 1), dude_elevation);
                end
            end
        end
        if (party_member_obj(16777748) != 0) then begin
            if (party_member_obj(16777748) != 0) then begin
                if (obj_is_visible_flag(party_member_obj(16777748))) then begin
                    critter_attempt_placement(party_member_obj(16777748), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 1), dude_elevation);
                end
            end
        end
        if (party_member_obj(16778017) != 0) then begin
            if (party_member_obj(16778017) != 0) then begin
                if (obj_is_visible_flag(party_member_obj(16778017))) then begin
                    critter_attempt_placement(party_member_obj(16778017), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 1), dude_elevation);
                end
            end
        end
        if (party_member_obj(16778016) != 0) then begin
            if (party_member_obj(16778016) != 0) then begin
                if (obj_is_visible_flag(party_member_obj(16778016))) then begin
                    critter_attempt_placement(party_member_obj(16778016), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 1), dude_elevation);
                end
            end
        end
        if (party_member_obj(16778049) != 0) then begin
            if (party_member_obj(16778049) != 0) then begin
                if (obj_is_visible_flag(party_member_obj(16778049))) then begin
                    critter_attempt_placement(party_member_obj(16778049), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 1), dude_elevation);
                end
            end
        end
        if (party_member_obj(16778050) != 0) then begin
            if (party_member_obj(16778050) != 0) then begin
                if (obj_is_visible_flag(party_member_obj(16778050))) then begin
                    critter_attempt_placement(party_member_obj(16778050), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 1), dude_elevation);
                end
            end
        end
        if (party_member_obj(16778051) != 0) then begin
            if (party_member_obj(16778051) != 0) then begin
                if (obj_is_visible_flag(party_member_obj(16778051))) then begin
                    critter_attempt_placement(party_member_obj(16778051), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 1), dude_elevation);
                end
            end
        end
        if (party_member_obj(16777294) != 0) then begin
            if (party_member_obj(16777294) != 0) then begin
                if (obj_is_visible_flag(party_member_obj(16777294))) then begin
                    critter_attempt_placement(party_member_obj(16777294), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 1), dude_elevation);
                end
            end
        end
        if (party_member_obj(16777729) != 0) then begin
            anim(party_member_obj(16777729), 1000, 2);
        end
        if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
            anim(party_member_obj(16777779), 1000, 2);
        end
        if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
            anim(party_member_obj(16777811), 1000, 2);
        end
        if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
            anim(party_member_obj(16777814), 1000, 2);
        end
        if (party_member_obj(16778017) != 0) then begin
            anim(party_member_obj(16778017), 1000, 2);
        end
        if (party_member_obj(16778016) != 0) then begin
            anim(party_member_obj(16778016), 1000, 2);
        end
        if (party_member_obj(16778049) != 0) then begin
            anim(party_member_obj(16778049), 1000, 2);
        end
        if (party_member_obj(16778050) != 0) then begin
            anim(party_member_obj(16778050), 1000, 2);
        end
        if (party_member_obj(16778051) != 0) then begin
            anim(party_member_obj(16778051), 1000, 2);
        end
        if (party_member_obj(16777812) != 0) then begin
            anim(party_member_obj(16777812), 1000, 2);
        end
        add_timer_event(self_obj, game_ticks(2), 1);
        guard_obj := create_object_sid(16777742, 14905, 0, SCRIPT_RH_LEONM);
        harry_obj := create_object_sid(16777727, 14506, 0, SCRIPT_RH_DBAGQ);
        anim(guard_obj, 1000, 5);
        anim(harry_obj, 1000, 5);
        set_map_var(2, 2);
        Waiting_time := game_time;
    end
    if (map_var(2) == 3) then begin
        if (not(tile_in_tile_rect(12918, 12896, 15918, 15896, dude_tile))) then begin
            float_msg(self_obj, mstr(376), FLOAT_MSG_RED);
            call Node998_bag();
        end
        if (((game_time - Waiting_time) > (10 * 90)) and (warning_minute == 0)) then begin
            float_msg(self_obj, mstr(386), FLOAT_MSG_YELLOW);
            warning_minute := 1;
        end
        if ((game_time - Waiting_time) >= (60 * 10 * 3)) then begin
            float_msg(self_obj, mstr(379), FLOAT_MSG_RED);
            call Node998_bag();
        end
    end
    if ((map_var(2) == 4) or (map_var(2) == 5)) then begin
        game_ui_disable;
        if (map_var(2) == 4) then begin
            harry_healed := 1;
        end
        if (map_var(2) == 5) then begin
            harry_healed := 0;
        end
        set_map_var(2, 6);
        add_timer_event(self_obj, game_ticks(2), 1);
    end
    if ((global_var(GVAR_RH_ALEXA_SUICIDE) == 1) and (Suicide_Phase == 0)) then begin
        game_ui_disable;
        Suicide_Phase := 1;
        add_timer_event(self_obj, game_ticks(1), 3);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(4, 1);
    end
end

procedure talk_p_proc
begin
    anim(dude_obj, 1000, rotation_to_tile(dude_tile, tile_num(self_obj)));
    anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
    if ((local_var(6) == 1) and (Projed_Smycku == 0)) then begin
        float_msg(self_obj, mstr(359), FLOAT_MSG_RED);
        anim(self_obj, 1000, 2);
        Projed_Smycku := 1;
    end
    if (map_var(2) == 3) then begin
        if (dude_gender == 0) then begin
            float_msg(self_obj, mstr(382), FLOAT_MSG_YELLOW);
        end
        if (dude_gender == 1) then begin
            float_msg(self_obj, mstr(383), FLOAT_MSG_YELLOW);
        end
        anim(self_obj, 1000, 2);
        Projed_Smycku := 1;
    end
    if ((talk_after_self_replace_julian == 1) and (Projed_Smycku == 0)) then begin
        talk_after_self_replace_julian := 0;
        start_gdialog(1477, self_obj, 4, -1, -1);
        gsay_start;
        call Node5050();
        gsay_end;
        end_dialogue;
        talk_after_self_replace_julian := 0;
        Projed_Smycku := 1;
    end
    if ((map_var(2) == 6) and (Projed_Smycku == 0)) then begin
        start_gdialog(1477, self_obj, 4, -1, -1);
        gsay_start;
        if (harry_healed == 1) then begin
            call Node5400();
        end
        if (harry_healed == 0) then begin
            call Node5450();
        end
        gsay_end;
        end_dialogue;
        set_map_var(2, 7);
        Projed_Smycku := 1;
    end
    if ((global_var(GVAR_RH_Q_JULIAN_QUEST2) == 8) and (Projed_Smycku == 0)) then begin
        start_gdialog(1477, self_obj, 4, -1, -1);
        gsay_start;
        call Node4150();
        gsay_end;
        end_dialogue;
        Projed_Smycku := 1;
        set_local_var(5, 1);
    end
    if ((global_var(GVAR_RH_JULIAN_DEAD) == 1) and (local_var(8) != 1) and (global_var(GVAR_RH_Q_ALEXA_QUEST3) != 8) and (Projed_Smycku == 0)) then begin
        start_gdialog(1477, self_obj, 4, -1, -1);
        gsay_start;
        call Node4200();
        gsay_end;
        end_dialogue;
        Projed_Smycku := 1;
        set_local_var(5, 1);
    end
    if ((local_var(5) == 1) and (Projed_Smycku == 0)) then begin
        start_gdialog(1477, self_obj, 4, -1, -1);
        gsay_start;
        call Node550();
        gsay_end;
        end_dialogue;
        Projed_Smycku := 1;
    end
    if ((local_var(5) != 1) and (Projed_Smycku == 0)) then begin
        start_gdialog(1477, self_obj, 4, -1, -1);
        gsay_start;
        call Node500();
        gsay_end;
        end_dialogue;
        set_local_var(5, 1);
        set_map_var(0, 1);
        if (global_var(GVAR_RH_NORTH_KNOWN) == 0) then begin
            set_global_var(GVAR_RH_NORTH_KNOWN, 1);
        end
        else begin
            set_global_var(GVAR_RH_NORTH_KNOWN, 2);
        end
        Projed_Smycku := 1;
    end
    Projed_Smycku := 0;
    if ((global_var(GVAR_RH_Q_ALEXA_QUEST1) == 8) and (map_var(7) != 1)) then begin
        Waiting_time := game_time;
    end
    if ((global_var(GVAR_RH_Q_ALEXA_QUEST3) == 4) and (local_var(13) != 1)) then begin
        set_local_var(13, 1);
        load_map(7, 0);
    end
    if ((local_var(10) == 1) and (local_var(11) != 1)) then begin
        set_local_var(11, 1);
        set_global_var(GVAR_TOWN_REP_RATHOLE, global_var(GVAR_TOWN_REP_RATHOLE) - 20);
        display_mstr(390);
        load_map(89, 0);
    end
end

procedure destroy_p_proc
begin
    if ((global_var(GVAR_RH_JULIAN_DEAD) != 1) and (global_var(GVAR_RH_Q_QUEST_MARIE) == 5) and julian_self) then begin
        float_msg(julian_self, mstr(403), FLOAT_MSG_YELLOW);
    end
    if ((local_var(10) == 1) and (local_var(11) == 1)) then begin
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - 50);
    end
    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
    set_global_var(GVAR_KARMA_DEFENDER, 0);
    set_global_var(GVAR_KARMA_WANDERER, 0);
    set_global_var(GVAR_KARMA_BETRAYER, 0);
    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
    set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
    if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
    end
    else begin
        if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                    set_global_var(GVAR_KARMA_DEFENDER, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                        set_global_var(GVAR_KARMA_WANDERER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                            set_global_var(GVAR_KARMA_BETRAYER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                end
                                else begin
                                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    set_global_var(GVAR_RH_ALEXA_DEAD, 1);
    set_global_var(GVAR_TOWN_REP_RATHOLE, global_var(GVAR_TOWN_REP_RATHOLE) + 20);
    add_timer_event(alexa_table_trade, game_ticks(0), 1);
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_BAD_MONSTER, global_var(GVAR_BAD_MONSTER) + 1);
        if (critter_kill_type(self_obj) == KILL_TYPE_children_kills) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(GVAR_TOWN_REP_RATHOLE, global_var(GVAR_TOWN_REP_RATHOLE) + -8);
                debug_msg("Added " + -8 + " to Town Rep");
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 5);
        debug_msg("Player gains " + 5 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(GVAR_TOWN_REP_RATHOLE, global_var(GVAR_TOWN_REP_RATHOLE) + 2);
        debug_msg("Added " + 2 + " to Town Rep");
    end
    restock_obj := create_object(568, 0, 0);
    add_mult_objs_to_inven(self_obj, restock_obj, 1);
    if ((global_var(GVAR_RH_Q_ALEXA_QUEST1) != 0) and (global_var(GVAR_RH_Q_ALEXA_QUEST1) != 8)) then begin
        set_global_var(GVAR_RH_Q_ALEXA_QUEST1, 0);
    end
    if ((global_var(GVAR_RH_Q_ALEXA_QUEST2) != 0) and (global_var(GVAR_RH_Q_ALEXA_QUEST2) < 5)) then begin
        set_global_var(GVAR_RH_Q_ALEXA_QUEST2, 0);
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(5) == 1) then begin
        display_mstr(150);
    end
    else begin
        display_mstr(100);
    end
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(5) == 1) then begin
        display_mstr(250);
    end
    else begin
        display_mstr(200);
    end
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(4, 1);
        set_global_var(GVAR_RH_ENEMY_LEONARD, 1);
        rm_timer_event(self_obj);
        if (map_var(2) != 0) then begin
            set_map_var(2, 8);
        end
    end
end

procedure map_enter_p_proc
begin
    if (global_var(GVAR_RH_ALEXA_DEAD) == 1) then begin
        destroy_object(self_obj);
    end
    New_Map_Enter := 0;
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 236);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_TOUGH_GUARD);
    if (not(is_loading_game)) then begin
        if ((local_var(10) == 1) and (local_var(11) == 1) and (global_var(GVAR_RH_Q_QUEST_MARIE) != 5)) then begin
            set_global_var(GVAR_RH_ENEMY_LEONARD, 1);
        end
        if ((global_var(GVAR_RH_Q_ALEXA_QUEST3) == 8) or (global_var(GVAR_RH_Q_ALEXA_QUEST3) == 3)) then begin
            set_local_var(8, 1);
        end
        if ((global_var(GVAR_RH_Q_QUEST_MARIE) == 5) or (global_var(GVAR_RH_Q_JULIAN_QUEST3) == 4) and (local_var(12) == 1) and (New_Map_Enter == 0)) then begin
            set_global_var(GVAR_RH_ENEMY_LEONARD, 1);
            set_local_var(4, 1);
        end
        if ((global_var(GVAR_RH_Q_JULIAN_QUEST3) == 4) or (global_var(GVAR_RH_Q_QUEST_MARIE) == 5) and (local_var(12) != 1)) then begin
            set_local_var(12, 1);
            set_local_var(4, 0);
            move_to(self_obj, 13706, 0);
            anim(self_obj, 1000, 2);
            New_Map_Enter := 1;
            call Generate_Guards();
            call Dude_Attack();
        end
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        sequence := sequence + 1;
    end
    if (map_var(2) == 2) then begin
        if (sequence == 1) then begin
            fade_in;
            add_timer_event(self_obj, game_ticks(1), 1);
        end
        if (sequence == 2) then begin
            float_msg(self_obj, mstr(370), FLOAT_MSG_YELLOW);
            add_timer_event(self_obj, game_ticks(6), 1);
        end
        if (sequence == 3) then begin
            float_msg(harry_obj, mstr(380), FLOAT_MSG_YELLOW);
            add_timer_event(self_obj, game_ticks(6), 1);
        end
        if (sequence == 4) then begin
            float_msg(self_obj, mstr(371), FLOAT_MSG_YELLOW);
            add_timer_event(self_obj, game_ticks(6), 1);
        end
        if (sequence == 5) then begin
            float_msg(harry_obj, mstr(381), FLOAT_MSG_YELLOW);
            add_timer_event(self_obj, game_ticks(6), 1);
        end
        if (sequence == 6) then begin
            float_msg(self_obj, mstr(372), FLOAT_MSG_YELLOW);
            add_timer_event(self_obj, game_ticks(6), 1);
        end
        if (sequence == 7) then begin
            reg_anim_func(2, self_obj);
            if (not(obj_is_carrying_obj_pid(self_obj, 18))) then begin
                restock_obj := create_object(18, 0, 0);
                add_mult_objs_to_inven(self_obj, restock_obj, 1);
            end
            if (obj_is_carrying_obj_pid(self_obj, 18)) then begin
                wield_obj(obj_carrying_pid_obj(self_obj, 18));
            end
            add_timer_event(self_obj, game_ticks(2), 1);
        end
        if (sequence == 8) then begin
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            reg_anim_animate(self_obj, 45, -1);
            reg_anim_func(3, 0);
            play_sfx("whg1sxx1");
            play_sfx("hfxxxxyb");
            reg_anim_func(2, harry_obj);
            reg_anim_func(1, 1);
            reg_anim_animate(harry_obj, 20, -1);
            reg_anim_func(3, 0);
            critter_heal(harry_obj, -20);
            add_timer_event(self_obj, game_ticks(3), 1);
        end
        if (sequence == 9) then begin
            if (dude_gender == 0) then begin
                float_msg(self_obj, mstr(373), FLOAT_MSG_YELLOW);
            end
            if (dude_gender == 1) then begin
                float_msg(self_obj, mstr(374), FLOAT_MSG_YELLOW);
            end
            game_ui_enable;
            set_map_var(2, 3);
        end
    end
    if (map_var(2) == 6) then begin
        if (sequence == 10) then begin
            float_msg(self_obj, mstr(375), FLOAT_MSG_YELLOW);
            add_timer_event(self_obj, game_ticks(5), 1);
        end
        if (sequence == 11) then begin
            reg_anim_func(2, self_obj);
            reg_anim_func(1, 1);
            reg_anim_animate(self_obj, 45, -1);
            reg_anim_func(3, 0);
            reg_anim_func(2, harry_obj);
            reg_anim_func(1, 1);
            reg_anim_animate(harry_obj, 34, -1);
            reg_anim_func(3, 0);
            script_overrides;
            display_mstr(377);
            play_sfx("whg1sxx1");
            add_timer_event(self_obj, game_ticks(3), 1);
        end
        if (sequence == 12) then begin
            float_msg(self_obj, mstr(378), FLOAT_MSG_YELLOW);
            kill_critter(harry_obj, 24);
            if (obj_is_carrying_obj_pid(self_obj, 18)) then begin
                inven_unwield(self_obj);
            end
            add_timer_event(self_obj, game_ticks(3), 1);
        end
        if (sequence == 13) then begin
            fade_out;
            game_time_advance(10 * (60 * 10));
            destroy_object(guard_obj);
            destroy_object(harry_obj);
            create_object(33555758, 14506, 0);
            add_timer_event(self_obj, game_ticks(2), 1);
        end
        if (sequence == 14) then begin
            fade_in;
            add_timer_event(self_obj, game_ticks(1), 1);
        end
        if (sequence == 15) then begin
            game_ui_enable;
            rm_timer_event(self_obj);
            dialogue_system_enter;
        end
    end
    if (fixed_param == 2) then begin
        if (steal_count == 2) then begin
            steal_count := 3;
            if (dude_gender == 0) then begin
                float_msg(self_obj, mstr(354), FLOAT_MSG_RED);
            end
            if (dude_gender == 1) then begin
                float_msg(self_obj, mstr(355), FLOAT_MSG_RED);
            end
            call Node998_bag();
        end
        if (steal_count == 1) then begin
            steal_count := 2;
            if (dude_gender == 0) then begin
                float_msg(self_obj, mstr(360), FLOAT_MSG_RED);
            end
            if (dude_gender == 1) then begin
                float_msg(self_obj, mstr(361), FLOAT_MSG_RED);
            end
        end
        if (steal_count == 0) then begin
            steal_count := 1;
            if (dude_gender == 0) then begin
                float_msg(self_obj, mstr(360), FLOAT_MSG_RED);
            end
            if (dude_gender == 1) then begin
                float_msg(self_obj, mstr(361), FLOAT_MSG_RED);
            end
        end
    end
    if (fixed_param == 3) then begin
        if (fixed_param == 3) then begin
            suicide_sequence := suicide_sequence + 1;
        end
        if (suicide_sequence == 1) then begin
            gfade_out(600);
            add_timer_event(self_obj, game_ticks(1), 3);
        end
        if (suicide_sequence == 2) then begin
            fake_alexa := create_object(16777741, tile_num(self_obj), elevation(self_obj));
            anim(fake_alexa, 1000, obj_get_rot(self_obj));
            set_obj_visibility(self_obj, 1);
            play_sfx("whg1sxx1");
            play_sfx("hfxxxxyb");
            add_timer_event(self_obj, game_ticks(1), 3);
        end
        if (suicide_sequence == 3) then begin
            if (not(obj_is_carrying_obj_pid(dude_obj, 568) >= 1)) then begin
                restock_obj := create_object(568, 0, 0);
                add_mult_objs_to_inven(fake_alexa, restock_obj, 1);
            end
            move_obj_inven_to_obj(self_obj, fake_alexa);
            add_timer_event(self_obj, 5, 3);
        end
        if (suicide_sequence == 4) then begin
            critter_heal(fake_alexa, -(get_critter_stat(self_obj, STAT_max_hp) + 40));
            add_timer_event(self_obj, 5, 3);
        end
        if (suicide_sequence == 5) then begin
            gfade_in(600);
            add_timer_event(self_obj, game_ticks(1), 3);
        end
        if (suicide_sequence == 6) then begin
            set_global_var(GVAR_RH_ALEXA_DEAD, 1);
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_BAD_MONSTER, global_var(GVAR_BAD_MONSTER) + 1);
                if (critter_kill_type(self_obj) == KILL_TYPE_children_kills) then begin
                    if (source_obj == dude_obj) then begin
                        set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                        set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -15);
                        debug_msg("Player gains " + -15 + " Karma Points.");
                        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                        set_global_var(GVAR_KARMA_DEFENDER, 0);
                        set_global_var(GVAR_KARMA_WANDERER, 0);
                        set_global_var(GVAR_KARMA_BETRAYER, 0);
                        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                            set_global_var(GVAR_KARMA_WANDERER, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                                            end
                                            else begin
                                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                                end
                                                else begin
                                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                                    end
                                                    else begin
                                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                        set_global_var(GVAR_TOWN_REP_RATHOLE, global_var(GVAR_TOWN_REP_RATHOLE) + -8);
                        debug_msg("Added " + -8 + " to Town Rep");
                    end
                end
                if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
                    set_global_var(GVAR_BERSERKER_REPUTATION, 1);
                    set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                end
                if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
                    set_global_var(GVAR_CHAMPION_REPUTATION, 1);
                    set_global_var(GVAR_BERSERKER_REPUTATION, 0);
                end
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 5);
                debug_msg("Player gains " + 5 + " Karma Points.");
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(GVAR_TOWN_REP_RATHOLE, global_var(GVAR_TOWN_REP_RATHOLE) + 2);
                debug_msg("Added " + 2 + " to Town Rep");
            end
            set_global_var(GVAR_TOWN_REP_RATHOLE, global_var(GVAR_TOWN_REP_RATHOLE) + 20);
            game_ui_enable;
            destroy_object(self_obj);
        end
    end
end

procedure combat_p_proc
begin
    if ((global_var(GVAR_RH_Q_JULIAN_QUEST3) == 4) and obj_can_see_obj(self_obj, dude_obj) and (Combat_Talk1 == 0)) then begin
        if (obj_on_screen(self_obj) == 1) then begin
            float_msg(self_obj, mstr(400), FLOAT_MSG_RED);
        end
        Combat_Talk1 := 1;
    end
    if ((global_var(GVAR_RH_Q_QUEST_MARIE) == 5) and (global_var(GVAR_RH_JULIAN_DEAD) == 1) and (Combat_Talk2 == 0)) then begin
        float_msg(self_obj, mstr(401), FLOAT_MSG_YELLOW);
        Combat_Talk2 := 1;
    end
    if ((global_var(GVAR_RH_ENEMY_LEONARD) == 1) and (get_critter_stat(self_obj, STAT_current_hp) < 6) and (Combat_Talk3 == 0)) then begin
        float_msg(self_obj, mstr(402), FLOAT_MSG_YELLOW);
        Combat_Talk3 := 1;
    end
end

procedure Node998
begin
    set_local_var(4, 1);
    set_global_var(GVAR_RH_ENEMY_LEONARD, 1);
    rm_timer_event(self_obj);
    if (map_var(2) != 0) then begin
        set_map_var(2, 8);
    end
end

procedure Node998_bag
begin
    set_local_var(4, 1);
    set_global_var(GVAR_RH_ENEMY_LEONARD, 1);
    rm_timer_event(self_obj);
end

procedure Node999
begin
    if (need_to_wield_gun == 1) then begin
        if (obj_is_carrying_obj_pid(self_obj, 18) >= 1) then begin
            wield_obj(obj_carrying_pid_obj(self_obj, 18));
        end
        need_to_wield_gun := 0;
    end
    anim(self_obj, 1000, 2);
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0) and (Gabriel_Reaction == 1)) then begin
        add_timer_event(party_member_obj(16777811), 10, 15);
    end
    Gabriel_Reaction := 0;
end

procedure Node500
begin
    Reply(500);
    giq_option(4, NAME, mstr(501) + dude_name + mstr(509), Node650, NEUTRAL_REACTION);
    giq_option(4, NAME, 502, Node1650, NEUTRAL_REACTION);
    giq_option(4, NAME, 503, Node_Bridge354, NEUTRAL_REACTION);
    giq_option(4, NAME, 504, Node600, NEUTRAL_REACTION);
    giq_option(4, NAME, 505, Node_Bridge357, NEUTRAL_REACTION);
    giq_option(-3, NAME, dude_name + mstr(506), Node1100, NEUTRAL_REACTION);
    giq_option(-3, NAME, 507, Node1150, NEUTRAL_REACTION);
    giq_option(-3, NAME, 508, Node_Bridge354, NEUTRAL_REACTION);
end

procedure Node550
begin
    if (global_var(GVAR_RH_JULIAN_DEAD) != 1) then begin
        Reply(550);
    end
    if (global_var(GVAR_RH_JULIAN_DEAD) == 1) then begin
        Reply(551);
    end
    if ((global_var(GVAR_RH_Q_ALEXA_QUEST1) == 4) or (global_var(GVAR_RH_Q_ALEXA_QUEST2) == 4) or ((global_var(GVAR_RH_Q_ALEXA_QUEST2) == 5) and (local_var(9) == 1))) then begin
        giq_option(4, NAME, 552, Node3000, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 553, Node1950, NEUTRAL_REACTION);
    giq_option(4, NAME, 554, Node1200, NEUTRAL_REACTION);
    if ((global_var(GVAR_RH_Q_ALEXA_QUEST1) == 0) and (global_var(GVAR_RH_Q_JULIAN_QUEST2) != 6) and (global_var(GVAR_RH_JULIAN_DEAD) != 1)) then begin
        giq_option(4, NAME, 555, Node2350, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_RH_Q_ALEXA_QUEST1) == 8) and ((global_var(GVAR_RH_Q_ALEXA_QUEST2) == 0) or ((global_var(GVAR_RH_Q_ALEXA_QUEST2) == 5) and (local_var(9) == 1))) and (global_var(GVAR_RH_Q_JULIAN_QUEST2) != 6) and (global_var(GVAR_RH_JULIAN_DEAD) != 1)) then begin
        giq_option(4, NAME, 555, Node3050, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_RH_JULIAN_DEAD) == 1) then begin
        giq_option(4, NAME, 555, Node3650, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_RH_Q_JULIAN_QUEST2) == 6) and (global_var(GVAR_RH_JULIAN_DEAD) != 1) and ((global_var(GVAR_RH_Q_ALEXA_QUEST1) == 0) or (global_var(GVAR_RH_Q_ALEXA_QUEST1) == 8))) then begin
        giq_option(4, NAME, 555, Node3650, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 556, Node3500, NEUTRAL_REACTION);
    if ((local_var(7) == 1) and (item_caps_total(dude_obj) > 499) and obj_carrying_pid_obj(Alexa_box, 91) and (global_var(GVAR_RH_Q_JULIAN_QUEST1) == 6)) then begin
        giq_option(4, NAME, 557, Node6650, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_RH_Q_QUEST_MARIE) == 4) and (global_var(GVAR_RH_AlexaMayKilledMarie) == 1)) then begin
        giq_option(4, NAME, 558, Node7050, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 559, Node999, NEUTRAL_REACTION);
    if ((global_var(GVAR_RH_Q_ALEXA_QUEST1) == 4) or (global_var(GVAR_RH_Q_ALEXA_QUEST2) == 4) or ((global_var(GVAR_RH_Q_ALEXA_QUEST2) == 5) and (local_var(9) == 1))) then begin
        giq_option(-3, NAME, 560, Node6350, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 561, Alexa_Barter, NEUTRAL_REACTION);
    if ((global_var(GVAR_RH_Q_ALEXA_QUEST1) == 0) and (global_var(GVAR_RH_Q_JULIAN_QUEST2) != 6) and (global_var(GVAR_RH_JULIAN_DEAD) != 1)) then begin
        giq_option(-3, NAME, dude_name + mstr(562), Node1350, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_RH_Q_ALEXA_QUEST1) == 8) and ((global_var(GVAR_RH_Q_ALEXA_QUEST2) == 0) or ((global_var(GVAR_RH_Q_ALEXA_QUEST2) == 5) and (local_var(9) != 1))) and (global_var(GVAR_RH_Q_JULIAN_QUEST2) != 6) and (global_var(GVAR_RH_JULIAN_DEAD) != 1)) then begin
        giq_option(-3, NAME, dude_name + mstr(562), Node6100, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_RH_Q_ALEXA_QUEST1) == 8) and (global_var(GVAR_RH_Q_ALEXA_QUEST2) == 8) and (global_var(GVAR_RH_Q_ALEXA_QUEST3) == 0) and (global_var(GVAR_RH_Q_JULIAN_QUEST2) != 6) and (global_var(GVAR_RH_JULIAN_DEAD) != 1)) then begin
        giq_option(-3, NAME, dude_name + mstr(562), Node6300, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_RH_JULIAN_DEAD) == 1) then begin
        giq_option(-3, NAME, dude_name + mstr(562), Node3650, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_RH_Q_JULIAN_QUEST2) == 6) and (global_var(GVAR_RH_JULIAN_DEAD) != 1) and ((global_var(GVAR_RH_Q_ALEXA_QUEST1) == 0) or (global_var(GVAR_RH_Q_ALEXA_QUEST1) == 8))) then begin
        giq_option(-3, NAME, dude_name + mstr(562), Node3650, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 563, Node999, NEUTRAL_REACTION);
end

procedure Node600
begin
    Reply(600);
    giq_option(4, NAME, mstr(601) + dude_name + mstr(603), Node650, NEUTRAL_REACTION);
    giq_option(4, NAME, 602, Node_Bridge354, NEUTRAL_REACTION);
end

procedure Node650
begin
    Reply(650);
    if ((dude_skill(SKILL_SPEECH) >= 60) and (dude_charisma > 5) and not((global_var(GVAR_RH_Q_JULIAN_QUEST1) == 0) or (global_var(GVAR_RH_Q_JULIAN_QUEST1) == 9)) and (global_var(GVAR_RH_JULIAN_DEAD) != 1)) then begin
        giq_option(6, NAME, 653, Node1750, NEUTRAL_REACTION);
    end
    if ((dude_skill(SKILL_SPEECH) >= 60) and (dude_charisma < 6) and not((global_var(GVAR_RH_Q_JULIAN_QUEST1) == 0) or (global_var(GVAR_RH_Q_JULIAN_QUEST1) == 9)) and (global_var(GVAR_RH_JULIAN_DEAD) != 1)) then begin
        giq_option(6, NAME, 653, Node1800, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 652, Node_Bridge354, NEUTRAL_REACTION);
    giq_option(4, NAME, 651, Node700, NEUTRAL_REACTION);
    giq_option(4, NAME, 654, Node_Bridge357, NEUTRAL_REACTION);
end

procedure Node700
begin
    Reply(700);
    if (dude_iq < 6) then begin
        giq_option(4, NAME, 701, Node_Bridge356, NEUTRAL_REACTION);
    end
    giq_option(7, NAME, 702, Node750, NEUTRAL_REACTION);
    giq_option(4, NAME, 703, Node1700, NEUTRAL_REACTION);
    giq_option(4, NAME, 704, Node_Bridge357, NEUTRAL_REACTION);
end

procedure Node750
begin
    Reply(750);
    giq_option(4, NAME, 751, Node1950, NEUTRAL_REACTION);
    giq_option(4, NAME, 752, Node800, NEUTRAL_REACTION);
    if ((global_var(GVAR_RH_Q_ALEXA_QUEST1) == 0) and (global_var(GVAR_RH_Q_JULIAN_QUEST2) != 6) and (global_var(GVAR_RH_JULIAN_DEAD) != 1)) then begin
        giq_option(4, NAME, 753, Node2350, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_RH_Q_JULIAN_QUEST2) == 6) and ((global_var(GVAR_RH_Q_ALEXA_QUEST1) == 0) or (global_var(GVAR_RH_Q_ALEXA_QUEST1) == 8))) then begin
        giq_option(4, NAME, 753, Node3650, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 754, Node3500, NEUTRAL_REACTION);
    if ((global_var(GVAR_RH_Q_QUEST_MARIE) == 4) and (global_var(GVAR_RH_AlexaMayKilledMarie) == 1)) then begin
        giq_option(4, NAME, 756, Node7050, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 757, Node999, NEUTRAL_REACTION);
end

procedure Node800
begin
    if (dude_gender == 0) then begin
        Reply(800);
    end
    if (dude_gender == 1) then begin
        Reply(801);
    end
    giq_option(4, NAME, 802, Node850, NEUTRAL_REACTION);
    giq_option(4, NAME, 803, Node900, NEUTRAL_REACTION);
    giq_option(4, NAME, 804, Node950, NEUTRAL_REACTION);
    giq_option(4, NAME, 805, Node1000, NEUTRAL_REACTION);
end

procedure Node850
begin
    Reply(850);
    if (item_caps_total(dude_obj) > 24) then begin
        giq_option(4, NAME, 851, Node_Bridge1, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 852, Node1600, NEUTRAL_REACTION);
end

procedure Node900
begin
    Reply(900);
    if (item_caps_total(dude_obj) > 9) then begin
        giq_option(4, NAME, 901, Node_Bridge2, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 902, Node1600, NEUTRAL_REACTION);
end

procedure Node950
begin
    Reply(950);
    if (item_caps_total(dude_obj) > 49) then begin
        giq_option(4, NAME, 951, Node_Bridge3, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 952, Node1600, NEUTRAL_REACTION);
end

procedure Node1000
begin
    Reply(1000);
    giq_option(4, NAME, 1001, Node1050, NEUTRAL_REACTION);
    giq_option(4, NAME, 1002, Node1850, NEUTRAL_REACTION);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 1003, Node1900, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, 1004, Node1900, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 1005, Node1200, NEUTRAL_REACTION);
end

procedure Node1050
begin
    Reply(1050);
    giq_option(4, NAME, 1051, Node3750, NEUTRAL_REACTION);
    if ((dude_gender == 0) and (dude_skill(SKILL_SPEECH) >= 60)) then begin
        giq_option(6, NAME, 1052, Node3700, NEUTRAL_REACTION);
    end
    if ((dude_gender == 1) and (dude_skill(SKILL_SPEECH) >= 60)) then begin
        giq_option(6, NAME, 1053, Node3700, NEUTRAL_REACTION);
    end
    if (get_critter_stat(dude_obj, STAT_current_hp) <= (get_critter_stat(dude_obj, STAT_max_hp) / 2)) then begin
        giq_option(4, NAME, 1054, Node3700, NEUTRAL_REACTION);
    end
    if (not((global_var(GVAR_RH_Q_JULIAN_QUEST1) == 0) or (global_var(GVAR_RH_Q_JULIAN_QUEST1) == 9)) and (global_var(GVAR_RH_JULIAN_DEAD) != 1)) then begin
        giq_option(4, NAME, 1055, Node_Bridge358, NEUTRAL_REACTION);
    end
end

procedure Node1100
begin
    Reply(1100);
    giq_option(-3, NAME, 1101, Node1200, NEUTRAL_REACTION);
    giq_option(-3, NAME, 1102, Node1250, NEUTRAL_REACTION);
    if ((global_var(GVAR_RH_Q_ALEXA_QUEST1) == 0) and (global_var(GVAR_RH_Q_JULIAN_QUEST2) != 6) and (global_var(GVAR_RH_JULIAN_DEAD) != 1)) then begin
        giq_option(-3, NAME, 1103, Node1350, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_RH_Q_JULIAN_QUEST2) == 6) and ((global_var(GVAR_RH_Q_ALEXA_QUEST1) == 0) or (global_var(GVAR_RH_Q_ALEXA_QUEST1) == 8))) then begin
        giq_option(-3, NAME, 1103, Node3650, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 1104, Node999, NEUTRAL_REACTION);
end

procedure Node1150
begin
    Reply(1150);
    giq_option(-3, NAME, 1151, Node999, NEUTRAL_REACTION);
end

procedure Node1200
begin
    Reply(1200);
    giq_option(1, NAME, 1201, Alexa_Barter, NEUTRAL_REACTION);
end

procedure Node1250
begin
    Reply(1250);
    giq_option(-3, NAME, 1251, Node1200, NEUTRAL_REACTION);
    if ((global_var(GVAR_RH_Q_ALEXA_QUEST1) == 0) and (global_var(GVAR_RH_Q_JULIAN_QUEST2) != 6) and (global_var(GVAR_RH_JULIAN_DEAD) != 1)) then begin
        giq_option(-3, NAME, 1252, Node1350, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_RH_Q_JULIAN_QUEST2) == 6) and ((global_var(GVAR_RH_Q_ALEXA_QUEST1) == 0) or (global_var(GVAR_RH_Q_ALEXA_QUEST1) == 8))) then begin
        giq_option(-3, NAME, 1252, Node3650, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 1253, Node999, NEUTRAL_REACTION);
end

procedure Node1300
begin
    Reply(1300);
    if ((global_var(GVAR_RH_Q_JULIAN_QUEST1) == 6) and obj_carrying_pid_obj(Alexa_box, 91) and ((local_var(7) != 1) or (local_var(7) != 2))) then begin
        giq_option(4, NAME, 1303, Node5150_swap, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 1301, Node1200_swap, NEUTRAL_REACTION);
    giq_option(4, NAME, 1302, Node999_swap, NEUTRAL_REACTION);
    giq_option(-3, NAME, 1304, Barter_swap, NEUTRAL_REACTION);
    giq_option(-3, NAME, 1305, Node999_swap, NEUTRAL_REACTION);
end

procedure Node1350
begin
    if (dude_gender == 0) then begin
        Reply(1350);
    end
    if (dude_gender == 1) then begin
        Reply(1351);
    end
    giq_option(-3, NAME, 1352, Node1450, NEUTRAL_REACTION);
    giq_option(-3, NAME, 1353, Node1400, NEUTRAL_REACTION);
end

procedure Node1400
begin
    Reply(1400);
    giq_option(1, NAME, 1401, Node999, NEUTRAL_REACTION);
end

procedure Node1450
begin
    Reply(1450);
    giq_option(-3, NAME, 1451, Node1500, NEUTRAL_REACTION);
    giq_option(-3, NAME, 1452, Node1150, NEUTRAL_REACTION);
end

procedure Node1500
begin
    Reply(1500);
    set_global_var(GVAR_RH_Q_ALEXA_QUEST1, 4);
    giq_option(-3, NAME, 1501, Node999, NEUTRAL_REACTION);
end

procedure Node1600
begin
    Reply(1600);
    giq_option(4, NAME, 1601, Node850, NEUTRAL_REACTION);
    giq_option(4, NAME, 1602, Node900, NEUTRAL_REACTION);
    giq_option(4, NAME, 1603, Node950, NEUTRAL_REACTION);
    giq_option(4, NAME, 1604, Node1000, NEUTRAL_REACTION);
end

procedure Node1650
begin
    Reply(1650);
    giq_option(4, NAME, mstr(1651) + dude_name + mstr(1652), Node650, NEUTRAL_REACTION);
    giq_option(4, NAME, 1653, Node998, NEUTRAL_REACTION);
end

procedure Node1700
begin
    Reply(1700);
    giq_option(4, NAME, 1701, Node1950, NEUTRAL_REACTION);
    giq_option(4, NAME, 1702, Node800, NEUTRAL_REACTION);
    if ((global_var(GVAR_RH_Q_ALEXA_QUEST1) == 0) and (global_var(GVAR_RH_Q_JULIAN_QUEST2) != 6) and (global_var(GVAR_RH_JULIAN_DEAD) != 1)) then begin
        giq_option(4, NAME, 1703, Node2350, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_RH_Q_JULIAN_QUEST2) == 6) and ((global_var(GVAR_RH_Q_ALEXA_QUEST1) == 0) or (global_var(GVAR_RH_Q_ALEXA_QUEST1) == 8))) then begin
        giq_option(4, NAME, 1703, Node3650, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 1704, Node3500, NEUTRAL_REACTION);
    if ((global_var(GVAR_RH_Q_QUEST_MARIE) == 4) and (global_var(GVAR_RH_AlexaMayKilledMarie) == 1)) then begin
        giq_option(4, NAME, 1705, Node7050, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 1706, Node999, NEUTRAL_REACTION);
end

procedure Node1750
begin
    Reply(1750);
    if (not((global_var(GVAR_RH_Q_JULIAN_QUEST1) == 0) or (global_var(GVAR_RH_Q_JULIAN_QUEST1) == 9))) then begin
        if (dude_gender == 0) then begin
            giq_option(4, NAME, 1751, Node3850, NEUTRAL_REACTION);
        end
        if (dude_gender == 1) then begin
            giq_option(4, NAME, 1755, Node3850, NEUTRAL_REACTION);
        end
    end
    if (global_var(GVAR_RH_JULIAN_WANT_LEONARD) == 1) then begin
        giq_option(4, NAME, 1752, Node4050, NEUTRAL_REACTION);
    end
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 1753, Node_Bridge356, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, 1754, Node_Bridge356, NEUTRAL_REACTION);
    end
end

procedure Node1800
begin
    Reply(1800);
    giq_option(4, NAME, 1801, Node_Bridge352, NEUTRAL_REACTION);
end

procedure Node1850
begin
    Reply(1850);
    giq_option(4, NAME, 1851, Node1900, NEUTRAL_REACTION);
    giq_option(4, NAME, 1852, Node1050, NEUTRAL_REACTION);
    giq_option(4, NAME, 1853, Node1950, NEUTRAL_REACTION);
end

procedure Node1900
begin
    if (dude_gender == 0) then begin
        Reply(1900);
    end
    if (dude_gender == 1) then begin
        Reply(1901);
    end
    giq_option(4, NAME, 1902, Node850, NEUTRAL_REACTION);
    giq_option(4, NAME, 1903, Node900, NEUTRAL_REACTION);
    giq_option(4, NAME, 1904, Node950, NEUTRAL_REACTION);
    giq_option(4, NAME, 1905, Node1000, NEUTRAL_REACTION);
end

procedure Node1950
begin
    Reply(1950);
    if (local_var(14) != 1) then begin
        giq_option(4, NAME, 1951, Node3350, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_RH_JULIAN_DEAD) != 1) and (local_var(15) != 1)) then begin
        giq_option(4, NAME, 1953, Node2000, NEUTRAL_REACTION);
    end
    if ((local_var(14) == 1) or (local_var(15) == 1)) then begin
        giq_option(4, NAME, 1956, Node4350, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_RH_JULIAN_DEAD) != 1) then begin
        giq_option(4, NAME, 1957, Node4800, NEUTRAL_REACTION);
    end
    if ((map_var(1) == 1) and (local_var(20) != 1)) then begin
        giq_option(4, NAME, 1958, Node5700, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_RH_Q_QUEST_MARIE) == 4) then begin
        giq_option(4, NAME, 1959, Node6900, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 1960, Node5600, NEUTRAL_REACTION);
end

procedure Node2000
begin
    if (dude_gender == 0) then begin
        Reply(2000);
    end
    if (dude_gender == 1) then begin
        Reply(2001);
    end
    set_local_var(15, 1);
    giq_option(4, NAME, 2004, Node4350, NEUTRAL_REACTION);
    giq_option(4, NAME, 2002, Node1950, NEUTRAL_REACTION);
    giq_option(4, NAME, 2003, Node5600, NEUTRAL_REACTION);
end

procedure Node2100
begin
    Reply(2100);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 2101, Node2150, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, 2102, Node2150, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 2103, Node2200, NEUTRAL_REACTION);
    giq_option(4, NAME, 2104, Node1950, NEUTRAL_REACTION);
end

procedure Node2150
begin
    Reply(2150);
    giq_option(4, NAME, 2151, Node1950, NEUTRAL_REACTION);
    giq_option(4, NAME, 2152, Node2200, NEUTRAL_REACTION);
end

procedure Node2200
begin
    Reply(2200);
    giq_option(5, NAME, 2201, Node4100, NEUTRAL_REACTION);
    giq_option(4, NAME, 2202, Node1950, NEUTRAL_REACTION);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 2203, Node2250, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, 2204, Node2250, NEUTRAL_REACTION);
    end
end

procedure Node2250
begin
    Reply(2250);
    giq_option(4, NAME, 2251, Node1950, NEUTRAL_REACTION);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 2252, Node2300, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, 2253, Node2300, NEUTRAL_REACTION);
    end
end

procedure Node2300
begin
    Reply(2300);
    giq_option(4, NAME, 2301, Node_Bridge352, NEUTRAL_REACTION);
    giq_option(4, NAME, 2302, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 2303, Node1950, NEUTRAL_REACTION);
end

procedure Node2350
begin
    Reply(2350);
    giq_option(4, NAME, 2351, Node2450, NEUTRAL_REACTION);
    giq_option(4, NAME, 2352, Node2400, NEUTRAL_REACTION);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 2353, Node999, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, 2354, Node999, NEUTRAL_REACTION);
    end
end

procedure Node2400
begin
    Reply(2400);
    giq_option(4, NAME, 2401, Node2450, NEUTRAL_REACTION);
    giq_option(4, NAME, 2402, Node999, NEUTRAL_REACTION);
end

procedure Node2450
begin
    Reply(2450);
    if ((obj_is_carrying_obj_pid(dude_obj, 29) >= 5) and (obj_is_carrying_obj_pid(dude_obj, 30) >= 2) and (obj_is_carrying_obj_pid(dude_obj, 31) >= 1)) then begin
        giq_option(4, NAME, 2452, Node2650, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 2451, Node_Bridge_Quest1, NEUTRAL_REACTION);
    giq_option(5, NAME, 2453, Node2500, NEUTRAL_REACTION);
    giq_option(4, NAME, 2454, Node999, NEUTRAL_REACTION);
end

procedure Node2500
begin
    Reply(2500);
    if ((dude_skill(SKILL_SPEECH) >= 55) and (dude_skill(SKILL_BARTER) >= 40)) then begin
        giq_option(6, NAME, 2501, Node2550, NEUTRAL_REACTION);
    end
    else begin
        giq_option(6, NAME, 2501, Node2600, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 2502, Node_Bridge_Quest1, NEUTRAL_REACTION);
    giq_option(4, NAME, 2503, Node999, NEUTRAL_REACTION);
end

procedure Node2550
begin
    if (dude_gender == 0) then begin
        Reply(2550);
    end
    if (dude_gender == 1) then begin
        Reply(2551);
    end
    item_caps_adjust(dude_obj, 300);
    giq_option(4, NAME, 2552, Node_Bridge_Quest1, NEUTRAL_REACTION);
end

procedure Node2600
begin
    Reply(2600);
    giq_option(4, NAME, 2601, Node_Bridge_Quest1, NEUTRAL_REACTION);
    giq_option(4, NAME, 2602, Node999, NEUTRAL_REACTION);
end

procedure Node2650
begin
    Reply(2650);
    giq_option(4, NAME, 2651, Node2750, NEUTRAL_REACTION);
    giq_option(4, NAME, 2652, Node2800, NEUTRAL_REACTION);
    giq_option(4, NAME, 2653, Node2850, NEUTRAL_REACTION);
    if ((dude_skill(SKILL_BARTER) >= 60) and (dude_gender == 0)) then begin
        giq_option(4, NAME, 2654, Node2900, NEUTRAL_REACTION);
    end
    if ((dude_skill(SKILL_BARTER) >= 60) and (dude_gender == 1)) then begin
        giq_option(4, NAME, 2656, Node2900, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 2655, Node2700, NEUTRAL_REACTION);
end

procedure Node2700
begin
    if (dude_gender == 0) then begin
        Reply(2700);
    end
    if (dude_gender == 1) then begin
        Reply(2701);
    end
    giq_option(4, NAME, 2702, Node998, NEUTRAL_REACTION);
    giq_option(4, NAME, 2703, Node_Bridge356, NEUTRAL_REACTION);
end

procedure Node2750
begin
    Reply(2750);
    set_global_var(GVAR_RH_Q_ALEXA_QUEST1, 8);
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 29);
    if (5 < removed_qty) then begin
        removed_qty := 5;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 29);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 29);
            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 5;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 29)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 29);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 30);
    if (2 < removed_qty) then begin
        removed_qty := 2;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 30);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 30);
            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 2;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 30)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 30);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 31);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 31);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 31);
            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 1;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 31)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 31);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    give_exp_points(500);
    display_msg(g_mstr(100) + 500 + g_mstr(101));
    set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 10);
    debug_msg("Player gains " + 10 + " Karma Points.");
    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
    set_global_var(GVAR_KARMA_DEFENDER, 0);
    set_global_var(GVAR_KARMA_WANDERER, 0);
    set_global_var(GVAR_KARMA_BETRAYER, 0);
    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
    set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
    if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
    end
    else begin
        if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                    set_global_var(GVAR_KARMA_DEFENDER, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                        set_global_var(GVAR_KARMA_WANDERER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                            set_global_var(GVAR_KARMA_BETRAYER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                end
                                else begin
                                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    if ((global_var(GVAR_RH_Q_ALEXA_QUEST2) == 0) or ((global_var(GVAR_RH_Q_ALEXA_QUEST2) == 5) and (local_var(9) != 1)) and (global_var(GVAR_RH_Q_JULIAN_QUEST2) != 6) and (global_var(GVAR_RH_JULIAN_DEAD) != 1)) then begin
        giq_option(4, NAME, 2751, Node3050, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_RH_Q_JULIAN_QUEST2) == 6) then begin
        giq_option(4, NAME, 2751, Node3650, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 2752, Node999, NEUTRAL_REACTION);
end

procedure Node2800
begin
    Reply(2800);
    set_global_var(GVAR_RH_Q_ALEXA_QUEST1, 8);
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 29);
    if (5 < removed_qty) then begin
        removed_qty := 5;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 29);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 29);
            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 5;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 29)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 29);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 30);
    if (2 < removed_qty) then begin
        removed_qty := 2;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 30);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 30);
            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 2;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 30)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 30);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 31);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 31);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 31);
            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 1;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 31)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 31);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    item_caps_adjust(dude_obj, 500);
    restock_obj := create_object(40, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    give_exp_points(500);
    display_msg(g_mstr(100) + 500 + g_mstr(101));
    if ((global_var(GVAR_RH_Q_ALEXA_QUEST2) == 0) or ((global_var(GVAR_RH_Q_ALEXA_QUEST2) == 5) and (local_var(9) != 1)) and (global_var(GVAR_RH_Q_JULIAN_QUEST2) != 6) and (global_var(GVAR_RH_JULIAN_DEAD) != 1)) then begin
        giq_option(4, NAME, 2801, Node3050, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_RH_Q_JULIAN_QUEST2) == 6) then begin
        giq_option(4, NAME, 2801, Node3650, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 2802, Node999, NEUTRAL_REACTION);
end

procedure Node2850
begin
    Reply(2850);
    set_global_var(GVAR_RH_Q_ALEXA_QUEST1, 8);
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 29);
    if (5 < removed_qty) then begin
        removed_qty := 5;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 29);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 29);
            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 5;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 29)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 29);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 30);
    if (2 < removed_qty) then begin
        removed_qty := 2;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 30);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 30);
            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 2;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 30)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 30);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 31);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 31);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 31);
            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 1;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 31)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 31);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    item_caps_adjust(dude_obj, 1000);
    give_exp_points(500);
    display_msg(g_mstr(100) + 500 + g_mstr(101));
    if ((global_var(GVAR_RH_Q_ALEXA_QUEST2) == 0) or ((global_var(GVAR_RH_Q_ALEXA_QUEST2) == 5) and (local_var(9) != 1)) and (global_var(GVAR_RH_Q_JULIAN_QUEST2) != 6) and (global_var(GVAR_RH_JULIAN_DEAD) != 1)) then begin
        giq_option(4, NAME, 2851, Node3050, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_RH_Q_JULIAN_QUEST2) == 6) then begin
        giq_option(4, NAME, 2851, Node3650, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 2852, Node999, NEUTRAL_REACTION);
end

procedure Node2900
begin
    Reply(2900);
    set_global_var(GVAR_RH_Q_ALEXA_QUEST1, 8);
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 29);
    if (5 < removed_qty) then begin
        removed_qty := 5;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 29);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 29);
            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 5;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 29)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 29);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 30);
    if (2 < removed_qty) then begin
        removed_qty := 2;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 30);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 30);
            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 2;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 30)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 30);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 31);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 31);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 31);
            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 1;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 31)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 31);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    item_caps_adjust(dude_obj, 1500);
    give_exp_points(500);
    display_msg(g_mstr(100) + 500 + g_mstr(101));
    if ((global_var(GVAR_RH_Q_ALEXA_QUEST2) == 0) or ((global_var(GVAR_RH_Q_ALEXA_QUEST2) == 5) and (local_var(9) != 1)) and (global_var(GVAR_RH_Q_JULIAN_QUEST2) != 6) and (global_var(GVAR_RH_JULIAN_DEAD) != 1)) then begin
        giq_option(4, NAME, 2901, Node3050, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_RH_Q_JULIAN_QUEST2) == 6) then begin
        giq_option(4, NAME, 2901, Node3650, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 2902, Node999, NEUTRAL_REACTION);
end

procedure Node3000
begin
    Reply(3000);
    if ((global_var(GVAR_RH_Q_ALEXA_QUEST1) == 4) and (obj_is_carrying_obj_pid(dude_obj, 29) >= 5) and (obj_is_carrying_obj_pid(dude_obj, 30) >= 2) and (obj_is_carrying_obj_pid(dude_obj, 31) >= 1)) then begin
        giq_option(4, NAME, 3001, Node2650, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_RH_Q_ALEXA_QUEST2) == 5) and (local_var(9) == 1)) then begin
        giq_option(4, NAME, 3002, Node4900, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_RH_Q_ALEXA_QUEST2) == 4) and ((map_var(3) bwand 16384) == 0) and not(obj_is_carrying_obj_pid(dude_obj, 334) >= 1)) then begin
        giq_option(5, NAME, 3004, Node3250, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 3003, Node999, NEUTRAL_REACTION);
end

procedure Node3050
begin
    Reply(3050);
    giq_option(4, NAME, 3051, Node3100, NEUTRAL_REACTION);
    giq_option(4, NAME, 3052, Node999, NEUTRAL_REACTION);
end

procedure Node3100
begin
    Reply(3100);
    giq_option(4, NAME, 3101, Node3150, NEUTRAL_REACTION);
    giq_option(4, NAME, 3102, Node_Bridge_Quest2, NEUTRAL_REACTION);
    giq_option(4, NAME, 3103, Node3200, NEUTRAL_REACTION);
end

procedure Node3150
begin
    Reply(3150);
    giq_option(6, NAME, 3151, Node3250, NEUTRAL_REACTION);
    giq_option(4, NAME, 3152, Node_Bridge_Quest2, NEUTRAL_REACTION);
    giq_option(4, NAME, 3153, Node3200, NEUTRAL_REACTION);
end

procedure Node3200
begin
    if (dude_gender == 0) then begin
        Reply(3200);
    end
    if (dude_gender == 1) then begin
        Reply(3201);
    end
    giq_option(4, NAME, 3202, Node3150, NEUTRAL_REACTION);
    giq_option(4, NAME, 3203, Node_Bridge352, NEUTRAL_REACTION);
end

procedure Node3250
begin
    if (dude_gender == 0) then begin
        Reply(3250);
    end
    if (dude_gender == 1) then begin
        Reply(3251);
    end
    set_map_var(3, map_var(3) bwor 16384);
    giq_option(4, NAME, 3252, Node_Bridge_Quest2_pois, NEUTRAL_REACTION);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 3253, Node_Bridge_Quest2, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, 3254, Node_Bridge_Quest2, NEUTRAL_REACTION);
    end
end

procedure Node3350
begin
    Reply(3350);
    set_local_var(14, 1);
    giq_option(4, NAME, 3351, Node2100, NEUTRAL_REACTION);
    giq_option(4, NAME, 3354, Node4350, NEUTRAL_REACTION);
    giq_option(4, NAME, 3352, Node1950, NEUTRAL_REACTION);
    giq_option(4, NAME, 3353, Node5600, NEUTRAL_REACTION);
end

procedure Node3400
begin
    Reply(3400);
    giq_option(6, NAME, 3401, Node3450, NEUTRAL_REACTION);
    giq_option(4, NAME, 3402, Node2100, NEUTRAL_REACTION);
    giq_option(4, NAME, 3403, Node1950, NEUTRAL_REACTION);
    giq_option(4, NAME, 3404, Node5600, NEUTRAL_REACTION);
end

procedure Node3450
begin
    Reply(3450);
    giq_option(4, NAME, 3451, Node1950, NEUTRAL_REACTION);
    giq_option(4, NAME, 3452, Node5600, NEUTRAL_REACTION);
end

procedure Node3500
begin
    Reply(3500);
    giq_option(4, NAME, 3501, Node3550, NEUTRAL_REACTION);
    if (local_var(18) != 1) then begin
        giq_option(4, NAME, 3502, Node5900, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 3503, Node1950, NEUTRAL_REACTION);
    giq_option(4, NAME, 3504, Node5600, NEUTRAL_REACTION);
end

procedure Node3550
begin
    Reply(3550);
    if (local_var(16) != 1) then begin
        giq_option(4, NAME, 3551, Node3600, NEUTRAL_REACTION);
    end
    if (local_var(18) != 1) then begin
        giq_option(4, NAME, 3552, Node5900, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 3553, Node1950, NEUTRAL_REACTION);
    giq_option(4, NAME, 3554, Node5600, NEUTRAL_REACTION);
end

procedure Node3600
begin
    Reply(3600);
    set_local_var(16, 1);
    if (local_var(18) != 1) then begin
        giq_option(4, NAME, 3601, Node5900, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 3602, Node1950, NEUTRAL_REACTION);
    giq_option(4, NAME, 3603, Node5600, NEUTRAL_REACTION);
end

procedure Node3650
begin
    if (global_var(GVAR_RH_Q_JULIAN_QUEST2) != 6) then begin
        Reply(3650);
    end
    if (global_var(GVAR_RH_Q_JULIAN_QUEST2) == 6) then begin
        Reply(3651);
    end
    giq_option(4, NAME, 3652, Node5600, NEUTRAL_REACTION);
    giq_option(-3, NAME, 3653, Node999, NEUTRAL_REACTION);
end

procedure Node3700
begin
    Reply(3700);
    giq_option(1, NAME, 3701, Alexa_Barter, NEUTRAL_REACTION);
end

procedure Node3750
begin
    Reply(3750);
    if (dude_skill(SKILL_SPEECH) >= 35) then begin
        giq_option(6, NAME, 3751, Node3800, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 3752, Node_Bridge351, NEUTRAL_REACTION);
    giq_option(4, NAME, 3753, Node999, NEUTRAL_REACTION);
end

procedure Node3800
begin
    Reply(3800);
    giq_option(1, NAME, 3801, Alexa_Barter, NEUTRAL_REACTION);
end

procedure Node3850
begin
    Reply(3850);
    if (global_var(GVAR_RH_Q_JULIAN_QUEST2) != 6) then begin
        giq_option(5, NAME, 3851, Node3900, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 3852, Node3950, NEUTRAL_REACTION);
    giq_option(4, NAME, 3853, Node4000, NEUTRAL_REACTION);
end

procedure Node3900
begin
    if (dude_gender == 0) then begin
        Reply(3900);
    end
    if (dude_gender == 1) then begin
        Reply(3901);
    end
    if ((obj_is_carrying_obj_pid(dude_obj, 29) >= 5) and (obj_is_carrying_obj_pid(dude_obj, 30) >= 2) and (obj_is_carrying_obj_pid(dude_obj, 31) >= 1)) then begin
        giq_option(4, NAME, 3903, Node2650, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 3902, Node_Bridge_Quest1, NEUTRAL_REACTION);
    giq_option(4, NAME, 3904, Node2500, NEUTRAL_REACTION);
    giq_option(4, NAME, 3905, Node999, NEUTRAL_REACTION);
end

procedure Node3950
begin
    Reply(3950);
    if (global_var(GVAR_RH_Q_JULIAN_QUEST2) != 6) then begin
        giq_option(4, NAME, 3951, Node3900, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 3952, Node4000, NEUTRAL_REACTION);
    giq_option(4, NAME, 3953, Node999, NEUTRAL_REACTION);
end

procedure Node4000
begin
    Reply(4000);
    if (global_var(GVAR_RH_Q_JULIAN_QUEST2) != 6) then begin
        giq_option(4, NAME, 4001, Node3900, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 4002, Node999, NEUTRAL_REACTION);
end

procedure Node4050
begin
    Reply(4050);
    giq_option(4, NAME, 4051, Node2100, NEUTRAL_REACTION);
    giq_option(4, NAME, 4052, Node4100, NEUTRAL_REACTION);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 4053, Node4300, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, 4054, Node4300, NEUTRAL_REACTION);
    end
end

procedure Node4100
begin
    Reply(4100);
    giq_option(4, NAME, 4101, Node1950, NEUTRAL_REACTION);
    giq_option(4, NAME, 4102, Node999, NEUTRAL_REACTION);
end

procedure Node4150
begin
    Reply(4150);
    giq_option(1, NAME, 4151, Node998, NEUTRAL_REACTION);
end

procedure Node4200
begin
    if ((dude_gender == 0) and ((dude_iq + has_trait(TRAIT_PERK, dude_obj, PERK_smooth_talker)) > 3) and (global_var(GVAR_RH_Q_ALEXA_QUEST3) != 4)) then begin
        Reply(4200);
    end
    if ((dude_gender == 1) and ((dude_iq + has_trait(TRAIT_PERK, dude_obj, PERK_smooth_talker)) > 3) and (global_var(GVAR_RH_Q_ALEXA_QUEST3) != 4)) then begin
        Reply(4201);
    end
    if ((dude_gender == 0) and ((dude_iq + has_trait(TRAIT_PERK, dude_obj, PERK_smooth_talker)) > 3) and (global_var(GVAR_RH_Q_ALEXA_QUEST3) == 4)) then begin
        Reply(4202);
    end
    if ((dude_gender == 1) and ((dude_iq + has_trait(TRAIT_PERK, dude_obj, PERK_smooth_talker)) > 3) and (global_var(GVAR_RH_Q_ALEXA_QUEST3) == 4)) then begin
        Reply(4203);
    end
    if ((dude_iq + has_trait(TRAIT_PERK, dude_obj, PERK_smooth_talker)) < 4) then begin
        Reply(4204);
    end
    if (((dude_iq + has_trait(TRAIT_PERK, dude_obj, PERK_smooth_talker)) > 3) and (global_var(GVAR_RH_Q_ALEXA_QUEST3) == 4)) then begin
        set_global_var(GVAR_RH_Q_ALEXA_QUEST3, 8);
        item_caps_adjust(dude_obj, 500);
        restock_obj := create_object(53, 0, 0);
        add_mult_objs_to_inven(dude_obj, restock_obj, 3);
        give_exp_points(1500);
        display_msg(g_mstr(100) + 1500 + g_mstr(101));
    end
    if (((dude_iq + has_trait(TRAIT_PERK, dude_obj, PERK_smooth_talker)) > 3) and (global_var(GVAR_RH_Q_ALEXA_QUEST3) != 4) and (global_var(GVAR_RH_Q_ALEXA_QUEST3) != 8)) then begin
        set_global_var(GVAR_RH_Q_ALEXA_QUEST3, 3);
    end
    if ((dude_iq + has_trait(TRAIT_PERK, dude_obj, PERK_smooth_talker)) < 4) then begin
        if (global_var(GVAR_RH_Q_ALEXA_QUEST3) == 4) then begin
            set_global_var(GVAR_RH_Q_ALEXA_QUEST3, 8);
        end
        restock_obj := create_object(87, 0, 0);
        add_mult_objs_to_inven(dude_obj, restock_obj, 2);
        restock_obj := create_object(53, 0, 0);
        add_mult_objs_to_inven(dude_obj, restock_obj, 3);
        restock_obj := create_object(48, 0, 0);
        add_mult_objs_to_inven(dude_obj, restock_obj, 2);
        give_exp_points(1500);
        display_msg(g_mstr(100) + 1500 + g_mstr(101));
    end
    set_local_var(8, 1);
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        Gabriel_Reaction := 1;
    end
    if (global_var(GVAR_RH_Q_ALEXA_QUEST3) == 3) then begin
        giq_option(4, NAME, 4208, Node999, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_RH_Q_ALEXA_QUEST3) == 8) then begin
        giq_option(4, NAME, 4205, Node999, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 4206, Node4250, NEUTRAL_REACTION);
    giq_option(-3, NAME, 4207, Node999, NEUTRAL_REACTION);
end

procedure Node4250
begin
    Reply(4250);
    giq_option(4, NAME, 4251, Node999, NEUTRAL_REACTION);
end

procedure Node4300
begin
    Reply(4301);
    giq_option(4, NAME, 4302, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 4303, Node1950, NEUTRAL_REACTION);
end

procedure Node4350
begin
    if (dude_gender == 0) then begin
        Reply(4350);
    end
    if (dude_gender == 1) then begin
        Reply(4351);
    end
    giq_option(4, NAME, 4352, Node4400, NEUTRAL_REACTION);
    giq_option(4, NAME, 4353, Node2100, NEUTRAL_REACTION);
    giq_option(4, NAME, 4357, Node3400, NEUTRAL_REACTION);
    giq_option(4, NAME, 4354, Node4450, NEUTRAL_REACTION);
    if (global_var(GVAR_RH_JULIAN_DEAD) != 1) then begin
        giq_option(4, NAME, 4355, Node4550, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 4356, Node1950, NEUTRAL_REACTION);
end

procedure Node4400
begin
    Reply(4400);
    giq_option(5, NAME, 4402, Node4100, NEUTRAL_REACTION);
    giq_option(4, NAME, 4403, Node4450, NEUTRAL_REACTION);
    if (global_var(GVAR_RH_JULIAN_DEAD) != 1) then begin
        giq_option(4, NAME, 4404, Node4550, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 4405, Node1950, NEUTRAL_REACTION);
end

procedure Node4450
begin
    Reply(4450);
    giq_option(4, NAME, 4451, Node4500, NEUTRAL_REACTION);
    if ((local_var(19) != 1) and (global_var(GVAR_RH_JULIAN_DEAD) != 1)) then begin
        giq_option(4, NAME, 4452, Node4600, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_RH_JULIAN_DEAD) != 1) then begin
        giq_option(4, NAME, 4453, Node4550, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 4454, Node1950, NEUTRAL_REACTION);
end

procedure Node4500
begin
    Reply(4500);
    if (local_var(16) != 1) then begin
        giq_option(4, NAME, 4501, Node3600, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 4502, Node4700, NEUTRAL_REACTION);
    giq_option(4, NAME, 4503, Node4350, NEUTRAL_REACTION);
end

procedure Node4550
begin
    Reply(4550);
    giq_option(4, NAME, 4551, Node1950, NEUTRAL_REACTION);
    giq_option(4, NAME, 4552, Node4350, NEUTRAL_REACTION);
end

procedure Node4600
begin
    Reply(4600);
    set_local_var(19, 1);
    giq_option(4, NAME, 4601, Node4650, NEUTRAL_REACTION);
    giq_option(4, NAME, 4602, Node4350, NEUTRAL_REACTION);
end

procedure Node4650
begin
    Reply(4650);
    giq_option(4, NAME, 4651, Node1950, NEUTRAL_REACTION);
    giq_option(4, NAME, 4652, Node4350, NEUTRAL_REACTION);
end

procedure Node4700
begin
    Reply(4700);
    giq_option(4, NAME, 4701, Node4750, NEUTRAL_REACTION);
    if (local_var(16) != 1) then begin
        giq_option(4, NAME, 4702, Node3600, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 4703, Node4350, NEUTRAL_REACTION);
end

procedure Node4750
begin
    Reply(4750);
    giq_option(4, NAME, 4751, Node4350, NEUTRAL_REACTION);
    giq_option(4, NAME, 4752, Node1950, NEUTRAL_REACTION);
end

procedure Node4800
begin
    Reply(4800);
    giq_option(4, NAME, 4801, Node4850, NEUTRAL_REACTION);
    giq_option(4, NAME, 4802, Node1950, NEUTRAL_REACTION);
end

procedure Node4850
begin
    Reply(4850);
    giq_option(4, NAME, 4851, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 4852, Node1950, NEUTRAL_REACTION);
end

procedure Node4900
begin
    Reply(4900);
    set_global_var(GVAR_RH_Q_ALEXA_QUEST2, 8);
    item_caps_adjust(dude_obj, 500);
    restock_obj := create_object(40, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 2);
    give_exp_points(750);
    display_msg(g_mstr(100) + 750 + g_mstr(101));
    giq_option(4, NAME, 4901, Node4950, NEUTRAL_REACTION);
    giq_option(4, NAME, 4902, Node5000, NEUTRAL_REACTION);
    giq_option(4, NAME, 4903, Node5100, NEUTRAL_REACTION);
end

procedure Node4950
begin
    if ((dude_skill(SKILL_SMALL_GUNS) > 80) and (dude_perception <= 7) and (get_critter_stat(dude_obj, STAT_ag) <= 9)) then begin
        if (global_var(GVAR_RH_Q_JULIAN_QUEST1) == 8) then begin
            Reply(4954);
        end
        else begin
            Reply(4951);
        end
    end
    else begin
        if (global_var(GVAR_RH_Q_JULIAN_QUEST1) == 8) then begin
            Reply(4953);
        end
        else begin
            Reply(4950);
        end
    end
    giq_option(4, NAME, 4952, Node_Bridge_Quest3, NEUTRAL_REACTION);
end

procedure Node5000
begin
    Reply(5000);
    giq_option(4, NAME, 5001, Node4950, NEUTRAL_REACTION);
    giq_option(4, NAME, 5002, Node_Bridge_Quest3_Declined, NEUTRAL_REACTION);
end

procedure Node5050
begin
    if (dude_gender == 0) then begin
        Reply(5050);
    end
    if (dude_gender == 1) then begin
        Reply(5051);
    end
    giq_option(1, NAME, 5052, Node999, NEUTRAL_REACTION);
end

procedure Node5100
begin
    Reply(5100);
    giq_option(1, NAME, 5101, Node_Bridge_Quest3_Declined, NEUTRAL_REACTION);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 5102, Node4950, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, 5103, Node4950, NEUTRAL_REACTION);
    end
end

procedure Node5150
begin
    Reply(5150);
    if (dude_skill(SKILL_SPEECH) >= 50) then begin
        giq_option(4, NAME, 5153, Node6500, NEUTRAL_REACTION);
    end
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 5151, Node5950, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, 5152, Node5950, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 5154, Node5200, NEUTRAL_REACTION);
    if ((dude_gender == 0) and (dude_skill(SKILL_DOCTOR) > 25)) then begin
        giq_option(4, NAME, 5155, Node5250, NEUTRAL_REACTION);
    end
    if ((dude_gender == 1) and (dude_skill(SKILL_DOCTOR) > 25)) then begin
        giq_option(4, NAME, 5156, Node5250, NEUTRAL_REACTION);
    end
end

procedure Node5200
begin
    Reply(5200);
    giq_option(4, NAME, 5201, Node5600, NEUTRAL_REACTION);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 5202, Node6850, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, 5203, Node6850, NEUTRAL_REACTION);
    end
    if ((dude_gender == 0) and (dude_skill(SKILL_DOCTOR) > 25)) then begin
        giq_option(4, NAME, 5204, Node5250, NEUTRAL_REACTION);
    end
    if ((dude_gender == 1) and (dude_skill(SKILL_DOCTOR) > 25)) then begin
        giq_option(4, NAME, 5205, Node5250, NEUTRAL_REACTION);
    end
end

procedure Node5250
begin
    Reply(5250);
    giq_option(4, NAME, 5253, Node5600, NEUTRAL_REACTION);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 5251, Node5300, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, 5252, Node5300, NEUTRAL_REACTION);
    end
end

procedure Node5300
begin
    Reply(5300);
    giq_option(4, NAME, 5301, Node5350, NEUTRAL_REACTION);
    giq_option(4, NAME, 5302, Node5550, NEUTRAL_REACTION);
end

procedure Node5350
begin
    Reply(5350);
    giq_option(4, NAME, 5351, Node_Bridge_QuestBAG, NEUTRAL_REACTION);
end

procedure Node5400
begin
    Reply(5400);
    removed_qty := obj_is_carrying_obj_pid(Alexa_box, 91);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(Alexa_box, 91);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(Alexa_box, 91);
            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(Alexa_box, INVEN_TYPE_WORN)) == 0) then begin
                    restock_obj := critter_inven_obj(Alexa_box, INVEN_TYPE_WORN);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(Alexa_box, restock_obj);
                    add_obj_to_inven(Alexa_box, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(Alexa_box, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(Alexa_box, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                    inven_unwield(Alexa_box);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(Alexa_box, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 1;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(Alexa_box, 91)) do begin
                restock_obj := obj_carrying_pid_obj(Alexa_box, 91);
                rm_obj_from_inven(Alexa_box, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    restock_obj := create_object(91, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    giq_option(4, NAME, 5401, Node999, NEUTRAL_REACTION);
end

procedure Node5450
begin
    Reply(5450);
    if (dude_skill(SKILL_SPEECH) >= 65) then begin
        giq_option(6, NAME, 5451, Node5500, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 5452, Node_Bridge354, NEUTRAL_REACTION);
end

procedure Node5500
begin
    Reply(5500);
    set_local_var(6, 1);
    giq_option(4, NAME, 5501, Node999, NEUTRAL_REACTION);
end

procedure Node5550
begin
    Reply(5550);
    giq_option(4, NAME, 5551, Node1950, NEUTRAL_REACTION);
    giq_option(4, NAME, 5552, Node5600, NEUTRAL_REACTION);
    giq_option(4, NAME, 5553, Node999, NEUTRAL_REACTION);
end

procedure Node5600
begin
    Reply(5600);
    if ((global_var(GVAR_RH_Q_ALEXA_QUEST1) == 4) or (global_var(GVAR_RH_Q_ALEXA_QUEST2) == 4) or ((global_var(GVAR_RH_Q_ALEXA_QUEST2) == 5) and (local_var(9) == 1))) then begin
        giq_option(4, NAME, 5601, Node3000, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 5602, Node1950, NEUTRAL_REACTION);
    giq_option(4, NAME, 5603, Node1200, NEUTRAL_REACTION);
    if ((global_var(GVAR_RH_Q_ALEXA_QUEST1) == 0) and (global_var(GVAR_RH_Q_JULIAN_QUEST2) != 6) and (global_var(GVAR_RH_JULIAN_DEAD) != 1)) then begin
        giq_option(4, NAME, 5604, Node2350, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_RH_Q_ALEXA_QUEST1) == 8) and ((global_var(GVAR_RH_Q_ALEXA_QUEST2) == 0) or ((global_var(GVAR_RH_Q_ALEXA_QUEST2) == 5) and (local_var(9) != 1))) and (global_var(GVAR_RH_Q_JULIAN_QUEST2) != 6) and (global_var(GVAR_RH_JULIAN_DEAD) != 1)) then begin
        giq_option(4, NAME, 5604, Node3050, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_RH_JULIAN_DEAD) == 1) then begin
        giq_option(4, NAME, 5604, Node3650, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_RH_Q_JULIAN_QUEST2) == 6) and (global_var(GVAR_RH_JULIAN_DEAD) != 1) and ((global_var(GVAR_RH_Q_ALEXA_QUEST1) == 0) or (global_var(GVAR_RH_Q_ALEXA_QUEST1) == 8))) then begin
        giq_option(4, NAME, 5604, Node3650, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 5605, Node3500, NEUTRAL_REACTION);
    if ((local_var(7) == 1) and (item_caps_total(dude_obj) > 499) and (global_var(GVAR_RH_Q_JULIAN_QUEST1) == 6) and obj_carrying_pid_obj(Alexa_box, 91)) then begin
        giq_option(4, NAME, 5606, Node6650, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_RH_Q_QUEST_MARIE) == 4) and (global_var(GVAR_RH_AlexaMayKilledMarie) == 1)) then begin
        giq_option(4, NAME, 5607, Node7050, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 5608, Node999, NEUTRAL_REACTION);
end

procedure Node5700
begin
    Reply(5700);
    set_local_var(20, 1);
    giq_option(7, NAME, 5701, Node5750, NEUTRAL_REACTION);
    giq_option(4, NAME, 5702, Node5600, NEUTRAL_REACTION);
end

procedure Node5750
begin
    if (dude_gender == 0) then begin
        Reply(5750);
    end
    if (dude_gender == 1) then begin
        Reply(5751);
    end
    set_map_var(1, 2);
    giq_option(8, NAME, 5752, Node5800, NEUTRAL_REACTION);
    giq_option(4, NAME, 5753, Node5850, NEUTRAL_REACTION);
    giq_option(4, NAME, 5754, Node1950, NEUTRAL_REACTION);
    giq_option(4, NAME, 5755, Node5600, NEUTRAL_REACTION);
end

procedure Node5800
begin
    Reply(5800);
    giq_option(4, NAME, 5801, Node5850, NEUTRAL_REACTION);
    giq_option(4, NAME, 5802, Node_Bridge354, NEUTRAL_REACTION);
    giq_option(4, NAME, 5803, Node5600, NEUTRAL_REACTION);
    giq_option(4, NAME, 5804, Node999, NEUTRAL_REACTION);
end

procedure Node5850
begin
    if (dude_gender == 0) then begin
        Reply(5850);
    end
    if (dude_gender == 1) then begin
        Reply(5851);
    end
    giq_option(4, NAME, 5852, Node_Bridge354, NEUTRAL_REACTION);
    giq_option(4, NAME, 5853, Node5600, NEUTRAL_REACTION);
    giq_option(4, NAME, 5854, Node999, NEUTRAL_REACTION);
end

procedure Node5900
begin
    if (global_var(GVAR_RH_JULIAN_DEAD) != 1) then begin
        Reply(5900);
    end
    if (global_var(GVAR_RH_JULIAN_DEAD) == 1) then begin
        Reply(5905);
    end
    set_local_var(18, 1);
    if (global_var(GVAR_RH_JULIAN_DEAD) != 1) then begin
        giq_option(4, NAME, 5902, Node6000, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 5901, Node3550, NEUTRAL_REACTION);
    giq_option(4, NAME, 5903, Node1950, NEUTRAL_REACTION);
    giq_option(4, NAME, 5904, Node5600, NEUTRAL_REACTION);
end

procedure Node5950
begin
    Reply(5950);
    giq_option(4, NAME, 5951, Node999, NEUTRAL_REACTION);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 5952, Node5600, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, 5953, Node5600, NEUTRAL_REACTION);
    end
end

procedure Node6000
begin
    Reply(6000);
    giq_option(4, NAME, 6001, Node6050, NEUTRAL_REACTION);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 6002, Node1950, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, 6003, Node1950, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 6004, Node5600, NEUTRAL_REACTION);
end

procedure Node6050
begin
    Reply(6050);
    giq_option(4, NAME, 6051, Node999, NEUTRAL_REACTION);
    giq_option(4, NAME, 6052, Node1950, NEUTRAL_REACTION);
    giq_option(4, NAME, 6053, Node5600, NEUTRAL_REACTION);
end

procedure Node6100
begin
    if (dude_gender == 0) then begin
        Reply(6100);
    end
    if (dude_gender == 1) then begin
        Reply(6102);
    end
    giq_option(-3, NAME, 6103, Node6150, NEUTRAL_REACTION);
    giq_option(-3, NAME, 6104, Node6200, NEUTRAL_REACTION);
end

procedure Node6150
begin
    Reply(6150);
    restock_obj := create_object(110, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    giq_option(-3, NAME, 6151, Node_Bridge_Quest2, NEUTRAL_REACTION);
end

procedure Node6200
begin
    if (dude_gender == 0) then begin
        Reply(6200);
    end
    if (dude_gender == 1) then begin
        Reply(6201);
    end
    giq_option(-3, NAME, 6202, Node6150, NEUTRAL_REACTION);
    giq_option(-3, NAME, 6203, Node6250, NEUTRAL_REACTION);
end

procedure Node6250
begin
    Reply(6250);
    set_local_var(6, 1);
    giq_option(-3, NAME, 6251, Node999, NEUTRAL_REACTION);
end

procedure Node6300
begin
    if (dude_gender == 0) then begin
        Reply(6300);
    end
    if (dude_gender == 1) then begin
        Reply(6303);
    end
    giq_option(-3, NAME, 6301, Node_Bridge_Quest3, NEUTRAL_REACTION);
    giq_option(-3, NAME, 6302, Node5100, NEUTRAL_REACTION);
end

procedure Node6350
begin
    Reply(6350);
    if ((global_var(GVAR_RH_Q_ALEXA_QUEST1) == 4) and (obj_is_carrying_obj_pid(dude_obj, 29) >= 5) and (obj_is_carrying_obj_pid(dude_obj, 30) >= 2) and (obj_is_carrying_obj_pid(dude_obj, 31) >= 1)) then begin
        giq_option(-3, NAME, 6351, Node6400, NEUTRAL_REACTION);
    end
    if ((global_var(GVAR_RH_Q_ALEXA_QUEST2) == 5) and (local_var(9) == 1)) then begin
        giq_option(-3, NAME, 6352, Node6450, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 6353, Node999, NEUTRAL_REACTION);
end

procedure Node6400
begin
    Reply(6400);
    set_global_var(GVAR_RH_Q_ALEXA_QUEST1, 8);
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 29);
    if (5 < removed_qty) then begin
        removed_qty := 5;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 29);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 29);
            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 5;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 29)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 29);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 30);
    if (2 < removed_qty) then begin
        removed_qty := 2;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 30);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 30);
            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 2;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 30)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 30);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    removed_qty := obj_is_carrying_obj_pid(dude_obj, 31);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(dude_obj, 31);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(dude_obj, 31);
            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(dude_obj, INVEN_TYPE_WORN)) == 0) then begin
                    restock_obj := critter_inven_obj(dude_obj, INVEN_TYPE_WORN);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(dude_obj, restock_obj);
                    add_obj_to_inven(dude_obj, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(dude_obj, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(dude_obj, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                    inven_unwield(dude_obj);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(dude_obj, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 1;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(dude_obj, 31)) do begin
                restock_obj := obj_carrying_pid_obj(dude_obj, 31);
                rm_obj_from_inven(dude_obj, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    item_caps_adjust(dude_obj, 250);
    restock_obj := create_object(53, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    give_exp_points(500);
    display_msg(g_mstr(100) + 500 + g_mstr(101));
    if ((global_var(GVAR_RH_Q_ALEXA_QUEST2) == 0) or ((global_var(GVAR_RH_Q_ALEXA_QUEST2) == 5) and (local_var(9) != 1)) and (global_var(GVAR_RH_Q_JULIAN_QUEST2) != 6) and (global_var(GVAR_RH_JULIAN_DEAD) != 1)) then begin
        giq_option(-3, NAME, 6401, Node6100, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_RH_Q_JULIAN_QUEST2) == 6) then begin
        giq_option(4, NAME, 6401, Node3650, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 6402, Node999, NEUTRAL_REACTION);
end

procedure Node6450
begin
    Reply(6450);
    set_global_var(GVAR_RH_Q_ALEXA_QUEST2, 8);
    restock_obj := create_object(53, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 2);
    restock_obj := create_object(87, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    give_exp_points(750);
    display_msg(g_mstr(100) + 750 + g_mstr(101));
    if ((global_var(GVAR_RH_Q_ALEXA_QUEST3) == 0) and (global_var(GVAR_RH_Q_JULIAN_QUEST2) != 6) and (global_var(GVAR_RH_JULIAN_DEAD) != 1)) then begin
        giq_option(-3, NAME, 6451, Node6300, NEUTRAL_REACTION);
    end
    if (global_var(GVAR_RH_Q_JULIAN_QUEST2) == 6) then begin
        giq_option(4, NAME, 6451, Node3650, NEUTRAL_REACTION);
    end
    giq_option(-3, NAME, 6452, Node999, NEUTRAL_REACTION);
end

procedure Node6500
begin
    Reply(6500);
    if (dude_skill(SKILL_SPEECH) >= 65) then begin
        giq_option(6, NAME, 6502, Node6550, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 6503, Node5600, NEUTRAL_REACTION);
    giq_option(4, NAME, 6501, Node999, NEUTRAL_REACTION);
end

procedure Node6550
begin
    Reply(6550);
    if (dude_skill(SKILL_SPEECH) >= 70) then begin
        giq_option(7, NAME, 6551, Node6600, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 6552, Node6750, NEUTRAL_REACTION);
    giq_option(4, NAME, 6553, Node999, NEUTRAL_REACTION);
end

procedure Node6600
begin
    Reply(6600);
    set_local_var(7, 1);
    if (item_caps_total(dude_obj) > 499) then begin
        giq_option(4, NAME, 6601, Node6650, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 6602, Node6700, NEUTRAL_REACTION);
end

procedure Node6650
begin
    Reply(6650);
    set_local_var(7, 2);
    removed_qty := obj_is_carrying_obj_pid(Alexa_box, 91);
    if (1 < removed_qty) then begin
        removed_qty := 1;
    end
    if (removed_qty > 0) then begin
        restock_obj := obj_carrying_pid_obj(Alexa_box, 91);
        if (obj_type(self_obj) == 1) then begin
            restock_obj := obj_carrying_pid_obj(Alexa_box, 91);
            if (critter_inven_obj(self_obj, INVEN_TYPE_WORN) == restock_obj) then begin
                if (obj_item_subtype(critter_inven_obj(Alexa_box, INVEN_TYPE_WORN)) == 0) then begin
                    restock_obj := critter_inven_obj(Alexa_box, INVEN_TYPE_WORN);
                    debug_msg("armour pid == " + obj_pid(restock_obj));
                    rm_obj_from_inven(Alexa_box, restock_obj);
                    add_obj_to_inven(Alexa_box, restock_obj);
                end
            end
            else begin
                if ((critter_inven_obj(Alexa_box, INVEN_TYPE_LEFT_HAND) == restock_obj) or (critter_inven_obj(Alexa_box, INVEN_TYPE_RIGHT_HAND) == restock_obj)) then begin
                    inven_unwield(Alexa_box);
                end
            end
        end
        restock_amt := rm_mult_objs_from_inven(Alexa_box, restock_obj, removed_qty);
        if (restock_amt == 0) then begin
            toRemove_qty := 1;
            while ((toRemove_qty > 0) and obj_carrying_pid_obj(Alexa_box, 91)) do begin
                restock_obj := obj_carrying_pid_obj(Alexa_box, 91);
                rm_obj_from_inven(Alexa_box, restock_obj);
                destroy_object(restock_obj);
                toRemove_qty := toRemove_qty - 1;
            end
        end
        else begin
            destroy_object(restock_obj);
        end
    end
    restock_obj := 0;
    restock_amt := 0;
    restock_obj := create_object(91, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    item_caps_adjust(dude_obj, -500);
    giq_option(4, NAME, 6651, Node999, NEUTRAL_REACTION);
end

procedure Node6700
begin
    Reply(6700);
    if (item_caps_total(dude_obj) > 499) then begin
        giq_option(4, NAME, 6701, Node6650, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 6702, Node999, NEUTRAL_REACTION);
end

procedure Node6750
begin
    Reply(6750);
    if (dude_skill(SKILL_SPEECH) >= 70) then begin
        giq_option(4, NAME, 6751, Node6600, NEUTRAL_REACTION);
    end
    if (dude_skill(SKILL_SPEECH) < 70) then begin
        giq_option(4, NAME, 6751, Node6800, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 6752, Node_Bridge352, NEUTRAL_REACTION);
    giq_option(4, NAME, 6753, Node5600, NEUTRAL_REACTION);
end

procedure Node6800
begin
    Reply(6800);
    giq_option(4, NAME, 6801, Node999, NEUTRAL_REACTION);
end

procedure Node6850
begin
    Reply(6850);
    if (dude_skill(SKILL_SPEECH) >= 50) then begin
        giq_option(4, NAME, 6852, Node6500, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 6851, Node6800, NEUTRAL_REACTION);
    giq_option(4, NAME, 6853, Node5600, NEUTRAL_REACTION);
end

procedure Node6900
begin
    Reply(6900);
    giq_option(4, NAME, 6901, Node6950, NEUTRAL_REACTION);
    giq_option(4, NAME, 6902, Node7000, NEUTRAL_REACTION);
    giq_option(4, NAME, 6903, Node1950, NEUTRAL_REACTION);
    giq_option(4, NAME, 6904, Node5600, NEUTRAL_REACTION);
end

procedure Node6950
begin
    Reply(6950);
    giq_option(4, NAME, 6951, Node7000, NEUTRAL_REACTION);
    giq_option(4, NAME, 6952, Node1950, NEUTRAL_REACTION);
    giq_option(4, NAME, 6953, Node5600, NEUTRAL_REACTION);
end

procedure Node7000
begin
    Reply(7000);
    giq_option(4, NAME, 7001, Node6950, NEUTRAL_REACTION);
    giq_option(4, NAME, 7002, Node1950, NEUTRAL_REACTION);
    giq_option(4, NAME, 7003, Node5600, NEUTRAL_REACTION);
end

procedure Node7050
begin
    Reply(7050);
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 7053, Node7100, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, 7054, Node7100, NEUTRAL_REACTION);
    end
    if (dude_gender == 0) then begin
        giq_option(4, NAME, 7051, Node999, NEUTRAL_REACTION);
    end
    if (dude_gender == 1) then begin
        giq_option(4, NAME, 7052, Node999, NEUTRAL_REACTION);
    end
end

procedure Node7100
begin
    Reply(7100);
    giq_option(4, NAME, 7101, Node7150, NEUTRAL_REACTION);
end

procedure Node7150
begin
    Reply(7150);
    giq_option(4, NAME, 7151, Node7200, NEUTRAL_REACTION);
end

procedure Node7200
begin
    Reply(7200);
    giq_option(4, NAME, 7201, Node7250, NEUTRAL_REACTION);
end

procedure Node7250
begin
    Reply(7250);
    giq_option(4, NAME, 7251, Node7300, NEUTRAL_REACTION);
end

procedure Node7300
begin
    Reply(7300);
    giq_option(4, NAME, 7301, Node7350, NEUTRAL_REACTION);
    giq_option(4, NAME, 7302, Node7400, NEUTRAL_REACTION);
    giq_option(4, NAME, 7303, Node7450, NEUTRAL_REACTION);
end

procedure Node7350
begin
    Reply(7350);
    giq_option(4, NAME, 7351, Node7400, NEUTRAL_REACTION);
    giq_option(4, NAME, 7352, Node7450, NEUTRAL_REACTION);
end

procedure Node7400
begin
    Reply(7400);
    giq_option(4, NAME, 7401, Node7350, NEUTRAL_REACTION);
    giq_option(4, NAME, 7402, Node7450, NEUTRAL_REACTION);
end

procedure Node7450
begin
    if (dude_gender == 0) then begin
        Reply(7450);
    end
    if (dude_gender == 1) then begin
        Reply(7451);
    end
    set_global_var(GVAR_RH_ALEXA_TOLDKILLER, 1);
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        set_global_var(GVAR_PTR_GABRIEL_REACTIONS, global_var(GVAR_PTR_GABRIEL_REACTIONS) bwor 512);
    end
    if ((dude_gender == 0) and (dude_skill(SKILL_SPEECH) > 70) and (global_var(GVAR_RH_JULIAN_DEAD) != 1)) then begin
        giq_option(6, NAME, 7452, Node7500, NEUTRAL_REACTION);
    end
    if ((dude_gender == 1) and (dude_skill(SKILL_SPEECH) > 70) and (global_var(GVAR_RH_JULIAN_DEAD) != 1)) then begin
        giq_option(6, NAME, 7453, Node7500, NEUTRAL_REACTION);
    end
    if (dude_skill(SKILL_SPEECH) >= 50) then begin
        giq_option(6, NAME, 7454, Node7550, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 7455, Node_Bridge352, NEUTRAL_REACTION);
end

procedure Node7500
begin
    if (dude_gender == 0) then begin
        Reply(7500);
    end
    if (dude_gender == 1) then begin
        Reply(7501);
    end
    if (dude_skill(SKILL_BARTER) > 90) then begin
        giq_option(4, NAME, mstr(7502) + 2000 + mstr(7503), Node7520, NEUTRAL_REACTION);
    end
    else begin
        if (dude_skill(SKILL_BARTER) >= 70) then begin
            giq_option(4, NAME, mstr(7504) + 1500 + mstr(7505), Node7520, NEUTRAL_REACTION);
        end
        else begin
            giq_option(4, NAME, mstr(7506) + 1000 + mstr(7507), Node7520, NEUTRAL_REACTION);
        end
    end
    giq_option(4, NAME, 7508, Node_Bridge352, NEUTRAL_REACTION);
    if (dude_skill(SKILL_SPEECH) >= 50) then begin
        giq_option(6, NAME, 7509, Node7550, NEUTRAL_REACTION);
    end
end

procedure Node7520
begin
    Reply(7520);
    if (dude_skill(SKILL_BARTER) > 90) then begin
        giq_option(4, NAME, 7521, Node_Bridge_PaymentHigh, NEUTRAL_REACTION);
    end
    else begin
        if (dude_skill(SKILL_BARTER) >= 70) then begin
            giq_option(4, NAME, 7521, Node_Bridge_PaymentMiddle, NEUTRAL_REACTION);
        end
        else begin
            giq_option(4, NAME, 7521, Node_Bridge_PaymentLow, NEUTRAL_REACTION);
        end
    end
    giq_option(4, NAME, 7522, Node_Bridge352, NEUTRAL_REACTION);
    if (dude_skill(SKILL_SPEECH) >= 50) then begin
        giq_option(6, NAME, mstr(7523 + (dude_gender == 1)), Node7550, NEUTRAL_REACTION);
    end
end

procedure Node7550
begin
    Reply(7550);
    if (dude_skill(SKILL_SPEECH) >= 80) then begin
        giq_option(8, NAME, 7551, Node7600, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 7552, Node998, NEUTRAL_REACTION);
end

procedure Node7600
begin
    Reply(7600);
    giq_option(4, NAME, 7601, Node7650, NEUTRAL_REACTION);
end

procedure Node7650
begin
    if (dude_gender == 0) then begin
        Reply(7650);
    end
    if (dude_gender == 1) then begin
        Reply(7651);
    end
    giq_option(4, NAME, 7652, Node7700, NEUTRAL_REACTION);
end

procedure Node7700
begin
    Reply(7700);
    giq_option(4, NAME, 7701, Node7750, NEUTRAL_REACTION);
end

procedure Node7750
begin
    Reply(7750);
    giq_option(4, NAME, 7751, Node_Bridge_Alexa_Suicide, NEUTRAL_REACTION);
end

procedure Alexa_Barter
begin
    move_obj_inven_to_obj(alexa_obj, table_swap);
    move_obj_inven_to_obj(alexa_table_trade, alexa_obj);
    if (has_trait(TRAIT_TRAIT, dude_obj, TRAIT_drug_addict)) then begin
        Barter_modificator := 2;
    end
    else begin
        Barter_modificator := 1;
    end
    if ((global_var(GVAR_RH_Q_ALEXA_QUEST3) == 8) and (Barter_skip == 0)) then begin
        if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
            gdialog_mod_barter(10 - (10 * Barter_modificator) - 15);
        end
        else begin
            gdialog_mod_barter(10 - (10 * Barter_modificator));
        end
        Barter_skip := 1;
    end
    if ((global_var(GVAR_RH_Q_ALEXA_QUEST2) == 8) and (Barter_skip == 0)) then begin
        if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
            gdialog_mod_barter(15 - (10 * Barter_modificator) - 15);
        end
        else begin
            gdialog_mod_barter(15 - (10 * Barter_modificator));
        end
        Barter_skip := 1;
    end
    if ((global_var(GVAR_RH_Q_ALEXA_QUEST1) == 8) and (Barter_skip == 0)) then begin
        if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
            gdialog_mod_barter(20 - (10 * Barter_modificator) - 15);
        end
        else begin
            gdialog_mod_barter(20 - (10 * Barter_modificator));
        end
        Barter_skip := 1;
    end
    if (Barter_skip == 0) then begin
        if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
            gdialog_mod_barter(25 - (10 * Barter_modificator) - 15);
        end
        else begin
            gdialog_mod_barter(25 - (10 * Barter_modificator));
        end
        Barter_skip := 1;
    end
    Barter_skip := 0;
    call Node1300();
end

procedure Node_Bridge1
begin
    restock_obj := create_object(53, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    item_caps_adjust(dude_obj, -25);
    call Node1300();
end

procedure Node_Bridge2
begin
    restock_obj := create_object(556, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    item_caps_adjust(dude_obj, -10);
    call Node1300();
end

procedure Node_Bridge3
begin
    restock_obj := create_object(87, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    item_caps_adjust(dude_obj, -50);
    call Node1300();
end

procedure Node_Bridge_QuestBAG
begin
    set_map_var(2, 1);
    call Node999();
end

procedure Node_Bridge_PaymentLow
begin
    item_caps_adjust(dude_obj, 1000);
    call Node_Bridge_Payment();
end

procedure Node_Bridge_PaymentMiddle
begin
    item_caps_adjust(dude_obj, 1500);
    call Node_Bridge_Payment();
end

procedure Node_Bridge_PaymentHigh
begin
    item_caps_adjust(dude_obj, 2000);
    call Node_Bridge_Payment();
end

procedure Node_Bridge_Payment
begin
    set_local_var(6, 1);
    set_local_var(10, 1);
    set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - 100);
    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
    set_global_var(GVAR_KARMA_DEFENDER, 0);
    set_global_var(GVAR_KARMA_WANDERER, 0);
    set_global_var(GVAR_KARMA_BETRAYER, 0);
    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
    set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
    if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
    end
    else begin
        if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                    set_global_var(GVAR_KARMA_DEFENDER, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                        set_global_var(GVAR_KARMA_WANDERER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                            set_global_var(GVAR_KARMA_BETRAYER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                end
                                else begin
                                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    call Node999();
end

procedure Node_Bridge_Alexa_Suicide
begin
    set_global_var(GVAR_RH_ALEXA_SUICIDE, 1);
    set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + 30);
    debug_msg("Player gains " + 30 + " Karma Points.");
    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
    set_global_var(GVAR_KARMA_DEFENDER, 0);
    set_global_var(GVAR_KARMA_WANDERER, 0);
    set_global_var(GVAR_KARMA_BETRAYER, 0);
    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
    set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
    if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
    end
    else begin
        if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                    set_global_var(GVAR_KARMA_DEFENDER, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                        set_global_var(GVAR_KARMA_WANDERER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                            set_global_var(GVAR_KARMA_BETRAYER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                    set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                end
                                else begin
                                    set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                end
                            end
                        end
                    end
                end
            end
        end
    end
    call Node999();
end

procedure Node_Bridge_Quest1
begin
    set_global_var(GVAR_RH_Q_ALEXA_QUEST1, 4);
    call Node999();
end

procedure Node_Bridge_Quest2
begin
    set_local_var(9, 1);
    if (global_var(GVAR_RH_Q_ALEXA_QUEST2) != 5) then begin
        set_global_var(GVAR_RH_Q_ALEXA_QUEST2, 4);
    end
    call Node999();
end

procedure Node_Bridge_Quest2_pois
begin
    restock_obj := create_object(334, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    set_map_var(3, map_var(3) bwor 16384);
    set_local_var(9, 1);
    if (global_var(GVAR_RH_Q_ALEXA_QUEST2) != 5) then begin
        set_global_var(GVAR_RH_Q_ALEXA_QUEST2, 4);
    end
    call Node999();
end

procedure Node_Bridge_Quest3
begin
    set_global_var(GVAR_RH_Q_ALEXA_QUEST3, 4);
    if ((dude_iq + has_trait(TRAIT_PERK, dude_obj, PERK_smooth_talker)) < 4) then begin
        restock_obj := create_object(110, 0, 0);
        add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    end
    else begin
        if ((dude_skill(SKILL_SMALL_GUNS) > 80) and (dude_perception <= 7) and (get_critter_stat(dude_obj, STAT_ag) <= 9)) then begin
            restock_obj := create_object(53, 0, 0);
            add_mult_objs_to_inven(dude_obj, restock_obj, 1);
        end
        else begin
            restock_obj := create_object(87, 0, 0);
            add_mult_objs_to_inven(dude_obj, restock_obj, 1);
        end
    end
    call Node999();
end

procedure Node_Bridge_Quest3_Declined
begin
    set_global_var(GVAR_RH_Q_ALEXA_QUEST3, 2);
    set_local_var(8, 1);
    Waiting_time := game_time;
    call Node999();
end

procedure Node_Bridge351
begin
    float_msg(self_obj, mstr(351), FLOAT_MSG_RED);
    call Node998();
end

procedure Node_Bridge352
begin
    if (dude_gender == 0) then begin
        float_msg(self_obj, mstr(352), FLOAT_MSG_RED);
    end
    if (dude_gender == 1) then begin
        float_msg(self_obj, mstr(353), FLOAT_MSG_RED);
    end
    call Node998();
end

procedure Node_Bridge354
begin
    if (dude_gender == 0) then begin
        float_msg(self_obj, mstr(354), FLOAT_MSG_RED);
    end
    if (dude_gender == 1) then begin
        float_msg(self_obj, mstr(355), FLOAT_MSG_RED);
    end
    call Node998();
end

procedure Node_Bridge356
begin
    float_msg(self_obj, mstr(356), FLOAT_MSG_RED);
    call Node998();
end

procedure Node_Bridge357
begin
    float_msg(self_obj, mstr(357), FLOAT_MSG_RED);
    call Node998();
end

procedure Node_Bridge358
begin
    float_msg(self_obj, mstr(358), FLOAT_MSG_RED);
    call Node998();
end

procedure Generate_Guards
begin
    if ((map_var(3) bwand 1) == 0) then begin
        mleonard_guard1 := create_object_sid(16777743, 28095, 0, SCRIPT_RH_LEONM);
        anim(mleonard_guard1, 1000, 2);
        critter_add_trait(mleonard_guard1, TRAIT_OBJECT, OBJECT_TEAM_NUM, 236);
        critter_add_trait(mleonard_guard1, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_BERSERKER);
        restock_obj := create_object(6, 0, 0);
        add_mult_objs_to_inven(mleonard_guard1, restock_obj, 1);
        restock_obj := create_object(87, 0, 0);
        add_mult_objs_to_inven(mleonard_guard1, restock_obj, 1);
        restock_obj := create_object(40, 0, 0);
        add_mult_objs_to_inven(mleonard_guard1, restock_obj, 2);
        wield_obj_critter(mleonard_guard1, obj_carrying_pid_obj(mleonard_guard1, 6));
    end
    if ((map_var(3) bwand 2) == 0) then begin
        mleonard_guard2 := create_object_sid(16777743, 28693, 0, SCRIPT_RH_LEONM);
        anim(mleonard_guard2, 1000, 3);
        critter_add_trait(mleonard_guard2, TRAIT_OBJECT, OBJECT_TEAM_NUM, 236);
        critter_add_trait(mleonard_guard2, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_BERSERKER);
        restock_obj := create_object(280, 0, 0);
        add_mult_objs_to_inven(mleonard_guard2, restock_obj, 1);
        restock_obj := create_object(87, 0, 0);
        add_mult_objs_to_inven(mleonard_guard2, restock_obj, 1);
        restock_obj := create_object(40, 0, 0);
        add_mult_objs_to_inven(mleonard_guard2, restock_obj, 2);
        wield_obj_critter(mleonard_guard2, obj_carrying_pid_obj(mleonard_guard2, 280));
    end
    if ((map_var(3) bwand 4) == 0) then begin
        mleonard_guard3 := create_object_sid(16777742, 27287, 0, SCRIPT_RH_LEONM);
        anim(mleonard_guard3, 1000, 3);
        critter_add_trait(mleonard_guard3, TRAIT_OBJECT, OBJECT_TEAM_NUM, 236);
        critter_add_trait(mleonard_guard3, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_BERSERKER);
        restock_obj := create_object(8, 0, 0);
        add_mult_objs_to_inven(mleonard_guard3, restock_obj, 1);
        restock_obj := create_object(87, 0, 0);
        add_mult_objs_to_inven(mleonard_guard3, restock_obj, 1);
        restock_obj := create_object(40, 0, 0);
        add_mult_objs_to_inven(mleonard_guard3, restock_obj, 2);
        if (global_var(GVAR_RH_Q_ALEXA_QUEST1) == 8) then begin
            restock_obj := create_object(29, 0, 0);
            add_mult_objs_to_inven(mleonard_guard3, restock_obj, 1);
        end
        wield_obj_critter(mleonard_guard3, obj_carrying_pid_obj(mleonard_guard3, 8));
    end
    if ((map_var(3) bwand 8) == 0) then begin
        mleonard_guard4 := create_object_sid(16777743, 17302, 0, SCRIPT_RH_LEONM);
        anim(mleonard_guard4, 1000, 2);
        critter_add_trait(mleonard_guard4, TRAIT_OBJECT, OBJECT_TEAM_NUM, 236);
        critter_add_trait(mleonard_guard4, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_BERSERKER);
        if (global_var(GVAR_RH_Q_ALEXA_QUEST1) == 8) then begin
            restock_obj := create_object(8, 0, 0);
            add_mult_objs_to_inven(mleonard_guard4, restock_obj, 1);
            restock_obj := create_object(29, 0, 0);
            add_mult_objs_to_inven(mleonard_guard4, restock_obj, 1);
            wield_obj_critter(mleonard_guard4, obj_carrying_pid_obj(mleonard_guard4, 8));
        end
        else begin
            restock_obj := create_object(6, 0, 0);
            add_mult_objs_to_inven(mleonard_guard4, restock_obj, 1);
            wield_obj_critter(mleonard_guard4, obj_carrying_pid_obj(mleonard_guard4, 6));
        end
        restock_obj := create_object(87, 0, 0);
        add_mult_objs_to_inven(mleonard_guard4, restock_obj, 1);
        restock_obj := create_object(40, 0, 0);
        add_mult_objs_to_inven(mleonard_guard4, restock_obj, 2);
    end
    if ((map_var(3) bwand 16) == 0) then begin
        mleonard_guard5 := create_object_sid(16777742, 16305, 0, SCRIPT_RH_LEONM);
        anim(mleonard_guard5, 1000, 2);
        critter_add_trait(mleonard_guard5, TRAIT_OBJECT, OBJECT_TEAM_NUM, 236);
        critter_add_trait(mleonard_guard5, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_BERSERKER);
        restock_obj := create_object(8, 0, 0);
        add_mult_objs_to_inven(mleonard_guard5, restock_obj, 1);
        restock_obj := create_object(87, 0, 0);
        add_mult_objs_to_inven(mleonard_guard5, restock_obj, 1);
        restock_obj := create_object(40, 0, 0);
        add_mult_objs_to_inven(mleonard_guard5, restock_obj, 2);
        if (global_var(GVAR_RH_Q_ALEXA_QUEST1) == 8) then begin
            restock_obj := create_object(29, 0, 0);
            add_mult_objs_to_inven(mleonard_guard5, restock_obj, 1);
        end
        wield_obj_critter(mleonard_guard5, obj_carrying_pid_obj(mleonard_guard5, 8));
    end
    if ((map_var(3) bwand 32) == 0) then begin
        mleonard_guard6 := create_object_sid(16777743, 16309, 0, SCRIPT_RH_LEONM);
        anim(mleonard_guard6, 1000, 2);
        critter_add_trait(mleonard_guard6, TRAIT_OBJECT, OBJECT_TEAM_NUM, 236);
        critter_add_trait(mleonard_guard6, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_BERSERKER);
        if (global_var(GVAR_RH_Q_ALEXA_QUEST1) == 8) then begin
            restock_obj := create_object(8, 0, 0);
            add_mult_objs_to_inven(mleonard_guard6, restock_obj, 1);
            restock_obj := create_object(29, 0, 0);
            add_mult_objs_to_inven(mleonard_guard6, restock_obj, 1);
            wield_obj_critter(mleonard_guard6, obj_carrying_pid_obj(mleonard_guard6, 8));
        end
        else begin
            restock_obj := create_object(6, 0, 0);
            add_mult_objs_to_inven(mleonard_guard6, restock_obj, 1);
            wield_obj_critter(mleonard_guard6, obj_carrying_pid_obj(mleonard_guard6, 6));
        end
        restock_obj := create_object(87, 0, 0);
        add_mult_objs_to_inven(mleonard_guard6, restock_obj, 1);
        restock_obj := create_object(40, 0, 0);
        add_mult_objs_to_inven(mleonard_guard6, restock_obj, 2);
    end
    if ((map_var(3) bwand 64) == 0) then begin
        mleonard_guard7 := create_object_sid(16777743, 14708, 0, SCRIPT_RH_LEONM);
        anim(mleonard_guard7, 1000, 1);
        critter_add_trait(mleonard_guard7, TRAIT_OBJECT, OBJECT_TEAM_NUM, 236);
        critter_add_trait(mleonard_guard7, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_BERSERKER);
        if (global_var(GVAR_RH_Q_ALEXA_QUEST1) == 8) then begin
            restock_obj := create_object(8, 0, 0);
            add_mult_objs_to_inven(mleonard_guard7, restock_obj, 1);
            restock_obj := create_object(29, 0, 0);
            add_mult_objs_to_inven(mleonard_guard7, restock_obj, 1);
            wield_obj_critter(mleonard_guard7, obj_carrying_pid_obj(mleonard_guard7, 8));
        end
        else begin
            restock_obj := create_object(6, 0, 0);
            add_mult_objs_to_inven(mleonard_guard7, restock_obj, 1);
            wield_obj_critter(mleonard_guard7, obj_carrying_pid_obj(mleonard_guard7, 6));
        end
        restock_obj := create_object(87, 0, 0);
        add_mult_objs_to_inven(mleonard_guard7, restock_obj, 1);
        restock_obj := create_object(40, 0, 0);
        add_mult_objs_to_inven(mleonard_guard7, restock_obj, 2);
    end
    if ((map_var(3) bwand 128) == 0) then begin
        mleonard_guard8 := create_object_sid(16777742, 13309, 0, SCRIPT_RH_LEONM);
        anim(mleonard_guard8, 1000, 2);
        critter_add_trait(mleonard_guard8, TRAIT_OBJECT, OBJECT_TEAM_NUM, 236);
        critter_add_trait(mleonard_guard8, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_BERSERKER);
        restock_obj := create_object(8, 0, 0);
        add_mult_objs_to_inven(mleonard_guard8, restock_obj, 1);
        restock_obj := create_object(87, 0, 0);
        add_mult_objs_to_inven(mleonard_guard8, restock_obj, 1);
        restock_obj := create_object(40, 0, 0);
        add_mult_objs_to_inven(mleonard_guard8, restock_obj, 2);
        if (global_var(GVAR_RH_Q_ALEXA_QUEST1) == 8) then begin
            restock_obj := create_object(29, 0, 0);
            add_mult_objs_to_inven(mleonard_guard8, restock_obj, 1);
        end
        wield_obj_critter(mleonard_guard8, obj_carrying_pid_obj(mleonard_guard8, 8));
    end
    if ((map_var(3) bwand 512) == 0) then begin
        zleonard_guard1 := create_object_sid(16777744, 28702, 0, SCRIPT_RH_LEONZ);
        anim(zleonard_guard1, 1000, 2);
        critter_add_trait(zleonard_guard1, TRAIT_OBJECT, OBJECT_TEAM_NUM, 236);
        critter_add_trait(zleonard_guard1, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_BERSERKER);
        restock_obj := create_object(280, 0, 0);
        add_mult_objs_to_inven(zleonard_guard1, restock_obj, 1);
        restock_obj := create_object(87, 0, 0);
        add_mult_objs_to_inven(zleonard_guard1, restock_obj, 1);
        restock_obj := create_object(40, 0, 0);
        add_mult_objs_to_inven(zleonard_guard1, restock_obj, 2);
        wield_obj_critter(zleonard_guard1, obj_carrying_pid_obj(zleonard_guard1, 280));
    end
    if ((map_var(3) bwand 2048) == 0) then begin
        zleonard_guard3 := create_object_sid(16777744, 17515, 0, SCRIPT_RH_LEONZ);
        anim(zleonard_guard3, 1000, 2);
        critter_add_trait(zleonard_guard3, TRAIT_OBJECT, OBJECT_TEAM_NUM, 236);
        critter_add_trait(zleonard_guard3, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_BERSERKER);
        if (global_var(GVAR_RH_Q_ALEXA_QUEST1) == 8) then begin
            restock_obj := create_object(9, 0, 0);
            add_mult_objs_to_inven(zleonard_guard3, restock_obj, 1);
            restock_obj := create_object(29, 0, 0);
            add_mult_objs_to_inven(zleonard_guard3, restock_obj, 1);
            wield_obj_critter(zleonard_guard3, obj_carrying_pid_obj(zleonard_guard3, 9));
        end
        else begin
            restock_obj := create_object(4, 0, 0);
            add_mult_objs_to_inven(zleonard_guard3, restock_obj, 1);
            wield_obj_critter(zleonard_guard3, obj_carrying_pid_obj(zleonard_guard3, 4));
        end
        restock_obj := create_object(87, 0, 0);
        add_mult_objs_to_inven(zleonard_guard3, restock_obj, 1);
        restock_obj := create_object(40, 0, 0);
        add_mult_objs_to_inven(zleonard_guard3, restock_obj, 2);
    end
    if ((map_var(3) bwand 4096) == 0) then begin
        zleonard_guard4 := create_object_sid(16777744, 13897, 0, SCRIPT_RH_LEONZ);
        anim(zleonard_guard4, 1000, 2);
        critter_add_trait(zleonard_guard4, TRAIT_OBJECT, OBJECT_TEAM_NUM, 236);
        critter_add_trait(zleonard_guard4, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_BERSERKER);
        if (global_var(GVAR_RH_Q_ALEXA_QUEST1) == 8) then begin
            restock_obj := create_object(9, 0, 0);
            add_mult_objs_to_inven(zleonard_guard4, restock_obj, 1);
            restock_obj := create_object(29, 0, 0);
            add_mult_objs_to_inven(zleonard_guard4, restock_obj, 1);
            wield_obj_critter(zleonard_guard4, obj_carrying_pid_obj(zleonard_guard4, 9));
        end
        else begin
            restock_obj := create_object(280, 0, 0);
            add_mult_objs_to_inven(zleonard_guard4, restock_obj, 1);
            wield_obj_critter(zleonard_guard4, obj_carrying_pid_obj(zleonard_guard4, 280));
        end
        restock_obj := create_object(87, 0, 0);
        add_mult_objs_to_inven(zleonard_guard4, restock_obj, 1);
        restock_obj := create_object(40, 0, 0);
        add_mult_objs_to_inven(zleonard_guard4, restock_obj, 2);
    end
end

procedure Dude_Attack
begin
    move_to(dude_obj, 28498, 0);
    anim(dude_obj, 1000, 5);
    if (party_member_obj(16777729) != 0) then begin
        if (party_member_obj(16777729) != 0) then begin
            if (obj_is_visible_flag(party_member_obj(16777729))) then begin
                critter_attempt_placement(party_member_obj(16777729), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
            end
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        if (party_member_obj(16777779) != 0) then begin
            if (obj_is_visible_flag(party_member_obj(16777779))) then begin
                critter_attempt_placement(party_member_obj(16777779), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
            end
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        if (party_member_obj(16777811) != 0) then begin
            if (obj_is_visible_flag(party_member_obj(16777811))) then begin
                critter_attempt_placement(party_member_obj(16777811), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
            end
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (party_member_obj(16777812) != 0) then begin
            if (obj_is_visible_flag(party_member_obj(16777812))) then begin
                critter_attempt_placement(party_member_obj(16777812), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
            end
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        if (party_member_obj(16777814) != 0) then begin
            if (obj_is_visible_flag(party_member_obj(16777814))) then begin
                critter_attempt_placement(party_member_obj(16777814), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
            end
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (party_member_obj(16777748) != 0) then begin
            if (obj_is_visible_flag(party_member_obj(16777748))) then begin
                critter_attempt_placement(party_member_obj(16777748), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
            end
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (party_member_obj(16778017) != 0) then begin
            if (obj_is_visible_flag(party_member_obj(16778017))) then begin
                critter_attempt_placement(party_member_obj(16778017), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
            end
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (party_member_obj(16778016) != 0) then begin
            if (obj_is_visible_flag(party_member_obj(16778016))) then begin
                critter_attempt_placement(party_member_obj(16778016), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
            end
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (party_member_obj(16778049) != 0) then begin
            if (obj_is_visible_flag(party_member_obj(16778049))) then begin
                critter_attempt_placement(party_member_obj(16778049), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
            end
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (party_member_obj(16778050) != 0) then begin
            if (obj_is_visible_flag(party_member_obj(16778050))) then begin
                critter_attempt_placement(party_member_obj(16778050), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
            end
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (party_member_obj(16778051) != 0) then begin
            if (obj_is_visible_flag(party_member_obj(16778051))) then begin
                critter_attempt_placement(party_member_obj(16778051), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
            end
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (party_member_obj(16777294) != 0) then begin
            if (obj_is_visible_flag(party_member_obj(16777294))) then begin
                critter_attempt_placement(party_member_obj(16777294), tile_num_in_direction(dude_tile, (obj_get_rot(dude_obj) + 3) % 6, 2), dude_elevation);
            end
        end
    end
    if (party_member_obj(16777729) != 0) then begin
        anim(party_member_obj(16777729), 1000, 5);
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        anim(party_member_obj(16777779), 1000, 5);
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        anim(party_member_obj(16777811), 1000, 5);
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        anim(party_member_obj(16777814), 1000, 5);
    end
    if (party_member_obj(16778017) != 0) then begin
        anim(party_member_obj(16778017), 1000, 5);
    end
    if (party_member_obj(16778016) != 0) then begin
        anim(party_member_obj(16778016), 1000, 5);
    end
    if (party_member_obj(16778049) != 0) then begin
        anim(party_member_obj(16778049), 1000, 5);
    end
    if (party_member_obj(16778050) != 0) then begin
        anim(party_member_obj(16778050), 1000, 5);
    end
    if (party_member_obj(16778051) != 0) then begin
        anim(party_member_obj(16778051), 1000, 5);
    end
    if (party_member_obj(16777812) != 0) then begin
        anim(party_member_obj(16777812), 1000, 5);
    end
    game_ui_disable;
    mjulian_guard1 := create_object_sid(16777722, 29700, 0, SCRIPT_RH_JLSEV);
    anim(mjulian_guard1, 1000, 5);
    mjulian_guard2 := create_object_sid(16777722, 30700, 0, SCRIPT_RH_JLSEV);
    anim(mjulian_guard2, 1000, 5);
    zjulian_guard1 := create_object_sid(16777723, 29904, 0, SCRIPT_RH_JLSEV);
    anim(zjulian_guard1, 1000, 5);
    trevor_self := create_object_sid(16777725, 30704, 0, SCRIPT_RH_TRSEV);
    anim(trevor_self, 1000, 5);
    critter_add_trait(mjulian_guard1, TRAIT_OBJECT, OBJECT_TEAM_NUM, 0);
    critter_add_trait(mjulian_guard1, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_TOUGH_GUARD);
    critter_add_trait(mjulian_guard2, TRAIT_OBJECT, OBJECT_TEAM_NUM, 0);
    critter_add_trait(mjulian_guard2, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_TOUGH_GUARD);
    critter_add_trait(zjulian_guard1, TRAIT_OBJECT, OBJECT_TEAM_NUM, 0);
    critter_add_trait(zjulian_guard1, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_TOUGH_GUARD);
    critter_add_trait(trevor_self, TRAIT_OBJECT, OBJECT_TEAM_NUM, 0);
    critter_add_trait(trevor_self, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_TOUGH_GUARD);
    if (global_var(GVAR_RH_Q_QUEST_MARIE) == 5) then begin
        julian_self := create_object_sid(16777721, 28896, 0, SCRIPT_RH_JUSEV);
        anim(julian_self, 1000, 5);
        critter_add_trait(julian_self, TRAIT_OBJECT, OBJECT_TEAM_NUM, 0);
        critter_add_trait(julian_self, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_TOUGH_GUARD);
        restock_obj := create_object(94, 0, 0);
        add_mult_objs_to_inven(julian_self, restock_obj, 1);
        restock_obj := create_object(95, 0, 0);
        add_mult_objs_to_inven(julian_self, restock_obj, 2);
        restock_obj := create_object(40, 0, 0);
        add_mult_objs_to_inven(julian_self, restock_obj, 2);
        if (global_var(GVAR_RH_Q_JULIAN_QUEST1) == 8) then begin
            restock_obj := create_object(40, 0, 0);
            add_mult_objs_to_inven(julian_self, restock_obj, 2);
        end
        wield_obj_critter(julian_self, obj_carrying_pid_obj(julian_self, 94));
    end
    call Equip_Entrance();
    Waiting_time := game_time;
end

procedure Equip_Entrance
begin
    restock_obj := create_object(8, 0, 0);
    add_mult_objs_to_inven(mjulian_guard1, restock_obj, 1);
    restock_obj := create_object(29, 0, 0);
    add_mult_objs_to_inven(mjulian_guard1, restock_obj, 2);
    if (global_var(GVAR_RH_Q_JULIAN_QUEST1) == 8) then begin
        restock_obj := create_object(40, 0, 0);
        add_mult_objs_to_inven(mjulian_guard1, restock_obj, 2);
    end
    wield_obj_critter(mjulian_guard1, obj_carrying_pid_obj(mjulian_guard1, 8));
    restock_obj := create_object(8, 0, 0);
    add_mult_objs_to_inven(mjulian_guard2, restock_obj, 1);
    restock_obj := create_object(29, 0, 0);
    add_mult_objs_to_inven(mjulian_guard2, restock_obj, 2);
    if (global_var(GVAR_RH_Q_JULIAN_QUEST1) == 8) then begin
        restock_obj := create_object(40, 0, 0);
        add_mult_objs_to_inven(mjulian_guard2, restock_obj, 2);
    end
    wield_obj_critter(mjulian_guard2, obj_carrying_pid_obj(mjulian_guard2, 8));
    restock_obj := create_object(8, 0, 0);
    add_mult_objs_to_inven(zjulian_guard1, restock_obj, 1);
    restock_obj := create_object(29, 0, 0);
    add_mult_objs_to_inven(zjulian_guard1, restock_obj, 2);
    if (global_var(GVAR_RH_Q_JULIAN_QUEST1) == 8) then begin
        restock_obj := create_object(40, 0, 0);
        add_mult_objs_to_inven(zjulian_guard1, restock_obj, 2);
    end
    wield_obj_critter(zjulian_guard1, obj_carrying_pid_obj(zjulian_guard1, 8));
    restock_obj := create_object(94, 0, 0);
    add_mult_objs_to_inven(trevor_self, restock_obj, 1);
    restock_obj := create_object(95, 0, 0);
    add_mult_objs_to_inven(trevor_self, restock_obj, 2);
    restock_obj := create_object(40, 0, 0);
    add_mult_objs_to_inven(trevor_self, restock_obj, 2);
    if (global_var(GVAR_RH_Q_JULIAN_QUEST1) == 8) then begin
        restock_obj := create_object(40, 0, 0);
        add_mult_objs_to_inven(trevor_self, restock_obj, 1);
    end
    wield_obj_critter(trevor_self, obj_carrying_pid_obj(trevor_self, 94));
end

procedure Barter_swap
begin
    move_obj_inven_to_obj(alexa_obj, alexa_table_trade);
    move_obj_inven_to_obj(table_swap, alexa_obj);
    need_to_wield_gun := 1;
    call Alexa_Barter();
end

procedure Node999_swap
begin
    move_obj_inven_to_obj(alexa_obj, alexa_table_trade);
    move_obj_inven_to_obj(table_swap, alexa_obj);
    need_to_wield_gun := 1;
    call Node999();
end

procedure Node1200_swap
begin
    move_obj_inven_to_obj(alexa_obj, alexa_table_trade);
    move_obj_inven_to_obj(table_swap, alexa_obj);
    need_to_wield_gun := 1;
    call Node1200();
end

procedure Node5150_swap
begin
    move_obj_inven_to_obj(alexa_obj, alexa_table_trade);
    move_obj_inven_to_obj(table_swap, alexa_obj);
    need_to_wield_gun := 1;
    call Node5150();
end
