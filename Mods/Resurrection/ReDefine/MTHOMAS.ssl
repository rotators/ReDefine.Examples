variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);

variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure talk_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure map_enter_p_proc;
procedure map_exit_p_proc;
procedure timed_event_p_proc;
procedure Node998;
procedure Node999;
procedure Node500;
procedure Node550;
procedure Node600;
procedure Node650;
procedure Node660;
procedure Node700;
procedure Node750;
procedure Node800;
procedure Node850;
procedure Node900;
procedure Node950;
procedure Node1000;
procedure Node1010;
procedure Node1050;
procedure Node1100;
procedure Node1150;
procedure Node1200;
procedure Node1250;
procedure Node1300;
procedure Node1350;
procedure Node1400;
procedure Node1450;
procedure Node1500;
procedure Node1550;
procedure Node1600;
procedure Node1650;
procedure Node1700;
procedure Node1750;
procedure Node1800;
procedure Node1850;
procedure Node1900;
procedure Node1950;
procedure Node2000;
procedure Node2050;
procedure Node2100;
procedure Node2150;
procedure Node2200;
procedure Node2250;
procedure Node2300;
procedure Node2350;
procedure Node3650;
procedure Node3700;
procedure Node3750;
procedure Node3800;
procedure Node3850;
procedure Node3900;
procedure Node3950;
procedure Node4000;
procedure Node4050;
procedure Node4100;
procedure Node4110;
procedure Node4150;
procedure Node4200;
procedure Node4250;
procedure Node4300;
procedure Node4350;
procedure Node4400;
procedure Node4450;
procedure Node4500;
procedure Node4550;
procedure Node4600;
procedure Node4650;
procedure Node4700;
procedure Node4750;
procedure Node4800;
procedure Node4850;
procedure Node4860;
procedure Node4900;
procedure Node4950;
procedure Node5000;
procedure Node5050;
procedure Node5100;

variable projed_smycku;
variable fall_back;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777293) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777293)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
end

procedure critter_p_proc
begin
    if (not(fall_back) and (art_anim(obj_art_fid(self_obj)) != 20)) then begin
        fall_back := 1;
        reg_anim_func(2, self_obj);
        reg_anim_func(1, 1);
        reg_anim_animate(self_obj, 20, -1);
        reg_anim_func(3, 0);
        fall_back := 0;
    end
end

procedure pickup_p_proc
begin
end

procedure talk_p_proc
begin
    if (((local_var(6) bwand 2) != 0) and (projed_smycku == 0)) then begin
        float_msg(self_obj, mstr(random(304, 307)), FLOAT_MSG_YELLOW);
        projed_smycku := 1;
    end
    if (((dude_iq + has_trait(TRAIT_PERK, dude_obj, PERK_smooth_talker)) <= 3) and (local_var(5) == 1) and (projed_smycku == 0)) then begin
        float_msg(self_obj, mstr(random(308, 311)), FLOAT_MSG_YELLOW);
        projed_smycku := 1;
    end
    if (projed_smycku == 0) then begin
        anim(dude_obj, 1000, rotation_to_tile(dude_tile, tile_num(self_obj)));
        start_gdialog(335, self_obj, 4, -1, -1);
        gsay_start;
        if ((dude_iq + has_trait(TRAIT_PERK, dude_obj, PERK_smooth_talker)) > 3) then begin
            if (local_var(5) == 1) then begin
                call Node2100();
            end
            else begin
                if (dude_iq < 7) then begin
                    call Node500();
                end
                else begin
                    call Node1800();
                end
            end
        end
        else begin
            if (dude_gender == 0) then begin
                call Node3650();
            end
            else begin
                call Node4400();
            end
        end
        gsay_end;
        end_dialogue;
    end
    set_local_var(5, 1);
    if (not((global_var(GVAR_MC_MUTANT_CAMP_EVENTS) bwand 8) != 0)) then begin
        set_global_var(GVAR_MC_MUTANT_CAMP_EVENTS, global_var(GVAR_MC_MUTANT_CAMP_EVENTS) bwor 8);
    end
    if (global_var(GVAR_MC_SPEAKED_WITH_THOMAS) == 0) then begin
        set_global_var(GVAR_MC_SPEAKED_WITH_THOMAS, 1);
    end
    set_global_var(GVAR_PTR_KERI_REACTIONS, global_var(GVAR_PTR_KERI_REACTIONS) bwand (-1 - 1048576));
    projed_smycku := 0;
end

procedure destroy_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_global_var(GVAR_GOOD_MONSTER, global_var(GVAR_GOOD_MONSTER) + 1);
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(4) > (3 * global_var(GVAR_GOOD_MONSTER))) or (global_var(GVAR_CHAMPION_REPUTATION) == 1)) and (global_var(GVAR_CHILDKILLER_REPUTATION) == 0)) then begin
            set_global_var(GVAR_CHAMPION_REPUTATION, 1);
            set_global_var(GVAR_BERSERKER_REPUTATION, 0);
        end
        if (critter_kill_type(self_obj) == KILL_TYPE_children_kills) then begin
            if (source_obj == dude_obj) then begin
                set_global_var(GVAR_CHAMPION_REPUTATION, 0);
                set_global_var(GVAR_CHILDKILLER_REPUTATION, global_var(GVAR_CHILDKILLER_REPUTATION) + 1);
                set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -15);
                debug_msg("Player gains " + -15 + " Karma Points.");
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
                set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
                set_global_var(GVAR_KARMA_DEFENDER, 0);
                set_global_var(GVAR_KARMA_WANDERER, 0);
                set_global_var(GVAR_KARMA_BETRAYER, 0);
                set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
                set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
                if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                    set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                                set_global_var(GVAR_KARMA_DEFENDER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                    set_global_var(GVAR_KARMA_WANDERER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                        set_global_var(GVAR_KARMA_BETRAYER, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                        end
                                        else begin
                                            if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                                set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                            end
                                            else begin
                                                set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
                set_global_var(GVAR_TOWN_REP_MUTANT_CAMP, global_var(GVAR_TOWN_REP_MUTANT_CAMP) + -8);
                debug_msg("Added " + -8 + " to Town Rep");
            end
        end
        if (((global_var(GVAR_BAD_MONSTER) + global_var(GVAR_GOOD_MONSTER)) >= 25) and ((global_var(GVAR_GOOD_MONSTER) > (2 * global_var(GVAR_BAD_MONSTER))) or (global_var(GVAR_BERSERKER_REPUTATION) == 1))) then begin
            set_global_var(GVAR_BERSERKER_REPUTATION, 1);
            set_global_var(GVAR_CHAMPION_REPUTATION, 0);
        end
        set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) + -10);
        debug_msg("Player gains " + -10 + " Karma Points.");
        set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
        set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
        set_global_var(GVAR_KARMA_DEFENDER, 0);
        set_global_var(GVAR_KARMA_WANDERER, 0);
        set_global_var(GVAR_KARMA_BETRAYER, 0);
        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
        set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
        if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
        end
        else begin
            if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                    set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                        set_global_var(GVAR_KARMA_DEFENDER, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                            set_global_var(GVAR_KARMA_WANDERER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                set_global_var(GVAR_KARMA_BETRAYER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                    set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                        set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                    end
                                    else begin
                                        set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
        set_global_var(GVAR_TOWN_REP_MUTANT_CAMP, global_var(GVAR_TOWN_REP_MUTANT_CAMP) + -5);
        debug_msg("Added " + -5 + " to Town Rep");
    end
    if ((local_var(6) bwand 8) == 0) then begin
        restock_obj := create_object(309, 0, 0);
        add_mult_objs_to_inven(self_obj, restock_obj, 1);
    end
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(5) == 1) then begin
        display_mstr(150);
    end
    else begin
        display_mstr(100);
    end
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(5) == 1) then begin
        display_mstr(250);
    end
    else begin
        display_mstr(200);
    end
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 269);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_PEASANT_NO_MOVE);
    add_timer_event(self_obj, game_ticks(random(5, 8)), 1);
    if ((local_var(6) bwand 1) == 0) then begin
        set_local_var(6, local_var(6) bwor 1);
        critter_heal(self_obj, -get_critter_stat(self_obj, STAT_current_hp) + 1);
    end
end

procedure map_exit_p_proc
begin
    if (local_var(5) == 1) then begin
        kill_critter(self_obj, 20);
    end
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        if (not(combat_is_initialized)) then begin
            float_msg(self_obj, mstr(random(300, 303)), FLOAT_MSG_YELLOW);
        end
        add_timer_event(self_obj, game_ticks(random(8, 13)), 1);
    end
end

procedure Node998
begin
    set_local_var(4, 1);
end

procedure Node999
begin
end

procedure Node500
begin
    Reply(500 + (dude_gender == 1));
    giq_option(4, NAME, 502, Node550, NEUTRAL_REACTION);
end

procedure Node550
begin
    Reply(550);
    giq_option(4, NAME, 551 + (dude_gender == 1), Node600, NEUTRAL_REACTION);
    giq_option(4, NAME, 553 + (dude_gender == 1), Node1850, NEUTRAL_REACTION);
end

procedure Node600
begin
    Reply(600 + (dude_gender == 1));
    giq_option(4, NAME, 602, Node650, NEUTRAL_REACTION);
    giq_option(4, NAME, 603 + (dude_gender == 1), Node2150, NEUTRAL_REACTION);
end

procedure Node650
begin
    Reply(650);
    giq_option(4, NAME, 651, Node660, NEUTRAL_REACTION);
end

procedure Node660
begin
    Reply(660);
    if (dude_iq < 7) then begin
        giq_option(4, NAME, 661, Node700, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 661, Node1900, NEUTRAL_REACTION);
    end
    if (dude_iq < 7) then begin
        giq_option(4, NAME, 662, Node2200, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 662, Node2250, NEUTRAL_REACTION);
    end
end

procedure Node700
begin
    Reply(mstr(700) + dude_name + mstr(701 + (dude_gender == 1)));
    giq_option(4, NAME, 703, Node750, NEUTRAL_REACTION);
end

procedure Node750
begin
    Reply(750 + (dude_gender == 1));
    giq_option(4, NAME, 752, Node800, NEUTRAL_REACTION);
end

procedure Node800
begin
    Reply(800 + (dude_gender == 1));
    giq_option(4, NAME, 802, Node850, NEUTRAL_REACTION);
    giq_option(4, NAME, 803, Node2300, NEUTRAL_REACTION);
end

procedure Node850
begin
    Reply(850 + (dude_gender == 1));
    giq_option(4, NAME, 852, Node900, NEUTRAL_REACTION);
end

procedure Node900
begin
    Reply(900 + (dude_gender == 1));
    giq_option(4, NAME, 902, Node950, NEUTRAL_REACTION);
    giq_option(4, NAME, 903, Node950, NEUTRAL_REACTION);
end

procedure Node950
begin
    Reply(950 + (dude_gender == 1));
    giq_option(4, NAME, 952, Node1000, NEUTRAL_REACTION);
end

procedure Node1000
begin
    Reply(1000);
    giq_option(4, NAME, 1001, Node1010, NEUTRAL_REACTION);
end

procedure Node1010
begin
    Reply(1010);
    giq_option(4, NAME, 1011, Node1050, NEUTRAL_REACTION);
    giq_option(4, NAME, 1012, Node2350, NEUTRAL_REACTION);
end

procedure Node1050
begin
    Reply(1050);
    giq_option(4, NAME, 1051, Node1150, NEUTRAL_REACTION);
    giq_option(4, NAME, 1052 + (dude_gender == 1), Node1100, NEUTRAL_REACTION);
end

procedure Node1100
begin
    Reply(1100 + (dude_gender == 1));
    giq_option(4, NAME, 1102, Node1150, NEUTRAL_REACTION);
end

procedure Node1150
begin
    Reply(1150);
    giq_option(4, NAME, 1151 + (dude_gender == 1), Node1200, NEUTRAL_REACTION);
    giq_option(4, NAME, 1153, Node1950, NEUTRAL_REACTION);
end

procedure Node1200
begin
    Reply(1200 + (dude_gender == 1));
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0) or ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) or ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0))) then begin
        giq_option(4, NAME, 1202, Node1300, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 1202, Node1250, NEUTRAL_REACTION);
    end
end

procedure Node1250
begin
    Reply(1250);
    if (not(town_known(8))) then begin
        give_exp_points(1000);
        display_msg(g_mstr(100) + 1000 + g_mstr(101));
    end
    if (town_known(8) == MARK_STATE_UNKNOWN) then begin
        debug_msg("  mark_on_map(" + 8 + ")");
        mark_area_known(MARK_TYPE_TOWN, 8, MARK_STATE_KNOWN);
    end
    set_global_var(GVAR_MC_SPEAKED_WITH_THOMAS, 1);
    if (obj_is_carrying_obj_pid(dude_obj, 309)) then begin
        giq_option(4, NAME, 1252, Node1350, NEUTRAL_REACTION);
        giq_option(4, NAME, 1253, Node1700, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 1251, Node1750, NEUTRAL_REACTION);
    end
end

procedure Node1300
begin
    Reply(1300);
    if (not(town_known(8))) then begin
        give_exp_points(1000);
        display_msg(g_mstr(100) + 1000 + g_mstr(101));
    end
    if (town_known(8) == MARK_STATE_UNKNOWN) then begin
        debug_msg("  mark_on_map(" + 8 + ")");
        mark_area_known(MARK_TYPE_TOWN, 8, MARK_STATE_KNOWN);
    end
    set_global_var(GVAR_MC_SPEAKED_WITH_THOMAS, 1);
    if (obj_is_carrying_obj_pid(dude_obj, 309)) then begin
        giq_option(4, NAME, 1302, Node1350, NEUTRAL_REACTION);
        giq_option(4, NAME, 1303, Node1700, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 1301, Node1750, NEUTRAL_REACTION);
    end
end

procedure Node1350
begin
    Reply(1350);
    if ((local_var(6) bwand 4) == 0) then begin
        giq_option(4, NAME, 1351, Node1400, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 1352, Node1550, NEUTRAL_REACTION);
    giq_option(4, NAME, 1353, Node1600, NEUTRAL_REACTION);
    giq_option(4, NAME, 1354, Node1650, NEUTRAL_REACTION);
    giq_option(4, NAME, 1355, Node1700, NEUTRAL_REACTION);
end

procedure Node1400
begin
    Reply(1400);
    set_local_var(6, local_var(6) bwor 4);
    if ((global_var(GVAR_MC_MUTANT_CAMP_EVENTS) bwand 2) != 0) then begin
        giq_option(4, NAME, 1402, Node1500, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 1401, Node1450, NEUTRAL_REACTION);
    end
end

procedure Node1450
begin
    Reply(1450);
    giq_option(4, NAME, 1451, Node1550, NEUTRAL_REACTION);
    giq_option(4, NAME, 1452, Node1600, NEUTRAL_REACTION);
    giq_option(4, NAME, 1453, Node1650, NEUTRAL_REACTION);
    giq_option(4, NAME, 1454, Node1700, NEUTRAL_REACTION);
end

procedure Node1500
begin
    Reply(1500);
    giq_option(4, NAME, 1501, Node1550, NEUTRAL_REACTION);
    giq_option(4, NAME, 1502, Node1600, NEUTRAL_REACTION);
    giq_option(4, NAME, 1503, Node1650, NEUTRAL_REACTION);
    giq_option(4, NAME, 1504, Node1700, NEUTRAL_REACTION);
end

procedure Node1550
begin
    if (dude_gender == 0) then begin
        Reply(1550);
    end
    else begin
        Reply(1555);
    end
    if ((local_var(6) bwand 4) == 0) then begin
        giq_option(4, NAME, 1551, Node1400, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 1552, Node1600, NEUTRAL_REACTION);
    giq_option(4, NAME, 1553, Node1650, NEUTRAL_REACTION);
    giq_option(4, NAME, 1554, Node1700, NEUTRAL_REACTION);
end

procedure Node1600
begin
    Reply(1600 + (dude_gender == 1));
    if ((local_var(6) bwand 4) == 0) then begin
        giq_option(4, NAME, 1602, Node1400, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 1603, Node1550, NEUTRAL_REACTION);
    giq_option(4, NAME, 1604, Node1650, NEUTRAL_REACTION);
    giq_option(4, NAME, 1605, Node1700, NEUTRAL_REACTION);
end

procedure Node1650
begin
    Reply(1650);
    if ((local_var(6) bwand 4) == 0) then begin
        giq_option(4, NAME, 1651, Node1400, NEUTRAL_REACTION);
    end
    giq_option(4, NAME, 1652, Node1550, NEUTRAL_REACTION);
    giq_option(4, NAME, 1653, Node1600, NEUTRAL_REACTION);
    giq_option(4, NAME, 1654, Node1700, NEUTRAL_REACTION);
end

procedure Node1700
begin
    Reply(1700);
    giq_option(4, NAME, 1701, Node999, NEUTRAL_REACTION);
end

procedure Node1750
begin
    Reply(1750);
    restock_obj := create_object(309, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    set_local_var(6, local_var(6) bwor 8);
    giq_option(4, NAME, 1751, Node1350, NEUTRAL_REACTION);
    giq_option(4, NAME, 1752, Node1700, NEUTRAL_REACTION);
end

procedure Node1800
begin
    Reply(1800 + (dude_gender == 1));
    giq_option(4, NAME, 1802, Node550, NEUTRAL_REACTION);
end

procedure Node1850
begin
    Reply(1850);
    giq_option(4, NAME, 1851, Node650, NEUTRAL_REACTION);
    giq_option(4, NAME, 1852 + (dude_gender == 1), Node2150, NEUTRAL_REACTION);
end

procedure Node1900
begin
    Reply(mstr(1900) + dude_name + mstr(1901 + (dude_gender == 1)));
    giq_option(4, NAME, 1903, Node750, NEUTRAL_REACTION);
end

procedure Node1950
begin
    Reply(1950 + (dude_gender == 1));
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0) or ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) or ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0))) then begin
        giq_option(4, NAME, 1952, Node2050, NEUTRAL_REACTION);
    end
    else begin
        giq_option(4, NAME, 1952, Node2000, NEUTRAL_REACTION);
    end
end

procedure Node2000
begin
    Reply(2000);
    set_local_var(6, local_var(6) bwor 2);
    if (not(town_known(8))) then begin
        give_exp_points(1000);
        display_msg(g_mstr(100) + 1000 + g_mstr(101));
    end
    if (town_known(8) == MARK_STATE_UNKNOWN) then begin
        debug_msg("  mark_on_map(" + 8 + ")");
        mark_area_known(MARK_TYPE_TOWN, 8, MARK_STATE_KNOWN);
    end
    set_global_var(GVAR_MC_SPEAKED_WITH_THOMAS, 1);
    giq_option(4, NAME, 2001, Node998, NEUTRAL_REACTION);
    giq_option(4, NAME, 2002, Node999, NEUTRAL_REACTION);
end

procedure Node2050
begin
    Reply(2050);
    set_local_var(6, local_var(6) bwor 2);
    if (not(town_known(8))) then begin
        give_exp_points(1000);
        display_msg(g_mstr(100) + 1000 + g_mstr(101));
    end
    if (town_known(8) == MARK_STATE_UNKNOWN) then begin
        debug_msg("  mark_on_map(" + 8 + ")");
        mark_area_known(MARK_TYPE_TOWN, 8, MARK_STATE_KNOWN);
    end
    set_global_var(GVAR_MC_SPEAKED_WITH_THOMAS, 1);
    giq_option(4, NAME, 2051, Node998, NEUTRAL_REACTION);
    giq_option(4, NAME, 2052, Node999, NEUTRAL_REACTION);
end

procedure Node2100
begin
    Reply(2100 + (dude_gender == 1));
    giq_option(4, NAME, 2102, Node1350, NEUTRAL_REACTION);
    giq_option(4, NAME, 2103, Node999, NEUTRAL_REACTION);
end

procedure Node2150
begin
    Reply(2150);
    giq_option(4, NAME, 2151, Node660, NEUTRAL_REACTION);
end

procedure Node2200
begin
    Reply(mstr(2200) + dude_name + mstr(2201 + (dude_gender == 1)));
    giq_option(4, NAME, 2203, Node750, NEUTRAL_REACTION);
end

procedure Node2250
begin
    Reply(mstr(2250) + dude_name + mstr(2251 + (dude_gender == 1)));
    giq_option(4, NAME, 2253, Node750, NEUTRAL_REACTION);
end

procedure Node2300
begin
    Reply(2300 + (dude_gender == 1));
    giq_option(4, NAME, 2302, Node900, NEUTRAL_REACTION);
end

procedure Node2350
begin
    Reply(2350);
    giq_option(4, NAME, 2351, Node1150, NEUTRAL_REACTION);
    giq_option(4, NAME, 2352 + (dude_gender == 1), Node1100, NEUTRAL_REACTION);
end

procedure Node3650
begin
    Reply(3650);
    giq_option(-3, NAME, 3651, Node3700, NEUTRAL_REACTION);
end

procedure Node3700
begin
    Reply(3700);
    giq_option(-3, NAME, 3701, Node3750, NEUTRAL_REACTION);
end

procedure Node3750
begin
    Reply(3750);
    giq_option(-3, NAME, 3751, Node3800, NEUTRAL_REACTION);
end

procedure Node3800
begin
    Reply(3800);
    giq_option(-3, NAME, 3801, Node3850, NEUTRAL_REACTION);
end

procedure Node3850
begin
    Reply(dude_name + mstr(3851));
    giq_option(-3, NAME, 3852, Node3900, NEUTRAL_REACTION);
end

procedure Node3900
begin
    Reply(3900);
    giq_option(-3, NAME, 3901, Node3950, NEUTRAL_REACTION);
end

procedure Node3950
begin
    Reply(3950);
    giq_option(-3, NAME, 3951, Node4000, NEUTRAL_REACTION);
end

procedure Node4000
begin
    Reply(4000);
    giq_option(-3, NAME, 4001, Node4050, NEUTRAL_REACTION);
end

procedure Node4050
begin
    Reply(4050);
    giq_option(-3, NAME, 4051, Node4100, NEUTRAL_REACTION);
end

procedure Node4100
begin
    Reply(4100);
    giq_option(-3, NAME, 4101, Node4110, NEUTRAL_REACTION);
end

procedure Node4110
begin
    Reply(4110);
    giq_option(-3, NAME, 4111, Node4150, NEUTRAL_REACTION);
end

procedure Node4150
begin
    Reply(4150);
    giq_option(-3, NAME, dude_name + mstr(4151), Node4200, NEUTRAL_REACTION);
end

procedure Node4200
begin
    Reply(4200);
    giq_option(-3, NAME, 4201, Node4250, NEUTRAL_REACTION);
end

procedure Node4250
begin
    Reply(4250);
    if (not(town_known(8))) then begin
        give_exp_points(1000);
        display_msg(g_mstr(100) + 1000 + g_mstr(101));
    end
    if (town_known(8) == MARK_STATE_UNKNOWN) then begin
        debug_msg("  mark_on_map(" + 8 + ")");
        mark_area_known(MARK_TYPE_TOWN, 8, MARK_STATE_KNOWN);
    end
    set_global_var(GVAR_MC_SPEAKED_WITH_THOMAS, 1);
    if (obj_is_carrying_obj_pid(dude_obj, 309)) then begin
        giq_option(-3, NAME, 4252, Node4300, NEUTRAL_REACTION);
    end
    else begin
        giq_option(-3, NAME, 4251, Node4350, NEUTRAL_REACTION);
    end
end

procedure Node4300
begin
    Reply(4300);
    giq_option(-3, NAME, 4301, Node999, NEUTRAL_REACTION);
end

procedure Node4350
begin
    Reply(4350);
    restock_obj := create_object(309, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    set_local_var(6, local_var(6) bwor 8);
    giq_option(-3, NAME, 4351, Node4300, NEUTRAL_REACTION);
end

procedure Node4400
begin
    Reply(4400);
    giq_option(-3, NAME, 4401, Node4450, NEUTRAL_REACTION);
end

procedure Node4450
begin
    Reply(4450);
    giq_option(-3, NAME, 4451, Node4500, NEUTRAL_REACTION);
end

procedure Node4500
begin
    Reply(4500);
    giq_option(-3, NAME, 4501, Node4550, NEUTRAL_REACTION);
end

procedure Node4550
begin
    Reply(4550);
    giq_option(-3, NAME, 4551, Node4600, NEUTRAL_REACTION);
end

procedure Node4600
begin
    Reply(dude_name + mstr(4601));
    giq_option(-3, NAME, 4602, Node4650, NEUTRAL_REACTION);
end

procedure Node4650
begin
    Reply(4650);
    giq_option(-3, NAME, 4651, Node4700, NEUTRAL_REACTION);
end

procedure Node4700
begin
    Reply(4700);
    giq_option(-3, NAME, 4701, Node4750, NEUTRAL_REACTION);
end

procedure Node4750
begin
    Reply(4750);
    giq_option(-3, NAME, 4751, Node4800, NEUTRAL_REACTION);
end

procedure Node4800
begin
    Reply(4800);
    giq_option(-3, NAME, 4801, Node4850, NEUTRAL_REACTION);
end

procedure Node4850
begin
    Reply(4850);
    giq_option(-3, NAME, 4851, Node4860, NEUTRAL_REACTION);
end

procedure Node4860
begin
    Reply(4860);
    giq_option(-3, NAME, 4861, Node4900, NEUTRAL_REACTION);
end

procedure Node4900
begin
    Reply(4900);
    giq_option(-3, NAME, dude_name + mstr(4901), Node4950, NEUTRAL_REACTION);
end

procedure Node4950
begin
    Reply(4950);
    giq_option(-3, NAME, 4951, Node5000, NEUTRAL_REACTION);
end

procedure Node5000
begin
    Reply(5000);
    if (not(town_known(8))) then begin
        give_exp_points(1000);
        display_msg(g_mstr(100) + 1000 + g_mstr(101));
    end
    if (town_known(8) == MARK_STATE_UNKNOWN) then begin
        debug_msg("  mark_on_map(" + 8 + ")");
        mark_area_known(MARK_TYPE_TOWN, 8, MARK_STATE_KNOWN);
    end
    set_global_var(GVAR_MC_SPEAKED_WITH_THOMAS, 1);
    if (obj_is_carrying_obj_pid(dude_obj, 309)) then begin
        giq_option(-3, NAME, 5002, Node5050, NEUTRAL_REACTION);
    end
    else begin
        giq_option(-3, NAME, 5001, Node5100, NEUTRAL_REACTION);
    end
end

procedure Node5050
begin
    Reply(5050);
    giq_option(-3, NAME, 5051, Node999, NEUTRAL_REACTION);
end

procedure Node5100
begin
    Reply(5100);
    restock_obj := create_object(309, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    set_local_var(6, local_var(6) bwor 8);
    giq_option(-3, NAME, 5101, Node5050, NEUTRAL_REACTION);
end
