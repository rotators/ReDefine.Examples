variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure map_exit_p_proc;
procedure map_enter_p_proc;
procedure map_update_p_proc;

export variable staple_shelf_trade;
export variable staple_shelf_swap;
export variable stapleton;
export variable rene;
export variable rene_room_door;
export variable ivet;
export variable Chuva;
export variable ivet_door;
export variable staple_door;

variable temp_critter;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777294) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777294)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
end

procedure map_exit_p_proc
begin
    if ((map_var(7) == 1) and tile_contains_obj_pid(map_var(11), 0, 16777815)) then begin
        temp_critter := tile_contains_pid_obj(map_var(11), 0, 16777815);
        if (obj_carrying_pid_obj(temp_critter, 559)) then begin
            set_global_var(GVAR_QUEST_A_DAVID_KIDNAP_COMPLICITY, 10);
            set_map_var(7, 2);
            set_global_var(GVAR_PLAYER_REPUTATION, global_var(GVAR_PLAYER_REPUTATION) - 5);
            set_global_var(GVAR_KARMA_HOLY_WARRIOR, 0);
            set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 0);
            set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 0);
            set_global_var(GVAR_KARMA_DEFENDER, 0);
            set_global_var(GVAR_KARMA_WANDERER, 0);
            set_global_var(GVAR_KARMA_BETRAYER, 0);
            set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 0);
            set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 0);
            set_global_var(GVAR_KARMA_DEMON_SPAWN, 0);
            if (global_var(GVAR_PLAYER_REPUTATION) >= 1000) then begin
                set_global_var(GVAR_KARMA_HOLY_WARRIOR, 1);
            end
            else begin
                if (global_var(GVAR_PLAYER_REPUTATION) >= 750) then begin
                    set_global_var(GVAR_KARMA_GUARDIAN_OF_THE_WASTES, 1);
                end
                else begin
                    if (global_var(GVAR_PLAYER_REPUTATION) >= 500) then begin
                        set_global_var(GVAR_KARMA_SHIELD_OF_HOPE, 1);
                    end
                    else begin
                        if (global_var(GVAR_PLAYER_REPUTATION) >= 250) then begin
                            set_global_var(GVAR_KARMA_DEFENDER, 1);
                        end
                        else begin
                            if (global_var(GVAR_PLAYER_REPUTATION) > -250) then begin
                                set_global_var(GVAR_KARMA_WANDERER, 1);
                            end
                            else begin
                                if (global_var(GVAR_PLAYER_REPUTATION) > -500) then begin
                                    set_global_var(GVAR_KARMA_BETRAYER, 1);
                                end
                                else begin
                                    if (global_var(GVAR_PLAYER_REPUTATION) > -750) then begin
                                        set_global_var(GVAR_KARMA_SWORD_OF_DESPAIR, 1);
                                    end
                                    else begin
                                        if (global_var(GVAR_PLAYER_REPUTATION) > -1000) then begin
                                            set_global_var(GVAR_KARMA_SCOURGE_OF_THE_WASTE, 1);
                                        end
                                        else begin
                                            set_global_var(GVAR_KARMA_DEMON_SPAWN, 1);
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
            give_exp_points(500);
            display_msg(g_mstr(100) + 500 + g_mstr(101));
            destroy_object(temp_critter);
        end
    end
end

procedure map_enter_p_proc
begin
    if (dude_elevation == 1) then begin
        set_light_level(60);
    end
    else begin
        if ((get_month >= 3) and (get_month < 5)) then begin
            if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                set_light_level(game_time_hour - 600 + 40);
            end
            else begin
                if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1800));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 5) and (get_month < 9)) then begin
                if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                    set_light_level(game_time_hour - 500 + 40);
                end
                else begin
                    if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1900));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((get_month >= 9) and (get_month < 11)) then begin
                    if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                        set_light_level(game_time_hour - 600 + 40);
                    end
                    else begin
                        if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                            set_light_level(100);
                        end
                        else begin
                            if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                                set_light_level(100 - (game_time_hour - 1800));
                            end
                            else begin
                                set_light_level(40);
                            end
                        end
                    end
                end
                else begin
                    if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                        set_light_level(game_time_hour - 700 + 40);
                    end
                    else begin
                        if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                            set_light_level(100);
                        end
                        else begin
                            if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                                set_light_level(100 - (game_time_hour - 1700));
                            end
                            else begin
                                set_light_level(40);
                            end
                        end
                    end
                end
            end
        end
    end
    if (not(is_loading_game) and (global_var(GVAR_SEDIT_GHOULS_KILLER) != 0)) then begin
        if (((3 * (30 * (24 * (60 * (60 * 10))))) + global_var(GVAR_SEDIT_GHOULS_KILLER)) <= game_time) then begin
            set_global_var(GVAR_SEDIT_GHOULS_KILLER, 0);
        end
        else begin
            set_global_var(GVAR_ENEMY_SEDIT, 1);
        end
    end
    if ((global_var(GVAR_QUEST_A_DAVID_KIDNAP_COMPLICITY) == 9) and (map_var(7) != 1)) then begin
        set_map_var(7, 1);
        temp_critter := create_object_sid(16777815, 22302, 0, SCRIPT_SPOLICE4);
        restock_obj := create_object(23, 0, 0);
        add_mult_objs_to_inven(temp_critter, restock_obj, 1);
        restock_obj := create_object(35, 0, 0);
        add_mult_objs_to_inven(temp_critter, restock_obj, 1);
        restock_obj := create_object(556, 0, 0);
        add_mult_objs_to_inven(temp_critter, restock_obj, 1);
        anim(temp_critter, 1000, 5);
    end
    if ((global_var(GVAR_QUEST_S_MIMI_RODRIGUES) == 1) and (global_var(GVAR_SEDIT_DEAD_GANGSTERS) == 2)) then begin
        set_global_var(GVAR_QUEST_S_MIMI_RODRIGUES, 2);
    end
    if (global_var(GVAR_QUEST_S_RODRIGUES_TYLER) >= 1) then begin
        set_map_var(2, 1);
    end
end

procedure map_update_p_proc
begin
    if (dude_elevation == 1) then begin
        set_light_level(60);
    end
    else begin
        if ((get_month >= 3) and (get_month < 5)) then begin
            if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                set_light_level(game_time_hour - 600 + 40);
            end
            else begin
                if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                    set_light_level(100);
                end
                else begin
                    if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                        set_light_level(100 - (game_time_hour - 1800));
                    end
                    else begin
                        set_light_level(40);
                    end
                end
            end
        end
        else begin
            if ((get_month >= 5) and (get_month < 9)) then begin
                if ((game_time_hour >= 500) and (game_time_hour < (500 + 100))) then begin
                    set_light_level(game_time_hour - 500 + 40);
                end
                else begin
                    if ((game_time_hour >= (500 + 100)) and (game_time_hour < 1900)) then begin
                        set_light_level(100);
                    end
                    else begin
                        if ((game_time_hour >= 1900) and (game_time_hour < (1900 + 100))) then begin
                            set_light_level(100 - (game_time_hour - 1900));
                        end
                        else begin
                            set_light_level(40);
                        end
                    end
                end
            end
            else begin
                if ((get_month >= 9) and (get_month < 11)) then begin
                    if ((game_time_hour >= 600) and (game_time_hour < (600 + 100))) then begin
                        set_light_level(game_time_hour - 600 + 40);
                    end
                    else begin
                        if ((game_time_hour >= (600 + 100)) and (game_time_hour < 1800)) then begin
                            set_light_level(100);
                        end
                        else begin
                            if ((game_time_hour >= 1800) and (game_time_hour < (1800 + 100))) then begin
                                set_light_level(100 - (game_time_hour - 1800));
                            end
                            else begin
                                set_light_level(40);
                            end
                        end
                    end
                end
                else begin
                    if ((game_time_hour >= 700) and (game_time_hour < (700 + 100))) then begin
                        set_light_level(game_time_hour - 700 + 40);
                    end
                    else begin
                        if ((game_time_hour >= (700 + 100)) and (game_time_hour < 1700)) then begin
                            set_light_level(100);
                        end
                        else begin
                            if ((game_time_hour >= 1700) and (game_time_hour < (1700 + 100))) then begin
                                set_light_level(100 - (game_time_hour - 1700));
                            end
                            else begin
                                set_light_level(40);
                            end
                        end
                    end
                end
            end
        end
    end
    if ((global_var(GVAR_QUEST_S_MIMI_RODRIGUES) == 1) and (global_var(GVAR_SEDIT_DEAD_GANGSTERS) == 2)) then begin
        set_global_var(GVAR_QUEST_S_MIMI_RODRIGUES, 2);
    end
end
