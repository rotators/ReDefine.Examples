variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable lPartyWornArmor;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);

variable Static_Reaction;
variable Evil_Critter;
variable Slavery_Tolerant := 2;
variable Karma_Perception;
variable reaction_bonus_town_rep;
variable reaction_bonus_karma;

procedure Node500;
procedure Node550;
procedure Node600;
procedure Node_Bridge_501_1;
procedure Node_Bridge_502_2;
procedure Node_Bridge_503_3;
procedure map_enter_p_proc;
procedure Node998;
procedure Node999;
procedure start;
procedure critter_p_proc;
procedure pickup_p_proc;
procedure destroy_p_proc;
procedure look_at_p_proc;
procedure description_p_proc;
procedure use_skill_on_p_proc;
procedure damage_p_proc;
procedure timed_event_p_proc;
procedure talk_p_proc;

variable counter;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777293) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777293)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778049) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778049)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778050) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778050)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778051) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778051)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure Node500
begin
    Reply(500);
    giq_option(4, NAME, 501, Node_Bridge_501_1, NEUTRAL_REACTION);
    giq_option(4, NAME, 502, Node_Bridge_502_2, NEUTRAL_REACTION);
    giq_option(4, NAME, 503, Node_Bridge_503_3, NEUTRAL_REACTION);
    giq_option(4, NAME, 504, Node999, NEUTRAL_REACTION);
end

procedure Node550
begin
    Reply(550);
    set_local_var(7, counter);
    if (local_var(7) >= 1) then begin
        set_local_var(8, game_time);
        add_timer_event(self_obj, 1, 1);
    end
    giq_option(4, NAME, 551, Node999, NEUTRAL_REACTION);
end

procedure Node600
begin
    if (dude_gender == 0) then begin
        Reply(600);
    end
    if (dude_gender == 1) then begin
        Reply(601);
    end
    giq_option(4, NAME, 602, Node999, NEUTRAL_REACTION);
end

procedure Node_Bridge_501_1
begin
    restock_obj := create_object(124, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    counter := counter + 1;
    call Node550();
end

procedure Node_Bridge_502_2
begin
    restock_obj := create_object(125, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    counter := counter + 1;
    call Node550();
end

procedure Node_Bridge_503_3
begin
    restock_obj := create_object(106, 0, 0);
    add_mult_objs_to_inven(dude_obj, restock_obj, 1);
    counter := counter + 1;
    call Node550();
end

procedure map_enter_p_proc
begin
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_TEAM_NUM, 235);
    critter_add_trait(self_obj, TRAIT_OBJECT, OBJECT_AI_PACKET, AI_STORE_OWNER);
    if (local_var(7) >= 1) then begin
        add_timer_event(self_obj, 1, 1);
    end
    counter := local_var(7);
    if (not(is_loading_game) and (global_var(GVAR_RH_JULIAN_DEAD) == 1)) then begin
        destroy_object(self_obj);
    end
end

procedure Node998
begin
    set_local_var(5, 2);
end

procedure Node999
begin
    anim(self_obj, 1000, 3);
end

procedure start
begin
end

procedure critter_p_proc
begin
    if ((local_var(5) == 2) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack(dude_obj);
    end
    if ((global_var(GVAR_RH_ENEMY_JULIAN) == 1) and obj_can_see_obj(self_obj, dude_obj)) then begin
        set_local_var(5, 1);
        attack(dude_obj);
    end
end

procedure pickup_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(5, 2);
    end
end

procedure destroy_p_proc
begin
end

procedure look_at_p_proc
begin
    script_overrides;
    if (local_var(4) == 1) then begin
        display_mstr(150);
    end
    else begin
        display_mstr(100);
    end
end

procedure description_p_proc
begin
    script_overrides;
    if (local_var(4) == 1) then begin
        display_mstr(150);
    end
    else begin
        display_mstr(100);
    end
end

procedure use_skill_on_p_proc
begin
end

procedure damage_p_proc
begin
    if (source_obj == dude_obj) then begin
        set_local_var(6, 1);
        set_global_var(GVAR_RH_ENEMY_JULIAN, 1);
    end
end

procedure timed_event_p_proc
begin
    if ((fixed_param == 1) and (local_var(7) >= 1) and not(combat_is_initialized)) then begin
        if ((game_time - local_var(8)) > (24 * (60 * (60 * 10)) * 1)) then begin
            set_local_var(7, 0);
            counter := 0;
        end
        else begin
            add_timer_event(self_obj, 1, 1);
        end
    end
end

procedure talk_p_proc
begin
    if (((dude_iq + has_trait(TRAIT_PERK, dude_obj, PERK_smooth_talker)) > 3) and ((global_var(GVAR_RH_Q_JULIAN_QUEST3) == 8) or (global_var(GVAR_RH_LEONARD_SEARCH) == 2))) then begin
        anim(dude_obj, 1000, rotation_to_tile(dude_tile, tile_num(self_obj)));
        anim(self_obj, 1000, rotation_to_tile(tile_num(self_obj), dude_tile));
        start_gdialog(1506, self_obj, 4, -1, -1);
        gsay_start;
        if (local_var(7) >= 5) then begin
            call Node600();
        end
        else begin
            call Node500();
        end
        gsay_end;
        end_dialogue;
        set_local_var(4, 1);
    end
    else begin
        float_msg(self_obj, mstr(350), FLOAT_MSG_RED);
    end
end
