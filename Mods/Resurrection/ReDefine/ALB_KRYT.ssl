variable ProtoOfItemGiven;
variable ValueOfRollCheck := 1;
variable Scenery_Creation;
variable Scenery_Creation_Hex;
variable Scenery_Creation_Count;
variable Temp_Scenery_Creation_Hex;
variable Scenery_Creation_Ptr;
variable How_Many_Party_Members_Are_Injured;
variable How_Many_Party_Members_Armed;
variable PartyHealingItem;

procedure checkPartyMembersNearDoor;

variable global_temp;
variable dest_tile;
variable step_tile;
variable in_dialog;
variable forced_node;
variable restock_amt;
variable restock_obj;
variable restock_trash;
variable removed_qty;
variable toRemove_qty;

procedure div(variable arg0, variable arg1);
procedure start;
procedure map_enter_p_proc;
procedure map_update_p_proc;
procedure map_exit_p_proc;
procedure timed_event_p_proc;

export variable Map_event;
export variable father_body;
export variable son_body;

variable zebrak1;
variable zebrak2;
variable zebrak3;
variable zebrak4;
variable zebrak5;
variable stan;
variable holodisk;


procedure checkPartyMembersNearDoor
begin
    if (party_member_obj(16777729) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777729)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777779) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 32) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777779)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777811) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 64) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777811)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777812) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777812)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777813) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777813)) <= 5) then begin
            return 1;
        end
    end
    if ((party_member_obj(16777814) != 0) and ((global_var(GVAR_PTR_PARTY_MEMBER_ACTIONS) bwand 128) == 0)) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777814)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777748) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777748)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777293) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777293)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777958) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777958)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16777957) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16777957)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778018) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778018)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778017) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778017)) <= 5) then begin
            return 1;
        end
    end
    if (party_member_obj(16778016) != 0) then begin
        if (tile_distance_objs(self_obj, party_member_obj(16778016)) <= 5) then begin
            return 1;
        end
    end
    return 0;
end

procedure div(variable arg0, variable arg1)
begin
    if (0 > arg0) then begin
        return -(-arg0 / arg1);
    end
    return arg0 / arg1;
end

procedure start
begin
    Map_event := self_obj;
end

procedure map_enter_p_proc
begin
    set_light_level(50);
    if (not(is_loading_game)) then begin
        if (not((global_var(GVAR_AQE_DIRECTIONS_SETUP) bwand 8) != 0)) then begin
            set_global_var(GVAR_AQE_DIRECTIONS_SETUP, global_var(GVAR_AQE_DIRECTIONS_SETUP) bwor 8);
        end
        if (map_var(0) == 0) then begin
            display_mstr(100);
            set_map_var(0, 1);
            set_map_var(1, game_time);
            add_timer_event(self_obj, 5, 1);
        end
        if ((map_var(0) == 1) and ((game_time - map_var(1)) > (60 * (60 * 10) * 26))) then begin
            stan := create_object_sid(16777970, 18508, 1, SCRIPT_ASTAN);
            zebrak1 := create_object_sid(16777969, 17105, 1, SCRIPT_AUBOZAK2);
            zebrak2 := create_object_sid(16777971, 17309, 1, SCRIPT_AUBOZAK2);
            zebrak3 := create_object_sid(16777968, 14903, 1, SCRIPT_AUBOZAK2);
            zebrak4 := create_object_sid(16777967, 15698, 1, SCRIPT_AUBOZAK2);
            zebrak5 := create_object_sid(16777972, 13697, 1, SCRIPT_AUBOZAK2);
            add_timer_event(self_obj, 5, 2);
            anim(stan, 1000, 2);
            anim(zebrak1, 1000, 3);
            anim(zebrak2, 1000, 0);
            anim(zebrak3, 1000, 4);
            anim(zebrak4, 1000, 2);
            anim(zebrak5, 1000, 5);
            set_map_var(0, 2);
            set_map_var(1, 0);
        end
    end
end

procedure map_update_p_proc
begin
    set_light_level(50);
    if ((dude_elevation == 1) and (map_var(0) == 1)) then begin
        if (map_var(3) == 0) then begin
            if (dude_gender == 0) then begin
                display_mstr(101);
            end
            if (dude_gender == 1) then begin
                display_mstr(102);
            end
            give_exp_points(600);
            display_msg(g_mstr(100) + 600 + g_mstr(101));
            set_map_var(3, 1);
        end
    end
end

procedure map_exit_p_proc
begin
end

procedure timed_event_p_proc
begin
    if (fixed_param == 1) then begin
        holodisk := create_object_sid(581, 0, 0, SCRIPT_ASHEHOLO);
        add_obj_to_inven(father_body, holodisk);
    end
    if (fixed_param == 2) then begin
        destroy_object(father_body);
        destroy_object(son_body);
    end
end
